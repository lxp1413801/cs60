

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Sep 12 00:39:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           ; Version 1.41
   114                           ; Generated 25/01/2017 GMT
   115                           ; 
   116                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F86J93 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK0
   149  002886                     __pidataBANK0:
   150                           	opt stack 0
   151                           
   152                           ;initializer for ui_disp_start_cs600@F7583
   153  002886  2D                 	db	45
   154  002887  30                 	db	48
   155  002888  30                 	db	48
   156  002889  2D                 	db	45
   157  00288A  00                 	db	0
   158  00288B  00                 	db	0
   159                           
   160                           ;initializer for _fpSysData
   161  00288C  00                 	db	0
   162  00288D  F4                 	db	244
   163  00288E  00                 	db	0
   164                           
   165                           ;initializer for _defalutRtc
   166  00288F  17                 	db	23
   167  002890  07                 	db	7
   168  002891  31                 	db	49
   169  002892  23                 	db	35
   170  002893  55                 	db	85
   171  002894  55                 	db	85
   172  002895  02                 	db	2
   173                           
   174                           	psect	mediumconst
   175  00FCBA                     __pmediumconst:
   176                           	opt stack 0
   177  00FCBA  00                 	db	0
   178  00FCBB                     _auchCRCLo:
   179                           	opt stack 0
   180  00FCBB  00                 	db	0
   181  00FCBC  C0                 	db	192
   182  00FCBD  C1                 	db	193
   183  00FCBE  01                 	db	1
   184  00FCBF  C3                 	db	195
   185  00FCC0  03                 	db	3
   186  00FCC1  02                 	db	2
   187  00FCC2  C2                 	db	194
   188  00FCC3  C6                 	db	198
   189  00FCC4  06                 	db	6
   190  00FCC5  07                 	db	7
   191  00FCC6  C7                 	db	199
   192  00FCC7  05                 	db	5
   193  00FCC8  C5                 	db	197
   194  00FCC9  C4                 	db	196
   195  00FCCA  04                 	db	4
   196  00FCCB  CC                 	db	204
   197  00FCCC  0C                 	db	12
   198  00FCCD  0D                 	db	13
   199  00FCCE  CD                 	db	205
   200  00FCCF  0F                 	db	15
   201  00FCD0  CF                 	db	207
   202  00FCD1  CE                 	db	206
   203  00FCD2  0E                 	db	14
   204  00FCD3  0A                 	db	10
   205  00FCD4  CA                 	db	202
   206  00FCD5  CB                 	db	203
   207  00FCD6  0B                 	db	11
   208  00FCD7  C9                 	db	201
   209  00FCD8  09                 	db	9
   210  00FCD9  08                 	db	8
   211  00FCDA  C8                 	db	200
   212  00FCDB  D8                 	db	216
   213  00FCDC  18                 	db	24
   214  00FCDD  19                 	db	25
   215  00FCDE  D9                 	db	217
   216  00FCDF  1B                 	db	27
   217  00FCE0  DB                 	db	219
   218  00FCE1  DA                 	db	218
   219  00FCE2  1A                 	db	26
   220  00FCE3  1E                 	db	30
   221  00FCE4  DE                 	db	222
   222  00FCE5  DF                 	db	223
   223  00FCE6  1F                 	db	31
   224  00FCE7  DD                 	db	221
   225  00FCE8  1D                 	db	29
   226  00FCE9  1C                 	db	28
   227  00FCEA  DC                 	db	220
   228  00FCEB  14                 	db	20
   229  00FCEC  D4                 	db	212
   230  00FCED  D5                 	db	213
   231  00FCEE  15                 	db	21
   232  00FCEF  D7                 	db	215
   233  00FCF0  17                 	db	23
   234  00FCF1  16                 	db	22
   235  00FCF2  D6                 	db	214
   236  00FCF3  D2                 	db	210
   237  00FCF4  12                 	db	18
   238  00FCF5  13                 	db	19
   239  00FCF6  D3                 	db	211
   240  00FCF7  11                 	db	17
   241  00FCF8  D1                 	db	209
   242  00FCF9  D0                 	db	208
   243  00FCFA  10                 	db	16
   244  00FCFB  F0                 	db	240
   245  00FCFC  30                 	db	48
   246  00FCFD  31                 	db	49
   247  00FCFE  F1                 	db	241
   248  00FCFF  33                 	db	51
   249  00FD00  F3                 	db	243
   250  00FD01  F2                 	db	242
   251  00FD02  32                 	db	50
   252  00FD03  36                 	db	54
   253  00FD04  F6                 	db	246
   254  00FD05  F7                 	db	247
   255  00FD06  37                 	db	55
   256  00FD07  F5                 	db	245
   257  00FD08  35                 	db	53
   258  00FD09  34                 	db	52
   259  00FD0A  F4                 	db	244
   260  00FD0B  3C                 	db	60
   261  00FD0C  FC                 	db	252
   262  00FD0D  FD                 	db	253
   263  00FD0E  3D                 	db	61
   264  00FD0F  FF                 	db	255
   265  00FD10  3F                 	db	63
   266  00FD11  3E                 	db	62
   267  00FD12  FE                 	db	254
   268  00FD13  FA                 	db	250
   269  00FD14  3A                 	db	58
   270  00FD15  3B                 	db	59
   271  00FD16  FB                 	db	251
   272  00FD17  39                 	db	57
   273  00FD18  F9                 	db	249
   274  00FD19  F8                 	db	248
   275  00FD1A  38                 	db	56
   276  00FD1B  28                 	db	40
   277  00FD1C  E8                 	db	232
   278  00FD1D  E9                 	db	233
   279  00FD1E  29                 	db	41
   280  00FD1F  EB                 	db	235
   281  00FD20  2B                 	db	43
   282  00FD21  2A                 	db	42
   283  00FD22  EA                 	db	234
   284  00FD23  EE                 	db	238
   285  00FD24  2E                 	db	46
   286  00FD25  2F                 	db	47
   287  00FD26  EF                 	db	239
   288  00FD27  2D                 	db	45
   289  00FD28  ED                 	db	237
   290  00FD29  EC                 	db	236
   291  00FD2A  2C                 	db	44
   292  00FD2B  E4                 	db	228
   293  00FD2C  24                 	db	36
   294  00FD2D  25                 	db	37
   295  00FD2E  E5                 	db	229
   296  00FD2F  27                 	db	39
   297  00FD30  E7                 	db	231
   298  00FD31  E6                 	db	230
   299  00FD32  26                 	db	38
   300  00FD33  22                 	db	34
   301  00FD34  E2                 	db	226
   302  00FD35  E3                 	db	227
   303  00FD36  23                 	db	35
   304  00FD37  E1                 	db	225
   305  00FD38  21                 	db	33
   306  00FD39  20                 	db	32
   307  00FD3A  E0                 	db	224
   308  00FD3B  A0                 	db	160
   309  00FD3C  60                 	db	96
   310  00FD3D  61                 	db	97
   311  00FD3E  A1                 	db	161
   312  00FD3F  63                 	db	99
   313  00FD40  A3                 	db	163
   314  00FD41  A2                 	db	162
   315  00FD42  62                 	db	98
   316  00FD43  66                 	db	102
   317  00FD44  A6                 	db	166
   318  00FD45  A7                 	db	167
   319  00FD46  67                 	db	103
   320  00FD47  A5                 	db	165
   321  00FD48  65                 	db	101
   322  00FD49  64                 	db	100
   323  00FD4A  A4                 	db	164
   324  00FD4B  6C                 	db	108
   325  00FD4C  AC                 	db	172
   326  00FD4D  AD                 	db	173
   327  00FD4E  6D                 	db	109
   328  00FD4F  AF                 	db	175
   329  00FD50  6F                 	db	111
   330  00FD51  6E                 	db	110
   331  00FD52  AE                 	db	174
   332  00FD53  AA                 	db	170
   333  00FD54  6A                 	db	106
   334  00FD55  6B                 	db	107
   335  00FD56  AB                 	db	171
   336  00FD57  69                 	db	105
   337  00FD58  A9                 	db	169
   338  00FD59  A8                 	db	168
   339  00FD5A  68                 	db	104
   340  00FD5B  78                 	db	120
   341  00FD5C  B8                 	db	184
   342  00FD5D  B9                 	db	185
   343  00FD5E  79                 	db	121
   344  00FD5F  BB                 	db	187
   345  00FD60  7B                 	db	123
   346  00FD61  7A                 	db	122
   347  00FD62  BA                 	db	186
   348  00FD63  BE                 	db	190
   349  00FD64  7E                 	db	126
   350  00FD65  7F                 	db	127
   351  00FD66  BF                 	db	191
   352  00FD67  7D                 	db	125
   353  00FD68  BD                 	db	189
   354  00FD69  BC                 	db	188
   355  00FD6A  7C                 	db	124
   356  00FD6B  B4                 	db	180
   357  00FD6C  74                 	db	116
   358  00FD6D  75                 	db	117
   359  00FD6E  B5                 	db	181
   360  00FD6F  77                 	db	119
   361  00FD70  B7                 	db	183
   362  00FD71  B6                 	db	182
   363  00FD72  76                 	db	118
   364  00FD73  72                 	db	114
   365  00FD74  B2                 	db	178
   366  00FD75  B3                 	db	179
   367  00FD76  73                 	db	115
   368  00FD77  B1                 	db	177
   369  00FD78  71                 	db	113
   370  00FD79  70                 	db	112
   371  00FD7A  B0                 	db	176
   372  00FD7B  50                 	db	80
   373  00FD7C  90                 	db	144
   374  00FD7D  91                 	db	145
   375  00FD7E  51                 	db	81
   376  00FD7F  93                 	db	147
   377  00FD80  53                 	db	83
   378  00FD81  52                 	db	82
   379  00FD82  92                 	db	146
   380  00FD83  96                 	db	150
   381  00FD84  56                 	db	86
   382  00FD85  57                 	db	87
   383  00FD86  97                 	db	151
   384  00FD87  55                 	db	85
   385  00FD88  95                 	db	149
   386  00FD89  94                 	db	148
   387  00FD8A  54                 	db	84
   388  00FD8B  9C                 	db	156
   389  00FD8C  5C                 	db	92
   390  00FD8D  5D                 	db	93
   391  00FD8E  9D                 	db	157
   392  00FD8F  5F                 	db	95
   393  00FD90  9F                 	db	159
   394  00FD91  9E                 	db	158
   395  00FD92  5E                 	db	94
   396  00FD93  5A                 	db	90
   397  00FD94  9A                 	db	154
   398  00FD95  9B                 	db	155
   399  00FD96  5B                 	db	91
   400  00FD97  99                 	db	153
   401  00FD98  59                 	db	89
   402  00FD99  58                 	db	88
   403  00FD9A  98                 	db	152
   404  00FD9B  88                 	db	136
   405  00FD9C  48                 	db	72
   406  00FD9D  49                 	db	73
   407  00FD9E  89                 	db	137
   408  00FD9F  4B                 	db	75
   409  00FDA0  8B                 	db	139
   410  00FDA1  8A                 	db	138
   411  00FDA2  4A                 	db	74
   412  00FDA3  4E                 	db	78
   413  00FDA4  8E                 	db	142
   414  00FDA5  8F                 	db	143
   415  00FDA6  4F                 	db	79
   416  00FDA7  8D                 	db	141
   417  00FDA8  4D                 	db	77
   418  00FDA9  4C                 	db	76
   419  00FDAA  8C                 	db	140
   420  00FDAB  44                 	db	68
   421  00FDAC  84                 	db	132
   422  00FDAD  85                 	db	133
   423  00FDAE  45                 	db	69
   424  00FDAF  87                 	db	135
   425  00FDB0  47                 	db	71
   426  00FDB1  46                 	db	70
   427  00FDB2  86                 	db	134
   428  00FDB3  82                 	db	130
   429  00FDB4  42                 	db	66
   430  00FDB5  43                 	db	67
   431  00FDB6  83                 	db	131
   432  00FDB7  41                 	db	65
   433  00FDB8  81                 	db	129
   434  00FDB9  80                 	db	128
   435  00FDBA  40                 	db	64
   436  00FDBB                     __end_of_auchCRCLo:
   437                           	opt stack 0
   438  00FDBB                     _auchCRCHi:
   439                           	opt stack 0
   440  00FDBB  00                 	db	0
   441  00FDBC  C1                 	db	193
   442  00FDBD  81                 	db	129
   443  00FDBE  40                 	db	64
   444  00FDBF  01                 	db	1
   445  00FDC0  C0                 	db	192
   446  00FDC1  80                 	db	128
   447  00FDC2  41                 	db	65
   448  00FDC3  01                 	db	1
   449  00FDC4  C0                 	db	192
   450  00FDC5  80                 	db	128
   451  00FDC6  41                 	db	65
   452  00FDC7  00                 	db	0
   453  00FDC8  C1                 	db	193
   454  00FDC9  81                 	db	129
   455  00FDCA  40                 	db	64
   456  00FDCB  01                 	db	1
   457  00FDCC  C0                 	db	192
   458  00FDCD  80                 	db	128
   459  00FDCE  41                 	db	65
   460  00FDCF  00                 	db	0
   461  00FDD0  C1                 	db	193
   462  00FDD1  81                 	db	129
   463  00FDD2  40                 	db	64
   464  00FDD3  00                 	db	0
   465  00FDD4  C1                 	db	193
   466  00FDD5  81                 	db	129
   467  00FDD6  40                 	db	64
   468  00FDD7  01                 	db	1
   469  00FDD8  C0                 	db	192
   470  00FDD9  80                 	db	128
   471  00FDDA  41                 	db	65
   472  00FDDB  01                 	db	1
   473  00FDDC  C0                 	db	192
   474  00FDDD  80                 	db	128
   475  00FDDE  41                 	db	65
   476  00FDDF  00                 	db	0
   477  00FDE0  C1                 	db	193
   478  00FDE1  81                 	db	129
   479  00FDE2  40                 	db	64
   480  00FDE3  00                 	db	0
   481  00FDE4  C1                 	db	193
   482  00FDE5  81                 	db	129
   483  00FDE6  40                 	db	64
   484  00FDE7  01                 	db	1
   485  00FDE8  C0                 	db	192
   486  00FDE9  80                 	db	128
   487  00FDEA  41                 	db	65
   488  00FDEB  00                 	db	0
   489  00FDEC  C1                 	db	193
   490  00FDED  81                 	db	129
   491  00FDEE  40                 	db	64
   492  00FDEF  01                 	db	1
   493  00FDF0  C0                 	db	192
   494  00FDF1  80                 	db	128
   495  00FDF2  41                 	db	65
   496  00FDF3  01                 	db	1
   497  00FDF4  C0                 	db	192
   498  00FDF5  80                 	db	128
   499  00FDF6  41                 	db	65
   500  00FDF7  00                 	db	0
   501  00FDF8  C1                 	db	193
   502  00FDF9  81                 	db	129
   503  00FDFA  40                 	db	64
   504  00FDFB  01                 	db	1
   505  00FDFC  C0                 	db	192
   506  00FDFD  80                 	db	128
   507  00FDFE  41                 	db	65
   508  00FDFF  00                 	db	0
   509  00FE00  C1                 	db	193
   510  00FE01  81                 	db	129
   511  00FE02  40                 	db	64
   512  00FE03  00                 	db	0
   513  00FE04  C1                 	db	193
   514  00FE05  81                 	db	129
   515  00FE06  40                 	db	64
   516  00FE07  01                 	db	1
   517  00FE08  C0                 	db	192
   518  00FE09  80                 	db	128
   519  00FE0A  41                 	db	65
   520  00FE0B  00                 	db	0
   521  00FE0C  C1                 	db	193
   522  00FE0D  81                 	db	129
   523  00FE0E  40                 	db	64
   524  00FE0F  01                 	db	1
   525  00FE10  C0                 	db	192
   526  00FE11  80                 	db	128
   527  00FE12  41                 	db	65
   528  00FE13  01                 	db	1
   529  00FE14  C0                 	db	192
   530  00FE15  80                 	db	128
   531  00FE16  41                 	db	65
   532  00FE17  00                 	db	0
   533  00FE18  C1                 	db	193
   534  00FE19  81                 	db	129
   535  00FE1A  40                 	db	64
   536  00FE1B  00                 	db	0
   537  00FE1C  C1                 	db	193
   538  00FE1D  81                 	db	129
   539  00FE1E  40                 	db	64
   540  00FE1F  01                 	db	1
   541  00FE20  C0                 	db	192
   542  00FE21  80                 	db	128
   543  00FE22  41                 	db	65
   544  00FE23  01                 	db	1
   545  00FE24  C0                 	db	192
   546  00FE25  80                 	db	128
   547  00FE26  41                 	db	65
   548  00FE27  00                 	db	0
   549  00FE28  C1                 	db	193
   550  00FE29  81                 	db	129
   551  00FE2A  40                 	db	64
   552  00FE2B  01                 	db	1
   553  00FE2C  C0                 	db	192
   554  00FE2D  80                 	db	128
   555  00FE2E  41                 	db	65
   556  00FE2F  00                 	db	0
   557  00FE30  C1                 	db	193
   558  00FE31  81                 	db	129
   559  00FE32  40                 	db	64
   560  00FE33  00                 	db	0
   561  00FE34  C1                 	db	193
   562  00FE35  81                 	db	129
   563  00FE36  40                 	db	64
   564  00FE37  01                 	db	1
   565  00FE38  C0                 	db	192
   566  00FE39  80                 	db	128
   567  00FE3A  41                 	db	65
   568  00FE3B  01                 	db	1
   569  00FE3C  C0                 	db	192
   570  00FE3D  80                 	db	128
   571  00FE3E  41                 	db	65
   572  00FE3F  00                 	db	0
   573  00FE40  C1                 	db	193
   574  00FE41  81                 	db	129
   575  00FE42  40                 	db	64
   576  00FE43  00                 	db	0
   577  00FE44  C1                 	db	193
   578  00FE45  81                 	db	129
   579  00FE46  40                 	db	64
   580  00FE47  01                 	db	1
   581  00FE48  C0                 	db	192
   582  00FE49  80                 	db	128
   583  00FE4A  41                 	db	65
   584  00FE4B  00                 	db	0
   585  00FE4C  C1                 	db	193
   586  00FE4D  81                 	db	129
   587  00FE4E  40                 	db	64
   588  00FE4F  01                 	db	1
   589  00FE50  C0                 	db	192
   590  00FE51  80                 	db	128
   591  00FE52  41                 	db	65
   592  00FE53  01                 	db	1
   593  00FE54  C0                 	db	192
   594  00FE55  80                 	db	128
   595  00FE56  41                 	db	65
   596  00FE57  00                 	db	0
   597  00FE58  C1                 	db	193
   598  00FE59  81                 	db	129
   599  00FE5A  40                 	db	64
   600  00FE5B  00                 	db	0
   601  00FE5C  C1                 	db	193
   602  00FE5D  81                 	db	129
   603  00FE5E  40                 	db	64
   604  00FE5F  01                 	db	1
   605  00FE60  C0                 	db	192
   606  00FE61  80                 	db	128
   607  00FE62  41                 	db	65
   608  00FE63  01                 	db	1
   609  00FE64  C0                 	db	192
   610  00FE65  80                 	db	128
   611  00FE66  41                 	db	65
   612  00FE67  00                 	db	0
   613  00FE68  C1                 	db	193
   614  00FE69  81                 	db	129
   615  00FE6A  40                 	db	64
   616  00FE6B  01                 	db	1
   617  00FE6C  C0                 	db	192
   618  00FE6D  80                 	db	128
   619  00FE6E  41                 	db	65
   620  00FE6F  00                 	db	0
   621  00FE70  C1                 	db	193
   622  00FE71  81                 	db	129
   623  00FE72  40                 	db	64
   624  00FE73  00                 	db	0
   625  00FE74  C1                 	db	193
   626  00FE75  81                 	db	129
   627  00FE76  40                 	db	64
   628  00FE77  01                 	db	1
   629  00FE78  C0                 	db	192
   630  00FE79  80                 	db	128
   631  00FE7A  41                 	db	65
   632  00FE7B  00                 	db	0
   633  00FE7C  C1                 	db	193
   634  00FE7D  81                 	db	129
   635  00FE7E  40                 	db	64
   636  00FE7F  01                 	db	1
   637  00FE80  C0                 	db	192
   638  00FE81  80                 	db	128
   639  00FE82  41                 	db	65
   640  00FE83  01                 	db	1
   641  00FE84  C0                 	db	192
   642  00FE85  80                 	db	128
   643  00FE86  41                 	db	65
   644  00FE87  00                 	db	0
   645  00FE88  C1                 	db	193
   646  00FE89  81                 	db	129
   647  00FE8A  40                 	db	64
   648  00FE8B  01                 	db	1
   649  00FE8C  C0                 	db	192
   650  00FE8D  80                 	db	128
   651  00FE8E  41                 	db	65
   652  00FE8F  00                 	db	0
   653  00FE90  C1                 	db	193
   654  00FE91  81                 	db	129
   655  00FE92  40                 	db	64
   656  00FE93  00                 	db	0
   657  00FE94  C1                 	db	193
   658  00FE95  81                 	db	129
   659  00FE96  40                 	db	64
   660  00FE97  01                 	db	1
   661  00FE98  C0                 	db	192
   662  00FE99  80                 	db	128
   663  00FE9A  41                 	db	65
   664  00FE9B  01                 	db	1
   665  00FE9C  C0                 	db	192
   666  00FE9D  80                 	db	128
   667  00FE9E  41                 	db	65
   668  00FE9F  00                 	db	0
   669  00FEA0  C1                 	db	193
   670  00FEA1  81                 	db	129
   671  00FEA2  40                 	db	64
   672  00FEA3  00                 	db	0
   673  00FEA4  C1                 	db	193
   674  00FEA5  81                 	db	129
   675  00FEA6  40                 	db	64
   676  00FEA7  01                 	db	1
   677  00FEA8  C0                 	db	192
   678  00FEA9  80                 	db	128
   679  00FEAA  41                 	db	65
   680  00FEAB  00                 	db	0
   681  00FEAC  C1                 	db	193
   682  00FEAD  81                 	db	129
   683  00FEAE  40                 	db	64
   684  00FEAF  01                 	db	1
   685  00FEB0  C0                 	db	192
   686  00FEB1  80                 	db	128
   687  00FEB2  41                 	db	65
   688  00FEB3  01                 	db	1
   689  00FEB4  C0                 	db	192
   690  00FEB5  80                 	db	128
   691  00FEB6  41                 	db	65
   692  00FEB7  00                 	db	0
   693  00FEB8  C1                 	db	193
   694  00FEB9  81                 	db	129
   695  00FEBA  40                 	db	64
   696  00FEBB                     __end_of_auchCRCHi:
   697                           	opt stack 0
   698  00FEBB                     _LCDDigitalIndexTable:
   699                           	opt stack 0
   700  00FEBB  30                 	db	48
   701  00FEBC  31                 	db	49
   702  00FEBD  32                 	db	50
   703  00FEBE  33                 	db	51
   704  00FEBF  34                 	db	52
   705  00FEC0  35                 	db	53
   706  00FEC1  36                 	db	54
   707  00FEC2  37                 	db	55
   708  00FEC3  38                 	db	56
   709  00FEC4  39                 	db	57
   710  00FEC5  61                 	db	97
   711  00FEC6  62                 	db	98
   712  00FEC7  63                 	db	99
   713  00FEC8  64                 	db	100
   714  00FEC9  65                 	db	101
   715  00FECA  66                 	db	102
   716  00FECB  67                 	db	103
   717  00FECC  68                 	db	104
   718  00FECD  69                 	db	105
   719  00FECE  6A                 	db	106
   720  00FECF  6B                 	db	107
   721  00FED0  6C                 	db	108
   722  00FED1  6D                 	db	109
   723  00FED2  6E                 	db	110
   724  00FED3  6F                 	db	111
   725  00FED4  70                 	db	112
   726  00FED5  71                 	db	113
   727  00FED6  72                 	db	114
   728  00FED7  73                 	db	115
   729  00FED8  74                 	db	116
   730  00FED9  75                 	db	117
   731  00FEDA  76                 	db	118
   732  00FEDB  77                 	db	119
   733  00FEDC  78                 	db	120
   734  00FEDD  79                 	db	121
   735  00FEDE  7A                 	db	122
   736  00FEDF  2E                 	db	46
   737  00FEE0  2D                 	db	45
   738  00FEE1  3A                 	db	58
   739  00FEE2  20                 	db	32
   740  00FEE3  00                 	db	0
   741  00FEE4                     __end_of_LCDDigitalIndexTable:
   742                           	opt stack 0
   743  00FEE4                     _LCDDigitalTable:
   744                           	opt stack 0
   745  00FEE4  3F                 	db	63
   746  00FEE5  06                 	db	6
   747  00FEE6  5B                 	db	91
   748  00FEE7  4F                 	db	79
   749  00FEE8  66                 	db	102
   750  00FEE9  6D                 	db	109
   751  00FEEA  7D                 	db	125
   752  00FEEB  07                 	db	7
   753  00FEEC  7F                 	db	127
   754  00FEED  6F                 	db	111
   755  00FEEE  77                 	db	119
   756  00FEEF  7C                 	db	124
   757  00FEF0  39                 	db	57
   758  00FEF1  5E                 	db	94
   759  00FEF2  79                 	db	121
   760  00FEF3  71                 	db	113
   761  00FEF4  6F                 	db	111
   762  00FEF5  76                 	db	118
   763  00FEF6  06                 	db	6
   764  00FEF7  0E                 	db	14
   765  00FEF8  7A                 	db	122
   766  00FEF9  38                 	db	56
   767  00FEFA  00                 	db	0
   768  00FEFB  37                 	db	55
   769  00FEFC  5C                 	db	92
   770  00FEFD  73                 	db	115
   771  00FEFE  67                 	db	103
   772  00FEFF  50                 	db	80
   773  00FF00  6D                 	db	109
   774  00FF01  78                 	db	120
   775  00FF02  3E                 	db	62
   776  00FF03  00                 	db	0
   777  00FF04  00                 	db	0
   778  00FF05  00                 	db	0
   779  00FF06  6E                 	db	110
   780  00FF07  5B                 	db	91
   781  00FF08  40                 	db	64
   782  00FF09  40                 	db	64
   783  00FF0A  48                 	db	72
   784  00FF0B  00                 	db	0
   785  00FF0C                     __end_of_LCDDigitalTable:
   786                           	opt stack 0
   787  00FF0C                     _HexTable:
   788                           	opt stack 0
   789  00FF0C  30                 	db	48
   790  00FF0D  31                 	db	49
   791  00FF0E  32                 	db	50
   792  00FF0F  33                 	db	51
   793  00FF10  34                 	db	52
   794  00FF11  35                 	db	53
   795  00FF12  36                 	db	54
   796  00FF13  37                 	db	55
   797  00FF14  38                 	db	56
   798  00FF15  39                 	db	57
   799  00FF16  61                 	db	97
   800  00FF17  62                 	db	98
   801  00FF18  63                 	db	99
   802  00FF19  64                 	db	100
   803  00FF1A  65                 	db	101
   804  00FF1B  66                 	db	102
   805  00FF1C  00                 	db	0
   806  00FF1D                     __end_of_HexTable:
   807                           	opt stack 0
   808  00FF1D                     _defultSystemData:
   809                           	opt stack 0
   810  00FF1D  0000               	dw	0
   811  00FF1F  0000               	dw	0
   812  00FF21  00                 	db	0
   813  00FF22  5F                 	db	95
   814  00FF23  03E8               	dw	1000
   815  00FF25  2710               	dw	10000
   816  00FF27  0000               	dw	0
   817  00FF29  1388               	dw	5000
   818  00FF2B  0000               	dw	0
   819  00FF2D  FF38               	dw	65336
   820  00FF2F  FFFF               	dw	65535
   821  00FF31  0000               	dw	0
   822  00FF33  0000               	dw	0
   823  00FF35  00                 	db	0
   824  00FF36  00                 	db	0
   825  00FF37  00                 	db	0
   826  00FF38  00                 	db	0
   827  00FF39  00                 	db	0
   828  00FF3A  00                 	db	0
   829  00FF3B  00                 	db	0
   830  00FF3C  00                 	db	0
   831  00FF3D  00                 	db	0
   832  00FF3E  00                 	db	0
   833  00FF3F  00                 	db	0
   834  00FF40  00                 	db	0
   835  00FF41  00                 	db	0
   836  00FF42  00                 	db	0
   837  00FF43  00                 	db	0
   838  00FF44  00                 	db	0
   839  00FF45  00                 	db	0
   840  00FF46  00                 	db	0
   841  00FF47  00                 	db	0
   842  00FF48  00                 	db	0
   843  00FF49  00                 	db	0
   844  00FF4A  00                 	db	0
   845  00FF4B  00                 	db	0
   846  00FF4C  00                 	db	0
   847  00FF4D  00                 	db	0
   848  00FF4E  00                 	db	0
   849  00FF4F  00                 	db	0
   850  00FF50  00                 	db	0
   851  00FF51  00                 	db	0
   852  00FF52  00                 	db	0
   853  00FF53  00                 	db	0
   854  00FF54  00                 	db	0
   855  00FF55  00                 	db	0
   856  00FF56  00                 	db	0
   857  00FF57  00                 	db	0
   858  00FF58  00                 	db	0
   859  00FF59  00                 	db	0
   860  00FF5A  00                 	db	0
   861  00FF5B  00                 	db	0
   862  00FF5C  00                 	db	0
   863  00FF5D  00                 	db	0
   864  00FF5E  00                 	db	0
   865  00FF5F  00                 	db	0
   866  00FF60  00                 	db	0
   867  00FF61  0000               	dw	0
   868  00FF63  0000               	dw	0
   869  00FF65  00                 	db	0
   870  00FF66  00                 	db	0
   871  00FF67  00                 	db	0
   872  00FF68  00                 	db	0
   873  00FF69  00                 	db	0
   874  00FF6A  00                 	db	0
   875  00FF6B  00                 	db	0
   876  00FF6C  00                 	db	0
   877  00FF6D  28                 	db	40
   878  00FF6E  1E                 	db	30
   879  00FF6F  14                 	db	20
   880  00FF70  0A                 	db	10
   881  00FF71  0000               	dw	0
   882  00FF73  0000               	dw	0
   883  00FF75  00                 	db	0
   884  00FF76  00                 	db	0
   885  00FF77  00                 	db	0
   886  00FF78  00                 	db	0
   887  00FF79  03E8               	dw	1000
   888  00FF7B  0000               	dw	0
   889  00FF7D  03E8               	dw	1000
   890  00FF7F  0000               	dw	0
   891  00FF81  0000               	dw	0
   892  00FF83  0000               	dw	0
   893  00FF85  00                 	db	0
   894  00FF86  00                 	db	0
   895  00FF87  00                 	db	0
   896  00FF88  00                 	db	0
   897  00FF89  03E8               	dw	1000
   898  00FF8B  0000               	dw	0
   899  00FF8D  03E8               	dw	1000
   900  00FF8F  0000               	dw	0
   901  00FF91  0000               	dw	0
   902  00FF93  0000               	dw	0
   903  00FF95  03E8               	dw	1000
   904  00FF97  0000               	dw	0
   905  00FF99  0000               	dw	0
   906  00FF9B  0000               	dw	0
   907  00FF9D  03E8               	dw	1000
   908  00FF9F  0000               	dw	0
   909  00FFA1  0000               	dw	0
   910  00FFA3                     __end_of_defultSystemData:
   911                           	opt stack 0
   912  00FFA3                     _flashTestbuf:
   913                           	opt stack 0
   914  00FFA3  30                 	db	48
   915  00FFA4  31                 	db	49
   916  00FFA5  32                 	db	50
   917  00FFA6  33                 	db	51
   918  00FFA7  34                 	db	52
   919  00FFA8  35                 	db	53
   920  00FFA9  36                 	db	54
   921  00FFAA  37                 	db	55
   922  00FFAB  38                 	db	56
   923  00FFAC  39                 	db	57
   924  00FFAD  30                 	db	48
   925  00FFAE  31                 	db	49
   926  00FFAF  32                 	db	50
   927  00FFB0  33                 	db	51
   928  00FFB1  34                 	db	52
   929  00FFB2  35                 	db	53
   930  00FFB3  36                 	db	54
   931  00FFB4  37                 	db	55
   932  00FFB5  38                 	db	56
   933  00FFB6  39                 	db	57
   934  00FFB7  30                 	db	48
   935  00FFB8  31                 	db	49
   936  00FFB9  32                 	db	50
   937  00FFBA  33                 	db	51
   938  00FFBB  34                 	db	52
   939  00FFBC  35                 	db	53
   940  00FFBD  36                 	db	54
   941  00FFBE  37                 	db	55
   942  00FFBF  38                 	db	56
   943  00FFC0  39                 	db	57
   944  00FFC1  30                 	db	48
   945  00FFC2  31                 	db	49
   946  00FFC3  32                 	db	50
   947  00FFC4  33                 	db	51
   948  00FFC5  34                 	db	52
   949  00FFC6  35                 	db	53
   950  00FFC7  36                 	db	54
   951  00FFC8  37                 	db	55
   952  00FFC9  38                 	db	56
   953  00FFCA  39                 	db	57
   954  00FFCB  30                 	db	48
   955  00FFCC  31                 	db	49
   956  00FFCD  32                 	db	50
   957  00FFCE  33                 	db	51
   958  00FFCF  34                 	db	52
   959  00FFD0  35                 	db	53
   960  00FFD1  36                 	db	54
   961  00FFD2  37                 	db	55
   962  00FFD3  38                 	db	56
   963  00FFD4  39                 	db	57
   964  00FFD5  30                 	db	48
   965  00FFD6  31                 	db	49
   966  00FFD7  32                 	db	50
   967  00FFD8  33                 	db	51
   968  00FFD9  34                 	db	52
   969  00FFDA  35                 	db	53
   970  00FFDB  36                 	db	54
   971  00FFDC  37                 	db	55
   972  00FFDD  38                 	db	56
   973  00FFDE  39                 	db	57
   974  00FFDF  30                 	db	48
   975  00FFE0  31                 	db	49
   976  00FFE1  32                 	db	50
   977  00FFE2  33                 	db	51
   978  00FFE3  00                 	db	0
   979  00FFE4                     __end_of_flashTestbuf:
   980                           	opt stack 0
   981  0000                     _RTCVALH	set	3933
   982  0000                     _RTCVALL	set	3932
   983  0000                     _stRTCCFGbits	set	3935
   984  0000                     _ALRMCFGbits	set	3931
   985  0000                     _ALRMRPT	set	3930
   986  0000                     _PADCFG1bits	set	3924
   987  0000                     _RTCCFGbits	set	3935
   988  0000                     _PR2	set	4043
   989  0000                     _T2CON	set	4042
   990  0000                     _RCONbits	set	4048
   991  0000                     _T1CONbits	set	4045
   992  0000                     _IPR3bits	set	4005
   993  0000                     _PIR3bits	set	4004
   994  0000                     _PIE3bits	set	4003
   995  0000                     _INTCON2bits	set	4081
   996  0000                     _OSCCONbits	set	4051
   997  0000                     _FSR0H	set	4074
   998  0000                     _FSR0L	set	4073
   999  0000                     _TABLAT	set	4085
  1000  0000                     _TBLPTRU	set	4088
  1001  0000                     _TBLPTRH	set	4087
  1002  0000                     _TBLPTRL	set	4086
  1003  0000                     _EECON1bits	set	4006
  1004  0000                     _INTCONbits	set	4082
  1005  0000                     _INTCON	set	4082
  1006  0000                     _LCDCON	set	4008
  1007  0000                     _TRISG	set	3992
  1008  0000                     _LCDSE5	set	4026
  1009  0000                     _LCDSE4	set	4025
  1010  0000                     _LCDSE3	set	4024
  1011  0000                     _LCDSE2	set	4023
  1012  0000                     _LCDSE1	set	4022
  1013  0000                     _LCDSE0	set	4009
  1014  0000                     _LCDPSbits	set	4010
  1015  0000                     _LCDREG	set	4050
  1016  0000                     _LCDDATA23	set	3965
  1017  0000                     _LCDDATA22	set	3964
  1018  0000                     _LCDDATA21	set	3963
  1019  0000                     _LCDDATA20	set	3962
  1020  0000                     _LCDDATA19	set	3961
  1021  0000                     _LCDDATA18	set	3960
  1022  0000                     _LCDDATA17	set	3959
  1023  0000                     _LCDDATA16	set	3958
  1024  0000                     _LCDDATA15	set	3957
  1025  0000                     _LCDDATA14	set	3956
  1026  0000                     _LCDDATA13	set	3955
  1027  0000                     _LCDDATA12	set	3954
  1028  0000                     _LCDDATA11	set	3953
  1029  0000                     _LCDDATA10	set	3952
  1030  0000                     _LCDDATA9	set	3951
  1031  0000                     _LCDDATA8	set	3950
  1032  0000                     _LCDDATA7	set	3949
  1033  0000                     _LCDDATA6	set	3948
  1034  0000                     _LCDDATA5	set	3947
  1035  0000                     _LCDDATA4	set	4031
  1036  0000                     _LCDDATA3	set	4030
  1037  0000                     _LCDDATA2	set	4029
  1038  0000                     _LCDDATA1	set	4028
  1039  0000                     _LCDDATA0	set	4027
  1040  0000                     _PORTB	set	3969
  1041  0000                     _ADRESL	set	4035
  1042  0000                     _ADRESH	set	4036
  1043  0000                     _IPR1bits	set	3999
  1044  0000                     _PIE1bits	set	3997
  1045  0000                     _PIR1bits	set	3998
  1046  0000                     _ADCON0bits	set	4034
  1047  0000                     _ADCON2bits	set	4032
  1048  0000                     _ADCON1	set	4033
  1049  0000                     _PORTC	set	3970
  1050  0000                     _LATC	set	3979
  1051  0000                     _TRISC	set	3988
  1052  0000                     _LATB	set	3978
  1053  0000                     _TRISB	set	3987
  1054  00FFE4                     STR_2:
  1055  00FFE4  20                 	db	32
  1056  00FFE5  20                 	db	32
  1057  00FFE6  20                 	db	32
  1058  00FFE7  20                 	db	32
  1059  00FFE8  20                 	db	32
  1060  00FFE9  20                 	db	32
  1061  00FFEA  20                 	db	32
  1062  00FFEB  20                 	db	32
  1063  00FFEC  00                 	db	0
  1064  00FFED                     STR_1:
  1065  00FFED  63                 	db	99	;'c'
  1066  00FFEE  73                 	db	115	;'s'
  1067  00FFEF  36                 	db	54	;'6'
  1068  00FFF0  36                 	db	54	;'6'
  1069  00FFF1  00                 	db	0
  1070  00FFF2                     STR_3:
  1071  00FFF2  20                 	db	32
  1072  00FFF3  70                 	db	112	;'p'
  1073  00FFF4  73                 	db	115	;'s'
  1074  00FFF5  64                 	db	100	;'d'
  1075  00FFF6  00                 	db	0
  1076                           
  1077                           ; #config settings
  1078  00FFF7  00                 	db	0	; dummy byte at the end
  1079  0000                     
  1080                           	psect	cinit
  1081  0019EE                     __pcinit:
  1082                           	opt stack 0
  1083  0019EE                     start_initialization:
  1084                           	opt stack 0
  1085  0019EE                     __initialization:
  1086                           	opt stack 0
  1087                           
  1088                           ; Initialize objects allocated to BANK0 (16 bytes)
  1089                           ; load TBLPTR registers with __pidataBANK0
  1090  0019EE  0E86               	movlw	low __pidataBANK0
  1091  0019F0  6EF6               	movwf	tblptrl,c
  1092  0019F2  0E28               	movlw	high __pidataBANK0
  1093  0019F4  6EF7               	movwf	tblptrh,c
  1094  0019F6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1095  0019F8  6EF8               	movwf	tblptru,c
  1096  0019FA  EE00  F0F0         	lfsr	0,__pdataBANK0
  1097  0019FE  EE10 F010          	lfsr	1,16
  1098  001A02                     copy_data0:
  1099  001A02  0009               	tblrd		*+
  1100  001A04  CFF5 FFEE          	movff	tablat,postinc0
  1101  001A08  50E5               	movf	postdec1,w,c
  1102  001A0A  50E1               	movf	fsr1l,w,c
  1103  001A0C  E1FA               	bnz	copy_data0
  1104                           
  1105                           ; Clear objects allocated to BANK4 (256 bytes)
  1106  001A0E  EE04  F000         	lfsr	0,__pbssBANK4
  1107  001A12  EE11 F000          	lfsr	1,256
  1108  001A16                     clear_0:
  1109  001A16  6AEE               	clrf	postinc0,c
  1110  001A18  50E5               	movf	postdec1,w,c
  1111  001A1A  50E1               	movf	fsr1l,w,c
  1112  001A1C  E1FC               	bnz	clear_0
  1113  001A1E  50E2               	movf	fsr1h,w,c
  1114  001A20  E1FA               	bnz	clear_0
  1115                           
  1116                           ; Clear objects allocated to BANK3 (256 bytes)
  1117  001A22  EE03  F000         	lfsr	0,__pbssBANK3
  1118  001A26  EE11 F000          	lfsr	1,256
  1119  001A2A                     clear_1:
  1120  001A2A  6AEE               	clrf	postinc0,c
  1121  001A2C  50E5               	movf	postdec1,w,c
  1122  001A2E  50E1               	movf	fsr1l,w,c
  1123  001A30  E1FC               	bnz	clear_1
  1124  001A32  50E2               	movf	fsr1h,w,c
  1125  001A34  E1FA               	bnz	clear_1
  1126                           
  1127                           ; Clear objects allocated to BANK2 (162 bytes)
  1128  001A36  EE02  F000         	lfsr	0,__pbssBANK2
  1129  001A3A  0EA2               	movlw	162
  1130  001A3C                     clear_2:
  1131  001A3C  6AEE               	clrf	postinc0,c
  1132  001A3E  06E8               	decf	wreg,f,c
  1133  001A40  E1FD               	bnz	clear_2
  1134                           
  1135                           ; Clear objects allocated to BANK1 (162 bytes)
  1136  001A42  EE01  F000         	lfsr	0,__pbssBANK1
  1137  001A46  0EA2               	movlw	162
  1138  001A48                     clear_3:
  1139  001A48  6AEE               	clrf	postinc0,c
  1140  001A4A  06E8               	decf	wreg,f,c
  1141  001A4C  E1FD               	bnz	clear_3
  1142                           
  1143                           ; Clear objects allocated to BANK0 (101 bytes)
  1144  001A4E  EE00  F060         	lfsr	0,__pbssBANK0
  1145  001A52  0E65               	movlw	101
  1146  001A54                     clear_4:
  1147  001A54  6AEE               	clrf	postinc0,c
  1148  001A56  06E8               	decf	wreg,f,c
  1149  001A58  E1FD               	bnz	clear_4
  1150                           
  1151                           ; Clear objects allocated to COMRAM (32 bytes)
  1152  001A5A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1153  001A5E  0E20               	movlw	32
  1154  001A60                     clear_5:
  1155  001A60  6AEE               	clrf	postinc0,c
  1156  001A62  06E8               	decf	wreg,f,c
  1157  001A64  E1FD               	bnz	clear_5
  1158  001A66                     end_of_initialization:
  1159                           	opt stack 0
  1160  001A66                     __end_of__initialization:
  1161                           	opt stack 0
  1162  001A66  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1163  001A68  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1164  001A6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1165  001A6C  6EF8               	movwf	tblptru,c
  1166  001A6E  0100               	movlb	0
  1167  001A70  EF44  F006         	goto	_main	;jump to C main() function
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           
  1178                           	psect	bssCOMRAM
  1179  000001                     __pbssCOMRAM:
  1180                           	opt stack 0
  1181  000001                     _pcf8574:
  1182                           	opt stack 0
  1183  000001                     	ds	11
  1184  00000C                     _adjValue:
  1185                           	opt stack 0
  1186  00000C                     	ds	4
  1187  000010                     _dlyTicker:
  1188                           	opt stack 0
  1189  000010                     	ds	2
  1190  000012                     _userTicker_ms:
  1191                           	opt stack 0
  1192  000012                     	ds	2
  1193  000014                     _p_prEepromObj:
  1194                           	opt stack 0
  1195  000014                     	ds	2
  1196  000016                     _pdiff_prEepromObj:
  1197                           	opt stack 0
  1198  000016                     	ds	2
  1199  000018                     _dlyTickerEn:
  1200                           	opt stack 0
  1201  000018                     	ds	1
  1202  000019                     _st_Bj:
  1203                           	opt stack 0
  1204  000019                     	ds	1
  1205  00001A                     _pcf8574Value:
  1206                           	opt stack 0
  1207  00001A                     	ds	1
  1208  00001B                     _calibCol:
  1209                           	opt stack 0
  1210  00001B                     	ds	1
  1211  00001C                     _calibRow:
  1212                           	opt stack 0
  1213  00001C                     	ds	1
  1214  00001D                     _menu:
  1215                           	opt stack 0
  1216  00001D                     	ds	1
  1217  00001E                     _passWord:
  1218                           	opt stack 0
  1219  00001E                     	ds	2
  1220  000020                     _adjLocation:
  1221                           	opt stack 0
  1222  000020                     	ds	1
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1h	equ	0xFE2
  1231                           fsr1l	equ	0xFE1
  1232                           
  1233                           	psect	bssBANK0
  1234  000060                     __pbssBANK0:
  1235                           	opt stack 0
  1236  000060                     _pLCD:
  1237                           	opt stack 0
  1238  000060                     	ds	24
  1239  000078                     _glRtc:
  1240                           	opt stack 0
  1241  000078                     	ds	7
  1242  00007F                     _glTicker:
  1243                           	opt stack 0
  1244  00007F                     	ds	4
  1245  000083                     ___mflot32_2_int32@F7574:
  1246                           	opt stack 0
  1247  000083                     	ds	4
  1248  000087                     ___int32_2_mflot32@F7569:
  1249                           	opt stack 0
  1250  000087                     	ds	4
  1251  00008B                     _pAdjValue:
  1252                           	opt stack 0
  1253  00008B                     	ds	2
  1254  00008D                     _glbEvent:
  1255                           	opt stack 0
  1256  00008D                     	ds	1
  1257  00008E                     _keyValue:
  1258                           	opt stack 0
  1259  00008E                     	ds	1
  1260  00008F                     _ads1115Chip1:
  1261                           	opt stack 0
  1262  00008F                     	ds	16
  1263  00009F                     _ads1115Chip0:
  1264                           	opt stack 0
  1265  00009F                     	ds	16
  1266  0000AF                     _at24c02Ch0:
  1267                           	opt stack 0
  1268  0000AF                     	ds	11
  1269  0000BA                     _at24c02Ch1:
  1270                           	opt stack 0
  1271  0000BA                     	ds	11
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1h	equ	0xFE2
  1280                           fsr1l	equ	0xFE1
  1281                           
  1282                           	psect	dataBANK0
  1283  0000F0                     __pdataBANK0:
  1284                           	opt stack 0
  1285  0000F0                     ui_disp_start_cs600@F7583:
  1286                           	opt stack 0
  1287  0000F0                     	ds	6
  1288  0000F6                     _fpSysData:
  1289                           	opt stack 0
  1290  0000F6                     	ds	3
  1291  0000F9                     _defalutRtc:
  1292                           	opt stack 0
  1293  0000F9                     	ds	7
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postdec1	equ	0xFE5
  1301                           fsr1h	equ	0xFE2
  1302                           fsr1l	equ	0xFE1
  1303                           
  1304                           	psect	bssBANK1
  1305  000100                     __pbssBANK1:
  1306                           	opt stack 0
  1307  000100                     _diff_prCalibTabDef:
  1308                           	opt stack 0
  1309  000100                     	ds	162
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           postdec1	equ	0xFE5
  1317                           fsr1h	equ	0xFE2
  1318                           fsr1l	equ	0xFE1
  1319                           
  1320                           	psect	bssBANK2
  1321  000200                     __pbssBANK2:
  1322                           	opt stack 0
  1323  000200                     _prCalibTabDef:
  1324                           	opt stack 0
  1325  000200                     	ds	162
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           postinc0	equ	0xFEE
  1331                           wreg	equ	0xFE8
  1332                           postdec1	equ	0xFE5
  1333                           fsr1h	equ	0xFE2
  1334                           fsr1l	equ	0xFE1
  1335                           
  1336                           	psect	bssBANK3
  1337  000300                     __pbssBANK3:
  1338                           	opt stack 0
  1339  000300                     _globleBuffer0:
  1340                           	opt stack 0
  1341  000300                     	ds	256
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1h	equ	0xFE2
  1350                           fsr1l	equ	0xFE1
  1351                           
  1352                           	psect	bssBANK4
  1353  000400                     __pbssBANK4:
  1354                           	opt stack 0
  1355  000400                     _globleBuffer1:
  1356                           	opt stack 0
  1357  000400                     	ds	256
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           postdec1	equ	0xFE5
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           
  1368                           	psect	cstackBANK1
  1369  0001A2                     __pcstackBANK1:
  1370                           	opt stack 0
  1371  0001A2                     main@t16:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x0
  1375  0001A2                     	ds	2
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           postdec1	equ	0xFE5
  1383                           fsr1h	equ	0xFE2
  1384                           fsr1l	equ	0xFE1
  1385                           
  1386                           	psect	cstackBANK0
  1387  0000C5                     __pcstackBANK0:
  1388                           	opt stack 0
  1389  0000C5                     ??___enter_menu_set_density:
  1390  0000C5                     ??___enter_menu_set_pose:
  1391  0000C5                     ?___exp_10:
  1392                           	opt stack 0
  1393  0000C5                     ?___awdiv:
  1394                           	opt stack 0
  1395  0000C5                     ?___awmod:
  1396                           	opt stack 0
  1397  0000C5                     ?___lldiv:
  1398                           	opt stack 0
  1399  0000C5                     iic_send_ack@ack:
  1400                           	opt stack 0
  1401  0000C5                     iic_waite_ack@timeout:
  1402                           	opt stack 0
  1403  0000C5                     iic_received_byte@ret:
  1404                           	opt stack 0
  1405  0000C5                     lcd_disp_get_code@chr:
  1406                           	opt stack 0
  1407  0000C5                     lcd_disp_all@x:
  1408                           	opt stack 0
  1409  0000C5                     rtc_get@t8:
  1410                           	opt stack 0
  1411  0000C5                     key_shift_loc_fixed_point@loc:
  1412                           	opt stack 0
  1413  0000C5                     ___x_arrange_str@str:
  1414                           	opt stack 0
  1415  0000C5                     m_mem_cpy@d:
  1416                           	opt stack 0
  1417  0000C5                     m_int8_2_hex@str:
  1418                           	opt stack 0
  1419  0000C5                     ads1115_init@pAds1115:
  1420                           	opt stack 0
  1421  0000C5                     delay_us@dly:
  1422                           	opt stack 0
  1423  0000C5                     rtc_set@rtc:
  1424                           	opt stack 0
  1425  0000C5                     ticker_dly@ms:
  1426                           	opt stack 0
  1427  0000C5                     ___awdiv@dividend:
  1428                           	opt stack 0
  1429  0000C5                     ___awmod@dividend:
  1430                           	opt stack 0
  1431  0000C5                     ___lldiv@dividend:
  1432                           	opt stack 0
  1433                           
  1434                           ; 4 bytes @ 0x0
  1435  0000C5                     	ds	1
  1436  0000C6                     iic_send_byte@x:
  1437                           	opt stack 0
  1438  0000C6                     iic_received_byte@i:
  1439                           	opt stack 0
  1440  0000C6                     lcd_disp_get_code@ret:
  1441                           	opt stack 0
  1442  0000C6                     lcd_disp_all@i:
  1443                           	opt stack 0
  1444  0000C6                     ___enter_menu_set_pose@fps:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0x1
  1448  0000C6                     	ds	1
  1449  0000C7                     ___exp_10@n:
  1450                           	opt stack 0
  1451  0000C7                     key_shift_loc_fixed_point@min:
  1452                           	opt stack 0
  1453  0000C7                     ___x_arrange_str@len:
  1454                           	opt stack 0
  1455  0000C7                     m_int8_2_hex@b:
  1456                           	opt stack 0
  1457  0000C7                     ads1115_init@slvaddr:
  1458                           	opt stack 0
  1459  0000C7                     iic_send_byte@i:
  1460                           	opt stack 0
  1461  0000C7                     iic_received_byte_if_ack@ack:
  1462                           	opt stack 0
  1463  0000C7                     lcd_disp_get_code@i:
  1464                           	opt stack 0
  1465  0000C7                     ___enter_menu_set_density@fps:
  1466                           	opt stack 0
  1467  0000C7                     m_mem_cpy@s:
  1468                           	opt stack 0
  1469  0000C7                     delay_us@i:
  1470                           	opt stack 0
  1471  0000C7                     rtc_set@stp:
  1472                           	opt stack 0
  1473  0000C7                     ___awdiv@divisor:
  1474                           	opt stack 0
  1475  0000C7                     ___awmod@divisor:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x2
  1479  0000C7                     	ds	1
  1480  0000C8                     ?___wmul:
  1481                           	opt stack 0
  1482  0000C8                     ?___lwdiv:
  1483                           	opt stack 0
  1484  0000C8                     key_shift_loc_fixed_point@max:
  1485                           	opt stack 0
  1486  0000C8                     ___x_arrange_str@i:
  1487                           	opt stack 0
  1488  0000C8                     m_int8_2_hex@t8:
  1489                           	opt stack 0
  1490  0000C8                     iic_received_byte_if_ack@ret:
  1491                           	opt stack 0
  1492  0000C8                     ads1115_write_reg@pAds1115:
  1493                           	opt stack 0
  1494  0000C8                     ___wmul@multiplier:
  1495                           	opt stack 0
  1496  0000C8                     ___lwdiv@dividend:
  1497                           	opt stack 0
  1498                           
  1499                           ; 2 bytes @ 0x3
  1500  0000C8                     	ds	1
  1501  0000C9                     ?_ads1115_read_reg:
  1502                           	opt stack 0
  1503  0000C9                     ?_in_adc_start_and_read:
  1504                           	opt stack 0
  1505  0000C9                     key_shift_loc_fixed_point@t8:
  1506                           	opt stack 0
  1507  0000C9                     ___awdiv@counter:
  1508                           	opt stack 0
  1509  0000C9                     ___awmod@counter:
  1510                           	opt stack 0
  1511  0000C9                     ads1115_read_reg@pAds1115:
  1512                           	opt stack 0
  1513  0000C9                     delay_ms@dly:
  1514                           	opt stack 0
  1515  0000C9                     ___lldiv@divisor:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x4
  1519  0000C9                     	ds	1
  1520  0000CA                     ads1115_write_reg@addr:
  1521                           	opt stack 0
  1522  0000CA                     ___awdiv@sign:
  1523                           	opt stack 0
  1524  0000CA                     ___awmod@sign:
  1525                           	opt stack 0
  1526  0000CA                     ___wmul@multiplicand:
  1527                           	opt stack 0
  1528  0000CA                     ___lwdiv@divisor:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x5
  1532  0000CA                     	ds	1
  1533  0000CB                     ??_in_adc_start_and_read:
  1534  0000CB                     ads1115_read_reg@addr:
  1535                           	opt stack 0
  1536  0000CB                     key_polling@ktemp:
  1537                           	opt stack 0
  1538  0000CB                     ads1115_write_reg@value:
  1539                           	opt stack 0
  1540  0000CB                     ___awdiv@quotient:
  1541                           	opt stack 0
  1542                           
  1543                           ; 2 bytes @ 0x6
  1544  0000CB                     	ds	1
  1545  0000CC                     ??_ads1115_read_reg:
  1546  0000CC                     in_adc_start_and_read@ch:
  1547                           	opt stack 0
  1548  0000CC                     key_polling@t8:
  1549                           	opt stack 0
  1550  0000CC                     ___lwdiv@counter:
  1551                           	opt stack 0
  1552  0000CC                     ___wmul@product:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x7
  1556  0000CC                     	ds	1
  1557  0000CD                     ?_key_waite_release:
  1558                           	opt stack 0
  1559  0000CD                     lcd_set_com_seg@seg:
  1560                           	opt stack 0
  1561  0000CD                     key_waite_release@timeout:
  1562                           	opt stack 0
  1563  0000CD                     m_int16_2_str_4@buf:
  1564                           	opt stack 0
  1565  0000CD                     ads1115_read_reg@t16:
  1566                           	opt stack 0
  1567  0000CD                     ads1115_start_conversion@pAds1115:
  1568                           	opt stack 0
  1569  0000CD                     in_adc_start_and_read@ret:
  1570                           	opt stack 0
  1571  0000CD                     ___lwdiv@quotient:
  1572                           	opt stack 0
  1573  0000CD                     ___lldiv@quotient:
  1574                           	opt stack 0
  1575                           
  1576                           ; 4 bytes @ 0x8
  1577  0000CD                     	ds	1
  1578  0000CE                     lcd_set_com_seg@show:
  1579                           	opt stack 0
  1580                           
  1581                           ; 1 bytes @ 0x9
  1582  0000CE                     	ds	1
  1583  0000CF                     ??_lcd_set_com_seg:
  1584  0000CF                     ?_ads1115_read_conversion:
  1585                           	opt stack 0
  1586  0000CF                     ?___lwmod:
  1587                           	opt stack 0
  1588  0000CF                     key_waite_release@key:
  1589                           	opt stack 0
  1590  0000CF                     m_int16_2_str_4@x:
  1591                           	opt stack 0
  1592  0000CF                     ads1115_read_conversion@pAds1115:
  1593                           	opt stack 0
  1594  0000CF                     ___lwmod@dividend:
  1595                           	opt stack 0
  1596                           
  1597                           ; 2 bytes @ 0xA
  1598  0000CF                     	ds	2
  1599  0000D1                     key_waite_release@t8:
  1600                           	opt stack 0
  1601  0000D1                     ___lldiv@counter:
  1602                           	opt stack 0
  1603  0000D1                     ___lwmod@divisor:
  1604                           	opt stack 0
  1605                           
  1606                           ; 2 bytes @ 0xC
  1607  0000D1                     	ds	1
  1608  0000D2                     ?___int32_2_mflot32:
  1609                           	opt stack 0
  1610  0000D2                     lcd_set_com_seg@com:
  1611                           	opt stack 0
  1612  0000D2                     ads1115_read_conversion@result:
  1613                           	opt stack 0
  1614  0000D2                     ___int32_2_mflot32@x:
  1615                           	opt stack 0
  1616                           
  1617                           ; 4 bytes @ 0xD
  1618  0000D2                     	ds	1
  1619  0000D3                     lcd_set_com_seg@offset:
  1620                           	opt stack 0
  1621  0000D3                     ___lwmod@counter:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0xE
  1625  0000D3                     	ds	1
  1626  0000D4                     lcd_set_com_seg@bits:
  1627                           	opt stack 0
  1628  0000D4                     key_adj_value_fixed_point@value:
  1629                           	opt stack 0
  1630                           
  1631                           ; 2 bytes @ 0xF
  1632  0000D4                     	ds	1
  1633  0000D5                     lcd_disp_level_bar@show:
  1634                           	opt stack 0
  1635  0000D5                     lcd_disp_chr_loc_0@code:
  1636                           	opt stack 0
  1637  0000D5                     lcd_disp_dp_loc_0@dp:
  1638                           	opt stack 0
  1639  0000D5                     lcd_disp_chr_loc_1@code:
  1640                           	opt stack 0
  1641  0000D5                     lcd_disp_dp_loc_1@dp:
  1642                           	opt stack 0
  1643  0000D5                     lcd_disp_chr_loc_2@code:
  1644                           	opt stack 0
  1645  0000D5                     lcd_disp_dp_loc_2@dp:
  1646                           	opt stack 0
  1647  0000D5                     lcd_disp_chr_loc_3@code:
  1648                           	opt stack 0
  1649  0000D5                     lcd_disp_chr_loc_4@code:
  1650                           	opt stack 0
  1651  0000D5                     lcd_disp_chr_loc_5@code:
  1652                           	opt stack 0
  1653  0000D5                     lcd_disp_chr_loc_6@code:
  1654                           	opt stack 0
  1655  0000D5                     lcd_disp_chr_loc_7@code:
  1656                           	opt stack 0
  1657  0000D5                     lcd_disp_logo@show:
  1658                           	opt stack 0
  1659                           
  1660                           ; 1 bytes @ 0x10
  1661  0000D5                     	ds	1
  1662  0000D6                     ??___int32_2_mflot32:
  1663  0000D6                     key_adj_value_fixed_point@loc:
  1664                           	opt stack 0
  1665  0000D6                     lcd_disp_level_bar@__bar:
  1666                           	opt stack 0
  1667  0000D6                     lcd_show_dp@show:
  1668                           	opt stack 0
  1669  0000D6                     lcd_show_chr@chr:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x11
  1673  0000D6                     	ds	1
  1674  0000D7                     lcd_disp_level_bar@bar:
  1675                           	opt stack 0
  1676  0000D7                     lcd_show_dp@loc:
  1677                           	opt stack 0
  1678  0000D7                     lcd_show_chr@loc:
  1679                           	opt stack 0
  1680  0000D7                     key_adj_value_fixed_point@dloc:
  1681                           	opt stack 0
  1682                           
  1683                           ; 2 bytes @ 0x12
  1684  0000D7                     	ds	1
  1685  0000D8                     lcd_disp_level@level:
  1686                           	opt stack 0
  1687  0000D8                     lcd_show_chr@code:
  1688                           	opt stack 0
  1689                           
  1690                           ; 1 bytes @ 0x13
  1691  0000D8                     	ds	1
  1692  0000D9                     lcd_disp_level@i:
  1693                           	opt stack 0
  1694  0000D9                     key_adj_value_fixed_point@t16:
  1695                           	opt stack 0
  1696  0000D9                     lcd_show_string_l0@str:
  1697                           	opt stack 0
  1698  0000D9                     lcd_show_string_l1@str:
  1699                           	opt stack 0
  1700  0000D9                     lcd_show_string@str:
  1701                           	opt stack 0
  1702                           
  1703                           ; 2 bytes @ 0x14
  1704  0000D9                     	ds	1
  1705  0000DA                     ___int32_2_mflot32@t32:
  1706                           	opt stack 0
  1707                           
  1708                           ; 4 bytes @ 0x15
  1709  0000DA                     	ds	1
  1710  0000DB                     lcd_show_string_l0@t8:
  1711                           	opt stack 0
  1712  0000DB                     lcd_show_string_l1@t8:
  1713                           	opt stack 0
  1714  0000DB                     lcd_show_string@t8:
  1715                           	opt stack 0
  1716                           
  1717                           ; 1 bytes @ 0x16
  1718  0000DB                     	ds	1
  1719  0000DC                     ui_disp_adj_xfixed_pt@str:
  1720                           	opt stack 0
  1721  0000DC                     ui_disp_start_cs600@buf:
  1722                           	opt stack 0
  1723  0000DC                     ui_disp_rtc_mm_ss@buf:
  1724                           	opt stack 0
  1725                           
  1726                           ; 10 bytes @ 0x17
  1727  0000DC                     	ds	2
  1728  0000DE                     ui_disp_adj_xfixed_pt@x:
  1729                           	opt stack 0
  1730  0000DE                     ___int32_2_mflot32@mf:
  1731                           	opt stack 0
  1732                           
  1733                           ; 4 bytes @ 0x19
  1734  0000DE                     	ds	2
  1735  0000E0                     ui_disp_adj_xfixed_pt@loc:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x1B
  1739  0000E0                     	ds	1
  1740  0000E1                     ??_ui_disp_adj_xfixed_pt:
  1741                           
  1742                           ; 1 bytes @ 0x1C
  1743  0000E1                     	ds	1
  1744  0000E2                     ui_disp_start_cs600@dly:
  1745                           	opt stack 0
  1746  0000E2                     ___enter_menu_set_base_zero@fps:
  1747                           	opt stack 0
  1748                           
  1749                           ; 2 bytes @ 0x1D
  1750  0000E2                     	ds	1
  1751  0000E3                     ui_disp_start_cs600@t8:
  1752                           	opt stack 0
  1753  0000E3                     ui_disp_adj_xfixed_pt@buf:
  1754                           	opt stack 0
  1755                           
  1756                           ; 10 bytes @ 0x1E
  1757  0000E3                     	ds	1
  1758  0000E4                     ??_key_process_set_down_long:
  1759                           
  1760                           ; 1 bytes @ 0x1F
  1761  0000E4                     	ds	2
  1762  0000E6                     ui_disp_rtc_mm_ss@t8:
  1763                           	opt stack 0
  1764                           
  1765                           ; 1 bytes @ 0x21
  1766  0000E6                     	ds	7
  1767  0000ED                     key_process@tm:
  1768                           	opt stack 0
  1769                           
  1770                           ; 2 bytes @ 0x28
  1771  0000ED                     	ds	2
  1772  0000EF                     key_process@key:
  1773                           	opt stack 0
  1774                           
  1775                           ; 1 bytes @ 0x2A
  1776  0000EF                     	ds	1
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           postdec1	equ	0xFE5
  1784                           fsr1h	equ	0xFE2
  1785                           fsr1l	equ	0xFE1
  1786                           
  1787                           	psect	cstackCOMRAM
  1788  000021                     __pcstackCOMRAM:
  1789                           	opt stack 0
  1790  000021                     ??_handler_interrupt_hight:
  1791  000021                     
  1792                           ; 2 bytes @ 0x0
  1793  000021                     	ds	14
  1794  00002F                     ??_handler_interrupt_low:
  1795                           
  1796                           ; 1 bytes @ 0xE
  1797  00002F                     	ds	17
  1798  000040                     tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           
  1808                           ; 1 bytes @ 0x1F
  1809 ;;
  1810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1811 ;;
  1812 ;; *************** function _main *****************
  1813 ;; Defined at:
  1814 ;;		line 5 in file "src/app/main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  t16             2    0[BANK1 ] unsigned int 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2  359[None  ] int 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels required when called:   14
  1834 ;; This function calls:
  1835 ;;		_ads1115_init_all_chip
  1836 ;;		_ads1115_read_conversion
  1837 ;;		_ads1115_read_reg
  1838 ;;		_ads1115_start_conversion
  1839 ;;		_in_adc_init
  1840 ;;		_in_adc_start_and_read
  1841 ;;		_key_polling
  1842 ;;		_key_process
  1843 ;;		_lcd_disp_level
  1844 ;;		_lcd_init
  1845 ;;		_rtc_set
  1846 ;;		_soc_init
  1847 ;;		_ticker_dly
  1848 ;;		_ui_disp_rtc_mm_ss
  1849 ;;		_ui_disp_start_cs600
  1850 ;; This function is called by:
  1851 ;;		Startup code after reset
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text0
  1856  000C88                     __ptext0:
  1857                           	opt stack 0
  1858  000C88                     _main:
  1859                           	opt stack 17
  1860                           
  1861                           ;main.c: 7: uint16_t t16;
  1862                           ;main.c: 8: __nop();
  1863                           
  1864                           ;incstack = 0
  1865  000C88  F000               	nop	
  1866                           
  1867                           ;main.c: 10: soc_init();
  1868  000C8A  EC4B  F014         	call	_soc_init	;wreg free
  1869                           
  1870                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  1871  000C8E  0EF9               	movlw	low _defalutRtc
  1872  000C90  0100               	movlb	0	; () banked
  1873  000C92  6FC5               	movwf	rtc_set@rtc& (0+255),b
  1874  000C94  0E00               	movlw	high _defalutRtc
  1875  000C96  0100               	movlb	0	; () banked
  1876  000C98  6FC6               	movwf	(rtc_set@rtc+1)& (0+255),b
  1877  000C9A  EC29  F008         	call	_rtc_set	;wreg free
  1878                           
  1879                           ;main.c: 12: lcd_init();
  1880  000C9E  EC5B  F014         	call	_lcd_init	;wreg free
  1881                           
  1882                           ;main.c: 14: ads1115_init_all_chip();
  1883  000CA2  EC94  F013         	call	_ads1115_init_all_chip	;wreg free
  1884                           
  1885                           ;main.c: 16: ads1115_start_conversion(&ads1115Chip0);
  1886  000CA6  0E9F               	movlw	low _ads1115Chip0
  1887  000CA8  0100               	movlb	0	; () banked
  1888  000CAA  6FCD               	movwf	ads1115_start_conversion@pAds1115& (0+255),b
  1889  000CAC  0E00               	movlw	high _ads1115Chip0
  1890  000CAE  0100               	movlb	0	; () banked
  1891  000CB0  6FCE               	movwf	(ads1115_start_conversion@pAds1115+1)& (0+255),b
  1892  000CB2  ECC0  F013         	call	_ads1115_start_conversion	;wreg free
  1893                           
  1894                           ;main.c: 17: t16=ads1115_read_reg(&ads1115Chip1,(0x01));
  1895  000CB6  0E8F               	movlw	low _ads1115Chip1
  1896  000CB8  0100               	movlb	0	; () banked
  1897  000CBA  6FC9               	movwf	ads1115_read_reg@pAds1115& (0+255),b
  1898  000CBC  0E00               	movlw	high _ads1115Chip1
  1899  000CBE  0100               	movlb	0	; () banked
  1900  000CC0  6FCA               	movwf	(ads1115_read_reg@pAds1115+1)& (0+255),b
  1901  000CC2  0E01               	movlw	1
  1902  000CC4  0100               	movlb	0	; () banked
  1903  000CC6  6FCB               	movwf	ads1115_read_reg@addr& (0+255),b
  1904  000CC8  ECD9  F002         	call	_ads1115_read_reg	;wreg free
  1905  000CCC  C0C9  F1A2         	movff	?_ads1115_read_reg,main@t16
  1906  000CD0  C0CA  F1A3         	movff	?_ads1115_read_reg+1,main@t16+1
  1907                           
  1908                           ;main.c: 18: ticker_dly(100);
  1909  000CD4  0E00               	movlw	0
  1910  000CD6  0100               	movlb	0	; () banked
  1911  000CD8  6FC6               	movwf	(ticker_dly@ms+1)& (0+255),b
  1912  000CDA  0E64               	movlw	100
  1913  000CDC  6FC5               	movwf	ticker_dly@ms& (0+255),b
  1914  000CDE  EC66  F013         	call	_ticker_dly	;wreg free
  1915                           
  1916                           ;main.c: 19: t16=ads1115_read_conversion(&ads1115Chip0);
  1917  000CE2  0E9F               	movlw	low _ads1115Chip0
  1918  000CE4  0100               	movlb	0	; () banked
  1919  000CE6  6FCF               	movwf	ads1115_read_conversion@pAds1115& (0+255),b
  1920  000CE8  0E00               	movlw	high _ads1115Chip0
  1921  000CEA  0100               	movlb	0	; () banked
  1922  000CEC  6FD0               	movwf	(ads1115_read_conversion@pAds1115+1)& (0+255),b
  1923  000CEE  ECFD  F010         	call	_ads1115_read_conversion	;wreg free
  1924  000CF2  C0CF  F1A2         	movff	?_ads1115_read_conversion,main@t16
  1925  000CF6  C0D0  F1A3         	movff	?_ads1115_read_conversion+1,main@t16+1
  1926                           
  1927                           ;main.c: 21: in_adc_init();
  1928  000CFA  ECFA  F013         	call	_in_adc_init	;wreg free
  1929                           
  1930                           ;main.c: 22: t16=in_adc_start_and_read(3);
  1931  000CFE  0E03               	movlw	3
  1932  000D00  ECEE  F00D         	call	_in_adc_start_and_read
  1933  000D04  C0C9  F1A2         	movff	?_in_adc_start_and_read,main@t16
  1934  000D08  C0CA  F1A3         	movff	?_in_adc_start_and_read+1,main@t16+1
  1935                           
  1936                           ;main.c: 23: ui_disp_start_cs600(10);
  1937  000D0C  0E0A               	movlw	10
  1938  000D0E  EC5C  F00C         	call	_ui_disp_start_cs600
  1939                           
  1940                           ;main.c: 25: lcd_disp_level(60);
  1941  000D12  0E3C               	movlw	60
  1942  000D14  EC22  F010         	call	_lcd_disp_level
  1943                           
  1944                           ;main.c: 27: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  1945  000D18  9893               	bcf	3987,4,c	;volatile
  1946  000D1A  888A               	bsf	3978,4,c	;volatile
  1947                           
  1948                           ;main.c: 29: __nop();
  1949  000D1C  F000               	nop	
  1950  000D1E                     l8687:
  1951                           
  1952                           ;main.c: 31: if(glbEvent & (0x02)){
  1953  000D1E  0100               	movlb	0	; () banked
  1954  000D20  A38D               	btfss	_glbEvent& (0+255),1,b	;volatile
  1955  000D22  D006               	goto	l8697
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 32: glbEvent &= ~(0x02);
  1959  000D24  0100               	movlb	0	; () banked
  1960  000D26  938D               	bcf	_glbEvent& (0+255),1,b	;volatile
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 33: __nop();
  1964  000D28  F000               	nop	
  1965                           
  1966                           ;main.c: 34: ui_disp_rtc_mm_ss();
  1967  000D2A  ECE0  F008         	call	_ui_disp_rtc_mm_ss	;wreg free
  1968                           
  1969                           ;main.c: 35: __nop();
  1970  000D2E  F000               	nop	
  1971  000D30                     l8697:
  1972                           
  1973                           ;main.c: 36: }
  1974                           ;main.c: 37: if(glbEvent & (0x01)){
  1975  000D30  0100               	movlb	0	; () banked
  1976  000D32  A18D               	btfss	_glbEvent& (0+255),0,b	;volatile
  1977  000D34  D003               	goto	l8703
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;main.c: 38: glbEvent &= ~(0x01);
  1981  000D36  0100               	movlb	0	; () banked
  1982  000D38  918D               	bcf	_glbEvent& (0+255),0,b	;volatile
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 39: __nop();
  1986  000D3A  F000               	nop	
  1987  000D3C                     l8703:
  1988                           
  1989                           ;main.c: 40: }
  1990                           ;main.c: 41: keyValue=key_polling();
  1991  000D3C  EC50  F010         	call	_key_polling	;wreg free
  1992  000D40  0100               	movlb	0	; () banked
  1993  000D42  6F8E               	movwf	_keyValue& (0+255),b	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;main.c: 42: if(keyValue!=(0x0))key_process();
  1997  000D44  0100               	movlb	0	; () banked
  1998  000D46  518E               	movf	_keyValue& (0+255),w,b	;volatile
  1999  000D48  B4D8               	btfsc	status,2,c
  2000  000D4A  D7E9               	goto	l8687
  2001                           
  2002                           ; BSR set to: 0
  2003  000D4C  EC3A  F00D         	call	_key_process	;wreg free
  2004  000D50  D7E6               	goto	l8687
  2005  000D52                     __end_of_main:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1h	equ	0xFE2
  2015                           fsr1l	equ	0xFE1
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _ui_disp_start_cs600 *****************
  2019 ;; Defined at:
  2020 ;;		line 113 in file "src/api/ui.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  dly             1    wreg     unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  dly             1   29[BANK0 ] unsigned char 
  2025 ;;  buf             6   23[BANK0 ] unsigned char [6]
  2026 ;;  t8              1   30[BANK0 ] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;Total ram usage:        8 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    9
  2043 ;; This function calls:
  2044 ;;		_lcd_disp_all
  2045 ;;		_lcd_disp_level
  2046 ;;		_lcd_disp_logo
  2047 ;;		_lcd_disp_refresh
  2048 ;;		_lcd_show_string_l0
  2049 ;;		_lcd_show_string_l1
  2050 ;;		_m_int8_2_hex
  2051 ;;		_ticker_dly
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text1
  2058  0018B8                     __ptext1:
  2059                           	opt stack 0
  2060  0018B8                     _ui_disp_start_cs600:
  2061                           	opt stack 21
  2062                           
  2063                           ;incstack = 0
  2064                           ;ui_disp_start_cs600@dly stored from wreg
  2065  0018B8  0100               	movlb	0	; () banked
  2066  0018BA  6FE2               	movwf	ui_disp_start_cs600@dly& (0+255),b
  2067                           
  2068                           ;ui.c: 115: uint8_t t8;
  2069                           ;ui.c: 116: uint8_t buf[6]="-00-";
  2070  0018BC  EE20  F0F0         	lfsr	2,ui_disp_start_cs600@F7583
  2071  0018C0  EE10  F0DC         	lfsr	1,ui_disp_start_cs600@buf
  2072  0018C4  0E05               	movlw	5
  2073  0018C6                     u6241:
  2074  0018C6  CFDB FFE3          	movff	plusw2,plusw1
  2075  0018CA  06E8               	decf	wreg,f,c
  2076  0018CC  E2FC               	bc	u6241
  2077                           
  2078                           ;ui.c: 117: lcd_disp_all(0);;
  2079  0018CE  0E00               	movlw	0
  2080  0018D0  EC4E  F013         	call	_lcd_disp_all
  2081                           
  2082                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  2083  0018D4  0EED               	movlw	low STR_1
  2084  0018D6  0100               	movlb	0	; () banked
  2085  0018D8  6FD9               	movwf	lcd_show_string_l0@str& (0+255),b
  2086  0018DA  0EFF               	movlw	high STR_1
  2087  0018DC  0100               	movlb	0	; () banked
  2088  0018DE  6FDA               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  2089  0018E0  EC20  F011         	call	_lcd_show_string_l0	;wreg free
  2090                           
  2091                           ;ui.c: 119: lcd_disp_logo(1);
  2092  0018E4  0E01               	movlw	1
  2093  0018E6  EC7A  F012         	call	_lcd_disp_logo
  2094                           
  2095                           ;ui.c: 120: t8=dly;
  2096  0018EA  C0E2  F0E3         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  2097                           
  2098                           ;ui.c: 121: if(t8<1)t8=1;
  2099  0018EE  0100               	movlb	0	; () banked
  2100  0018F0  51E3               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2101  0018F2  0100               	movlb	0	; () banked
  2102  0018F4  A4D8               	btfss	status,2,c
  2103  0018F6  D029               	goto	l8347
  2104                           
  2105                           ; BSR set to: 0
  2106  0018F8  0E01               	movlw	1
  2107  0018FA  0100               	movlb	0	; () banked
  2108  0018FC  6FE3               	movwf	ui_disp_start_cs600@t8& (0+255),b
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;ui.c: 122: while(t8){
  2112  0018FE  D025               	goto	l8347
  2113  001900                     l8333:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  2117  001900  0EDD               	movlw	low (ui_disp_start_cs600@buf+1)
  2118  001902  0100               	movlb	0	; () banked
  2119  001904  6FC5               	movwf	m_int8_2_hex@str& (0+255),b
  2120  001906  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  2121  001908  0100               	movlb	0	; () banked
  2122  00190A  6FC6               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2123  00190C  0100               	movlb	0	; () banked
  2124  00190E  05E3               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  2125  001910  0100               	movlb	0	; () banked
  2126  001912  6FC7               	movwf	m_int8_2_hex@b& (0+255),b
  2127  001914  EC2F  F00F         	call	_m_int8_2_hex	;wreg free
  2128                           
  2129                           ;ui.c: 124: buf[4]='\0';
  2130  001918  0E00               	movlw	0
  2131  00191A  0100               	movlb	0	; () banked
  2132  00191C  6FE0               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;ui.c: 125: lcd_show_string_l1(buf);
  2136  00191E  0EDC               	movlw	low ui_disp_start_cs600@buf
  2137  001920  0100               	movlb	0	; () banked
  2138  001922  6FD9               	movwf	lcd_show_string_l1@str& (0+255),b
  2139  001924  0E00               	movlw	high ui_disp_start_cs600@buf
  2140  001926  0100               	movlb	0	; () banked
  2141  001928  6FDA               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  2142  00192A  EC64  F011         	call	_lcd_show_string_l1	;wreg free
  2143                           
  2144                           ;ui.c: 126: lcd_disp_level(60);
  2145  00192E  0E3C               	movlw	60
  2146  001930  EC22  F010         	call	_lcd_disp_level
  2147                           
  2148                           ;ui.c: 127: lcd_disp_refresh();
  2149  001934  EC61  F00F         	call	_lcd_disp_refresh	;wreg free
  2150                           
  2151                           ;ui.c: 128: ticker_dly(1000);
  2152  001938  0E03               	movlw	3
  2153  00193A  0100               	movlb	0	; () banked
  2154  00193C  6FC6               	movwf	(ticker_dly@ms+1)& (0+255),b
  2155  00193E  0EE8               	movlw	232
  2156  001940  6FC5               	movwf	ticker_dly@ms& (0+255),b
  2157  001942  EC66  F013         	call	_ticker_dly	;wreg free
  2158                           
  2159                           ;ui.c: 129: t8--;
  2160  001946  0100               	movlb	0	; () banked
  2161  001948  07E3               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  2162  00194A                     l8347:
  2163                           
  2164                           ; BSR set to: 0
  2165  00194A  0100               	movlb	0	; () banked
  2166  00194C  51E3               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2167  00194E  0100               	movlb	0	; () banked
  2168  001950  B4D8               	btfsc	status,2,c
  2169  001952  0012               	return	
  2170  001954  D7D5               	goto	l8333
  2171  001956                     __end_of_ui_disp_start_cs600:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           postinc0	equ	0xFEE
  2178                           wreg	equ	0xFE8
  2179                           postdec1	equ	0xFE5
  2180                           plusw1	equ	0xFE3
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           plusw2	equ	0xFDB
  2184                           status	equ	0xFD8
  2185                           
  2186 ;; *************** function _ticker_dly *****************
  2187 ;; Defined at:
  2188 ;;		line 44 in file "src/soc/ticker.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  ms              2    0[BANK0 ] unsigned int 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_ui_disp_start_cs600
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text2
  2218  0026CC                     __ptext2:
  2219                           	opt stack 0
  2220  0026CC                     _ticker_dly:
  2221                           	opt stack 25
  2222                           
  2223                           ;ticker.c: 46: dlyTicker=0;
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;incstack = 0
  2227  0026CC  0E00               	movlw	0
  2228  0026CE  6E11               	movwf	_dlyTicker+1,c
  2229  0026D0  0E00               	movlw	0
  2230  0026D2  6E10               	movwf	_dlyTicker,c
  2231                           
  2232                           ;ticker.c: 47: dlyTickerEn=1;
  2233  0026D4  0E01               	movlw	1
  2234  0026D6  6E18               	movwf	_dlyTickerEn,c
  2235                           
  2236                           ;ticker.c: 48: while(dlyTicker<ms){
  2237  0026D8  D001               	goto	l8123
  2238  0026DA                     l1447:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;ticker.c: 49: __nop();
  2242  0026DA  F000               	nop	
  2243  0026DC                     l8123:
  2244  0026DC  0100               	movlb	0	; () banked
  2245  0026DE  51C5               	movf	ticker_dly@ms& (0+255),w,b
  2246  0026E0  5C10               	subwf	_dlyTicker,w,c
  2247  0026E2  0100               	movlb	0	; () banked
  2248  0026E4  51C6               	movf	(ticker_dly@ms+1)& (0+255),w,b
  2249  0026E6  5811               	subwfb	_dlyTicker+1,w,c
  2250  0026E8  A0D8               	btfss	status,0,c
  2251  0026EA  D7F7               	goto	l1447
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;ticker.c: 50: }
  2255                           ;ticker.c: 51: dlyTickerEn=0;
  2256                           
  2257                           ; BSR set to: 0
  2258  0026EC  0E00               	movlw	0
  2259  0026EE  6E18               	movwf	_dlyTickerEn,c
  2260                           
  2261                           ;ticker.c: 52: dlyTicker=0;
  2262  0026F0  0E00               	movlw	0
  2263  0026F2  6E11               	movwf	_dlyTicker+1,c
  2264  0026F4  0E00               	movlw	0
  2265  0026F6  6E10               	movwf	_dlyTicker,c
  2266                           
  2267                           ; BSR set to: 0
  2268  0026F8  0012               	return		;funcret
  2269  0026FA                     __end_of_ticker_dly:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           plusw1	equ	0xFE3
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           plusw2	equ	0xFDB
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _lcd_show_string_l1 *****************
  2285 ;; Defined at:
  2286 ;;		line 524 in file "src/driver/lcd.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  str             2   20[BANK0 ] PTR unsigned char 
  2289 ;;		 -> ui_disp_start_cs600@buf(6), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  t8              1   22[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    8
  2308 ;; This function calls:
  2309 ;;		_lcd_show_chr
  2310 ;; This function is called by:
  2311 ;;		_ui_disp_start_cs600
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text3
  2316  0022C8                     __ptext3:
  2317                           	opt stack 0
  2318  0022C8                     _lcd_show_string_l1:
  2319                           	opt stack 21
  2320                           
  2321                           ;lcd.c: 526: uint8_t t8=0;
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;incstack = 0
  2325  0022C8  0E00               	movlw	0
  2326  0022CA  0100               	movlb	0	; () banked
  2327  0022CC  6FDB               	movwf	lcd_show_string_l1@t8& (0+255),b
  2328                           
  2329                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  2330  0022CE  D011               	goto	l8093
  2331  0022D0                     l8087:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  2335  0022D0  C0D9  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2336  0022D4  C0DA  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2337  0022D8  50DF               	movf	indf2,w,c
  2338  0022DA  0100               	movlb	0	; () banked
  2339  0022DC  6FD6               	movwf	lcd_show_chr@chr& (0+255),b
  2340  0022DE  0100               	movlb	0	; () banked
  2341  0022E0  51DB               	movf	lcd_show_string_l1@t8& (0+255),w,b
  2342  0022E2  0F04               	addlw	4
  2343  0022E4  ECAB  F00C         	call	_lcd_show_chr
  2344                           
  2345                           ;lcd.c: 529: str++;
  2346  0022E8  0100               	movlb	0	; () banked
  2347  0022EA  4BD9               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  2348  0022EC  2BDA               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;lcd.c: 530: t8++;
  2352  0022EE  0100               	movlb	0	; () banked
  2353  0022F0  2BDB               	incf	lcd_show_string_l1@t8& (0+255),f,b
  2354  0022F2                     l8093:
  2355                           
  2356                           ; BSR set to: 0
  2357  0022F2  C0D9  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2358  0022F6  C0DA  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2359  0022FA  50DF               	movf	indf2,w,c
  2360  0022FC  B4D8               	btfsc	status,2,c
  2361  0022FE  0012               	return	
  2362                           
  2363                           ; BSR set to: 0
  2364  002300  0E03               	movlw	3
  2365  002302  0100               	movlb	0	; () banked
  2366  002304  65DB               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  2367  002306  D7E4               	goto	l8087
  2368  002308  0012               	return	
  2369  00230A                     __end_of_lcd_show_string_l1:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postdec1	equ	0xFE5
  2378                           plusw1	equ	0xFE3
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           plusw2	equ	0xFDB
  2383                           fsr2h	equ	0xFDA
  2384                           fsr2l	equ	0xFD9
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _lcd_show_string_l0 *****************
  2388 ;; Defined at:
  2389 ;;		line 514 in file "src/driver/lcd.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  str             2   20[BANK0 ] PTR unsigned char 
  2392 ;;		 -> STR_1(5), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  t8              1   22[BANK0 ] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;Total ram usage:        3 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    8
  2411 ;; This function calls:
  2412 ;;		_lcd_show_chr
  2413 ;; This function is called by:
  2414 ;;		_ui_disp_start_cs600
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text4
  2419  002240                     __ptext4:
  2420                           	opt stack 0
  2421  002240                     _lcd_show_string_l0:
  2422                           	opt stack 21
  2423                           
  2424                           ;lcd.c: 516: uint8_t t8=0;
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;incstack = 0
  2428  002240  0E00               	movlw	0
  2429  002242  0100               	movlb	0	; () banked
  2430  002244  6FDB               	movwf	lcd_show_string_l0@t8& (0+255),b
  2431                           
  2432                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  2433  002246  D010               	goto	l8065
  2434  002248                     l8059:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  2438  002248  C0D9  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2439  00224C  C0DA  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2440  002250                     	if	0	;tblptru may be non-zero
  2441  002250                     	endif
  2442  002250                     	if	0	;tblptru may be non-zero
  2443  002250                     	endif
  2444  002250  0008               	tblrd		*
  2445  002252  CFF5 F0D6          	movff	tablat,lcd_show_chr@chr
  2446  002256  0100               	movlb	0	; () banked
  2447  002258  51DB               	movf	lcd_show_string_l0@t8& (0+255),w,b
  2448  00225A  ECAB  F00C         	call	_lcd_show_chr
  2449                           
  2450                           ;lcd.c: 519: str++;
  2451  00225E  0100               	movlb	0	; () banked
  2452  002260  4BD9               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  2453  002262  2BDA               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;lcd.c: 520: t8++;
  2457  002264  0100               	movlb	0	; () banked
  2458  002266  2BDB               	incf	lcd_show_string_l0@t8& (0+255),f,b
  2459  002268                     l8065:
  2460                           
  2461                           ; BSR set to: 0
  2462  002268  C0D9  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2463  00226C  C0DA  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2464  002270                     	if	0	;tblptru may be non-zero
  2465  002270                     	endif
  2466  002270                     	if	0	;tblptru may be non-zero
  2467  002270                     	endif
  2468  002270  0008               	tblrd		*
  2469  002272  50F5               	movf	tablat,w,c
  2470  002274  0900               	iorlw	0
  2471  002276  B4D8               	btfsc	status,2,c
  2472  002278  0012               	return	
  2473                           
  2474                           ; BSR set to: 0
  2475  00227A  0E03               	movlw	3
  2476  00227C  0100               	movlb	0	; () banked
  2477  00227E  65DB               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  2478  002280  D7E3               	goto	l8059
  2479  002282  0012               	return	
  2480  002284                     __end_of_lcd_show_string_l0:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postdec1	equ	0xFE5
  2489                           plusw1	equ	0xFE3
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           indf2	equ	0xFDF
  2493                           plusw2	equ	0xFDB
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _lcd_disp_logo *****************
  2499 ;; Defined at:
  2500 ;;		line 378 in file "src/driver/lcd.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  show            1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  show            1   16[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        1 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    6
  2521 ;; This function calls:
  2522 ;;		_lcd_set_com_seg
  2523 ;; This function is called by:
  2524 ;;		_ui_disp_start_cs600
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text5
  2529  0024F4                     __ptext5:
  2530                           	opt stack 0
  2531  0024F4                     _lcd_disp_logo:
  2532                           	opt stack 23
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;incstack = 0
  2536                           ;lcd_disp_logo@show stored from wreg
  2537  0024F4  0100               	movlb	0	; () banked
  2538  0024F6  6FD5               	movwf	lcd_disp_logo@show& (0+255),b
  2539                           
  2540                           ;lcd.c: 380: if(show)
  2541  0024F8  0100               	movlb	0	; () banked
  2542  0024FA  51D5               	movf	lcd_disp_logo@show& (0+255),w,b
  2543  0024FC  0100               	movlb	0	; () banked
  2544  0024FE  B4D8               	btfsc	status,2,c
  2545  002500  D00A               	goto	l8073
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  2549  002502  0E0D               	movlw	13
  2550  002504  0100               	movlb	0	; () banked
  2551  002506  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  2552  002508  0E01               	movlw	1
  2553  00250A  0100               	movlb	0	; () banked
  2554  00250C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  2555  00250E  0E02               	movlw	2
  2556  002510  ECA9  F006         	call	_lcd_set_com_seg
  2557  002514  0012               	return	
  2558  002516                     l8073:
  2559                           
  2560                           ;lcd.c: 382: else
  2561                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  2562  002516  0E0D               	movlw	13
  2563  002518  0100               	movlb	0	; () banked
  2564  00251A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  2565  00251C  0E00               	movlw	0
  2566  00251E  0100               	movlb	0	; () banked
  2567  002520  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  2568  002522  0E02               	movlw	2
  2569  002524  ECA9  F006         	call	_lcd_set_com_seg
  2570  002528  0012               	return	
  2571  00252A                     __end_of_lcd_disp_logo:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           plusw1	equ	0xFE3
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           indf2	equ	0xFDF
  2584                           plusw2	equ	0xFDB
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _ui_disp_rtc_mm_ss *****************
  2590 ;; Defined at:
  2591 ;;		line 133 in file "src/api/ui.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  buf            10   23[BANK0 ] unsigned char [10]
  2596 ;;  t8              1   33[BANK0 ] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:       11 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    9
  2613 ;; This function calls:
  2614 ;;		_lcd_disp_level
  2615 ;;		_lcd_disp_refresh
  2616 ;;		_lcd_show_dp
  2617 ;;		_lcd_show_string
  2618 ;;		_m_int8_2_hex
  2619 ;;		_rtc_get
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text6
  2626  0011C0                     __ptext6:
  2627                           	opt stack 0
  2628  0011C0                     _ui_disp_rtc_mm_ss:
  2629                           	opt stack 21
  2630                           
  2631                           ;ui.c: 135: uint8_t buf[10];
  2632                           ;ui.c: 136: uint8_t t8;
  2633                           ;ui.c: 137: if(RTCCFGbits.HALFSEC){
  2634                           
  2635                           ;incstack = 0
  2636  0011C0  010F               	movlb	15	; () banked
  2637  0011C2  A75F               	btfss	95,3,b	;volatile
  2638  0011C4  D007               	goto	l8353
  2639                           
  2640                           ; BSR set to: 15
  2641                           ;ui.c: 138: lcd_show_dp(1,0);
  2642  0011C6  0E00               	movlw	0
  2643  0011C8  0100               	movlb	0	; () banked
  2644  0011CA  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  2645  0011CC  0E01               	movlw	1
  2646  0011CE  EC25  F00E         	call	_lcd_show_dp
  2647                           
  2648                           ;ui.c: 139: }else{
  2649  0011D2  D049               	goto	l8379
  2650  0011D4                     l8353:
  2651                           
  2652                           ;ui.c: 140: rtc_get();
  2653  0011D4  EC85  F011         	call	_rtc_get	;wreg free
  2654                           
  2655                           ;ui.c: 141: t8=glRtc.hour;
  2656  0011D8  C07B  F0E6         	movff	_glRtc+3,ui_disp_rtc_mm_ss@t8
  2657                           
  2658                           ;ui.c: 142: m_int8_2_hex(buf,t8);
  2659  0011DC  0EDC               	movlw	low ui_disp_rtc_mm_ss@buf
  2660  0011DE  0100               	movlb	0	; () banked
  2661  0011E0  6FC5               	movwf	m_int8_2_hex@str& (0+255),b
  2662  0011E2  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2663  0011E4  0100               	movlb	0	; () banked
  2664  0011E6  6FC6               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2665  0011E8  C0E6  F0C7         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2666  0011EC  EC2F  F00F         	call	_m_int8_2_hex	;wreg free
  2667                           
  2668                           ;ui.c: 143: t8=glRtc.minute;
  2669  0011F0  C07C  F0E6         	movff	_glRtc+4,ui_disp_rtc_mm_ss@t8
  2670                           
  2671                           ;ui.c: 144: m_int8_2_hex(buf+2,t8);
  2672  0011F4  0EDE               	movlw	low (ui_disp_rtc_mm_ss@buf+2)
  2673  0011F6  0100               	movlb	0	; () banked
  2674  0011F8  6FC5               	movwf	m_int8_2_hex@str& (0+255),b
  2675  0011FA  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+2)
  2676  0011FC  0100               	movlb	0	; () banked
  2677  0011FE  6FC6               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2678  001200  C0E6  F0C7         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2679  001204  EC2F  F00F         	call	_m_int8_2_hex	;wreg free
  2680                           
  2681                           ;ui.c: 146: t8=glRtc.month;
  2682  001208  C079  F0E6         	movff	_glRtc+1,ui_disp_rtc_mm_ss@t8
  2683                           
  2684                           ;ui.c: 147: m_int8_2_hex(buf+4,t8);
  2685  00120C  0EE0               	movlw	low (ui_disp_rtc_mm_ss@buf+4)
  2686  00120E  0100               	movlb	0	; () banked
  2687  001210  6FC5               	movwf	m_int8_2_hex@str& (0+255),b
  2688  001212  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+4)
  2689  001214  0100               	movlb	0	; () banked
  2690  001216  6FC6               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2691  001218  C0E6  F0C7         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2692  00121C  EC2F  F00F         	call	_m_int8_2_hex	;wreg free
  2693                           
  2694                           ;ui.c: 148: t8=glRtc.date;
  2695  001220  C07A  F0E6         	movff	_glRtc+2,ui_disp_rtc_mm_ss@t8
  2696                           
  2697                           ;ui.c: 149: m_int8_2_hex(buf+6,t8);
  2698  001224  0EE2               	movlw	low (ui_disp_rtc_mm_ss@buf+6)
  2699  001226  0100               	movlb	0	; () banked
  2700  001228  6FC5               	movwf	m_int8_2_hex@str& (0+255),b
  2701  00122A  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+6)
  2702  00122C  0100               	movlb	0	; () banked
  2703  00122E  6FC6               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2704  001230  C0E6  F0C7         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2705  001234  EC2F  F00F         	call	_m_int8_2_hex	;wreg free
  2706                           
  2707                           ;ui.c: 150: buf[8]='\0';
  2708  001238  0E00               	movlw	0
  2709  00123A  0100               	movlb	0	; () banked
  2710  00123C  6FE4               	movwf	(ui_disp_rtc_mm_ss@buf+8)& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;ui.c: 152: lcd_show_string(buf);
  2714  00123E  0EDC               	movlw	low ui_disp_rtc_mm_ss@buf
  2715  001240  0100               	movlb	0	; () banked
  2716  001242  6FD9               	movwf	lcd_show_string@str& (0+255),b
  2717  001244  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2718  001246  0100               	movlb	0	; () banked
  2719  001248  6FDA               	movwf	(lcd_show_string@str+1)& (0+255),b
  2720  00124A  ECB7  F00D         	call	_lcd_show_string	;wreg free
  2721                           
  2722                           ;ui.c: 153: lcd_show_dp(1,1);
  2723  00124E  0E01               	movlw	1
  2724  001250  0100               	movlb	0	; () banked
  2725  001252  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  2726  001254  0E01               	movlw	1
  2727  001256  EC25  F00E         	call	_lcd_show_dp
  2728                           
  2729                           ;ui.c: 154: lcd_show_dp(5,1);
  2730  00125A  0E01               	movlw	1
  2731  00125C  0100               	movlb	0	; () banked
  2732  00125E  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  2733  001260  0E05               	movlw	5
  2734  001262  EC25  F00E         	call	_lcd_show_dp
  2735  001266                     l8379:
  2736                           
  2737                           ;ui.c: 155: }
  2738                           ;ui.c: 156: lcd_disp_level(60);
  2739  001266  0E3C               	movlw	60
  2740  001268  EC22  F010         	call	_lcd_disp_level
  2741                           
  2742                           ;ui.c: 157: lcd_disp_refresh();
  2743  00126C  EC61  F00F         	call	_lcd_disp_refresh	;wreg free
  2744  001270  0012               	return		;funcret
  2745  001272                     __end_of_ui_disp_rtc_mm_ss:
  2746                           	opt stack 0
  2747                           tblptru	equ	0xFF8
  2748                           tblptrh	equ	0xFF7
  2749                           tblptrl	equ	0xFF6
  2750                           tablat	equ	0xFF5
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           plusw1	equ	0xFE3
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           indf2	equ	0xFDF
  2758                           plusw2	equ	0xFDB
  2759                           fsr2h	equ	0xFDA
  2760                           fsr2l	equ	0xFD9
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _rtc_get *****************
  2764 ;; Defined at:
  2765 ;;		line 74 in file "src/soc/rtc.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  t8              1    0[BANK0 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        1 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    4
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_ui_disp_rtc_mm_ss
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text7
  2794  00230A                     __ptext7:
  2795                           	opt stack 0
  2796  00230A                     _rtc_get:
  2797                           	opt stack 25
  2798                           
  2799                           ;rtc.c: 76: uint8_t t8;
  2800                           ;rtc.c: 77: stRTCCFGbits.RTCPTR=3;
  2801                           
  2802                           ;incstack = 0
  2803  00230A  0E03               	movlw	3
  2804  00230C  010F               	movlb	15	; () banked
  2805  00230E  135F               	iorwf	95,f,b	;volatile
  2806                           
  2807                           ; BSR set to: 15
  2808                           ;rtc.c: 78: glRtc.year=RTCVALL;
  2809  002310  CF5C F078          	movff	3932,_glRtc	;volatile
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;rtc.c: 80: t8=RTCVALH;
  2813  002314  CF5D F0C5          	movff	3933,rtc_get@t8	;volatile
  2814                           
  2815                           ;rtc.c: 81: stRTCCFGbits.RTCPTR=2;
  2816  002318  010F               	movlb	15	; () banked
  2817  00231A  515F               	movf	95,w,b	;volatile
  2818  00231C  0BFC               	andlw	-4
  2819  00231E  0902               	iorlw	2
  2820  002320  6F5F               	movwf	95,b	;volatile
  2821                           
  2822                           ; BSR set to: 15
  2823                           ;rtc.c: 82: glRtc.date=RTCVALL;
  2824  002322  CF5C F07A          	movff	3932,_glRtc+2	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;rtc.c: 83: glRtc.month=RTCVALH;
  2828  002326  CF5D F079          	movff	3933,_glRtc+1	;volatile
  2829                           
  2830                           ;rtc.c: 84: stRTCCFGbits.RTCPTR=1;
  2831  00232A  010F               	movlb	15	; () banked
  2832  00232C  515F               	movf	95,w,b	;volatile
  2833  00232E  0BFC               	andlw	-4
  2834  002330  0901               	iorlw	1
  2835  002332  6F5F               	movwf	95,b	;volatile
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;rtc.c: 85: glRtc.hour=RTCVALL;
  2839  002334  CF5C F07B          	movff	3932,_glRtc+3	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;rtc.c: 86: glRtc.day=RTCVALH;
  2843  002338  CF5D F07E          	movff	3933,_glRtc+6	;volatile
  2844                           
  2845                           ;rtc.c: 87: stRTCCFGbits.RTCPTR=0;
  2846  00233C  0EFC               	movlw	-4
  2847  00233E  010F               	movlb	15	; () banked
  2848  002340  175F               	andwf	95,f,b	;volatile
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;rtc.c: 88: glRtc.second=RTCVALL;
  2852  002342  CF5C F07D          	movff	3932,_glRtc+5	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;rtc.c: 89: glRtc.minute=RTCVALH;
  2856  002346  CF5D F07C          	movff	3933,_glRtc+4	;volatile
  2857                           
  2858                           ; BSR set to: 15
  2859  00234A  0012               	return		;funcret
  2860  00234C                     __end_of_rtc_get:
  2861                           	opt stack 0
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           plusw1	equ	0xFE3
  2870                           fsr1h	equ	0xFE2
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           plusw2	equ	0xFDB
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _m_int8_2_hex *****************
  2879 ;; Defined at:
  2880 ;;		line 243 in file "src/depend/m_string.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  str             2    0[BANK0 ] PTR unsigned char 
  2883 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  2884 ;;  b               1    2[BANK0 ] unsigned char 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  t8              1    3[BANK0 ] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        4 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    4
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_ui_disp_start_cs600
  2907 ;;		_ui_disp_rtc_mm_ss
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text8
  2912  001E5E                     __ptext8:
  2913                           	opt stack 0
  2914  001E5E                     _m_int8_2_hex:
  2915                           	opt stack 25
  2916                           
  2917                           ;m_string.c: 245: uint8_t t8;
  2918                           ;m_string.c: 246: t8=b;
  2919                           
  2920                           ; BSR set to: 15
  2921                           ;incstack = 0
  2922  001E5E  C0C7  F0C8         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2923                           
  2924                           ;m_string.c: 247: t8>>=4;
  2925  001E62  0100               	movlb	0	; () banked
  2926  001E64  3BC8               	swapf	m_int8_2_hex@t8& (0+255),f,b
  2927  001E66  0E0F               	movlw	15
  2928  001E68  17C8               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2929                           
  2930                           ;m_string.c: 248: t8 &= 0x0f;
  2931  001E6A  0E0F               	movlw	15
  2932  001E6C  0100               	movlb	0	; () banked
  2933  001E6E  17C8               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;m_string.c: 249: str[0]=HexTable[t8];
  2937  001E70  0100               	movlb	0	; () banked
  2938  001E72  51C8               	movf	m_int8_2_hex@t8& (0+255),w,b
  2939  001E74  0D01               	mullw	1
  2940  001E76  0E0C               	movlw	low _HexTable
  2941  001E78  24F3               	addwf	prodl,w,c
  2942  001E7A  6EF6               	movwf	tblptrl,c
  2943  001E7C  0EFF               	movlw	high _HexTable
  2944  001E7E  20F4               	addwfc	prodh,w,c
  2945  001E80  6EF7               	movwf	tblptrh,c
  2946  001E82                     	if	0	;There are less than 3 active tblptr bytes
  2947  001E82                     	endif
  2948  001E82  C0C5  FFD9         	movff	m_int8_2_hex@str,fsr2l
  2949  001E86  C0C6  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  2950  001E8A  0008               	tblrd		*
  2951  001E8C  CFF5 FFDF          	movff	tablat,indf2
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;m_string.c: 251: t8=b;
  2955  001E90  C0C7  F0C8         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;m_string.c: 253: t8 &= 0x0f;
  2959  001E94  0E0F               	movlw	15
  2960  001E96  0100               	movlb	0	; () banked
  2961  001E98  17C8               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2962                           
  2963                           ;m_string.c: 254: str[1]=HexTable[t8];
  2964  001E9A  0100               	movlb	0	; () banked
  2965  001E9C  51C8               	movf	m_int8_2_hex@t8& (0+255),w,b
  2966  001E9E  0D01               	mullw	1
  2967  001EA0  0E0C               	movlw	low _HexTable
  2968  001EA2  24F3               	addwf	prodl,w,c
  2969  001EA4  6EF6               	movwf	tblptrl,c
  2970  001EA6  0EFF               	movlw	high _HexTable
  2971  001EA8  20F4               	addwfc	prodh,w,c
  2972  001EAA  6EF7               	movwf	tblptrh,c
  2973  001EAC                     	if	0	;There are less than 3 active tblptr bytes
  2974  001EAC                     	endif
  2975  001EAC  0100               	movlb	0	; () banked
  2976  001EAE  EE20 F001          	lfsr	2,1
  2977  001EB2  51C5               	movf	m_int8_2_hex@str& (0+255),w,b
  2978  001EB4  26D9               	addwf	fsr2l,f,c
  2979  001EB6  51C6               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  2980  001EB8  22DA               	addwfc	fsr2h,f,c
  2981  001EBA  0008               	tblrd		*
  2982  001EBC  CFF5 FFDF          	movff	tablat,indf2
  2983                           
  2984                           ; BSR set to: 0
  2985  001EC0  0012               	return		;funcret
  2986  001EC2                     __end_of_m_int8_2_hex:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           postinc0	equ	0xFEE
  2995                           wreg	equ	0xFE8
  2996                           postdec1	equ	0xFE5
  2997                           plusw1	equ	0xFE3
  2998                           fsr1h	equ	0xFE2
  2999                           fsr1l	equ	0xFE1
  3000                           indf2	equ	0xFDF
  3001                           plusw2	equ	0xFDB
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _lcd_disp_level *****************
  3007 ;; Defined at:
  3008 ;;		line 118 in file "src/driver/lcd.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  level           1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  level           1   19[BANK0 ] unsigned char 
  3013 ;;  i               1   20[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    7
  3030 ;; This function calls:
  3031 ;;		_lcd_disp_level_bar
  3032 ;; This function is called by:
  3033 ;;		_ui_disp_start_cs600
  3034 ;;		_ui_disp_rtc_mm_ss
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text9
  3040  002044                     __ptext9:
  3041                           	opt stack 0
  3042  002044                     _lcd_disp_level:
  3043                           	opt stack 22
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;incstack = 0
  3047                           ;lcd_disp_level@level stored from wreg
  3048  002044  0100               	movlb	0	; () banked
  3049  002046  6FD8               	movwf	lcd_disp_level@level& (0+255),b
  3050                           
  3051                           ;lcd.c: 120: uint8_t i;
  3052                           ;lcd.c: 121: if(level>=99)level=99;
  3053  002048  0E62               	movlw	98
  3054  00204A  0100               	movlb	0	; () banked
  3055  00204C  65D8               	cpfsgt	lcd_disp_level@level& (0+255),b
  3056  00204E  D003               	goto	l8101
  3057                           
  3058                           ; BSR set to: 0
  3059  002050  0E63               	movlw	99
  3060  002052  0100               	movlb	0	; () banked
  3061  002054  6FD8               	movwf	lcd_disp_level@level& (0+255),b
  3062  002056                     l8101:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;lcd.c: 122: level/=2;
  3066  002056  0100               	movlb	0	; () banked
  3067  002058  90D8               	bcf	status,0,c
  3068  00205A  33D8               	rrcf	lcd_disp_level@level& (0+255),f,b
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;lcd.c: 123: for(i=0;i<level;i++){
  3072  00205C  0E00               	movlw	0
  3073  00205E  0100               	movlb	0	; () banked
  3074  002060  6FD9               	movwf	lcd_disp_level@i& (0+255),b
  3075  002062  D009               	goto	l8109
  3076  002064                     l8105:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  3080  002064  0E01               	movlw	1
  3081  002066  0100               	movlb	0	; () banked
  3082  002068  6FD5               	movwf	lcd_disp_level_bar@show& (0+255),b
  3083  00206A  0100               	movlb	0	; () banked
  3084  00206C  51D9               	movf	lcd_disp_level@i& (0+255),w,b
  3085  00206E  EC70  F000         	call	_lcd_disp_level_bar
  3086  002072  0100               	movlb	0	; () banked
  3087  002074  2BD9               	incf	lcd_disp_level@i& (0+255),f,b
  3088  002076                     l8109:
  3089                           
  3090                           ; BSR set to: 0
  3091  002076  0100               	movlb	0	; () banked
  3092  002078  51D8               	movf	lcd_disp_level@level& (0+255),w,b
  3093  00207A  0100               	movlb	0	; () banked
  3094  00207C  5DD9               	subwf	lcd_disp_level@i& (0+255),w,b
  3095  00207E  A0D8               	btfss	status,0,c
  3096  002080  D7F1               	goto	l8105
  3097  002082                     l8111:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;lcd.c: 125: }
  3101                           ;lcd.c: 126: for(;i<50;i++){
  3102  002082  0E31               	movlw	49
  3103  002084  0100               	movlb	0	; () banked
  3104  002086  65D9               	cpfsgt	lcd_disp_level@i& (0+255),b
  3105  002088  D001               	goto	l8115
  3106  00208A  0012               	return	
  3107  00208C                     l8115:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  3111  00208C  0E00               	movlw	0
  3112  00208E  0100               	movlb	0	; () banked
  3113  002090  6FD5               	movwf	lcd_disp_level_bar@show& (0+255),b
  3114  002092  0100               	movlb	0	; () banked
  3115  002094  51D9               	movf	lcd_disp_level@i& (0+255),w,b
  3116  002096  EC70  F000         	call	_lcd_disp_level_bar
  3117  00209A  0100               	movlb	0	; () banked
  3118  00209C  2BD9               	incf	lcd_disp_level@i& (0+255),f,b
  3119  00209E  D7F1               	goto	l8111
  3120  0020A0                     __end_of_lcd_disp_level:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           postdec1	equ	0xFE5
  3131                           plusw1	equ	0xFE3
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           plusw2	equ	0xFDB
  3136                           fsr2h	equ	0xFDA
  3137                           fsr2l	equ	0xFD9
  3138                           status	equ	0xFD8
  3139                           
  3140 ;; *************** function _lcd_disp_level_bar *****************
  3141 ;; Defined at:
  3142 ;;		line 46 in file "src/driver/lcd.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  bar             1    wreg     unsigned char 
  3145 ;;  show            1   16[BANK0 ] unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  bar             1   18[BANK0 ] unsigned char 
  3148 ;;  __bar           1   17[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        3 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    6
  3165 ;; This function calls:
  3166 ;;		_lcd_set_com_seg
  3167 ;; This function is called by:
  3168 ;;		_lcd_disp_level
  3169 ;;		_lcd_disp_level_off
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text10
  3174  0000E0                     __ptext10:
  3175                           	opt stack 0
  3176  0000E0                     _lcd_disp_level_bar:
  3177                           	opt stack 22
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;incstack = 0
  3181                           ;lcd_disp_level_bar@bar stored from wreg
  3182  0000E0  0100               	movlb	0	; () banked
  3183  0000E2  6FD7               	movwf	lcd_disp_level_bar@bar& (0+255),b
  3184                           
  3185                           ;lcd.c: 49: uint8_t __bar;
  3186                           ;lcd.c: 50: if(bar>49)return;
  3187  0000E4  0E31               	movlw	49
  3188  0000E6  0100               	movlb	0	; () banked
  3189  0000E8  65D7               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  3190  0000EA  D001               	goto	l7857
  3191  0000EC  0012               	return	
  3192  0000EE                     l7857:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;lcd.c: 51: __bar=49-bar;
  3196  0000EE  0100               	movlb	0	; () banked
  3197  0000F0  51D7               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  3198  0000F2  0800               	sublw	0
  3199  0000F4  0F31               	addlw	49
  3200  0000F6  0100               	movlb	0	; () banked
  3201  0000F8  6FD6               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  3202                           
  3203                           ;lcd.c: 52: switch(__bar){
  3204  0000FA  D1C2               	goto	l7961
  3205  0000FC                     l7859:
  3206                           
  3207                           ; BSR set to: 0
  3208  0000FC  0E2E               	movlw	46
  3209  0000FE  0100               	movlb	0	; () banked
  3210  000100  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3211  000102  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3212  000106  0E00               	movlw	0
  3213  000108  ECA9  F006         	call	_lcd_set_com_seg
  3214  00010C  0012               	return	
  3215  00010E                     l7861:
  3216  00010E  0E2E               	movlw	46
  3217  000110  0100               	movlb	0	; () banked
  3218  000112  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3219  000114  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3220  000118  0E01               	movlw	1
  3221  00011A  ECA9  F006         	call	_lcd_set_com_seg
  3222  00011E  0012               	return	
  3223  000120                     l7863:
  3224  000120  0E2E               	movlw	46
  3225  000122  0100               	movlb	0	; () banked
  3226  000124  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3227  000126  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3228  00012A  0E02               	movlw	2
  3229  00012C  ECA9  F006         	call	_lcd_set_com_seg
  3230  000130  0012               	return	
  3231  000132                     l7865:
  3232  000132  0E2E               	movlw	46
  3233  000134  0100               	movlb	0	; () banked
  3234  000136  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3235  000138  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3236  00013C  0E03               	movlw	3
  3237  00013E  ECA9  F006         	call	_lcd_set_com_seg
  3238  000142  0012               	return	
  3239  000144                     l7867:
  3240  000144  0E2F               	movlw	47
  3241  000146  0100               	movlb	0	; () banked
  3242  000148  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3243  00014A  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3244  00014E  0E03               	movlw	3
  3245  000150  ECA9  F006         	call	_lcd_set_com_seg
  3246  000154  0012               	return	
  3247  000156                     l7869:
  3248  000156  0E2F               	movlw	47
  3249  000158  0100               	movlb	0	; () banked
  3250  00015A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3251  00015C  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3252  000160  0E02               	movlw	2
  3253  000162  ECA9  F006         	call	_lcd_set_com_seg
  3254  000166  0012               	return	
  3255  000168                     l7871:
  3256  000168  0E2F               	movlw	47
  3257  00016A  0100               	movlb	0	; () banked
  3258  00016C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3259  00016E  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3260  000172  0E01               	movlw	1
  3261  000174  ECA9  F006         	call	_lcd_set_com_seg
  3262  000178  0012               	return	
  3263  00017A                     l7873:
  3264  00017A  0E2F               	movlw	47
  3265  00017C  0100               	movlb	0	; () banked
  3266  00017E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3267  000180  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3268  000184  0E00               	movlw	0
  3269  000186  ECA9  F006         	call	_lcd_set_com_seg
  3270  00018A  0012               	return	
  3271  00018C                     l7875:
  3272  00018C  0E1F               	movlw	31
  3273  00018E  0100               	movlb	0	; () banked
  3274  000190  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3275  000192  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3276  000196  0E00               	movlw	0
  3277  000198  ECA9  F006         	call	_lcd_set_com_seg
  3278  00019C  0012               	return	
  3279  00019E                     l7877:
  3280  00019E  0E1F               	movlw	31
  3281  0001A0  0100               	movlb	0	; () banked
  3282  0001A2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3283  0001A4  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3284  0001A8  0E01               	movlw	1
  3285  0001AA  ECA9  F006         	call	_lcd_set_com_seg
  3286  0001AE  0012               	return	
  3287  0001B0                     l7879:
  3288  0001B0  0E1F               	movlw	31
  3289  0001B2  0100               	movlb	0	; () banked
  3290  0001B4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3291  0001B6  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3292  0001BA  0E02               	movlw	2
  3293  0001BC  ECA9  F006         	call	_lcd_set_com_seg
  3294  0001C0  0012               	return	
  3295  0001C2                     l7881:
  3296  0001C2  0E1F               	movlw	31
  3297  0001C4  0100               	movlb	0	; () banked
  3298  0001C6  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3299  0001C8  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3300  0001CC  0E03               	movlw	3
  3301  0001CE  ECA9  F006         	call	_lcd_set_com_seg
  3302  0001D2  0012               	return	
  3303  0001D4                     l7883:
  3304  0001D4  0E00               	movlw	0
  3305  0001D6  0100               	movlb	0	; () banked
  3306  0001D8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3307  0001DA  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3308  0001DE  0E03               	movlw	3
  3309  0001E0  ECA9  F006         	call	_lcd_set_com_seg
  3310  0001E4  0012               	return	
  3311  0001E6                     l7885:
  3312  0001E6  0E00               	movlw	0
  3313  0001E8  0100               	movlb	0	; () banked
  3314  0001EA  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3315  0001EC  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3316  0001F0  0E02               	movlw	2
  3317  0001F2  ECA9  F006         	call	_lcd_set_com_seg
  3318  0001F6  0012               	return	
  3319  0001F8                     l7887:
  3320  0001F8  0E00               	movlw	0
  3321  0001FA  0100               	movlb	0	; () banked
  3322  0001FC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3323  0001FE  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3324  000202  0E01               	movlw	1
  3325  000204  ECA9  F006         	call	_lcd_set_com_seg
  3326  000208  0012               	return	
  3327  00020A                     l7889:
  3328  00020A  0E00               	movlw	0
  3329  00020C  0100               	movlb	0	; () banked
  3330  00020E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3331  000210  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3332  000214  0E00               	movlw	0
  3333  000216  ECA9  F006         	call	_lcd_set_com_seg
  3334  00021A  0012               	return	
  3335  00021C                     l7891:
  3336  00021C  0E01               	movlw	1
  3337  00021E  0100               	movlb	0	; () banked
  3338  000220  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3339  000222  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3340  000226  0E00               	movlw	0
  3341  000228  ECA9  F006         	call	_lcd_set_com_seg
  3342  00022C  0012               	return	
  3343  00022E                     l7893:
  3344  00022E  0E01               	movlw	1
  3345  000230  0100               	movlb	0	; () banked
  3346  000232  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3347  000234  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3348  000238  0E01               	movlw	1
  3349  00023A  ECA9  F006         	call	_lcd_set_com_seg
  3350  00023E  0012               	return	
  3351  000240                     l7895:
  3352  000240  0E01               	movlw	1
  3353  000242  0100               	movlb	0	; () banked
  3354  000244  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3355  000246  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3356  00024A  0E02               	movlw	2
  3357  00024C  ECA9  F006         	call	_lcd_set_com_seg
  3358  000250  0012               	return	
  3359  000252                     l7897:
  3360  000252  0E01               	movlw	1
  3361  000254  0100               	movlb	0	; () banked
  3362  000256  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3363  000258  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3364  00025C  0E03               	movlw	3
  3365  00025E  ECA9  F006         	call	_lcd_set_com_seg
  3366  000262  0012               	return	
  3367  000264                     l7899:
  3368  000264  0E02               	movlw	2
  3369  000266  0100               	movlb	0	; () banked
  3370  000268  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3371  00026A  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3372  00026E  0E03               	movlw	3
  3373  000270  ECA9  F006         	call	_lcd_set_com_seg
  3374  000274  0012               	return	
  3375  000276                     l7901:
  3376  000276  0E02               	movlw	2
  3377  000278  0100               	movlb	0	; () banked
  3378  00027A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3379  00027C  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3380  000280  0E02               	movlw	2
  3381  000282  ECA9  F006         	call	_lcd_set_com_seg
  3382  000286  0012               	return	
  3383  000288                     l7903:
  3384  000288  0E02               	movlw	2
  3385  00028A  0100               	movlb	0	; () banked
  3386  00028C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3387  00028E  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3388  000292  0E01               	movlw	1
  3389  000294  ECA9  F006         	call	_lcd_set_com_seg
  3390  000298  0012               	return	
  3391  00029A                     l7905:
  3392  00029A  0E02               	movlw	2
  3393  00029C  0100               	movlb	0	; () banked
  3394  00029E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3395  0002A0  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3396  0002A4  0E00               	movlw	0
  3397  0002A6  ECA9  F006         	call	_lcd_set_com_seg
  3398  0002AA  0012               	return	
  3399  0002AC                     l7907:
  3400  0002AC  0E03               	movlw	3
  3401  0002AE  0100               	movlb	0	; () banked
  3402  0002B0  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3403  0002B2  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3404  0002B6  0E00               	movlw	0
  3405  0002B8  ECA9  F006         	call	_lcd_set_com_seg
  3406  0002BC  0012               	return	
  3407  0002BE                     l7909:
  3408  0002BE  0E03               	movlw	3
  3409  0002C0  0100               	movlb	0	; () banked
  3410  0002C2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3411  0002C4  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3412  0002C8  0E01               	movlw	1
  3413  0002CA  ECA9  F006         	call	_lcd_set_com_seg
  3414  0002CE  0012               	return	
  3415  0002D0                     l7911:
  3416  0002D0  0E03               	movlw	3
  3417  0002D2  0100               	movlb	0	; () banked
  3418  0002D4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3419  0002D6  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3420  0002DA  0E02               	movlw	2
  3421  0002DC  ECA9  F006         	call	_lcd_set_com_seg
  3422  0002E0  0012               	return	
  3423  0002E2                     l7913:
  3424  0002E2  0E03               	movlw	3
  3425  0002E4  0100               	movlb	0	; () banked
  3426  0002E6  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3427  0002E8  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3428  0002EC  0E03               	movlw	3
  3429  0002EE  ECA9  F006         	call	_lcd_set_com_seg
  3430  0002F2  0012               	return	
  3431  0002F4                     l7915:
  3432  0002F4  0E04               	movlw	4
  3433  0002F6  0100               	movlb	0	; () banked
  3434  0002F8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3435  0002FA  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3436  0002FE  0E03               	movlw	3
  3437  000300  ECA9  F006         	call	_lcd_set_com_seg
  3438  000304  0012               	return	
  3439  000306                     l7917:
  3440  000306  0E04               	movlw	4
  3441  000308  0100               	movlb	0	; () banked
  3442  00030A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3443  00030C  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3444  000310  0E02               	movlw	2
  3445  000312  ECA9  F006         	call	_lcd_set_com_seg
  3446  000316  0012               	return	
  3447  000318                     l7919:
  3448  000318  0E04               	movlw	4
  3449  00031A  0100               	movlb	0	; () banked
  3450  00031C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3451  00031E  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3452  000322  0E01               	movlw	1
  3453  000324  ECA9  F006         	call	_lcd_set_com_seg
  3454  000328  0012               	return	
  3455  00032A                     l7921:
  3456  00032A  0E04               	movlw	4
  3457  00032C  0100               	movlb	0	; () banked
  3458  00032E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3459  000330  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3460  000334  0E00               	movlw	0
  3461  000336  ECA9  F006         	call	_lcd_set_com_seg
  3462  00033A  0012               	return	
  3463  00033C                     l7923:
  3464  00033C  0E05               	movlw	5
  3465  00033E  0100               	movlb	0	; () banked
  3466  000340  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3467  000342  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3468  000346  0E00               	movlw	0
  3469  000348  ECA9  F006         	call	_lcd_set_com_seg
  3470  00034C  0012               	return	
  3471  00034E                     l7925:
  3472  00034E  0E05               	movlw	5
  3473  000350  0100               	movlb	0	; () banked
  3474  000352  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3475  000354  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3476  000358  0E01               	movlw	1
  3477  00035A  ECA9  F006         	call	_lcd_set_com_seg
  3478  00035E  0012               	return	
  3479  000360                     l7927:
  3480  000360  0E05               	movlw	5
  3481  000362  0100               	movlb	0	; () banked
  3482  000364  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3483  000366  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3484  00036A  0E02               	movlw	2
  3485  00036C  ECA9  F006         	call	_lcd_set_com_seg
  3486  000370  0012               	return	
  3487  000372                     l7929:
  3488  000372  0E05               	movlw	5
  3489  000374  0100               	movlb	0	; () banked
  3490  000376  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3491  000378  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3492  00037C  0E03               	movlw	3
  3493  00037E  ECA9  F006         	call	_lcd_set_com_seg
  3494  000382  0012               	return	
  3495  000384                     l7931:
  3496  000384  0E06               	movlw	6
  3497  000386  0100               	movlb	0	; () banked
  3498  000388  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3499  00038A  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3500  00038E  0E03               	movlw	3
  3501  000390  ECA9  F006         	call	_lcd_set_com_seg
  3502  000394  0012               	return	
  3503  000396                     l7933:
  3504  000396  0E06               	movlw	6
  3505  000398  0100               	movlb	0	; () banked
  3506  00039A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3507  00039C  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3508  0003A0  0E02               	movlw	2
  3509  0003A2  ECA9  F006         	call	_lcd_set_com_seg
  3510  0003A6  0012               	return	
  3511  0003A8                     l7935:
  3512  0003A8  0E06               	movlw	6
  3513  0003AA  0100               	movlb	0	; () banked
  3514  0003AC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3515  0003AE  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3516  0003B2  0E01               	movlw	1
  3517  0003B4  ECA9  F006         	call	_lcd_set_com_seg
  3518  0003B8  0012               	return	
  3519  0003BA                     l7937:
  3520  0003BA  0E06               	movlw	6
  3521  0003BC  0100               	movlb	0	; () banked
  3522  0003BE  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3523  0003C0  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3524  0003C4  0E00               	movlw	0
  3525  0003C6  ECA9  F006         	call	_lcd_set_com_seg
  3526  0003CA  0012               	return	
  3527  0003CC                     l7939:
  3528  0003CC  0E07               	movlw	7
  3529  0003CE  0100               	movlb	0	; () banked
  3530  0003D0  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3531  0003D2  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3532  0003D6  0E00               	movlw	0
  3533  0003D8  ECA9  F006         	call	_lcd_set_com_seg
  3534  0003DC  0012               	return	
  3535  0003DE                     l7941:
  3536  0003DE  0E07               	movlw	7
  3537  0003E0  0100               	movlb	0	; () banked
  3538  0003E2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3539  0003E4  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3540  0003E8  0E01               	movlw	1
  3541  0003EA  ECA9  F006         	call	_lcd_set_com_seg
  3542  0003EE  0012               	return	
  3543  0003F0                     l7943:
  3544  0003F0  0E07               	movlw	7
  3545  0003F2  0100               	movlb	0	; () banked
  3546  0003F4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3547  0003F6  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3548  0003FA  0E02               	movlw	2
  3549  0003FC  ECA9  F006         	call	_lcd_set_com_seg
  3550  000400  0012               	return	
  3551  000402                     l7945:
  3552  000402  0E07               	movlw	7
  3553  000404  0100               	movlb	0	; () banked
  3554  000406  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3555  000408  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3556  00040C  0E03               	movlw	3
  3557  00040E  ECA9  F006         	call	_lcd_set_com_seg
  3558  000412  0012               	return	
  3559  000414                     l7947:
  3560  000414  0E21               	movlw	33
  3561  000416  0100               	movlb	0	; () banked
  3562  000418  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3563  00041A  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3564  00041E  0E03               	movlw	3
  3565  000420  ECA9  F006         	call	_lcd_set_com_seg
  3566  000424  0012               	return	
  3567  000426                     l7949:
  3568  000426  0E21               	movlw	33
  3569  000428  0100               	movlb	0	; () banked
  3570  00042A  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3571  00042C  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3572  000430  0E02               	movlw	2
  3573  000432  ECA9  F006         	call	_lcd_set_com_seg
  3574  000436  0012               	return	
  3575  000438                     l7951:
  3576  000438  0E21               	movlw	33
  3577  00043A  0100               	movlb	0	; () banked
  3578  00043C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3579  00043E  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3580  000442  0E01               	movlw	1
  3581  000444  ECA9  F006         	call	_lcd_set_com_seg
  3582  000448  0012               	return	
  3583  00044A                     l7953:
  3584  00044A  0E21               	movlw	33
  3585  00044C  0100               	movlb	0	; () banked
  3586  00044E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3587  000450  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3588  000454  0E00               	movlw	0
  3589  000456  ECA9  F006         	call	_lcd_set_com_seg
  3590  00045A  0012               	return	
  3591  00045C                     l7955:
  3592  00045C  0E22               	movlw	34
  3593  00045E  0100               	movlb	0	; () banked
  3594  000460  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3595  000462  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3596  000466  0E00               	movlw	0
  3597  000468  ECA9  F006         	call	_lcd_set_com_seg
  3598  00046C  0012               	return	
  3599  00046E                     l7957:
  3600  00046E  0E22               	movlw	34
  3601  000470  0100               	movlb	0	; () banked
  3602  000472  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  3603  000474  C0D5  F0CE         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3604  000478  0E01               	movlw	1
  3605  00047A  ECA9  F006         	call	_lcd_set_com_seg
  3606                           
  3607                           ;lcd.c: 115: }
  3608  00047E  0012               	return	
  3609  000480                     l7961:
  3610  000480  0100               	movlb	0	; () banked
  3611  000482  51D6               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  3612                           
  3613                           ; Switch size 1, requested type "space"
  3614                           ; Number of cases is 50, Range of values is 0 to 49
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte          151    76 (average)
  3618                           ;	Chosen strategy is simple_byte
  3619  000484  0A00               	xorlw	0	; case 0
  3620  000486  B4D8               	btfsc	status,2,c
  3621  000488  D639               	goto	l7859
  3622  00048A  0A01               	xorlw	1	; case 1
  3623  00048C  B4D8               	btfsc	status,2,c
  3624  00048E  D63F               	goto	l7861
  3625  000490  0A03               	xorlw	3	; case 2
  3626  000492  B4D8               	btfsc	status,2,c
  3627  000494  D645               	goto	l7863
  3628  000496  0A01               	xorlw	1	; case 3
  3629  000498  B4D8               	btfsc	status,2,c
  3630  00049A  D64B               	goto	l7865
  3631  00049C  0A07               	xorlw	7	; case 4
  3632  00049E  B4D8               	btfsc	status,2,c
  3633  0004A0  D651               	goto	l7867
  3634  0004A2  0A01               	xorlw	1	; case 5
  3635  0004A4  B4D8               	btfsc	status,2,c
  3636  0004A6  D657               	goto	l7869
  3637  0004A8  0A03               	xorlw	3	; case 6
  3638  0004AA  B4D8               	btfsc	status,2,c
  3639  0004AC  D65D               	goto	l7871
  3640  0004AE  0A01               	xorlw	1	; case 7
  3641  0004B0  B4D8               	btfsc	status,2,c
  3642  0004B2  D663               	goto	l7873
  3643  0004B4  0A0F               	xorlw	15	; case 8
  3644  0004B6  B4D8               	btfsc	status,2,c
  3645  0004B8  D669               	goto	l7875
  3646  0004BA  0A01               	xorlw	1	; case 9
  3647  0004BC  B4D8               	btfsc	status,2,c
  3648  0004BE  D66F               	goto	l7877
  3649  0004C0  0A03               	xorlw	3	; case 10
  3650  0004C2  B4D8               	btfsc	status,2,c
  3651  0004C4  D675               	goto	l7879
  3652  0004C6  0A01               	xorlw	1	; case 11
  3653  0004C8  B4D8               	btfsc	status,2,c
  3654  0004CA  D67B               	goto	l7881
  3655  0004CC  0A07               	xorlw	7	; case 12
  3656  0004CE  B4D8               	btfsc	status,2,c
  3657  0004D0  D681               	goto	l7883
  3658  0004D2  0A01               	xorlw	1	; case 13
  3659  0004D4  B4D8               	btfsc	status,2,c
  3660  0004D6  D687               	goto	l7885
  3661  0004D8  0A03               	xorlw	3	; case 14
  3662  0004DA  B4D8               	btfsc	status,2,c
  3663  0004DC  D68D               	goto	l7887
  3664  0004DE  0A01               	xorlw	1	; case 15
  3665  0004E0  B4D8               	btfsc	status,2,c
  3666  0004E2  D693               	goto	l7889
  3667  0004E4  0A1F               	xorlw	31	; case 16
  3668  0004E6  B4D8               	btfsc	status,2,c
  3669  0004E8  D699               	goto	l7891
  3670  0004EA  0A01               	xorlw	1	; case 17
  3671  0004EC  B4D8               	btfsc	status,2,c
  3672  0004EE  D69F               	goto	l7893
  3673  0004F0  0A03               	xorlw	3	; case 18
  3674  0004F2  B4D8               	btfsc	status,2,c
  3675  0004F4  D6A5               	goto	l7895
  3676  0004F6  0A01               	xorlw	1	; case 19
  3677  0004F8  B4D8               	btfsc	status,2,c
  3678  0004FA  D6AB               	goto	l7897
  3679  0004FC  0A07               	xorlw	7	; case 20
  3680  0004FE  B4D8               	btfsc	status,2,c
  3681  000500  D6B1               	goto	l7899
  3682  000502  0A01               	xorlw	1	; case 21
  3683  000504  B4D8               	btfsc	status,2,c
  3684  000506  D6B7               	goto	l7901
  3685  000508  0A03               	xorlw	3	; case 22
  3686  00050A  B4D8               	btfsc	status,2,c
  3687  00050C  D6BD               	goto	l7903
  3688  00050E  0A01               	xorlw	1	; case 23
  3689  000510  B4D8               	btfsc	status,2,c
  3690  000512  D6C3               	goto	l7905
  3691  000514  0A0F               	xorlw	15	; case 24
  3692  000516  B4D8               	btfsc	status,2,c
  3693  000518  D6C9               	goto	l7907
  3694  00051A  0A01               	xorlw	1	; case 25
  3695  00051C  B4D8               	btfsc	status,2,c
  3696  00051E  D6CF               	goto	l7909
  3697  000520  0A03               	xorlw	3	; case 26
  3698  000522  B4D8               	btfsc	status,2,c
  3699  000524  D6D5               	goto	l7911
  3700  000526  0A01               	xorlw	1	; case 27
  3701  000528  B4D8               	btfsc	status,2,c
  3702  00052A  D6DB               	goto	l7913
  3703  00052C  0A07               	xorlw	7	; case 28
  3704  00052E  B4D8               	btfsc	status,2,c
  3705  000530  D6E1               	goto	l7915
  3706  000532  0A01               	xorlw	1	; case 29
  3707  000534  B4D8               	btfsc	status,2,c
  3708  000536  D6E7               	goto	l7917
  3709  000538  0A03               	xorlw	3	; case 30
  3710  00053A  B4D8               	btfsc	status,2,c
  3711  00053C  D6ED               	goto	l7919
  3712  00053E  0A01               	xorlw	1	; case 31
  3713  000540  B4D8               	btfsc	status,2,c
  3714  000542  D6F3               	goto	l7921
  3715  000544  0A3F               	xorlw	63	; case 32
  3716  000546  B4D8               	btfsc	status,2,c
  3717  000548  D6F9               	goto	l7923
  3718  00054A  0A01               	xorlw	1	; case 33
  3719  00054C  B4D8               	btfsc	status,2,c
  3720  00054E  D6FF               	goto	l7925
  3721  000550  0A03               	xorlw	3	; case 34
  3722  000552  B4D8               	btfsc	status,2,c
  3723  000554  D705               	goto	l7927
  3724  000556  0A01               	xorlw	1	; case 35
  3725  000558  B4D8               	btfsc	status,2,c
  3726  00055A  D70B               	goto	l7929
  3727  00055C  0A07               	xorlw	7	; case 36
  3728  00055E  B4D8               	btfsc	status,2,c
  3729  000560  D711               	goto	l7931
  3730  000562  0A01               	xorlw	1	; case 37
  3731  000564  B4D8               	btfsc	status,2,c
  3732  000566  D717               	goto	l7933
  3733  000568  0A03               	xorlw	3	; case 38
  3734  00056A  B4D8               	btfsc	status,2,c
  3735  00056C  D71D               	goto	l7935
  3736  00056E  0A01               	xorlw	1	; case 39
  3737  000570  B4D8               	btfsc	status,2,c
  3738  000572  D723               	goto	l7937
  3739  000574  0A0F               	xorlw	15	; case 40
  3740  000576  B4D8               	btfsc	status,2,c
  3741  000578  D729               	goto	l7939
  3742  00057A  0A01               	xorlw	1	; case 41
  3743  00057C  B4D8               	btfsc	status,2,c
  3744  00057E  D72F               	goto	l7941
  3745  000580  0A03               	xorlw	3	; case 42
  3746  000582  B4D8               	btfsc	status,2,c
  3747  000584  D735               	goto	l7943
  3748  000586  0A01               	xorlw	1	; case 43
  3749  000588  B4D8               	btfsc	status,2,c
  3750  00058A  D73B               	goto	l7945
  3751  00058C  0A07               	xorlw	7	; case 44
  3752  00058E  B4D8               	btfsc	status,2,c
  3753  000590  D741               	goto	l7947
  3754  000592  0A01               	xorlw	1	; case 45
  3755  000594  B4D8               	btfsc	status,2,c
  3756  000596  D747               	goto	l7949
  3757  000598  0A03               	xorlw	3	; case 46
  3758  00059A  B4D8               	btfsc	status,2,c
  3759  00059C  D74D               	goto	l7951
  3760  00059E  0A01               	xorlw	1	; case 47
  3761  0005A0  B4D8               	btfsc	status,2,c
  3762  0005A2  D753               	goto	l7953
  3763  0005A4  0A1F               	xorlw	31	; case 48
  3764  0005A6  B4D8               	btfsc	status,2,c
  3765  0005A8  D759               	goto	l7955
  3766  0005AA  0A01               	xorlw	1	; case 49
  3767  0005AC  A4D8               	btfss	status,2,c
  3768  0005AE  0012               	return	
  3769  0005B0  D75E               	goto	l7957
  3770  0005B2                     __end_of_lcd_disp_level_bar:
  3771                           	opt stack 0
  3772                           tblptru	equ	0xFF8
  3773                           tblptrh	equ	0xFF7
  3774                           tblptrl	equ	0xFF6
  3775                           tablat	equ	0xFF5
  3776                           prodh	equ	0xFF4
  3777                           prodl	equ	0xFF3
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           postdec1	equ	0xFE5
  3781                           plusw1	equ	0xFE3
  3782                           fsr1h	equ	0xFE2
  3783                           fsr1l	equ	0xFE1
  3784                           indf2	equ	0xFDF
  3785                           plusw2	equ	0xFDB
  3786                           fsr2h	equ	0xFDA
  3787                           fsr2l	equ	0xFD9
  3788                           status	equ	0xFD8
  3789                           
  3790 ;; *************** function _soc_init *****************
  3791 ;; Defined at:
  3792 ;;		line 2 in file "src/soc/soc.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        0 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    6
  3813 ;; This function calls:
  3814 ;;		_rtc_init
  3815 ;;		_sys_ticker_init
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text11
  3822  002896                     __ptext11:
  3823                           	opt stack 0
  3824  002896                     _soc_init:
  3825                           	opt stack 24
  3826                           
  3827                           ;soc.c: 5: sys_ticker_init();
  3828                           
  3829                           ;incstack = 0
  3830  002896  EC53  F014         	call	_sys_ticker_init	;wreg free
  3831                           
  3832                           ;soc.c: 6: rtc_init();
  3833  00289A  ECC7  F011         	call	_rtc_init	;wreg free
  3834                           
  3835                           ;soc.c: 8: INTCONbits.PEIE = 1;
  3836  00289E  8CF2               	bsf	intcon,6,c	;volatile
  3837                           
  3838                           ;soc.c: 9: INTCONbits.GIE = 1;
  3839  0028A0  8EF2               	bsf	intcon,7,c	;volatile
  3840                           
  3841                           ;soc.c: 11: RCONbits.IPEN=0;
  3842  0028A2  9ED0               	bcf	4048,7,c	;volatile
  3843  0028A4  0012               	return		;funcret
  3844  0028A6                     __end_of_soc_init:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           prodh	equ	0xFF4
  3851                           prodl	equ	0xFF3
  3852                           intcon	equ	0xFF2
  3853                           postinc0	equ	0xFEE
  3854                           wreg	equ	0xFE8
  3855                           postdec1	equ	0xFE5
  3856                           plusw1	equ	0xFE3
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           plusw2	equ	0xFDB
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function _sys_ticker_init *****************
  3866 ;; Defined at:
  3867 ;;		line 25 in file "src/soc/ticker.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_soc_init
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text12
  3896  0028A6                     __ptext12:
  3897                           	opt stack 0
  3898  0028A6                     _sys_ticker_init:
  3899                           	opt stack 25
  3900                           
  3901                           ;ticker.c: 28: PR2=(uint8_t)((11059200/4/16/16/100));
  3902                           
  3903                           ;incstack = 0
  3904  0028A6  0E6C               	movlw	108
  3905  0028A8  6ECB               	movwf	4043,c	;volatile
  3906                           
  3907                           ;ticker.c: 29: IPR1bits.TMR2IP=1;
  3908  0028AA  829F               	bsf	3999,1,c	;volatile
  3909                           
  3910                           ;ticker.c: 30: PIR1bits.TMR2IF=0;
  3911  0028AC  929E               	bcf	3998,1,c	;volatile
  3912                           
  3913                           ;ticker.c: 31: PIE1bits.TMR2IE=1;
  3914  0028AE  829D               	bsf	3997,1,c	;volatile
  3915                           
  3916                           ;ticker.c: 33: T2CON=0x7f;
  3917  0028B0  0E7F               	movlw	127
  3918  0028B2  6ECA               	movwf	4042,c	;volatile
  3919  0028B4  0012               	return		;funcret
  3920  0028B6                     __end_of_sys_ticker_init:
  3921                           	opt stack 0
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           plusw1	equ	0xFE3
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           plusw2	equ	0xFDB
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function _rtc_init *****************
  3942 ;; Defined at:
  3943 ;;		line 25 in file "src/soc/rtc.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    5
  3964 ;; This function calls:
  3965 ;;		_rtcc_reg_wr_disable
  3966 ;;		_rtcc_reg_wr_enable
  3967 ;; This function is called by:
  3968 ;;		_soc_init
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text13
  3973  00238E                     __ptext13:
  3974                           	opt stack 0
  3975  00238E                     _rtc_init:
  3976                           	opt stack 24
  3977                           
  3978                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  3979                           
  3980                           ;incstack = 0
  3981  00238E  010F               	movlb	15	; () banked
  3982  002390  9554               	bcf	84,2,b	;volatile
  3983                           
  3984                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  3985  002392  010F               	movlb	15	; () banked
  3986  002394  8354               	bsf	84,1,b	;volatile
  3987                           
  3988                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  3989  002396  010F               	movlb	15	; () banked
  3990  002398  955F               	bcf	95,2,b	;volatile
  3991                           
  3992                           ;rtc.c: 31: ALRMRPT=0xff;
  3993  00239A  010F               	movlb	15	; () banked
  3994  00239C  695A               	setf	90,b	;volatile
  3995                           
  3996                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  3997  00239E  010F               	movlb	15	; () banked
  3998  0023A0  8F5B               	bsf	91,7,b	;volatile
  3999                           
  4000                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4001  0023A2  010F               	movlb	15	; () banked
  4002  0023A4  8D5B               	bsf	91,6,b	;volatile
  4003                           
  4004                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4005  0023A6  010F               	movlb	15	; () banked
  4006  0023A8  955B               	bcf	91,2,b	;volatile
  4007  0023AA  975B               	bcf	91,3,b	;volatile
  4008  0023AC  995B               	bcf	91,4,b	;volatile
  4009  0023AE  9B5B               	bcf	91,5,b	;volatile
  4010                           
  4011                           ;rtc.c: 37: __nop();
  4012  0023B0  F000               	nop	
  4013                           
  4014                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4015  0023B2  EC62  F014         	call	_rtcc_reg_wr_enable	;wreg free
  4016                           
  4017                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4018  0023B6  010F               	movlb	15	; () banked
  4019  0023B8  8F5F               	bsf	95,7,b	;volatile
  4020                           
  4021                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4022  0023BA  EC68  F014         	call	_rtcc_reg_wr_disable	;wreg free
  4023                           
  4024                           ;rtc.c: 43: __nop();
  4025  0023BE  F000               	nop	
  4026                           
  4027                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4028  0023C0  80A5               	bsf	4005,0,c	;volatile
  4029                           
  4030                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4031  0023C2  90A4               	bcf	4004,0,c	;volatile
  4032                           
  4033                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4034  0023C4  80A3               	bsf	4003,0,c	;volatile
  4035                           
  4036                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4037  0023C6  86CD               	bsf	4045,3,c	;volatile
  4038                           
  4039                           ;rtc.c: 51: __nop();
  4040  0023C8  F000               	nop	
  4041  0023CA  0012               	return		;funcret
  4042  0023CC                     __end_of_rtc_init:
  4043                           	opt stack 0
  4044                           tblptru	equ	0xFF8
  4045                           tblptrh	equ	0xFF7
  4046                           tblptrl	equ	0xFF6
  4047                           tablat	equ	0xFF5
  4048                           prodh	equ	0xFF4
  4049                           prodl	equ	0xFF3
  4050                           intcon	equ	0xFF2
  4051                           postinc0	equ	0xFEE
  4052                           wreg	equ	0xFE8
  4053                           postdec1	equ	0xFE5
  4054                           plusw1	equ	0xFE3
  4055                           fsr1h	equ	0xFE2
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           plusw2	equ	0xFDB
  4059                           fsr2h	equ	0xFDA
  4060                           fsr2l	equ	0xFD9
  4061                           status	equ	0xFD8
  4062                           
  4063 ;; *************** function _rtc_set *****************
  4064 ;; Defined at:
  4065 ;;		line 54 in file "src/soc/rtc.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4068 ;;		 -> defalutRtc(7), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  stp             2    2[BANK0 ] PTR struct .
  4071 ;;		 -> defalutRtc(7), 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        4 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    5
  4088 ;; This function calls:
  4089 ;;		_rtcc_reg_wr_disable
  4090 ;;		_rtcc_reg_wr_enable
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text14
  4097  001052                     __ptext14:
  4098                           	opt stack 0
  4099  001052                     _rtc_set:
  4100                           	opt stack 25
  4101                           
  4102                           ;rtc.c: 56: st_RtcDef* stp;
  4103                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4104                           
  4105                           ;incstack = 0
  4106  001052  C0C5  F0C7         	movff	rtc_set@rtc,rtc_set@stp
  4107  001056  C0C6  F0C8         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4108                           
  4109                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4110  00105A  EC62  F014         	call	_rtcc_reg_wr_enable	;wreg free
  4111                           
  4112                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4113  00105E  0EFC               	movlw	-4
  4114  001060  010F               	movlb	15	; () banked
  4115  001062  175F               	andwf	95,f,b	;volatile
  4116                           
  4117                           ; BSR set to: 15
  4118                           ;rtc.c: 61: RTCVALL=stp->second;
  4119  001064  0100               	movlb	0	; () banked
  4120  001066  EE20 F005          	lfsr	2,5
  4121  00106A  51C7               	movf	rtc_set@stp& (0+255),w,b
  4122  00106C  26D9               	addwf	fsr2l,f,c
  4123  00106E  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4124  001070  22DA               	addwfc	fsr2h,f,c
  4125  001072  50DF               	movf	indf2,w,c
  4126  001074  010F               	movlb	15	; () banked
  4127  001076  6F5C               	movwf	92,b	;volatile
  4128                           
  4129                           ; BSR set to: 15
  4130                           ;rtc.c: 62: RTCVALH=stp->minute;
  4131  001078  0100               	movlb	0	; () banked
  4132  00107A  EE20 F004          	lfsr	2,4
  4133  00107E  51C7               	movf	rtc_set@stp& (0+255),w,b
  4134  001080  26D9               	addwf	fsr2l,f,c
  4135  001082  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4136  001084  22DA               	addwfc	fsr2h,f,c
  4137  001086  50DF               	movf	indf2,w,c
  4138  001088  010F               	movlb	15	; () banked
  4139  00108A  6F5D               	movwf	93,b	;volatile
  4140                           
  4141                           ; BSR set to: 15
  4142                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4143  00108C  010F               	movlb	15	; () banked
  4144  00108E  515F               	movf	95,w,b	;volatile
  4145  001090  0BFC               	andlw	-4
  4146  001092  0901               	iorlw	1
  4147  001094  6F5F               	movwf	95,b	;volatile
  4148                           
  4149                           ; BSR set to: 15
  4150                           ;rtc.c: 64: RTCVALL=stp->hour;
  4151  001096  0100               	movlb	0	; () banked
  4152  001098  EE20 F003          	lfsr	2,3
  4153  00109C  51C7               	movf	rtc_set@stp& (0+255),w,b
  4154  00109E  26D9               	addwf	fsr2l,f,c
  4155  0010A0  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4156  0010A2  22DA               	addwfc	fsr2h,f,c
  4157  0010A4  50DF               	movf	indf2,w,c
  4158  0010A6  010F               	movlb	15	; () banked
  4159  0010A8  6F5C               	movwf	92,b	;volatile
  4160                           
  4161                           ; BSR set to: 15
  4162                           ;rtc.c: 65: RTCVALH=stp->day;
  4163  0010AA  0100               	movlb	0	; () banked
  4164  0010AC  EE20 F006          	lfsr	2,6
  4165  0010B0  51C7               	movf	rtc_set@stp& (0+255),w,b
  4166  0010B2  26D9               	addwf	fsr2l,f,c
  4167  0010B4  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4168  0010B6  22DA               	addwfc	fsr2h,f,c
  4169  0010B8  50DF               	movf	indf2,w,c
  4170  0010BA  010F               	movlb	15	; () banked
  4171  0010BC  6F5D               	movwf	93,b	;volatile
  4172                           
  4173                           ; BSR set to: 15
  4174                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4175  0010BE  010F               	movlb	15	; () banked
  4176  0010C0  515F               	movf	95,w,b	;volatile
  4177  0010C2  0BFC               	andlw	-4
  4178  0010C4  0902               	iorlw	2
  4179  0010C6  6F5F               	movwf	95,b	;volatile
  4180                           
  4181                           ; BSR set to: 15
  4182                           ;rtc.c: 67: RTCVALL=stp->date;
  4183  0010C8  0100               	movlb	0	; () banked
  4184  0010CA  EE20 F002          	lfsr	2,2
  4185  0010CE  51C7               	movf	rtc_set@stp& (0+255),w,b
  4186  0010D0  26D9               	addwf	fsr2l,f,c
  4187  0010D2  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4188  0010D4  22DA               	addwfc	fsr2h,f,c
  4189  0010D6  50DF               	movf	indf2,w,c
  4190  0010D8  010F               	movlb	15	; () banked
  4191  0010DA  6F5C               	movwf	92,b	;volatile
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;rtc.c: 68: RTCVALH=stp->month;
  4195  0010DC  0100               	movlb	0	; () banked
  4196  0010DE  EE20 F001          	lfsr	2,1
  4197  0010E2  51C7               	movf	rtc_set@stp& (0+255),w,b
  4198  0010E4  26D9               	addwf	fsr2l,f,c
  4199  0010E6  51C8               	movf	(rtc_set@stp+1)& (0+255),w,b
  4200  0010E8  22DA               	addwfc	fsr2h,f,c
  4201  0010EA  50DF               	movf	indf2,w,c
  4202  0010EC  010F               	movlb	15	; () banked
  4203  0010EE  6F5D               	movwf	93,b	;volatile
  4204                           
  4205                           ; BSR set to: 15
  4206                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4207  0010F0  0E03               	movlw	3
  4208  0010F2  010F               	movlb	15	; () banked
  4209  0010F4  135F               	iorwf	95,f,b	;volatile
  4210                           
  4211                           ; BSR set to: 15
  4212                           ;rtc.c: 70: RTCVALL=stp->year;
  4213  0010F6  C0C7  FFD9         	movff	rtc_set@stp,fsr2l
  4214  0010FA  C0C8  FFDA         	movff	rtc_set@stp+1,fsr2h
  4215  0010FE  50DF               	movf	indf2,w,c
  4216  001100  010F               	movlb	15	; () banked
  4217  001102  6F5C               	movwf	92,b	;volatile
  4218                           
  4219                           ; BSR set to: 15
  4220                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4221  001104  EC68  F014         	call	_rtcc_reg_wr_disable	;wreg free
  4222  001108  0012               	return		;funcret
  4223  00110A                     __end_of_rtc_set:
  4224                           	opt stack 0
  4225                           tblptru	equ	0xFF8
  4226                           tblptrh	equ	0xFF7
  4227                           tblptrl	equ	0xFF6
  4228                           tablat	equ	0xFF5
  4229                           prodh	equ	0xFF4
  4230                           prodl	equ	0xFF3
  4231                           intcon	equ	0xFF2
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           postdec1	equ	0xFE5
  4235                           plusw1	equ	0xFE3
  4236                           fsr1h	equ	0xFE2
  4237                           fsr1l	equ	0xFE1
  4238                           indf2	equ	0xFDF
  4239                           plusw2	equ	0xFDB
  4240                           fsr2h	equ	0xFDA
  4241                           fsr2l	equ	0xFD9
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _rtcc_reg_wr_enable *****************
  4245 ;; Defined at:
  4246 ;;		line 9 in file "src/soc/rtc.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		None
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    4
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_rtc_init
  4271 ;;		_rtc_set
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text15
  4276  0028C4                     __ptext15:
  4277                           	opt stack 0
  4278  0028C4                     _rtcc_reg_wr_enable:
  4279                           	opt stack 24
  4280                           
  4281                           ;incstack = 0
  4282  0028C4  0E55               	movlw	85	;# 
  4283  0028C6  6EA7               	movwf	4007,c	;# 
  4284  0028C8  0EAA               	movlw	170	;# 
  4285  0028CA  6EA7               	movwf	4007,c	;# 
  4286  0028CC  8B5F               	bsf	3935,5,b	;# 
  4287  0028CE  0012               	return		;funcret
  4288  0028D0                     __end_of_rtcc_reg_wr_enable:
  4289                           	opt stack 0
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           prodh	equ	0xFF4
  4295                           prodl	equ	0xFF3
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           postdec1	equ	0xFE5
  4300                           plusw1	equ	0xFE3
  4301                           fsr1h	equ	0xFE2
  4302                           fsr1l	equ	0xFE1
  4303                           indf2	equ	0xFDF
  4304                           plusw2	equ	0xFDB
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _rtcc_reg_wr_disable *****************
  4310 ;; Defined at:
  4311 ;;		line 17 in file "src/soc/rtc.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		None
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:        0 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    4
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_rtc_init
  4336 ;;		_rtc_set
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text16
  4341  0028D0                     __ptext16:
  4342                           	opt stack 0
  4343  0028D0                     _rtcc_reg_wr_disable:
  4344                           	opt stack 24
  4345                           
  4346                           ;incstack = 0
  4347  0028D0  0E55               	movlw	85	;# 
  4348  0028D2  6EA7               	movwf	4007,c	;# 
  4349  0028D4  0EAA               	movlw	170	;# 
  4350  0028D6  6EA7               	movwf	4007,c	;# 
  4351  0028D8  9B5F               	bcf	3935,5,b	;# 
  4352  0028DA  0012               	return		;funcret
  4353  0028DC                     __end_of_rtcc_reg_wr_disable:
  4354                           	opt stack 0
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           plusw1	equ	0xFE3
  4366                           fsr1h	equ	0xFE2
  4367                           fsr1l	equ	0xFE1
  4368                           indf2	equ	0xFDF
  4369                           plusw2	equ	0xFDB
  4370                           fsr2h	equ	0xFDA
  4371                           fsr2l	equ	0xFD9
  4372                           status	equ	0xFD8
  4373                           
  4374 ;; *************** function _lcd_init *****************
  4375 ;; Defined at:
  4376 ;;		line 628 in file "src/driver/lcd.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    6
  4397 ;; This function calls:
  4398 ;;		_lcd_bl_init
  4399 ;;		_lcd_config
  4400 ;; This function is called by:
  4401 ;;		_main
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text17
  4406  0028B6                     __ptext17:
  4407                           	opt stack 0
  4408  0028B6                     _lcd_init:
  4409                           	opt stack 24
  4410                           
  4411                           ;lcd.c: 630: lcd_config();
  4412                           
  4413                           ;incstack = 0
  4414  0028B6  EC7D  F013         	call	_lcd_config	;wreg free
  4415                           
  4416                           ;lcd.c: 631: lcd_bl_init();
  4417  0028BA  EC6E  F014         	call	_lcd_bl_init	;wreg free
  4418                           
  4419                           ;lcd.c: 632: LCDCON=0x8f;;
  4420  0028BE  0E8F               	movlw	143
  4421  0028C0  6EA8               	movwf	4008,c	;volatile
  4422  0028C2  0012               	return		;funcret
  4423  0028C4                     __end_of_lcd_init:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           postinc0	equ	0xFEE
  4433                           wreg	equ	0xFE8
  4434                           postdec1	equ	0xFE5
  4435                           plusw1	equ	0xFE3
  4436                           fsr1h	equ	0xFE2
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           plusw2	equ	0xFDB
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8
  4443                           
  4444 ;; *************** function _lcd_config *****************
  4445 ;; Defined at:
  4446 ;;		line 588 in file "src/driver/lcd.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    5
  4467 ;; This function calls:
  4468 ;;		_lcd_disp_all
  4469 ;; This function is called by:
  4470 ;;		_lcd_init
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text18
  4475  0026FA                     __ptext18:
  4476                           	opt stack 0
  4477  0026FA                     _lcd_config:
  4478                           	opt stack 24
  4479                           
  4480                           ;lcd.c: 594: LCDREG=0x3f;
  4481                           
  4482                           ;incstack = 0
  4483  0026FA  0E3F               	movlw	63
  4484  0026FC  6ED2               	movwf	4050,c	;volatile
  4485                           
  4486                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  4487  0026FE  9EAA               	bcf	4010,7,c	;volatile
  4488                           
  4489                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  4490  002700  9CAA               	bcf	4010,6,c	;volatile
  4491                           
  4492                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  4493  002702  96AA               	bcf	4010,3,c	;volatile
  4494                           
  4495                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  4496  002704  84AA               	bsf	4010,2,c	;volatile
  4497                           
  4498                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  4499  002706  92AA               	bcf	4010,1,c	;volatile
  4500                           
  4501                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  4502  002708  90AA               	bcf	4010,0,c	;volatile
  4503                           
  4504                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  4505  00270A  68A9               	setf	4009,c	;volatile
  4506                           
  4507                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  4508  00270C  0EE0               	movlw	224
  4509  00270E  6EB6               	movwf	4022,c	;volatile
  4510                           
  4511                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  4512  002710  0EF8               	movlw	248
  4513  002712  6EB7               	movwf	4023,c	;volatile
  4514                           
  4515                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  4516  002714  0EC3               	movlw	195
  4517  002716  6EB8               	movwf	4024,c	;volatile
  4518                           
  4519                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  4520  002718  0EFE               	movlw	254
  4521  00271A  6EB9               	movwf	4025,c	;volatile
  4522                           
  4523                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  4524  00271C  0ECF               	movlw	207
  4525  00271E  6EBA               	movwf	4026,c	;volatile
  4526                           
  4527                           ;lcd.c: 618: lcd_disp_all(0x00);;
  4528  002720  0E00               	movlw	0
  4529  002722  EC4E  F013         	call	_lcd_disp_all
  4530  002726  0012               	return		;funcret
  4531  002728                     __end_of_lcd_config:
  4532                           	opt stack 0
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           plusw1	equ	0xFE3
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           plusw2	equ	0xFDB
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552 ;; *************** function _lcd_disp_all *****************
  4553 ;; Defined at:
  4554 ;;		line 578 in file "src/driver/lcd.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  x               1    wreg     unsigned char 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  x               1    0[BANK0 ] unsigned char 
  4559 ;;  i               1    1[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        2 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_ui_disp_start_cs600
  4580 ;;		_lcd_config
  4581 ;;		_ui_disp_all_on
  4582 ;;		_ui_disp_all_off
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text19
  4587  00269C                     __ptext19:
  4588                           	opt stack 0
  4589  00269C                     _lcd_disp_all:
  4590                           	opt stack 25
  4591                           
  4592                           ;incstack = 0
  4593                           ;lcd_disp_all@x stored from wreg
  4594  00269C  0100               	movlb	0	; () banked
  4595  00269E  6FC5               	movwf	lcd_disp_all@x& (0+255),b
  4596                           
  4597                           ;lcd.c: 580: uint8_t i;
  4598                           ;lcd.c: 581: for(i=0;i<24;i++)
  4599  0026A0  0E00               	movlw	0
  4600  0026A2  0100               	movlb	0	; () banked
  4601  0026A4  6FC6               	movwf	lcd_disp_all@i& (0+255),b
  4602  0026A6                     l7713:
  4603                           
  4604                           ; BSR set to: 0
  4605  0026A6  0E17               	movlw	23
  4606  0026A8  0100               	movlb	0	; () banked
  4607  0026AA  65C6               	cpfsgt	lcd_disp_all@i& (0+255),b
  4608  0026AC  D001               	goto	l7717
  4609  0026AE  0012               	return	
  4610  0026B0                     l7717:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;lcd.c: 582: {
  4614                           ;lcd.c: 583: pLCD[i]=x;
  4615  0026B0  0100               	movlb	0	; () banked
  4616  0026B2  51C6               	movf	lcd_disp_all@i& (0+255),w,b
  4617  0026B4  0D01               	mullw	1
  4618  0026B6  0E60               	movlw	low _pLCD
  4619  0026B8  24F3               	addwf	prodl,w,c
  4620  0026BA  6ED9               	movwf	fsr2l,c
  4621  0026BC  0E00               	movlw	high _pLCD
  4622  0026BE  20F4               	addwfc	prodh,w,c
  4623  0026C0  6EDA               	movwf	fsr2h,c
  4624  0026C2  C0C5  FFDF         	movff	lcd_disp_all@x,indf2
  4625                           
  4626                           ; BSR set to: 0
  4627  0026C6  0100               	movlb	0	; () banked
  4628  0026C8  2BC6               	incf	lcd_disp_all@i& (0+255),f,b
  4629  0026CA  D7ED               	goto	l7713
  4630  0026CC                     __end_of_lcd_disp_all:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           prodh	equ	0xFF4
  4637                           prodl	equ	0xFF3
  4638                           intcon	equ	0xFF2
  4639                           postinc0	equ	0xFEE
  4640                           wreg	equ	0xFE8
  4641                           postdec1	equ	0xFE5
  4642                           plusw1	equ	0xFE3
  4643                           fsr1h	equ	0xFE2
  4644                           fsr1l	equ	0xFE1
  4645                           indf2	equ	0xFDF
  4646                           plusw2	equ	0xFDB
  4647                           fsr2h	equ	0xFDA
  4648                           fsr2l	equ	0xFD9
  4649                           status	equ	0xFD8
  4650                           
  4651 ;; *************** function _lcd_bl_init *****************
  4652 ;; Defined at:
  4653 ;;		line 623 in file "src/driver/lcd.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    4
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_lcd_init
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text20
  4682  0028DC                     __ptext20:
  4683                           	opt stack 0
  4684  0028DC                     _lcd_bl_init:
  4685                           	opt stack 25
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;incstack = 0
  4689                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  4690  0028DC  8898               	bsf	3992,4,c	;volatile
  4691  0028DE  0012               	return	
  4692  0028E0                     __end_of_lcd_bl_init:
  4693                           	opt stack 0
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           postinc0	equ	0xFEE
  4702                           wreg	equ	0xFE8
  4703                           postdec1	equ	0xFE5
  4704                           plusw1	equ	0xFE3
  4705                           fsr1h	equ	0xFE2
  4706                           fsr1l	equ	0xFE1
  4707                           indf2	equ	0xFDF
  4708                           plusw2	equ	0xFDB
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _key_process *****************
  4714 ;; Defined at:
  4715 ;;		line 154 in file "src/api/key_menu.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  tm              2   40[BANK0 ] unsigned int 
  4720 ;;  key             1   42[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        3 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:   13
  4737 ;; This function calls:
  4738 ;;		_key_process_down
  4739 ;;		_key_process_set
  4740 ;;		_key_process_set_down_long
  4741 ;;		_key_process_set_long
  4742 ;;		_key_process_up
  4743 ;;		_key_waite_release
  4744 ;;		_ui_disp_menu
  4745 ;; This function is called by:
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text21
  4751  001A74                     __ptext21:
  4752                           	opt stack 0
  4753  001A74                     _key_process:
  4754                           	opt stack 17
  4755                           
  4756                           ;key_menu.c: 156: uint16_t tm;
  4757                           ;key_menu.c: 157: uint8_t key;
  4758                           ;key_menu.c: 158: tm=key_waite_release(2000,&key);
  4759                           
  4760                           ;incstack = 0
  4761  001A74  0E07               	movlw	7
  4762  001A76  0100               	movlb	0	; () banked
  4763  001A78  6FCE               	movwf	(key_waite_release@timeout+1)& (0+255),b
  4764  001A7A  0ED0               	movlw	208
  4765  001A7C  6FCD               	movwf	key_waite_release@timeout& (0+255),b
  4766  001A7E  0EEF               	movlw	low key_process@key
  4767  001A80  0100               	movlb	0	; () banked
  4768  001A82  6FCF               	movwf	key_waite_release@key& (0+255),b
  4769  001A84  0E00               	movlw	high key_process@key
  4770  001A86  0100               	movlb	0	; () banked
  4771  001A88  6FD0               	movwf	(key_waite_release@key+1)& (0+255),b
  4772  001A8A  ECA6  F011         	call	_key_waite_release	;wreg free
  4773  001A8E  C0CD  F0ED         	movff	?_key_waite_release,key_process@tm
  4774  001A92  C0CE  F0EE         	movff	?_key_waite_release+1,key_process@tm+1
  4775                           
  4776                           ;key_menu.c: 159: if(tm>=2000){
  4777  001A96  0ED0               	movlw	208
  4778  001A98  0100               	movlb	0	; () banked
  4779  001A9A  5DED               	subwf	key_process@tm& (0+255),w,b
  4780  001A9C  0E07               	movlw	7
  4781  001A9E  0100               	movlb	0	; () banked
  4782  001AA0  59EE               	subwfb	(key_process@tm+1)& (0+255),w,b
  4783  001AA2  A0D8               	btfss	status,0,c
  4784  001AA4  D010               	goto	l8305
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;key_menu.c: 161: if(key==(0x01<<0x02)){
  4788  001AA6  0E04               	movlw	4
  4789  001AA8  0100               	movlb	0	; () banked
  4790  001AAA  19EF               	xorwf	key_process@key& (0+255),w,b
  4791  001AAC  A4D8               	btfss	status,2,c
  4792  001AAE  D003               	goto	l8301
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;key_menu.c: 162: key_process_set_long();
  4796  001AB0  EC70  F014         	call	_key_process_set_long	;wreg free
  4797                           
  4798                           ;key_menu.c: 163: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  4799  001AB4  D01D               	goto	l8317
  4800  001AB6                     l8301:
  4801  001AB6  0E05               	movlw	5
  4802  001AB8  0100               	movlb	0	; () banked
  4803  001ABA  198E               	xorwf	_keyValue& (0+255),w,b	;volatile
  4804  001ABC  A4D8               	btfss	status,2,c
  4805  001ABE  D018               	goto	l8317
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;key_menu.c: 164: key_process_set_down_long();
  4809  001AC0  EC6C  F007         	call	_key_process_set_down_long	;wreg free
  4810                           
  4811                           ;key_menu.c: 165: }
  4812                           ;key_menu.c: 166: }else{
  4813  001AC4  D015               	goto	l8317
  4814  001AC6                     l8305:
  4815                           
  4816                           ;key_menu.c: 168: if(keyValue == (0x01<<0x0)){
  4817  001AC6  0100               	movlb	0	; () banked
  4818  001AC8  058E               	decf	_keyValue& (0+255),w,b	;volatile
  4819  001ACA  A4D8               	btfss	status,2,c
  4820  001ACC  D003               	goto	l8309
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;key_menu.c: 169: key_process_down();
  4824  001ACE  EC05  F012         	call	_key_process_down	;wreg free
  4825                           
  4826                           ;key_menu.c: 170: }else if(keyValue == (0x01<<0x01)){
  4827  001AD2  D00E               	goto	l8317
  4828  001AD4                     l8309:
  4829  001AD4  0E02               	movlw	2
  4830  001AD6  0100               	movlb	0	; () banked
  4831  001AD8  198E               	xorwf	_keyValue& (0+255),w,b	;volatile
  4832  001ADA  A4D8               	btfss	status,2,c
  4833  001ADC  D003               	goto	l8313
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;key_menu.c: 171: key_process_up();
  4837  001ADE  EC01  F013         	call	_key_process_up	;wreg free
  4838                           
  4839                           ;key_menu.c: 172: }else if(keyValue == (0x01<<0x02)){
  4840  001AE2  D006               	goto	l8317
  4841  001AE4                     l8313:
  4842  001AE4  0E04               	movlw	4
  4843  001AE6  0100               	movlb	0	; () banked
  4844  001AE8  198E               	xorwf	_keyValue& (0+255),w,b	;volatile
  4845  001AEA  B4D8               	btfsc	status,2,c
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;key_menu.c: 173: key_process_set();
  4849  001AEC  ECAB  F013         	call	_key_process_set	;wreg free
  4850  001AF0                     l8317:
  4851                           
  4852                           ;key_menu.c: 174: }
  4853                           ;key_menu.c: 175: }
  4854                           ;key_menu.c: 176: ui_disp_menu();
  4855  001AF0  ECE8  F013         	call	_ui_disp_menu	;wreg free
  4856  001AF4  0012               	return		;funcret
  4857  001AF6                     __end_of_key_process:
  4858                           	opt stack 0
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           prodh	equ	0xFF4
  4864                           prodl	equ	0xFF3
  4865                           intcon	equ	0xFF2
  4866                           postinc0	equ	0xFEE
  4867                           wreg	equ	0xFE8
  4868                           postdec1	equ	0xFE5
  4869                           plusw1	equ	0xFE3
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           indf2	equ	0xFDF
  4873                           plusw2	equ	0xFDB
  4874                           fsr2h	equ	0xFDA
  4875                           fsr2l	equ	0xFD9
  4876                           status	equ	0xFD8
  4877                           
  4878 ;; *************** function _ui_disp_menu *****************
  4879 ;; Defined at:
  4880 ;;		line 205 in file "src/api/ui.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:   12
  4901 ;; This function calls:
  4902 ;;		_ui_disp_menu_psw_adj
  4903 ;; This function is called by:
  4904 ;;		_key_process
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text22
  4909  0027D0                     __ptext22:
  4910                           	opt stack 0
  4911  0027D0                     _ui_disp_menu:
  4912                           	opt stack 17
  4913                           
  4914                           ;ui.c: 207: switch(menu){
  4915                           
  4916                           ;incstack = 0
  4917  0027D0  D003               	goto	l8055
  4918  0027D2                     l8051:
  4919  0027D2  EC1C  F014         	call	_ui_disp_menu_psw_adj	;wreg free
  4920                           
  4921                           ;ui.c: 215: }
  4922                           
  4923                           ;ui.c: 213: default:break;
  4924  0027D6  0012               	return	
  4925  0027D8                     l8055:
  4926  0027D8  501D               	movf	_menu,w,c	;volatile
  4927                           
  4928                           ; Switch size 1, requested type "space"
  4929                           ; Number of cases is 4, Range of values is 0 to 16
  4930                           ; switch strategies available:
  4931                           ; Name         Instructions Cycles
  4932                           ; simple_byte           13     7 (average)
  4933                           ;	Chosen strategy is simple_byte
  4934  0027DA  0A00               	xorlw	0	; case 0
  4935  0027DC  B4D8               	btfsc	status,2,c
  4936  0027DE  0012               	return	
  4937  0027E0  0A01               	xorlw	1	; case 1
  4938  0027E2  B4D8               	btfsc	status,2,c
  4939  0027E4  0012               	return	
  4940  0027E6  0A03               	xorlw	3	; case 2
  4941  0027E8  B4D8               	btfsc	status,2,c
  4942  0027EA  0012               	return	
  4943  0027EC  0A12               	xorlw	18	; case 16
  4944  0027EE  A4D8               	btfss	status,2,c
  4945  0027F0  0012               	return	
  4946  0027F2  D7EF               	goto	l8051
  4947  0027F4                     __end_of_ui_disp_menu:
  4948                           	opt stack 0
  4949                           tblptru	equ	0xFF8
  4950                           tblptrh	equ	0xFF7
  4951                           tblptrl	equ	0xFF6
  4952                           tablat	equ	0xFF5
  4953                           prodh	equ	0xFF4
  4954                           prodl	equ	0xFF3
  4955                           intcon	equ	0xFF2
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           postdec1	equ	0xFE5
  4959                           plusw1	equ	0xFE3
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           plusw2	equ	0xFDB
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _ui_disp_menu_psw_adj *****************
  4969 ;; Defined at:
  4970 ;;		line 200 in file "src/api/ui.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:   11
  4991 ;; This function calls:
  4992 ;;		_ui_disp_adj_xfixed_pt
  4993 ;; This function is called by:
  4994 ;;		_ui_disp_menu
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text23
  4999  002838                     __ptext23:
  5000                           	opt stack 0
  5001  002838                     _ui_disp_menu_psw_adj:
  5002                           	opt stack 17
  5003                           
  5004                           ;ui.c: 202: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  5005                           
  5006                           ;incstack = 0
  5007  002838  0EF2               	movlw	low STR_3
  5008  00283A  0100               	movlb	0	; () banked
  5009  00283C  6FDC               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  5010  00283E  0EFF               	movlw	high STR_3
  5011  002840  0100               	movlb	0	; () banked
  5012  002842  6FDD               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  5013  002844  C01E  F0DE         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  5014  002848  C01F  F0DF         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  5015  00284C  C020  F0E0         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  5016  002850  EC85  F008         	call	_ui_disp_adj_xfixed_pt	;wreg free
  5017  002854  0012               	return		;funcret
  5018  002856                     __end_of_ui_disp_menu_psw_adj:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           prodh	equ	0xFF4
  5025                           prodl	equ	0xFF3
  5026                           intcon	equ	0xFF2
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           plusw1	equ	0xFE3
  5031                           fsr1h	equ	0xFE2
  5032                           fsr1l	equ	0xFE1
  5033                           indf2	equ	0xFDF
  5034                           plusw2	equ	0xFDB
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  5040 ;; Defined at:
  5041 ;;		line 186 in file "src/api/ui.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  str             2   23[BANK0 ] PTR unsigned char 
  5044 ;;		 -> STR_3(5), 
  5045 ;;  x               2   25[BANK0 ] unsigned int 
  5046 ;;  loc             1   27[BANK0 ] unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  buf            10   30[BANK0 ] unsigned char [10]
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5058 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;Total ram usage:       17 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:   10
  5065 ;; This function calls:
  5066 ;;		___x_arrange_str
  5067 ;;		_lcd_disp_refresh
  5068 ;;		_lcd_show_string
  5069 ;;		_m_int16_2_str_4
  5070 ;;		_m_mem_cpy
  5071 ;;		_ui_disp_clear_num_dp
  5072 ;; This function is called by:
  5073 ;;		_ui_disp_menu_psw_adj
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text24
  5078  00110A                     __ptext24:
  5079                           	opt stack 0
  5080  00110A                     _ui_disp_adj_xfixed_pt:
  5081                           	opt stack 17
  5082                           
  5083                           ;ui.c: 188: uint8_t buf[10];
  5084                           ;ui.c: 189: ui_disp_clear_num_dp();
  5085                           
  5086                           ;incstack = 0
  5087  00110A  EC7E  F010         	call	_ui_disp_clear_num_dp	;wreg free
  5088                           
  5089                           ;ui.c: 190: if(x>9999)x=9999;
  5090  00110E  0E10               	movlw	16
  5091  001110  0100               	movlb	0	; () banked
  5092  001112  5DDE               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  5093  001114  0E27               	movlw	39
  5094  001116  0100               	movlb	0	; () banked
  5095  001118  59DF               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  5096  00111A  A0D8               	btfss	status,0,c
  5097  00111C  D005               	goto	l7353
  5098                           
  5099                           ; BSR set to: 0
  5100  00111E  0E27               	movlw	39
  5101  001120  0100               	movlb	0	; () banked
  5102  001122  6FDF               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  5103  001124  0E0F               	movlw	15
  5104  001126  6FDE               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  5105  001128                     l7353:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;ui.c: 191: m_mem_cpy(buf,str);
  5109  001128  0EE3               	movlw	low ui_disp_adj_xfixed_pt@buf
  5110  00112A  0100               	movlb	0	; () banked
  5111  00112C  6FC5               	movwf	m_mem_cpy@d& (0+255),b
  5112  00112E  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5113  001130  0100               	movlb	0	; () banked
  5114  001132  6FC6               	movwf	(m_mem_cpy@d+1)& (0+255),b
  5115  001134  C0DC  F0C7         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  5116  001138  C0DD  F0C8         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  5117  00113C  EC42  F011         	call	_m_mem_cpy	;wreg free
  5118                           
  5119                           ;ui.c: 192: m_int16_2_str_4(buf+4,x);
  5120  001140  0EE7               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  5121  001142  0100               	movlb	0	; () banked
  5122  001144  6FCD               	movwf	m_int16_2_str_4@buf& (0+255),b
  5123  001146  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  5124  001148  0100               	movlb	0	; () banked
  5125  00114A  6FCE               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  5126  00114C  C0DE  F0CF         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  5127  001150  C0DF  F0D0         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  5128  001154  ECB7  F003         	call	_m_int16_2_str_4	;wreg free
  5129                           
  5130                           ;ui.c: 193: __x_arrange_str(buf,8);
  5131  001158  0EE3               	movlw	low ui_disp_adj_xfixed_pt@buf
  5132  00115A  0100               	movlb	0	; () banked
  5133  00115C  6FC5               	movwf	___x_arrange_str@str& (0+255),b
  5134  00115E  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5135  001160  0100               	movlb	0	; () banked
  5136  001162  6FC6               	movwf	(___x_arrange_str@str+1)& (0+255),b
  5137  001164  0E08               	movlw	8
  5138  001166  0100               	movlb	0	; () banked
  5139  001168  6FC7               	movwf	___x_arrange_str@len& (0+255),b
  5140  00116A  EC91  F00E         	call	___x_arrange_str	;wreg free
  5141                           
  5142                           ;ui.c: 194: if(loc>3)loc=3;
  5143  00116E  0E03               	movlw	3
  5144  001170  0100               	movlb	0	; () banked
  5145  001172  65E0               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  5146  001174  D003               	goto	l7363
  5147                           
  5148                           ; BSR set to: 0
  5149  001176  0E03               	movlw	3
  5150  001178  0100               	movlb	0	; () banked
  5151  00117A  6FE0               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  5152  00117C                     l7363:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;ui.c: 195: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  5156  00117C  010F               	movlb	15	; () banked
  5157  00117E  B75F               	btfsc	95,3,b	;volatile
  5158  001180  D014               	goto	l7367
  5159                           
  5160                           ; BSR set to: 15
  5161  001182  0100               	movlb	0	; () banked
  5162  001184  51E0               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  5163  001186  0100               	movlb	0	; () banked
  5164  001188  6FE1               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  5165  00118A  6BE2               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  5166  00118C  0E04               	movlw	4
  5167  00118E  0100               	movlb	0	; () banked
  5168  001190  27E1               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  5169  001192  0E00               	movlw	0
  5170  001194  23E2               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  5171  001196  0EE3               	movlw	low ui_disp_adj_xfixed_pt@buf
  5172  001198  0100               	movlb	0	; () banked
  5173  00119A  25E1               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  5174  00119C  6ED9               	movwf	fsr2l,c
  5175  00119E  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5176  0011A0  0100               	movlb	0	; () banked
  5177  0011A2  21E2               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  5178  0011A4  6EDA               	movwf	fsr2h,c
  5179  0011A6  0E20               	movlw	32
  5180  0011A8  6EDF               	movwf	indf2,c
  5181  0011AA                     l7367:
  5182                           
  5183                           ;ui.c: 196: lcd_show_string(buf);
  5184  0011AA  0EE3               	movlw	low ui_disp_adj_xfixed_pt@buf
  5185  0011AC  0100               	movlb	0	; () banked
  5186  0011AE  6FD9               	movwf	lcd_show_string@str& (0+255),b
  5187  0011B0  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5188  0011B2  0100               	movlb	0	; () banked
  5189  0011B4  6FDA               	movwf	(lcd_show_string@str+1)& (0+255),b
  5190  0011B6  ECB7  F00D         	call	_lcd_show_string	;wreg free
  5191                           
  5192                           ;ui.c: 197: lcd_disp_refresh();
  5193  0011BA  EC61  F00F         	call	_lcd_disp_refresh	;wreg free
  5194  0011BE  0012               	return		;funcret
  5195  0011C0                     __end_of_ui_disp_adj_xfixed_pt:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           prodh	equ	0xFF4
  5202                           prodl	equ	0xFF3
  5203                           intcon	equ	0xFF2
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           postdec1	equ	0xFE5
  5207                           plusw1	equ	0xFE3
  5208                           fsr1h	equ	0xFE2
  5209                           fsr1l	equ	0xFE1
  5210                           indf2	equ	0xFDF
  5211                           plusw2	equ	0xFDB
  5212                           fsr2h	equ	0xFDA
  5213                           fsr2l	equ	0xFD9
  5214                           status	equ	0xFD8
  5215                           
  5216 ;; *************** function _ui_disp_clear_num_dp *****************
  5217 ;; Defined at:
  5218 ;;		line 159 in file "src/api/ui.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    9
  5239 ;; This function calls:
  5240 ;;		_lcd_show_dp
  5241 ;;		_lcd_show_string
  5242 ;; This function is called by:
  5243 ;;		_ui_disp_adj_xfixed_pt
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text25
  5248  0020FC                     __ptext25:
  5249                           	opt stack 0
  5250  0020FC                     _ui_disp_clear_num_dp:
  5251                           	opt stack 17
  5252                           
  5253                           ;ui.c: 161: lcd_show_string((uint8_t*)"        ");
  5254                           
  5255                           ;incstack = 0
  5256  0020FC  0EE4               	movlw	low STR_2
  5257  0020FE  0100               	movlb	0	; () banked
  5258  002100  6FD9               	movwf	lcd_show_string@str& (0+255),b
  5259  002102  0EFF               	movlw	high STR_2
  5260  002104  0100               	movlb	0	; () banked
  5261  002106  6FDA               	movwf	(lcd_show_string@str+1)& (0+255),b
  5262  002108  ECB7  F00D         	call	_lcd_show_string	;wreg free
  5263                           
  5264                           ;ui.c: 162: lcd_show_dp(0,0);
  5265  00210C  0E00               	movlw	0
  5266  00210E  0100               	movlb	0	; () banked
  5267  002110  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5268  002112  0E00               	movlw	0
  5269  002114  EC25  F00E         	call	_lcd_show_dp
  5270                           
  5271                           ;ui.c: 163: lcd_show_dp(1,0);
  5272  002118  0E00               	movlw	0
  5273  00211A  0100               	movlb	0	; () banked
  5274  00211C  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5275  00211E  0E01               	movlw	1
  5276  002120  EC25  F00E         	call	_lcd_show_dp
  5277                           
  5278                           ;ui.c: 164: lcd_show_dp(2,0);
  5279  002124  0E00               	movlw	0
  5280  002126  0100               	movlb	0	; () banked
  5281  002128  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5282  00212A  0E02               	movlw	2
  5283  00212C  EC25  F00E         	call	_lcd_show_dp
  5284                           
  5285                           ;ui.c: 165: lcd_show_dp(4,0);
  5286  002130  0E00               	movlw	0
  5287  002132  0100               	movlb	0	; () banked
  5288  002134  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5289  002136  0E04               	movlw	4
  5290  002138  EC25  F00E         	call	_lcd_show_dp
  5291                           
  5292                           ;ui.c: 166: lcd_show_dp(5,0);
  5293  00213C  0E00               	movlw	0
  5294  00213E  0100               	movlb	0	; () banked
  5295  002140  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5296  002142  0E05               	movlw	5
  5297  002144  EC25  F00E         	call	_lcd_show_dp
  5298                           
  5299                           ;ui.c: 167: lcd_show_dp(6,0);
  5300  002148  0E00               	movlw	0
  5301  00214A  0100               	movlb	0	; () banked
  5302  00214C  6FD6               	movwf	lcd_show_dp@show& (0+255),b
  5303  00214E  0E06               	movlw	6
  5304  002150  EC25  F00E         	call	_lcd_show_dp
  5305  002154  0012               	return		;funcret
  5306  002156                     __end_of_ui_disp_clear_num_dp:
  5307                           	opt stack 0
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           postinc0	equ	0xFEE
  5316                           wreg	equ	0xFE8
  5317                           postdec1	equ	0xFE5
  5318                           plusw1	equ	0xFE3
  5319                           fsr1h	equ	0xFE2
  5320                           fsr1l	equ	0xFE1
  5321                           indf2	equ	0xFDF
  5322                           plusw2	equ	0xFDB
  5323                           fsr2h	equ	0xFDA
  5324                           fsr2l	equ	0xFD9
  5325                           status	equ	0xFD8
  5326                           
  5327 ;; *************** function _lcd_show_string *****************
  5328 ;; Defined at:
  5329 ;;		line 534 in file "src/driver/lcd.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  str             2   20[BANK0 ] PTR unsigned char 
  5332 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  t8              1   22[BANK0 ] unsigned char 
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;Total ram usage:        3 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    8
  5351 ;; This function calls:
  5352 ;;		_lcd_show_chr
  5353 ;; This function is called by:
  5354 ;;		_ui_disp_rtc_mm_ss
  5355 ;;		_ui_disp_clear_num_dp
  5356 ;;		_ui_disp_adj_xfixed_pt
  5357 ;;		_ui_disp_adj_xfloat_pt
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text26
  5362  001B6E                     __ptext26:
  5363                           	opt stack 0
  5364  001B6E                     _lcd_show_string:
  5365                           	opt stack 21
  5366                           
  5367                           ;lcd.c: 536: uint8_t t8=0;
  5368                           
  5369                           ;incstack = 0
  5370  001B6E  0E00               	movlw	0
  5371  001B70  0100               	movlb	0	; () banked
  5372  001B72  6FDB               	movwf	lcd_show_string@t8& (0+255),b
  5373                           
  5374                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  5375  001B74  D01B               	goto	l7117
  5376  001B76                     l7111:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  5380  001B76  C0D9  FFF6         	movff	lcd_show_string@str,tblptrl
  5381  001B7A  C0DA  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5382  001B7E  6AF8               	clrf	tblptru,c
  5383  001B80  0E0F               	movlw	(high __ramtop+-1)
  5384  001B82  64F7               	cpfsgt	tblptrh,c
  5385  001B84  D003               	bra	u5307
  5386  001B86  0008               	tblrd		*
  5387  001B88  50F5               	movf	tablat,w,c
  5388  001B8A  D005               	bra	u5300
  5389  001B8C                     u5307:
  5390  001B8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5391  001B90  CFF7 FFEA          	movff	tblptrh,fsr0h
  5392  001B94  50EF               	movf	indf0,w,c
  5393  001B96                     u5300:
  5394  001B96  0100               	movlb	0	; () banked
  5395  001B98  6FD6               	movwf	lcd_show_chr@chr& (0+255),b
  5396  001B9A  0100               	movlb	0	; () banked
  5397  001B9C  51DB               	movf	lcd_show_string@t8& (0+255),w,b
  5398  001B9E  ECAB  F00C         	call	_lcd_show_chr
  5399                           
  5400                           ;lcd.c: 539: str++;
  5401  001BA2  0100               	movlb	0	; () banked
  5402  001BA4  4BD9               	infsnz	lcd_show_string@str& (0+255),f,b
  5403  001BA6  2BDA               	incf	(lcd_show_string@str+1)& (0+255),f,b
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;lcd.c: 540: t8++;
  5407  001BA8  0100               	movlb	0	; () banked
  5408  001BAA  2BDB               	incf	lcd_show_string@t8& (0+255),f,b
  5409  001BAC                     l7117:
  5410                           
  5411                           ; BSR set to: 0
  5412  001BAC  C0D9  FFF6         	movff	lcd_show_string@str,tblptrl
  5413  001BB0  C0DA  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5414  001BB4  6AF8               	clrf	tblptru,c
  5415  001BB6  0E0F               	movlw	(high __ramtop+-1)
  5416  001BB8  64F7               	cpfsgt	tblptrh,c
  5417  001BBA  D003               	bra	u5317
  5418  001BBC  0008               	tblrd		*
  5419  001BBE  50F5               	movf	tablat,w,c
  5420  001BC0  D005               	bra	u5310
  5421  001BC2                     u5317:
  5422  001BC2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5423  001BC6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5424  001BCA  50EF               	movf	indf0,w,c
  5425  001BCC                     u5310:
  5426  001BCC  0900               	iorlw	0
  5427  001BCE  B4D8               	btfsc	status,2,c
  5428  001BD0  0012               	return	
  5429  001BD2  0E07               	movlw	7
  5430  001BD4  0100               	movlb	0	; () banked
  5431  001BD6  65DB               	cpfsgt	lcd_show_string@t8& (0+255),b
  5432  001BD8  D7CE               	goto	l7111
  5433  001BDA  0012               	return	
  5434  001BDC                     __end_of_lcd_show_string:
  5435                           	opt stack 0
  5436                           tblptru	equ	0xFF8
  5437                           tblptrh	equ	0xFF7
  5438                           tblptrl	equ	0xFF6
  5439                           tablat	equ	0xFF5
  5440                           prodh	equ	0xFF4
  5441                           prodl	equ	0xFF3
  5442                           intcon	equ	0xFF2
  5443                           indf0	equ	0xFEF
  5444                           postinc0	equ	0xFEE
  5445                           fsr0h	equ	0xFEA
  5446                           fsr0l	equ	0xFE9
  5447                           wreg	equ	0xFE8
  5448                           postdec1	equ	0xFE5
  5449                           plusw1	equ	0xFE3
  5450                           fsr1h	equ	0xFE2
  5451                           fsr1l	equ	0xFE1
  5452                           indf2	equ	0xFDF
  5453                           plusw2	equ	0xFDB
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _lcd_show_chr *****************
  5459 ;; Defined at:
  5460 ;;		line 489 in file "src/driver/lcd.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  loc             1    wreg     unsigned char 
  5463 ;;  chr             1   17[BANK0 ] unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  loc             1   18[BANK0 ] unsigned char 
  5466 ;;  code            1   19[BANK0 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5476 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;Total ram usage:        3 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    7
  5483 ;; This function calls:
  5484 ;;		_lcd_disp_chr_loc_0
  5485 ;;		_lcd_disp_chr_loc_1
  5486 ;;		_lcd_disp_chr_loc_2
  5487 ;;		_lcd_disp_chr_loc_3
  5488 ;;		_lcd_disp_chr_loc_4
  5489 ;;		_lcd_disp_chr_loc_5
  5490 ;;		_lcd_disp_chr_loc_6
  5491 ;;		_lcd_disp_chr_loc_7
  5492 ;;		_lcd_disp_get_code
  5493 ;; This function is called by:
  5494 ;;		_lcd_show_string_l0
  5495 ;;		_lcd_show_string_l1
  5496 ;;		_lcd_show_string
  5497 ;;		_lcd_show_chr_lc
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text27
  5502  001956                     __ptext27:
  5503                           	opt stack 0
  5504  001956                     _lcd_show_chr:
  5505                           	opt stack 21
  5506                           
  5507                           ;incstack = 0
  5508                           ;lcd_show_chr@loc stored from wreg
  5509  001956  0100               	movlb	0	; () banked
  5510  001958  6FD7               	movwf	lcd_show_chr@loc& (0+255),b
  5511                           
  5512                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  5513  00195A  0100               	movlb	0	; () banked
  5514  00195C  51D6               	movf	lcd_show_chr@chr& (0+255),w,b
  5515  00195E  ECF3  F00F         	call	_lcd_disp_get_code
  5516  001962  0100               	movlb	0	; () banked
  5517  001964  6FD8               	movwf	lcd_show_chr@code& (0+255),b
  5518                           
  5519                           ;lcd.c: 492: switch(loc){
  5520  001966  D028               	goto	l7089
  5521  001968                     l7071:
  5522                           
  5523                           ; BSR set to: 0
  5524  001968  0100               	movlb	0	; () banked
  5525  00196A  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5526  00196C  EC0C  F00C         	call	_lcd_disp_chr_loc_0
  5527  001970  0012               	return	
  5528  001972                     l7073:
  5529  001972  0100               	movlb	0	; () banked
  5530  001974  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5531  001976  ECBC  F00B         	call	_lcd_disp_chr_loc_1
  5532  00197A  0012               	return	
  5533  00197C                     l7075:
  5534  00197C  0100               	movlb	0	; () banked
  5535  00197E  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5536  001980  EC6C  F00B         	call	_lcd_disp_chr_loc_2
  5537  001984  0012               	return	
  5538  001986                     l7077:
  5539  001986  0100               	movlb	0	; () banked
  5540  001988  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5541  00198A  EC1C  F00B         	call	_lcd_disp_chr_loc_3
  5542  00198E  0012               	return	
  5543  001990                     l7079:
  5544  001990  0100               	movlb	0	; () banked
  5545  001992  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5546  001994  ECCC  F00A         	call	_lcd_disp_chr_loc_4
  5547  001998  0012               	return	
  5548  00199A                     l7081:
  5549  00199A  0100               	movlb	0	; () banked
  5550  00199C  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5551  00199E  EC7C  F00A         	call	_lcd_disp_chr_loc_5
  5552  0019A2  0012               	return	
  5553  0019A4                     l7083:
  5554  0019A4  0100               	movlb	0	; () banked
  5555  0019A6  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5556  0019A8  EC2C  F00A         	call	_lcd_disp_chr_loc_6
  5557  0019AC  0012               	return	
  5558  0019AE                     l7085:
  5559  0019AE  0100               	movlb	0	; () banked
  5560  0019B0  51D8               	movf	lcd_show_chr@code& (0+255),w,b
  5561  0019B2  ECDC  F009         	call	_lcd_disp_chr_loc_7
  5562                           
  5563                           ;lcd.c: 502: }
  5564                           
  5565                           ;lcd.c: 501: default:break;
  5566  0019B6  0012               	return	
  5567  0019B8                     l7089:
  5568  0019B8  0100               	movlb	0	; () banked
  5569  0019BA  51D7               	movf	lcd_show_chr@loc& (0+255),w,b
  5570                           
  5571                           ; Switch size 1, requested type "space"
  5572                           ; Number of cases is 8, Range of values is 0 to 7
  5573                           ; switch strategies available:
  5574                           ; Name         Instructions Cycles
  5575                           ; simple_byte           25    13 (average)
  5576                           ;	Chosen strategy is simple_byte
  5577  0019BC  0A00               	xorlw	0	; case 0
  5578  0019BE  B4D8               	btfsc	status,2,c
  5579  0019C0  D7D3               	goto	l7071
  5580  0019C2  0A01               	xorlw	1	; case 1
  5581  0019C4  B4D8               	btfsc	status,2,c
  5582  0019C6  D7D5               	goto	l7073
  5583  0019C8  0A03               	xorlw	3	; case 2
  5584  0019CA  B4D8               	btfsc	status,2,c
  5585  0019CC  D7D7               	goto	l7075
  5586  0019CE  0A01               	xorlw	1	; case 3
  5587  0019D0  B4D8               	btfsc	status,2,c
  5588  0019D2  D7D9               	goto	l7077
  5589  0019D4  0A07               	xorlw	7	; case 4
  5590  0019D6  B4D8               	btfsc	status,2,c
  5591  0019D8  D7DB               	goto	l7079
  5592  0019DA  0A01               	xorlw	1	; case 5
  5593  0019DC  B4D8               	btfsc	status,2,c
  5594  0019DE  D7DD               	goto	l7081
  5595  0019E0  0A03               	xorlw	3	; case 6
  5596  0019E2  B4D8               	btfsc	status,2,c
  5597  0019E4  D7DF               	goto	l7083
  5598  0019E6  0A01               	xorlw	1	; case 7
  5599  0019E8  A4D8               	btfss	status,2,c
  5600  0019EA  0012               	return	
  5601  0019EC  D7E0               	goto	l7085
  5602  0019EE                     __end_of_lcd_show_chr:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           indf0	equ	0xFEF
  5612                           postinc0	equ	0xFEE
  5613                           fsr0h	equ	0xFEA
  5614                           fsr0l	equ	0xFE9
  5615                           wreg	equ	0xFE8
  5616                           postdec1	equ	0xFE5
  5617                           plusw1	equ	0xFE3
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           indf2	equ	0xFDF
  5621                           plusw2	equ	0xFDB
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function _lcd_disp_get_code *****************
  5627 ;; Defined at:
  5628 ;;		line 461 in file "src/driver/lcd.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  chr             1    wreg     unsigned char 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  chr             1    0[BANK0 ] unsigned char 
  5633 ;;  i               1    2[BANK0 ] unsigned char 
  5634 ;;  ret             1    1[BANK0 ] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      unsigned char 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;Total ram usage:        3 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    4
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_lcd_show_chr
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text28
  5659  001FE6                     __ptext28:
  5660                           	opt stack 0
  5661  001FE6                     _lcd_disp_get_code:
  5662                           	opt stack 23
  5663                           
  5664                           ;incstack = 0
  5665                           ;lcd_disp_get_code@chr stored from wreg
  5666  001FE6  0100               	movlb	0	; () banked
  5667  001FE8  6FC5               	movwf	lcd_disp_get_code@chr& (0+255),b
  5668                           
  5669                           ;lcd.c: 463: uint8_t i;
  5670                           ;lcd.c: 464: uint8_t ret;
  5671                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  5672  001FEA  0E00               	movlw	0
  5673  001FEC  0100               	movlb	0	; () banked
  5674  001FEE  6FC7               	movwf	lcd_disp_get_code@i& (0+255),b
  5675  001FF0                     l7031:
  5676                           
  5677                           ; BSR set to: 0
  5678  001FF0  0E28               	movlw	40
  5679  001FF2  0100               	movlb	0	; () banked
  5680  001FF4  65C7               	cpfsgt	lcd_disp_get_code@i& (0+255),b
  5681  001FF6  D001               	goto	l7035
  5682  001FF8  D012               	goto	l7043
  5683  001FFA                     l7035:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  5687  001FFA  0100               	movlb	0	; () banked
  5688  001FFC  51C7               	movf	lcd_disp_get_code@i& (0+255),w,b
  5689  001FFE  0D01               	mullw	1
  5690  002000  0EBB               	movlw	low _LCDDigitalIndexTable
  5691  002002  24F3               	addwf	prodl,w,c
  5692  002004  6EF6               	movwf	tblptrl,c
  5693  002006  0EFE               	movlw	high _LCDDigitalIndexTable
  5694  002008  20F4               	addwfc	prodh,w,c
  5695  00200A  6EF7               	movwf	tblptrh,c
  5696  00200C                     	if	0	;There are less than 3 active tblptr bytes
  5697  00200C                     	endif
  5698  00200C  0008               	tblrd		*
  5699  00200E  50F5               	movf	tablat,w,c
  5700  002010  0100               	movlb	0	; () banked
  5701  002012  19C5               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
  5702  002014  B4D8               	btfsc	status,2,c
  5703  002016  D003               	goto	l7043
  5704                           
  5705                           ; BSR set to: 0
  5706                           
  5707                           ; BSR set to: 0
  5708                           
  5709                           ; BSR set to: 0
  5710  002018  0100               	movlb	0	; () banked
  5711  00201A  2BC7               	incf	lcd_disp_get_code@i& (0+255),f,b
  5712  00201C  D7E9               	goto	l7031
  5713  00201E                     l7043:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;lcd.c: 467: }
  5717                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  5718  00201E  0E29               	movlw	41
  5719  002020  0100               	movlb	0	; () banked
  5720  002022  61C7               	cpfslt	lcd_disp_get_code@i& (0+255),b
  5721  002024  D00C               	goto	l7047
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  5725  002026  0100               	movlb	0	; () banked
  5726  002028  51C7               	movf	lcd_disp_get_code@i& (0+255),w,b
  5727  00202A  0D01               	mullw	1
  5728  00202C  0EE4               	movlw	low _LCDDigitalTable
  5729  00202E  24F3               	addwf	prodl,w,c
  5730  002030  6EF6               	movwf	tblptrl,c
  5731  002032  0EFE               	movlw	high _LCDDigitalTable
  5732  002034  20F4               	addwfc	prodh,w,c
  5733  002036  6EF7               	movwf	tblptrh,c
  5734  002038                     	if	0	;There are less than 3 active tblptr bytes
  5735  002038                     	endif
  5736  002038  0008               	tblrd		*
  5737  00203A  CFF5 F0C6          	movff	tablat,lcd_disp_get_code@ret
  5738  00203E                     l7047:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;lcd.c: 470: }
  5742                           ;lcd.c: 471: return ret;
  5743  00203E  0100               	movlb	0	; () banked
  5744  002040  51C6               	movf	lcd_disp_get_code@ret& (0+255),w,b
  5745  002042  0012               	return	
  5746  002044                     __end_of_lcd_disp_get_code:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           indf0	equ	0xFEF
  5756                           postinc0	equ	0xFEE
  5757                           fsr0h	equ	0xFEA
  5758                           fsr0l	equ	0xFE9
  5759                           wreg	equ	0xFE8
  5760                           postdec1	equ	0xFE5
  5761                           plusw1	equ	0xFE3
  5762                           fsr1h	equ	0xFE2
  5763                           fsr1l	equ	0xFE1
  5764                           indf2	equ	0xFDF
  5765                           plusw2	equ	0xFDB
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770 ;; *************** function _lcd_disp_chr_loc_7 *****************
  5771 ;; Defined at:
  5772 ;;		line 353 in file "src/driver/lcd.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  code            1    wreg     unsigned char 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  code            1   16[BANK0 ] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;Total ram usage:        1 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    6
  5793 ;; This function calls:
  5794 ;;		_lcd_set_com_seg
  5795 ;; This function is called by:
  5796 ;;		_lcd_show_chr
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text29
  5801  0013B8                     __ptext29:
  5802                           	opt stack 0
  5803  0013B8                     _lcd_disp_chr_loc_7:
  5804                           	opt stack 21
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;incstack = 0
  5808                           ;lcd_disp_chr_loc_7@code stored from wreg
  5809  0013B8  0100               	movlb	0	; () banked
  5810  0013BA  6FD5               	movwf	lcd_disp_chr_loc_7@code& (0+255),b
  5811                           
  5812                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  5813  0013BC  0E13               	movlw	19
  5814  0013BE  0100               	movlb	0	; () banked
  5815  0013C0  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5816  0013C2  0100               	movlb	0	; () banked
  5817  0013C4  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5818  0013C6  0B08               	andlw	8
  5819  0013C8  0100               	movlb	0	; () banked
  5820  0013CA  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5821  0013CC  0E00               	movlw	0
  5822  0013CE  ECA9  F006         	call	_lcd_set_com_seg
  5823                           
  5824                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  5825  0013D2  0E13               	movlw	19
  5826  0013D4  0100               	movlb	0	; () banked
  5827  0013D6  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5828  0013D8  0100               	movlb	0	; () banked
  5829  0013DA  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5830  0013DC  0B10               	andlw	16
  5831  0013DE  0100               	movlb	0	; () banked
  5832  0013E0  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5833  0013E2  0E01               	movlw	1
  5834  0013E4  ECA9  F006         	call	_lcd_set_com_seg
  5835                           
  5836                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  5837  0013E8  0E13               	movlw	19
  5838  0013EA  0100               	movlb	0	; () banked
  5839  0013EC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5840  0013EE  0100               	movlb	0	; () banked
  5841  0013F0  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5842  0013F2  0B20               	andlw	32
  5843  0013F4  0100               	movlb	0	; () banked
  5844  0013F6  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5845  0013F8  0E02               	movlw	2
  5846  0013FA  ECA9  F006         	call	_lcd_set_com_seg
  5847                           
  5848                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  5849  0013FE  0E13               	movlw	19
  5850  001400  0100               	movlb	0	; () banked
  5851  001402  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5852  001404  0100               	movlb	0	; () banked
  5853  001406  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5854  001408  0B01               	andlw	1
  5855  00140A  0100               	movlb	0	; () banked
  5856  00140C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5857  00140E  0E03               	movlw	3
  5858  001410  ECA9  F006         	call	_lcd_set_com_seg
  5859                           
  5860                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  5861  001414  0E28               	movlw	40
  5862  001416  0100               	movlb	0	; () banked
  5863  001418  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5864  00141A  0100               	movlb	0	; () banked
  5865  00141C  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5866  00141E  0B04               	andlw	4
  5867  001420  0100               	movlb	0	; () banked
  5868  001422  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5869  001424  0E01               	movlw	1
  5870  001426  ECA9  F006         	call	_lcd_set_com_seg
  5871                           
  5872                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  5873  00142A  0E28               	movlw	40
  5874  00142C  0100               	movlb	0	; () banked
  5875  00142E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5876  001430  0100               	movlb	0	; () banked
  5877  001432  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5878  001434  0B40               	andlw	64
  5879  001436  0100               	movlb	0	; () banked
  5880  001438  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5881  00143A  0E02               	movlw	2
  5882  00143C  ECA9  F006         	call	_lcd_set_com_seg
  5883                           
  5884                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  5885  001440  0E28               	movlw	40
  5886  001442  0100               	movlb	0	; () banked
  5887  001444  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5888  001446  0100               	movlb	0	; () banked
  5889  001448  51D5               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5890  00144A  0B02               	andlw	2
  5891  00144C  0100               	movlb	0	; () banked
  5892  00144E  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5893  001450  0E03               	movlw	3
  5894  001452  ECA9  F006         	call	_lcd_set_com_seg
  5895  001456  0012               	return		;funcret
  5896  001458                     __end_of_lcd_disp_chr_loc_7:
  5897                           	opt stack 0
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           indf0	equ	0xFEF
  5906                           postinc0	equ	0xFEE
  5907                           fsr0h	equ	0xFEA
  5908                           fsr0l	equ	0xFE9
  5909                           wreg	equ	0xFE8
  5910                           postdec1	equ	0xFE5
  5911                           plusw1	equ	0xFE3
  5912                           fsr1h	equ	0xFE2
  5913                           fsr1l	equ	0xFE1
  5914                           indf2	equ	0xFDF
  5915                           plusw2	equ	0xFDB
  5916                           fsr2h	equ	0xFDA
  5917                           fsr2l	equ	0xFD9
  5918                           status	equ	0xFD8
  5919                           
  5920 ;; *************** function _lcd_disp_chr_loc_6 *****************
  5921 ;; Defined at:
  5922 ;;		line 334 in file "src/driver/lcd.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  code            1    wreg     unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  code            1   16[BANK0 ] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        1 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    6
  5943 ;; This function calls:
  5944 ;;		_lcd_set_com_seg
  5945 ;; This function is called by:
  5946 ;;		_lcd_show_chr
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text30
  5951  001458                     __ptext30:
  5952                           	opt stack 0
  5953  001458                     _lcd_disp_chr_loc_6:
  5954                           	opt stack 21
  5955                           
  5956                           ;incstack = 0
  5957                           ;lcd_disp_chr_loc_6@code stored from wreg
  5958  001458  0100               	movlb	0	; () banked
  5959  00145A  6FD5               	movwf	lcd_disp_chr_loc_6@code& (0+255),b
  5960                           
  5961                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  5962  00145C  0E0E               	movlw	14
  5963  00145E  0100               	movlb	0	; () banked
  5964  001460  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5965  001462  0100               	movlb	0	; () banked
  5966  001464  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5967  001466  0B08               	andlw	8
  5968  001468  0100               	movlb	0	; () banked
  5969  00146A  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5970  00146C  0E00               	movlw	0
  5971  00146E  ECA9  F006         	call	_lcd_set_com_seg
  5972                           
  5973                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  5974  001472  0E0E               	movlw	14
  5975  001474  0100               	movlb	0	; () banked
  5976  001476  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5977  001478  0100               	movlb	0	; () banked
  5978  00147A  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5979  00147C  0B10               	andlw	16
  5980  00147E  0100               	movlb	0	; () banked
  5981  001480  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5982  001482  0E01               	movlw	1
  5983  001484  ECA9  F006         	call	_lcd_set_com_seg
  5984                           
  5985                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  5986  001488  0E0E               	movlw	14
  5987  00148A  0100               	movlb	0	; () banked
  5988  00148C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  5989  00148E  0100               	movlb	0	; () banked
  5990  001490  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5991  001492  0B20               	andlw	32
  5992  001494  0100               	movlb	0	; () banked
  5993  001496  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  5994  001498  0E02               	movlw	2
  5995  00149A  ECA9  F006         	call	_lcd_set_com_seg
  5996                           
  5997                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  5998  00149E  0E0E               	movlw	14
  5999  0014A0  0100               	movlb	0	; () banked
  6000  0014A2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6001  0014A4  0100               	movlb	0	; () banked
  6002  0014A6  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  6003  0014A8  0B01               	andlw	1
  6004  0014AA  0100               	movlb	0	; () banked
  6005  0014AC  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6006  0014AE  0E03               	movlw	3
  6007  0014B0  ECA9  F006         	call	_lcd_set_com_seg
  6008                           
  6009                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  6010  0014B4  0E0F               	movlw	15
  6011  0014B6  0100               	movlb	0	; () banked
  6012  0014B8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6013  0014BA  0100               	movlb	0	; () banked
  6014  0014BC  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  6015  0014BE  0B04               	andlw	4
  6016  0014C0  0100               	movlb	0	; () banked
  6017  0014C2  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6018  0014C4  0E01               	movlw	1
  6019  0014C6  ECA9  F006         	call	_lcd_set_com_seg
  6020                           
  6021                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  6022  0014CA  0E0F               	movlw	15
  6023  0014CC  0100               	movlb	0	; () banked
  6024  0014CE  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6025  0014D0  0100               	movlb	0	; () banked
  6026  0014D2  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  6027  0014D4  0B40               	andlw	64
  6028  0014D6  0100               	movlb	0	; () banked
  6029  0014D8  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6030  0014DA  0E02               	movlw	2
  6031  0014DC  ECA9  F006         	call	_lcd_set_com_seg
  6032                           
  6033                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  6034  0014E0  0E0F               	movlw	15
  6035  0014E2  0100               	movlb	0	; () banked
  6036  0014E4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6037  0014E6  0100               	movlb	0	; () banked
  6038  0014E8  51D5               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  6039  0014EA  0B02               	andlw	2
  6040  0014EC  0100               	movlb	0	; () banked
  6041  0014EE  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6042  0014F0  0E03               	movlw	3
  6043  0014F2  ECA9  F006         	call	_lcd_set_com_seg
  6044  0014F6  0012               	return		;funcret
  6045  0014F8                     __end_of_lcd_disp_chr_loc_6:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           indf0	equ	0xFEF
  6055                           postinc0	equ	0xFEE
  6056                           fsr0h	equ	0xFEA
  6057                           fsr0l	equ	0xFE9
  6058                           wreg	equ	0xFE8
  6059                           postdec1	equ	0xFE5
  6060                           plusw1	equ	0xFE3
  6061                           fsr1h	equ	0xFE2
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           plusw2	equ	0xFDB
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _lcd_disp_chr_loc_5 *****************
  6070 ;; Defined at:
  6071 ;;		line 315 in file "src/driver/lcd.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  code            1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  code            1   16[BANK0 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        1 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    6
  6092 ;; This function calls:
  6093 ;;		_lcd_set_com_seg
  6094 ;; This function is called by:
  6095 ;;		_lcd_show_chr
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text31
  6100  0014F8                     __ptext31:
  6101                           	opt stack 0
  6102  0014F8                     _lcd_disp_chr_loc_5:
  6103                           	opt stack 21
  6104                           
  6105                           ;incstack = 0
  6106                           ;lcd_disp_chr_loc_5@code stored from wreg
  6107  0014F8  0100               	movlb	0	; () banked
  6108  0014FA  6FD5               	movwf	lcd_disp_chr_loc_5@code& (0+255),b
  6109                           
  6110                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  6111  0014FC  0E26               	movlw	38
  6112  0014FE  0100               	movlb	0	; () banked
  6113  001500  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6114  001502  0100               	movlb	0	; () banked
  6115  001504  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6116  001506  0B08               	andlw	8
  6117  001508  0100               	movlb	0	; () banked
  6118  00150A  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6119  00150C  0E00               	movlw	0
  6120  00150E  ECA9  F006         	call	_lcd_set_com_seg
  6121                           
  6122                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  6123  001512  0E26               	movlw	38
  6124  001514  0100               	movlb	0	; () banked
  6125  001516  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6126  001518  0100               	movlb	0	; () banked
  6127  00151A  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6128  00151C  0B10               	andlw	16
  6129  00151E  0100               	movlb	0	; () banked
  6130  001520  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6131  001522  0E01               	movlw	1
  6132  001524  ECA9  F006         	call	_lcd_set_com_seg
  6133                           
  6134                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  6135  001528  0E26               	movlw	38
  6136  00152A  0100               	movlb	0	; () banked
  6137  00152C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6138  00152E  0100               	movlb	0	; () banked
  6139  001530  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6140  001532  0B20               	andlw	32
  6141  001534  0100               	movlb	0	; () banked
  6142  001536  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6143  001538  0E02               	movlw	2
  6144  00153A  ECA9  F006         	call	_lcd_set_com_seg
  6145                           
  6146                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  6147  00153E  0E26               	movlw	38
  6148  001540  0100               	movlb	0	; () banked
  6149  001542  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6150  001544  0100               	movlb	0	; () banked
  6151  001546  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6152  001548  0B01               	andlw	1
  6153  00154A  0100               	movlb	0	; () banked
  6154  00154C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6155  00154E  0E03               	movlw	3
  6156  001550  ECA9  F006         	call	_lcd_set_com_seg
  6157                           
  6158                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  6159  001554  0E27               	movlw	39
  6160  001556  0100               	movlb	0	; () banked
  6161  001558  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6162  00155A  0100               	movlb	0	; () banked
  6163  00155C  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6164  00155E  0B04               	andlw	4
  6165  001560  0100               	movlb	0	; () banked
  6166  001562  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6167  001564  0E01               	movlw	1
  6168  001566  ECA9  F006         	call	_lcd_set_com_seg
  6169                           
  6170                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  6171  00156A  0E27               	movlw	39
  6172  00156C  0100               	movlb	0	; () banked
  6173  00156E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6174  001570  0100               	movlb	0	; () banked
  6175  001572  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6176  001574  0B40               	andlw	64
  6177  001576  0100               	movlb	0	; () banked
  6178  001578  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6179  00157A  0E02               	movlw	2
  6180  00157C  ECA9  F006         	call	_lcd_set_com_seg
  6181                           
  6182                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  6183  001580  0E27               	movlw	39
  6184  001582  0100               	movlb	0	; () banked
  6185  001584  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6186  001586  0100               	movlb	0	; () banked
  6187  001588  51D5               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  6188  00158A  0B02               	andlw	2
  6189  00158C  0100               	movlb	0	; () banked
  6190  00158E  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6191  001590  0E03               	movlw	3
  6192  001592  ECA9  F006         	call	_lcd_set_com_seg
  6193  001596  0012               	return		;funcret
  6194  001598                     __end_of_lcd_disp_chr_loc_5:
  6195                           	opt stack 0
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           indf0	equ	0xFEF
  6204                           postinc0	equ	0xFEE
  6205                           fsr0h	equ	0xFEA
  6206                           fsr0l	equ	0xFE9
  6207                           wreg	equ	0xFE8
  6208                           postdec1	equ	0xFE5
  6209                           plusw1	equ	0xFE3
  6210                           fsr1h	equ	0xFE2
  6211                           fsr1l	equ	0xFE1
  6212                           indf2	equ	0xFDF
  6213                           plusw2	equ	0xFDB
  6214                           fsr2h	equ	0xFDA
  6215                           fsr2l	equ	0xFD9
  6216                           status	equ	0xFD8
  6217                           
  6218 ;; *************** function _lcd_disp_chr_loc_4 *****************
  6219 ;; Defined at:
  6220 ;;		line 296 in file "src/driver/lcd.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  code            1    wreg     unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  code            1   16[BANK0 ] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;Total ram usage:        1 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    6
  6241 ;; This function calls:
  6242 ;;		_lcd_set_com_seg
  6243 ;; This function is called by:
  6244 ;;		_lcd_show_chr
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text32
  6249  001598                     __ptext32:
  6250                           	opt stack 0
  6251  001598                     _lcd_disp_chr_loc_4:
  6252                           	opt stack 21
  6253                           
  6254                           ;incstack = 0
  6255                           ;lcd_disp_chr_loc_4@code stored from wreg
  6256  001598  0100               	movlb	0	; () banked
  6257  00159A  6FD5               	movwf	lcd_disp_chr_loc_4@code& (0+255),b
  6258                           
  6259                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
  6260  00159C  0E24               	movlw	36
  6261  00159E  0100               	movlb	0	; () banked
  6262  0015A0  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6263  0015A2  0100               	movlb	0	; () banked
  6264  0015A4  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6265  0015A6  0B08               	andlw	8
  6266  0015A8  0100               	movlb	0	; () banked
  6267  0015AA  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6268  0015AC  0E00               	movlw	0
  6269  0015AE  ECA9  F006         	call	_lcd_set_com_seg
  6270                           
  6271                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
  6272  0015B2  0E24               	movlw	36
  6273  0015B4  0100               	movlb	0	; () banked
  6274  0015B6  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6275  0015B8  0100               	movlb	0	; () banked
  6276  0015BA  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6277  0015BC  0B10               	andlw	16
  6278  0015BE  0100               	movlb	0	; () banked
  6279  0015C0  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6280  0015C2  0E01               	movlw	1
  6281  0015C4  ECA9  F006         	call	_lcd_set_com_seg
  6282                           
  6283                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
  6284  0015C8  0E24               	movlw	36
  6285  0015CA  0100               	movlb	0	; () banked
  6286  0015CC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6287  0015CE  0100               	movlb	0	; () banked
  6288  0015D0  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6289  0015D2  0B20               	andlw	32
  6290  0015D4  0100               	movlb	0	; () banked
  6291  0015D6  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6292  0015D8  0E02               	movlw	2
  6293  0015DA  ECA9  F006         	call	_lcd_set_com_seg
  6294                           
  6295                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
  6296  0015DE  0E24               	movlw	36
  6297  0015E0  0100               	movlb	0	; () banked
  6298  0015E2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6299  0015E4  0100               	movlb	0	; () banked
  6300  0015E6  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6301  0015E8  0B01               	andlw	1
  6302  0015EA  0100               	movlb	0	; () banked
  6303  0015EC  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6304  0015EE  0E03               	movlw	3
  6305  0015F0  ECA9  F006         	call	_lcd_set_com_seg
  6306                           
  6307                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
  6308  0015F4  0E25               	movlw	37
  6309  0015F6  0100               	movlb	0	; () banked
  6310  0015F8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6311  0015FA  0100               	movlb	0	; () banked
  6312  0015FC  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6313  0015FE  0B04               	andlw	4
  6314  001600  0100               	movlb	0	; () banked
  6315  001602  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6316  001604  0E01               	movlw	1
  6317  001606  ECA9  F006         	call	_lcd_set_com_seg
  6318                           
  6319                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
  6320  00160A  0E25               	movlw	37
  6321  00160C  0100               	movlb	0	; () banked
  6322  00160E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6323  001610  0100               	movlb	0	; () banked
  6324  001612  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6325  001614  0B40               	andlw	64
  6326  001616  0100               	movlb	0	; () banked
  6327  001618  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6328  00161A  0E02               	movlw	2
  6329  00161C  ECA9  F006         	call	_lcd_set_com_seg
  6330                           
  6331                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
  6332  001620  0E25               	movlw	37
  6333  001622  0100               	movlb	0	; () banked
  6334  001624  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6335  001626  0100               	movlb	0	; () banked
  6336  001628  51D5               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6337  00162A  0B02               	andlw	2
  6338  00162C  0100               	movlb	0	; () banked
  6339  00162E  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6340  001630  0E03               	movlw	3
  6341  001632  ECA9  F006         	call	_lcd_set_com_seg
  6342  001636  0012               	return		;funcret
  6343  001638                     __end_of_lcd_disp_chr_loc_4:
  6344                           	opt stack 0
  6345                           tblptru	equ	0xFF8
  6346                           tblptrh	equ	0xFF7
  6347                           tblptrl	equ	0xFF6
  6348                           tablat	equ	0xFF5
  6349                           prodh	equ	0xFF4
  6350                           prodl	equ	0xFF3
  6351                           intcon	equ	0xFF2
  6352                           indf0	equ	0xFEF
  6353                           postinc0	equ	0xFEE
  6354                           fsr0h	equ	0xFEA
  6355                           fsr0l	equ	0xFE9
  6356                           wreg	equ	0xFE8
  6357                           postdec1	equ	0xFE5
  6358                           plusw1	equ	0xFE3
  6359                           fsr1h	equ	0xFE2
  6360                           fsr1l	equ	0xFE1
  6361                           indf2	equ	0xFDF
  6362                           plusw2	equ	0xFDB
  6363                           fsr2h	equ	0xFDA
  6364                           fsr2l	equ	0xFD9
  6365                           status	equ	0xFD8
  6366                           
  6367 ;; *************** function _lcd_disp_chr_loc_3 *****************
  6368 ;; Defined at:
  6369 ;;		line 284 in file "src/driver/lcd.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  code            1    wreg     unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  code            1   16[BANK0 ] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;Total ram usage:        1 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    6
  6390 ;; This function calls:
  6391 ;;		_lcd_set_com_seg
  6392 ;; This function is called by:
  6393 ;;		_lcd_show_chr
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text33
  6398  001638                     __ptext33:
  6399                           	opt stack 0
  6400  001638                     _lcd_disp_chr_loc_3:
  6401                           	opt stack 21
  6402                           
  6403                           ;incstack = 0
  6404                           ;lcd_disp_chr_loc_3@code stored from wreg
  6405  001638  0100               	movlb	0	; () banked
  6406  00163A  6FD5               	movwf	lcd_disp_chr_loc_3@code& (0+255),b
  6407                           
  6408                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
  6409  00163C  0E2B               	movlw	43
  6410  00163E  0100               	movlb	0	; () banked
  6411  001640  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6412  001642  0100               	movlb	0	; () banked
  6413  001644  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6414  001646  0B01               	andlw	1
  6415  001648  0100               	movlb	0	; () banked
  6416  00164A  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6417  00164C  0E00               	movlw	0
  6418  00164E  ECA9  F006         	call	_lcd_set_com_seg
  6419                           
  6420                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
  6421  001652  0E2B               	movlw	43
  6422  001654  0100               	movlb	0	; () banked
  6423  001656  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6424  001658  0100               	movlb	0	; () banked
  6425  00165A  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6426  00165C  0B20               	andlw	32
  6427  00165E  0100               	movlb	0	; () banked
  6428  001660  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6429  001662  0E01               	movlw	1
  6430  001664  ECA9  F006         	call	_lcd_set_com_seg
  6431                           
  6432                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
  6433  001668  0E2B               	movlw	43
  6434  00166A  0100               	movlb	0	; () banked
  6435  00166C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6436  00166E  0100               	movlb	0	; () banked
  6437  001670  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6438  001672  0B10               	andlw	16
  6439  001674  0100               	movlb	0	; () banked
  6440  001676  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6441  001678  0E02               	movlw	2
  6442  00167A  ECA9  F006         	call	_lcd_set_com_seg
  6443                           
  6444                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
  6445  00167E  0E2B               	movlw	43
  6446  001680  0100               	movlb	0	; () banked
  6447  001682  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6448  001684  0100               	movlb	0	; () banked
  6449  001686  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6450  001688  0B08               	andlw	8
  6451  00168A  0100               	movlb	0	; () banked
  6452  00168C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6453  00168E  0E03               	movlw	3
  6454  001690  ECA9  F006         	call	_lcd_set_com_seg
  6455                           
  6456                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
  6457  001694  0E2A               	movlw	42
  6458  001696  0100               	movlb	0	; () banked
  6459  001698  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6460  00169A  0100               	movlb	0	; () banked
  6461  00169C  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6462  00169E  0B02               	andlw	2
  6463  0016A0  0100               	movlb	0	; () banked
  6464  0016A2  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6465  0016A4  0E00               	movlw	0
  6466  0016A6  ECA9  F006         	call	_lcd_set_com_seg
  6467                           
  6468                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
  6469  0016AA  0E2A               	movlw	42
  6470  0016AC  0100               	movlb	0	; () banked
  6471  0016AE  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6472  0016B0  0100               	movlb	0	; () banked
  6473  0016B2  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6474  0016B4  0B40               	andlw	64
  6475  0016B6  0100               	movlb	0	; () banked
  6476  0016B8  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6477  0016BA  0E01               	movlw	1
  6478  0016BC  ECA9  F006         	call	_lcd_set_com_seg
  6479                           
  6480                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
  6481  0016C0  0E2A               	movlw	42
  6482  0016C2  0100               	movlb	0	; () banked
  6483  0016C4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6484  0016C6  0100               	movlb	0	; () banked
  6485  0016C8  51D5               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6486  0016CA  0B04               	andlw	4
  6487  0016CC  0100               	movlb	0	; () banked
  6488  0016CE  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6489  0016D0  0E02               	movlw	2
  6490  0016D2  ECA9  F006         	call	_lcd_set_com_seg
  6491  0016D6  0012               	return		;funcret
  6492  0016D8                     __end_of_lcd_disp_chr_loc_3:
  6493                           	opt stack 0
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           indf0	equ	0xFEF
  6502                           postinc0	equ	0xFEE
  6503                           fsr0h	equ	0xFEA
  6504                           fsr0l	equ	0xFE9
  6505                           wreg	equ	0xFE8
  6506                           postdec1	equ	0xFE5
  6507                           plusw1	equ	0xFE3
  6508                           fsr1h	equ	0xFE2
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           plusw2	equ	0xFDB
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _lcd_disp_chr_loc_2 *****************
  6517 ;; Defined at:
  6518 ;;		line 265 in file "src/driver/lcd.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  code            1    wreg     unsigned char 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  code            1   16[BANK0 ] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        1 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    6
  6539 ;; This function calls:
  6540 ;;		_lcd_set_com_seg
  6541 ;; This function is called by:
  6542 ;;		_lcd_show_chr
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text34
  6547  0016D8                     __ptext34:
  6548                           	opt stack 0
  6549  0016D8                     _lcd_disp_chr_loc_2:
  6550                           	opt stack 21
  6551                           
  6552                           ;incstack = 0
  6553                           ;lcd_disp_chr_loc_2@code stored from wreg
  6554  0016D8  0100               	movlb	0	; () banked
  6555  0016DA  6FD5               	movwf	lcd_disp_chr_loc_2@code& (0+255),b
  6556                           
  6557                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
  6558  0016DC  0E15               	movlw	21
  6559  0016DE  0100               	movlb	0	; () banked
  6560  0016E0  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6561  0016E2  0100               	movlb	0	; () banked
  6562  0016E4  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6563  0016E6  0B01               	andlw	1
  6564  0016E8  0100               	movlb	0	; () banked
  6565  0016EA  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6566  0016EC  0E00               	movlw	0
  6567  0016EE  ECA9  F006         	call	_lcd_set_com_seg
  6568                           
  6569                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
  6570  0016F2  0E15               	movlw	21
  6571  0016F4  0100               	movlb	0	; () banked
  6572  0016F6  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6573  0016F8  0100               	movlb	0	; () banked
  6574  0016FA  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6575  0016FC  0B20               	andlw	32
  6576  0016FE  0100               	movlb	0	; () banked
  6577  001700  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6578  001702  0E01               	movlw	1
  6579  001704  ECA9  F006         	call	_lcd_set_com_seg
  6580                           
  6581                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
  6582  001708  0E15               	movlw	21
  6583  00170A  0100               	movlb	0	; () banked
  6584  00170C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6585  00170E  0100               	movlb	0	; () banked
  6586  001710  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6587  001712  0B10               	andlw	16
  6588  001714  0100               	movlb	0	; () banked
  6589  001716  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6590  001718  0E02               	movlw	2
  6591  00171A  ECA9  F006         	call	_lcd_set_com_seg
  6592                           
  6593                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
  6594  00171E  0E15               	movlw	21
  6595  001720  0100               	movlb	0	; () banked
  6596  001722  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6597  001724  0100               	movlb	0	; () banked
  6598  001726  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6599  001728  0B08               	andlw	8
  6600  00172A  0100               	movlb	0	; () banked
  6601  00172C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6602  00172E  0E03               	movlw	3
  6603  001730  ECA9  F006         	call	_lcd_set_com_seg
  6604                           
  6605                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
  6606  001734  0E14               	movlw	20
  6607  001736  0100               	movlb	0	; () banked
  6608  001738  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6609  00173A  0100               	movlb	0	; () banked
  6610  00173C  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6611  00173E  0B02               	andlw	2
  6612  001740  0100               	movlb	0	; () banked
  6613  001742  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6614  001744  0E00               	movlw	0
  6615  001746  ECA9  F006         	call	_lcd_set_com_seg
  6616                           
  6617                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
  6618  00174A  0E14               	movlw	20
  6619  00174C  0100               	movlb	0	; () banked
  6620  00174E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6621  001750  0100               	movlb	0	; () banked
  6622  001752  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6623  001754  0B40               	andlw	64
  6624  001756  0100               	movlb	0	; () banked
  6625  001758  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6626  00175A  0E01               	movlw	1
  6627  00175C  ECA9  F006         	call	_lcd_set_com_seg
  6628                           
  6629                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
  6630  001760  0E14               	movlw	20
  6631  001762  0100               	movlb	0	; () banked
  6632  001764  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6633  001766  0100               	movlb	0	; () banked
  6634  001768  51D5               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6635  00176A  0B04               	andlw	4
  6636  00176C  0100               	movlb	0	; () banked
  6637  00176E  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6638  001770  0E02               	movlw	2
  6639  001772  ECA9  F006         	call	_lcd_set_com_seg
  6640  001776  0012               	return		;funcret
  6641  001778                     __end_of_lcd_disp_chr_loc_2:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           prodh	equ	0xFF4
  6648                           prodl	equ	0xFF3
  6649                           intcon	equ	0xFF2
  6650                           indf0	equ	0xFEF
  6651                           postinc0	equ	0xFEE
  6652                           fsr0h	equ	0xFEA
  6653                           fsr0l	equ	0xFE9
  6654                           wreg	equ	0xFE8
  6655                           postdec1	equ	0xFE5
  6656                           plusw1	equ	0xFE3
  6657                           fsr1h	equ	0xFE2
  6658                           fsr1l	equ	0xFE1
  6659                           indf2	equ	0xFDF
  6660                           plusw2	equ	0xFDB
  6661                           fsr2h	equ	0xFDA
  6662                           fsr2l	equ	0xFD9
  6663                           status	equ	0xFD8
  6664                           
  6665 ;; *************** function _lcd_disp_chr_loc_1 *****************
  6666 ;; Defined at:
  6667 ;;		line 246 in file "src/driver/lcd.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  code            1    wreg     unsigned char 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  code            1   16[BANK0 ] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;Total ram usage:        1 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    6
  6688 ;; This function calls:
  6689 ;;		_lcd_set_com_seg
  6690 ;; This function is called by:
  6691 ;;		_lcd_show_chr
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text35
  6696  001778                     __ptext35:
  6697                           	opt stack 0
  6698  001778                     _lcd_disp_chr_loc_1:
  6699                           	opt stack 21
  6700                           
  6701                           ;incstack = 0
  6702                           ;lcd_disp_chr_loc_1@code stored from wreg
  6703  001778  0100               	movlb	0	; () banked
  6704  00177A  6FD5               	movwf	lcd_disp_chr_loc_1@code& (0+255),b
  6705                           
  6706                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
  6707  00177C  0E17               	movlw	23
  6708  00177E  0100               	movlb	0	; () banked
  6709  001780  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6710  001782  0100               	movlb	0	; () banked
  6711  001784  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6712  001786  0B01               	andlw	1
  6713  001788  0100               	movlb	0	; () banked
  6714  00178A  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6715  00178C  0E00               	movlw	0
  6716  00178E  ECA9  F006         	call	_lcd_set_com_seg
  6717                           
  6718                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
  6719  001792  0E17               	movlw	23
  6720  001794  0100               	movlb	0	; () banked
  6721  001796  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6722  001798  0100               	movlb	0	; () banked
  6723  00179A  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6724  00179C  0B20               	andlw	32
  6725  00179E  0100               	movlb	0	; () banked
  6726  0017A0  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6727  0017A2  0E01               	movlw	1
  6728  0017A4  ECA9  F006         	call	_lcd_set_com_seg
  6729                           
  6730                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
  6731  0017A8  0E17               	movlw	23
  6732  0017AA  0100               	movlb	0	; () banked
  6733  0017AC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6734  0017AE  0100               	movlb	0	; () banked
  6735  0017B0  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6736  0017B2  0B10               	andlw	16
  6737  0017B4  0100               	movlb	0	; () banked
  6738  0017B6  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6739  0017B8  0E02               	movlw	2
  6740  0017BA  ECA9  F006         	call	_lcd_set_com_seg
  6741                           
  6742                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
  6743  0017BE  0E17               	movlw	23
  6744  0017C0  0100               	movlb	0	; () banked
  6745  0017C2  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6746  0017C4  0100               	movlb	0	; () banked
  6747  0017C6  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6748  0017C8  0B08               	andlw	8
  6749  0017CA  0100               	movlb	0	; () banked
  6750  0017CC  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6751  0017CE  0E03               	movlw	3
  6752  0017D0  ECA9  F006         	call	_lcd_set_com_seg
  6753                           
  6754                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
  6755  0017D4  0E16               	movlw	22
  6756  0017D6  0100               	movlb	0	; () banked
  6757  0017D8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6758  0017DA  0100               	movlb	0	; () banked
  6759  0017DC  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6760  0017DE  0B02               	andlw	2
  6761  0017E0  0100               	movlb	0	; () banked
  6762  0017E2  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6763  0017E4  0E00               	movlw	0
  6764  0017E6  ECA9  F006         	call	_lcd_set_com_seg
  6765                           
  6766                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
  6767  0017EA  0E16               	movlw	22
  6768  0017EC  0100               	movlb	0	; () banked
  6769  0017EE  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6770  0017F0  0100               	movlb	0	; () banked
  6771  0017F2  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6772  0017F4  0B40               	andlw	64
  6773  0017F6  0100               	movlb	0	; () banked
  6774  0017F8  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6775  0017FA  0E01               	movlw	1
  6776  0017FC  ECA9  F006         	call	_lcd_set_com_seg
  6777                           
  6778                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
  6779  001800  0E16               	movlw	22
  6780  001802  0100               	movlb	0	; () banked
  6781  001804  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6782  001806  0100               	movlb	0	; () banked
  6783  001808  51D5               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6784  00180A  0B04               	andlw	4
  6785  00180C  0100               	movlb	0	; () banked
  6786  00180E  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6787  001810  0E02               	movlw	2
  6788  001812  ECA9  F006         	call	_lcd_set_com_seg
  6789  001816  0012               	return		;funcret
  6790  001818                     __end_of_lcd_disp_chr_loc_1:
  6791                           	opt stack 0
  6792                           tblptru	equ	0xFF8
  6793                           tblptrh	equ	0xFF7
  6794                           tblptrl	equ	0xFF6
  6795                           tablat	equ	0xFF5
  6796                           prodh	equ	0xFF4
  6797                           prodl	equ	0xFF3
  6798                           intcon	equ	0xFF2
  6799                           indf0	equ	0xFEF
  6800                           postinc0	equ	0xFEE
  6801                           fsr0h	equ	0xFEA
  6802                           fsr0l	equ	0xFE9
  6803                           wreg	equ	0xFE8
  6804                           postdec1	equ	0xFE5
  6805                           plusw1	equ	0xFE3
  6806                           fsr1h	equ	0xFE2
  6807                           fsr1l	equ	0xFE1
  6808                           indf2	equ	0xFDF
  6809                           plusw2	equ	0xFDB
  6810                           fsr2h	equ	0xFDA
  6811                           fsr2l	equ	0xFD9
  6812                           status	equ	0xFD8
  6813                           
  6814 ;; *************** function _lcd_disp_chr_loc_0 *****************
  6815 ;; Defined at:
  6816 ;;		line 226 in file "src/driver/lcd.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  code            1    wreg     unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  code            1   16[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    6
  6837 ;; This function calls:
  6838 ;;		_lcd_set_com_seg
  6839 ;; This function is called by:
  6840 ;;		_lcd_show_chr
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text36
  6845  001818                     __ptext36:
  6846                           	opt stack 0
  6847  001818                     _lcd_disp_chr_loc_0:
  6848                           	opt stack 21
  6849                           
  6850                           ;incstack = 0
  6851                           ;lcd_disp_chr_loc_0@code stored from wreg
  6852  001818  0100               	movlb	0	; () banked
  6853  00181A  6FD5               	movwf	lcd_disp_chr_loc_0@code& (0+255),b
  6854                           
  6855                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
  6856  00181C  0E19               	movlw	25
  6857  00181E  0100               	movlb	0	; () banked
  6858  001820  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6859  001822  0100               	movlb	0	; () banked
  6860  001824  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6861  001826  0B01               	andlw	1
  6862  001828  0100               	movlb	0	; () banked
  6863  00182A  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6864  00182C  0E00               	movlw	0
  6865  00182E  ECA9  F006         	call	_lcd_set_com_seg
  6866                           
  6867                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
  6868  001832  0E19               	movlw	25
  6869  001834  0100               	movlb	0	; () banked
  6870  001836  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6871  001838  0100               	movlb	0	; () banked
  6872  00183A  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6873  00183C  0B20               	andlw	32
  6874  00183E  0100               	movlb	0	; () banked
  6875  001840  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6876  001842  0E01               	movlw	1
  6877  001844  ECA9  F006         	call	_lcd_set_com_seg
  6878                           
  6879                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
  6880  001848  0E19               	movlw	25
  6881  00184A  0100               	movlb	0	; () banked
  6882  00184C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6883  00184E  0100               	movlb	0	; () banked
  6884  001850  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6885  001852  0B10               	andlw	16
  6886  001854  0100               	movlb	0	; () banked
  6887  001856  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6888  001858  0E02               	movlw	2
  6889  00185A  ECA9  F006         	call	_lcd_set_com_seg
  6890                           
  6891                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
  6892  00185E  0E19               	movlw	25
  6893  001860  0100               	movlb	0	; () banked
  6894  001862  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6895  001864  0100               	movlb	0	; () banked
  6896  001866  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6897  001868  0B08               	andlw	8
  6898  00186A  0100               	movlb	0	; () banked
  6899  00186C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6900  00186E  0E03               	movlw	3
  6901  001870  ECA9  F006         	call	_lcd_set_com_seg
  6902                           
  6903                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
  6904  001874  0E18               	movlw	24
  6905  001876  0100               	movlb	0	; () banked
  6906  001878  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6907  00187A  0100               	movlb	0	; () banked
  6908  00187C  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6909  00187E  0B02               	andlw	2
  6910  001880  0100               	movlb	0	; () banked
  6911  001882  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6912  001884  0E00               	movlw	0
  6913  001886  ECA9  F006         	call	_lcd_set_com_seg
  6914                           
  6915                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
  6916  00188A  0E18               	movlw	24
  6917  00188C  0100               	movlb	0	; () banked
  6918  00188E  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6919  001890  0100               	movlb	0	; () banked
  6920  001892  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6921  001894  0B40               	andlw	64
  6922  001896  0100               	movlb	0	; () banked
  6923  001898  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6924  00189A  0E01               	movlw	1
  6925  00189C  ECA9  F006         	call	_lcd_set_com_seg
  6926                           
  6927                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
  6928  0018A0  0E18               	movlw	24
  6929  0018A2  0100               	movlb	0	; () banked
  6930  0018A4  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  6931  0018A6  0100               	movlb	0	; () banked
  6932  0018A8  51D5               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6933  0018AA  0B04               	andlw	4
  6934  0018AC  0100               	movlb	0	; () banked
  6935  0018AE  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  6936  0018B0  0E02               	movlw	2
  6937  0018B2  ECA9  F006         	call	_lcd_set_com_seg
  6938  0018B6  0012               	return		;funcret
  6939  0018B8                     __end_of_lcd_disp_chr_loc_0:
  6940                           	opt stack 0
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           prodh	equ	0xFF4
  6946                           prodl	equ	0xFF3
  6947                           intcon	equ	0xFF2
  6948                           indf0	equ	0xFEF
  6949                           postinc0	equ	0xFEE
  6950                           fsr0h	equ	0xFEA
  6951                           fsr0l	equ	0xFE9
  6952                           wreg	equ	0xFE8
  6953                           postdec1	equ	0xFE5
  6954                           plusw1	equ	0xFE3
  6955                           fsr1h	equ	0xFE2
  6956                           fsr1l	equ	0xFE1
  6957                           indf2	equ	0xFDF
  6958                           plusw2	equ	0xFDB
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _lcd_show_dp *****************
  6964 ;; Defined at:
  6965 ;;		line 474 in file "src/driver/lcd.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  loc             1    wreg     unsigned char 
  6968 ;;  show            1   17[BANK0 ] unsigned char 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  loc             1   18[BANK0 ] unsigned char 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6980 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;Total ram usage:        2 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    7
  6987 ;; This function calls:
  6988 ;;		_lcd_disp_dp_loc_0
  6989 ;;		_lcd_disp_dp_loc_1
  6990 ;;		_lcd_disp_dp_loc_2
  6991 ;; This function is called by:
  6992 ;;		_ui_disp_rtc_mm_ss
  6993 ;;		_ui_disp_clear_num_dp
  6994 ;;		_ui_disp_adj_xfloat_pt
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text37
  6999  001C4A                     __ptext37:
  7000                           	opt stack 0
  7001  001C4A                     _lcd_show_dp:
  7002                           	opt stack 22
  7003                           
  7004                           ;incstack = 0
  7005                           ;lcd_show_dp@loc stored from wreg
  7006  001C4A  0100               	movlb	0	; () banked
  7007  001C4C  6FD7               	movwf	lcd_show_dp@loc& (0+255),b
  7008                           
  7009                           ;lcd.c: 476: switch(loc){
  7010  001C4E  D01E               	goto	l7107
  7011  001C50                     l7093:
  7012  001C50  0100               	movlb	0	; () banked
  7013  001C52  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7014  001C54  ECCB  F012         	call	_lcd_disp_dp_loc_0
  7015  001C58  0012               	return	
  7016  001C5A                     l7095:
  7017  001C5A  0100               	movlb	0	; () banked
  7018  001C5C  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7019  001C5E  ECB0  F012         	call	_lcd_disp_dp_loc_1
  7020  001C62  0012               	return	
  7021  001C64                     l7097:
  7022  001C64  0100               	movlb	0	; () banked
  7023  001C66  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7024  001C68  EC95  F012         	call	_lcd_disp_dp_loc_2
  7025  001C6C  0012               	return	
  7026  001C6E                     l7099:
  7027  001C6E  0100               	movlb	0	; () banked
  7028  001C70  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7029  001C72  ECCB  F012         	call	_lcd_disp_dp_loc_0
  7030  001C76  0012               	return	
  7031  001C78                     l7101:
  7032  001C78  0100               	movlb	0	; () banked
  7033  001C7A  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7034  001C7C  ECB0  F012         	call	_lcd_disp_dp_loc_1
  7035  001C80  0012               	return	
  7036  001C82                     l7103:
  7037  001C82  0100               	movlb	0	; () banked
  7038  001C84  51D6               	movf	lcd_show_dp@show& (0+255),w,b
  7039  001C86  EC95  F012         	call	_lcd_disp_dp_loc_2
  7040                           
  7041                           ;lcd.c: 486: }
  7042                           
  7043                           ;lcd.c: 485: default:break;
  7044  001C8A  0012               	return	
  7045  001C8C                     l7107:
  7046  001C8C  0100               	movlb	0	; () banked
  7047  001C8E  51D7               	movf	lcd_show_dp@loc& (0+255),w,b
  7048                           
  7049                           ; Switch size 1, requested type "space"
  7050                           ; Number of cases is 6, Range of values is 0 to 6
  7051                           ; switch strategies available:
  7052                           ; Name         Instructions Cycles
  7053                           ; simple_byte           19    10 (average)
  7054                           ;	Chosen strategy is simple_byte
  7055  001C90  0A00               	xorlw	0	; case 0
  7056  001C92  B4D8               	btfsc	status,2,c
  7057  001C94  D7DD               	goto	l7093
  7058  001C96  0A01               	xorlw	1	; case 1
  7059  001C98  B4D8               	btfsc	status,2,c
  7060  001C9A  D7DF               	goto	l7095
  7061  001C9C  0A03               	xorlw	3	; case 2
  7062  001C9E  B4D8               	btfsc	status,2,c
  7063  001CA0  D7E1               	goto	l7097
  7064  001CA2  0A06               	xorlw	6	; case 4
  7065  001CA4  B4D8               	btfsc	status,2,c
  7066  001CA6  D7E3               	goto	l7099
  7067  001CA8  0A01               	xorlw	1	; case 5
  7068  001CAA  B4D8               	btfsc	status,2,c
  7069  001CAC  D7E5               	goto	l7101
  7070  001CAE  0A03               	xorlw	3	; case 6
  7071  001CB0  A4D8               	btfss	status,2,c
  7072  001CB2  0012               	return	
  7073  001CB4  D7E6               	goto	l7103
  7074  001CB6                     __end_of_lcd_show_dp:
  7075                           	opt stack 0
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           indf0	equ	0xFEF
  7084                           postinc0	equ	0xFEE
  7085                           fsr0h	equ	0xFEA
  7086                           fsr0l	equ	0xFE9
  7087                           wreg	equ	0xFE8
  7088                           postdec1	equ	0xFE5
  7089                           plusw1	equ	0xFE3
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           plusw2	equ	0xFDB
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           
  7098 ;; *************** function _lcd_disp_dp_loc_2 *****************
  7099 ;; Defined at:
  7100 ;;		line 276 in file "src/driver/lcd.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  dp              1    wreg     unsigned char 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  dp              1   16[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        1 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    6
  7121 ;; This function calls:
  7122 ;;		_lcd_set_com_seg
  7123 ;; This function is called by:
  7124 ;;		_lcd_show_dp
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text38
  7129  00252A                     __ptext38:
  7130                           	opt stack 0
  7131  00252A                     _lcd_disp_dp_loc_2:
  7132                           	opt stack 22
  7133                           
  7134                           ;incstack = 0
  7135                           ;lcd_disp_dp_loc_2@dp stored from wreg
  7136  00252A  0100               	movlb	0	; () banked
  7137  00252C  6FD5               	movwf	lcd_disp_dp_loc_2@dp& (0+255),b
  7138                           
  7139                           ;lcd.c: 278: if(dp)
  7140  00252E  0100               	movlb	0	; () banked
  7141  002530  51D5               	movf	lcd_disp_dp_loc_2@dp& (0+255),w,b
  7142  002532  0100               	movlb	0	; () banked
  7143  002534  B4D8               	btfsc	status,2,c
  7144  002536  D00A               	goto	l7067
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
  7148  002538  0E14               	movlw	20
  7149  00253A  0100               	movlb	0	; () banked
  7150  00253C  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7151  00253E  0E80               	movlw	128
  7152  002540  0100               	movlb	0	; () banked
  7153  002542  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7154  002544  0E03               	movlw	3
  7155  002546  ECA9  F006         	call	_lcd_set_com_seg
  7156  00254A  0012               	return	
  7157  00254C                     l7067:
  7158                           
  7159                           ;lcd.c: 280: else
  7160                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
  7161  00254C  0E14               	movlw	20
  7162  00254E  0100               	movlb	0	; () banked
  7163  002550  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7164  002552  0E00               	movlw	0
  7165  002554  0100               	movlb	0	; () banked
  7166  002556  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7167  002558  0E03               	movlw	3
  7168  00255A  ECA9  F006         	call	_lcd_set_com_seg
  7169  00255E  0012               	return	
  7170  002560                     __end_of_lcd_disp_dp_loc_2:
  7171                           	opt stack 0
  7172                           tblptru	equ	0xFF8
  7173                           tblptrh	equ	0xFF7
  7174                           tblptrl	equ	0xFF6
  7175                           tablat	equ	0xFF5
  7176                           prodh	equ	0xFF4
  7177                           prodl	equ	0xFF3
  7178                           intcon	equ	0xFF2
  7179                           indf0	equ	0xFEF
  7180                           postinc0	equ	0xFEE
  7181                           fsr0h	equ	0xFEA
  7182                           fsr0l	equ	0xFE9
  7183                           wreg	equ	0xFE8
  7184                           postdec1	equ	0xFE5
  7185                           plusw1	equ	0xFE3
  7186                           fsr1h	equ	0xFE2
  7187                           fsr1l	equ	0xFE1
  7188                           indf2	equ	0xFDF
  7189                           plusw2	equ	0xFDB
  7190                           fsr2h	equ	0xFDA
  7191                           fsr2l	equ	0xFD9
  7192                           status	equ	0xFD8
  7193                           
  7194 ;; *************** function _lcd_disp_dp_loc_1 *****************
  7195 ;; Defined at:
  7196 ;;		line 257 in file "src/driver/lcd.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  dp              1    wreg     unsigned char 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  dp              1   16[BANK0 ] unsigned char 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;Total ram usage:        1 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    6
  7217 ;; This function calls:
  7218 ;;		_lcd_set_com_seg
  7219 ;; This function is called by:
  7220 ;;		_lcd_show_dp
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text39
  7225  002560                     __ptext39:
  7226                           	opt stack 0
  7227  002560                     _lcd_disp_dp_loc_1:
  7228                           	opt stack 22
  7229                           
  7230                           ;incstack = 0
  7231                           ;lcd_disp_dp_loc_1@dp stored from wreg
  7232  002560  0100               	movlb	0	; () banked
  7233  002562  6FD5               	movwf	lcd_disp_dp_loc_1@dp& (0+255),b
  7234                           
  7235                           ;lcd.c: 259: if(dp)
  7236  002564  0100               	movlb	0	; () banked
  7237  002566  51D5               	movf	lcd_disp_dp_loc_1@dp& (0+255),w,b
  7238  002568  0100               	movlb	0	; () banked
  7239  00256A  B4D8               	btfsc	status,2,c
  7240  00256C  D00A               	goto	l7061
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
  7244  00256E  0E16               	movlw	22
  7245  002570  0100               	movlb	0	; () banked
  7246  002572  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7247  002574  0E80               	movlw	128
  7248  002576  0100               	movlb	0	; () banked
  7249  002578  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7250  00257A  0E03               	movlw	3
  7251  00257C  ECA9  F006         	call	_lcd_set_com_seg
  7252  002580  0012               	return	
  7253  002582                     l7061:
  7254                           
  7255                           ;lcd.c: 261: else
  7256                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
  7257  002582  0E16               	movlw	22
  7258  002584  0100               	movlb	0	; () banked
  7259  002586  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7260  002588  0E00               	movlw	0
  7261  00258A  0100               	movlb	0	; () banked
  7262  00258C  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7263  00258E  0E03               	movlw	3
  7264  002590  ECA9  F006         	call	_lcd_set_com_seg
  7265  002594  0012               	return	
  7266  002596                     __end_of_lcd_disp_dp_loc_1:
  7267                           	opt stack 0
  7268                           tblptru	equ	0xFF8
  7269                           tblptrh	equ	0xFF7
  7270                           tblptrl	equ	0xFF6
  7271                           tablat	equ	0xFF5
  7272                           prodh	equ	0xFF4
  7273                           prodl	equ	0xFF3
  7274                           intcon	equ	0xFF2
  7275                           indf0	equ	0xFEF
  7276                           postinc0	equ	0xFEE
  7277                           fsr0h	equ	0xFEA
  7278                           fsr0l	equ	0xFE9
  7279                           wreg	equ	0xFE8
  7280                           postdec1	equ	0xFE5
  7281                           plusw1	equ	0xFE3
  7282                           fsr1h	equ	0xFE2
  7283                           fsr1l	equ	0xFE1
  7284                           indf2	equ	0xFDF
  7285                           plusw2	equ	0xFDB
  7286                           fsr2h	equ	0xFDA
  7287                           fsr2l	equ	0xFD9
  7288                           status	equ	0xFD8
  7289                           
  7290 ;; *************** function _lcd_disp_dp_loc_0 *****************
  7291 ;; Defined at:
  7292 ;;		line 238 in file "src/driver/lcd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  dp              1    wreg     unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  dp              1   16[BANK0 ] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;Total ram usage:        1 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    6
  7313 ;; This function calls:
  7314 ;;		_lcd_set_com_seg
  7315 ;; This function is called by:
  7316 ;;		_lcd_show_dp
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text40
  7321  002596                     __ptext40:
  7322                           	opt stack 0
  7323  002596                     _lcd_disp_dp_loc_0:
  7324                           	opt stack 22
  7325                           
  7326                           ;incstack = 0
  7327                           ;lcd_disp_dp_loc_0@dp stored from wreg
  7328  002596  0100               	movlb	0	; () banked
  7329  002598  6FD5               	movwf	lcd_disp_dp_loc_0@dp& (0+255),b
  7330                           
  7331                           ;lcd.c: 240: if(dp)
  7332  00259A  0100               	movlb	0	; () banked
  7333  00259C  51D5               	movf	lcd_disp_dp_loc_0@dp& (0+255),w,b
  7334  00259E  0100               	movlb	0	; () banked
  7335  0025A0  B4D8               	btfsc	status,2,c
  7336  0025A2  D00A               	goto	l7055
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
  7340  0025A4  0E18               	movlw	24
  7341  0025A6  0100               	movlb	0	; () banked
  7342  0025A8  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7343  0025AA  0E80               	movlw	128
  7344  0025AC  0100               	movlb	0	; () banked
  7345  0025AE  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7346  0025B0  0E03               	movlw	3
  7347  0025B2  ECA9  F006         	call	_lcd_set_com_seg
  7348  0025B6  0012               	return	
  7349  0025B8                     l7055:
  7350                           
  7351                           ;lcd.c: 242: else
  7352                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
  7353  0025B8  0E18               	movlw	24
  7354  0025BA  0100               	movlb	0	; () banked
  7355  0025BC  6FCD               	movwf	lcd_set_com_seg@seg& (0+255),b
  7356  0025BE  0E00               	movlw	0
  7357  0025C0  0100               	movlb	0	; () banked
  7358  0025C2  6FCE               	movwf	lcd_set_com_seg@show& (0+255),b
  7359  0025C4  0E03               	movlw	3
  7360  0025C6  ECA9  F006         	call	_lcd_set_com_seg
  7361  0025CA  0012               	return	
  7362  0025CC                     __end_of_lcd_disp_dp_loc_0:
  7363                           	opt stack 0
  7364                           tblptru	equ	0xFF8
  7365                           tblptrh	equ	0xFF7
  7366                           tblptrl	equ	0xFF6
  7367                           tablat	equ	0xFF5
  7368                           prodh	equ	0xFF4
  7369                           prodl	equ	0xFF3
  7370                           intcon	equ	0xFF2
  7371                           indf0	equ	0xFEF
  7372                           postinc0	equ	0xFEE
  7373                           fsr0h	equ	0xFEA
  7374                           fsr0l	equ	0xFE9
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           plusw1	equ	0xFE3
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           indf2	equ	0xFDF
  7381                           plusw2	equ	0xFDB
  7382                           fsr2h	equ	0xFDA
  7383                           fsr2l	equ	0xFD9
  7384                           status	equ	0xFD8
  7385                           
  7386 ;; *************** function _lcd_set_com_seg *****************
  7387 ;; Defined at:
  7388 ;;		line 32 in file "src/driver/lcd.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  com             1    wreg     unsigned char 
  7391 ;;  seg             1    8[BANK0 ] unsigned char 
  7392 ;;  show            1    9[BANK0 ] unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  com             1   13[BANK0 ] unsigned char 
  7395 ;;  bits            1   15[BANK0 ] unsigned char 
  7396 ;;  offset          1   14[BANK0 ] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;Total ram usage:        8 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    5
  7413 ;; This function calls:
  7414 ;;		___awdiv
  7415 ;; This function is called by:
  7416 ;;		_lcd_disp_level_bar
  7417 ;;		_lcd_disp_chr_loc_0
  7418 ;;		_lcd_disp_dp_loc_0
  7419 ;;		_lcd_disp_chr_loc_1
  7420 ;;		_lcd_disp_dp_loc_1
  7421 ;;		_lcd_disp_chr_loc_2
  7422 ;;		_lcd_disp_dp_loc_2
  7423 ;;		_lcd_disp_chr_loc_3
  7424 ;;		_lcd_disp_chr_loc_4
  7425 ;;		_lcd_disp_chr_loc_5
  7426 ;;		_lcd_disp_chr_loc_6
  7427 ;;		_lcd_disp_chr_loc_7
  7428 ;;		_lcd_disp_logo
  7429 ;;		_lcd_disp_battary_bar
  7430 ;;		_lcd_disp_rf_bar
  7431 ;;		_lcd_disp_light_bar
  7432 ;;		_lcd_disp_dp_loc_4
  7433 ;;		_lcd_disp_dp_loc_5
  7434 ;;		_lcd_disp_dp_loc_6
  7435 ;;		_lcd_disp_unit_t
  7436 ;;		_lcd_disp_unit_1st_m
  7437 ;;		_lcd_disp_unit_1st_m3
  7438 ;;		_lcd_disp_unit_temperature
  7439 ;;		_lcd_disp_unit_2nd_m
  7440 ;;		_lcd_disp_unit_2nd_m3
  7441 ;;		_lcd_disp_unit_mpa
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text41
  7446  000D52                     __ptext41:
  7447                           	opt stack 0
  7448  000D52                     _lcd_set_com_seg:
  7449                           	opt stack 21
  7450                           
  7451                           ;incstack = 0
  7452                           ;lcd_set_com_seg@com stored from wreg
  7453  000D52  0100               	movlb	0	; () banked
  7454  000D54  6FD2               	movwf	lcd_set_com_seg@com& (0+255),b
  7455                           
  7456                           ;lcd.c: 34: uint8_t offset;
  7457                           ;lcd.c: 35: uint8_t bits;
  7458                           ;lcd.c: 36: if(com>3)return;
  7459  000D56  0E03               	movlw	3
  7460  000D58  0100               	movlb	0	; () banked
  7461  000D5A  65D2               	cpfsgt	lcd_set_com_seg@com& (0+255),b
  7462  000D5C  D001               	goto	l6999
  7463  000D5E  0012               	return	
  7464  000D60                     l6999:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;lcd.c: 37: if(seg>47)return;
  7468  000D60  0E2F               	movlw	47
  7469  000D62  0100               	movlb	0	; () banked
  7470  000D64  65CD               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
  7471  000D66  D001               	goto	l7003
  7472  000D68  0012               	return	
  7473  000D6A                     l7003:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;lcd.c: 38: offset=com*6 + seg/8;
  7477  000D6A  C0CD  F0C5         	movff	lcd_set_com_seg@seg,___awdiv@dividend
  7478  000D6E  0100               	movlb	0	; () banked
  7479  000D70  6BC6               	clrf	(___awdiv@dividend+1)& (0+255),b
  7480  000D72  0E00               	movlw	0
  7481  000D74  0100               	movlb	0	; () banked
  7482  000D76  6FC8               	movwf	(___awdiv@divisor+1)& (0+255),b
  7483  000D78  0E08               	movlw	8
  7484  000D7A  6FC7               	movwf	___awdiv@divisor& (0+255),b
  7485  000D7C  EC0D  F007         	call	___awdiv	;wreg free
  7486  000D80  0100               	movlb	0	; () banked
  7487  000D82  51D2               	movf	lcd_set_com_seg@com& (0+255),w,b
  7488  000D84  0D06               	mullw	6
  7489  000D86  50F3               	movf	prodl,w,c
  7490  000D88  0100               	movlb	0	; () banked
  7491  000D8A  25C5               	addwf	?___awdiv& (0+255),w,b
  7492  000D8C  0100               	movlb	0	; () banked
  7493  000D8E  6FD3               	movwf	lcd_set_com_seg@offset& (0+255),b
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;lcd.c: 39: bits=seg%8;
  7497  000D90  0100               	movlb	0	; () banked
  7498  000D92  51CD               	movf	lcd_set_com_seg@seg& (0+255),w,b
  7499  000D94  0B07               	andlw	7
  7500  000D96  0100               	movlb	0	; () banked
  7501  000D98  6FD4               	movwf	lcd_set_com_seg@bits& (0+255),b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;lcd.c: 40: if(show){
  7505  000D9A  0100               	movlb	0	; () banked
  7506  000D9C  51CE               	movf	lcd_set_com_seg@show& (0+255),w,b
  7507  000D9E  0100               	movlb	0	; () banked
  7508  000DA0  B4D8               	btfsc	status,2,c
  7509  000DA2  D01B               	goto	l7011
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
  7513  000DA4  C0D4  F0CF         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7514  000DA8  0E01               	movlw	1
  7515  000DAA  0100               	movlb	0	; () banked
  7516  000DAC  6FD0               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7517  000DAE  0100               	movlb	0	; () banked
  7518  000DB0  2BCF               	incf	??_lcd_set_com_seg& (0+255),f,b
  7519  000DB2  D003               	goto	u5214
  7520  000DB4                     u5215:
  7521  000DB4  0100               	movlb	0	; () banked
  7522  000DB6  90D8               	bcf	status,0,c
  7523  000DB8  37D0               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7524  000DBA                     u5214:
  7525  000DBA  0100               	movlb	0	; () banked
  7526  000DBC  2FCF               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7527  000DBE  D7FA               	goto	u5215
  7528  000DC0  0100               	movlb	0	; () banked
  7529  000DC2  51D3               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7530  000DC4  0D01               	mullw	1
  7531  000DC6  0E60               	movlw	low _pLCD
  7532  000DC8  24F3               	addwf	prodl,w,c
  7533  000DCA  6ED9               	movwf	fsr2l,c
  7534  000DCC  0E00               	movlw	high _pLCD
  7535  000DCE  20F4               	addwfc	prodh,w,c
  7536  000DD0  6EDA               	movwf	fsr2h,c
  7537  000DD2  0100               	movlb	0	; () banked
  7538  000DD4  51D0               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7539  000DD6  12DF               	iorwf	indf2,f,c
  7540                           
  7541                           ;lcd.c: 42: }else{
  7542  000DD8  0012               	return	
  7543  000DDA                     l7011:
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
  7547  000DDA  C0D4  F0CF         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7548  000DDE  0E01               	movlw	1
  7549  000DE0  0100               	movlb	0	; () banked
  7550  000DE2  6FD0               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7551  000DE4  0100               	movlb	0	; () banked
  7552  000DE6  2BCF               	incf	??_lcd_set_com_seg& (0+255),f,b
  7553  000DE8  D003               	goto	u5224
  7554  000DEA                     u5225:
  7555  000DEA  0100               	movlb	0	; () banked
  7556  000DEC  90D8               	bcf	status,0,c
  7557  000DEE  37D0               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7558  000DF0                     u5224:
  7559  000DF0  0100               	movlb	0	; () banked
  7560  000DF2  2FCF               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7561  000DF4  D7FA               	goto	u5225
  7562  000DF6  0100               	movlb	0	; () banked
  7563  000DF8  51D0               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7564  000DFA  0AFF               	xorlw	255
  7565  000DFC  0100               	movlb	0	; () banked
  7566  000DFE  6FD1               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
  7567  000E00  0100               	movlb	0	; () banked
  7568  000E02  51D3               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7569  000E04  0D01               	mullw	1
  7570  000E06  0E60               	movlw	low _pLCD
  7571  000E08  24F3               	addwf	prodl,w,c
  7572  000E0A  6ED9               	movwf	fsr2l,c
  7573  000E0C  0E00               	movlw	high _pLCD
  7574  000E0E  20F4               	addwfc	prodh,w,c
  7575  000E10  6EDA               	movwf	fsr2h,c
  7576  000E12  0100               	movlb	0	; () banked
  7577  000E14  51D1               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
  7578  000E16  16DF               	andwf	indf2,f,c
  7579  000E18  0012               	return	
  7580  000E1A                     __end_of_lcd_set_com_seg:
  7581                           	opt stack 0
  7582                           tblptru	equ	0xFF8
  7583                           tblptrh	equ	0xFF7
  7584                           tblptrl	equ	0xFF6
  7585                           tablat	equ	0xFF5
  7586                           prodh	equ	0xFF4
  7587                           prodl	equ	0xFF3
  7588                           intcon	equ	0xFF2
  7589                           indf0	equ	0xFEF
  7590                           postinc0	equ	0xFEE
  7591                           fsr0h	equ	0xFEA
  7592                           fsr0l	equ	0xFE9
  7593                           wreg	equ	0xFE8
  7594                           postdec1	equ	0xFE5
  7595                           plusw1	equ	0xFE3
  7596                           fsr1h	equ	0xFE2
  7597                           fsr1l	equ	0xFE1
  7598                           indf2	equ	0xFDF
  7599                           plusw2	equ	0xFDB
  7600                           fsr2h	equ	0xFDA
  7601                           fsr2l	equ	0xFD9
  7602                           status	equ	0xFD8
  7603                           
  7604 ;; *************** function _m_mem_cpy *****************
  7605 ;; Defined at:
  7606 ;;		line 51 in file "src/depend/m_string.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  d               2    0[BANK0 ] PTR unsigned char 
  7609 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7610 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7611 ;;		 -> STR_3(5), 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      void 
  7616 ;; Registers used:
  7617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;Total ram usage:        4 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    4
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_ui_disp_adj_xfixed_pt
  7634 ;;		_ui_disp_adj_xfloat_pt
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text42
  7639  002284                     __ptext42:
  7640                           	opt stack 0
  7641  002284                     _m_mem_cpy:
  7642                           	opt stack 22
  7643                           
  7644                           ;m_string.c: 53: while(*s!='\0')
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;incstack = 0
  7648  002284  D011               	goto	l7193
  7649  002286                     l7187:
  7650                           
  7651                           ;m_string.c: 54: {
  7652                           ;m_string.c: 55: *d++=*s++;
  7653  002286  C0C7  FFF6         	movff	m_mem_cpy@s,tblptrl
  7654  00228A  C0C8  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7655  00228E                     	if	0	;tblptru may be non-zero
  7656  00228E                     	endif
  7657  00228E                     	if	0	;tblptru may be non-zero
  7658  00228E                     	endif
  7659  00228E  C0C5  FFD9         	movff	m_mem_cpy@d,fsr2l
  7660  002292  C0C6  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7661  002296  0008               	tblrd		*
  7662  002298  CFF5 FFDF          	movff	tablat,indf2
  7663  00229C  0100               	movlb	0	; () banked
  7664  00229E  4BC7               	infsnz	m_mem_cpy@s& (0+255),f,b
  7665  0022A0  2BC8               	incf	(m_mem_cpy@s+1)& (0+255),f,b
  7666                           
  7667                           ; BSR set to: 0
  7668  0022A2  0100               	movlb	0	; () banked
  7669  0022A4  4BC5               	infsnz	m_mem_cpy@d& (0+255),f,b
  7670  0022A6  2BC6               	incf	(m_mem_cpy@d+1)& (0+255),f,b
  7671  0022A8                     l7193:
  7672  0022A8  C0C7  FFF6         	movff	m_mem_cpy@s,tblptrl
  7673  0022AC  C0C8  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7674  0022B0                     	if	0	;tblptru may be non-zero
  7675  0022B0                     	endif
  7676  0022B0                     	if	0	;tblptru may be non-zero
  7677  0022B0                     	endif
  7678  0022B0  0008               	tblrd		*
  7679  0022B2  50F5               	movf	tablat,w,c
  7680  0022B4  0900               	iorlw	0
  7681  0022B6  A4D8               	btfss	status,2,c
  7682  0022B8  D7E6               	goto	l7187
  7683                           
  7684                           ;m_string.c: 56: }
  7685                           ;m_string.c: 57: *d='\0';
  7686  0022BA  C0C5  FFD9         	movff	m_mem_cpy@d,fsr2l
  7687  0022BE  C0C6  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7688  0022C2  0E00               	movlw	0
  7689  0022C4  6EDF               	movwf	indf2,c
  7690  0022C6  0012               	return		;funcret
  7691  0022C8                     __end_of_m_mem_cpy:
  7692                           	opt stack 0
  7693                           tblptru	equ	0xFF8
  7694                           tblptrh	equ	0xFF7
  7695                           tblptrl	equ	0xFF6
  7696                           tablat	equ	0xFF5
  7697                           prodh	equ	0xFF4
  7698                           prodl	equ	0xFF3
  7699                           intcon	equ	0xFF2
  7700                           indf0	equ	0xFEF
  7701                           postinc0	equ	0xFEE
  7702                           fsr0h	equ	0xFEA
  7703                           fsr0l	equ	0xFE9
  7704                           wreg	equ	0xFE8
  7705                           postdec1	equ	0xFE5
  7706                           plusw1	equ	0xFE3
  7707                           fsr1h	equ	0xFE2
  7708                           fsr1l	equ	0xFE1
  7709                           indf2	equ	0xFDF
  7710                           plusw2	equ	0xFDB
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function _m_int16_2_str_4 *****************
  7716 ;; Defined at:
  7717 ;;		line 260 in file "src/depend/m_string.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  7720 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7721 ;;  x               2   10[BANK0 ] int 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;Total ram usage:        4 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    5
  7740 ;; This function calls:
  7741 ;;		___awdiv
  7742 ;;		___awmod
  7743 ;; This function is called by:
  7744 ;;		_ui_disp_adj_xfixed_pt
  7745 ;;		_ui_disp_adj_xfloat_pt
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text43
  7750  00076E                     __ptext43:
  7751                           	opt stack 0
  7752  00076E                     _m_int16_2_str_4:
  7753                           	opt stack 21
  7754                           
  7755                           ;m_string.c: 262: if(x>9999)x=9999;
  7756                           
  7757                           ;incstack = 0
  7758  00076E  0100               	movlb	0	; () banked
  7759  000770  BFD0               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
  7760  000772  D00D               	goto	l7201
  7761  000774  0E10               	movlw	16
  7762  000776  0100               	movlb	0	; () banked
  7763  000778  5DCF               	subwf	m_int16_2_str_4@x& (0+255),w,b
  7764  00077A  0E27               	movlw	39
  7765  00077C  0100               	movlb	0	; () banked
  7766  00077E  59D0               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
  7767  000780  A0D8               	btfss	status,0,c
  7768  000782  D005               	goto	l7201
  7769                           
  7770                           ; BSR set to: 0
  7771  000784  0E27               	movlw	39
  7772  000786  0100               	movlb	0	; () banked
  7773  000788  6FD0               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
  7774  00078A  0E0F               	movlw	15
  7775  00078C  6FCF               	movwf	m_int16_2_str_4@x& (0+255),b
  7776  00078E                     l7201:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;m_string.c: 263: buf[3]=HexTable[x%10];
  7780  00078E  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awmod@dividend
  7781  000792  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7782  000796  0E00               	movlw	0
  7783  000798  0100               	movlb	0	; () banked
  7784  00079A  6FC8               	movwf	(___awmod@divisor+1)& (0+255),b
  7785  00079C  0E0A               	movlw	10
  7786  00079E  6FC7               	movwf	___awmod@divisor& (0+255),b
  7787  0007A0  EC8B  F009         	call	___awmod	;wreg free
  7788  0007A4  0E0C               	movlw	low _HexTable
  7789  0007A6  0100               	movlb	0	; () banked
  7790  0007A8  25C5               	addwf	?___awmod& (0+255),w,b
  7791  0007AA  6EF6               	movwf	tblptrl,c
  7792  0007AC  0EFF               	movlw	high _HexTable
  7793  0007AE  0100               	movlb	0	; () banked
  7794  0007B0  21C6               	addwfc	(?___awmod+1)& (0+255),w,b
  7795  0007B2  6EF7               	movwf	tblptrh,c
  7796  0007B4                     	if	0	;There are less than 3 active tblptr bytes
  7797  0007B4                     	endif
  7798  0007B4  0100               	movlb	0	; () banked
  7799  0007B6  EE20 F003          	lfsr	2,3
  7800  0007BA  51CD               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7801  0007BC  26D9               	addwf	fsr2l,f,c
  7802  0007BE  51CE               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7803  0007C0  22DA               	addwfc	fsr2h,f,c
  7804  0007C2  0008               	tblrd		*
  7805  0007C4  CFF5 FFDF          	movff	tablat,indf2
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;m_string.c: 264: x/=10;
  7809  0007C8  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7810  0007CC  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7811  0007D0  0E00               	movlw	0
  7812  0007D2  0100               	movlb	0	; () banked
  7813  0007D4  6FC8               	movwf	(___awdiv@divisor+1)& (0+255),b
  7814  0007D6  0E0A               	movlw	10
  7815  0007D8  6FC7               	movwf	___awdiv@divisor& (0+255),b
  7816  0007DA  EC0D  F007         	call	___awdiv	;wreg free
  7817  0007DE  C0C5  F0CF         	movff	?___awdiv,m_int16_2_str_4@x
  7818  0007E2  C0C6  F0D0         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7819                           
  7820                           ;m_string.c: 265: buf[2]=HexTable[x%10];
  7821  0007E6  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awmod@dividend
  7822  0007EA  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7823  0007EE  0E00               	movlw	0
  7824  0007F0  0100               	movlb	0	; () banked
  7825  0007F2  6FC8               	movwf	(___awmod@divisor+1)& (0+255),b
  7826  0007F4  0E0A               	movlw	10
  7827  0007F6  6FC7               	movwf	___awmod@divisor& (0+255),b
  7828  0007F8  EC8B  F009         	call	___awmod	;wreg free
  7829  0007FC  0E0C               	movlw	low _HexTable
  7830  0007FE  0100               	movlb	0	; () banked
  7831  000800  25C5               	addwf	?___awmod& (0+255),w,b
  7832  000802  6EF6               	movwf	tblptrl,c
  7833  000804  0EFF               	movlw	high _HexTable
  7834  000806  0100               	movlb	0	; () banked
  7835  000808  21C6               	addwfc	(?___awmod+1)& (0+255),w,b
  7836  00080A  6EF7               	movwf	tblptrh,c
  7837  00080C                     	if	0	;There are less than 3 active tblptr bytes
  7838  00080C                     	endif
  7839  00080C  0100               	movlb	0	; () banked
  7840  00080E  EE20 F002          	lfsr	2,2
  7841  000812  51CD               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7842  000814  26D9               	addwf	fsr2l,f,c
  7843  000816  51CE               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7844  000818  22DA               	addwfc	fsr2h,f,c
  7845  00081A  0008               	tblrd		*
  7846  00081C  CFF5 FFDF          	movff	tablat,indf2
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;m_string.c: 266: x/=10;
  7850  000820  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7851  000824  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7852  000828  0E00               	movlw	0
  7853  00082A  0100               	movlb	0	; () banked
  7854  00082C  6FC8               	movwf	(___awdiv@divisor+1)& (0+255),b
  7855  00082E  0E0A               	movlw	10
  7856  000830  6FC7               	movwf	___awdiv@divisor& (0+255),b
  7857  000832  EC0D  F007         	call	___awdiv	;wreg free
  7858  000836  C0C5  F0CF         	movff	?___awdiv,m_int16_2_str_4@x
  7859  00083A  C0C6  F0D0         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7860                           
  7861                           ;m_string.c: 267: buf[1]=HexTable[x%10];
  7862  00083E  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awmod@dividend
  7863  000842  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7864  000846  0E00               	movlw	0
  7865  000848  0100               	movlb	0	; () banked
  7866  00084A  6FC8               	movwf	(___awmod@divisor+1)& (0+255),b
  7867  00084C  0E0A               	movlw	10
  7868  00084E  6FC7               	movwf	___awmod@divisor& (0+255),b
  7869  000850  EC8B  F009         	call	___awmod	;wreg free
  7870  000854  0E0C               	movlw	low _HexTable
  7871  000856  0100               	movlb	0	; () banked
  7872  000858  25C5               	addwf	?___awmod& (0+255),w,b
  7873  00085A  6EF6               	movwf	tblptrl,c
  7874  00085C  0EFF               	movlw	high _HexTable
  7875  00085E  0100               	movlb	0	; () banked
  7876  000860  21C6               	addwfc	(?___awmod+1)& (0+255),w,b
  7877  000862  6EF7               	movwf	tblptrh,c
  7878  000864                     	if	0	;There are less than 3 active tblptr bytes
  7879  000864                     	endif
  7880  000864  0100               	movlb	0	; () banked
  7881  000866  EE20 F001          	lfsr	2,1
  7882  00086A  51CD               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7883  00086C  26D9               	addwf	fsr2l,f,c
  7884  00086E  51CE               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7885  000870  22DA               	addwfc	fsr2h,f,c
  7886  000872  0008               	tblrd		*
  7887  000874  CFF5 FFDF          	movff	tablat,indf2
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;m_string.c: 268: x/=10;
  7891  000878  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7892  00087C  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7893  000880  0E00               	movlw	0
  7894  000882  0100               	movlb	0	; () banked
  7895  000884  6FC8               	movwf	(___awdiv@divisor+1)& (0+255),b
  7896  000886  0E0A               	movlw	10
  7897  000888  6FC7               	movwf	___awdiv@divisor& (0+255),b
  7898  00088A  EC0D  F007         	call	___awdiv	;wreg free
  7899  00088E  C0C5  F0CF         	movff	?___awdiv,m_int16_2_str_4@x
  7900  000892  C0C6  F0D0         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7901                           
  7902                           ;m_string.c: 269: buf[0]=HexTable[x%10];
  7903  000896  C0CF  F0C5         	movff	m_int16_2_str_4@x,___awmod@dividend
  7904  00089A  C0D0  F0C6         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7905  00089E  0E00               	movlw	0
  7906  0008A0  0100               	movlb	0	; () banked
  7907  0008A2  6FC8               	movwf	(___awmod@divisor+1)& (0+255),b
  7908  0008A4  0E0A               	movlw	10
  7909  0008A6  6FC7               	movwf	___awmod@divisor& (0+255),b
  7910  0008A8  EC8B  F009         	call	___awmod	;wreg free
  7911  0008AC  0E0C               	movlw	low _HexTable
  7912  0008AE  0100               	movlb	0	; () banked
  7913  0008B0  25C5               	addwf	?___awmod& (0+255),w,b
  7914  0008B2  6EF6               	movwf	tblptrl,c
  7915  0008B4  0EFF               	movlw	high _HexTable
  7916  0008B6  0100               	movlb	0	; () banked
  7917  0008B8  21C6               	addwfc	(?___awmod+1)& (0+255),w,b
  7918  0008BA  6EF7               	movwf	tblptrh,c
  7919  0008BC                     	if	0	;There are less than 3 active tblptr bytes
  7920  0008BC                     	endif
  7921  0008BC  C0CD  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
  7922  0008C0  C0CE  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
  7923  0008C4  0008               	tblrd		*
  7924  0008C6  CFF5 FFDF          	movff	tablat,indf2
  7925                           
  7926                           ; BSR set to: 0
  7927  0008CA  0012               	return		;funcret
  7928  0008CC                     __end_of_m_int16_2_str_4:
  7929                           	opt stack 0
  7930                           tblptru	equ	0xFF8
  7931                           tblptrh	equ	0xFF7
  7932                           tblptrl	equ	0xFF6
  7933                           tablat	equ	0xFF5
  7934                           prodh	equ	0xFF4
  7935                           prodl	equ	0xFF3
  7936                           intcon	equ	0xFF2
  7937                           indf0	equ	0xFEF
  7938                           postinc0	equ	0xFEE
  7939                           fsr0h	equ	0xFEA
  7940                           fsr0l	equ	0xFE9
  7941                           wreg	equ	0xFE8
  7942                           postdec1	equ	0xFE5
  7943                           plusw1	equ	0xFE3
  7944                           fsr1h	equ	0xFE2
  7945                           fsr1l	equ	0xFE1
  7946                           indf2	equ	0xFDF
  7947                           plusw2	equ	0xFDB
  7948                           fsr2h	equ	0xFDA
  7949                           fsr2l	equ	0xFD9
  7950                           status	equ	0xFD8
  7951                           
  7952 ;; *************** function ___awmod *****************
  7953 ;; Defined at:
  7954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  dividend        2    0[BANK0 ] int 
  7957 ;;  divisor         2    2[BANK0 ] int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  sign            1    5[BANK0 ] unsigned char 
  7960 ;;  counter         1    4[BANK0 ] unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2    0[BANK0 ] int 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;Total ram usage:        6 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    4
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_m_int16_2_str_4
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text44
  7985  001316                     __ptext44:
  7986                           	opt stack 0
  7987  001316                     ___awmod:
  7988                           	opt stack 21
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;incstack = 0
  7992  001316  0E00               	movlw	0
  7993  001318  0100               	movlb	0	; () banked
  7994  00131A  6FCA               	movwf	___awmod@sign& (0+255),b
  7995                           
  7996                           ; BSR set to: 0
  7997  00131C  0100               	movlb	0	; () banked
  7998  00131E  AFC6               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7999  001320  D008               	goto	l7129
  8000                           
  8001                           ; BSR set to: 0
  8002  001322  0100               	movlb	0	; () banked
  8003  001324  6DC5               	negf	___awmod@dividend& (0+255),b
  8004  001326  1FC6               	comf	(___awmod@dividend+1)& (0+255),f,b
  8005  001328  B0D8               	btfsc	status,0,c
  8006  00132A  2BC6               	incf	(___awmod@dividend+1)& (0+255),f,b
  8007                           
  8008                           ; BSR set to: 0
  8009  00132C  0E01               	movlw	1
  8010  00132E  0100               	movlb	0	; () banked
  8011  001330  6FCA               	movwf	___awmod@sign& (0+255),b
  8012  001332                     l7129:
  8013                           
  8014                           ; BSR set to: 0
  8015  001332  0100               	movlb	0	; () banked
  8016  001334  AFC8               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8017  001336  D005               	goto	l7133
  8018                           
  8019                           ; BSR set to: 0
  8020  001338  0100               	movlb	0	; () banked
  8021  00133A  6DC7               	negf	___awmod@divisor& (0+255),b
  8022  00133C  1FC8               	comf	(___awmod@divisor+1)& (0+255),f,b
  8023  00133E  B0D8               	btfsc	status,0,c
  8024  001340  2BC8               	incf	(___awmod@divisor+1)& (0+255),f,b
  8025  001342                     l7133:
  8026                           
  8027                           ; BSR set to: 0
  8028  001342  0100               	movlb	0	; () banked
  8029  001344  51C7               	movf	___awmod@divisor& (0+255),w,b
  8030  001346  0100               	movlb	0	; () banked
  8031  001348  11C8               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8032  00134A  B4D8               	btfsc	status,2,c
  8033  00134C  D026               	goto	l7149
  8034                           
  8035                           ; BSR set to: 0
  8036  00134E  0E01               	movlw	1
  8037  001350  0100               	movlb	0	; () banked
  8038  001352  6FC9               	movwf	___awmod@counter& (0+255),b
  8039  001354  D006               	goto	l7139
  8040  001356                     l7137:
  8041                           
  8042                           ; BSR set to: 0
  8043  001356  0100               	movlb	0	; () banked
  8044  001358  90D8               	bcf	status,0,c
  8045  00135A  37C7               	rlcf	___awmod@divisor& (0+255),f,b
  8046  00135C  37C8               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8047  00135E  0100               	movlb	0	; () banked
  8048  001360  2BC9               	incf	___awmod@counter& (0+255),f,b
  8049  001362                     l7139:
  8050                           
  8051                           ; BSR set to: 0
  8052  001362  0100               	movlb	0	; () banked
  8053  001364  AFC8               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8054  001366  D7F7               	goto	l7137
  8055  001368                     l7141:
  8056                           
  8057                           ; BSR set to: 0
  8058  001368  0100               	movlb	0	; () banked
  8059  00136A  51C7               	movf	___awmod@divisor& (0+255),w,b
  8060  00136C  0100               	movlb	0	; () banked
  8061  00136E  5DC5               	subwf	___awmod@dividend& (0+255),w,b
  8062  001370  0100               	movlb	0	; () banked
  8063  001372  51C8               	movf	(___awmod@divisor+1)& (0+255),w,b
  8064  001374  0100               	movlb	0	; () banked
  8065  001376  59C6               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8066  001378  A0D8               	btfss	status,0,c
  8067  00137A  D008               	goto	l7145
  8068                           
  8069                           ; BSR set to: 0
  8070  00137C  0100               	movlb	0	; () banked
  8071  00137E  51C7               	movf	___awmod@divisor& (0+255),w,b
  8072  001380  0100               	movlb	0	; () banked
  8073  001382  5FC5               	subwf	___awmod@dividend& (0+255),f,b
  8074  001384  0100               	movlb	0	; () banked
  8075  001386  51C8               	movf	(___awmod@divisor+1)& (0+255),w,b
  8076  001388  0100               	movlb	0	; () banked
  8077  00138A  5BC6               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8078  00138C                     l7145:
  8079                           
  8080                           ; BSR set to: 0
  8081  00138C  0100               	movlb	0	; () banked
  8082  00138E  90D8               	bcf	status,0,c
  8083  001390  33C8               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8084  001392  33C7               	rrcf	___awmod@divisor& (0+255),f,b
  8085                           
  8086                           ; BSR set to: 0
  8087  001394  0100               	movlb	0	; () banked
  8088  001396  2FC9               	decfsz	___awmod@counter& (0+255),f,b
  8089  001398  D7E7               	goto	l7141
  8090  00139A                     l7149:
  8091                           
  8092                           ; BSR set to: 0
  8093  00139A  0100               	movlb	0	; () banked
  8094  00139C  51CA               	movf	___awmod@sign& (0+255),w,b
  8095  00139E  0100               	movlb	0	; () banked
  8096  0013A0  B4D8               	btfsc	status,2,c
  8097  0013A2  D005               	goto	l7153
  8098                           
  8099                           ; BSR set to: 0
  8100  0013A4  0100               	movlb	0	; () banked
  8101  0013A6  6DC5               	negf	___awmod@dividend& (0+255),b
  8102  0013A8  1FC6               	comf	(___awmod@dividend+1)& (0+255),f,b
  8103  0013AA  B0D8               	btfsc	status,0,c
  8104  0013AC  2BC6               	incf	(___awmod@dividend+1)& (0+255),f,b
  8105  0013AE                     l7153:
  8106                           
  8107                           ; BSR set to: 0
  8108  0013AE  C0C5  F0C5         	movff	___awmod@dividend,?___awmod
  8109  0013B2  C0C6  F0C6         	movff	___awmod@dividend+1,?___awmod+1
  8110  0013B6  0012               	return	
  8111  0013B8                     __end_of___awmod:
  8112                           	opt stack 0
  8113                           tblptru	equ	0xFF8
  8114                           tblptrh	equ	0xFF7
  8115                           tblptrl	equ	0xFF6
  8116                           tablat	equ	0xFF5
  8117                           prodh	equ	0xFF4
  8118                           prodl	equ	0xFF3
  8119                           intcon	equ	0xFF2
  8120                           indf0	equ	0xFEF
  8121                           postinc0	equ	0xFEE
  8122                           fsr0h	equ	0xFEA
  8123                           fsr0l	equ	0xFE9
  8124                           wreg	equ	0xFE8
  8125                           postdec1	equ	0xFE5
  8126                           plusw1	equ	0xFE3
  8127                           fsr1h	equ	0xFE2
  8128                           fsr1l	equ	0xFE1
  8129                           indf2	equ	0xFDF
  8130                           plusw2	equ	0xFDB
  8131                           fsr2h	equ	0xFDA
  8132                           fsr2l	equ	0xFD9
  8133                           status	equ	0xFD8
  8134                           
  8135 ;; *************** function ___awdiv *****************
  8136 ;; Defined at:
  8137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  dividend        2    0[BANK0 ] int 
  8140 ;;  divisor         2    2[BANK0 ] int 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  quotient        2    6[BANK0 ] int 
  8143 ;;  sign            1    5[BANK0 ] unsigned char 
  8144 ;;  counter         1    4[BANK0 ] unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  2    0[BANK0 ] int 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;Total ram usage:        8 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    4
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_m_int16_2_str_4
  8165 ;;		_lcd_set_com_seg
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text45
  8170  000E1A                     __ptext45:
  8171                           	opt stack 0
  8172  000E1A                     ___awdiv:
  8173                           	opt stack 21
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;incstack = 0
  8177  000E1A  0E00               	movlw	0
  8178  000E1C  0100               	movlb	0	; () banked
  8179  000E1E  6FCA               	movwf	___awdiv@sign& (0+255),b
  8180                           
  8181                           ; BSR set to: 0
  8182  000E20  0100               	movlb	0	; () banked
  8183  000E22  AFC8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8184  000E24  D008               	goto	l6959
  8185                           
  8186                           ; BSR set to: 0
  8187  000E26  0100               	movlb	0	; () banked
  8188  000E28  6DC7               	negf	___awdiv@divisor& (0+255),b
  8189  000E2A  1FC8               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8190  000E2C  B0D8               	btfsc	status,0,c
  8191  000E2E  2BC8               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8192                           
  8193                           ; BSR set to: 0
  8194  000E30  0E01               	movlw	1
  8195  000E32  0100               	movlb	0	; () banked
  8196  000E34  6FCA               	movwf	___awdiv@sign& (0+255),b
  8197  000E36                     l6959:
  8198                           
  8199                           ; BSR set to: 0
  8200  000E36  0100               	movlb	0	; () banked
  8201  000E38  AFC6               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8202  000E3A  D008               	goto	l6965
  8203                           
  8204                           ; BSR set to: 0
  8205  000E3C  0100               	movlb	0	; () banked
  8206  000E3E  6DC5               	negf	___awdiv@dividend& (0+255),b
  8207  000E40  1FC6               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8208  000E42  B0D8               	btfsc	status,0,c
  8209  000E44  2BC6               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8210                           
  8211                           ; BSR set to: 0
  8212  000E46  0E01               	movlw	1
  8213  000E48  0100               	movlb	0	; () banked
  8214  000E4A  1BCA               	xorwf	___awdiv@sign& (0+255),f,b
  8215  000E4C                     l6965:
  8216                           
  8217                           ; BSR set to: 0
  8218  000E4C  0E00               	movlw	0
  8219  000E4E  0100               	movlb	0	; () banked
  8220  000E50  6FCC               	movwf	(___awdiv@quotient+1)& (0+255),b
  8221  000E52  0E00               	movlw	0
  8222  000E54  6FCB               	movwf	___awdiv@quotient& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225  000E56  0100               	movlb	0	; () banked
  8226  000E58  51C7               	movf	___awdiv@divisor& (0+255),w,b
  8227  000E5A  0100               	movlb	0	; () banked
  8228  000E5C  11C8               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8229  000E5E  B4D8               	btfsc	status,2,c
  8230  000E60  D02C               	goto	l6987
  8231                           
  8232                           ; BSR set to: 0
  8233  000E62  0E01               	movlw	1
  8234  000E64  0100               	movlb	0	; () banked
  8235  000E66  6FC9               	movwf	___awdiv@counter& (0+255),b
  8236  000E68  D006               	goto	l6973
  8237  000E6A                     l6971:
  8238                           
  8239                           ; BSR set to: 0
  8240  000E6A  0100               	movlb	0	; () banked
  8241  000E6C  90D8               	bcf	status,0,c
  8242  000E6E  37C7               	rlcf	___awdiv@divisor& (0+255),f,b
  8243  000E70  37C8               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8244  000E72  0100               	movlb	0	; () banked
  8245  000E74  2BC9               	incf	___awdiv@counter& (0+255),f,b
  8246  000E76                     l6973:
  8247                           
  8248                           ; BSR set to: 0
  8249  000E76  0100               	movlb	0	; () banked
  8250  000E78  AFC8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8251  000E7A  D7F7               	goto	l6971
  8252  000E7C                     l6975:
  8253                           
  8254                           ; BSR set to: 0
  8255  000E7C  0100               	movlb	0	; () banked
  8256  000E7E  90D8               	bcf	status,0,c
  8257  000E80  37CB               	rlcf	___awdiv@quotient& (0+255),f,b
  8258  000E82  37CC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8259                           
  8260                           ; BSR set to: 0
  8261  000E84  0100               	movlb	0	; () banked
  8262  000E86  51C7               	movf	___awdiv@divisor& (0+255),w,b
  8263  000E88  0100               	movlb	0	; () banked
  8264  000E8A  5DC5               	subwf	___awdiv@dividend& (0+255),w,b
  8265  000E8C  0100               	movlb	0	; () banked
  8266  000E8E  51C8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8267  000E90  0100               	movlb	0	; () banked
  8268  000E92  59C6               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8269  000E94  A0D8               	btfss	status,0,c
  8270  000E96  D00A               	goto	l6983
  8271                           
  8272                           ; BSR set to: 0
  8273  000E98  0100               	movlb	0	; () banked
  8274  000E9A  51C7               	movf	___awdiv@divisor& (0+255),w,b
  8275  000E9C  0100               	movlb	0	; () banked
  8276  000E9E  5FC5               	subwf	___awdiv@dividend& (0+255),f,b
  8277  000EA0  0100               	movlb	0	; () banked
  8278  000EA2  51C8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8279  000EA4  0100               	movlb	0	; () banked
  8280  000EA6  5BC6               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8281                           
  8282                           ; BSR set to: 0
  8283  000EA8  0100               	movlb	0	; () banked
  8284  000EAA  81CB               	bsf	___awdiv@quotient& (0+255),0,b
  8285  000EAC                     l6983:
  8286                           
  8287                           ; BSR set to: 0
  8288  000EAC  0100               	movlb	0	; () banked
  8289  000EAE  90D8               	bcf	status,0,c
  8290  000EB0  33C8               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8291  000EB2  33C7               	rrcf	___awdiv@divisor& (0+255),f,b
  8292                           
  8293                           ; BSR set to: 0
  8294  000EB4  0100               	movlb	0	; () banked
  8295  000EB6  2FC9               	decfsz	___awdiv@counter& (0+255),f,b
  8296  000EB8  D7E1               	goto	l6975
  8297  000EBA                     l6987:
  8298                           
  8299                           ; BSR set to: 0
  8300  000EBA  0100               	movlb	0	; () banked
  8301  000EBC  51CA               	movf	___awdiv@sign& (0+255),w,b
  8302  000EBE  0100               	movlb	0	; () banked
  8303  000EC0  B4D8               	btfsc	status,2,c
  8304  000EC2  D005               	goto	l6991
  8305                           
  8306                           ; BSR set to: 0
  8307  000EC4  0100               	movlb	0	; () banked
  8308  000EC6  6DCB               	negf	___awdiv@quotient& (0+255),b
  8309  000EC8  1FCC               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8310  000ECA  B0D8               	btfsc	status,0,c
  8311  000ECC  2BCC               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8312  000ECE                     l6991:
  8313                           
  8314                           ; BSR set to: 0
  8315  000ECE  C0CB  F0C5         	movff	___awdiv@quotient,?___awdiv
  8316  000ED2  C0CC  F0C6         	movff	___awdiv@quotient+1,?___awdiv+1
  8317  000ED6  0012               	return	
  8318  000ED8                     __end_of___awdiv:
  8319                           	opt stack 0
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           indf0	equ	0xFEF
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           postdec1	equ	0xFE5
  8333                           plusw1	equ	0xFE3
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           plusw2	equ	0xFDB
  8338                           fsr2h	equ	0xFDA
  8339                           fsr2l	equ	0xFD9
  8340                           status	equ	0xFD8
  8341                           
  8342 ;; *************** function _lcd_disp_refresh *****************
  8343 ;; Defined at:
  8344 ;;		line 547 in file "src/driver/lcd.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		None
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    4
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_ui_disp_start_cs600
  8369 ;;		_ui_disp_rtc_mm_ss
  8370 ;;		_ui_disp_adj_xfixed_pt
  8371 ;;		_ui_disp_all_on
  8372 ;;		_ui_disp_all_off
  8373 ;;		_ui_disp_adj_xfloat_pt
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text46
  8378  001EC2                     __ptext46:
  8379                           	opt stack 0
  8380  001EC2                     _lcd_disp_refresh:
  8381                           	opt stack 25
  8382                           
  8383                           ;lcd.c: 550: LCDDATA0=pLCD[0];
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;incstack = 0
  8387  001EC2  C060  FFBB         	movff	_pLCD,4027	;volatile
  8388                           
  8389                           ;lcd.c: 551: LCDDATA1=pLCD[1];
  8390  001EC6  C061  FFBC         	movff	_pLCD+1,4028	;volatile
  8391                           
  8392                           ;lcd.c: 552: LCDDATA2=pLCD[2];
  8393  001ECA  C062  FFBD         	movff	_pLCD+2,4029	;volatile
  8394                           
  8395                           ;lcd.c: 553: LCDDATA3=pLCD[3];
  8396  001ECE  C063  FFBE         	movff	_pLCD+3,4030	;volatile
  8397                           
  8398                           ;lcd.c: 554: LCDDATA4=pLCD[4];
  8399  001ED2  C064  FFBF         	movff	_pLCD+4,4031	;volatile
  8400                           
  8401                           ;lcd.c: 555: LCDDATA5=pLCD[5];
  8402  001ED6  C065  FF6B         	movff	_pLCD+5,3947	;volatile
  8403                           
  8404                           ;lcd.c: 556: LCDDATA6=pLCD[6];
  8405  001EDA  C066  FF6C         	movff	_pLCD+6,3948	;volatile
  8406                           
  8407                           ;lcd.c: 557: LCDDATA7=pLCD[7];
  8408  001EDE  C067  FF6D         	movff	_pLCD+7,3949	;volatile
  8409                           
  8410                           ;lcd.c: 558: LCDDATA8=pLCD[8];
  8411  001EE2  C068  FF6E         	movff	_pLCD+8,3950	;volatile
  8412                           
  8413                           ;lcd.c: 559: LCDDATA9=pLCD[9];
  8414  001EE6  C069  FF6F         	movff	_pLCD+9,3951	;volatile
  8415                           
  8416                           ;lcd.c: 561: LCDDATA10=pLCD[10];
  8417  001EEA  C06A  FF70         	movff	_pLCD+10,3952	;volatile
  8418                           
  8419                           ;lcd.c: 562: LCDDATA11=pLCD[11];
  8420  001EEE  C06B  FF71         	movff	_pLCD+11,3953	;volatile
  8421                           
  8422                           ;lcd.c: 563: LCDDATA12=pLCD[12];
  8423  001EF2  C06C  FF72         	movff	_pLCD+12,3954	;volatile
  8424                           
  8425                           ;lcd.c: 564: LCDDATA13=pLCD[13];
  8426  001EF6  C06D  FF73         	movff	_pLCD+13,3955	;volatile
  8427                           
  8428                           ;lcd.c: 565: LCDDATA14=pLCD[14];
  8429  001EFA  C06E  FF74         	movff	_pLCD+14,3956	;volatile
  8430                           
  8431                           ;lcd.c: 566: LCDDATA15=pLCD[15];
  8432  001EFE  C06F  FF75         	movff	_pLCD+15,3957	;volatile
  8433                           
  8434                           ;lcd.c: 567: LCDDATA16=pLCD[16];
  8435  001F02  C070  FF76         	movff	_pLCD+16,3958	;volatile
  8436                           
  8437                           ;lcd.c: 568: LCDDATA17=pLCD[17];
  8438  001F06  C071  FF77         	movff	_pLCD+17,3959	;volatile
  8439                           
  8440                           ;lcd.c: 569: LCDDATA18=pLCD[18];
  8441  001F0A  C072  FF78         	movff	_pLCD+18,3960	;volatile
  8442                           
  8443                           ;lcd.c: 570: LCDDATA19=pLCD[19];
  8444  001F0E  C073  FF79         	movff	_pLCD+19,3961	;volatile
  8445                           
  8446                           ;lcd.c: 572: LCDDATA20=pLCD[20];
  8447  001F12  C074  FF7A         	movff	_pLCD+20,3962	;volatile
  8448                           
  8449                           ;lcd.c: 573: LCDDATA21=pLCD[21];
  8450  001F16  C075  FF7B         	movff	_pLCD+21,3963	;volatile
  8451                           
  8452                           ;lcd.c: 574: LCDDATA22=pLCD[22];
  8453  001F1A  C076  FF7C         	movff	_pLCD+22,3964	;volatile
  8454                           
  8455                           ;lcd.c: 575: LCDDATA23=pLCD[23];
  8456  001F1E  C077  FF7D         	movff	_pLCD+23,3965	;volatile
  8457  001F22  0012               	return		;funcret
  8458  001F24                     __end_of_lcd_disp_refresh:
  8459                           	opt stack 0
  8460                           tblptru	equ	0xFF8
  8461                           tblptrh	equ	0xFF7
  8462                           tblptrl	equ	0xFF6
  8463                           tablat	equ	0xFF5
  8464                           prodh	equ	0xFF4
  8465                           prodl	equ	0xFF3
  8466                           intcon	equ	0xFF2
  8467                           indf0	equ	0xFEF
  8468                           postinc0	equ	0xFEE
  8469                           fsr0h	equ	0xFEA
  8470                           fsr0l	equ	0xFE9
  8471                           wreg	equ	0xFE8
  8472                           postdec1	equ	0xFE5
  8473                           plusw1	equ	0xFE3
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           indf2	equ	0xFDF
  8477                           plusw2	equ	0xFDB
  8478                           fsr2h	equ	0xFDA
  8479                           fsr2l	equ	0xFD9
  8480                           status	equ	0xFD8
  8481                           
  8482 ;; *************** function ___x_arrange_str *****************
  8483 ;; Defined at:
  8484 ;;		line 9 in file "src/api/ui.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  str             2    0[BANK0 ] PTR unsigned char 
  8487 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8488 ;;  len             1    2[BANK0 ] unsigned char 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               1    3[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;Total ram usage:        4 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_ui_disp_adj_xfixed_pt
  8511 ;;		_ui_disp_adj_xfloat_pt
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text47
  8516  001D22                     __ptext47:
  8517                           	opt stack 0
  8518  001D22                     ___x_arrange_str:
  8519                           	opt stack 22
  8520                           
  8521                           ;ui.c: 11: uint8_t i;
  8522                           ;ui.c: 12: for(i=0;i<len;i++){
  8523                           
  8524                           ;incstack = 0
  8525  001D22  0E00               	movlw	0
  8526  001D24  0100               	movlb	0	; () banked
  8527  001D26  6FC8               	movwf	___x_arrange_str@i& (0+255),b
  8528  001D28  D01D               	goto	l7165
  8529  001D2A                     l7159:
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;ui.c: 13: if(str[i]=='\0')str[i]=' ';
  8533  001D2A  0100               	movlb	0	; () banked
  8534  001D2C  51C8               	movf	___x_arrange_str@i& (0+255),w,b
  8535  001D2E  0D01               	mullw	1
  8536  001D30  50F3               	movf	prodl,w,c
  8537  001D32  0100               	movlb	0	; () banked
  8538  001D34  25C5               	addwf	___x_arrange_str@str& (0+255),w,b
  8539  001D36  6ED9               	movwf	fsr2l,c
  8540  001D38  50F4               	movf	prodh,w,c
  8541  001D3A  0100               	movlb	0	; () banked
  8542  001D3C  21C6               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8543  001D3E  6EDA               	movwf	fsr2h,c
  8544  001D40  50DF               	movf	indf2,w,c
  8545  001D42  A4D8               	btfss	status,2,c
  8546  001D44  D00D               	goto	l7163
  8547                           
  8548                           ; BSR set to: 0
  8549  001D46  0100               	movlb	0	; () banked
  8550  001D48  51C8               	movf	___x_arrange_str@i& (0+255),w,b
  8551  001D4A  0D01               	mullw	1
  8552  001D4C  50F3               	movf	prodl,w,c
  8553  001D4E  0100               	movlb	0	; () banked
  8554  001D50  25C5               	addwf	___x_arrange_str@str& (0+255),w,b
  8555  001D52  6ED9               	movwf	fsr2l,c
  8556  001D54  50F4               	movf	prodh,w,c
  8557  001D56  0100               	movlb	0	; () banked
  8558  001D58  21C6               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8559  001D5A  6EDA               	movwf	fsr2h,c
  8560  001D5C  0E20               	movlw	32
  8561  001D5E  6EDF               	movwf	indf2,c
  8562  001D60                     l7163:
  8563                           
  8564                           ; BSR set to: 0
  8565  001D60  0100               	movlb	0	; () banked
  8566  001D62  2BC8               	incf	___x_arrange_str@i& (0+255),f,b
  8567  001D64                     l7165:
  8568                           
  8569                           ; BSR set to: 0
  8570  001D64  0100               	movlb	0	; () banked
  8571  001D66  51C7               	movf	___x_arrange_str@len& (0+255),w,b
  8572  001D68  0100               	movlb	0	; () banked
  8573  001D6A  5DC8               	subwf	___x_arrange_str@i& (0+255),w,b
  8574  001D6C  A0D8               	btfss	status,0,c
  8575  001D6E  D7DD               	goto	l7159
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;ui.c: 14: }
  8579                           ;ui.c: 15: str[i]='\0';
  8580                           
  8581                           ; BSR set to: 0
  8582  001D70  0100               	movlb	0	; () banked
  8583  001D72  51C8               	movf	___x_arrange_str@i& (0+255),w,b
  8584  001D74  0D01               	mullw	1
  8585  001D76  50F3               	movf	prodl,w,c
  8586  001D78  0100               	movlb	0	; () banked
  8587  001D7A  25C5               	addwf	___x_arrange_str@str& (0+255),w,b
  8588  001D7C  6ED9               	movwf	fsr2l,c
  8589  001D7E  50F4               	movf	prodh,w,c
  8590  001D80  0100               	movlb	0	; () banked
  8591  001D82  21C6               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8592  001D84  6EDA               	movwf	fsr2h,c
  8593  001D86  0E00               	movlw	0
  8594  001D88  6EDF               	movwf	indf2,c
  8595                           
  8596                           ; BSR set to: 0
  8597  001D8A  0012               	return		;funcret
  8598  001D8C                     __end_of___x_arrange_str:
  8599                           	opt stack 0
  8600                           tblptru	equ	0xFF8
  8601                           tblptrh	equ	0xFF7
  8602                           tblptrl	equ	0xFF6
  8603                           tablat	equ	0xFF5
  8604                           prodh	equ	0xFF4
  8605                           prodl	equ	0xFF3
  8606                           intcon	equ	0xFF2
  8607                           indf0	equ	0xFEF
  8608                           postinc0	equ	0xFEE
  8609                           fsr0h	equ	0xFEA
  8610                           fsr0l	equ	0xFE9
  8611                           wreg	equ	0xFE8
  8612                           postdec1	equ	0xFE5
  8613                           plusw1	equ	0xFE3
  8614                           fsr1h	equ	0xFE2
  8615                           fsr1l	equ	0xFE1
  8616                           indf2	equ	0xFDF
  8617                           plusw2	equ	0xFDB
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function _key_waite_release *****************
  8623 ;; Defined at:
  8624 ;;		line 26 in file "src/api/key_menu.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  timeout         2    8[BANK0 ] unsigned int 
  8627 ;;  key             2   10[BANK0 ] PTR unsigned char 
  8628 ;;		 -> key_process@key(1), 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  t8              1   12[BANK0 ] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  2    8[BANK0 ] unsigned int 
  8633 ;; Registers used:
  8634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;Total ram usage:        5 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:    7
  8647 ;; This function calls:
  8648 ;;		_key_polling
  8649 ;; This function is called by:
  8650 ;;		_key_process
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text48
  8655  00234C                     __ptext48:
  8656                           	opt stack 0
  8657  00234C                     _key_waite_release:
  8658                           	opt stack 22
  8659                           
  8660                           ;key_menu.c: 28: uint8_t t8;
  8661                           ;key_menu.c: 30: userTicker_ms=0;
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;incstack = 0
  8665  00234C  0E00               	movlw	0
  8666  00234E  6E13               	movwf	_userTicker_ms+1,c	;volatile
  8667  002350  0E00               	movlw	0
  8668  002352  6E12               	movwf	_userTicker_ms,c	;volatile
  8669                           
  8670                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  8671  002354  D009               	goto	l7975
  8672  002356                     l7969:
  8673                           
  8674                           ;key_menu.c: 32: t8=key_polling();
  8675  002356  EC50  F010         	call	_key_polling	;wreg free
  8676  00235A  0100               	movlb	0	; () banked
  8677  00235C  6FD1               	movwf	key_waite_release@t8& (0+255),b
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;key_menu.c: 33: if(t8==(0x0))break;
  8681  00235E  0100               	movlb	0	; () banked
  8682  002360  51D1               	movf	key_waite_release@t8& (0+255),w,b
  8683  002362  0100               	movlb	0	; () banked
  8684  002364  B4D8               	btfsc	status,2,c
  8685  002366  D008               	goto	l7977
  8686  002368                     l7975:
  8687  002368  0100               	movlb	0	; () banked
  8688  00236A  51CD               	movf	key_waite_release@timeout& (0+255),w,b
  8689  00236C  5C12               	subwf	_userTicker_ms,w,c	;volatile
  8690  00236E  0100               	movlb	0	; () banked
  8691  002370  51CE               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  8692  002372  5813               	subwfb	_userTicker_ms+1,w,c	;volatile
  8693  002374  A0D8               	btfss	status,0,c
  8694  002376  D7EF               	goto	l7969
  8695  002378                     l7977:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;key_menu.c: 34: }
  8699                           ;key_menu.c: 35: *key=t8;
  8700  002378  C0CF  FFD9         	movff	key_waite_release@key,fsr2l
  8701  00237C  C0D0  FFDA         	movff	key_waite_release@key+1,fsr2h
  8702  002380  C0D1  FFDF         	movff	key_waite_release@t8,indf2
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;key_menu.c: 36: return userTicker_ms;
  8706  002384  C012  F0CD         	movff	_userTicker_ms,?_key_waite_release	;volatile
  8707  002388  C013  F0CE         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  8708  00238C  0012               	return	
  8709  00238E                     __end_of_key_waite_release:
  8710                           	opt stack 0
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           indf0	equ	0xFEF
  8719                           postinc0	equ	0xFEE
  8720                           fsr0h	equ	0xFEA
  8721                           fsr0l	equ	0xFE9
  8722                           wreg	equ	0xFE8
  8723                           postdec1	equ	0xFE5
  8724                           plusw1	equ	0xFE3
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           indf2	equ	0xFDF
  8728                           plusw2	equ	0xFDB
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _key_polling *****************
  8734 ;; Defined at:
  8735 ;;		line 8 in file "src/driver/key.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  t8              1    7[BANK0 ] unsigned char 
  8740 ;;  ktemp           1    6[BANK0 ] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      unsigned char 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;Total ram usage:        2 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    6
  8757 ;; This function calls:
  8758 ;;		_delay_ms
  8759 ;; This function is called by:
  8760 ;;		_key_waite_release
  8761 ;;		_main
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text49
  8766  0020A0                     __ptext49:
  8767                           	opt stack 0
  8768  0020A0                     _key_polling:
  8769                           	opt stack 22
  8770                           
  8771                           ;key.c: 10: uint8_t ktemp=(0x0);
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;incstack = 0
  8775  0020A0  0E00               	movlw	0
  8776  0020A2  0100               	movlb	0	; () banked
  8777  0020A4  6FCB               	movwf	key_polling@ktemp& (0+255),b
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;key.c: 11: uint8_t t8=0xff;
  8781  0020A6  0100               	movlb	0	; () banked
  8782  0020A8  69CC               	setf	key_polling@t8& (0+255),b
  8783                           
  8784                           ; BSR set to: 0
  8785                           
  8786                           ; BSR set to: 0
  8787                           
  8788                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  8789  0020AA  0E0E               	movlw	14
  8790  0020AC  1293               	iorwf	3987,f,c	;volatile
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  8794                           
  8795                           ; BSR set to: 0
  8796  0020AE  5081               	movf	3969,w,c	;volatile
  8797  0020B0  0B0E               	andlw	14
  8798  0020B2  0100               	movlb	0	; () banked
  8799  0020B4  6FCC               	movwf	key_polling@t8& (0+255),b
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  8803  0020B6  0100               	movlb	0	; () banked
  8804  0020B8  51CC               	movf	key_polling@t8& (0+255),w,b
  8805  0020BA  0B0E               	andlw	14
  8806  0020BC  0A0E               	xorlw	14
  8807  0020BE  B4D8               	btfsc	status,2,c
  8808  0020C0  D01A               	goto	l7657
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;key.c: 16: delay_ms(10);
  8812  0020C2  0E00               	movlw	0
  8813  0020C4  0100               	movlb	0	; () banked
  8814  0020C6  6FCA               	movwf	(delay_ms@dly+1)& (0+255),b
  8815  0020C8  0E0A               	movlw	10
  8816  0020CA  6FC9               	movwf	delay_ms@dly& (0+255),b
  8817  0020CC  ECD5  F013         	call	_delay_ms	;wreg free
  8818                           
  8819                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  8820  0020D0  5081               	movf	3969,w,c	;volatile
  8821  0020D2  0B0E               	andlw	14
  8822  0020D4  0100               	movlb	0	; () banked
  8823  0020D6  6FCC               	movwf	key_polling@t8& (0+255),b
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;key.c: 18: if(!( t8 & (1<<3))){
  8827  0020D8  0100               	movlb	0	; () banked
  8828  0020DA  B7CC               	btfsc	key_polling@t8& (0+255),3,b
  8829  0020DC  D002               	goto	l7649
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;key.c: 19: ktemp |= (0x01<<0x0);
  8833  0020DE  0100               	movlb	0	; () banked
  8834  0020E0  81CB               	bsf	key_polling@ktemp& (0+255),0,b
  8835  0020E2                     l7649:
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;key.c: 20: }
  8839                           ;key.c: 21: if(!( t8 & (1<<2))){
  8840  0020E2  0100               	movlb	0	; () banked
  8841  0020E4  B5CC               	btfsc	key_polling@t8& (0+255),2,b
  8842  0020E6  D002               	goto	l7653
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;key.c: 22: ktemp |= (0x01<<0x01);
  8846  0020E8  0100               	movlb	0	; () banked
  8847  0020EA  83CB               	bsf	key_polling@ktemp& (0+255),1,b
  8848  0020EC                     l7653:
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;key.c: 23: }
  8852                           ;key.c: 24: if(!( t8 & (1<<1))){
  8853  0020EC  0100               	movlb	0	; () banked
  8854  0020EE  B3CC               	btfsc	key_polling@t8& (0+255),1,b
  8855  0020F0  D002               	goto	l7657
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;key.c: 25: ktemp |= (0x01<<0x02);
  8859  0020F2  0100               	movlb	0	; () banked
  8860  0020F4  85CB               	bsf	key_polling@ktemp& (0+255),2,b
  8861  0020F6                     l7657:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;key.c: 26: }
  8865                           ;key.c: 27: }
  8866                           ;key.c: 29: return ktemp;
  8867  0020F6  0100               	movlb	0	; () banked
  8868  0020F8  51CB               	movf	key_polling@ktemp& (0+255),w,b
  8869  0020FA  0012               	return	
  8870  0020FC                     __end_of_key_polling:
  8871                           	opt stack 0
  8872                           tblptru	equ	0xFF8
  8873                           tblptrh	equ	0xFF7
  8874                           tblptrl	equ	0xFF6
  8875                           tablat	equ	0xFF5
  8876                           prodh	equ	0xFF4
  8877                           prodl	equ	0xFF3
  8878                           intcon	equ	0xFF2
  8879                           indf0	equ	0xFEF
  8880                           postinc0	equ	0xFEE
  8881                           fsr0h	equ	0xFEA
  8882                           fsr0l	equ	0xFE9
  8883                           wreg	equ	0xFE8
  8884                           postdec1	equ	0xFE5
  8885                           plusw1	equ	0xFE3
  8886                           fsr1h	equ	0xFE2
  8887                           fsr1l	equ	0xFE1
  8888                           indf2	equ	0xFDF
  8889                           plusw2	equ	0xFDB
  8890                           fsr2h	equ	0xFDA
  8891                           fsr2l	equ	0xFD9
  8892                           status	equ	0xFD8
  8893                           
  8894 ;; *************** function _delay_ms *****************
  8895 ;; Defined at:
  8896 ;;		line 97 in file "src/soc/clock.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  dly             2    4[BANK0 ] unsigned int 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;Total ram usage:        2 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:    5
  8917 ;; This function calls:
  8918 ;;		_delay_us
  8919 ;; This function is called by:
  8920 ;;		_key_polling
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text50
  8925  0027AA                     __ptext50:
  8926                           	opt stack 0
  8927  0027AA                     _delay_ms:
  8928                           	opt stack 22
  8929                           
  8930                           ;clock.c: 99: while(dly>0){
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;incstack = 0
  8934  0027AA  D00B               	goto	l7585
  8935  0027AC                     l7581:
  8936                           
  8937                           ;clock.c: 100: delay_us(1000);
  8938  0027AC  0E03               	movlw	3
  8939  0027AE  0100               	movlb	0	; () banked
  8940  0027B0  6FC6               	movwf	(delay_us@dly+1)& (0+255),b
  8941  0027B2  0EE8               	movlw	232
  8942  0027B4  6FC5               	movwf	delay_us@dly& (0+255),b
  8943  0027B6  EC5E  F012         	call	_delay_us	;wreg free
  8944                           
  8945                           ;clock.c: 101: dly--;
  8946  0027BA  0100               	movlb	0	; () banked
  8947  0027BC  07C9               	decf	delay_ms@dly& (0+255),f,b
  8948  0027BE  A0D8               	btfss	status,0,c
  8949  0027C0  07CA               	decf	(delay_ms@dly+1)& (0+255),f,b
  8950  0027C2                     l7585:
  8951  0027C2  0100               	movlb	0	; () banked
  8952  0027C4  51C9               	movf	delay_ms@dly& (0+255),w,b
  8953  0027C6  0100               	movlb	0	; () banked
  8954  0027C8  11CA               	iorwf	(delay_ms@dly+1)& (0+255),w,b
  8955  0027CA  B4D8               	btfsc	status,2,c
  8956  0027CC  0012               	return	
  8957  0027CE  D7EE               	goto	l7581
  8958  0027D0                     __end_of_delay_ms:
  8959                           	opt stack 0
  8960                           tblptru	equ	0xFF8
  8961                           tblptrh	equ	0xFF7
  8962                           tblptrl	equ	0xFF6
  8963                           tablat	equ	0xFF5
  8964                           prodh	equ	0xFF4
  8965                           prodl	equ	0xFF3
  8966                           intcon	equ	0xFF2
  8967                           indf0	equ	0xFEF
  8968                           postinc0	equ	0xFEE
  8969                           fsr0h	equ	0xFEA
  8970                           fsr0l	equ	0xFE9
  8971                           wreg	equ	0xFE8
  8972                           postdec1	equ	0xFE5
  8973                           plusw1	equ	0xFE3
  8974                           fsr1h	equ	0xFE2
  8975                           fsr1l	equ	0xFE1
  8976                           indf2	equ	0xFDF
  8977                           plusw2	equ	0xFDB
  8978                           fsr2h	equ	0xFDA
  8979                           fsr2l	equ	0xFD9
  8980                           status	equ	0xFD8
  8981                           
  8982 ;; *************** function _key_process_up *****************
  8983 ;; Defined at:
  8984 ;;		line 69 in file "src/api/key_menu.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:        0 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    6
  9005 ;; This function calls:
  9006 ;;		_key_adj_value_fixed_point
  9007 ;; This function is called by:
  9008 ;;		_key_process
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text51
  9013  002602                     __ptext51:
  9014                           	opt stack 0
  9015  002602                     _key_process_up:
  9016                           	opt stack 23
  9017                           
  9018                           ;key_menu.c: 71: switch(menu){
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;incstack = 0
  9022  002602  D00B               	goto	l7997
  9023  002604                     l7993:
  9024  002604  0E1E               	movlw	low _passWord
  9025  002606  0100               	movlb	0	; () banked
  9026  002608  6FD4               	movwf	key_adj_value_fixed_point@value& (0+255),b
  9027  00260A  0E00               	movlw	high _passWord
  9028  00260C  0100               	movlb	0	; () banked
  9029  00260E  6FD5               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  9030  002610  C020  F0D6         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  9031  002614  EC69  F005         	call	_key_adj_value_fixed_point	;wreg free
  9032                           
  9033                           ;key_menu.c: 77: }
  9034                           
  9035                           ;key_menu.c: 76: default:break;
  9036  002618  0012               	return	
  9037  00261A                     l7997:
  9038  00261A  501D               	movf	_menu,w,c	;volatile
  9039                           
  9040                           ; Switch size 1, requested type "space"
  9041                           ; Number of cases is 4, Range of values is 0 to 16
  9042                           ; switch strategies available:
  9043                           ; Name         Instructions Cycles
  9044                           ; simple_byte           13     7 (average)
  9045                           ;	Chosen strategy is simple_byte
  9046  00261C  0A00               	xorlw	0	; case 0
  9047  00261E  B4D8               	btfsc	status,2,c
  9048  002620  0012               	return	
  9049  002622  0A01               	xorlw	1	; case 1
  9050  002624  B4D8               	btfsc	status,2,c
  9051  002626  0012               	return	
  9052  002628  0A03               	xorlw	3	; case 2
  9053  00262A  B4D8               	btfsc	status,2,c
  9054  00262C  0012               	return	
  9055  00262E  0A12               	xorlw	18	; case 16
  9056  002630  A4D8               	btfss	status,2,c
  9057  002632  0012               	return	
  9058  002634  D7E7               	goto	l7993
  9059  002636                     __end_of_key_process_up:
  9060                           	opt stack 0
  9061                           tblptru	equ	0xFF8
  9062                           tblptrh	equ	0xFF7
  9063                           tblptrl	equ	0xFF6
  9064                           tablat	equ	0xFF5
  9065                           prodh	equ	0xFF4
  9066                           prodl	equ	0xFF3
  9067                           intcon	equ	0xFF2
  9068                           indf0	equ	0xFEF
  9069                           postinc0	equ	0xFEE
  9070                           fsr0h	equ	0xFEA
  9071                           fsr0l	equ	0xFE9
  9072                           wreg	equ	0xFE8
  9073                           postdec1	equ	0xFE5
  9074                           plusw1	equ	0xFE3
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           indf2	equ	0xFDF
  9078                           plusw2	equ	0xFDB
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8
  9082                           
  9083 ;; *************** function _key_adj_value_fixed_point *****************
  9084 ;; Defined at:
  9085 ;;		line 58 in file "src/api/key_menu.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  value           2   15[BANK0 ] PTR unsigned int 
  9088 ;;		 -> passWord(2), 
  9089 ;;  loc             1   17[BANK0 ] unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  t16             2   20[BANK0 ] unsigned int 
  9092 ;;  dloc            2   18[BANK0 ] unsigned int 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9102 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;Total ram usage:        7 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    5
  9109 ;; This function calls:
  9110 ;;		___exp_10
  9111 ;;		___lwdiv
  9112 ;;		___lwmod
  9113 ;;		___wmul
  9114 ;; This function is called by:
  9115 ;;		_key_process_up
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text52
  9120  000AD2                     __ptext52:
  9121                           	opt stack 0
  9122  000AD2                     _key_adj_value_fixed_point:
  9123                           	opt stack 23
  9124                           
  9125                           ;key_menu.c: 60: uint16_t dloc;
  9126                           ;key_menu.c: 61: uint16_t t16=*value;
  9127                           
  9128                           ;incstack = 0
  9129  000AD2  C0D4  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  9130  000AD6  C0D5  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  9131  000ADA  CFDE F0D9          	movff	postinc2,key_adj_value_fixed_point@t16
  9132  000ADE  CFDD F0DA          	movff	postdec2,key_adj_value_fixed_point@t16+1
  9133                           
  9134                           ;key_menu.c: 62: dloc=(t16/__exp_10(loc))%10;
  9135  000AE2  0100               	movlb	0	; () banked
  9136  000AE4  51D6               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9137  000AE6  ECC3  F00F         	call	___exp_10
  9138  000AEA  C0C5  F0CA         	movff	?___exp_10,___lwdiv@divisor
  9139  000AEE  C0C6  F0CB         	movff	?___exp_10+1,___lwdiv@divisor+1
  9140  000AF2  C0D9  F0C8         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  9141  000AF6  C0DA  F0C9         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  9142  000AFA  EC7B  F00D         	call	___lwdiv	;wreg free
  9143  000AFE  C0C8  F0CF         	movff	?___lwdiv,___lwmod@dividend
  9144  000B02  C0C9  F0D0         	movff	?___lwdiv+1,___lwmod@dividend+1
  9145  000B06  0E00               	movlw	0
  9146  000B08  0100               	movlb	0	; () banked
  9147  000B0A  6FD2               	movwf	(___lwmod@divisor+1)& (0+255),b
  9148  000B0C  0E0A               	movlw	10
  9149  000B0E  6FD1               	movwf	___lwmod@divisor& (0+255),b
  9150  000B10  EC92  F00F         	call	___lwmod	;wreg free
  9151  000B14  C0CF  F0D7         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  9152  000B18  C0D0  F0D8         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  9153                           
  9154                           ;key_menu.c: 63: t16=t16-dloc*__exp_10(loc);
  9155  000B1C  0100               	movlb	0	; () banked
  9156  000B1E  51D6               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9157  000B20  ECC3  F00F         	call	___exp_10
  9158  000B24  C0C5  F0C8         	movff	?___exp_10,___wmul@multiplier
  9159  000B28  C0C6  F0C9         	movff	?___exp_10+1,___wmul@multiplier+1
  9160  000B2C  C0D7  F0CA         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  9161  000B30  C0D8  F0CB         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  9162  000B34  ECE6  F012         	call	___wmul	;wreg free
  9163  000B38  0100               	movlb	0	; () banked
  9164  000B3A  1FC8               	comf	?___wmul& (0+255),f,b
  9165  000B3C  0100               	movlb	0	; () banked
  9166  000B3E  1FC9               	comf	(?___wmul+1)& (0+255),f,b
  9167  000B40  0100               	movlb	0	; () banked
  9168  000B42  4BC8               	infsnz	?___wmul& (0+255),f,b
  9169  000B44  2BC9               	incf	(?___wmul+1)& (0+255),f,b
  9170  000B46  0100               	movlb	0	; () banked
  9171  000B48  51D9               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  9172  000B4A  0100               	movlb	0	; () banked
  9173  000B4C  25C8               	addwf	?___wmul& (0+255),w,b
  9174  000B4E  0100               	movlb	0	; () banked
  9175  000B50  6FD9               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  9176  000B52  0100               	movlb	0	; () banked
  9177  000B54  51DA               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  9178  000B56  0100               	movlb	0	; () banked
  9179  000B58  21C9               	addwfc	(?___wmul+1)& (0+255),w,b
  9180  000B5A  0100               	movlb	0	; () banked
  9181  000B5C  6FDA               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;key_menu.c: 64: dloc++;
  9185  000B5E  0100               	movlb	0	; () banked
  9186  000B60  4BD7               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  9187  000B62  2BD8               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;key_menu.c: 65: if(dloc>9)dloc=0;
  9191  000B64  0100               	movlb	0	; () banked
  9192  000B66  51D8               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  9193  000B68  E105               	bnz	u5750
  9194  000B6A  0E0A               	movlw	10
  9195  000B6C  0100               	movlb	0	; () banked
  9196  000B6E  5DD7               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  9197  000B70  A0D8               	btfss	status,0,c
  9198  000B72  D005               	goto	l7687
  9199  000B74                     u5750:
  9200                           
  9201                           ; BSR set to: 0
  9202  000B74  0E00               	movlw	0
  9203  000B76  0100               	movlb	0	; () banked
  9204  000B78  6FD8               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  9205  000B7A  0E00               	movlw	0
  9206  000B7C  6FD7               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  9207  000B7E                     l7687:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;key_menu.c: 66: t16+=(dloc*__exp_10(loc));
  9211  000B7E  0100               	movlb	0	; () banked
  9212  000B80  51D6               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9213  000B82  ECC3  F00F         	call	___exp_10
  9214  000B86  C0C5  F0C8         	movff	?___exp_10,___wmul@multiplier
  9215  000B8A  C0C6  F0C9         	movff	?___exp_10+1,___wmul@multiplier+1
  9216  000B8E  C0D7  F0CA         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  9217  000B92  C0D8  F0CB         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  9218  000B96  ECE6  F012         	call	___wmul	;wreg free
  9219  000B9A  0100               	movlb	0	; () banked
  9220  000B9C  51C8               	movf	?___wmul& (0+255),w,b
  9221  000B9E  0100               	movlb	0	; () banked
  9222  000BA0  27D9               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  9223  000BA2  0100               	movlb	0	; () banked
  9224  000BA4  51C9               	movf	(?___wmul+1)& (0+255),w,b
  9225  000BA6  0100               	movlb	0	; () banked
  9226  000BA8  23DA               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;key_menu.c: 67: *value=t16;
  9230  000BAA  C0D4  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  9231  000BAE  C0D5  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  9232  000BB2  C0D9  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  9233  000BB6  C0DA  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  9234                           
  9235                           ; BSR set to: 0
  9236  000BBA  0012               	return		;funcret
  9237  000BBC                     __end_of_key_adj_value_fixed_point:
  9238                           	opt stack 0
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           indf0	equ	0xFEF
  9247                           postinc0	equ	0xFEE
  9248                           fsr0h	equ	0xFEA
  9249                           fsr0l	equ	0xFE9
  9250                           wreg	equ	0xFE8
  9251                           postdec1	equ	0xFE5
  9252                           plusw1	equ	0xFE3
  9253                           fsr1h	equ	0xFE2
  9254                           fsr1l	equ	0xFE1
  9255                           indf2	equ	0xFDF
  9256                           postinc2	equ	0xFDE
  9257                           postdec2	equ	0xFDD
  9258                           plusw2	equ	0xFDB
  9259                           fsr2h	equ	0xFDA
  9260                           fsr2l	equ	0xFD9
  9261                           status	equ	0xFD8
  9262                           
  9263 ;; *************** function ___wmul *****************
  9264 ;; Defined at:
  9265 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  multiplier      2    3[BANK0 ] unsigned int 
  9268 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  product         2    7[BANK0 ] unsigned int 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  2    3[BANK0 ] unsigned int 
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, prodl, prodh
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;Total ram usage:        6 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    4
  9287 ;; This function calls:
  9288 ;;		Nothing
  9289 ;; This function is called by:
  9290 ;;		_key_adj_value_fixed_point
  9291 ;;		_calib_data_set_default_diff_pr
  9292 ;;		_calib_data_set_default_pr
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text53
  9297  0025CC                     __ptext53:
  9298                           	opt stack 0
  9299  0025CC                     ___wmul:
  9300                           	opt stack 23
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;incstack = 0
  9304  0025CC  0100               	movlb	0	; () banked
  9305  0025CE  51C8               	movf	___wmul@multiplier& (0+255),w,b
  9306  0025D0  0100               	movlb	0	; () banked
  9307  0025D2  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  9308  0025D4  CFF3 F0CC          	movff	prodl,___wmul@product
  9309  0025D8  CFF4 F0CD          	movff	prodh,___wmul@product+1
  9310  0025DC  0100               	movlb	0	; () banked
  9311  0025DE  51C8               	movf	___wmul@multiplier& (0+255),w,b
  9312  0025E0  0100               	movlb	0	; () banked
  9313  0025E2  03CB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9314  0025E4  50F3               	movf	prodl,w,c
  9315  0025E6  0100               	movlb	0	; () banked
  9316  0025E8  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  9317  0025EA  0100               	movlb	0	; () banked
  9318  0025EC  51C9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9319  0025EE  0100               	movlb	0	; () banked
  9320  0025F0  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  9321  0025F2  50F3               	movf	prodl,w,c
  9322  0025F4  0100               	movlb	0	; () banked
  9323  0025F6  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  9324                           
  9325                           ; BSR set to: 0
  9326  0025F8  C0CC  F0C8         	movff	___wmul@product,?___wmul
  9327  0025FC  C0CD  F0C9         	movff	___wmul@product+1,?___wmul+1
  9328  002600  0012               	return	
  9329  002602                     __end_of___wmul:
  9330                           	opt stack 0
  9331                           tblptru	equ	0xFF8
  9332                           tblptrh	equ	0xFF7
  9333                           tblptrl	equ	0xFF6
  9334                           tablat	equ	0xFF5
  9335                           prodh	equ	0xFF4
  9336                           prodl	equ	0xFF3
  9337                           intcon	equ	0xFF2
  9338                           indf0	equ	0xFEF
  9339                           postinc0	equ	0xFEE
  9340                           fsr0h	equ	0xFEA
  9341                           fsr0l	equ	0xFE9
  9342                           wreg	equ	0xFE8
  9343                           postdec1	equ	0xFE5
  9344                           plusw1	equ	0xFE3
  9345                           fsr1h	equ	0xFE2
  9346                           fsr1l	equ	0xFE1
  9347                           indf2	equ	0xFDF
  9348                           postinc2	equ	0xFDE
  9349                           postdec2	equ	0xFDD
  9350                           plusw2	equ	0xFDB
  9351                           fsr2h	equ	0xFDA
  9352                           fsr2l	equ	0xFD9
  9353                           status	equ	0xFD8
  9354                           
  9355 ;; *************** function ___lwmod *****************
  9356 ;; Defined at:
  9357 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  dividend        2   10[BANK0 ] unsigned int 
  9360 ;;  divisor         2   12[BANK0 ] unsigned int 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  counter         1   14[BANK0 ] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  2   10[BANK0 ] unsigned int 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;Total ram usage:        5 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    4
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_key_adj_value_fixed_point
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text54
  9387  001F24                     __ptext54:
  9388                           	opt stack 0
  9389  001F24                     ___lwmod:
  9390                           	opt stack 23
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;incstack = 0
  9394  001F24  0100               	movlb	0	; () banked
  9395  001F26  51D1               	movf	___lwmod@divisor& (0+255),w,b
  9396  001F28  0100               	movlb	0	; () banked
  9397  001F2A  11D2               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9398  001F2C  B4D8               	btfsc	status,2,c
  9399  001F2E  D026               	goto	l1862
  9400                           
  9401                           ; BSR set to: 0
  9402  001F30  0E01               	movlw	1
  9403  001F32  0100               	movlb	0	; () banked
  9404  001F34  6FD3               	movwf	___lwmod@counter& (0+255),b
  9405  001F36  D006               	goto	l7621
  9406  001F38                     l7619:
  9407                           
  9408                           ; BSR set to: 0
  9409  001F38  0100               	movlb	0	; () banked
  9410  001F3A  90D8               	bcf	status,0,c
  9411  001F3C  37D1               	rlcf	___lwmod@divisor& (0+255),f,b
  9412  001F3E  37D2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9413  001F40  0100               	movlb	0	; () banked
  9414  001F42  2BD3               	incf	___lwmod@counter& (0+255),f,b
  9415  001F44                     l7621:
  9416                           
  9417                           ; BSR set to: 0
  9418  001F44  0100               	movlb	0	; () banked
  9419  001F46  AFD2               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9420  001F48  D7F7               	goto	l7619
  9421  001F4A                     l7623:
  9422                           
  9423                           ; BSR set to: 0
  9424  001F4A  0100               	movlb	0	; () banked
  9425  001F4C  51D1               	movf	___lwmod@divisor& (0+255),w,b
  9426  001F4E  0100               	movlb	0	; () banked
  9427  001F50  5DCF               	subwf	___lwmod@dividend& (0+255),w,b
  9428  001F52  0100               	movlb	0	; () banked
  9429  001F54  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9430  001F56  0100               	movlb	0	; () banked
  9431  001F58  59D0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9432  001F5A  A0D8               	btfss	status,0,c
  9433  001F5C  D008               	goto	l7627
  9434                           
  9435                           ; BSR set to: 0
  9436  001F5E  0100               	movlb	0	; () banked
  9437  001F60  51D1               	movf	___lwmod@divisor& (0+255),w,b
  9438  001F62  0100               	movlb	0	; () banked
  9439  001F64  5FCF               	subwf	___lwmod@dividend& (0+255),f,b
  9440  001F66  0100               	movlb	0	; () banked
  9441  001F68  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9442  001F6A  0100               	movlb	0	; () banked
  9443  001F6C  5BD0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9444  001F6E                     l7627:
  9445                           
  9446                           ; BSR set to: 0
  9447  001F6E  0100               	movlb	0	; () banked
  9448  001F70  90D8               	bcf	status,0,c
  9449  001F72  33D2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9450  001F74  33D1               	rrcf	___lwmod@divisor& (0+255),f,b
  9451                           
  9452                           ; BSR set to: 0
  9453  001F76  0100               	movlb	0	; () banked
  9454  001F78  2FD3               	decfsz	___lwmod@counter& (0+255),f,b
  9455  001F7A  D7E7               	goto	l7623
  9456  001F7C                     l1862:
  9457                           
  9458                           ; BSR set to: 0
  9459  001F7C  C0CF  F0CF         	movff	___lwmod@dividend,?___lwmod
  9460  001F80  C0D0  F0D0         	movff	___lwmod@dividend+1,?___lwmod+1
  9461                           
  9462                           ; BSR set to: 0
  9463  001F84  0012               	return		;funcret
  9464  001F86                     __end_of___lwmod:
  9465                           	opt stack 0
  9466                           tblptru	equ	0xFF8
  9467                           tblptrh	equ	0xFF7
  9468                           tblptrl	equ	0xFF6
  9469                           tablat	equ	0xFF5
  9470                           prodh	equ	0xFF4
  9471                           prodl	equ	0xFF3
  9472                           intcon	equ	0xFF2
  9473                           indf0	equ	0xFEF
  9474                           postinc0	equ	0xFEE
  9475                           fsr0h	equ	0xFEA
  9476                           fsr0l	equ	0xFE9
  9477                           wreg	equ	0xFE8
  9478                           postdec1	equ	0xFE5
  9479                           plusw1	equ	0xFE3
  9480                           fsr1h	equ	0xFE2
  9481                           fsr1l	equ	0xFE1
  9482                           indf2	equ	0xFDF
  9483                           postinc2	equ	0xFDE
  9484                           postdec2	equ	0xFDD
  9485                           plusw2	equ	0xFDB
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function ___lwdiv *****************
  9491 ;; Defined at:
  9492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  dividend        2    3[BANK0 ] unsigned int 
  9495 ;;  divisor         2    5[BANK0 ] unsigned int 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;  quotient        2    8[BANK0 ] unsigned int 
  9498 ;;  counter         1    7[BANK0 ] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  2    3[BANK0 ] unsigned int 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;Total ram usage:        7 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    4
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_key_adj_value_fixed_point
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text55
  9523  001AF6                     __ptext55:
  9524                           	opt stack 0
  9525  001AF6                     ___lwdiv:
  9526                           	opt stack 23
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;incstack = 0
  9530  001AF6  0E00               	movlw	0
  9531  001AF8  0100               	movlb	0	; () banked
  9532  001AFA  6FCE               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9533  001AFC  0E00               	movlw	0
  9534  001AFE  6FCD               	movwf	___lwdiv@quotient& (0+255),b
  9535                           
  9536                           ; BSR set to: 0
  9537  001B00  0100               	movlb	0	; () banked
  9538  001B02  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  9539  001B04  0100               	movlb	0	; () banked
  9540  001B06  11CB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9541  001B08  B4D8               	btfsc	status,2,c
  9542  001B0A  D02C               	goto	l1852
  9543                           
  9544                           ; BSR set to: 0
  9545  001B0C  0E01               	movlw	1
  9546  001B0E  0100               	movlb	0	; () banked
  9547  001B10  6FCC               	movwf	___lwdiv@counter& (0+255),b
  9548  001B12  D006               	goto	l7601
  9549  001B14                     l7599:
  9550                           
  9551                           ; BSR set to: 0
  9552  001B14  0100               	movlb	0	; () banked
  9553  001B16  90D8               	bcf	status,0,c
  9554  001B18  37CA               	rlcf	___lwdiv@divisor& (0+255),f,b
  9555  001B1A  37CB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9556  001B1C  0100               	movlb	0	; () banked
  9557  001B1E  2BCC               	incf	___lwdiv@counter& (0+255),f,b
  9558  001B20                     l7601:
  9559                           
  9560                           ; BSR set to: 0
  9561  001B20  0100               	movlb	0	; () banked
  9562  001B22  AFCB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9563  001B24  D7F7               	goto	l7599
  9564  001B26                     l7603:
  9565                           
  9566                           ; BSR set to: 0
  9567  001B26  0100               	movlb	0	; () banked
  9568  001B28  90D8               	bcf	status,0,c
  9569  001B2A  37CD               	rlcf	___lwdiv@quotient& (0+255),f,b
  9570  001B2C  37CE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9571                           
  9572                           ; BSR set to: 0
  9573  001B2E  0100               	movlb	0	; () banked
  9574  001B30  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  9575  001B32  0100               	movlb	0	; () banked
  9576  001B34  5DC8               	subwf	___lwdiv@dividend& (0+255),w,b
  9577  001B36  0100               	movlb	0	; () banked
  9578  001B38  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9579  001B3A  0100               	movlb	0	; () banked
  9580  001B3C  59C9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9581  001B3E  A0D8               	btfss	status,0,c
  9582  001B40  D00A               	goto	l7611
  9583                           
  9584                           ; BSR set to: 0
  9585  001B42  0100               	movlb	0	; () banked
  9586  001B44  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  9587  001B46  0100               	movlb	0	; () banked
  9588  001B48  5FC8               	subwf	___lwdiv@dividend& (0+255),f,b
  9589  001B4A  0100               	movlb	0	; () banked
  9590  001B4C  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9591  001B4E  0100               	movlb	0	; () banked
  9592  001B50  5BC9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9593                           
  9594                           ; BSR set to: 0
  9595  001B52  0100               	movlb	0	; () banked
  9596  001B54  81CD               	bsf	___lwdiv@quotient& (0+255),0,b
  9597  001B56                     l7611:
  9598                           
  9599                           ; BSR set to: 0
  9600  001B56  0100               	movlb	0	; () banked
  9601  001B58  90D8               	bcf	status,0,c
  9602  001B5A  33CB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9603  001B5C  33CA               	rrcf	___lwdiv@divisor& (0+255),f,b
  9604                           
  9605                           ; BSR set to: 0
  9606  001B5E  0100               	movlb	0	; () banked
  9607  001B60  2FCC               	decfsz	___lwdiv@counter& (0+255),f,b
  9608  001B62  D7E1               	goto	l7603
  9609  001B64                     l1852:
  9610                           
  9611                           ; BSR set to: 0
  9612  001B64  C0CD  F0C8         	movff	___lwdiv@quotient,?___lwdiv
  9613  001B68  C0CE  F0C9         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9614                           
  9615                           ; BSR set to: 0
  9616  001B6C  0012               	return		;funcret
  9617  001B6E                     __end_of___lwdiv:
  9618                           	opt stack 0
  9619                           tblptru	equ	0xFF8
  9620                           tblptrh	equ	0xFF7
  9621                           tblptrl	equ	0xFF6
  9622                           tablat	equ	0xFF5
  9623                           prodh	equ	0xFF4
  9624                           prodl	equ	0xFF3
  9625                           intcon	equ	0xFF2
  9626                           indf0	equ	0xFEF
  9627                           postinc0	equ	0xFEE
  9628                           fsr0h	equ	0xFEA
  9629                           fsr0l	equ	0xFE9
  9630                           wreg	equ	0xFE8
  9631                           postdec1	equ	0xFE5
  9632                           plusw1	equ	0xFE3
  9633                           fsr1h	equ	0xFE2
  9634                           fsr1l	equ	0xFE1
  9635                           indf2	equ	0xFDF
  9636                           postinc2	equ	0xFDE
  9637                           postdec2	equ	0xFDD
  9638                           plusw2	equ	0xFDB
  9639                           fsr2h	equ	0xFDA
  9640                           fsr2l	equ	0xFD9
  9641                           status	equ	0xFD8
  9642                           
  9643 ;; *************** function ___exp_10 *****************
  9644 ;; Defined at:
  9645 ;;		line 15 in file "src/api/key_menu.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  n               1    wreg     unsigned char 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  n               1    2[BANK0 ] unsigned char 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  2    0[BANK0 ] unsigned int 
  9652 ;; Registers used:
  9653 ;;		wreg, status,2, status,0
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;Total ram usage:        3 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    4
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_key_adj_value_fixed_point
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text56
  9674  001F86                     __ptext56:
  9675                           	opt stack 0
  9676  001F86                     ___exp_10:
  9677                           	opt stack 23
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;incstack = 0
  9681                           ;___exp_10@n stored from wreg
  9682  001F86  0100               	movlb	0	; () banked
  9683  001F88  6FC7               	movwf	___exp_10@n& (0+255),b
  9684                           
  9685                           ;key_menu.c: 17: switch(n){
  9686  001F8A  D01E               	goto	l7317
  9687  001F8C                     l7295:
  9688  001F8C  0E00               	movlw	0
  9689  001F8E  0100               	movlb	0	; () banked
  9690  001F90  6FC6               	movwf	(?___exp_10+1)& (0+255),b
  9691  001F92  0E01               	movlw	1
  9692  001F94  6FC5               	movwf	?___exp_10& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695  001F96  0012               	return	
  9696  001F98                     l7299:
  9697                           
  9698                           ; BSR set to: 0
  9699  001F98  0E00               	movlw	0
  9700  001F9A  0100               	movlb	0	; () banked
  9701  001F9C  6FC6               	movwf	(?___exp_10+1)& (0+255),b
  9702  001F9E  0E0A               	movlw	10
  9703  001FA0  6FC5               	movwf	?___exp_10& (0+255),b
  9704                           
  9705                           ; BSR set to: 0
  9706  001FA2  0012               	return	
  9707  001FA4                     l7303:
  9708                           
  9709                           ; BSR set to: 0
  9710  001FA4  0E00               	movlw	0
  9711  001FA6  0100               	movlb	0	; () banked
  9712  001FA8  6FC6               	movwf	(?___exp_10+1)& (0+255),b
  9713  001FAA  0E64               	movlw	100
  9714  001FAC  6FC5               	movwf	?___exp_10& (0+255),b
  9715                           
  9716                           ; BSR set to: 0
  9717  001FAE  0012               	return	
  9718  001FB0                     l7307:
  9719                           
  9720                           ; BSR set to: 0
  9721  001FB0  0E03               	movlw	3
  9722  001FB2  0100               	movlb	0	; () banked
  9723  001FB4  6FC6               	movwf	(?___exp_10+1)& (0+255),b
  9724  001FB6  0EE8               	movlw	232
  9725  001FB8  6FC5               	movwf	?___exp_10& (0+255),b
  9726                           
  9727                           ; BSR set to: 0
  9728  001FBA  0012               	return	
  9729  001FBC                     l7311:
  9730                           
  9731                           ; BSR set to: 0
  9732  001FBC  0E27               	movlw	39
  9733  001FBE  0100               	movlb	0	; () banked
  9734  001FC0  6FC6               	movwf	(?___exp_10+1)& (0+255),b
  9735  001FC2  0E10               	movlw	16
  9736  001FC4  6FC5               	movwf	?___exp_10& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;key_menu.c: 23: }
  9740                           
  9741                           ; BSR set to: 0
  9742  001FC6  0012               	return	
  9743  001FC8                     l7317:
  9744  001FC8  0100               	movlb	0	; () banked
  9745  001FCA  51C7               	movf	___exp_10@n& (0+255),w,b
  9746                           
  9747                           ; Switch size 1, requested type "space"
  9748                           ; Number of cases is 4, Range of values is 0 to 4
  9749                           ; switch strategies available:
  9750                           ; Name         Instructions Cycles
  9751                           ; simple_byte           13     7 (average)
  9752                           ;	Chosen strategy is simple_byte
  9753  001FCC  0A00               	xorlw	0	; case 0
  9754  001FCE  B4D8               	btfsc	status,2,c
  9755  001FD0  D7DD               	goto	l7295
  9756  001FD2  0A02               	xorlw	2	; case 2
  9757  001FD4  B4D8               	btfsc	status,2,c
  9758  001FD6  D7E0               	goto	l7299
  9759  001FD8  0A01               	xorlw	1	; case 3
  9760  001FDA  B4D8               	btfsc	status,2,c
  9761  001FDC  D7E3               	goto	l7303
  9762  001FDE  0A07               	xorlw	7	; case 4
  9763  001FE0  B4D8               	btfsc	status,2,c
  9764  001FE2  D7E6               	goto	l7307
  9765  001FE4  D7EB               	goto	l7311
  9766  001FE6                     __end_of___exp_10:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodh	equ	0xFF4
  9773                           prodl	equ	0xFF3
  9774                           intcon	equ	0xFF2
  9775                           indf0	equ	0xFEF
  9776                           postinc0	equ	0xFEE
  9777                           fsr0h	equ	0xFEA
  9778                           fsr0l	equ	0xFE9
  9779                           wreg	equ	0xFE8
  9780                           postdec1	equ	0xFE5
  9781                           plusw1	equ	0xFE3
  9782                           fsr1h	equ	0xFE2
  9783                           fsr1l	equ	0xFE1
  9784                           indf2	equ	0xFDF
  9785                           postinc2	equ	0xFDE
  9786                           postdec2	equ	0xFDD
  9787                           plusw2	equ	0xFDB
  9788                           fsr2h	equ	0xFDA
  9789                           fsr2l	equ	0xFD9
  9790                           status	equ	0xFD8
  9791                           
  9792 ;; *************** function _key_process_set_long *****************
  9793 ;; Defined at:
  9794 ;;		line 139 in file "src/api/key_menu.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		None
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;Total ram usage:        0 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    4
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_key_process
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text57
  9823  0028E0                     __ptext57:
  9824                           	opt stack 0
  9825  0028E0                     _key_process_set_long:
  9826                           	opt stack 25
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;incstack = 0
  9830  0028E0  0012               	return		;funcret
  9831  0028E2                     __end_of_key_process_set_long:
  9832                           	opt stack 0
  9833                           tblptru	equ	0xFF8
  9834                           tblptrh	equ	0xFF7
  9835                           tblptrl	equ	0xFF6
  9836                           tablat	equ	0xFF5
  9837                           prodh	equ	0xFF4
  9838                           prodl	equ	0xFF3
  9839                           intcon	equ	0xFF2
  9840                           indf0	equ	0xFEF
  9841                           postinc0	equ	0xFEE
  9842                           fsr0h	equ	0xFEA
  9843                           fsr0l	equ	0xFE9
  9844                           wreg	equ	0xFE8
  9845                           postdec1	equ	0xFE5
  9846                           plusw1	equ	0xFE3
  9847                           fsr1h	equ	0xFE2
  9848                           fsr1l	equ	0xFE1
  9849                           indf2	equ	0xFDF
  9850                           postinc2	equ	0xFDE
  9851                           postdec2	equ	0xFDD
  9852                           plusw2	equ	0xFDB
  9853                           fsr2h	equ	0xFDA
  9854                           fsr2l	equ	0xFD9
  9855                           status	equ	0xFD8
  9856                           
  9857 ;; *************** function _key_process_set_down_long *****************
  9858 ;; Defined at:
  9859 ;;		line 106 in file "src/api/key_menu.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        2 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    7
  9880 ;; This function calls:
  9881 ;;		___enter_menu_set_base_zero
  9882 ;;		___enter_menu_set_density
  9883 ;;		___enter_menu_set_pose
  9884 ;; This function is called by:
  9885 ;;		_key_process
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text58
  9890  000ED8                     __ptext58:
  9891                           	opt stack 0
  9892  000ED8                     _key_process_set_down_long:
  9893                           	opt stack 22
  9894                           
  9895                           ;key_menu.c: 108: if(menu==0x10){
  9896                           
  9897                           ;incstack = 0
  9898  000ED8  0E10               	movlw	16
  9899  000EDA  181D               	xorwf	_menu,w,c	;volatile
  9900  000EDC  A4D8               	btfss	status,2,c
  9901  000EDE  0012               	return	
  9902  000EE0  D02A               	goto	l8035
  9903  000EE2                     l8003:
  9904                           
  9905                           ;key_menu.c: 111: menu=0x20; __enter_menu_set_density(); break;
  9906  000EE2  0E20               	movlw	32
  9907  000EE4  6E1D               	movwf	_menu,c	;volatile
  9908  000EE6  EC1B  F013         	call	___enter_menu_set_density	;wreg free
  9909  000EEA  0012               	return	
  9910  000EEC                     l8007:
  9911                           
  9912                           ;key_menu.c: 113: menu=0x30; __enter_menu_set_pose(); break;
  9913  000EEC  0E30               	movlw	48
  9914  000EEE  6E1D               	movwf	_menu,c	;volatile
  9915  000EF0  EC35  F013         	call	___enter_menu_set_pose	;wreg free
  9916  000EF4  0012               	return	
  9917  000EF6                     l8011:
  9918                           
  9919                           ;key_menu.c: 115: menu=0x40;__enter_menu_set_base_zero(); break;
  9920  000EF6  0E40               	movlw	64
  9921  000EF8  6E1D               	movwf	_menu,c	;volatile
  9922  000EFA  ECAB  F010         	call	___enter_menu_set_base_zero	;wreg free
  9923  000EFE  0012               	return	
  9924  000F00                     l8015:
  9925                           
  9926                           ;key_menu.c: 117: menu=0x50; break;
  9927  000F00  0E50               	movlw	80
  9928  000F02  6E1D               	movwf	_menu,c	;volatile
  9929  000F04  0012               	return	
  9930  000F06                     l8017:
  9931                           
  9932                           ;key_menu.c: 119: menu=0x60; break;
  9933  000F06  0E60               	movlw	96
  9934  000F08  6E1D               	movwf	_menu,c	;volatile
  9935  000F0A  0012               	return	
  9936  000F0C                     l8019:
  9937                           
  9938                           ;key_menu.c: 121: menu=0x70; break;
  9939  000F0C  0E70               	movlw	112
  9940  000F0E  6E1D               	movwf	_menu,c	;volatile
  9941  000F10  0012               	return	
  9942  000F12                     l8021:
  9943                           
  9944                           ;key_menu.c: 123: menu=0x80; break;
  9945  000F12  0E80               	movlw	128
  9946  000F14  6E1D               	movwf	_menu,c	;volatile
  9947  000F16  0012               	return	
  9948  000F18                     l8023:
  9949                           
  9950                           ;key_menu.c: 125: menu=0x90; break;
  9951  000F18  0E90               	movlw	144
  9952  000F1A  6E1D               	movwf	_menu,c	;volatile
  9953  000F1C  0012               	return	
  9954  000F1E                     l8025:
  9955                           
  9956                           ;key_menu.c: 127: menu=0xa0; break;
  9957  000F1E  0EA0               	movlw	160
  9958  000F20  6E1D               	movwf	_menu,c	;volatile
  9959  000F22  0012               	return	
  9960  000F24                     l8027:
  9961                           
  9962                           ;key_menu.c: 129: menu=0xb0; break;
  9963  000F24  0EB0               	movlw	176
  9964  000F26  6E1D               	movwf	_menu,c	;volatile
  9965  000F28  0012               	return	
  9966  000F2A                     l8029:
  9967                           
  9968                           ;key_menu.c: 131: menu=0xc0; break;
  9969  000F2A  0EC0               	movlw	192
  9970  000F2C  6E1D               	movwf	_menu,c	;volatile
  9971  000F2E  0012               	return	
  9972  000F30                     l8031:
  9973                           
  9974                           ;key_menu.c: 133: menu=0xf0; break;
  9975  000F30  0EF0               	movlw	240
  9976  000F32  6E1D               	movwf	_menu,c	;volatile
  9977                           
  9978                           ;key_menu.c: 135: }
  9979                           
  9980                           ;key_menu.c: 134: default:break;
  9981  000F34  0012               	return	
  9982  000F36                     l8035:
  9983  000F36  C01E  F0E4         	movff	_passWord,??_key_process_set_down_long	;volatile
  9984  000F3A  C01F  F0E5         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  9985                           
  9986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9987                           ; Switch size 1, requested type "space"
  9988                           ; Number of cases is 1, Range of values is 0 to 0
  9989                           ; switch strategies available:
  9990                           ; Name         Instructions Cycles
  9991                           ; simple_byte            4     3 (average)
  9992                           ;	Chosen strategy is simple_byte
  9993  000F3E  0100               	movlb	0	; () banked
  9994  000F40  51E5               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  9995  000F42  0A00               	xorlw	0	; case 0
  9996  000F44  A4D8               	btfss	status,2,c
  9997  000F46  0012               	return	
  9998                           
  9999                           ; BSR set to: 0
 10000                           ; Switch size 1, requested type "space"
 10001                           ; Number of cases is 12, Range of values is 6 to 188
 10002                           ; switch strategies available:
 10003                           ; Name         Instructions Cycles
 10004                           ; simple_byte           37    19 (average)
 10005                           ;	Chosen strategy is simple_byte
 10006  000F48  0100               	movlb	0	; () banked
 10007  000F4A  51E4               	movf	??_key_process_set_down_long& (0+255),w,b
 10008  000F4C  0A06               	xorlw	6	; case 6
 10009  000F4E  B4D8               	btfsc	status,2,c
 10010  000F50  D7E0               	goto	l8021
 10011  000F52  0A16               	xorlw	22	; case 16
 10012  000F54  B4D8               	btfsc	status,2,c
 10013  000F56  D7E0               	goto	l8023
 10014  000F58  0A02               	xorlw	2	; case 18
 10015  000F5A  B4D8               	btfsc	status,2,c
 10016  000F5C  D7E9               	goto	l8031
 10017  000F5E  0A36               	xorlw	54	; case 36
 10018  000F60  B4D8               	btfsc	status,2,c
 10019  000F62  D7BF               	goto	l8003
 10020  000F64  0A1C               	xorlw	28	; case 56
 10021  000F66  B4D8               	btfsc	status,2,c
 10022  000F68  D7C6               	goto	l8011
 10023  000F6A  0A7A               	xorlw	122	; case 66
 10024  000F6C  B4D8               	btfsc	status,2,c
 10025  000F6E  D7BE               	goto	l8007
 10026  000F70  0AC7               	xorlw	199	; case 133
 10027  000F72  B4D8               	btfsc	status,2,c
 10028  000F74  D7CB               	goto	l8019
 10029  000F76  0A0F               	xorlw	15	; case 138
 10030  000F78  B4D8               	btfsc	status,2,c
 10031  000F7A  D7D1               	goto	l8025
 10032  000F7C  0A01               	xorlw	1	; case 139
 10033  000F7E  B4D8               	btfsc	status,2,c
 10034  000F80  D7D1               	goto	l8027
 10035  000F82  0A23               	xorlw	35	; case 168
 10036  000F84  B4D8               	btfsc	status,2,c
 10037  000F86  D7BC               	goto	l8015
 10038  000F88  0A01               	xorlw	1	; case 169
 10039  000F8A  B4D8               	btfsc	status,2,c
 10040  000F8C  D7BC               	goto	l8017
 10041  000F8E  0A15               	xorlw	21	; case 188
 10042  000F90  A4D8               	btfss	status,2,c
 10043                           
 10044                           ; BSR set to: 0
 10045  000F92  0012               	return	
 10046  000F94  D7CA               	goto	l8029
 10047  000F96                     __end_of_key_process_set_down_long:
 10048                           	opt stack 0
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           indf0	equ	0xFEF
 10057                           postinc0	equ	0xFEE
 10058                           fsr0h	equ	0xFEA
 10059                           fsr0l	equ	0xFE9
 10060                           wreg	equ	0xFE8
 10061                           postdec1	equ	0xFE5
 10062                           plusw1	equ	0xFE3
 10063                           fsr1h	equ	0xFE2
 10064                           fsr1l	equ	0xFE1
 10065                           indf2	equ	0xFDF
 10066                           postinc2	equ	0xFDE
 10067                           postdec2	equ	0xFDD
 10068                           plusw2	equ	0xFDB
 10069                           fsr2h	equ	0xFDA
 10070                           fsr2l	equ	0xFD9
 10071                           status	equ	0xFD8
 10072                           
 10073 ;; *************** function ___enter_menu_set_pose *****************
 10074 ;; Defined at:
 10075 ;;		line 87 in file "src/api/key_menu.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;		None
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;  fps             2    1[BANK0 ] PTR struct .
 10080 ;;		 -> RAM(3923), 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;Total ram usage:        3 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    4
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_key_process_set_down_long
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text59
 10105  00266A                     __ptext59:
 10106                           	opt stack 0
 10107  00266A                     ___enter_menu_set_pose:
 10108                           	opt stack 24
 10109                           
 10110                           ;key_menu.c: 88: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10111                           
 10112                           ;incstack = 0
 10113  00266A  0E00               	movlw	0
 10114  00266C  0100               	movlb	0	; () banked
 10115  00266E  6FC6               	movwf	___enter_menu_set_pose@fps& (0+255),b
 10116  002670  0EF4               	movlw	244
 10117  002672  0100               	movlb	0	; () banked
 10118  002674  6FC7               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;key_menu.c: 89: adjValue=(uint8_t)(fps->pos);
 10122  002676  0100               	movlb	0	; () banked
 10123  002678  EE20 F004          	lfsr	2,4
 10124  00267C  51C6               	movf	___enter_menu_set_pose@fps& (0+255),w,b
 10125  00267E  26D9               	addwf	fsr2l,f,c
 10126  002680  51C7               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
 10127  002682  22DA               	addwfc	fsr2h,f,c
 10128  002684  50DF               	movf	indf2,w,c
 10129  002686  0100               	movlb	0	; () banked
 10130  002688  6FC5               	movwf	??___enter_menu_set_pose& (0+255),b
 10131  00268A  0100               	movlb	0	; () banked
 10132  00268C  51C5               	movf	??___enter_menu_set_pose& (0+255),w,b
 10133  00268E  6E0C               	movwf	_adjValue,c	;volatile
 10134  002690  6A0D               	clrf	_adjValue+1,c	;volatile
 10135  002692  6A0E               	clrf	_adjValue+2,c	;volatile
 10136  002694  6A0F               	clrf	_adjValue+3,c	;volatile
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;key_menu.c: 90: adjLocation=0;
 10140  002696  0E00               	movlw	0
 10141  002698  6E20               	movwf	_adjLocation,c	;volatile
 10142                           
 10143                           ; BSR set to: 0
 10144  00269A  0012               	return		;funcret
 10145  00269C                     __end_of___enter_menu_set_pose:
 10146                           	opt stack 0
 10147                           tblptru	equ	0xFF8
 10148                           tblptrh	equ	0xFF7
 10149                           tblptrl	equ	0xFF6
 10150                           tablat	equ	0xFF5
 10151                           prodh	equ	0xFF4
 10152                           prodl	equ	0xFF3
 10153                           intcon	equ	0xFF2
 10154                           indf0	equ	0xFEF
 10155                           postinc0	equ	0xFEE
 10156                           fsr0h	equ	0xFEA
 10157                           fsr0l	equ	0xFE9
 10158                           wreg	equ	0xFE8
 10159                           postdec1	equ	0xFE5
 10160                           plusw1	equ	0xFE3
 10161                           fsr1h	equ	0xFE2
 10162                           fsr1l	equ	0xFE1
 10163                           indf2	equ	0xFDF
 10164                           postinc2	equ	0xFDE
 10165                           postdec2	equ	0xFDD
 10166                           plusw2	equ	0xFDB
 10167                           fsr2h	equ	0xFDA
 10168                           fsr2l	equ	0xFD9
 10169                           status	equ	0xFD8
 10170                           
 10171 ;; *************** function ___enter_menu_set_density *****************
 10172 ;; Defined at:
 10173 ;;		line 81 in file "src/api/key_menu.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  fps             2    2[BANK0 ] PTR struct .
 10178 ;;		 -> RAM(3923), 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;Total ram usage:        4 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    4
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_key_process_set_down_long
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text60
 10203  002636                     __ptext60:
 10204                           	opt stack 0
 10205  002636                     ___enter_menu_set_density:
 10206                           	opt stack 24
 10207                           
 10208                           ;key_menu.c: 82: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;incstack = 0
 10212  002636  0E00               	movlw	0
 10213  002638  0100               	movlb	0	; () banked
 10214  00263A  6FC7               	movwf	___enter_menu_set_density@fps& (0+255),b
 10215  00263C  0EF4               	movlw	244
 10216  00263E  0100               	movlb	0	; () banked
 10217  002640  6FC8               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;key_menu.c: 83: adjValue=fps->density;
 10221  002642  0100               	movlb	0	; () banked
 10222  002644  EE20 F006          	lfsr	2,6
 10223  002648  51C7               	movf	___enter_menu_set_density@fps& (0+255),w,b
 10224  00264A  26D9               	addwf	fsr2l,f,c
 10225  00264C  51C8               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
 10226  00264E  22DA               	addwfc	fsr2h,f,c
 10227  002650  CFDE F0C5          	movff	postinc2,??___enter_menu_set_density
 10228  002654  CFDD F0C6          	movff	postdec2,??___enter_menu_set_density+1
 10229  002658  C0C5  F00C         	movff	??___enter_menu_set_density,_adjValue	;volatile
 10230  00265C  C0C6  F00D         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
 10231  002660  6A0E               	clrf	_adjValue+2,c	;volatile
 10232  002662  6A0F               	clrf	_adjValue+3,c	;volatile
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;key_menu.c: 84: adjLocation=0;
 10236  002664  0E00               	movlw	0
 10237  002666  6E20               	movwf	_adjLocation,c	;volatile
 10238                           
 10239                           ; BSR set to: 0
 10240  002668  0012               	return		;funcret
 10241  00266A                     __end_of___enter_menu_set_density:
 10242                           	opt stack 0
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodh	equ	0xFF4
 10248                           prodl	equ	0xFF3
 10249                           intcon	equ	0xFF2
 10250                           indf0	equ	0xFEF
 10251                           postinc0	equ	0xFEE
 10252                           fsr0h	equ	0xFEA
 10253                           fsr0l	equ	0xFE9
 10254                           wreg	equ	0xFE8
 10255                           postdec1	equ	0xFE5
 10256                           plusw1	equ	0xFE3
 10257                           fsr1h	equ	0xFE2
 10258                           fsr1l	equ	0xFE1
 10259                           indf2	equ	0xFDF
 10260                           postinc2	equ	0xFDE
 10261                           postdec2	equ	0xFDD
 10262                           plusw2	equ	0xFDB
 10263                           fsr2h	equ	0xFDA
 10264                           fsr2l	equ	0xFD9
 10265                           status	equ	0xFD8
 10266                           
 10267 ;; *************** function ___enter_menu_set_base_zero *****************
 10268 ;; Defined at:
 10269 ;;		line 92 in file "src/api/key_menu.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  fps             2   29[BANK0 ] PTR struct .
 10274 ;;		 -> RAM(3923), 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;Total ram usage:        2 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    6
 10291 ;; This function calls:
 10292 ;;		___int32_2_mflot32
 10293 ;; This function is called by:
 10294 ;;		_key_process_set_down_long
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text61
 10299  002156                     __ptext61:
 10300                           	opt stack 0
 10301  002156                     ___enter_menu_set_base_zero:
 10302                           	opt stack 22
 10303                           
 10304                           ;key_menu.c: 93: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;incstack = 0
 10308  002156  0E00               	movlw	0
 10309  002158  0100               	movlb	0	; () banked
 10310  00215A  6FE2               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
 10311  00215C  0EF4               	movlw	244
 10312  00215E  0100               	movlb	0	; () banked
 10313  002160  6FE3               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;key_menu.c: 94: adjValue=(fps->baseZero);
 10317  002162  0100               	movlb	0	; () banked
 10318  002164  EE20 F010          	lfsr	2,16
 10319  002168  51E2               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
 10320  00216A  26D9               	addwf	fsr2l,f,c
 10321  00216C  51E3               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
 10322  00216E  22DA               	addwfc	fsr2h,f,c
 10323  002170  CFDE F00C          	movff	postinc2,_adjValue	;volatile
 10324  002174  CFDE F00D          	movff	postinc2,_adjValue+1	;volatile
 10325  002178  CFDE F00E          	movff	postinc2,_adjValue+2	;volatile
 10326  00217C  CFDE F00F          	movff	postinc2,_adjValue+3	;volatile
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;key_menu.c: 95: adjValue=__int32_2_mflot32(adjValue);
 10330  002180  C00C  F0D2         	movff	_adjValue,___int32_2_mflot32@x	;volatile
 10331  002184  C00D  F0D3         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
 10332  002188  C00E  F0D4         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
 10333  00218C  C00F  F0D5         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
 10334  002190  EC66  F004         	call	___int32_2_mflot32	;wreg free
 10335  002194  C0D2  F00C         	movff	?___int32_2_mflot32,_adjValue	;volatile
 10336  002198  C0D3  F00D         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
 10337  00219C  C0D4  F00E         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
 10338  0021A0  C0D5  F00F         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
 10339                           
 10340                           ;key_menu.c: 96: adjLocation=0;
 10341  0021A4  0E00               	movlw	0
 10342  0021A6  6E20               	movwf	_adjLocation,c	;volatile
 10343  0021A8  0012               	return		;funcret
 10344  0021AA                     __end_of___enter_menu_set_base_zero:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon	equ	0xFF2
 10353                           indf0	equ	0xFEF
 10354                           postinc0	equ	0xFEE
 10355                           fsr0h	equ	0xFEA
 10356                           fsr0l	equ	0xFE9
 10357                           wreg	equ	0xFE8
 10358                           postdec1	equ	0xFE5
 10359                           plusw1	equ	0xFE3
 10360                           fsr1h	equ	0xFE2
 10361                           fsr1l	equ	0xFE1
 10362                           indf2	equ	0xFDF
 10363                           postinc2	equ	0xFDE
 10364                           postdec2	equ	0xFDD
 10365                           plusw2	equ	0xFDB
 10366                           fsr2h	equ	0xFDA
 10367                           fsr2l	equ	0xFD9
 10368                           status	equ	0xFD8
 10369                           
 10370 ;; *************** function ___int32_2_mflot32 *****************
 10371 ;; Defined at:
 10372 ;;		line 24 in file "src/api/ui.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  x               4   13[BANK0 ] long 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  mf              4   25[BANK0 ] struct .
 10377 ;;  t32             4   21[BANK0 ] unsigned long 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  4   13[BANK0 ] long 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;Total ram usage:       16 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    5
 10394 ;; This function calls:
 10395 ;;		___lldiv
 10396 ;; This function is called by:
 10397 ;;		___enter_menu_set_base_zero
 10398 ;;		___enter_menu_calib_press_diff
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           	psect	text62
 10403  0008CC                     __ptext62:
 10404                           	opt stack 0
 10405  0008CC                     ___int32_2_mflot32:
 10406                           	opt stack 22
 10407                           
 10408                           ;ui.c: 26: st_float32 mf={0};
 10409                           
 10410                           ;incstack = 0
 10411  0008CC  C087  F0DE         	movff	___int32_2_mflot32@F7569,___int32_2_mflot32@mf
 10412  0008D0  C088  F0DF         	movff	___int32_2_mflot32@F7569+1,___int32_2_mflot32@mf+1
 10413  0008D4  C089  F0E0         	movff	___int32_2_mflot32@F7569+2,___int32_2_mflot32@mf+2
 10414  0008D8  C08A  F0E1         	movff	___int32_2_mflot32@F7569+3,___int32_2_mflot32@mf+3
 10415                           
 10416                           ;ui.c: 27: uint32_t t32;
 10417                           ;ui.c: 28: t32=x;
 10418  0008DC  C0D2  F0DA         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 10419  0008E0  C0D3  F0DB         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 10420  0008E4  C0D4  F0DC         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 10421  0008E8  C0D5  F0DD         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 10422                           
 10423                           ;ui.c: 29: if(x<0){
 10424  0008EC  0100               	movlb	0	; () banked
 10425  0008EE  AFD5               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 10426  0008F0  D040               	goto	l7335
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;ui.c: 30: t32 = ((~x) +1);
 10430  0008F2  C0D2  F0D6         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 10431  0008F6  C0D3  F0D7         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 10432  0008FA  C0D4  F0D8         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 10433  0008FE  C0D5  F0D9         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 10434  000902  0100               	movlb	0	; () banked
 10435  000904  1FD6               	comf	??___int32_2_mflot32& (0+255),f,b
 10436  000906  1FD7               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 10437  000908  1FD8               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 10438  00090A  1FD9               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 10439  00090C  2BD6               	incf	??___int32_2_mflot32& (0+255),f,b
 10440  00090E  0E00               	movlw	0
 10441  000910  23D7               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 10442  000912  23D8               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 10443  000914  23D9               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 10444  000916  C0D6  F0DA         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 10445  00091A  C0D7  F0DB         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 10446  00091E  C0D8  F0DC         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 10447  000922  C0D9  F0DD         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;ui.c: 31: mf.stru.sign=1;
 10451  000926  0E01               	movlw	1
 10452  000928  0100               	movlb	0	; () banked
 10453  00092A  6FE1               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;ui.c: 32: }
 10457                           ;ui.c: 33: while(t32>9999){
 10458  00092C  D022               	goto	l7335
 10459  00092E                     l7327:
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;ui.c: 34: mf.stru.exponent++;
 10463  00092E  0100               	movlb	0	; () banked
 10464  000930  2BE0               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;ui.c: 35: t32/=10;
 10468  000932  C0DA  F0C5         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 10469  000936  C0DB  F0C6         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 10470  00093A  C0DC  F0C7         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 10471  00093E  C0DD  F0C8         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 10472  000942  0E0A               	movlw	10
 10473  000944  0100               	movlb	0	; () banked
 10474  000946  6FC9               	movwf	___lldiv@divisor& (0+255),b
 10475  000948  0E00               	movlw	0
 10476  00094A  6FCA               	movwf	(___lldiv@divisor+1)& (0+255),b
 10477  00094C  0E00               	movlw	0
 10478  00094E  6FCB               	movwf	(___lldiv@divisor+2)& (0+255),b
 10479  000950  0E00               	movlw	0
 10480  000952  6FCC               	movwf	(___lldiv@divisor+3)& (0+255),b
 10481  000954  ECCB  F007         	call	___lldiv	;wreg free
 10482  000958  C0C5  F0DA         	movff	?___lldiv,___int32_2_mflot32@t32
 10483  00095C  C0C6  F0DB         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 10484  000960  C0C7  F0DC         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 10485  000964  C0C8  F0DD         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 10486                           
 10487                           ;ui.c: 36: if( mf.stru.exponent==3)break;
 10488  000968  0E03               	movlw	3
 10489  00096A  0100               	movlb	0	; () banked
 10490  00096C  19E0               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
 10491  00096E  B4D8               	btfsc	status,2,c
 10492  000970  D00D               	goto	l7337
 10493  000972                     l7335:
 10494                           
 10495                           ; BSR set to: 0
 10496  000972  0100               	movlb	0	; () banked
 10497  000974  51DD               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10498  000976  0100               	movlb	0	; () banked
 10499  000978  11DC               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10500  00097A  E1D9               	bnz	l7327
 10501  00097C  0E10               	movlw	16
 10502  00097E  0100               	movlb	0	; () banked
 10503  000980  5DDA               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10504  000982  0E27               	movlw	39
 10505  000984  0100               	movlb	0	; () banked
 10506  000986  59DB               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10507  000988  B0D8               	btfsc	status,0,c
 10508  00098A  D7D1               	goto	l7327
 10509  00098C                     l7337:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;ui.c: 37: }
 10513                           ;ui.c: 38: if(t32>9999)t32=9999;
 10514  00098C  0100               	movlb	0	; () banked
 10515  00098E  51DD               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10516  000990  0100               	movlb	0	; () banked
 10517  000992  11DC               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10518  000994  E108               	bnz	u5510
 10519  000996  0E10               	movlw	16
 10520  000998  0100               	movlb	0	; () banked
 10521  00099A  5DDA               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10522  00099C  0E27               	movlw	39
 10523  00099E  0100               	movlb	0	; () banked
 10524  0009A0  59DB               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10525  0009A2  A0D8               	btfss	status,0,c
 10526  0009A4  D009               	goto	l7341
 10527  0009A6                     u5510:
 10528                           
 10529                           ; BSR set to: 0
 10530  0009A6  0E0F               	movlw	15
 10531  0009A8  0100               	movlb	0	; () banked
 10532  0009AA  6FDA               	movwf	___int32_2_mflot32@t32& (0+255),b
 10533  0009AC  0E27               	movlw	39
 10534  0009AE  6FDB               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 10535  0009B0  0E00               	movlw	0
 10536  0009B2  6FDC               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 10537  0009B4  0E00               	movlw	0
 10538  0009B6  6FDD               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 10539  0009B8                     l7341:
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;ui.c: 39: mf.stru.significand=t32;
 10543  0009B8  C0DA  F0DE         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 10544  0009BC  C0DB  F0DF         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;ui.c: 40: return mf.t32;
 10548  0009C0  C0DE  F0D2         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 10549  0009C4  C0DF  F0D3         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 10550  0009C8  C0E0  F0D4         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 10551  0009CC  C0E1  F0D5         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 10552  0009D0  0012               	return	
 10553  0009D2                     __end_of___int32_2_mflot32:
 10554                           	opt stack 0
 10555                           tblptru	equ	0xFF8
 10556                           tblptrh	equ	0xFF7
 10557                           tblptrl	equ	0xFF6
 10558                           tablat	equ	0xFF5
 10559                           prodh	equ	0xFF4
 10560                           prodl	equ	0xFF3
 10561                           intcon	equ	0xFF2
 10562                           indf0	equ	0xFEF
 10563                           postinc0	equ	0xFEE
 10564                           fsr0h	equ	0xFEA
 10565                           fsr0l	equ	0xFE9
 10566                           wreg	equ	0xFE8
 10567                           postdec1	equ	0xFE5
 10568                           plusw1	equ	0xFE3
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           indf2	equ	0xFDF
 10572                           postinc2	equ	0xFDE
 10573                           postdec2	equ	0xFDD
 10574                           plusw2	equ	0xFDB
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function ___lldiv *****************
 10580 ;; Defined at:
 10581 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  dividend        4    0[BANK0 ] unsigned long 
 10584 ;;  divisor         4    4[BANK0 ] unsigned long 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  quotient        4    8[BANK0 ] unsigned long 
 10587 ;;  counter         1   12[BANK0 ] unsigned char 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  4    0[BANK0 ] unsigned long 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10597 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;Total ram usage:       13 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    4
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		___int32_2_mflot32
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text63
 10612  000F96                     __ptext63:
 10613                           	opt stack 0
 10614  000F96                     ___lldiv:
 10615                           	opt stack 22
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;incstack = 0
 10619  000F96  0E00               	movlw	0
 10620  000F98  0100               	movlb	0	; () banked
 10621  000F9A  6FCD               	movwf	___lldiv@quotient& (0+255),b
 10622  000F9C  0E00               	movlw	0
 10623  000F9E  6FCE               	movwf	(___lldiv@quotient+1)& (0+255),b
 10624  000FA0  0E00               	movlw	0
 10625  000FA2  6FCF               	movwf	(___lldiv@quotient+2)& (0+255),b
 10626  000FA4  0E00               	movlw	0
 10627  000FA6  6FD0               	movwf	(___lldiv@quotient+3)& (0+255),b
 10628                           
 10629                           ; BSR set to: 0
 10630  000FA8  0100               	movlb	0	; () banked
 10631  000FAA  51C9               	movf	___lldiv@divisor& (0+255),w,b
 10632  000FAC  0100               	movlb	0	; () banked
 10633  000FAE  11CA               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10634  000FB0  0100               	movlb	0	; () banked
 10635  000FB2  11CB               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10636  000FB4  0100               	movlb	0	; () banked
 10637  000FB6  11CC               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10638  000FB8  B4D8               	btfsc	status,2,c
 10639  000FBA  D042               	goto	l1799
 10640                           
 10641                           ; BSR set to: 0
 10642  000FBC  0E01               	movlw	1
 10643  000FBE  0100               	movlb	0	; () banked
 10644  000FC0  6FD1               	movwf	___lldiv@counter& (0+255),b
 10645  000FC2  D008               	goto	l7279
 10646  000FC4                     l7277:
 10647                           
 10648                           ; BSR set to: 0
 10649  000FC4  0100               	movlb	0	; () banked
 10650  000FC6  90D8               	bcf	status,0,c
 10651  000FC8  37C9               	rlcf	___lldiv@divisor& (0+255),f,b
 10652  000FCA  37CA               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10653  000FCC  37CB               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10654  000FCE  37CC               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10655  000FD0  0100               	movlb	0	; () banked
 10656  000FD2  2BD1               	incf	___lldiv@counter& (0+255),f,b
 10657  000FD4                     l7279:
 10658                           
 10659                           ; BSR set to: 0
 10660  000FD4  0100               	movlb	0	; () banked
 10661  000FD6  AFCC               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10662  000FD8  D7F5               	goto	l7277
 10663  000FDA                     l7281:
 10664                           
 10665                           ; BSR set to: 0
 10666  000FDA  0100               	movlb	0	; () banked
 10667  000FDC  90D8               	bcf	status,0,c
 10668  000FDE  37CD               	rlcf	___lldiv@quotient& (0+255),f,b
 10669  000FE0  37CE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10670  000FE2  37CF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10671  000FE4  37D0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10672                           
 10673                           ; BSR set to: 0
 10674  000FE6  0100               	movlb	0	; () banked
 10675  000FE8  51C9               	movf	___lldiv@divisor& (0+255),w,b
 10676  000FEA  0100               	movlb	0	; () banked
 10677  000FEC  5DC5               	subwf	___lldiv@dividend& (0+255),w,b
 10678  000FEE  0100               	movlb	0	; () banked
 10679  000FF0  51CA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10680  000FF2  0100               	movlb	0	; () banked
 10681  000FF4  59C6               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10682  000FF6  0100               	movlb	0	; () banked
 10683  000FF8  51CB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10684  000FFA  0100               	movlb	0	; () banked
 10685  000FFC  59C7               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10686  000FFE  0100               	movlb	0	; () banked
 10687  001000  51CC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10688  001002  0100               	movlb	0	; () banked
 10689  001004  59C8               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10690  001006  A0D8               	btfss	status,0,c
 10691  001008  D012               	goto	l7289
 10692                           
 10693                           ; BSR set to: 0
 10694  00100A  0100               	movlb	0	; () banked
 10695  00100C  51C9               	movf	___lldiv@divisor& (0+255),w,b
 10696  00100E  0100               	movlb	0	; () banked
 10697  001010  5FC5               	subwf	___lldiv@dividend& (0+255),f,b
 10698  001012  0100               	movlb	0	; () banked
 10699  001014  51CA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10700  001016  0100               	movlb	0	; () banked
 10701  001018  5BC6               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10702  00101A  0100               	movlb	0	; () banked
 10703  00101C  51CB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10704  00101E  0100               	movlb	0	; () banked
 10705  001020  5BC7               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10706  001022  0100               	movlb	0	; () banked
 10707  001024  51CC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10708  001026  0100               	movlb	0	; () banked
 10709  001028  5BC8               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 0
 10712  00102A  0100               	movlb	0	; () banked
 10713  00102C  81CD               	bsf	___lldiv@quotient& (0+255),0,b
 10714  00102E                     l7289:
 10715                           
 10716                           ; BSR set to: 0
 10717  00102E  0100               	movlb	0	; () banked
 10718  001030  90D8               	bcf	status,0,c
 10719  001032  33CC               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10720  001034  33CB               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10721  001036  33CA               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10722  001038  33C9               	rrcf	___lldiv@divisor& (0+255),f,b
 10723                           
 10724                           ; BSR set to: 0
 10725  00103A  0100               	movlb	0	; () banked
 10726  00103C  2FD1               	decfsz	___lldiv@counter& (0+255),f,b
 10727  00103E  D7CD               	goto	l7281
 10728  001040                     l1799:
 10729                           
 10730                           ; BSR set to: 0
 10731  001040  C0CD  F0C5         	movff	___lldiv@quotient,?___lldiv
 10732  001044  C0CE  F0C6         	movff	___lldiv@quotient+1,?___lldiv+1
 10733  001048  C0CF  F0C7         	movff	___lldiv@quotient+2,?___lldiv+2
 10734  00104C  C0D0  F0C8         	movff	___lldiv@quotient+3,?___lldiv+3
 10735                           
 10736                           ; BSR set to: 0
 10737  001050  0012               	return		;funcret
 10738  001052                     __end_of___lldiv:
 10739                           	opt stack 0
 10740                           tblptru	equ	0xFF8
 10741                           tblptrh	equ	0xFF7
 10742                           tblptrl	equ	0xFF6
 10743                           tablat	equ	0xFF5
 10744                           prodh	equ	0xFF4
 10745                           prodl	equ	0xFF3
 10746                           intcon	equ	0xFF2
 10747                           indf0	equ	0xFEF
 10748                           postinc0	equ	0xFEE
 10749                           fsr0h	equ	0xFEA
 10750                           fsr0l	equ	0xFE9
 10751                           wreg	equ	0xFE8
 10752                           postdec1	equ	0xFE5
 10753                           plusw1	equ	0xFE3
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           plusw2	equ	0xFDB
 10760                           fsr2h	equ	0xFDA
 10761                           fsr2l	equ	0xFD9
 10762                           status	equ	0xFD8
 10763                           
 10764 ;; *************** function _key_process_set *****************
 10765 ;; Defined at:
 10766 ;;		line 144 in file "src/api/key_menu.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;		None
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    4
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		_key_process
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text64
 10795  002756                     __ptext64:
 10796                           	opt stack 0
 10797  002756                     _key_process_set:
 10798                           	opt stack 25
 10799                           
 10800                           ;key_menu.c: 146: switch(menu){
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;incstack = 0
 10804  002756  D009               	goto	l8047
 10805  002758                     l8043:
 10806                           
 10807                           ;key_menu.c: 148: case 0x01:
 10808                           ;key_menu.c: 149: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
 10809  002758  0E00               	movlw	0
 10810  00275A  6E1F               	movwf	_passWord+1,c	;volatile
 10811  00275C  0E00               	movlw	0
 10812  00275E  6E1E               	movwf	_passWord,c	;volatile
 10813  002760  0E00               	movlw	0
 10814  002762  6E20               	movwf	_adjLocation,c	;volatile
 10815  002764  0E10               	movlw	16
 10816  002766  6E1D               	movwf	_menu,c	;volatile
 10817                           
 10818                           ;key_menu.c: 151: }
 10819                           
 10820                           ;key_menu.c: 150: default:break;
 10821  002768  0012               	return	
 10822  00276A                     l8047:
 10823  00276A  501D               	movf	_menu,w,c	;volatile
 10824                           
 10825                           ; Switch size 1, requested type "space"
 10826                           ; Number of cases is 3, Range of values is 0 to 2
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte           10     6 (average)
 10830                           ;	Chosen strategy is simple_byte
 10831  00276C  0A00               	xorlw	0	; case 0
 10832  00276E  B4D8               	btfsc	status,2,c
 10833  002770  D7F3               	goto	l8043
 10834  002772  0A01               	xorlw	1	; case 1
 10835  002774  B4D8               	btfsc	status,2,c
 10836  002776  D7F0               	goto	l8043
 10837  002778  0A03               	xorlw	3	; case 2
 10838  00277A  A4D8               	btfss	status,2,c
 10839  00277C  0012               	return	
 10840  00277E  D7EC               	goto	l8043
 10841  002780                     __end_of_key_process_set:
 10842                           	opt stack 0
 10843                           tblptru	equ	0xFF8
 10844                           tblptrh	equ	0xFF7
 10845                           tblptrl	equ	0xFF6
 10846                           tablat	equ	0xFF5
 10847                           prodh	equ	0xFF4
 10848                           prodl	equ	0xFF3
 10849                           intcon	equ	0xFF2
 10850                           indf0	equ	0xFEF
 10851                           postinc0	equ	0xFEE
 10852                           fsr0h	equ	0xFEA
 10853                           fsr0l	equ	0xFE9
 10854                           wreg	equ	0xFE8
 10855                           postdec1	equ	0xFE5
 10856                           plusw1	equ	0xFE3
 10857                           fsr1h	equ	0xFE2
 10858                           fsr1l	equ	0xFE1
 10859                           indf2	equ	0xFDF
 10860                           postinc2	equ	0xFDE
 10861                           postdec2	equ	0xFDD
 10862                           plusw2	equ	0xFDB
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           
 10867 ;; *************** function _key_process_down *****************
 10868 ;; Defined at:
 10869 ;;		line 47 in file "src/api/key_menu.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      void 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;Total ram usage:        0 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:    5
 10890 ;; This function calls:
 10891 ;;		_key_shift_loc_fixed_point
 10892 ;; This function is called by:
 10893 ;;		_key_process
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text65
 10898  00240A                     __ptext65:
 10899                           	opt stack 0
 10900  00240A                     _key_process_down:
 10901                           	opt stack 24
 10902                           
 10903                           ;key_menu.c: 49: switch(menu){
 10904                           
 10905                           ;incstack = 0
 10906  00240A  D00F               	goto	l7989
 10907  00240C                     l7985:
 10908  00240C  0E20               	movlw	low _adjLocation
 10909  00240E  0100               	movlb	0	; () banked
 10910  002410  6FC5               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
 10911  002412  0E00               	movlw	high _adjLocation
 10912  002414  0100               	movlb	0	; () banked
 10913  002416  6FC6               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
 10914  002418  0E00               	movlw	0
 10915  00241A  0100               	movlb	0	; () banked
 10916  00241C  6FC7               	movwf	key_shift_loc_fixed_point@min& (0+255),b
 10917  00241E  0E03               	movlw	3
 10918  002420  0100               	movlb	0	; () banked
 10919  002422  6FC8               	movwf	key_shift_loc_fixed_point@max& (0+255),b
 10920  002424  EC41  F012         	call	_key_shift_loc_fixed_point	;wreg free
 10921                           
 10922                           ;key_menu.c: 55: }
 10923                           
 10924                           ;key_menu.c: 54: default:break;
 10925  002428  0012               	return	
 10926  00242A                     l7989:
 10927  00242A  501D               	movf	_menu,w,c	;volatile
 10928                           
 10929                           ; Switch size 1, requested type "space"
 10930                           ; Number of cases is 4, Range of values is 0 to 16
 10931                           ; switch strategies available:
 10932                           ; Name         Instructions Cycles
 10933                           ; simple_byte           13     7 (average)
 10934                           ;	Chosen strategy is simple_byte
 10935  00242C  0A00               	xorlw	0	; case 0
 10936  00242E  B4D8               	btfsc	status,2,c
 10937  002430  0012               	return	
 10938  002432  0A01               	xorlw	1	; case 1
 10939  002434  B4D8               	btfsc	status,2,c
 10940  002436  0012               	return	
 10941  002438  0A03               	xorlw	3	; case 2
 10942  00243A  B4D8               	btfsc	status,2,c
 10943  00243C  0012               	return	
 10944  00243E  0A12               	xorlw	18	; case 16
 10945  002440  A4D8               	btfss	status,2,c
 10946  002442  0012               	return	
 10947  002444  D7E3               	goto	l7985
 10948  002446                     __end_of_key_process_down:
 10949                           	opt stack 0
 10950                           tblptru	equ	0xFF8
 10951                           tblptrh	equ	0xFF7
 10952                           tblptrl	equ	0xFF6
 10953                           tablat	equ	0xFF5
 10954                           prodh	equ	0xFF4
 10955                           prodl	equ	0xFF3
 10956                           intcon	equ	0xFF2
 10957                           indf0	equ	0xFEF
 10958                           postinc0	equ	0xFEE
 10959                           fsr0h	equ	0xFEA
 10960                           fsr0l	equ	0xFE9
 10961                           wreg	equ	0xFE8
 10962                           postdec1	equ	0xFE5
 10963                           plusw1	equ	0xFE3
 10964                           fsr1h	equ	0xFE2
 10965                           fsr1l	equ	0xFE1
 10966                           indf2	equ	0xFDF
 10967                           postinc2	equ	0xFDE
 10968                           postdec2	equ	0xFDD
 10969                           plusw2	equ	0xFDB
 10970                           fsr2h	equ	0xFDA
 10971                           fsr2l	equ	0xFD9
 10972                           status	equ	0xFD8
 10973                           
 10974 ;; *************** function _key_shift_loc_fixed_point *****************
 10975 ;; Defined at:
 10976 ;;		line 39 in file "src/api/key_menu.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 10979 ;;		 -> adjLocation(1), 
 10980 ;;  min             1    2[BANK0 ] unsigned char 
 10981 ;;  max             1    3[BANK0 ] unsigned char 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;  t8              1    4[BANK0 ] unsigned char 
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;Total ram usage:        5 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:    4
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_key_process_down
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text66
 11008  002482                     __ptext66:
 11009                           	opt stack 0
 11010  002482                     _key_shift_loc_fixed_point:
 11011                           	opt stack 24
 11012                           
 11013                           ;key_menu.c: 41: uint8_t t8=*loc;
 11014                           
 11015                           ;incstack = 0
 11016  002482  C0C5  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 11017  002486  C0C6  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 11018  00248A  50DF               	movf	indf2,w,c
 11019  00248C  0100               	movlb	0	; () banked
 11020  00248E  6FC9               	movwf	key_shift_loc_fixed_point@t8& (0+255),b
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;key_menu.c: 42: if(min<max)return;
 11024  002490  0100               	movlb	0	; () banked
 11025  002492  51C8               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
 11026  002494  0100               	movlb	0	; () banked
 11027  002496  5DC7               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
 11028  002498  A0D8               	btfss	status,0,c
 11029  00249A  0012               	return	
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;key_menu.c: 43: t8++;
 11033                           
 11034                           ; BSR set to: 0
 11035                           
 11036                           ; BSR set to: 0
 11037  00249C  0100               	movlb	0	; () banked
 11038  00249E  2BC9               	incf	key_shift_loc_fixed_point@t8& (0+255),f,b
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;key_menu.c: 44: if(t8>max)t8=min;
 11042  0024A0  0100               	movlb	0	; () banked
 11043  0024A2  51C9               	movf	key_shift_loc_fixed_point@t8& (0+255),w,b
 11044  0024A4  0100               	movlb	0	; () banked
 11045  0024A6  5DC8               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
 11046  0024A8  A0D8               	btfss	status,0,c
 11047                           
 11048                           ; BSR set to: 0
 11049  0024AA  C0C7  F0C9         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;key_menu.c: 45: *loc=t8;
 11053                           
 11054                           ; BSR set to: 0
 11055  0024AE  C0C5  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 11056  0024B2  C0C6  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 11057  0024B6  C0C9  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
 11058                           
 11059                           ; BSR set to: 0
 11060  0024BA  0012               	return		;funcret
 11061  0024BC                     __end_of_key_shift_loc_fixed_point:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           indf0	equ	0xFEF
 11071                           postinc0	equ	0xFEE
 11072                           fsr0h	equ	0xFEA
 11073                           fsr0l	equ	0xFE9
 11074                           wreg	equ	0xFE8
 11075                           postdec1	equ	0xFE5
 11076                           plusw1	equ	0xFE3
 11077                           fsr1h	equ	0xFE2
 11078                           fsr1l	equ	0xFE1
 11079                           indf2	equ	0xFDF
 11080                           postinc2	equ	0xFDE
 11081                           postdec2	equ	0xFDD
 11082                           plusw2	equ	0xFDB
 11083                           fsr2h	equ	0xFDA
 11084                           fsr2l	equ	0xFD9
 11085                           status	equ	0xFD8
 11086                           
 11087 ;; *************** function _in_adc_start_and_read *****************
 11088 ;; Defined at:
 11089 ;;		line 21 in file "src/driver/in_adc.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  ch              1    wreg     unsigned char 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  ch              1    7[BANK0 ] unsigned char 
 11094 ;;  ret             2    8[BANK0 ] unsigned int 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  2    4[BANK0 ] unsigned int 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11105 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11107 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11108 ;;Total ram usage:        6 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:    5
 11111 ;; This function calls:
 11112 ;;		_delay_us
 11113 ;; This function is called by:
 11114 ;;		_main
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text67
 11119  001BDC                     __ptext67:
 11120                           	opt stack 0
 11121  001BDC                     _in_adc_start_and_read:
 11122                           	opt stack 25
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;incstack = 0
 11126                           ;in_adc_start_and_read@ch stored from wreg
 11127  001BDC  0100               	movlb	0	; () banked
 11128  001BDE  6FCC               	movwf	in_adc_start_and_read@ch& (0+255),b
 11129                           
 11130                           ;in_adc.c: 23: uint16_t ret=0;
 11131  001BE0  0E00               	movlw	0
 11132  001BE2  0100               	movlb	0	; () banked
 11133  001BE4  6FCE               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 11134  001BE6  0E00               	movlw	0
 11135  001BE8  6FCD               	movwf	in_adc_start_and_read@ret& (0+255),b
 11136                           
 11137                           ; BSR set to: 0
 11138                           
 11139                           ; BSR set to: 0
 11140                           
 11141                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 11142  001BEA  80C2               	bsf	4034,0,c	;volatile
 11143                           
 11144                           ; BSR set to: 0
 11145                           
 11146                           ; BSR set to: 0
 11147                           
 11148                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 11149                           
 11150                           ; BSR set to: 0
 11151  001BEC  C0CC  F0CB         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 11152  001BF0  0100               	movlb	0	; () banked
 11153  001BF2  47CB               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 11154  001BF4  47CB               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 11155  001BF6  50C2               	movf	4034,w,c	;volatile
 11156  001BF8  0100               	movlb	0	; () banked
 11157  001BFA  19CB               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 11158  001BFC  0BC3               	andlw	-61
 11159  001BFE  19CB               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 11160  001C00  6EC2               	movwf	4034,c	;volatile
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;in_adc.c: 26: delay_us(2);
 11164                           
 11165                           ; BSR set to: 0
 11166  001C02  0E00               	movlw	0
 11167  001C04  0100               	movlb	0	; () banked
 11168  001C06  6FC6               	movwf	(delay_us@dly+1)& (0+255),b
 11169  001C08  0E02               	movlw	2
 11170  001C0A  6FC5               	movwf	delay_us@dly& (0+255),b
 11171  001C0C  EC5E  F012         	call	_delay_us	;wreg free
 11172                           
 11173                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 11174  001C10  82C2               	bsf	4034,1,c	;volatile
 11175                           
 11176                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 11177  001C12  D001               	goto	l810
 11178  001C14                     l811:
 11179  001C14  F000               	nop	
 11180  001C16                     l810:
 11181  001C16  B2C2               	btfsc	4034,1,c	;volatile
 11182  001C18  D7FD               	goto	l811
 11183                           
 11184                           ;in_adc.c: 30: ret=ADRESH;
 11185  001C1A  CFC4 F0CD          	movff	4036,in_adc_start_and_read@ret	;volatile
 11186  001C1E  0100               	movlb	0	; () banked
 11187  001C20  6BCE               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;in_adc.c: 31: ret<<=8;
 11191  001C22  0100               	movlb	0	; () banked
 11192  001C24  51CD               	movf	in_adc_start_and_read@ret& (0+255),w,b
 11193  001C26  6FCE               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 11194  001C28  6BCD               	clrf	in_adc_start_and_read@ret& (0+255),b
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;in_adc.c: 32: ret |= ADRESL;
 11198  001C2A  50C3               	movf	4035,w,c	;volatile
 11199  001C2C  0100               	movlb	0	; () banked
 11200  001C2E  13CD               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;in_adc.c: 33: delay_us(2);
 11204  001C30  0E00               	movlw	0
 11205  001C32  0100               	movlb	0	; () banked
 11206  001C34  6FC6               	movwf	(delay_us@dly+1)& (0+255),b
 11207  001C36  0E02               	movlw	2
 11208  001C38  6FC5               	movwf	delay_us@dly& (0+255),b
 11209  001C3A  EC5E  F012         	call	_delay_us	;wreg free
 11210                           
 11211                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 11212  001C3E  90C2               	bcf	4034,0,c	;volatile
 11213                           
 11214                           ;in_adc.c: 35: return ret;
 11215  001C40  C0CD  F0C9         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 11216  001C44  C0CE  F0CA         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 11217  001C48  0012               	return	
 11218  001C4A                     __end_of_in_adc_start_and_read:
 11219                           	opt stack 0
 11220                           tblptru	equ	0xFF8
 11221                           tblptrh	equ	0xFF7
 11222                           tblptrl	equ	0xFF6
 11223                           tablat	equ	0xFF5
 11224                           prodh	equ	0xFF4
 11225                           prodl	equ	0xFF3
 11226                           intcon	equ	0xFF2
 11227                           indf0	equ	0xFEF
 11228                           postinc0	equ	0xFEE
 11229                           fsr0h	equ	0xFEA
 11230                           fsr0l	equ	0xFE9
 11231                           wreg	equ	0xFE8
 11232                           postdec1	equ	0xFE5
 11233                           plusw1	equ	0xFE3
 11234                           fsr1h	equ	0xFE2
 11235                           fsr1l	equ	0xFE1
 11236                           indf2	equ	0xFDF
 11237                           postinc2	equ	0xFDE
 11238                           postdec2	equ	0xFDD
 11239                           plusw2	equ	0xFDB
 11240                           fsr2h	equ	0xFDA
 11241                           fsr2l	equ	0xFD9
 11242                           status	equ	0xFD8
 11243                           
 11244 ;; *************** function _delay_us *****************
 11245 ;; Defined at:
 11246 ;;		line 82 in file "src/soc/clock.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;  dly             2    0[BANK0 ] unsigned int 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;  i               2    2[BANK0 ] unsigned int 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      void 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;Total ram usage:        4 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:    4
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_in_adc_start_and_read
 11271 ;;		_delay_ms
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text68
 11276  0024BC                     __ptext68:
 11277                           	opt stack 0
 11278  0024BC                     _delay_us:
 11279                           	opt stack 22
 11280                           
 11281                           ;clock.c: 84: uint16_t i;
 11282                           ;clock.c: 85: for(i=0;i<dly;i++){
 11283                           
 11284                           ;incstack = 0
 11285  0024BC  0E00               	movlw	0
 11286  0024BE  0100               	movlb	0	; () banked
 11287  0024C0  6FC8               	movwf	(delay_us@i+1)& (0+255),b
 11288  0024C2  0E00               	movlw	0
 11289  0024C4  6FC7               	movwf	delay_us@i& (0+255),b
 11290  0024C6  D00B               	goto	l7269
 11291  0024C8                     l1295:
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;clock.c: 86: __nop();
 11295  0024C8  F000               	nop	
 11296                           
 11297                           ;clock.c: 87: __nop();
 11298  0024CA  F000               	nop	
 11299                           
 11300                           ;clock.c: 88: __nop();
 11301  0024CC  F000               	nop	
 11302                           
 11303                           ;clock.c: 89: __nop();
 11304  0024CE  F000               	nop	
 11305                           
 11306                           ;clock.c: 91: __nop();
 11307  0024D0  F000               	nop	
 11308                           
 11309                           ;clock.c: 92: __nop();
 11310  0024D2  F000               	nop	
 11311                           
 11312                           ;clock.c: 93: __nop();
 11313  0024D4  F000               	nop	
 11314                           
 11315                           ;clock.c: 94: __nop();
 11316  0024D6  F000               	nop	
 11317  0024D8  0100               	movlb	0	; () banked
 11318  0024DA  4BC7               	infsnz	delay_us@i& (0+255),f,b
 11319  0024DC  2BC8               	incf	(delay_us@i+1)& (0+255),f,b
 11320  0024DE                     l7269:
 11321                           
 11322                           ; BSR set to: 0
 11323  0024DE  0100               	movlb	0	; () banked
 11324  0024E0  51C5               	movf	delay_us@dly& (0+255),w,b
 11325  0024E2  0100               	movlb	0	; () banked
 11326  0024E4  5DC7               	subwf	delay_us@i& (0+255),w,b
 11327  0024E6  0100               	movlb	0	; () banked
 11328  0024E8  51C6               	movf	(delay_us@dly+1)& (0+255),w,b
 11329  0024EA  0100               	movlb	0	; () banked
 11330  0024EC  59C8               	subwfb	(delay_us@i+1)& (0+255),w,b
 11331  0024EE  B0D8               	btfsc	status,0,c
 11332  0024F0  0012               	return	
 11333  0024F2  D7EA               	goto	l1295
 11334  0024F4                     __end_of_delay_us:
 11335                           	opt stack 0
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           indf0	equ	0xFEF
 11344                           postinc0	equ	0xFEE
 11345                           fsr0h	equ	0xFEA
 11346                           fsr0l	equ	0xFE9
 11347                           wreg	equ	0xFE8
 11348                           postdec1	equ	0xFE5
 11349                           plusw1	equ	0xFE3
 11350                           fsr1h	equ	0xFE2
 11351                           fsr1l	equ	0xFE1
 11352                           indf2	equ	0xFDF
 11353                           postinc2	equ	0xFDE
 11354                           postdec2	equ	0xFDD
 11355                           plusw2	equ	0xFDB
 11356                           fsr2h	equ	0xFDA
 11357                           fsr2l	equ	0xFD9
 11358                           status	equ	0xFD8
 11359                           
 11360 ;; *************** function _in_adc_init *****************
 11361 ;; Defined at:
 11362 ;;		line 9 in file "src/driver/in_adc.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;		None
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		wreg, status,2
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;Total ram usage:        0 bytes
 11381 ;; Hardware stack levels used:    1
 11382 ;; Hardware stack levels required when called:    4
 11383 ;; This function calls:
 11384 ;;		Nothing
 11385 ;; This function is called by:
 11386 ;;		_main
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text69
 11391  0027F4                     __ptext69:
 11392                           	opt stack 0
 11393  0027F4                     _in_adc_init:
 11394                           	opt stack 26
 11395                           
 11396                           ;in_adc.c: 11: ADCON1=0b00001101;
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;incstack = 0
 11400  0027F4  0E0D               	movlw	13
 11401  0027F6  6EC1               	movwf	4033,c	;volatile
 11402                           
 11403                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 11404  0027F8  8EC0               	bsf	4032,7,c	;volatile
 11405                           
 11406                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 11407  0027FA  86C0               	bsf	4032,3,c	;volatile
 11408  0027FC  88C0               	bsf	4032,4,c	;volatile
 11409  0027FE  8AC0               	bsf	4032,5,c	;volatile
 11410                           
 11411                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 11412  002800  80C0               	bsf	4032,0,c	;volatile
 11413  002802  82C0               	bsf	4032,1,c	;volatile
 11414  002804  84C0               	bsf	4032,2,c	;volatile
 11415                           
 11416                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 11417  002806  8EC2               	bsf	4034,7,c	;volatile
 11418                           
 11419                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 11420  002808  50C2               	movf	4034,w,c	;volatile
 11421  00280A  0BC3               	andlw	-61
 11422  00280C  090C               	iorlw	12
 11423  00280E  6EC2               	movwf	4034,c	;volatile
 11424                           
 11425                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 11426  002810  9C9E               	bcf	3998,6,c	;volatile
 11427                           
 11428                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 11429  002812  9C9D               	bcf	3997,6,c	;volatile
 11430                           
 11431                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 11432  002814  9C9F               	bcf	3999,6,c	;volatile
 11433  002816  0012               	return		;funcret
 11434  002818                     __end_of_in_adc_init:
 11435                           	opt stack 0
 11436                           tblptru	equ	0xFF8
 11437                           tblptrh	equ	0xFF7
 11438                           tblptrl	equ	0xFF6
 11439                           tablat	equ	0xFF5
 11440                           prodh	equ	0xFF4
 11441                           prodl	equ	0xFF3
 11442                           intcon	equ	0xFF2
 11443                           indf0	equ	0xFEF
 11444                           postinc0	equ	0xFEE
 11445                           fsr0h	equ	0xFEA
 11446                           fsr0l	equ	0xFE9
 11447                           wreg	equ	0xFE8
 11448                           postdec1	equ	0xFE5
 11449                           plusw1	equ	0xFE3
 11450                           fsr1h	equ	0xFE2
 11451                           fsr1l	equ	0xFE1
 11452                           indf2	equ	0xFDF
 11453                           postinc2	equ	0xFDE
 11454                           postdec2	equ	0xFDD
 11455                           plusw2	equ	0xFDB
 11456                           fsr2h	equ	0xFDA
 11457                           fsr2l	equ	0xFD9
 11458                           status	equ	0xFD8
 11459                           
 11460 ;; *************** function _ads1115_start_conversion *****************
 11461 ;; Defined at:
 11462 ;;		line 115 in file "src/driver/ads1115.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 11465 ;;		 -> ads1115Chip0(16), 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;		None
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11481 ;;Total ram usage:        2 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:    8
 11484 ;; This function calls:
 11485 ;;		_ads1115_write_reg
 11486 ;; This function is called by:
 11487 ;;		_main
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text70
 11492  002780                     __ptext70:
 11493                           	opt stack 0
 11494  002780                     _ads1115_start_conversion:
 11495                           	opt stack 22
 11496                           
 11497                           ;ads1115.c: 117: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 11498                           
 11499                           ;incstack = 0
 11500  002780  C0CD  F0C8         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 11501  002784  C0CE  F0C9         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 11502  002788  0E01               	movlw	1
 11503  00278A  0100               	movlb	0	; () banked
 11504  00278C  6FCA               	movwf	ads1115_write_reg@addr& (0+255),b
 11505  00278E  0100               	movlb	0	; () banked
 11506  002790  EE20 F002          	lfsr	2,2
 11507  002794  51CD               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 11508  002796  26D9               	addwf	fsr2l,f,c
 11509  002798  51CE               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 11510  00279A  22DA               	addwfc	fsr2h,f,c
 11511  00279C  CFDE F0CB          	movff	postinc2,ads1115_write_reg@value
 11512  0027A0  CFDD F0CC          	movff	postdec2,ads1115_write_reg@value+1
 11513  0027A4  ECE9  F004         	call	_ads1115_write_reg	;wreg free
 11514  0027A8  0012               	return		;funcret
 11515  0027AA                     __end_of_ads1115_start_conversion:
 11516                           	opt stack 0
 11517                           tblptru	equ	0xFF8
 11518                           tblptrh	equ	0xFF7
 11519                           tblptrl	equ	0xFF6
 11520                           tablat	equ	0xFF5
 11521                           prodh	equ	0xFF4
 11522                           prodl	equ	0xFF3
 11523                           intcon	equ	0xFF2
 11524                           indf0	equ	0xFEF
 11525                           postinc0	equ	0xFEE
 11526                           fsr0h	equ	0xFEA
 11527                           fsr0l	equ	0xFE9
 11528                           wreg	equ	0xFE8
 11529                           postdec1	equ	0xFE5
 11530                           plusw1	equ	0xFE3
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           plusw2	equ	0xFDB
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function _ads1115_write_reg *****************
 11542 ;; Defined at:
 11543 ;;		line 15 in file "src/driver/ads1115.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  pAds1115        2    3[BANK0 ] PTR struct .
 11546 ;;		 -> ads1115Chip0(16), 
 11547 ;;  addr            1    5[BANK0 ] unsigned char 
 11548 ;;  value           2    6[BANK0 ] unsigned int 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;		None
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      void 
 11553 ;; Registers used:
 11554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11560 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;Total ram usage:        5 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    7
 11567 ;; This function calls:
 11568 ;;		_iic_send_byte
 11569 ;;		_iic_start
 11570 ;;		_iic_stop
 11571 ;; This function is called by:
 11572 ;;		_ads1115_start_conversion
 11573 ;;		_ads1115_set_threshold_lo
 11574 ;;		_ads1115_set_threshold_hi
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           	psect	text71
 11579  0009D2                     __ptext71:
 11580                           	opt stack 0
 11581  0009D2                     _ads1115_write_reg:
 11582                           	opt stack 22
 11583                           
 11584                           ;ads1115.c: 17: pAds1115->iic_start();
 11585                           
 11586                           ;incstack = 0
 11587  0009D2  0100               	movlb	0	; () banked
 11588  0009D4  EE20 F006          	lfsr	2,6
 11589  0009D8  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11590  0009DA  26D9               	addwf	fsr2l,f,c
 11591  0009DC  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11592  0009DE  22DA               	addwfc	fsr2h,f,c
 11593  0009E0  D801               	call	u6048
 11594  0009E2  D00A               	goto	u6049
 11595  0009E4                     u6048:
 11596  0009E4  0005               	push	
 11597  0009E6  6EFA               	movwf	pclath,c
 11598  0009E8  50DE               	movf	postinc2,w,c
 11599  0009EA  6EFD               	movwf	tosl,c
 11600  0009EC  50DE               	movf	postinc2,w,c
 11601  0009EE  6EFE               	movwf	tosh,c
 11602  0009F0  50F8               	movf	tblptru,w,c
 11603  0009F2  6EFF               	movwf	tosu,c
 11604  0009F4  50FA               	movf	pclath,w,c
 11605  0009F6  0012               	return		;indir
 11606  0009F8                     u6049:
 11607                           
 11608                           ;ads1115.c: 19: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 11609  0009F8  0100               	movlb	0	; () banked
 11610  0009FA  EE20 F00A          	lfsr	2,10
 11611  0009FE  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11612  000A00  26D9               	addwf	fsr2l,f,c
 11613  000A02  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11614  000A04  22DA               	addwfc	fsr2h,f,c
 11615  000A06  D801               	call	u6058
 11616  000A08  D012               	goto	u6059
 11617  000A0A                     u6058:
 11618  000A0A  0005               	push	
 11619  000A0C  6EFA               	movwf	pclath,c
 11620  000A0E  50DE               	movf	postinc2,w,c
 11621  000A10  6EFD               	movwf	tosl,c
 11622  000A12  50DE               	movf	postinc2,w,c
 11623  000A14  6EFE               	movwf	tosh,c
 11624  000A16  50F8               	movf	tblptru,w,c
 11625  000A18  6EFF               	movwf	tosu,c
 11626  000A1A  50FA               	movf	pclath,w,c
 11627  000A1C  0100               	movlb	0	; () banked
 11628  000A1E  EE20 F001          	lfsr	2,1
 11629  000A22  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11630  000A24  26D9               	addwf	fsr2l,f,c
 11631  000A26  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11632  000A28  22DA               	addwfc	fsr2h,f,c
 11633  000A2A  50DF               	movf	indf2,w,c
 11634  000A2C  0012               	return		;indir
 11635  000A2E                     u6059:
 11636                           
 11637                           ;ads1115.c: 20: pAds1115->iic_send_byte(addr);
 11638  000A2E  0100               	movlb	0	; () banked
 11639  000A30  EE20 F00A          	lfsr	2,10
 11640  000A34  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11641  000A36  26D9               	addwf	fsr2l,f,c
 11642  000A38  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11643  000A3A  22DA               	addwfc	fsr2h,f,c
 11644  000A3C  D801               	call	u6068
 11645  000A3E  D00C               	goto	u6069
 11646  000A40                     u6068:
 11647  000A40  0005               	push	
 11648  000A42  6EFA               	movwf	pclath,c
 11649  000A44  50DE               	movf	postinc2,w,c
 11650  000A46  6EFD               	movwf	tosl,c
 11651  000A48  50DE               	movf	postinc2,w,c
 11652  000A4A  6EFE               	movwf	tosh,c
 11653  000A4C  50F8               	movf	tblptru,w,c
 11654  000A4E  6EFF               	movwf	tosu,c
 11655  000A50  50FA               	movf	pclath,w,c
 11656  000A52  0100               	movlb	0	; () banked
 11657  000A54  51CA               	movf	ads1115_write_reg@addr& (0+255),w,b
 11658  000A56  0012               	return		;indir
 11659  000A58                     u6069:
 11660                           
 11661                           ;ads1115.c: 22: pAds1115->iic_send_byte((uint8_t)(value>>8));
 11662  000A58  0100               	movlb	0	; () banked
 11663  000A5A  EE20 F00A          	lfsr	2,10
 11664  000A5E  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11665  000A60  26D9               	addwf	fsr2l,f,c
 11666  000A62  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11667  000A64  22DA               	addwfc	fsr2h,f,c
 11668  000A66  D801               	call	u6078
 11669  000A68  D00C               	goto	u6079
 11670  000A6A                     u6078:
 11671  000A6A  0005               	push	
 11672  000A6C  6EFA               	movwf	pclath,c
 11673  000A6E  50DE               	movf	postinc2,w,c
 11674  000A70  6EFD               	movwf	tosl,c
 11675  000A72  50DE               	movf	postinc2,w,c
 11676  000A74  6EFE               	movwf	tosh,c
 11677  000A76  50F8               	movf	tblptru,w,c
 11678  000A78  6EFF               	movwf	tosu,c
 11679  000A7A  50FA               	movf	pclath,w,c
 11680  000A7C  0100               	movlb	0	; () banked
 11681  000A7E  51CC               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 11682  000A80  0012               	return		;indir
 11683  000A82                     u6079:
 11684                           
 11685                           ;ads1115.c: 23: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 11686  000A82  0100               	movlb	0	; () banked
 11687  000A84  EE20 F00A          	lfsr	2,10
 11688  000A88  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11689  000A8A  26D9               	addwf	fsr2l,f,c
 11690  000A8C  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11691  000A8E  22DA               	addwfc	fsr2h,f,c
 11692  000A90  D801               	call	u6088
 11693  000A92  D00C               	goto	u6089
 11694  000A94                     u6088:
 11695  000A94  0005               	push	
 11696  000A96  6EFA               	movwf	pclath,c
 11697  000A98  50DE               	movf	postinc2,w,c
 11698  000A9A  6EFD               	movwf	tosl,c
 11699  000A9C  50DE               	movf	postinc2,w,c
 11700  000A9E  6EFE               	movwf	tosh,c
 11701  000AA0  50F8               	movf	tblptru,w,c
 11702  000AA2  6EFF               	movwf	tosu,c
 11703  000AA4  50FA               	movf	pclath,w,c
 11704  000AA6  0100               	movlb	0	; () banked
 11705  000AA8  51CB               	movf	ads1115_write_reg@value& (0+255),w,b
 11706  000AAA  0012               	return		;indir
 11707  000AAC                     u6089:
 11708                           
 11709                           ;ads1115.c: 24: pAds1115->iic_stop();
 11710  000AAC  0100               	movlb	0	; () banked
 11711  000AAE  EE20 F008          	lfsr	2,8
 11712  000AB2  51C8               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11713  000AB4  26D9               	addwf	fsr2l,f,c
 11714  000AB6  51C9               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11715  000AB8  22DA               	addwfc	fsr2h,f,c
 11716  000ABA  D801               	call	u6098
 11717  000ABC  0012               	return	
 11718  000ABE                     u6098:
 11719  000ABE  0005               	push	
 11720  000AC0  6EFA               	movwf	pclath,c
 11721  000AC2  50DE               	movf	postinc2,w,c
 11722  000AC4  6EFD               	movwf	tosl,c
 11723  000AC6  50DE               	movf	postinc2,w,c
 11724  000AC8  6EFE               	movwf	tosh,c
 11725  000ACA  50F8               	movf	tblptru,w,c
 11726  000ACC  6EFF               	movwf	tosu,c
 11727  000ACE  50FA               	movf	pclath,w,c
 11728  000AD0  0012               	return		;indir
 11729  000AD2                     __end_of_ads1115_write_reg:
 11730                           	opt stack 0
 11731                           tosu	equ	0xFFF
 11732                           tosh	equ	0xFFE
 11733                           tosl	equ	0xFFD
 11734                           pclath	equ	0xFFA
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodh	equ	0xFF4
 11740                           prodl	equ	0xFF3
 11741                           intcon	equ	0xFF2
 11742                           indf0	equ	0xFEF
 11743                           postinc0	equ	0xFEE
 11744                           fsr0h	equ	0xFEA
 11745                           fsr0l	equ	0xFE9
 11746                           wreg	equ	0xFE8
 11747                           postdec1	equ	0xFE5
 11748                           plusw1	equ	0xFE3
 11749                           fsr1h	equ	0xFE2
 11750                           fsr1l	equ	0xFE1
 11751                           indf2	equ	0xFDF
 11752                           postinc2	equ	0xFDE
 11753                           postdec2	equ	0xFDD
 11754                           plusw2	equ	0xFDB
 11755                           fsr2h	equ	0xFDA
 11756                           fsr2l	equ	0xFD9
 11757                           status	equ	0xFD8
 11758                           
 11759 ;; *************** function _ads1115_read_conversion *****************
 11760 ;; Defined at:
 11761 ;;		line 120 in file "src/driver/ads1115.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  pAds1115        2   10[BANK0 ] PTR struct .
 11764 ;;		 -> ads1115Chip0(16), 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;  result          2   13[BANK0 ] unsigned int 
 11767 ;; Return value:  Size  Location     Type
 11768 ;;                  2   10[BANK0 ] unsigned int 
 11769 ;; Registers used:
 11770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11771 ;; Tracked objects:
 11772 ;;		On entry : 0/0
 11773 ;;		On exit  : 0/0
 11774 ;;		Unchanged: 0/0
 11775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;Total ram usage:        5 bytes
 11781 ;; Hardware stack levels used:    1
 11782 ;; Hardware stack levels required when called:    8
 11783 ;; This function calls:
 11784 ;;		_ads1115_read_reg
 11785 ;; This function is called by:
 11786 ;;		_main
 11787 ;; This function uses a non-reentrant model
 11788 ;;
 11789                           
 11790                           	psect	text72
 11791  0021FA                     __ptext72:
 11792                           	opt stack 0
 11793  0021FA                     _ads1115_read_conversion:
 11794                           	opt stack 22
 11795                           
 11796                           ;ads1115.c: 122: uint16_t result;
 11797                           ;ads1115.c: 123: result=ads1115_read_reg(pAds1115,(0x00));
 11798                           
 11799                           ;incstack = 0
 11800  0021FA  C0CF  F0C9         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 11801  0021FE  C0D0  F0CA         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 11802  002202  0E00               	movlw	0
 11803  002204  0100               	movlb	0	; () banked
 11804  002206  6FCB               	movwf	ads1115_read_reg@addr& (0+255),b
 11805  002208  ECD9  F002         	call	_ads1115_read_reg
 11806  00220C  C0C9  F0D2         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 11807  002210  C0CA  F0D3         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 11808                           
 11809                           ;ads1115.c: 124: if(pAds1115->chip<ADS1113){
 11810  002214  C0CF  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 11811  002218  C0D0  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 11812  00221C  0E03               	movlw	3
 11813  00221E  60DF               	cpfslt	indf2,c
 11814  002220  D00A               	goto	l8437
 11815                           
 11816                           ;ads1115.c: 125: result >>= 4;
 11817  002222  0100               	movlb	0	; () banked
 11818  002224  3BD2               	swapf	ads1115_read_conversion@result& (0+255),f,b
 11819  002226  3BD3               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 11820  002228  0E0F               	movlw	15
 11821  00222A  17D2               	andwf	ads1115_read_conversion@result& (0+255),f,b
 11822  00222C  51D3               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 11823  00222E  0BF0               	andlw	240
 11824  002230  13D2               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 11825  002232  0E0F               	movlw	15
 11826  002234  17D3               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 11827  002236                     l8437:
 11828                           
 11829                           ;ads1115.c: 126: }
 11830                           ;ads1115.c: 127: return result;
 11831  002236  C0D2  F0CF         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 11832  00223A  C0D3  F0D0         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 11833  00223E  0012               	return	
 11834  002240                     __end_of_ads1115_read_conversion:
 11835                           	opt stack 0
 11836                           tosu	equ	0xFFF
 11837                           tosh	equ	0xFFE
 11838                           tosl	equ	0xFFD
 11839                           pclath	equ	0xFFA
 11840                           tblptru	equ	0xFF8
 11841                           tblptrh	equ	0xFF7
 11842                           tblptrl	equ	0xFF6
 11843                           tablat	equ	0xFF5
 11844                           prodh	equ	0xFF4
 11845                           prodl	equ	0xFF3
 11846                           intcon	equ	0xFF2
 11847                           indf0	equ	0xFEF
 11848                           postinc0	equ	0xFEE
 11849                           fsr0h	equ	0xFEA
 11850                           fsr0l	equ	0xFE9
 11851                           wreg	equ	0xFE8
 11852                           postdec1	equ	0xFE5
 11853                           plusw1	equ	0xFE3
 11854                           fsr1h	equ	0xFE2
 11855                           fsr1l	equ	0xFE1
 11856                           indf2	equ	0xFDF
 11857                           postinc2	equ	0xFDE
 11858                           postdec2	equ	0xFDD
 11859                           plusw2	equ	0xFDB
 11860                           fsr2h	equ	0xFDA
 11861                           fsr2l	equ	0xFD9
 11862                           status	equ	0xFD8
 11863                           
 11864 ;; *************** function _ads1115_read_reg *****************
 11865 ;; Defined at:
 11866 ;;		line 27 in file "src/driver/ads1115.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;  pAds1115        2    4[BANK0 ] PTR struct .
 11869 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
 11870 ;;  addr            1    6[BANK0 ] unsigned char 
 11871 ;; Auto vars:     Size  Location     Type
 11872 ;;  t16             2    8[BANK0 ] unsigned int 
 11873 ;; Return value:  Size  Location     Type
 11874 ;;                  2    4[BANK0 ] unsigned int 
 11875 ;; Registers used:
 11876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11877 ;; Tracked objects:
 11878 ;;		On entry : 0/0
 11879 ;;		On exit  : 0/0
 11880 ;;		Unchanged: 0/0
 11881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11882 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;Total ram usage:        6 bytes
 11887 ;; Hardware stack levels used:    1
 11888 ;; Hardware stack levels required when called:    7
 11889 ;; This function calls:
 11890 ;;		_iic_received_byte_if_ack
 11891 ;;		_iic_send_byte
 11892 ;;		_iic_start
 11893 ;;		_iic_stop
 11894 ;; This function is called by:
 11895 ;;		_main
 11896 ;;		_ads1115_read_conversion
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text73
 11901  0005B2                     __ptext73:
 11902                           	opt stack 0
 11903  0005B2                     _ads1115_read_reg:
 11904                           	opt stack 23
 11905                           
 11906                           ;ads1115.c: 29: uint16_t t16=0;
 11907                           
 11908                           ;incstack = 0
 11909  0005B2  0E00               	movlw	0
 11910  0005B4  0100               	movlb	0	; () banked
 11911  0005B6  6FCE               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 11912  0005B8  0E00               	movlw	0
 11913  0005BA  6FCD               	movwf	ads1115_read_reg@t16& (0+255),b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;ads1115.c: 30: pAds1115->iic_start();
 11917  0005BC  0100               	movlb	0	; () banked
 11918  0005BE  EE20 F006          	lfsr	2,6
 11919  0005C2  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11920  0005C4  26D9               	addwf	fsr2l,f,c
 11921  0005C6  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11922  0005C8  22DA               	addwfc	fsr2h,f,c
 11923  0005CA  D801               	call	u5958
 11924  0005CC  D00A               	goto	l8149
 11925  0005CE                     u5958:
 11926  0005CE  0005               	push	
 11927  0005D0  6EFA               	movwf	pclath,c
 11928  0005D2  50DE               	movf	postinc2,w,c
 11929  0005D4  6EFD               	movwf	tosl,c
 11930  0005D6  50DE               	movf	postinc2,w,c
 11931  0005D8  6EFE               	movwf	tosh,c
 11932  0005DA  50F8               	movf	tblptru,w,c
 11933  0005DC  6EFF               	movwf	tosu,c
 11934  0005DE  50FA               	movf	pclath,w,c
 11935  0005E0  0012               	return		;indir
 11936  0005E2                     l8149:
 11937                           
 11938                           ;ads1115.c: 32: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 11939  0005E2  0100               	movlb	0	; () banked
 11940  0005E4  EE20 F00A          	lfsr	2,10
 11941  0005E8  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11942  0005EA  26D9               	addwf	fsr2l,f,c
 11943  0005EC  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11944  0005EE  22DA               	addwfc	fsr2h,f,c
 11945  0005F0  D801               	call	u5968
 11946  0005F2  D012               	goto	l8151
 11947  0005F4                     u5968:
 11948  0005F4  0005               	push	
 11949  0005F6  6EFA               	movwf	pclath,c
 11950  0005F8  50DE               	movf	postinc2,w,c
 11951  0005FA  6EFD               	movwf	tosl,c
 11952  0005FC  50DE               	movf	postinc2,w,c
 11953  0005FE  6EFE               	movwf	tosh,c
 11954  000600  50F8               	movf	tblptru,w,c
 11955  000602  6EFF               	movwf	tosu,c
 11956  000604  50FA               	movf	pclath,w,c
 11957  000606  0100               	movlb	0	; () banked
 11958  000608  EE20 F001          	lfsr	2,1
 11959  00060C  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11960  00060E  26D9               	addwf	fsr2l,f,c
 11961  000610  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11962  000612  22DA               	addwfc	fsr2h,f,c
 11963  000614  50DF               	movf	indf2,w,c
 11964  000616  0012               	return		;indir
 11965  000618                     l8151:
 11966                           
 11967                           ;ads1115.c: 33: pAds1115->iic_send_byte(addr);
 11968  000618  0100               	movlb	0	; () banked
 11969  00061A  EE20 F00A          	lfsr	2,10
 11970  00061E  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11971  000620  26D9               	addwf	fsr2l,f,c
 11972  000622  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11973  000624  22DA               	addwfc	fsr2h,f,c
 11974  000626  D801               	call	u5978
 11975  000628  D00C               	goto	l8153
 11976  00062A                     u5978:
 11977  00062A  0005               	push	
 11978  00062C  6EFA               	movwf	pclath,c
 11979  00062E  50DE               	movf	postinc2,w,c
 11980  000630  6EFD               	movwf	tosl,c
 11981  000632  50DE               	movf	postinc2,w,c
 11982  000634  6EFE               	movwf	tosh,c
 11983  000636  50F8               	movf	tblptru,w,c
 11984  000638  6EFF               	movwf	tosu,c
 11985  00063A  50FA               	movf	pclath,w,c
 11986  00063C  0100               	movlb	0	; () banked
 11987  00063E  51CB               	movf	ads1115_read_reg@addr& (0+255),w,b
 11988  000640  0012               	return		;indir
 11989  000642                     l8153:
 11990                           
 11991                           ;ads1115.c: 34: pAds1115->iic_stop();
 11992  000642  0100               	movlb	0	; () banked
 11993  000644  EE20 F008          	lfsr	2,8
 11994  000648  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11995  00064A  26D9               	addwf	fsr2l,f,c
 11996  00064C  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11997  00064E  22DA               	addwfc	fsr2h,f,c
 11998  000650  D801               	call	u5988
 11999  000652  D00A               	goto	l8155
 12000  000654                     u5988:
 12001  000654  0005               	push	
 12002  000656  6EFA               	movwf	pclath,c
 12003  000658  50DE               	movf	postinc2,w,c
 12004  00065A  6EFD               	movwf	tosl,c
 12005  00065C  50DE               	movf	postinc2,w,c
 12006  00065E  6EFE               	movwf	tosh,c
 12007  000660  50F8               	movf	tblptru,w,c
 12008  000662  6EFF               	movwf	tosu,c
 12009  000664  50FA               	movf	pclath,w,c
 12010  000666  0012               	return		;indir
 12011  000668                     l8155:
 12012                           
 12013                           ;ads1115.c: 36: pAds1115->iic_start();
 12014  000668  0100               	movlb	0	; () banked
 12015  00066A  EE20 F006          	lfsr	2,6
 12016  00066E  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12017  000670  26D9               	addwf	fsr2l,f,c
 12018  000672  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12019  000674  22DA               	addwfc	fsr2h,f,c
 12020  000676  D801               	call	u5998
 12021  000678  D00A               	goto	l8157
 12022  00067A                     u5998:
 12023  00067A  0005               	push	
 12024  00067C  6EFA               	movwf	pclath,c
 12025  00067E  50DE               	movf	postinc2,w,c
 12026  000680  6EFD               	movwf	tosl,c
 12027  000682  50DE               	movf	postinc2,w,c
 12028  000684  6EFE               	movwf	tosh,c
 12029  000686  50F8               	movf	tblptru,w,c
 12030  000688  6EFF               	movwf	tosu,c
 12031  00068A  50FA               	movf	pclath,w,c
 12032  00068C  0012               	return		;indir
 12033  00068E                     l8157:
 12034                           
 12035                           ;ads1115.c: 37: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 12036  00068E  0100               	movlb	0	; () banked
 12037  000690  EE20 F00A          	lfsr	2,10
 12038  000694  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12039  000696  26D9               	addwf	fsr2l,f,c
 12040  000698  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12041  00069A  22DA               	addwfc	fsr2h,f,c
 12042  00069C  D801               	call	u6008
 12043  00069E  D016               	goto	l8159
 12044  0006A0                     u6008:
 12045  0006A0  0005               	push	
 12046  0006A2  6EFA               	movwf	pclath,c
 12047  0006A4  50DE               	movf	postinc2,w,c
 12048  0006A6  6EFD               	movwf	tosl,c
 12049  0006A8  50DE               	movf	postinc2,w,c
 12050  0006AA  6EFE               	movwf	tosh,c
 12051  0006AC  50F8               	movf	tblptru,w,c
 12052  0006AE  6EFF               	movwf	tosu,c
 12053  0006B0  50FA               	movf	pclath,w,c
 12054  0006B2  0100               	movlb	0	; () banked
 12055  0006B4  EE20 F001          	lfsr	2,1
 12056  0006B8  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12057  0006BA  26D9               	addwf	fsr2l,f,c
 12058  0006BC  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12059  0006BE  22DA               	addwfc	fsr2h,f,c
 12060  0006C0  50DF               	movf	indf2,w,c
 12061  0006C2  0100               	movlb	0	; () banked
 12062  0006C4  6FCC               	movwf	??_ads1115_read_reg& (0+255),b
 12063  0006C6  0100               	movlb	0	; () banked
 12064  0006C8  29CC               	incf	??_ads1115_read_reg& (0+255),w,b
 12065  0006CA  0012               	return		;indir
 12066  0006CC                     l8159:
 12067                           
 12068                           ;ads1115.c: 38: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 12069  0006CC  0100               	movlb	0	; () banked
 12070  0006CE  EE20 F00E          	lfsr	2,14
 12071  0006D2  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12072  0006D4  26D9               	addwf	fsr2l,f,c
 12073  0006D6  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12074  0006D8  22DA               	addwfc	fsr2h,f,c
 12075  0006DA  D801               	call	u6018
 12076  0006DC  D00B               	goto	u6019
 12077  0006DE                     u6018:
 12078  0006DE  0005               	push	
 12079  0006E0  6EFA               	movwf	pclath,c
 12080  0006E2  50DE               	movf	postinc2,w,c
 12081  0006E4  6EFD               	movwf	tosl,c
 12082  0006E6  50DE               	movf	postinc2,w,c
 12083  0006E8  6EFE               	movwf	tosh,c
 12084  0006EA  50F8               	movf	tblptru,w,c
 12085  0006EC  6EFF               	movwf	tosu,c
 12086  0006EE  50FA               	movf	pclath,w,c
 12087  0006F0  0E00               	movlw	0
 12088  0006F2  0012               	return		;indir
 12089  0006F4                     u6019:
 12090  0006F4  0100               	movlb	0	; () banked
 12091  0006F6  6FCC               	movwf	??_ads1115_read_reg& (0+255),b
 12092  0006F8  0100               	movlb	0	; () banked
 12093  0006FA  51CC               	movf	??_ads1115_read_reg& (0+255),w,b
 12094  0006FC  0100               	movlb	0	; () banked
 12095  0006FE  6FCD               	movwf	ads1115_read_reg@t16& (0+255),b
 12096  000700  6BCE               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;ads1115.c: 39: t16<<=8;
 12100  000702  0100               	movlb	0	; () banked
 12101  000704  51CD               	movf	ads1115_read_reg@t16& (0+255),w,b
 12102  000706  6FCE               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 12103  000708  6BCD               	clrf	ads1115_read_reg@t16& (0+255),b
 12104                           
 12105                           ;ads1115.c: 40: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 12106  00070A  0100               	movlb	0	; () banked
 12107  00070C  EE20 F00E          	lfsr	2,14
 12108  000710  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12109  000712  26D9               	addwf	fsr2l,f,c
 12110  000714  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12111  000716  22DA               	addwfc	fsr2h,f,c
 12112  000718  D801               	call	u6028
 12113  00071A  D00B               	goto	u6029
 12114  00071C                     u6028:
 12115  00071C  0005               	push	
 12116  00071E  6EFA               	movwf	pclath,c
 12117  000720  50DE               	movf	postinc2,w,c
 12118  000722  6EFD               	movwf	tosl,c
 12119  000724  50DE               	movf	postinc2,w,c
 12120  000726  6EFE               	movwf	tosh,c
 12121  000728  50F8               	movf	tblptru,w,c
 12122  00072A  6EFF               	movwf	tosu,c
 12123  00072C  50FA               	movf	pclath,w,c
 12124  00072E  0E00               	movlw	0
 12125  000730  0012               	return		;indir
 12126  000732                     u6029:
 12127  000732  0100               	movlb	0	; () banked
 12128  000734  6FCC               	movwf	??_ads1115_read_reg& (0+255),b
 12129  000736  0100               	movlb	0	; () banked
 12130  000738  51CC               	movf	??_ads1115_read_reg& (0+255),w,b
 12131  00073A  0100               	movlb	0	; () banked
 12132  00073C  13CD               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 12133                           
 12134                           ;ads1115.c: 42: pAds1115->iic_stop();
 12135  00073E  0100               	movlb	0	; () banked
 12136  000740  EE20 F008          	lfsr	2,8
 12137  000744  51C9               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12138  000746  26D9               	addwf	fsr2l,f,c
 12139  000748  51CA               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12140  00074A  22DA               	addwfc	fsr2h,f,c
 12141  00074C  D801               	call	u6038
 12142  00074E  D00A               	goto	l8163
 12143  000750                     u6038:
 12144  000750  0005               	push	
 12145  000752  6EFA               	movwf	pclath,c
 12146  000754  50DE               	movf	postinc2,w,c
 12147  000756  6EFD               	movwf	tosl,c
 12148  000758  50DE               	movf	postinc2,w,c
 12149  00075A  6EFE               	movwf	tosh,c
 12150  00075C  50F8               	movf	tblptru,w,c
 12151  00075E  6EFF               	movwf	tosu,c
 12152  000760  50FA               	movf	pclath,w,c
 12153  000762  0012               	return		;indir
 12154  000764                     l8163:
 12155                           
 12156                           ;ads1115.c: 43: return t16;
 12157  000764  C0CD  F0C9         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 12158  000768  C0CE  F0CA         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 12159  00076C  0012               	return	
 12160  00076E                     __end_of_ads1115_read_reg:
 12161                           	opt stack 0
 12162                           tosu	equ	0xFFF
 12163                           tosh	equ	0xFFE
 12164                           tosl	equ	0xFFD
 12165                           pclath	equ	0xFFA
 12166                           tblptru	equ	0xFF8
 12167                           tblptrh	equ	0xFF7
 12168                           tblptrl	equ	0xFF6
 12169                           tablat	equ	0xFF5
 12170                           prodh	equ	0xFF4
 12171                           prodl	equ	0xFF3
 12172                           intcon	equ	0xFF2
 12173                           indf0	equ	0xFEF
 12174                           postinc0	equ	0xFEE
 12175                           fsr0h	equ	0xFEA
 12176                           fsr0l	equ	0xFE9
 12177                           wreg	equ	0xFE8
 12178                           postdec1	equ	0xFE5
 12179                           plusw1	equ	0xFE3
 12180                           fsr1h	equ	0xFE2
 12181                           fsr1l	equ	0xFE1
 12182                           indf2	equ	0xFDF
 12183                           postinc2	equ	0xFDE
 12184                           postdec2	equ	0xFDD
 12185                           plusw2	equ	0xFDB
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           
 12190 ;; *************** function _iic_start *****************
 12191 ;; Defined at:
 12192 ;;		line 18 in file "src/driver/i2c.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		status,2, status,0
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12210 ;;Total ram usage:        0 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:    4
 12213 ;; This function calls:
 12214 ;;		Nothing
 12215 ;; This function is called by:
 12216 ;;		_ads1115_init
 12217 ;;		_at24c02_init
 12218 ;;		_pcf8574_init
 12219 ;;		_ads1115_read_reg
 12220 ;;		_ads1115_write_reg
 12221 ;;		_pcf8574_write_singel
 12222 ;;		_at24c02_read_n_byte
 12223 ;;		_at24c02_write_n_byte
 12224 ;;		_ad421_write_via_pcf8574
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text74
 12229  0023CC                     __ptext74:
 12230                           	opt stack 0
 12231  0023CC                     _iic_start:
 12232                           	opt stack 24
 12233                           
 12234                           ;incstack = 0
 12235                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 12236  0023CC  9694               	bcf	3988,3,c	;volatile
 12237                           
 12238                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 12239  0023CE  9894               	bcf	3988,4,c	;volatile
 12240                           
 12241                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 12242  0023D0  888B               	bsf	3979,4,c	;volatile
 12243                           
 12244                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 12245  0023D2  868B               	bsf	3979,3,c	;volatile
 12246                           
 12247                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12248  0023D4  F000               	nop	
 12249  0023D6  F000               	nop	
 12250  0023D8  F000               	nop	
 12251  0023DA  F000               	nop	
 12252  0023DC  F000               	nop	
 12253  0023DE  F000               	nop	
 12254  0023E0  F000               	nop	
 12255  0023E2  F000               	nop	
 12256  0023E4  F000               	nop	
 12257  0023E6  F000               	nop	
 12258  0023E8  F000               	nop	
 12259  0023EA  F000               	nop	
 12260                           
 12261                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 12262  0023EC  988B               	bcf	3979,4,c	;volatile
 12263                           
 12264                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12265  0023EE  F000               	nop	
 12266  0023F0  F000               	nop	
 12267  0023F2  F000               	nop	
 12268  0023F4  F000               	nop	
 12269  0023F6  F000               	nop	
 12270  0023F8  F000               	nop	
 12271  0023FA  F000               	nop	
 12272  0023FC  F000               	nop	
 12273  0023FE  F000               	nop	
 12274  002400  F000               	nop	
 12275  002402  F000               	nop	
 12276  002404  F000               	nop	
 12277                           
 12278                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 12279  002406  968B               	bcf	3979,3,c	;volatile
 12280  002408  0012               	return	
 12281  00240A                     __end_of_iic_start:
 12282                           	opt stack 0
 12283                           tosu	equ	0xFFF
 12284                           tosh	equ	0xFFE
 12285                           tosl	equ	0xFFD
 12286                           pclath	equ	0xFFA
 12287                           tblptru	equ	0xFF8
 12288                           tblptrh	equ	0xFF7
 12289                           tblptrl	equ	0xFF6
 12290                           tablat	equ	0xFF5
 12291                           prodh	equ	0xFF4
 12292                           prodl	equ	0xFF3
 12293                           intcon	equ	0xFF2
 12294                           indf0	equ	0xFEF
 12295                           postinc0	equ	0xFEE
 12296                           fsr0h	equ	0xFEA
 12297                           fsr0l	equ	0xFE9
 12298                           wreg	equ	0xFE8
 12299                           postdec1	equ	0xFE5
 12300                           plusw1	equ	0xFE3
 12301                           fsr1h	equ	0xFE2
 12302                           fsr1l	equ	0xFE1
 12303                           indf2	equ	0xFDF
 12304                           postinc2	equ	0xFDE
 12305                           postdec2	equ	0xFDD
 12306                           plusw2	equ	0xFDB
 12307                           fsr2h	equ	0xFDA
 12308                           fsr2l	equ	0xFD9
 12309                           status	equ	0xFD8
 12310                           
 12311 ;; *************** function _iic_send_byte *****************
 12312 ;; Defined at:
 12313 ;;		line 80 in file "src/driver/i2c.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;  x               1    wreg     unsigned char 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  x               1    1[BANK0 ] unsigned char 
 12318 ;;  i               1    2[BANK0 ] unsigned char 
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      unsigned char 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;Total ram usage:        2 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:    6
 12335 ;; This function calls:
 12336 ;;		_iic_waite_ack
 12337 ;; This function is called by:
 12338 ;;		_ads1115_init
 12339 ;;		_at24c02_init
 12340 ;;		_pcf8574_init
 12341 ;;		_ads1115_read_reg
 12342 ;;		_ads1115_write_reg
 12343 ;;		_pcf8574_write_singel
 12344 ;;		_at24c02_read_n_byte
 12345 ;;		_at24c02_write_n_byte
 12346 ;;		_ad421_write_via_pcf8574
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text75
 12351  001CB6                     __ptext75:
 12352                           	opt stack 0
 12353  001CB6                     _iic_send_byte:
 12354                           	opt stack 22
 12355                           
 12356                           ;incstack = 0
 12357                           ;iic_send_byte@x stored from wreg
 12358  001CB6  0100               	movlb	0	; () banked
 12359  001CB8  6FC6               	movwf	iic_send_byte@x& (0+255),b
 12360                           
 12361                           ;i2c.c: 82: uint8_t i;
 12362                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 12363  001CBA  9694               	bcf	3988,3,c	;volatile
 12364                           
 12365                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 12366  001CBC  9894               	bcf	3988,4,c	;volatile
 12367                           
 12368                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 12369  001CBE  968B               	bcf	3979,3,c	;volatile
 12370                           
 12371                           ;i2c.c: 86: for(i=0;i<8;i++){
 12372  001CC0  0E00               	movlw	0
 12373  001CC2  0100               	movlb	0	; () banked
 12374  001CC4  6FC7               	movwf	iic_send_byte@i& (0+255),b
 12375  001CC6                     l7779:
 12376                           
 12377                           ; BSR set to: 0
 12378  001CC6  0E07               	movlw	7
 12379  001CC8  0100               	movlb	0	; () banked
 12380  001CCA  65C7               	cpfsgt	iic_send_byte@i& (0+255),b
 12381  001CCC  D001               	goto	l699
 12382  001CCE  D026               	goto	l7839
 12383  001CD0                     l699:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;i2c.c: 87: if(x&0x80){
 12387  001CD0  0100               	movlb	0	; () banked
 12388  001CD2  AFC6               	btfss	iic_send_byte@x& (0+255),7,b
 12389  001CD4  D002               	goto	l7785
 12390                           
 12391                           ; BSR set to: 0
 12392                           
 12393                           ; BSR set to: 0
 12394                           
 12395                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 12396  001CD6  888B               	bsf	3979,4,c	;volatile
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;i2c.c: 89: }
 12400  001CD8  D001               	goto	l707
 12401  001CDA                     l7785:
 12402                           
 12403                           ; BSR set to: 0
 12404  001CDA  988B               	bcf	3979,4,c	;volatile
 12405  001CDC                     l707:
 12406                           
 12407                           ; BSR set to: 0
 12408  001CDC  868B               	bsf	3979,3,c	;volatile
 12409                           
 12410                           ; BSR set to: 0
 12411                           
 12412                           ; BSR set to: 0
 12413                           
 12414                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12415                           
 12416                           ; BSR set to: 0
 12417  001CDE  F000               	nop	
 12418  001CE0  F000               	nop	
 12419  001CE2  F000               	nop	
 12420  001CE4  F000               	nop	
 12421  001CE6  F000               	nop	
 12422  001CE8  F000               	nop	
 12423  001CEA  F000               	nop	
 12424  001CEC  F000               	nop	
 12425  001CEE  F000               	nop	
 12426  001CF0  F000               	nop	
 12427  001CF2  F000               	nop	
 12428  001CF4  F000               	nop	
 12429                           
 12430                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 12431  001CF6  968B               	bcf	3979,3,c	;volatile
 12432                           
 12433                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12434  001CF8  F000               	nop	
 12435  001CFA  F000               	nop	
 12436  001CFC  F000               	nop	
 12437  001CFE  F000               	nop	
 12438  001D00  F000               	nop	
 12439  001D02  F000               	nop	
 12440  001D04  F000               	nop	
 12441  001D06  F000               	nop	
 12442  001D08  F000               	nop	
 12443  001D0A  F000               	nop	
 12444  001D0C  F000               	nop	
 12445  001D0E  F000               	nop	
 12446                           
 12447                           ;i2c.c: 97: x<<=1;
 12448  001D10  0100               	movlb	0	; () banked
 12449  001D12  90D8               	bcf	status,0,c
 12450  001D14  37C6               	rlcf	iic_send_byte@x& (0+255),f,b
 12451                           
 12452                           ; BSR set to: 0
 12453  001D16  0100               	movlb	0	; () banked
 12454  001D18  2BC7               	incf	iic_send_byte@i& (0+255),f,b
 12455  001D1A  D7D5               	goto	l7779
 12456  001D1C                     l7839:
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;i2c.c: 98: }
 12460                           ;i2c.c: 99: return iic_waite_ack();
 12461                           ;	Return value of _iic_send_byte is never used
 12462  001D1C  ECFB  F00E         	call	_iic_waite_ack
 12463  001D20  0012               	return	
 12464  001D22                     __end_of_iic_send_byte:
 12465                           	opt stack 0
 12466                           tosu	equ	0xFFF
 12467                           tosh	equ	0xFFE
 12468                           tosl	equ	0xFFD
 12469                           pclath	equ	0xFFA
 12470                           tblptru	equ	0xFF8
 12471                           tblptrh	equ	0xFF7
 12472                           tblptrl	equ	0xFF6
 12473                           tablat	equ	0xFF5
 12474                           prodh	equ	0xFF4
 12475                           prodl	equ	0xFF3
 12476                           intcon	equ	0xFF2
 12477                           indf0	equ	0xFEF
 12478                           postinc0	equ	0xFEE
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           postdec1	equ	0xFE5
 12483                           plusw1	equ	0xFE3
 12484                           fsr1h	equ	0xFE2
 12485                           fsr1l	equ	0xFE1
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           plusw2	equ	0xFDB
 12490                           fsr2h	equ	0xFDA
 12491                           fsr2l	equ	0xFD9
 12492                           status	equ	0xFD8
 12493                           
 12494 ;; *************** function _iic_waite_ack *****************
 12495 ;; Defined at:
 12496 ;;		line 60 in file "src/driver/i2c.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  timeout         1    0[BANK0 ] unsigned char 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      unsigned char 
 12503 ;; Registers used:
 12504 ;;		wreg, status,2, status,0, cstack
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;Total ram usage:        1 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    5
 12517 ;; This function calls:
 12518 ;;		_iic_stop
 12519 ;; This function is called by:
 12520 ;;		_ads1115_init
 12521 ;;		_iic_send_byte
 12522 ;;		_at24c02_init
 12523 ;;		_pcf8574_init
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text76
 12528  001DF6                     __ptext76:
 12529                           	opt stack 0
 12530  001DF6                     _iic_waite_ack:
 12531                           	opt stack 22
 12532                           
 12533                           ;i2c.c: 62: uint8_t timeout=200;
 12534                           
 12535                           ;incstack = 0
 12536  001DF6  0EC8               	movlw	200
 12537  001DF8  0100               	movlb	0	; () banked
 12538  001DFA  6FC5               	movwf	iic_waite_ack@timeout& (0+255),b
 12539                           
 12540                           ; BSR set to: 0
 12541                           
 12542                           ; BSR set to: 0
 12543                           
 12544                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 12545  001DFC  9694               	bcf	3988,3,c	;volatile
 12546                           
 12547                           ; BSR set to: 0
 12548                           
 12549                           ; BSR set to: 0
 12550                           
 12551                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 12552                           
 12553                           ; BSR set to: 0
 12554  001DFE  8894               	bsf	3988,4,c	;volatile
 12555                           
 12556                           ; BSR set to: 0
 12557                           
 12558                           ; BSR set to: 0
 12559                           
 12560                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 12561                           
 12562                           ; BSR set to: 0
 12563  001E00  968B               	bcf	3979,3,c	;volatile
 12564                           
 12565                           ; BSR set to: 0
 12566                           
 12567                           ; BSR set to: 0
 12568                           
 12569                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12570                           
 12571                           ; BSR set to: 0
 12572  001E02  F000               	nop	
 12573  001E04  F000               	nop	
 12574  001E06  F000               	nop	
 12575  001E08  F000               	nop	
 12576  001E0A  F000               	nop	
 12577  001E0C  F000               	nop	
 12578  001E0E  F000               	nop	
 12579  001E10  F000               	nop	
 12580  001E12  F000               	nop	
 12581  001E14  F000               	nop	
 12582  001E16  F000               	nop	
 12583  001E18  F000               	nop	
 12584                           
 12585                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 12586  001E1A  868B               	bsf	3979,3,c	;volatile
 12587                           
 12588                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12589  001E1C  F000               	nop	
 12590  001E1E  F000               	nop	
 12591  001E20  F000               	nop	
 12592  001E22  F000               	nop	
 12593  001E24  F000               	nop	
 12594  001E26  F000               	nop	
 12595  001E28  F000               	nop	
 12596  001E2A  F000               	nop	
 12597  001E2C  F000               	nop	
 12598  001E2E  F000               	nop	
 12599  001E30  F000               	nop	
 12600  001E32  F000               	nop	
 12601                           
 12602                           ;i2c.c: 69: while(timeout--){
 12603  001E34  D002               	goto	l7487
 12604  001E36                     l684:
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 12608  001E36  A882               	btfss	3970,4,c	;volatile
 12609  001E38  D006               	goto	l7489
 12610  001E3A                     l7487:
 12611  001E3A  0100               	movlb	0	; () banked
 12612  001E3C  07C5               	decf	iic_waite_ack@timeout& (0+255),f,b
 12613  001E3E  0100               	movlb	0	; () banked
 12614  001E40  29C5               	incf	iic_waite_ack@timeout& (0+255),w,b
 12615  001E42  A4D8               	btfss	status,2,c
 12616  001E44  D7F8               	goto	l684
 12617  001E46                     l7489:
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;i2c.c: 71: }
 12621                           ;i2c.c: 72: if(!timeout){
 12622  001E46  0100               	movlb	0	; () banked
 12623  001E48  51C5               	movf	iic_waite_ack@timeout& (0+255),w,b
 12624  001E4A  0100               	movlb	0	; () banked
 12625  001E4C  A4D8               	btfss	status,2,c
 12626  001E4E  D004               	goto	l7497
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;i2c.c: 73: iic_stop();
 12630  001E50  EC23  F012         	call	_iic_stop	;wreg free
 12631                           
 12632                           ;i2c.c: 74: return 0;
 12633  001E54  0E00               	movlw	0
 12634  001E56  0012               	return	
 12635  001E58                     l7497:
 12636  001E58  968B               	bcf	3979,3,c	;volatile
 12637                           
 12638                           ;i2c.c: 77: return 1;
 12639  001E5A  0E01               	movlw	1
 12640  001E5C  0012               	return	
 12641  001E5E                     __end_of_iic_waite_ack:
 12642                           	opt stack 0
 12643                           tosu	equ	0xFFF
 12644                           tosh	equ	0xFFE
 12645                           tosl	equ	0xFFD
 12646                           pclath	equ	0xFFA
 12647                           tblptru	equ	0xFF8
 12648                           tblptrh	equ	0xFF7
 12649                           tblptrl	equ	0xFF6
 12650                           tablat	equ	0xFF5
 12651                           prodh	equ	0xFF4
 12652                           prodl	equ	0xFF3
 12653                           intcon	equ	0xFF2
 12654                           indf0	equ	0xFEF
 12655                           postinc0	equ	0xFEE
 12656                           fsr0h	equ	0xFEA
 12657                           fsr0l	equ	0xFE9
 12658                           wreg	equ	0xFE8
 12659                           postdec1	equ	0xFE5
 12660                           plusw1	equ	0xFE3
 12661                           fsr1h	equ	0xFE2
 12662                           fsr1l	equ	0xFE1
 12663                           indf2	equ	0xFDF
 12664                           postinc2	equ	0xFDE
 12665                           postdec2	equ	0xFDD
 12666                           plusw2	equ	0xFDB
 12667                           fsr2h	equ	0xFDA
 12668                           fsr2l	equ	0xFD9
 12669                           status	equ	0xFD8
 12670                           
 12671 ;; *************** function _iic_stop *****************
 12672 ;; Defined at:
 12673 ;;		line 32 in file "src/driver/i2c.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;		None
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;		None
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  1    wreg      void 
 12680 ;; Registers used:
 12681 ;;		status,2, status,0
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;Total ram usage:        0 bytes
 12692 ;; Hardware stack levels used:    1
 12693 ;; Hardware stack levels required when called:    4
 12694 ;; This function calls:
 12695 ;;		Nothing
 12696 ;; This function is called by:
 12697 ;;		_ads1115_init
 12698 ;;		_iic_waite_ack
 12699 ;;		_at24c02_init
 12700 ;;		_pcf8574_init
 12701 ;;		_ads1115_read_reg
 12702 ;;		_ads1115_write_reg
 12703 ;;		_pcf8574_write_singel
 12704 ;;		_at24c02_read_n_byte
 12705 ;;		_at24c02_write_n_byte
 12706 ;;		_ad421_write_via_pcf8574
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text77
 12711  002446                     __ptext77:
 12712                           	opt stack 0
 12713  002446                     _iic_stop:
 12714                           	opt stack 24
 12715                           
 12716                           ;incstack = 0
 12717                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 12718  002446  9694               	bcf	3988,3,c	;volatile
 12719                           
 12720                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 12721  002448  9894               	bcf	3988,4,c	;volatile
 12722                           
 12723                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 12724  00244A  988B               	bcf	3979,4,c	;volatile
 12725                           
 12726                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12727  00244C  F000               	nop	
 12728  00244E  F000               	nop	
 12729  002450  F000               	nop	
 12730  002452  F000               	nop	
 12731  002454  F000               	nop	
 12732  002456  F000               	nop	
 12733  002458  F000               	nop	
 12734  00245A  F000               	nop	
 12735  00245C  F000               	nop	
 12736  00245E  F000               	nop	
 12737  002460  F000               	nop	
 12738  002462  F000               	nop	
 12739                           
 12740                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 12741  002464  868B               	bsf	3979,3,c	;volatile
 12742                           
 12743                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12744  002466  F000               	nop	
 12745  002468  F000               	nop	
 12746  00246A  F000               	nop	
 12747  00246C  F000               	nop	
 12748  00246E  F000               	nop	
 12749  002470  F000               	nop	
 12750  002472  F000               	nop	
 12751  002474  F000               	nop	
 12752  002476  F000               	nop	
 12753  002478  F000               	nop	
 12754  00247A  F000               	nop	
 12755  00247C  F000               	nop	
 12756                           
 12757                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 12758  00247E  888B               	bsf	3979,4,c	;volatile
 12759  002480  0012               	return	
 12760  002482                     __end_of_iic_stop:
 12761                           	opt stack 0
 12762                           tosu	equ	0xFFF
 12763                           tosh	equ	0xFFE
 12764                           tosl	equ	0xFFD
 12765                           pclath	equ	0xFFA
 12766                           tblptru	equ	0xFF8
 12767                           tblptrh	equ	0xFF7
 12768                           tblptrl	equ	0xFF6
 12769                           tablat	equ	0xFF5
 12770                           prodh	equ	0xFF4
 12771                           prodl	equ	0xFF3
 12772                           intcon	equ	0xFF2
 12773                           indf0	equ	0xFEF
 12774                           postinc0	equ	0xFEE
 12775                           fsr0h	equ	0xFEA
 12776                           fsr0l	equ	0xFE9
 12777                           wreg	equ	0xFE8
 12778                           postdec1	equ	0xFE5
 12779                           plusw1	equ	0xFE3
 12780                           fsr1h	equ	0xFE2
 12781                           fsr1l	equ	0xFE1
 12782                           indf2	equ	0xFDF
 12783                           postinc2	equ	0xFDE
 12784                           postdec2	equ	0xFDD
 12785                           plusw2	equ	0xFDB
 12786                           fsr2h	equ	0xFDA
 12787                           fsr2l	equ	0xFD9
 12788                           status	equ	0xFD8
 12789                           
 12790 ;; *************** function _iic_received_byte_if_ack *****************
 12791 ;; Defined at:
 12792 ;;		line 121 in file "src/driver/i2c.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  ack             1    wreg     unsigned char 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;  ack             1    2[BANK0 ] unsigned char 
 12797 ;;  ret             1    3[BANK0 ] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12811 ;;Total ram usage:        2 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    5
 12814 ;; This function calls:
 12815 ;;		_iic_received_byte
 12816 ;;		_iic_send_ack
 12817 ;; This function is called by:
 12818 ;;		_ads1115_init
 12819 ;;		_at24c02_init
 12820 ;;		_pcf8574_init
 12821 ;;		_ads1115_read_reg
 12822 ;;		_at24c02_read_n_byte
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text78
 12827  002818                     __ptext78:
 12828                           	opt stack 0
 12829  002818                     _iic_received_byte_if_ack:
 12830                           	opt stack 24
 12831                           
 12832                           ;incstack = 0
 12833                           ;iic_received_byte_if_ack@ack stored from wreg
 12834  002818  0100               	movlb	0	; () banked
 12835  00281A  6FC7               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 12836                           
 12837                           ;i2c.c: 123: uint8_t ret=0;
 12838  00281C  0E00               	movlw	0
 12839  00281E  0100               	movlb	0	; () banked
 12840  002820  6FC8               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;i2c.c: 124: ret=iic_received_byte();
 12844  002822  ECC6  F00E         	call	_iic_received_byte	;wreg free
 12845  002826  0100               	movlb	0	; () banked
 12846  002828  6FC8               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;i2c.c: 125: iic_send_ack(ack);
 12850  00282A  0100               	movlb	0	; () banked
 12851  00282C  51C7               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 12852  00282E  ECD5  F010         	call	_iic_send_ack
 12853                           
 12854                           ;i2c.c: 126: return ret;
 12855  002832  0100               	movlb	0	; () banked
 12856  002834  51C8               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 12857  002836  0012               	return	
 12858  002838                     __end_of_iic_received_byte_if_ack:
 12859                           	opt stack 0
 12860                           tosu	equ	0xFFF
 12861                           tosh	equ	0xFFE
 12862                           tosl	equ	0xFFD
 12863                           pclath	equ	0xFFA
 12864                           tblptru	equ	0xFF8
 12865                           tblptrh	equ	0xFF7
 12866                           tblptrl	equ	0xFF6
 12867                           tablat	equ	0xFF5
 12868                           prodh	equ	0xFF4
 12869                           prodl	equ	0xFF3
 12870                           intcon	equ	0xFF2
 12871                           indf0	equ	0xFEF
 12872                           postinc0	equ	0xFEE
 12873                           fsr0h	equ	0xFEA
 12874                           fsr0l	equ	0xFE9
 12875                           wreg	equ	0xFE8
 12876                           postdec1	equ	0xFE5
 12877                           plusw1	equ	0xFE3
 12878                           fsr1h	equ	0xFE2
 12879                           fsr1l	equ	0xFE1
 12880                           indf2	equ	0xFDF
 12881                           postinc2	equ	0xFDE
 12882                           postdec2	equ	0xFDD
 12883                           plusw2	equ	0xFDB
 12884                           fsr2h	equ	0xFDA
 12885                           fsr2l	equ	0xFD9
 12886                           status	equ	0xFD8
 12887                           
 12888 ;; *************** function _iic_send_ack *****************
 12889 ;; Defined at:
 12890 ;;		line 44 in file "src/driver/i2c.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  ack             1    wreg     char 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;  ack             1    0[BANK0 ] char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12908 ;;Total ram usage:        1 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    4
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_iic_received_byte_if_ack
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text79
 12919  0021AA                     __ptext79:
 12920                           	opt stack 0
 12921  0021AA                     _iic_send_ack:
 12922                           	opt stack 24
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;incstack = 0
 12926                           ;iic_send_ack@ack stored from wreg
 12927  0021AA  0100               	movlb	0	; () banked
 12928  0021AC  6FC5               	movwf	iic_send_ack@ack& (0+255),b
 12929                           
 12930                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 12931  0021AE  9694               	bcf	3988,3,c	;volatile
 12932                           
 12933                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 12934  0021B0  9894               	bcf	3988,4,c	;volatile
 12935                           
 12936                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 12937  0021B2  968B               	bcf	3979,3,c	;volatile
 12938                           
 12939                           ;i2c.c: 49: if(ack){
 12940  0021B4  0100               	movlb	0	; () banked
 12941  0021B6  51C5               	movf	iic_send_ack@ack& (0+255),w,b
 12942  0021B8  0100               	movlb	0	; () banked
 12943  0021BA  B4D8               	btfsc	status,2,c
 12944  0021BC  D002               	goto	l7377
 12945                           
 12946                           ; BSR set to: 0
 12947                           
 12948                           ; BSR set to: 0
 12949                           
 12950                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 12951  0021BE  888B               	bsf	3979,4,c	;volatile
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;i2c.c: 51: }else{
 12955  0021C0  D001               	goto	l7379
 12956  0021C2                     l7377:
 12957                           
 12958                           ; BSR set to: 0
 12959  0021C2  988B               	bcf	3979,4,c	;volatile
 12960  0021C4                     l7379:
 12961                           
 12962                           ; BSR set to: 0
 12963  0021C4  F000               	nop	
 12964  0021C6  F000               	nop	
 12965  0021C8  F000               	nop	
 12966  0021CA  F000               	nop	
 12967  0021CC  F000               	nop	
 12968  0021CE  F000               	nop	
 12969  0021D0  F000               	nop	
 12970  0021D2  F000               	nop	
 12971  0021D4  F000               	nop	
 12972  0021D6  F000               	nop	
 12973  0021D8  F000               	nop	
 12974  0021DA  F000               	nop	
 12975                           
 12976                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 12977  0021DC  868B               	bsf	3979,3,c	;volatile
 12978                           
 12979                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12980  0021DE  F000               	nop	
 12981  0021E0  F000               	nop	
 12982  0021E2  F000               	nop	
 12983  0021E4  F000               	nop	
 12984  0021E6  F000               	nop	
 12985  0021E8  F000               	nop	
 12986  0021EA  F000               	nop	
 12987  0021EC  F000               	nop	
 12988  0021EE  F000               	nop	
 12989  0021F0  F000               	nop	
 12990  0021F2  F000               	nop	
 12991  0021F4  F000               	nop	
 12992                           
 12993                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 12994  0021F6  968B               	bcf	3979,3,c	;volatile
 12995  0021F8  0012               	return	
 12996  0021FA                     __end_of_iic_send_ack:
 12997                           	opt stack 0
 12998                           tosu	equ	0xFFF
 12999                           tosh	equ	0xFFE
 13000                           tosl	equ	0xFFD
 13001                           pclath	equ	0xFFA
 13002                           tblptru	equ	0xFF8
 13003                           tblptrh	equ	0xFF7
 13004                           tblptrl	equ	0xFF6
 13005                           tablat	equ	0xFF5
 13006                           prodh	equ	0xFF4
 13007                           prodl	equ	0xFF3
 13008                           intcon	equ	0xFF2
 13009                           indf0	equ	0xFEF
 13010                           postinc0	equ	0xFEE
 13011                           fsr0h	equ	0xFEA
 13012                           fsr0l	equ	0xFE9
 13013                           wreg	equ	0xFE8
 13014                           postdec1	equ	0xFE5
 13015                           plusw1	equ	0xFE3
 13016                           fsr1h	equ	0xFE2
 13017                           fsr1l	equ	0xFE1
 13018                           indf2	equ	0xFDF
 13019                           postinc2	equ	0xFDE
 13020                           postdec2	equ	0xFDD
 13021                           plusw2	equ	0xFDB
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8
 13025                           
 13026 ;; *************** function _iic_received_byte *****************
 13027 ;; Defined at:
 13028 ;;		line 102 in file "src/driver/i2c.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  i               1    1[BANK0 ] unsigned char 
 13033 ;;  ret             1    0[BANK0 ] unsigned char 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      unsigned char 
 13036 ;; Registers used:
 13037 ;;		wreg, status,2, status,0
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;Total ram usage:        2 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    4
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_iic_received_byte_if_ack
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text80
 13058  001D8C                     __ptext80:
 13059                           	opt stack 0
 13060  001D8C                     _iic_received_byte:
 13061                           	opt stack 24
 13062                           
 13063                           ;i2c.c: 104: uint8_t i;
 13064                           ;i2c.c: 105: uint8_t ret=0;
 13065                           
 13066                           ;incstack = 0
 13067  001D8C  0E00               	movlw	0
 13068  001D8E  0100               	movlb	0	; () banked
 13069  001D90  6FC5               	movwf	iic_received_byte@ret& (0+255),b
 13070                           
 13071                           ; BSR set to: 0
 13072                           
 13073                           ; BSR set to: 0
 13074                           
 13075                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 13076  001D92  9694               	bcf	3988,3,c	;volatile
 13077                           
 13078                           ; BSR set to: 0
 13079                           
 13080                           ; BSR set to: 0
 13081                           
 13082                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 13083                           
 13084                           ; BSR set to: 0
 13085  001D94  8894               	bsf	3988,4,c	;volatile
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;i2c.c: 108: for(i=0;i<8;i++){
 13089  001D96  0E00               	movlw	0
 13090  001D98  0100               	movlb	0	; () banked
 13091  001D9A  6FC6               	movwf	iic_received_byte@i& (0+255),b
 13092  001D9C                     l7509:
 13093                           
 13094                           ; BSR set to: 0
 13095  001D9C  0E07               	movlw	7
 13096  001D9E  0100               	movlb	0	; () banked
 13097  001DA0  65C6               	cpfsgt	iic_received_byte@i& (0+255),b
 13098  001DA2  D001               	goto	l7513
 13099  001DA4  D024               	goto	l7573
 13100  001DA6                     l7513:
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;i2c.c: 109: ret<<=1;
 13104  001DA6  0100               	movlb	0	; () banked
 13105  001DA8  90D8               	bcf	status,0,c
 13106  001DAA  37C5               	rlcf	iic_received_byte@ret& (0+255),f,b
 13107                           
 13108                           ; BSR set to: 0
 13109                           
 13110                           ; BSR set to: 0
 13111                           
 13112                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 13113  001DAC  968B               	bcf	3979,3,c	;volatile
 13114                           
 13115                           ; BSR set to: 0
 13116                           
 13117                           ; BSR set to: 0
 13118                           
 13119                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 13120                           
 13121                           ; BSR set to: 0
 13122  001DAE  F000               	nop	
 13123  001DB0  F000               	nop	
 13124  001DB2  F000               	nop	
 13125  001DB4  F000               	nop	
 13126  001DB6  F000               	nop	
 13127  001DB8  F000               	nop	
 13128  001DBA  F000               	nop	
 13129  001DBC  F000               	nop	
 13130  001DBE  F000               	nop	
 13131  001DC0  F000               	nop	
 13132  001DC2  F000               	nop	
 13133  001DC4  F000               	nop	
 13134                           
 13135                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 13136  001DC6  868B               	bsf	3979,3,c	;volatile
 13137                           
 13138                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 13139  001DC8  F000               	nop	
 13140  001DCA  F000               	nop	
 13141  001DCC  F000               	nop	
 13142  001DCE  F000               	nop	
 13143  001DD0  F000               	nop	
 13144  001DD2  F000               	nop	
 13145  001DD4  F000               	nop	
 13146  001DD6  F000               	nop	
 13147  001DD8  F000               	nop	
 13148  001DDA  F000               	nop	
 13149  001DDC  F000               	nop	
 13150  001DDE  F000               	nop	
 13151                           
 13152                           ;i2c.c: 114: if((PORTC & (1<<4))){
 13153  001DE0  A882               	btfss	3970,4,c	;volatile
 13154  001DE2  D002               	goto	l732
 13155                           
 13156                           ;i2c.c: 115: ret|=1;
 13157  001DE4  0100               	movlb	0	; () banked
 13158  001DE6  81C5               	bsf	iic_received_byte@ret& (0+255),0,b
 13159  001DE8                     l732:
 13160  001DE8  0100               	movlb	0	; () banked
 13161  001DEA  2BC6               	incf	iic_received_byte@i& (0+255),f,b
 13162  001DEC  D7D7               	goto	l7509
 13163  001DEE                     l7573:
 13164                           
 13165                           ; BSR set to: 0
 13166  001DEE  968B               	bcf	3979,3,c	;volatile
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;i2c.c: 119: return ret;
 13170                           
 13171                           ; BSR set to: 0
 13172  001DF0  0100               	movlb	0	; () banked
 13173  001DF2  51C5               	movf	iic_received_byte@ret& (0+255),w,b
 13174  001DF4  0012               	return	
 13175  001DF6                     __end_of_iic_received_byte:
 13176                           	opt stack 0
 13177                           tosu	equ	0xFFF
 13178                           tosh	equ	0xFFE
 13179                           tosl	equ	0xFFD
 13180                           pclath	equ	0xFFA
 13181                           tblptru	equ	0xFF8
 13182                           tblptrh	equ	0xFF7
 13183                           tblptrl	equ	0xFF6
 13184                           tablat	equ	0xFF5
 13185                           prodh	equ	0xFF4
 13186                           prodl	equ	0xFF3
 13187                           intcon	equ	0xFF2
 13188                           indf0	equ	0xFEF
 13189                           postinc0	equ	0xFEE
 13190                           fsr0h	equ	0xFEA
 13191                           fsr0l	equ	0xFE9
 13192                           wreg	equ	0xFE8
 13193                           postdec1	equ	0xFE5
 13194                           plusw1	equ	0xFE3
 13195                           fsr1h	equ	0xFE2
 13196                           fsr1l	equ	0xFE1
 13197                           indf2	equ	0xFDF
 13198                           postinc2	equ	0xFDE
 13199                           postdec2	equ	0xFDD
 13200                           plusw2	equ	0xFDB
 13201                           fsr2h	equ	0xFDA
 13202                           fsr2l	equ	0xFD9
 13203                           status	equ	0xFD8
 13204                           
 13205 ;; *************** function _ads1115_init_all_chip *****************
 13206 ;; Defined at:
 13207 ;;		line 107 in file "src/driver/ads1115.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;		None
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      void 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;Total ram usage:        0 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:    5
 13228 ;; This function calls:
 13229 ;;		_ads1115_init
 13230 ;; This function is called by:
 13231 ;;		_main
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text81
 13236  002728                     __ptext81:
 13237                           	opt stack 0
 13238  002728                     _ads1115_init_all_chip:
 13239                           	opt stack 25
 13240                           
 13241                           ;ads1115.c: 110: ads1115_init(&ads1115Chip0,(0x90));
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;incstack = 0
 13245  002728  0E9F               	movlw	low _ads1115Chip0
 13246  00272A  0100               	movlb	0	; () banked
 13247  00272C  6FC5               	movwf	ads1115_init@pAds1115& (0+255),b
 13248  00272E  0E00               	movlw	high _ads1115Chip0
 13249  002730  0100               	movlb	0	; () banked
 13250  002732  6FC6               	movwf	(ads1115_init@pAds1115+1)& (0+255),b
 13251  002734  0E90               	movlw	144
 13252  002736  0100               	movlb	0	; () banked
 13253  002738  6FC7               	movwf	ads1115_init@slvaddr& (0+255),b
 13254  00273A  EC39  F009         	call	_ads1115_init	;wreg free
 13255                           
 13256                           ;ads1115.c: 112: ads1115_init(&ads1115Chip1,(0x92));
 13257  00273E  0E8F               	movlw	low _ads1115Chip1
 13258  002740  0100               	movlb	0	; () banked
 13259  002742  6FC5               	movwf	ads1115_init@pAds1115& (0+255),b
 13260  002744  0E00               	movlw	high _ads1115Chip1
 13261  002746  0100               	movlb	0	; () banked
 13262  002748  6FC6               	movwf	(ads1115_init@pAds1115+1)& (0+255),b
 13263  00274A  0E92               	movlw	146
 13264  00274C  0100               	movlb	0	; () banked
 13265  00274E  6FC7               	movwf	ads1115_init@slvaddr& (0+255),b
 13266  002750  EC39  F009         	call	_ads1115_init	;wreg free
 13267  002754  0012               	return		;funcret
 13268  002756                     __end_of_ads1115_init_all_chip:
 13269                           	opt stack 0
 13270                           tosu	equ	0xFFF
 13271                           tosh	equ	0xFFE
 13272                           tosl	equ	0xFFD
 13273                           pclath	equ	0xFFA
 13274                           tblptru	equ	0xFF8
 13275                           tblptrh	equ	0xFF7
 13276                           tblptrl	equ	0xFF6
 13277                           tablat	equ	0xFF5
 13278                           prodh	equ	0xFF4
 13279                           prodl	equ	0xFF3
 13280                           intcon	equ	0xFF2
 13281                           indf0	equ	0xFEF
 13282                           postinc0	equ	0xFEE
 13283                           fsr0h	equ	0xFEA
 13284                           fsr0l	equ	0xFE9
 13285                           wreg	equ	0xFE8
 13286                           postdec1	equ	0xFE5
 13287                           plusw1	equ	0xFE3
 13288                           fsr1h	equ	0xFE2
 13289                           fsr1l	equ	0xFE1
 13290                           indf2	equ	0xFDF
 13291                           postinc2	equ	0xFDE
 13292                           postdec2	equ	0xFDD
 13293                           plusw2	equ	0xFDB
 13294                           fsr2h	equ	0xFDA
 13295                           fsr2l	equ	0xFD9
 13296                           status	equ	0xFD8
 13297                           
 13298 ;; *************** function _ads1115_init *****************
 13299 ;; Defined at:
 13300 ;;		line 3 in file "src/driver/ads1115.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 13303 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
 13304 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13316 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;Total ram usage:        3 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    4
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_ads1115_init_all_chip
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text82
 13331  001272                     __ptext82:
 13332                           	opt stack 0
 13333  001272                     _ads1115_init:
 13334                           	opt stack 25
 13335                           
 13336                           ;ads1115.c: 5: pAds1115->chip=ADS1115;
 13337                           
 13338                           ;incstack = 0
 13339  001272  C0C5  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 13340  001276  C0C6  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 13341  00127A  0E05               	movlw	5
 13342  00127C  6EDF               	movwf	indf2,c
 13343                           
 13344                           ;ads1115.c: 6: pAds1115->slaveAddr=slvaddr;
 13345  00127E  0100               	movlb	0	; () banked
 13346  001280  EE20 F001          	lfsr	2,1
 13347  001284  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13348  001286  26D9               	addwf	fsr2l,f,c
 13349  001288  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13350  00128A  22DA               	addwfc	fsr2h,f,c
 13351  00128C  C0C7  FFDF         	movff	ads1115_init@slvaddr,indf2
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;ads1115.c: 7: pAds1115->config.data=0x8583;;
 13355  001290  0100               	movlb	0	; () banked
 13356  001292  EE20 F002          	lfsr	2,2
 13357  001296  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13358  001298  26D9               	addwf	fsr2l,f,c
 13359  00129A  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13360  00129C  22DA               	addwfc	fsr2h,f,c
 13361  00129E  0E83               	movlw	131
 13362  0012A0  6EDE               	movwf	postinc2,c
 13363  0012A2  0E85               	movlw	133
 13364  0012A4  6EDD               	movwf	postdec2,c
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;ads1115.c: 8: pAds1115->iic_start=iic_start;
 13368  0012A6  0100               	movlb	0	; () banked
 13369  0012A8  EE20 F006          	lfsr	2,6
 13370  0012AC  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13371  0012AE  26D9               	addwf	fsr2l,f,c
 13372  0012B0  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13373  0012B2  22DA               	addwfc	fsr2h,f,c
 13374  0012B4  0ECC               	movlw	low _iic_start
 13375  0012B6  6EDE               	movwf	postinc2,c
 13376  0012B8  0E23               	movlw	high _iic_start
 13377  0012BA  6EDD               	movwf	postdec2,c
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;ads1115.c: 9: pAds1115->iic_stop=iic_stop;
 13381  0012BC  0100               	movlb	0	; () banked
 13382  0012BE  EE20 F008          	lfsr	2,8
 13383  0012C2  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13384  0012C4  26D9               	addwf	fsr2l,f,c
 13385  0012C6  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13386  0012C8  22DA               	addwfc	fsr2h,f,c
 13387  0012CA  0E46               	movlw	low _iic_stop
 13388  0012CC  6EDE               	movwf	postinc2,c
 13389  0012CE  0E24               	movlw	high _iic_stop
 13390  0012D0  6EDD               	movwf	postdec2,c
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;ads1115.c: 10: pAds1115->iic_send_byte=iic_send_byte;
 13394  0012D2  0100               	movlb	0	; () banked
 13395  0012D4  EE20 F00A          	lfsr	2,10
 13396  0012D8  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13397  0012DA  26D9               	addwf	fsr2l,f,c
 13398  0012DC  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13399  0012DE  22DA               	addwfc	fsr2h,f,c
 13400  0012E0  0EB6               	movlw	low _iic_send_byte
 13401  0012E2  6EDE               	movwf	postinc2,c
 13402  0012E4  0E1C               	movlw	high _iic_send_byte
 13403  0012E6  6EDD               	movwf	postdec2,c
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;ads1115.c: 11: pAds1115->iic_waite_ack=iic_waite_ack;
 13407  0012E8  0100               	movlb	0	; () banked
 13408  0012EA  EE20 F00C          	lfsr	2,12
 13409  0012EE  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13410  0012F0  26D9               	addwf	fsr2l,f,c
 13411  0012F2  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13412  0012F4  22DA               	addwfc	fsr2h,f,c
 13413  0012F6  0EF6               	movlw	low _iic_waite_ack
 13414  0012F8  6EDE               	movwf	postinc2,c
 13415  0012FA  0E1D               	movlw	high _iic_waite_ack
 13416  0012FC  6EDD               	movwf	postdec2,c
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;ads1115.c: 12: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 13420  0012FE  0100               	movlb	0	; () banked
 13421  001300  EE20 F00E          	lfsr	2,14
 13422  001304  51C5               	movf	ads1115_init@pAds1115& (0+255),w,b
 13423  001306  26D9               	addwf	fsr2l,f,c
 13424  001308  51C6               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13425  00130A  22DA               	addwfc	fsr2h,f,c
 13426  00130C  0E18               	movlw	low _iic_received_byte_if_ack
 13427  00130E  6EDE               	movwf	postinc2,c
 13428  001310  0E28               	movlw	high _iic_received_byte_if_ack
 13429  001312  6EDD               	movwf	postdec2,c
 13430                           
 13431                           ; BSR set to: 0
 13432  001314  0012               	return		;funcret
 13433  001316                     __end_of_ads1115_init:
 13434                           	opt stack 0
 13435                           tosu	equ	0xFFF
 13436                           tosh	equ	0xFFE
 13437                           tosl	equ	0xFFD
 13438                           pclath	equ	0xFFA
 13439                           tblptru	equ	0xFF8
 13440                           tblptrh	equ	0xFF7
 13441                           tblptrl	equ	0xFF6
 13442                           tablat	equ	0xFF5
 13443                           prodh	equ	0xFF4
 13444                           prodl	equ	0xFF3
 13445                           intcon	equ	0xFF2
 13446                           indf0	equ	0xFEF
 13447                           postinc0	equ	0xFEE
 13448                           fsr0h	equ	0xFEA
 13449                           fsr0l	equ	0xFE9
 13450                           wreg	equ	0xFE8
 13451                           postdec1	equ	0xFE5
 13452                           plusw1	equ	0xFE3
 13453                           fsr1h	equ	0xFE2
 13454                           fsr1l	equ	0xFE1
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           postdec2	equ	0xFDD
 13458                           plusw2	equ	0xFDB
 13459                           fsr2h	equ	0xFDA
 13460                           fsr2l	equ	0xFD9
 13461                           status	equ	0xFD8
 13462                           
 13463 ;; *************** function _handler_interrupt_low *****************
 13464 ;; Defined at:
 13465 ;;		line 38 in file "src/soc/int.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;		None
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;		None
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      void 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;Total ram usage:       17 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    3
 13486 ;; This function calls:
 13487 ;;		_rtc_alrm_irq_hook
 13488 ;;		_sys_ticker_irq_hook
 13489 ;; This function is called by:
 13490 ;;		Interrupt level 1
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	intcodelo
 13495  000018                     __pintcodelo:
 13496                           	opt stack 0
 13497  000018                     _handler_interrupt_low:
 13498                           	opt stack 17
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;incstack = 0
 13502  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13503  00001A  CFD8 F02F          	movff	status,??_handler_interrupt_low
 13504  00001E  CFE8 F030          	movff	wreg,??_handler_interrupt_low+1
 13505  000022  CFE0 F031          	movff	bsr,??_handler_interrupt_low+2
 13506  000026  CFFA F032          	movff	pclath,??_handler_interrupt_low+3
 13507  00002A  CFFB F033          	movff	pclatu,??_handler_interrupt_low+4
 13508  00002E  CFE9 F034          	movff	fsr0l,??_handler_interrupt_low+5
 13509  000032  CFEA F035          	movff	fsr0h,??_handler_interrupt_low+6
 13510  000036  CFE1 F036          	movff	fsr1l,??_handler_interrupt_low+7
 13511  00003A  CFE2 F037          	movff	fsr1h,??_handler_interrupt_low+8
 13512  00003E  CFD9 F038          	movff	fsr2l,??_handler_interrupt_low+9
 13513  000042  CFDA F039          	movff	fsr2h,??_handler_interrupt_low+10
 13514  000046  CFF3 F03A          	movff	prodl,??_handler_interrupt_low+11
 13515  00004A  CFF4 F03B          	movff	prodh,??_handler_interrupt_low+12
 13516  00004E  CFF6 F03C          	movff	tblptrl,??_handler_interrupt_low+13
 13517  000052  CFF7 F03D          	movff	tblptrh,??_handler_interrupt_low+14
 13518  000056  CFF8 F03E          	movff	tblptru,??_handler_interrupt_low+15
 13519  00005A  CFF5 F03F          	movff	tablat,??_handler_interrupt_low+16
 13520                           
 13521                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 13522  00005E  B29D               	btfsc	3997,1,c	;volatile
 13523  000060  A29E               	btfss	3998,1,c	;volatile
 13524  000062  D00E               	goto	i1l6919
 13525  000064  B29F               	btfsc	3999,1,c	;volatile
 13526  000066  D00C               	goto	i1l6919
 13527                           
 13528                           ;int.c: 41: PIR1bits.TMR2IF=0;
 13529  000068  929E               	bcf	3998,1,c	;volatile
 13530                           
 13531                           ;int.c: 42: glTicker++;
 13532  00006A  0E01               	movlw	1
 13533  00006C  0100               	movlb	0	; () banked
 13534  00006E  277F               	addwf	_glTicker& (0+255),f,b	;volatile
 13535  000070  0E00               	movlw	0
 13536  000072  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 13537  000074  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 13538  000076  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;int.c: 43: glbEvent |= (0x01);
 13542  000078  0100               	movlb	0	; () banked
 13543  00007A  818D               	bsf	_glbEvent& (0+255),0,b	;volatile
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;int.c: 44: sys_ticker_irq_hook();
 13547  00007C  EC2B  F014         	call	_sys_ticker_irq_hook	;wreg free
 13548  000080                     i1l6919:
 13549                           
 13550                           ;int.c: 45: }
 13551                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 13552  000080  B0A3               	btfsc	4003,0,c	;volatile
 13553  000082  A0A4               	btfss	4004,0,c	;volatile
 13554  000084  D007               	goto	i1l1343
 13555  000086  B0A5               	btfsc	4005,0,c	;volatile
 13556  000088  D005               	goto	i1l1343
 13557                           
 13558                           ;int.c: 47: PIR3bits.RTCCIF=0;
 13559  00008A  90A4               	bcf	4004,0,c	;volatile
 13560                           
 13561                           ;int.c: 48: glbEvent |= (0x02);
 13562  00008C  0100               	movlb	0	; () banked
 13563  00008E  838D               	bsf	_glbEvent& (0+255),1,b	;volatile
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;int.c: 49: rtc_alrm_irq_hook();
 13567  000090  EC71  F014         	call	_rtc_alrm_irq_hook	;wreg free
 13568  000094                     i1l1343:
 13569  000094  C03F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 13570  000098  C03E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 13571  00009C  C03D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 13572  0000A0  C03C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 13573  0000A4  C03B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 13574  0000A8  C03A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 13575  0000AC  C039  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 13576  0000B0  C038  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 13577  0000B4  C037  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 13578  0000B8  C036  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 13579  0000BC  C035  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 13580  0000C0  C034  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 13581  0000C4  C033  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 13582  0000C8  C032  FFFA         	movff	??_handler_interrupt_low+3,pclath
 13583  0000CC  C031  FFE0         	movff	??_handler_interrupt_low+2,bsr
 13584  0000D0  C030  FFE8         	movff	??_handler_interrupt_low+1,wreg
 13585  0000D4  C02F  FFD8         	movff	??_handler_interrupt_low,status
 13586  0000D8  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13587  0000DA  0010               	retfie	
 13588  0000DC                     __end_of_handler_interrupt_low:
 13589                           	opt stack 0
 13590                           tosu	equ	0xFFF
 13591                           tosh	equ	0xFFE
 13592                           tosl	equ	0xFFD
 13593                           pclatu	equ	0xFFB
 13594                           pclath	equ	0xFFA
 13595                           tblptru	equ	0xFF8
 13596                           tblptrh	equ	0xFF7
 13597                           tblptrl	equ	0xFF6
 13598                           tablat	equ	0xFF5
 13599                           prodh	equ	0xFF4
 13600                           prodl	equ	0xFF3
 13601                           intcon	equ	0xFF2
 13602                           indf0	equ	0xFEF
 13603                           postinc0	equ	0xFEE
 13604                           fsr0h	equ	0xFEA
 13605                           fsr0l	equ	0xFE9
 13606                           wreg	equ	0xFE8
 13607                           postdec1	equ	0xFE5
 13608                           plusw1	equ	0xFE3
 13609                           fsr1h	equ	0xFE2
 13610                           fsr1l	equ	0xFE1
 13611                           bsr	equ	0xFE0
 13612                           indf2	equ	0xFDF
 13613                           postinc2	equ	0xFDE
 13614                           postdec2	equ	0xFDD
 13615                           plusw2	equ	0xFDB
 13616                           fsr2h	equ	0xFDA
 13617                           fsr2l	equ	0xFD9
 13618                           status	equ	0xFD8
 13619                           
 13620 ;; *************** function _sys_ticker_irq_hook *****************
 13621 ;; Defined at:
 13622 ;;		line 36 in file "src/soc/ticker.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;		None
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;		None
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      void 
 13629 ;; Registers used:
 13630 ;;		wreg, status,2, status,0
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;Total ram usage:        0 bytes
 13641 ;; Hardware stack levels used:    1
 13642 ;; Hardware stack levels required when called:    2
 13643 ;; This function calls:
 13644 ;;		Nothing
 13645 ;; This function is called by:
 13646 ;;		_handler_interrupt_low
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text84
 13651  002856                     __ptext84:
 13652                           	opt stack 0
 13653  002856                     _sys_ticker_irq_hook:
 13654                           	opt stack 17
 13655                           
 13656                           ;ticker.c: 38: if(dlyTickerEn){
 13657                           
 13658                           ;incstack = 0
 13659  002856  5018               	movf	_dlyTickerEn,w,c
 13660  002858  B4D8               	btfsc	status,2,c
 13661  00285A  D004               	goto	i1l1442
 13662                           
 13663                           ;ticker.c: 39: dlyTicker+=10;
 13664  00285C  0E0A               	movlw	10
 13665  00285E  2610               	addwf	_dlyTicker,f,c
 13666  002860  0E00               	movlw	0
 13667  002862  2211               	addwfc	_dlyTicker+1,f,c
 13668  002864                     i1l1442:
 13669                           
 13670                           ;ticker.c: 40: }
 13671                           ;ticker.c: 41: userTicker_ms+=10;
 13672  002864  0E0A               	movlw	10
 13673  002866  2612               	addwf	_userTicker_ms,f,c	;volatile
 13674  002868  0E00               	movlw	0
 13675  00286A  2213               	addwfc	_userTicker_ms+1,f,c	;volatile
 13676  00286C  0012               	return		;funcret
 13677  00286E                     __end_of_sys_ticker_irq_hook:
 13678                           	opt stack 0
 13679                           tosu	equ	0xFFF
 13680                           tosh	equ	0xFFE
 13681                           tosl	equ	0xFFD
 13682                           pclatu	equ	0xFFB
 13683                           pclath	equ	0xFFA
 13684                           tblptru	equ	0xFF8
 13685                           tblptrh	equ	0xFF7
 13686                           tblptrl	equ	0xFF6
 13687                           tablat	equ	0xFF5
 13688                           prodh	equ	0xFF4
 13689                           prodl	equ	0xFF3
 13690                           intcon	equ	0xFF2
 13691                           indf0	equ	0xFEF
 13692                           postinc0	equ	0xFEE
 13693                           fsr0h	equ	0xFEA
 13694                           fsr0l	equ	0xFE9
 13695                           wreg	equ	0xFE8
 13696                           postdec1	equ	0xFE5
 13697                           plusw1	equ	0xFE3
 13698                           fsr1h	equ	0xFE2
 13699                           fsr1l	equ	0xFE1
 13700                           bsr	equ	0xFE0
 13701                           indf2	equ	0xFDF
 13702                           postinc2	equ	0xFDE
 13703                           postdec2	equ	0xFDD
 13704                           plusw2	equ	0xFDB
 13705                           fsr2h	equ	0xFDA
 13706                           fsr2l	equ	0xFD9
 13707                           status	equ	0xFD8
 13708                           
 13709 ;; *************** function _rtc_alrm_irq_hook *****************
 13710 ;; Defined at:
 13711 ;;		line 103 in file "src/soc/rtc.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      void 
 13718 ;; Registers used:
 13719 ;;		None
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    2
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_handler_interrupt_low
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text85
 13740  0028E2                     __ptext85:
 13741                           	opt stack 0
 13742  0028E2                     _rtc_alrm_irq_hook:
 13743                           	opt stack 17
 13744                           
 13745                           ;incstack = 0
 13746  0028E2  0012               	return		;funcret
 13747  0028E4                     __end_of_rtc_alrm_irq_hook:
 13748                           	opt stack 0
 13749                           tosu	equ	0xFFF
 13750                           tosh	equ	0xFFE
 13751                           tosl	equ	0xFFD
 13752                           pclatu	equ	0xFFB
 13753                           pclath	equ	0xFFA
 13754                           tblptru	equ	0xFF8
 13755                           tblptrh	equ	0xFF7
 13756                           tblptrl	equ	0xFF6
 13757                           tablat	equ	0xFF5
 13758                           prodh	equ	0xFF4
 13759                           prodl	equ	0xFF3
 13760                           intcon	equ	0xFF2
 13761                           indf0	equ	0xFEF
 13762                           postinc0	equ	0xFEE
 13763                           fsr0h	equ	0xFEA
 13764                           fsr0l	equ	0xFE9
 13765                           wreg	equ	0xFE8
 13766                           postdec1	equ	0xFE5
 13767                           plusw1	equ	0xFE3
 13768                           fsr1h	equ	0xFE2
 13769                           fsr1l	equ	0xFE1
 13770                           bsr	equ	0xFE0
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           postdec2	equ	0xFDD
 13774                           plusw2	equ	0xFDB
 13775                           fsr2h	equ	0xFDA
 13776                           fsr2l	equ	0xFD9
 13777                           status	equ	0xFD8
 13778                           
 13779 ;; *************** function _handler_interrupt_hight *****************
 13780 ;; Defined at:
 13781 ;;		line 9 in file "src/soc/int.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;		None
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0, cstack
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;Total ram usage:       14 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    1
 13802 ;; This function calls:
 13803 ;;		i2_rtc_alrm_irq_hook
 13804 ;;		i2_sys_ticker_irq_hook
 13805 ;; This function is called by:
 13806 ;;		Interrupt level 2
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	intcode
 13811  000008                     __pintcode:
 13812                           	opt stack 0
 13813  000008                     _handler_interrupt_hight:
 13814                           	opt stack 17
 13815                           
 13816                           ;incstack = 0
 13817  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13818  00000A  EFDE  F005         	goto	int_func
 13819                           tosu	equ	0xFFF
 13820                           tosh	equ	0xFFE
 13821                           tosl	equ	0xFFD
 13822                           pclatu	equ	0xFFB
 13823                           pclath	equ	0xFFA
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           indf0	equ	0xFEF
 13832                           postinc0	equ	0xFEE
 13833                           fsr0h	equ	0xFEA
 13834                           fsr0l	equ	0xFE9
 13835                           wreg	equ	0xFE8
 13836                           postdec1	equ	0xFE5
 13837                           plusw1	equ	0xFE3
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           bsr	equ	0xFE0
 13841                           indf2	equ	0xFDF
 13842                           postinc2	equ	0xFDE
 13843                           postdec2	equ	0xFDD
 13844                           plusw2	equ	0xFDB
 13845                           fsr2h	equ	0xFDA
 13846                           fsr2l	equ	0xFD9
 13847                           status	equ	0xFD8
 13848                           
 13849                           	psect	intcode_body
 13850  000BBC                     __pintcode_body:
 13851                           	opt stack 17
 13852  000BBC                     int_func:
 13853                           	opt stack 17
 13854  000BBC  CFFA F021          	movff	pclath,??_handler_interrupt_hight
 13855  000BC0  CFFB F022          	movff	pclatu,??_handler_interrupt_hight+1
 13856  000BC4  CFE9 F023          	movff	fsr0l,??_handler_interrupt_hight+2
 13857  000BC8  CFEA F024          	movff	fsr0h,??_handler_interrupt_hight+3
 13858  000BCC  CFE1 F025          	movff	fsr1l,??_handler_interrupt_hight+4
 13859  000BD0  CFE2 F026          	movff	fsr1h,??_handler_interrupt_hight+5
 13860  000BD4  CFD9 F027          	movff	fsr2l,??_handler_interrupt_hight+6
 13861  000BD8  CFDA F028          	movff	fsr2h,??_handler_interrupt_hight+7
 13862  000BDC  CFF3 F029          	movff	prodl,??_handler_interrupt_hight+8
 13863  000BE0  CFF4 F02A          	movff	prodh,??_handler_interrupt_hight+9
 13864  000BE4  CFF6 F02B          	movff	tblptrl,??_handler_interrupt_hight+10
 13865  000BE8  CFF7 F02C          	movff	tblptrh,??_handler_interrupt_hight+11
 13866  000BEC  CFF8 F02D          	movff	tblptru,??_handler_interrupt_hight+12
 13867  000BF0  CFF5 F02E          	movff	tablat,??_handler_interrupt_hight+13
 13868                           
 13869                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 13870  000BF4  BAF2               	btfsc	intcon,5,c	;volatile
 13871  000BF6  A4F2               	btfss	intcon,2,c	;volatile
 13872  000BF8  D002               	goto	i2l1332
 13873  000BFA  B4F1               	btfsc	intcon2,2,c	;volatile
 13874                           
 13875                           ;int.c: 13: __nop();
 13876  000BFC  F000               	nop	
 13877  000BFE                     i2l1332:
 13878                           
 13879                           ;int.c: 14: }
 13880                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 13881  000BFE  BCF2               	btfsc	intcon,6,c	;volatile
 13882  000C00  A89D               	btfss	3997,4,c	;volatile
 13883  000C02  D001               	goto	i2l1333
 13884  000C04  509E               	movf	3998,w,c	;volatile
 13885  000C06                     i2l1333:
 13886                           
 13887                           ;int.c: 17: }
 13888                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 13889  000C06  BCF2               	btfsc	intcon,6,c	;volatile
 13890  000C08  AA9D               	btfss	3997,5,c	;volatile
 13891  000C0A  D001               	goto	i2l1334
 13892  000C0C  509E               	movf	3998,w,c	;volatile
 13893  000C0E                     i2l1334:
 13894                           
 13895                           ;int.c: 20: }
 13896                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 13897  000C0E  BCF2               	btfsc	intcon,6,c	;volatile
 13898  000C10  A09D               	btfss	3997,0,c	;volatile
 13899  000C12  D001               	goto	i2l1335
 13900  000C14  509E               	movf	3998,w,c	;volatile
 13901  000C16                     i2l1335:
 13902                           
 13903                           ;int.c: 23: }
 13904                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 13905  000C16  B29D               	btfsc	3997,1,c	;volatile
 13906  000C18  A29E               	btfss	3998,1,c	;volatile
 13907  000C1A  D00E               	goto	i2l6893
 13908  000C1C  A29F               	btfss	3999,1,c	;volatile
 13909  000C1E  D00C               	goto	i2l6893
 13910                           
 13911                           ;int.c: 26: PIR1bits.TMR2IF=0;
 13912  000C20  929E               	bcf	3998,1,c	;volatile
 13913                           
 13914                           ;int.c: 27: glTicker++;
 13915  000C22  0E01               	movlw	1
 13916  000C24  0100               	movlb	0	; () banked
 13917  000C26  277F               	addwf	_glTicker& (0+255),f,b	;volatile
 13918  000C28  0E00               	movlw	0
 13919  000C2A  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 13920  000C2C  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 13921  000C2E  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;int.c: 28: glbEvent |= (0x01);
 13925  000C30  0100               	movlb	0	; () banked
 13926  000C32  818D               	bsf	_glbEvent& (0+255),0,b	;volatile
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;int.c: 29: sys_ticker_irq_hook();
 13930  000C34  EC37  F014         	call	i2_sys_ticker_irq_hook	;wreg free
 13931  000C38                     i2l6893:
 13932                           
 13933                           ;int.c: 30: }
 13934                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 13935  000C38  B0A3               	btfsc	4003,0,c	;volatile
 13936  000C3A  A0A4               	btfss	4004,0,c	;volatile
 13937  000C3C  D007               	goto	i2l1338
 13938  000C3E  A0A5               	btfss	4005,0,c	;volatile
 13939  000C40  D005               	goto	i2l1338
 13940                           
 13941                           ;int.c: 32: PIR3bits.RTCCIF=0;
 13942  000C42  90A4               	bcf	4004,0,c	;volatile
 13943                           
 13944                           ;int.c: 33: glbEvent |= (0x02);
 13945  000C44  0100               	movlb	0	; () banked
 13946  000C46  838D               	bsf	_glbEvent& (0+255),1,b	;volatile
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;int.c: 34: rtc_alrm_irq_hook();
 13950  000C48  EC72  F014         	call	i2_rtc_alrm_irq_hook	;wreg free
 13951  000C4C                     i2l1338:
 13952  000C4C  C02E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 13953  000C50  C02D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 13954  000C54  C02C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 13955  000C58  C02B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 13956  000C5C  C02A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 13957  000C60  C029  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 13958  000C64  C028  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 13959  000C68  C027  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 13960  000C6C  C026  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 13961  000C70  C025  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 13962  000C74  C024  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 13963  000C78  C023  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 13964  000C7C  C022  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 13965  000C80  C021  FFFA         	movff	??_handler_interrupt_hight,pclath
 13966  000C84  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13967  000C86  0011               	retfie		f
 13968  000C88                     __end_of_handler_interrupt_hight:
 13969                           	opt stack 0
 13970                           tosu	equ	0xFFF
 13971                           tosh	equ	0xFFE
 13972                           tosl	equ	0xFFD
 13973                           pclatu	equ	0xFFB
 13974                           pclath	equ	0xFFA
 13975                           tblptru	equ	0xFF8
 13976                           tblptrh	equ	0xFF7
 13977                           tblptrl	equ	0xFF6
 13978                           tablat	equ	0xFF5
 13979                           prodh	equ	0xFF4
 13980                           prodl	equ	0xFF3
 13981                           intcon	equ	0xFF2
 13982                           intcon2	equ	0xFF1
 13983                           indf0	equ	0xFEF
 13984                           postinc0	equ	0xFEE
 13985                           fsr0h	equ	0xFEA
 13986                           fsr0l	equ	0xFE9
 13987                           wreg	equ	0xFE8
 13988                           postdec1	equ	0xFE5
 13989                           plusw1	equ	0xFE3
 13990                           fsr1h	equ	0xFE2
 13991                           fsr1l	equ	0xFE1
 13992                           bsr	equ	0xFE0
 13993                           indf2	equ	0xFDF
 13994                           postinc2	equ	0xFDE
 13995                           postdec2	equ	0xFDD
 13996                           plusw2	equ	0xFDB
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001 ;; *************** function i2_sys_ticker_irq_hook *****************
 14002 ;; Defined at:
 14003 ;;		line 36 in file "src/soc/ticker.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;		None
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      void 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:        0 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_handler_interrupt_hight
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           	psect	text87
 14031  00286E                     __ptext87:
 14032                           	opt stack 0
 14033  00286E                     i2_sys_ticker_irq_hook:
 14034                           	opt stack 17
 14035                           
 14036                           ;ticker.c: 38: if(dlyTickerEn){
 14037                           
 14038                           ;incstack = 0
 14039  00286E  5018               	movf	_dlyTickerEn,w,c
 14040  002870  B4D8               	btfsc	status,2,c
 14041  002872  D004               	goto	i2l1442
 14042                           
 14043                           ;ticker.c: 39: dlyTicker+=10;
 14044  002874  0E0A               	movlw	10
 14045  002876  2610               	addwf	_dlyTicker,f,c
 14046  002878  0E00               	movlw	0
 14047  00287A  2211               	addwfc	_dlyTicker+1,f,c
 14048  00287C                     i2l1442:
 14049                           
 14050                           ;ticker.c: 40: }
 14051                           ;ticker.c: 41: userTicker_ms+=10;
 14052  00287C  0E0A               	movlw	10
 14053  00287E  2612               	addwf	_userTicker_ms,f,c	;volatile
 14054  002880  0E00               	movlw	0
 14055  002882  2213               	addwfc	_userTicker_ms+1,f,c	;volatile
 14056  002884  0012               	return		;funcret
 14057  002886                     __end_ofi2_sys_ticker_irq_hook:
 14058                           	opt stack 0
 14059                           tosu	equ	0xFFF
 14060                           tosh	equ	0xFFE
 14061                           tosl	equ	0xFFD
 14062                           pclatu	equ	0xFFB
 14063                           pclath	equ	0xFFA
 14064                           tblptru	equ	0xFF8
 14065                           tblptrh	equ	0xFF7
 14066                           tblptrl	equ	0xFF6
 14067                           tablat	equ	0xFF5
 14068                           prodh	equ	0xFF4
 14069                           prodl	equ	0xFF3
 14070                           intcon	equ	0xFF2
 14071                           intcon2	equ	0xFF1
 14072                           indf0	equ	0xFEF
 14073                           postinc0	equ	0xFEE
 14074                           fsr0h	equ	0xFEA
 14075                           fsr0l	equ	0xFE9
 14076                           wreg	equ	0xFE8
 14077                           postdec1	equ	0xFE5
 14078                           plusw1	equ	0xFE3
 14079                           fsr1h	equ	0xFE2
 14080                           fsr1l	equ	0xFE1
 14081                           bsr	equ	0xFE0
 14082                           indf2	equ	0xFDF
 14083                           postinc2	equ	0xFDE
 14084                           postdec2	equ	0xFDD
 14085                           plusw2	equ	0xFDB
 14086                           fsr2h	equ	0xFDA
 14087                           fsr2l	equ	0xFD9
 14088                           status	equ	0xFD8
 14089                           
 14090 ;; *************** function i2_rtc_alrm_irq_hook *****************
 14091 ;; Defined at:
 14092 ;;		line 103 in file "src/soc/rtc.c"
 14093 ;; Parameters:    Size  Location     Type
 14094 ;;		None
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  1    wreg      void 
 14099 ;; Registers used:
 14100 ;;		None
 14101 ;; Tracked objects:
 14102 ;;		On entry : 0/0
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;Total ram usage:        0 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; This function calls:
 14113 ;;		Nothing
 14114 ;; This function is called by:
 14115 ;;		_handler_interrupt_hight
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           	psect	text88
 14120  0028E4                     __ptext88:
 14121                           	opt stack 0
 14122  0028E4                     i2_rtc_alrm_irq_hook:
 14123                           	opt stack 17
 14124                           
 14125                           ;incstack = 0
 14126  0028E4  0012               	return		;funcret
 14127  0028E6                     __end_ofi2_rtc_alrm_irq_hook:
 14128                           	opt stack 0
 14129                           tosu	equ	0xFFF
 14130                           tosh	equ	0xFFE
 14131                           tosl	equ	0xFFD
 14132                           pclatu	equ	0xFFB
 14133                           pclath	equ	0xFFA
 14134                           tblptru	equ	0xFF8
 14135                           tblptrh	equ	0xFF7
 14136                           tblptrl	equ	0xFF6
 14137                           tablat	equ	0xFF5
 14138                           prodh	equ	0xFF4
 14139                           prodl	equ	0xFF3
 14140                           intcon	equ	0xFF2
 14141                           intcon2	equ	0xFF1
 14142                           indf0	equ	0xFEF
 14143                           postinc0	equ	0xFEE
 14144                           fsr0h	equ	0xFEA
 14145                           fsr0l	equ	0xFE9
 14146                           wreg	equ	0xFE8
 14147                           postdec1	equ	0xFE5
 14148                           plusw1	equ	0xFE3
 14149                           fsr1h	equ	0xFE2
 14150                           fsr1l	equ	0xFE1
 14151                           bsr	equ	0xFE0
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           plusw2	equ	0xFDB
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           tosu	equ	0xFFF
 14160                           tosh	equ	0xFFE
 14161                           tosl	equ	0xFFD
 14162                           pclatu	equ	0xFFB
 14163                           pclath	equ	0xFFA
 14164                           tblptru	equ	0xFF8
 14165                           tblptrh	equ	0xFF7
 14166                           tblptrl	equ	0xFF6
 14167                           tablat	equ	0xFF5
 14168                           prodh	equ	0xFF4
 14169                           prodl	equ	0xFF3
 14170                           intcon	equ	0xFF2
 14171                           intcon2	equ	0xFF1
 14172                           indf0	equ	0xFEF
 14173                           postinc0	equ	0xFEE
 14174                           fsr0h	equ	0xFEA
 14175                           fsr0l	equ	0xFE9
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           plusw1	equ	0xFE3
 14179                           fsr1h	equ	0xFE2
 14180                           fsr1l	equ	0xFE1
 14181                           bsr	equ	0xFE0
 14182                           indf2	equ	0xFDF
 14183                           postinc2	equ	0xFDE
 14184                           postdec2	equ	0xFDD
 14185                           plusw2	equ	0xFDB
 14186                           fsr2h	equ	0xFDA
 14187                           fsr2l	equ	0xFD9
 14188                           status	equ	0xFD8
 14189                           
 14190                           	psect	text89
 14191  000000                     __ptext89:
 14192                           	opt stack 0
 14193                           tosu	equ	0xFFF
 14194                           tosh	equ	0xFFE
 14195                           tosl	equ	0xFFD
 14196                           pclatu	equ	0xFFB
 14197                           pclath	equ	0xFFA
 14198                           tblptru	equ	0xFF8
 14199                           tblptrh	equ	0xFF7
 14200                           tblptrl	equ	0xFF6
 14201                           tablat	equ	0xFF5
 14202                           prodh	equ	0xFF4
 14203                           prodl	equ	0xFF3
 14204                           intcon	equ	0xFF2
 14205                           intcon2	equ	0xFF1
 14206                           indf0	equ	0xFEF
 14207                           postinc0	equ	0xFEE
 14208                           fsr0h	equ	0xFEA
 14209                           fsr0l	equ	0xFE9
 14210                           wreg	equ	0xFE8
 14211                           postdec1	equ	0xFE5
 14212                           plusw1	equ	0xFE3
 14213                           fsr1h	equ	0xFE2
 14214                           fsr1l	equ	0xFE1
 14215                           bsr	equ	0xFE0
 14216                           indf2	equ	0xFDF
 14217                           postinc2	equ	0xFDE
 14218                           postdec2	equ	0xFDD
 14219                           plusw2	equ	0xFDB
 14220                           fsr2h	equ	0xFDA
 14221                           fsr2l	equ	0xFD9
 14222                           status	equ	0xFD8
 14223                           
 14224                           	psect	rparam
 14225  0000                     tosu	equ	0xFFF
 14226                           tosh	equ	0xFFE
 14227                           tosl	equ	0xFFD
 14228                           pclatu	equ	0xFFB
 14229                           pclath	equ	0xFFA
 14230                           tblptru	equ	0xFF8
 14231                           tblptrh	equ	0xFF7
 14232                           tblptrl	equ	0xFF6
 14233                           tablat	equ	0xFF5
 14234                           prodh	equ	0xFF4
 14235                           prodl	equ	0xFF3
 14236                           intcon	equ	0xFF2
 14237                           intcon2	equ	0xFF1
 14238                           indf0	equ	0xFEF
 14239                           postinc0	equ	0xFEE
 14240                           fsr0h	equ	0xFEA
 14241                           fsr0l	equ	0xFE9
 14242                           wreg	equ	0xFE8
 14243                           postdec1	equ	0xFE5
 14244                           plusw1	equ	0xFE3
 14245                           fsr1h	equ	0xFE2
 14246                           fsr1l	equ	0xFE1
 14247                           bsr	equ	0xFE0
 14248                           indf2	equ	0xFDF
 14249                           postinc2	equ	0xFDE
 14250                           postdec2	equ	0xFDD
 14251                           plusw2	equ	0xFDB
 14252                           fsr2h	equ	0xFDA
 14253                           fsr2l	equ	0xFD9
 14254                           status	equ	0xFD8
 14255                           
 14256                           	psect	temp
 14257  000040                     btemp:
 14258                           	opt stack 0
 14259  000040                     	ds	1
 14260  0000                     int$flags	set	btemp
 14261                           tosu	equ	0xFFF
 14262                           tosh	equ	0xFFE
 14263                           tosl	equ	0xFFD
 14264                           pclatu	equ	0xFFB
 14265                           pclath	equ	0xFFA
 14266                           tblptru	equ	0xFF8
 14267                           tblptrh	equ	0xFF7
 14268                           tblptrl	equ	0xFF6
 14269                           tablat	equ	0xFF5
 14270                           prodh	equ	0xFF4
 14271                           prodl	equ	0xFF3
 14272                           intcon	equ	0xFF2
 14273                           intcon2	equ	0xFF1
 14274                           indf0	equ	0xFEF
 14275                           postinc0	equ	0xFEE
 14276                           fsr0h	equ	0xFEA
 14277                           fsr0l	equ	0xFE9
 14278                           wreg	equ	0xFE8
 14279                           postdec1	equ	0xFE5
 14280                           plusw1	equ	0xFE3
 14281                           fsr1h	equ	0xFE2
 14282                           fsr1l	equ	0xFE1
 14283                           bsr	equ	0xFE0
 14284                           indf2	equ	0xFDF
 14285                           postinc2	equ	0xFDE
 14286                           postdec2	equ	0xFDD
 14287                           plusw2	equ	0xFDB
 14288                           fsr2h	equ	0xFDA
 14289                           fsr2l	equ	0xFD9
 14290                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    809
    Data        16
    BSS         969
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      63
    BANK0           160     43     160
    BANK1           256      2     164
    BANK2           256      0     162
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(BANK0[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S727$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S727$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S727$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S727$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S727$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK0[1]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK0[11]), NULL(NULL[0]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK0[11]), NULL(NULL[0]), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S58$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S58$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S58$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S58$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S58$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_key_process
    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_rtc_mm_ss->_lcd_show_string
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _m_int16_2_str_4->___awdiv
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _delay_ms->_delay_us
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    ___wmul->___exp_10
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_base_zero
    ___enter_menu_set_base_zero->___int32_2_mflot32
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc_fixed_point
    _in_adc_start_and_read->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1468037
                                              0 BANK1      2     2      0
              _ads1115_init_all_chip
            _ads1115_read_conversion
                   _ads1115_read_reg
           _ads1115_start_conversion
                        _in_adc_init
              _in_adc_start_and_read
                        _key_polling
                        _key_process
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                         _ticker_dly
                  _ui_disp_rtc_mm_ss
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522248
                                             23 BANK0      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                             20 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                             20 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _ui_disp_rtc_mm_ss                                   11    11      0  349708
                                             23 BANK0     11    11      0
                     _lcd_disp_level
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                       _m_int8_2_hex
                            _rtc_get
 ---------------------------------------------------------------------------------
 (2) _rtc_get                                              1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                             19 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             16 BANK0      3     2      1
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0  559146
                                             40 BANK0      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0  553420
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  553420
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  553420
                                             23 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  317629
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string                                      3     1      2  230976
                                             20 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                             17 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_show_dp                                          2     1      1   86653
                                             17 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    3062
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1153
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     614
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4     945
                                              8 BANK0      5     1      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0     638
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2     462
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0    3075
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_adj_value_fixed_point                            7     4      3    3075
                                             15 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1672
                                              3 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                             10 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              3 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___exp_10                                             3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_set_down_long                            2     2      0    1077
                                             31 BANK0      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_pose                                3     3      0      34
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           2     2      0    1009
                                             29 BANK0      2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___int32_2_mflot32                                   16    12      4     975
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc_fixed_point                            5     1      4     527
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _in_adc_start_and_read                                6     4      2     412
                                              4 BANK0      6     4      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2     338
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ads1115_start_conversion                             2     0      2    1439
                                              8 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (2) _ads1115_write_reg                                    5     0      5    1287
                                              3 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_conversion                              5     3      2    1338
                                             10 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_reg                                     6     3      3    1149
                                              4 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _iic_send_byte                                        2     2      0     167
                                              1 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (4) _iic_waite_ack                                        1     1      0      65
                                              0 BANK0      1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (3) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _iic_received_byte_if_ack                             2     2      0     207
                                              2 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (3) _iic_send_ack                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _iic_received_byte                                    2     2      0     108
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _ads1115_read_conversion
     _ads1115_read_reg
       _iic_received_byte_if_ack *
         _iic_received_byte
         _iic_send_ack
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _ads1115_read_reg
     _iic_received_byte_if_ack *
       _iic_received_byte
       _iic_send_ack
     _iic_send_byte *
       _iic_waite_ack
         _iic_stop
     _iic_start *
     _iic_stop *
   _ads1115_start_conversion
     _ads1115_write_reg
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _in_adc_init
   _in_adc_start_and_read
     _delay_us
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       _key_shift_loc_fixed_point
     _key_process_set
     _key_process_set_down_long
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
       ___enter_menu_set_pose
     _key_process_set_long
     _key_process_up
       _key_adj_value_fixed_point
         ___exp_10
         ___lwdiv
           ___exp_10 (ARG)
         ___lwmod
           ___exp_10 (ARG)
           ___lwdiv (ARG)
             ___exp_10 (ARG)
         ___wmul
           ___exp_10 (ARG)
     _key_waite_release
       _key_polling
         _delay_ms
           _delay_us
     _ui_disp_menu
       _ui_disp_menu_psw_adj
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ticker_dly
   _ui_disp_rtc_mm_ss
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_refresh
     _lcd_show_dp
       _lcd_disp_dp_loc_0
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_1
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_2
         _lcd_set_com_seg
           ___awdiv
     _lcd_show_string
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _rtc_get
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A2       9       63.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      A4       7       64.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     425      12        0.0%
DATA                 0      0     425       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Sep 12 00:39:00 2017

              lcd_show_string_l0@str 00D9                       ?_iic_waite_ack 0021  
              lcd_show_string_l1@str 00D9                         ?_lcd_show_dp 00D6  
                ?_lcd_show_string_l0 00D9                  ?_lcd_show_string_l1 00D9  
         __end_of_rtcc_reg_wr_enable 28D0                         ?_in_adc_init 0021  
                      ?_m_int8_2_hex 00C5               ??_ui_disp_menu_psw_adj 0040  
                       ___awdiv@sign 00CA                                   bsr 000FE0  
                      ?_lcd_show_chr 00D6                  ___wmul@multiplicand 00CA  
        __end_of_rtcc_reg_wr_disable 28DC                         __CFG_CP0$OFF 000000  
                        __CFG_OSC$HS 000000                                  l810 1C16  
                                l707 1CDC                                  l811 1C14  
                                l732 1DE8                                  l684 1E36  
                                l699 1CD0                                  _PR2 000FCB  
                   ??_key_process_up 0040                         ___awmod@sign 00CA  
                                prod 000FF3                                  tosl 000FFD  
                                wreg 000FE8            __size_of_ads1115_read_reg 01BC  
            __end_of___x_arrange_str 1D8C                 ??_lcd_disp_level_bar 0040  
         ?_key_shift_loc_fixed_point 00C5                 ??_lcd_show_string_l0 0040  
               ??_lcd_show_string_l1 0040                   m_int16_2_str_4@buf 00CD  
                               l1295 24C8                                 l1447 26DA  
                               l1852 1B64                                 l1862 1F7C  
                               l7011 0DDA                                 l7003 0D6A  
                               l7101 1C78                                 l1799 1040  
                               l7103 1C82                                 l7031 1FF0  
                               l7111 1B76                                 l7201 078E  
                               l8011 0EF6                                 l8003 0EE2  
                               l7107 1C8C                                 l7043 201E  
                               l7035 1FFA                                 l8021 0F12  
                               l7141 1368                                 l7133 1342  
                               l7061 2582                                 l7117 1BAC  
                               l8101 2056                                 l8031 0F30  
                               l8023 0F18                                 l8015 0F00  
                               l8007 0EEC                                 l7311 1FBC  
                               l7303 1FA4                                 l7055 25B8  
                               l7047 203E                                 l7071 1968  
                               l8111 2082                                 l8025 0F1E  
                               l8017 0F06                                 l7153 13AE  
                               l7145 138C                                 l7137 1356  
                               l7129 1332                                 l7081 199A  
                               l7073 1972                                 l8105 2064  
                               l8043 2758                                 l8027 0F24  
                               l8019 0F0C                                 l8035 0F36  
                               l7307 1FB0                                 l7163 1D60  
                               l7139 1362                                 l7067 254C  
                               l7083 19A4                                 l7075 197C  
                               l8051 27D2                                 l8115 208C  
                               l8123 26DC                                 l7341 09B8  
                               l8029 0F2A                                 l7317 1FC8  
                               l7165 1D64                                 l7149 139A  
                               l7093 1C50                                 l7085 19AE  
                               l7077 1986                                 l8301 1AB6  
                               l8109 2076                                 l8151 0618  
                               l8047 276A                                 l7327 092E  
                               l7335 0972                                 l7159 1D2A  
                               l7095 1C5A                                 l7079 1990  
                               l8055 27D8                                 l7513 1DA6  
                               l8153 0642                                 l7281 0FDA  
                               l7337 098C                                 l7601 1B20  
                               l7193 22A8                                 l7097 1C64  
                               l7089 19B8                                 l7353 1128  
                               l8313 1AE4                                 l8305 1AC6  
                               l8073 2516                                 l8065 2268  
                               l8163 0764                                 l8155 0668  
                               l7611 1B56                                 l7603 1B26  
                               l7187 2286                                 l7099 1C6E  
                               l7363 117C                                 l8059 2248  
                               l7509 1D9C                                 l8157 068E  
                               l8149 05E2                                 l7269 24DE  
                               l7277 0FC4                                 l7621 1F44  
                               l8309 1AD4                                 l8317 1AF0  
                               l8093 22F2                                 l8333 1900  
                               l8159 06CC                                 l7279 0FD4  
                               l7295 1F8C                                 l7623 1F4A  
                               l7367 11AA                                 l8087 22D0  
                               l7377 21C2                                 l7289 102E  
                               l7713 26A6                                 l8353 11D4  
                               l7379 21C4                                 l7299 1F98  
                               l7627 1F6E                                 l7619 1F38  
                               l8347 194A                                 l7573 1DEE  
                               l8437 2236                                 l7581 27AC  
                               l7653 20EC                                 l7717 26B0  
                               l7901 0276                                 l7487 1E3A  
                               l7911 02D0                                 l7903 0288  
                               l8703 0D3C                                 l7497 1E58  
                               l7489 1E46                                 l7585 27C2  
                               l7649 20E2                                 l7657 20F6  
                               l7921 032A                                 l7913 02E2  
                               l7905 029A                                 l6971 0E6A  
                               l7931 0384                                 l7923 033C  
                               l7915 02F4                                 l7907 02AC  
                               l8379 1266                                 l6973 0E76  
                               l6965 0E4C                                 l7941 03DE  
                               l7933 0396                                 l7925 034E  
                               l7917 0306                                 l7909 02BE  
                               l7861 010E                                 l7839 1D1C  
                               l7599 1B14                                 l7687 0B7E  
                               l6991 0ECE                                 l6983 0EAC  
                               l6975 0E7C                                 l6959 0E36  
                               l7951 0438                                 l7943 03F0  
                               l7935 03A8                                 l7927 0360  
                               l7919 0318                                 l7871 0168  
                               l7863 0120                                 l7785 1CDA  
                               l7953 044A                                 l7945 0402  
                               l7937 03BA                                 l7929 0372  
                               l7881 01C2                                 l7873 017A  
                               l7865 0132                                 l7961 0480  
                               l7857 00EE                                 l7779 1CC6  
                               l6987 0EBA                                 l7955 045C  
                               l7947 0414                                 l7939 03CC  
                               l7891 021C                                 l7883 01D4  
                               l7875 018C                                 l7867 0144  
                               l7859 00FC                                 l7957 046E  
                               l7949 0426                                 l7893 022E  
                               l7885 01E6                                 l7877 019E  
                               l7869 0156                                 l7975 2368  
                               l6999 0D60                                 l7895 0240  
                               l7887 01F8                                 l7879 01B0  
                               l8687 0D1E                                 l7985 240C  
                               l7993 2604                                 l7977 2378  
                               l7969 2356                                 l7897 0252  
                               l7889 020A                                 l8697 0D30  
                               l7899 0264                                 l7989 242A  
                               l7997 261A                                 STR_1 FFED  
                               STR_2 FFE4                                 STR_3 FFF2  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u5300 1B96                                 u5214 0DBA  
                               u5310 1BCC                                 u5215 0DB4  
                               u6008 06A0                                 u5224 0DF0  
                               u5225 0DEA                                 u6018 06DE  
                               u6019 06F4                                 u5307 1B8C  
                               u6028 071C                                 u6029 0732  
                               u5317 1BC2                                 u6038 0750  
                               u5510 09A6                                 u6048 09E4  
                               u6049 09F8                                 u6241 18C6  
                               u6058 0A0A                                 u6059 0A2E  
                               u6068 0A40                                 u6069 0A58  
                               u6078 0A6A                                 u6079 0A82  
                               u6088 0A94                                 u6089 0AAC  
                               u6098 0ABE                                 u5750 0B74  
                               u5958 05CE                                 u5968 05F4  
                               u5978 062A                                 u5988 0654  
                               u5998 067A                       ??_lcd_disp_all 0040  
                  ??_key_process_set 0040                                 _pLCD 0060  
       __end_of_LCDDigitalIndexTable FEE4            __size_of_lcd_disp_refresh 0062  
                               _main 0C88                                 _menu 001D  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0040              _handler_interrupt_hight 0008  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00DC                       ??_iic_send_ack 0040  
                      _globleBuffer0 0300                        _globleBuffer1 0400  
                      __CFG_IESO$OFF 000000          key_shift_loc_fixed_point@t8 00C9  
                  _key_waite_release 234C     __end_of_iic_received_byte_if_ack 2838  
                       ___param_bank 000000                     ?_lcd_set_com_seg 00CD  
                 ?_key_waite_release 00CD                                EECON2 000FA7  
                     ??_m_int8_2_hex 0040           ??_ads1115_start_conversion 0040  
                     ??_lcd_show_chr 0040                        lcd_disp_all@i 00C6  
                      lcd_disp_all@x 00C5                                RTCCFG 000F5F  
                              ?_main 0021                    ?_key_process_down 0021  
                    __end_of___awdiv 0ED8                      __end_of___awmod 13B8  
                    __end_of___lldiv 1052                  ??_key_waite_release 0040  
                    ___awdiv@divisor 00C7                                _T2CON 000FCA  
                              _FSR0H 000FEA                                _FSR0L 000FE9  
                    __end_of___lwdiv 1B6E                      __end_of___lwmod 1F86  
                    ___awdiv@counter 00C9                                _PORTB 000F81  
                              _PORTC 000F82            _key_adj_value_fixed_point 0AD2  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISG 000F98                   ??_key_process_down 0040  
                    ??_lcd_disp_logo 0040                         ?_key_polling 0021  
                lcd_disp_dp_loc_0@dp 00D5                  lcd_disp_dp_loc_1@dp 00D5  
                lcd_disp_dp_loc_2@dp 00D5                         ?_key_process 0021  
                     __CFG_FCMEN$OFF 000000                                _glRtc 0078  
                              _st_Bj 0019                       __CFG_T1DIG$OFF 000000  
       ??___enter_menu_set_base_zero 0040                                pclath 000FFA  
                              tablat 000FF5                      __end_of_rtc_get 234C  
                    __end_of_rtc_set 110A                                plusw1 000FE3  
                              plusw2 000FDB                                status 000FD8  
                    ??_iic_send_byte 0040                   _diff_prCalibTabDef 0100  
          __end_of_key_waite_release 238E                     ?_lcd_show_string 00D9  
                    ??_iic_waite_ack 0040                     __end_of_HexTable FF1D  
                    __initialization 19EE                         __end_of_main 0D52  
                      _prCalibTabDef 0200                 iic_received_byte@ret 00C5  
                      _userTicker_ms 0012                               ??_main 0040  
                      __activetblptr 000002                           _at24c02Ch0 00AF  
                         _at24c02Ch1 00BA                ___enter_menu_set_pose 266A  
       __end_of_key_process_set_long 28E2                     ?___x_arrange_str 00C5  
                             _ADCON1 000FC1     __size_of_ads1115_read_conversion 0046  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                   __end_of___exp_10 1FE6                     ___awdiv@dividend 00C5  
                             _LCDCON 000FA8                               _LCDSE0 000FA9  
                             _LCDSE1 000FB6                               _LCDSE2 000FB7  
                             _LCDSE3 000FB8                               _LCDSE4 000FB9  
                             _LCDSE5 000FBA                               _LCDREG 000FD2  
          ??_handler_interrupt_hight 0021                               i1l1343 0094  
                             i1l1442 2864                               i2l1332 0BFE  
                             i2l1333 0C06                               i2l1334 0C0E  
                             i2l1335 0C16                               i2l1442 287C  
                             i2l1338 0C4C                       __CFG_WDTEN$OFF 000000  
                             i1l6919 0080                               _INTCON 000FF2  
                             _TABLAT 000FF5                               i2l6893 0C38  
        ??_key_process_set_down_long 00E4                        m_int8_2_hex@b 00C7  
       __size_of_sys_ticker_irq_hook 0018                     ??_lcd_disp_level 0040  
          ___enter_menu_set_pose@fps 00C6                     __end_of_delay_ms 27D0  
                   __end_of_delay_us 24F4                 __size_of_lcd_bl_init 0004  
                     __CFG_XINST$OFF 000000                     __end_of_lcd_init 28C4  
                   __end_of_iic_stop 2482                               ___wmul 25CC  
                          ??___awdiv 0040                            ??___awmod 0040  
               __end_of_flashTestbuf FFE4                            ??___lldiv 0040  
                          ??___lwdiv 0040                            ??___lwmod 0040  
                lcd_disp_level@level 00D8                               clear_0 1A16  
                             clear_1 1A2A                               clear_2 1A3C  
                             clear_3 1A48                               clear_4 1A54  
                             clear_5 1A60                     ___awdiv@quotient 00CB  
                    ___awmod@divisor 00C7                 __size_of_lcd_show_dp 006C  
               __end_of_lcd_disp_all 26CC                      ___awmod@counter 00C9  
               __size_of_in_adc_init 0024                i2_sys_ticker_irq_hook 286E  
               _LCDDigitalIndexTable FEBB              ??_in_adc_start_and_read 00CB  
                   key_polling@ktemp 00CB                     __end_of_soc_init 28A6  
               __end_of_iic_send_ack 21FA                     _ads1115_read_reg 05B2  
                       __mediumconst FCBA                     __end_of_rtc_init 23CC  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8    __size_of_iic_received_byte_if_ack 0020  
               lcd_disp_get_code@chr 00C5                 lcd_disp_get_code@ret 00C6  
          ?_iic_received_byte_if_ack 0021                            ??_rtc_get 0040  
                          ??_rtc_set 0040             ui_disp_start_cs600@F7583 00F0  
               __end_of_m_int8_2_hex 1EC2                 __end_of_lcd_show_chr 19EE  
                       _pcf8574Value 001A                     _lcd_disp_refresh 1EC2  
                         __accesstop 0060              __end_of__initialization 1A66  
                         ___exp_10@n 00C7             __size_of_m_int16_2_str_4 015E  
         __size_of_key_waite_release 0042         __size_ofi2_rtc_alrm_irq_hook 0002  
                      ___rparam_used 000001                _handler_interrupt_low 0018  
                      _p_prEepromObj 0014                       iic_send_byte@i 00C7  
                     iic_send_byte@x 00C6                       __pcstackCOMRAM 0021  
                       __pidataBANK0 2886       __size_of_ui_disp_adj_xfixed_pt 00B6  
      __end_of_ui_disp_adj_xfixed_pt 11C0      __end_of_handler_interrupt_hight 0C88  
          _key_process_set_down_long 0ED8             ___enter_menu_set_density 2636  
       __end_of_ui_disp_clear_num_dp 2156               ?___enter_menu_set_pose 0021  
                    _key_process_set 2756                _ads1115_init_all_chip 2728  
            in_adc_start_and_read@ch 00CC                   _rtcc_reg_wr_enable 28C4  
                 __size_of_iic_start 003E                 __size_of_key_polling 005C  
               __size_of_key_process 0082          ??_key_shift_loc_fixed_point 0040  
                  lcd_disp_logo@show 00D5                   __size_of_m_mem_cpy 0044  
                  lcd_show_string@t8 00DB                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                         __pbssBANK3 0300                           __pbssBANK4 0400  
 __size_of_key_adj_value_fixed_point 00EA                           _defalutRtc 00F9  
                ?_rtcc_reg_wr_enable 0021             __size_of_sys_ticker_init 0010  
                  _pdiff_prEepromObj 0016                      lcd_disp_level@i 00D9  
        __size_of_lcd_disp_chr_loc_0 00A0          __size_of_lcd_disp_chr_loc_1 00A0  
        __size_of_lcd_disp_chr_loc_2 00A0          __size_of_lcd_disp_chr_loc_3 00A0  
        __size_of_lcd_disp_chr_loc_4 00A0          __size_of_lcd_disp_chr_loc_5 00A0  
        __size_of_lcd_disp_chr_loc_6 00A0          __size_of_lcd_disp_chr_loc_7 00A0  
               _key_process_set_long 28E0       ___enter_menu_set_base_zero@fps 00E2  
                            ?___wmul 00C8         __size_of_ui_disp_start_cs600 009E  
                          ?___exp_10 00C5               ?i2_sys_ticker_irq_hook 0021  
               ??_rtcc_reg_wr_enable 0040                              _ALRMRPT 000F5A  
      __size_of_ui_disp_menu_psw_adj 001E                  ui_disp_rtc_mm_ss@t8 00E6  
                      ?_ads1115_init 00C5                           _lcd_config 26FA  
                          ?_delay_ms 00C9                            ?_delay_us 00C5  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8              _ads1115_read_conversion 21FA  
        __size_of_lcd_disp_level_bar 04D2         __size_of_rtcc_reg_wr_disable 000C  
                            _RTCVALH 000F5D                              _RTCVALL 000F5C  
               ___int32_2_mflot32@mf 00DE                       m_int8_2_hex@t8 00C8  
                          ?_lcd_init 0021          __size_of_lcd_show_string_l0 0044  
        __size_of_lcd_show_string_l1 0042                            ?_iic_stop 0021  
                  __end_of_auchCRCHi FEBB                    __end_of_auchCRCLo FDBB  
          __size_of_key_process_down 003C                    _ui_disp_rtc_mm_ss 11C0  
                      ?_ui_disp_menu 0021    __end_of_key_adj_value_fixed_point 0BBC  
             ?_handler_interrupt_low 0021                   ?_ui_disp_rtc_mm_ss 0021  
                            __Hparam 0000                              __Lparam 0000  
              ?_key_process_set_long 0021                       lcd_show_dp@loc 00D7  
                          ?_soc_init 0021                __size_of_lcd_disp_all 0030  
                          ?_rtc_init 0021            _key_shift_loc_fixed_point 2482  
                  __end_of_iic_start 240A                    ??_m_int16_2_str_4 0040  
                            ___awdiv 0E1A                              ___awmod 1316  
                ??_ui_disp_rtc_mm_ss 0040                              ___lldiv 0F96  
                    __size_of___wmul 0036              __end_of_key_process_set 2780  
                            ___lwdiv 1AF6                              ___lwmod 1F24  
                  __end_of_m_mem_cpy 22C8                            _LCDDATA10 000F70  
                          _LCDDATA11 000F71                            _LCDDATA12 000F72  
                          _LCDDATA20 000F7A                            _LCDDATA13 000F73  
                          _LCDDATA21 000F7B                            _LCDDATA14 000F74  
                          _LCDDATA22 000F7C                            _LCDDATA15 000F75  
                          _LCDDATA23 000F7D                            _LCDDATA16 000F76  
                          _LCDDATA17 000F77                            _LCDDATA18 000F78  
                          _LCDDATA19 000F79                      __CFG_STVREN$OFF 000000  
                         ??___exp_10 0040                              _pcf8574 0001  
                            __pcinit 19EE                __size_of_iic_send_ack 0050  
                            __ramtop 1000                              __ptext0 0C88  
                            __ptext1 18B8                              __ptext2 26CC  
                            __ptext3 22C8                              __ptext4 2240  
                            __ptext5 24F4                              __ptext6 11C0  
                            __ptext7 230A                              __ptext8 1E5E  
                            __ptext9 2044               ?_ads1115_init_all_chip 0021  
                     ??_ads1115_init 0040                  _sys_ticker_irq_hook 2856  
                  ___int32_2_mflot32 08CC             __size_of_lcd_set_com_seg 00C8  
                          _T1CONbits 000FCD                  lcd_set_com_seg@bits 00D4  
                lcd_set_com_seg@show 00CE                     ___awmod@dividend 00C5  
                 ?___int32_2_mflot32 00D2                __size_of_m_int8_2_hex 0064  
                          _LCDPSbits 000FAA                           ??_delay_ms 0040  
                         ??_delay_us 0040                __size_of_lcd_show_chr 0098  
              __end_of_lcd_disp_logo 252A                              _rtc_get 230A  
                            _rtc_set 1052                              main@t16 01A2  
      key_adj_value_fixed_point@dloc 00D7     ads1115_start_conversion@pAds1115 00CD  
  __size_of_ads1115_start_conversion 002A                           ??_lcd_init 0040  
          ?_ads1115_start_conversion 00CD                       __pintcode_body 0BBC  
                         ??_iic_stop 0040            __end_of_ui_disp_rtc_mm_ss 1272  
                       _flashTestbuf FFA3                 end_of_initialization 1A66  
                ??___int32_2_mflot32 00D6              __size_of_key_process_up 0034  
                     ??_ui_disp_menu 0040                         _lcd_disp_all 269C  
                      __Lmediumconst FCBA                              int_func 0BBC  
               ?_sys_ticker_irq_hook 0021                 _ui_disp_clear_num_dp 20FC  
                    ___lldiv@divisor 00C9                __end_of_iic_send_byte 1D22  
                    ___lldiv@counter 00D1             __end_of_ads1115_read_reg 076E  
                       _iic_send_ack 21AA                           _ticker_dly 26CC  
                         ??_soc_init 0040                    ??_sys_ticker_init 0040  
     key_adj_value_fixed_point@value 00D4                           ??_rtc_init 0040  
                            postdec1 000FE5                              postdec2 000FDD  
              __end_of_iic_waite_ack 1E5E                              postinc0 000FEE  
                            postinc2 000FDE                    _lcd_disp_dp_loc_0 2596  
                  _lcd_disp_dp_loc_1 2560                    _lcd_disp_dp_loc_2 252A  
                  _lcd_disp_get_code 1FE6             __size_of_lcd_show_string 006E  
                       _m_int8_2_hex 1E5E            __end_of___int32_2_mflot32 09D2  
                       _lcd_show_chr 1956                     _defultSystemData FF1D  
           __end_of_lcd_disp_refresh 1F24                   ?_lcd_disp_dp_loc_0 0021  
                 ?_lcd_disp_dp_loc_1 0021                   ?_lcd_disp_dp_loc_2 0021  
                 ?_lcd_disp_get_code 0021                  i2_rtc_alrm_irq_hook 28E4  
          ??_ads1115_read_conversion 00D1                          ?_lcd_config 0021  
     __size_of_in_adc_start_and_read 006E        __end_of_in_adc_start_and_read 1C4A  
                ??_lcd_disp_dp_loc_0 0040                  ??_lcd_disp_dp_loc_1 0040  
                ??_lcd_disp_dp_loc_2 0040                 lcd_show_string_l0@t8 00DB  
               lcd_show_string_l1@t8 00DB                  ??_lcd_disp_get_code 0040  
        iic_received_byte_if_ack@ack 00C7            ads1115_write_reg@pAds1115 00C8  
        iic_received_byte_if_ack@ret 00C8   __size_of_key_process_set_down_long 00BE  
                    iic_send_ack@ack 00C5                ??_sys_ticker_irq_hook 002F  
                      ??_lcd_bl_init 0040             __size_of___x_arrange_str 006A  
               ?i2_rtc_alrm_irq_hook 0021                ?_ui_disp_clear_num_dp 0021  
                  _ads1115_write_reg 09D2               ??_key_process_set_long 0040  
                 ?_ads1115_write_reg 00C8           ??___enter_menu_set_density 00C5  
          __end_of_lcd_disp_dp_loc_0 25CC            __end_of_lcd_disp_dp_loc_1 2596  
          __end_of_lcd_disp_dp_loc_2 2560                   iic_received_byte@i 00C6  
          __end_of_lcd_disp_get_code 2044                        ??_lcd_show_dp 0040  
                        _adjLocation 0020                        ??_in_adc_init 0040  
                   ?_key_process_set 0021                           m_mem_cpy@d 00C5  
                         m_mem_cpy@s 00C7              ??___enter_menu_set_pose 00C5  
                     __end_of___wmul 2602                  ??_ads1115_write_reg 0040  
                 lcd_disp_get_code@i 00C7                  start_initialization 19EE  
             ui_disp_start_cs600@buf 00DC               ui_disp_start_cs600@dly 00E2  
           ?_handler_interrupt_hight 0021                      _LCDDigitalTable FEE4  
                  ??_lcd_set_com_seg 00CF          ?___enter_menu_set_base_zero 0021  
         __size_of_ui_disp_rtc_mm_ss 00B2               lcd_disp_chr_loc_0@code 00D5  
             lcd_disp_chr_loc_1@code 00D5               lcd_disp_chr_loc_2@code 00D5  
  __end_of_key_process_set_down_long 0F96               lcd_disp_chr_loc_3@code 00D5  
             lcd_disp_chr_loc_4@code 00D5                  _ui_disp_start_cs600 18B8  
             lcd_disp_chr_loc_5@code 00D5               lcd_disp_chr_loc_6@code 00D5  
             lcd_disp_chr_loc_7@code 00D5                     _key_process_down 240A  
          __end_of_ads1115_write_reg 0AD2                ??i2_rtc_alrm_irq_hook 0021  
           in_adc_start_and_read@ret 00CD                 __end_of_ads1115_init 1316  
            lcd_disp_level_bar@__bar 00D6                     lcd_show_chr@code 00D8  
           ads1115_read_reg@pAds1115 00C9                          ?_ticker_dly 00C5  
                __size_of_lcd_config 002E                 key_waite_release@key 00CF  
                _rtcc_reg_wr_disable 28D0                  __end_of_lcd_bl_init 28E0  
            ??i2_sys_ticker_irq_hook 0021                             ??___wmul 0040  
                        __pdataBANK0 00F0                     __CFG_LPT1OSC$OFF 000000  
               ?_ui_disp_start_cs600 0021           __size_of___int32_2_mflot32 0106  
            __size_of_lcd_disp_level 005C                _ui_disp_adj_xfixed_pt 110A  
               __end_of_ui_disp_menu 27F4             _iic_received_byte_if_ack 2818  
                  __size_of___exp_10 0060                          _ALRMCFGbits 000F5B  
                __end_of_lcd_show_dp 1CB6                   lcd_show_string@str 00D9  
                __end_of_in_adc_init 2818   __size_of_key_shift_loc_fixed_point 003A  
                      ??_key_polling 0040                            _pAdjValue 008B  
                      ??_key_process 0040                          __pbssCOMRAM 0001  
                  ??_lcd_show_string 0040                        __pcstackBANK0 00C5  
                      __pcstackBANK1 01A2                 ?_rtcc_reg_wr_disable 0021  
                       _stRTCCFGbits 000F5F             key_waite_release@timeout 00CD  
                  __size_of_delay_ms 0026                    __size_of_delay_us 0038  
                __CFG_CCP2MX$DEFAULT 000000                       _key_process_up 2602  
            ??_handler_interrupt_low 002F         __end_of_ui_disp_menu_psw_adj 2856  
                ___x_arrange_str@len 00C7                      _m_int16_2_str_4 076E  
                ___x_arrange_str@str 00C5                    __size_of_lcd_init 000E  
             ??_ui_disp_clear_num_dp 0040                    __size_of_iic_stop 003C  
         __end_of_lcd_disp_chr_loc_0 18B8           __end_of_lcd_disp_chr_loc_1 1818  
         __end_of_lcd_disp_chr_loc_2 1778           __end_of_lcd_disp_chr_loc_3 16D8  
         __end_of_lcd_disp_chr_loc_4 1638           __end_of_lcd_disp_chr_loc_5 1598  
         __end_of_lcd_disp_chr_loc_6 14F8           __end_of_lcd_disp_chr_loc_7 1458  
                          _auchCRCHi FDBB                            _auchCRCLo FCBB  
                  ___x_arrange_str@i 00C8                     ___lwdiv@dividend 00C8  
      ads1115_read_conversion@result 00D2         ___enter_menu_set_density@fps 00C7  
         __size_of_lcd_disp_dp_loc_0 0036           __size_of_lcd_disp_dp_loc_1 0036  
         __size_of_lcd_disp_dp_loc_2 0036                            __pintcode 0008  
         __size_of_lcd_disp_get_code 005E                        __pmediumconst FCBA  
                  ??___x_arrange_str 0040                             ?___awdiv 00C5  
                           ?___awmod 00C5                             ?___lldiv 00C5  
            ___mflot32_2_int32@F7574 0083              ??_ads1115_init_all_chip 0040  
              ??_ui_disp_start_cs600 0040                             ?___lwdiv 00C8  
                           ?___lwmod 00CF                            _fpSysData 00F6  
                  __size_of_soc_init 0010                          __pintcodelo 0018  
                  __size_of_rtc_init 003E     __end_of_ads1115_start_conversion 27AA  
                          _dlyTicker 0010          __size_of_rtcc_reg_wr_enable 000C  
                          _iic_start 23CC                  ___int32_2_mflot32@x 00D2  
            __end_of_LCDDigitalTable FF0C                            _m_mem_cpy 2284  
         __end_of_lcd_disp_level_bar 05B2                ??_rtcc_reg_wr_disable 0040  
         __end_of_lcd_show_string_l0 2284           __end_of_lcd_show_string_l1 230A  
  __end_of_key_shift_loc_fixed_point 24BC                          _PADCFG1bits 000F54  
                           ?_rtc_get 0021                             ?_rtc_set 00C5  
             __end_of_key_process_up 2636                  __size_of_ticker_dly 002E  
                   ___lwdiv@quotient 00CD                 ads1115_init@pAds1115 00C5  
                           _LCDDATA0 000FBB                             _LCDDATA1 000FBC  
                           _LCDDATA2 000FBD                             _LCDDATA3 000FBE  
                           _LCDDATA4 000FBF                             _LCDDATA5 000F6B  
                           _LCDDATA6 000F6C                             _LCDDATA7 000F6D  
                           _LCDDATA8 000F6E                             _LCDDATA9 000F6F  
              lcd_set_com_seg@offset 00D3                  __end_of_key_polling 20FC  
                __end_of_key_process 1AF6                   lcd_set_com_seg@com 00D2  
                    _sys_ticker_init 28A6                   lcd_set_com_seg@seg 00CD  
               ui_disp_rtc_mm_ss@buf 00DC           __size_of_ads1115_write_reg 0100  
           __end_of_defultSystemData FFA3         key_adj_value_fixed_point@t16 00D9  
       key_shift_loc_fixed_point@max 00C8         key_shift_loc_fixed_point@loc 00C5  
       key_shift_loc_fixed_point@min 00C7         key_adj_value_fixed_point@loc 00D6  
                     ___wmul@product 00CC                          _lcd_bl_init 28DC  
                          delay_us@i 00C7                    _iic_received_byte 1D8C  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE3bits 000FA3  
         ?_key_adj_value_fixed_point 00D4     __end_of___enter_menu_set_density 266A  
                        _dlyTickerEn 0018                   ?_iic_received_byte 0021  
                           _PIR1bits 000F9E                             _PIR3bits 000FA4  
                  ?_ads1115_read_reg 00C9                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                          _lcd_show_dp 1C4A  
                 ??_ads1115_read_reg 00CC                          _in_adc_init 27F4  
              ___int32_2_mflot32@t32 00DA               ?_ui_disp_adj_xfixed_pt 00DC  
                ??_iic_received_byte 0040               ui_disp_adj_xfixed_pt@x 00DE  
__size_of___enter_menu_set_base_zero 0054                      m_int8_2_hex@str 00C5  
                         ?_iic_start 0021                           _ADCON0bits 000FC2  
                         _ADCON2bits 000FC0                    ___wmul@multiplier 00C8  
                  ?_lcd_disp_refresh 0021                           ?_m_mem_cpy 00C5  
                   m_int16_2_str_4@x 00CF                           rtc_set@rtc 00C5  
                         rtc_set@stp 00C7                         ??_lcd_config 0040  
                 ??_lcd_disp_refresh 0040              __end_of_m_int16_2_str_4 08CC  
                    ?_key_process_up 0021                             _HexTable FF0C  
    ads1115_read_conversion@pAds1115 00CF                          _INTCON2bits 000FF1  
                          copy_data0 1A02                __size_of_ads1115_init 00A4  
              ui_disp_start_cs600@t8 00E3            __end_of_iic_received_byte 1DF6  
                  _rtc_alrm_irq_hook 28E2                           _EECON1bits 000FA6  
                           __Hrparam 0000                      lcd_show_dp@show 00D6  
                 ?_rtc_alrm_irq_hook 0021                      lcd_show_chr@chr 00D6  
                    lcd_show_chr@loc 00D7                  key_waite_release@t8 00D1  
             lcd_disp_level_bar@show 00D5                             __Lrparam 0000  
                 __end_of_lcd_config 2728                __size_of_ui_disp_menu 0024  
             __size_of_lcd_disp_logo 0036                     __size_of___awdiv 00BE  
                     _lcd_disp_level 2044                     __size_of___awmod 00A2  
                   __size_of___lldiv 00BC                             ___exp_10 1F86  
                   __size_of___lwdiv 0078                  ??_rtc_alrm_irq_hook 002F  
                   __size_of___lwmod 0062             __end_of_key_process_down 2446  
                    _lcd_set_com_seg 0D52                         _ads1115Chip0 009F  
                       _ads1115Chip1 008F                             _adjValue 000C  
     __size_of___enter_menu_set_pose 0032                 _ui_disp_menu_psw_adj 2838  
      __end_of___enter_menu_set_pose 269C                             _calibCol 001B  
                           _calibRow 001C                         _ads1115_init 1272  
                     key_process@key 00EF             _ads1115_start_conversion 2780  
                        _key_polling 20A0              __end_of_sys_ticker_init 28B6  
                        _key_process 1A74                             _delay_ms 27AA  
                           _delay_us 24BC               __size_of_iic_send_byte 006C  
                           _glTicker 007F                      ___lwdiv@divisor 00CA  
                           _glbEvent 008D                      ___lwdiv@counter 00CC  
        __end_of_sys_ticker_irq_hook 286E                             __ptext10 00E0  
                           __ptext11 2896                             __ptext20 28DC  
                           __ptext12 28A6                             __ptext21 1A74  
                           __ptext13 238E                             __ptext30 1458  
                           __ptext22 27D0                             __ptext14 1052  
                           __ptext31 14F8                             __ptext23 2838  
                           __ptext15 28C4                             __ptext40 2596  
                           __ptext32 1598                             __ptext24 110A  
                           __ptext16 28D0                             __ptext41 0D52  
                           __ptext33 1638                             __ptext25 20FC  
                           __ptext17 28B6                             __ptext50 27AA  
                           __ptext42 2284                             __ptext34 16D8  
                           __ptext26 1B6E                             __ptext18 26FA  
                           __ptext51 2602                             __ptext43 076E  
                           __ptext35 1778                             __ptext27 1956  
                           __ptext19 269C                             __ptext60 2636  
                           __ptext52 0AD2                             __ptext44 1316  
                           __ptext36 1818                             __ptext28 1FE6  
                           __ptext61 2156                             __ptext53 25CC  
                           __ptext45 0E1A                             __ptext37 1C4A  
                           __ptext29 13B8                             __ptext70 2780  
                           __ptext62 08CC                             __ptext54 1F24  
                           __ptext46 1EC2                             __ptext38 252A  
                           __ptext71 09D2                             __ptext63 0F96  
                           __ptext55 1AF6                             __ptext47 1D22  
                           __ptext39 2560                             __ptext80 1D8C  
                           __ptext72 21FA                             __ptext64 2756  
                           __ptext56 1F86                             __ptext48 234C  
                           __ptext81 2728                             __ptext73 05B2  
                           __ptext65 240A                             __ptext57 28E0  
                           __ptext49 20A0                             __ptext82 1272  
                           __ptext74 23CC                             __ptext66 2482  
                           __ptext58 0ED8                             __ptext75 1CB6  
                           __ptext67 1BDC                             __ptext59 266A  
                           __ptext84 2856                             __ptext76 1DF6  
                           __ptext68 24BC                             __ptext85 28E2  
                           __ptext77 2446                             __ptext69 27F4  
                           __ptext78 2818                             __ptext87 286E  
                           __ptext79 21AA                             __ptext88 28E4  
                           __ptext89 0000                     __size_of_rtc_get 0042  
                   __size_of_rtc_set 00B8                             _lcd_init 28B6  
              _in_adc_start_and_read 1BDC                             _iic_stop 2446  
             __size_of_iic_waite_ack 0068                             _keyValue 008E  
          __end_of_rtc_alrm_irq_hook 28E4                        __size_of_main 00CA  
                       _ui_disp_menu 27D0                             _passWord 001E  
   __size_of_handler_interrupt_hight 0C80                         ??_ticker_dly 0040  
      __size_of_key_process_set_long 0002                             _soc_init 2896  
                       ticker_dly@ms 00C5           ??_iic_received_byte_if_ack 0040  
             __end_of_lcd_disp_level 20A0                             _rtc_init 238E  
             ads1115_write_reg@value 00CB                            rtc_get@t8 00C5  
                           int$flags 0040                      _lcd_show_string 1B6E  
     __size_ofi2_sys_ticker_irq_hook 0018        __end_ofi2_sys_ticker_irq_hook 2886  
           ?_ads1115_read_conversion 00CF                ?_ui_disp_menu_psw_adj 0021  
                        ??_iic_start 0040                          delay_ms@dly 00C9  
                ads1115_init@slvaddr 00C7                          ??_m_mem_cpy 0040  
                        delay_us@dly 00C5                           _INTCONbits 000FF2  
 __end_of___enter_menu_set_base_zero 21AA           ___enter_menu_set_base_zero 2156  
           __size_of_key_process_set 002A    __size_of___enter_menu_set_density 0034  
              lcd_disp_level_bar@bar 00D7            ?___enter_menu_set_density 0021  
               iic_waite_ack@timeout 00C5                __CFG_RTCSOSC$T1OSCREF 000000  
                   ?_m_int16_2_str_4 00CD                        key_polling@t8 00CC  
        __end_ofi2_rtc_alrm_irq_hook 28E6                        _lcd_disp_logo 24F4  
                 __end_of_ticker_dly 26FA                             intlevel1 0000  
                           intlevel2 0000                 ads1115_read_reg@addr 00CB  
                      key_process@tm 00ED           __size_of_iic_received_byte 006A  
                    ___x_arrange_str 1D22                     ___lwmod@dividend 00CF  
         ?_key_process_set_down_long 0021                     ___lldiv@dividend 00C5  
     __size_of_handler_interrupt_low 00C4        __end_of_handler_interrupt_low 00DC  
                         _OSCCONbits 000FD3                        _iic_send_byte 1CB6  
              ads1115_write_reg@addr 00CA              __end_of_lcd_set_com_seg 0E1A  
                    ?_lcd_disp_level 0021                        _iic_waite_ack 1DF6  
                 _lcd_disp_chr_loc_0 1818                   _lcd_disp_chr_loc_1 1778  
                 _lcd_disp_chr_loc_2 16D8                   _lcd_disp_chr_loc_3 1638  
                 _lcd_disp_chr_loc_4 1598                   _lcd_disp_chr_loc_5 14F8  
                 _lcd_disp_chr_loc_6 1458                   _lcd_disp_chr_loc_7 13B8  
     __size_of_ads1115_init_all_chip 002E        __end_of_ads1115_init_all_chip 2756  
                         _RTCCFGbits 000F5F                  ads1115_read_reg@t16 00CD  
                   ___lldiv@quotient 00CD                      ___lwmod@divisor 00D1  
            ___int32_2_mflot32@F7569 0087                      ___lwmod@counter 00D3  
                ?_lcd_disp_chr_loc_0 0021                  ?_lcd_disp_chr_loc_1 0021  
                ?_lcd_disp_chr_loc_2 0021                  ?_lcd_disp_chr_loc_3 0021  
                ?_lcd_disp_chr_loc_4 0021                  ?_lcd_disp_chr_loc_5 0021  
                ?_lcd_disp_chr_loc_6 0021                  ?_lcd_disp_chr_loc_7 0021  
                   ?_sys_ticker_init 0021                       ?_lcd_disp_logo 0021  
             ?_in_adc_start_and_read 00C9           __size_of_rtc_alrm_irq_hook 0002  
                      ?_lcd_disp_all 0021                   _lcd_disp_level_bar 00E0  
                       ?_lcd_bl_init 0021             ui_disp_adj_xfixed_pt@buf 00E3  
           ui_disp_adj_xfixed_pt@loc 00E0              __end_of_lcd_show_string 1BDC  
           ui_disp_adj_xfixed_pt@str 00DC                   _lcd_show_string_l0 2240  
                 _lcd_show_string_l1 22C8        __size_of_ui_disp_clear_num_dp 005A  
        __end_of_ui_disp_start_cs600 1956                 ??_lcd_disp_chr_loc_0 0040  
               ??_lcd_disp_chr_loc_1 0040                 ??_lcd_disp_chr_loc_2 0040  
               ??_lcd_disp_chr_loc_3 0040                 ??_lcd_disp_chr_loc_4 0040  
               ??_lcd_disp_chr_loc_5 0040                 ??_lcd_disp_chr_loc_6 0040  
               ??_lcd_disp_chr_loc_7 0040                       ?_iic_send_byte 0021  
        ??_key_adj_value_fixed_point 0040                        ?_iic_send_ack 0021  
    __end_of_ads1115_read_conversion 2240              ??_ui_disp_adj_xfixed_pt 00E1  
                ?_lcd_disp_level_bar 00D5  
