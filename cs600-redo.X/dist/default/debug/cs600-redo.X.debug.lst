

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Sep 26 20:33:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1,group=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=1
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,group=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1,group=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1
   239                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   240                           	psect	text218,global,reloc=2,class=CODE,delta=1
   241                           	psect	text219,global,reloc=2,class=CODE,delta=1
   242                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   243                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   249                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   250  0000                     
   251                           ; Version 1.41
   252                           ; Generated 25/01/2017 GMT
   253                           ; 
   254                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   255                           ; All rights reserved.
   256                           ; 
   257                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   258                           ; 
   259                           ; Redistribution and use in source and binary forms, with or without modification, are
   260                           ; permitted provided that the following conditions are met:
   261                           ; 
   262                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   263                           ;        conditions and the following disclaimer.
   264                           ; 
   265                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   266                           ;        of conditions and the following disclaimer in the documentation and/or other
   267                           ;        materials provided with the distribution.
   268                           ; 
   269                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   270                           ;        software without specific prior written permission.
   271                           ; 
   272                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   273                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   274                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   275                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   276                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   277                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   278                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   279                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   280                           ; 
   281                           ; 
   282                           ; Code-generator required, PIC18F86J93 Definitions
   283                           ; 
   284                           ; SFR Addresses
   285  0000                     
   286                           	psect	idataBANK0
   287  009CBE                     __pidataBANK0:
   288                           	opt stack 0
   289                           
   290                           ;initializer for _glNoEventTimeOut
   291  009CBE  1E                 	db	30
   292                           
   293                           	psect	idataBANK1
   294  009C74                     __pidataBANK1:
   295                           	opt stack 0
   296                           
   297                           ;initializer for ui_disp_start_cs600@F7726
   298  009C74  2D                 	db	45
   299  009C75  30                 	db	48
   300  009C76  30                 	db	48
   301  009C77  2D                 	db	45
   302  009C78  00                 	db	0
   303  009C79  00                 	db	0
   304                           
   305                           ;initializer for _defalutRtc
   306  009C7A  17                 	db	23
   307  009C7B  07                 	db	7
   308  009C7C  31                 	db	49
   309  009C7D  23                 	db	35
   310  009C7E  55                 	db	85
   311  009C7F  55                 	db	85
   312  009C80  02                 	db	2
   313                           
   314                           	psect	mediumconst
   315  00ECB0                     __pmediumconst:
   316                           	opt stack 0
   317  00ECB0  00                 	db	0
   318  00ECB1                     _auchCRCLo:
   319                           	opt stack 0
   320  00ECB1  00                 	db	0
   321  00ECB2  C0                 	db	192
   322  00ECB3  C1                 	db	193
   323  00ECB4  01                 	db	1
   324  00ECB5  C3                 	db	195
   325  00ECB6  03                 	db	3
   326  00ECB7  02                 	db	2
   327  00ECB8  C2                 	db	194
   328  00ECB9  C6                 	db	198
   329  00ECBA  06                 	db	6
   330  00ECBB  07                 	db	7
   331  00ECBC  C7                 	db	199
   332  00ECBD  05                 	db	5
   333  00ECBE  C5                 	db	197
   334  00ECBF  C4                 	db	196
   335  00ECC0  04                 	db	4
   336  00ECC1  CC                 	db	204
   337  00ECC2  0C                 	db	12
   338  00ECC3  0D                 	db	13
   339  00ECC4  CD                 	db	205
   340  00ECC5  0F                 	db	15
   341  00ECC6  CF                 	db	207
   342  00ECC7  CE                 	db	206
   343  00ECC8  0E                 	db	14
   344  00ECC9  0A                 	db	10
   345  00ECCA  CA                 	db	202
   346  00ECCB  CB                 	db	203
   347  00ECCC  0B                 	db	11
   348  00ECCD  C9                 	db	201
   349  00ECCE  09                 	db	9
   350  00ECCF  08                 	db	8
   351  00ECD0  C8                 	db	200
   352  00ECD1  D8                 	db	216
   353  00ECD2  18                 	db	24
   354  00ECD3  19                 	db	25
   355  00ECD4  D9                 	db	217
   356  00ECD5  1B                 	db	27
   357  00ECD6  DB                 	db	219
   358  00ECD7  DA                 	db	218
   359  00ECD8  1A                 	db	26
   360  00ECD9  1E                 	db	30
   361  00ECDA  DE                 	db	222
   362  00ECDB  DF                 	db	223
   363  00ECDC  1F                 	db	31
   364  00ECDD  DD                 	db	221
   365  00ECDE  1D                 	db	29
   366  00ECDF  1C                 	db	28
   367  00ECE0  DC                 	db	220
   368  00ECE1  14                 	db	20
   369  00ECE2  D4                 	db	212
   370  00ECE3  D5                 	db	213
   371  00ECE4  15                 	db	21
   372  00ECE5  D7                 	db	215
   373  00ECE6  17                 	db	23
   374  00ECE7  16                 	db	22
   375  00ECE8  D6                 	db	214
   376  00ECE9  D2                 	db	210
   377  00ECEA  12                 	db	18
   378  00ECEB  13                 	db	19
   379  00ECEC  D3                 	db	211
   380  00ECED  11                 	db	17
   381  00ECEE  D1                 	db	209
   382  00ECEF  D0                 	db	208
   383  00ECF0  10                 	db	16
   384  00ECF1  F0                 	db	240
   385  00ECF2  30                 	db	48
   386  00ECF3  31                 	db	49
   387  00ECF4  F1                 	db	241
   388  00ECF5  33                 	db	51
   389  00ECF6  F3                 	db	243
   390  00ECF7  F2                 	db	242
   391  00ECF8  32                 	db	50
   392  00ECF9  36                 	db	54
   393  00ECFA  F6                 	db	246
   394  00ECFB  F7                 	db	247
   395  00ECFC  37                 	db	55
   396  00ECFD  F5                 	db	245
   397  00ECFE  35                 	db	53
   398  00ECFF  34                 	db	52
   399  00ED00  F4                 	db	244
   400  00ED01  3C                 	db	60
   401  00ED02  FC                 	db	252
   402  00ED03  FD                 	db	253
   403  00ED04  3D                 	db	61
   404  00ED05  FF                 	db	255
   405  00ED06  3F                 	db	63
   406  00ED07  3E                 	db	62
   407  00ED08  FE                 	db	254
   408  00ED09  FA                 	db	250
   409  00ED0A  3A                 	db	58
   410  00ED0B  3B                 	db	59
   411  00ED0C  FB                 	db	251
   412  00ED0D  39                 	db	57
   413  00ED0E  F9                 	db	249
   414  00ED0F  F8                 	db	248
   415  00ED10  38                 	db	56
   416  00ED11  28                 	db	40
   417  00ED12  E8                 	db	232
   418  00ED13  E9                 	db	233
   419  00ED14  29                 	db	41
   420  00ED15  EB                 	db	235
   421  00ED16  2B                 	db	43
   422  00ED17  2A                 	db	42
   423  00ED18  EA                 	db	234
   424  00ED19  EE                 	db	238
   425  00ED1A  2E                 	db	46
   426  00ED1B  2F                 	db	47
   427  00ED1C  EF                 	db	239
   428  00ED1D  2D                 	db	45
   429  00ED1E  ED                 	db	237
   430  00ED1F  EC                 	db	236
   431  00ED20  2C                 	db	44
   432  00ED21  E4                 	db	228
   433  00ED22  24                 	db	36
   434  00ED23  25                 	db	37
   435  00ED24  E5                 	db	229
   436  00ED25  27                 	db	39
   437  00ED26  E7                 	db	231
   438  00ED27  E6                 	db	230
   439  00ED28  26                 	db	38
   440  00ED29  22                 	db	34
   441  00ED2A  E2                 	db	226
   442  00ED2B  E3                 	db	227
   443  00ED2C  23                 	db	35
   444  00ED2D  E1                 	db	225
   445  00ED2E  21                 	db	33
   446  00ED2F  20                 	db	32
   447  00ED30  E0                 	db	224
   448  00ED31  A0                 	db	160
   449  00ED32  60                 	db	96
   450  00ED33  61                 	db	97
   451  00ED34  A1                 	db	161
   452  00ED35  63                 	db	99
   453  00ED36  A3                 	db	163
   454  00ED37  A2                 	db	162
   455  00ED38  62                 	db	98
   456  00ED39  66                 	db	102
   457  00ED3A  A6                 	db	166
   458  00ED3B  A7                 	db	167
   459  00ED3C  67                 	db	103
   460  00ED3D  A5                 	db	165
   461  00ED3E  65                 	db	101
   462  00ED3F  64                 	db	100
   463  00ED40  A4                 	db	164
   464  00ED41  6C                 	db	108
   465  00ED42  AC                 	db	172
   466  00ED43  AD                 	db	173
   467  00ED44  6D                 	db	109
   468  00ED45  AF                 	db	175
   469  00ED46  6F                 	db	111
   470  00ED47  6E                 	db	110
   471  00ED48  AE                 	db	174
   472  00ED49  AA                 	db	170
   473  00ED4A  6A                 	db	106
   474  00ED4B  6B                 	db	107
   475  00ED4C  AB                 	db	171
   476  00ED4D  69                 	db	105
   477  00ED4E  A9                 	db	169
   478  00ED4F  A8                 	db	168
   479  00ED50  68                 	db	104
   480  00ED51  78                 	db	120
   481  00ED52  B8                 	db	184
   482  00ED53  B9                 	db	185
   483  00ED54  79                 	db	121
   484  00ED55  BB                 	db	187
   485  00ED56  7B                 	db	123
   486  00ED57  7A                 	db	122
   487  00ED58  BA                 	db	186
   488  00ED59  BE                 	db	190
   489  00ED5A  7E                 	db	126
   490  00ED5B  7F                 	db	127
   491  00ED5C  BF                 	db	191
   492  00ED5D  7D                 	db	125
   493  00ED5E  BD                 	db	189
   494  00ED5F  BC                 	db	188
   495  00ED60  7C                 	db	124
   496  00ED61  B4                 	db	180
   497  00ED62  74                 	db	116
   498  00ED63  75                 	db	117
   499  00ED64  B5                 	db	181
   500  00ED65  77                 	db	119
   501  00ED66  B7                 	db	183
   502  00ED67  B6                 	db	182
   503  00ED68  76                 	db	118
   504  00ED69  72                 	db	114
   505  00ED6A  B2                 	db	178
   506  00ED6B  B3                 	db	179
   507  00ED6C  73                 	db	115
   508  00ED6D  B1                 	db	177
   509  00ED6E  71                 	db	113
   510  00ED6F  70                 	db	112
   511  00ED70  B0                 	db	176
   512  00ED71  50                 	db	80
   513  00ED72  90                 	db	144
   514  00ED73  91                 	db	145
   515  00ED74  51                 	db	81
   516  00ED75  93                 	db	147
   517  00ED76  53                 	db	83
   518  00ED77  52                 	db	82
   519  00ED78  92                 	db	146
   520  00ED79  96                 	db	150
   521  00ED7A  56                 	db	86
   522  00ED7B  57                 	db	87
   523  00ED7C  97                 	db	151
   524  00ED7D  55                 	db	85
   525  00ED7E  95                 	db	149
   526  00ED7F  94                 	db	148
   527  00ED80  54                 	db	84
   528  00ED81  9C                 	db	156
   529  00ED82  5C                 	db	92
   530  00ED83  5D                 	db	93
   531  00ED84  9D                 	db	157
   532  00ED85  5F                 	db	95
   533  00ED86  9F                 	db	159
   534  00ED87  9E                 	db	158
   535  00ED88  5E                 	db	94
   536  00ED89  5A                 	db	90
   537  00ED8A  9A                 	db	154
   538  00ED8B  9B                 	db	155
   539  00ED8C  5B                 	db	91
   540  00ED8D  99                 	db	153
   541  00ED8E  59                 	db	89
   542  00ED8F  58                 	db	88
   543  00ED90  98                 	db	152
   544  00ED91  88                 	db	136
   545  00ED92  48                 	db	72
   546  00ED93  49                 	db	73
   547  00ED94  89                 	db	137
   548  00ED95  4B                 	db	75
   549  00ED96  8B                 	db	139
   550  00ED97  8A                 	db	138
   551  00ED98  4A                 	db	74
   552  00ED99  4E                 	db	78
   553  00ED9A  8E                 	db	142
   554  00ED9B  8F                 	db	143
   555  00ED9C  4F                 	db	79
   556  00ED9D  8D                 	db	141
   557  00ED9E  4D                 	db	77
   558  00ED9F  4C                 	db	76
   559  00EDA0  8C                 	db	140
   560  00EDA1  44                 	db	68
   561  00EDA2  84                 	db	132
   562  00EDA3  85                 	db	133
   563  00EDA4  45                 	db	69
   564  00EDA5  87                 	db	135
   565  00EDA6  47                 	db	71
   566  00EDA7  46                 	db	70
   567  00EDA8  86                 	db	134
   568  00EDA9  82                 	db	130
   569  00EDAA  42                 	db	66
   570  00EDAB  43                 	db	67
   571  00EDAC  83                 	db	131
   572  00EDAD  41                 	db	65
   573  00EDAE  81                 	db	129
   574  00EDAF  80                 	db	128
   575  00EDB0  40                 	db	64
   576  00EDB1                     __end_of_auchCRCLo:
   577                           	opt stack 0
   578  00EDB1                     _auchCRCHi:
   579                           	opt stack 0
   580  00EDB1  00                 	db	0
   581  00EDB2  C1                 	db	193
   582  00EDB3  81                 	db	129
   583  00EDB4  40                 	db	64
   584  00EDB5  01                 	db	1
   585  00EDB6  C0                 	db	192
   586  00EDB7  80                 	db	128
   587  00EDB8  41                 	db	65
   588  00EDB9  01                 	db	1
   589  00EDBA  C0                 	db	192
   590  00EDBB  80                 	db	128
   591  00EDBC  41                 	db	65
   592  00EDBD  00                 	db	0
   593  00EDBE  C1                 	db	193
   594  00EDBF  81                 	db	129
   595  00EDC0  40                 	db	64
   596  00EDC1  01                 	db	1
   597  00EDC2  C0                 	db	192
   598  00EDC3  80                 	db	128
   599  00EDC4  41                 	db	65
   600  00EDC5  00                 	db	0
   601  00EDC6  C1                 	db	193
   602  00EDC7  81                 	db	129
   603  00EDC8  40                 	db	64
   604  00EDC9  00                 	db	0
   605  00EDCA  C1                 	db	193
   606  00EDCB  81                 	db	129
   607  00EDCC  40                 	db	64
   608  00EDCD  01                 	db	1
   609  00EDCE  C0                 	db	192
   610  00EDCF  80                 	db	128
   611  00EDD0  41                 	db	65
   612  00EDD1  01                 	db	1
   613  00EDD2  C0                 	db	192
   614  00EDD3  80                 	db	128
   615  00EDD4  41                 	db	65
   616  00EDD5  00                 	db	0
   617  00EDD6  C1                 	db	193
   618  00EDD7  81                 	db	129
   619  00EDD8  40                 	db	64
   620  00EDD9  00                 	db	0
   621  00EDDA  C1                 	db	193
   622  00EDDB  81                 	db	129
   623  00EDDC  40                 	db	64
   624  00EDDD  01                 	db	1
   625  00EDDE  C0                 	db	192
   626  00EDDF  80                 	db	128
   627  00EDE0  41                 	db	65
   628  00EDE1  00                 	db	0
   629  00EDE2  C1                 	db	193
   630  00EDE3  81                 	db	129
   631  00EDE4  40                 	db	64
   632  00EDE5  01                 	db	1
   633  00EDE6  C0                 	db	192
   634  00EDE7  80                 	db	128
   635  00EDE8  41                 	db	65
   636  00EDE9  01                 	db	1
   637  00EDEA  C0                 	db	192
   638  00EDEB  80                 	db	128
   639  00EDEC  41                 	db	65
   640  00EDED  00                 	db	0
   641  00EDEE  C1                 	db	193
   642  00EDEF  81                 	db	129
   643  00EDF0  40                 	db	64
   644  00EDF1  01                 	db	1
   645  00EDF2  C0                 	db	192
   646  00EDF3  80                 	db	128
   647  00EDF4  41                 	db	65
   648  00EDF5  00                 	db	0
   649  00EDF6  C1                 	db	193
   650  00EDF7  81                 	db	129
   651  00EDF8  40                 	db	64
   652  00EDF9  00                 	db	0
   653  00EDFA  C1                 	db	193
   654  00EDFB  81                 	db	129
   655  00EDFC  40                 	db	64
   656  00EDFD  01                 	db	1
   657  00EDFE  C0                 	db	192
   658  00EDFF  80                 	db	128
   659  00EE00  41                 	db	65
   660  00EE01  00                 	db	0
   661  00EE02  C1                 	db	193
   662  00EE03  81                 	db	129
   663  00EE04  40                 	db	64
   664  00EE05  01                 	db	1
   665  00EE06  C0                 	db	192
   666  00EE07  80                 	db	128
   667  00EE08  41                 	db	65
   668  00EE09  01                 	db	1
   669  00EE0A  C0                 	db	192
   670  00EE0B  80                 	db	128
   671  00EE0C  41                 	db	65
   672  00EE0D  00                 	db	0
   673  00EE0E  C1                 	db	193
   674  00EE0F  81                 	db	129
   675  00EE10  40                 	db	64
   676  00EE11  00                 	db	0
   677  00EE12  C1                 	db	193
   678  00EE13  81                 	db	129
   679  00EE14  40                 	db	64
   680  00EE15  01                 	db	1
   681  00EE16  C0                 	db	192
   682  00EE17  80                 	db	128
   683  00EE18  41                 	db	65
   684  00EE19  01                 	db	1
   685  00EE1A  C0                 	db	192
   686  00EE1B  80                 	db	128
   687  00EE1C  41                 	db	65
   688  00EE1D  00                 	db	0
   689  00EE1E  C1                 	db	193
   690  00EE1F  81                 	db	129
   691  00EE20  40                 	db	64
   692  00EE21  01                 	db	1
   693  00EE22  C0                 	db	192
   694  00EE23  80                 	db	128
   695  00EE24  41                 	db	65
   696  00EE25  00                 	db	0
   697  00EE26  C1                 	db	193
   698  00EE27  81                 	db	129
   699  00EE28  40                 	db	64
   700  00EE29  00                 	db	0
   701  00EE2A  C1                 	db	193
   702  00EE2B  81                 	db	129
   703  00EE2C  40                 	db	64
   704  00EE2D  01                 	db	1
   705  00EE2E  C0                 	db	192
   706  00EE2F  80                 	db	128
   707  00EE30  41                 	db	65
   708  00EE31  01                 	db	1
   709  00EE32  C0                 	db	192
   710  00EE33  80                 	db	128
   711  00EE34  41                 	db	65
   712  00EE35  00                 	db	0
   713  00EE36  C1                 	db	193
   714  00EE37  81                 	db	129
   715  00EE38  40                 	db	64
   716  00EE39  00                 	db	0
   717  00EE3A  C1                 	db	193
   718  00EE3B  81                 	db	129
   719  00EE3C  40                 	db	64
   720  00EE3D  01                 	db	1
   721  00EE3E  C0                 	db	192
   722  00EE3F  80                 	db	128
   723  00EE40  41                 	db	65
   724  00EE41  00                 	db	0
   725  00EE42  C1                 	db	193
   726  00EE43  81                 	db	129
   727  00EE44  40                 	db	64
   728  00EE45  01                 	db	1
   729  00EE46  C0                 	db	192
   730  00EE47  80                 	db	128
   731  00EE48  41                 	db	65
   732  00EE49  01                 	db	1
   733  00EE4A  C0                 	db	192
   734  00EE4B  80                 	db	128
   735  00EE4C  41                 	db	65
   736  00EE4D  00                 	db	0
   737  00EE4E  C1                 	db	193
   738  00EE4F  81                 	db	129
   739  00EE50  40                 	db	64
   740  00EE51  00                 	db	0
   741  00EE52  C1                 	db	193
   742  00EE53  81                 	db	129
   743  00EE54  40                 	db	64
   744  00EE55  01                 	db	1
   745  00EE56  C0                 	db	192
   746  00EE57  80                 	db	128
   747  00EE58  41                 	db	65
   748  00EE59  01                 	db	1
   749  00EE5A  C0                 	db	192
   750  00EE5B  80                 	db	128
   751  00EE5C  41                 	db	65
   752  00EE5D  00                 	db	0
   753  00EE5E  C1                 	db	193
   754  00EE5F  81                 	db	129
   755  00EE60  40                 	db	64
   756  00EE61  01                 	db	1
   757  00EE62  C0                 	db	192
   758  00EE63  80                 	db	128
   759  00EE64  41                 	db	65
   760  00EE65  00                 	db	0
   761  00EE66  C1                 	db	193
   762  00EE67  81                 	db	129
   763  00EE68  40                 	db	64
   764  00EE69  00                 	db	0
   765  00EE6A  C1                 	db	193
   766  00EE6B  81                 	db	129
   767  00EE6C  40                 	db	64
   768  00EE6D  01                 	db	1
   769  00EE6E  C0                 	db	192
   770  00EE6F  80                 	db	128
   771  00EE70  41                 	db	65
   772  00EE71  00                 	db	0
   773  00EE72  C1                 	db	193
   774  00EE73  81                 	db	129
   775  00EE74  40                 	db	64
   776  00EE75  01                 	db	1
   777  00EE76  C0                 	db	192
   778  00EE77  80                 	db	128
   779  00EE78  41                 	db	65
   780  00EE79  01                 	db	1
   781  00EE7A  C0                 	db	192
   782  00EE7B  80                 	db	128
   783  00EE7C  41                 	db	65
   784  00EE7D  00                 	db	0
   785  00EE7E  C1                 	db	193
   786  00EE7F  81                 	db	129
   787  00EE80  40                 	db	64
   788  00EE81  01                 	db	1
   789  00EE82  C0                 	db	192
   790  00EE83  80                 	db	128
   791  00EE84  41                 	db	65
   792  00EE85  00                 	db	0
   793  00EE86  C1                 	db	193
   794  00EE87  81                 	db	129
   795  00EE88  40                 	db	64
   796  00EE89  00                 	db	0
   797  00EE8A  C1                 	db	193
   798  00EE8B  81                 	db	129
   799  00EE8C  40                 	db	64
   800  00EE8D  01                 	db	1
   801  00EE8E  C0                 	db	192
   802  00EE8F  80                 	db	128
   803  00EE90  41                 	db	65
   804  00EE91  01                 	db	1
   805  00EE92  C0                 	db	192
   806  00EE93  80                 	db	128
   807  00EE94  41                 	db	65
   808  00EE95  00                 	db	0
   809  00EE96  C1                 	db	193
   810  00EE97  81                 	db	129
   811  00EE98  40                 	db	64
   812  00EE99  00                 	db	0
   813  00EE9A  C1                 	db	193
   814  00EE9B  81                 	db	129
   815  00EE9C  40                 	db	64
   816  00EE9D  01                 	db	1
   817  00EE9E  C0                 	db	192
   818  00EE9F  80                 	db	128
   819  00EEA0  41                 	db	65
   820  00EEA1  00                 	db	0
   821  00EEA2  C1                 	db	193
   822  00EEA3  81                 	db	129
   823  00EEA4  40                 	db	64
   824  00EEA5  01                 	db	1
   825  00EEA6  C0                 	db	192
   826  00EEA7  80                 	db	128
   827  00EEA8  41                 	db	65
   828  00EEA9  01                 	db	1
   829  00EEAA  C0                 	db	192
   830  00EEAB  80                 	db	128
   831  00EEAC  41                 	db	65
   832  00EEAD  00                 	db	0
   833  00EEAE  C1                 	db	193
   834  00EEAF  81                 	db	129
   835  00EEB0  40                 	db	64
   836  00EEB1                     __end_of_auchCRCHi:
   837                           	opt stack 0
   838  00EEB1                     _LCDDigitalIndexTable:
   839                           	opt stack 0
   840  00EEB1  30                 	db	48
   841  00EEB2  31                 	db	49
   842  00EEB3  32                 	db	50
   843  00EEB4  33                 	db	51
   844  00EEB5  34                 	db	52
   845  00EEB6  35                 	db	53
   846  00EEB7  36                 	db	54
   847  00EEB8  37                 	db	55
   848  00EEB9  38                 	db	56
   849  00EEBA  39                 	db	57
   850  00EEBB  61                 	db	97
   851  00EEBC  62                 	db	98
   852  00EEBD  63                 	db	99
   853  00EEBE  64                 	db	100
   854  00EEBF  65                 	db	101
   855  00EEC0  66                 	db	102
   856  00EEC1  67                 	db	103
   857  00EEC2  68                 	db	104
   858  00EEC3  69                 	db	105
   859  00EEC4  6A                 	db	106
   860  00EEC5  6B                 	db	107
   861  00EEC6  6C                 	db	108
   862  00EEC7  6D                 	db	109
   863  00EEC8  6E                 	db	110
   864  00EEC9  6F                 	db	111
   865  00EECA  70                 	db	112
   866  00EECB  71                 	db	113
   867  00EECC  72                 	db	114
   868  00EECD  73                 	db	115
   869  00EECE  74                 	db	116
   870  00EECF  75                 	db	117
   871  00EED0  76                 	db	118
   872  00EED1  77                 	db	119
   873  00EED2  78                 	db	120
   874  00EED3  79                 	db	121
   875  00EED4  7A                 	db	122
   876  00EED5  2E                 	db	46
   877  00EED6  2D                 	db	45
   878  00EED7  3A                 	db	58
   879  00EED8  20                 	db	32
   880  00EED9  47                 	db	71
   881  00EEDA  48                 	db	72
   882  00EEDB  00                 	db	0
   883  00EEDC                     __end_of_LCDDigitalIndexTable:
   884                           	opt stack 0
   885  00EEDC                     _LCDDigitalTable:
   886                           	opt stack 0
   887  00EEDC  3F                 	db	63
   888  00EEDD  06                 	db	6
   889  00EEDE  5B                 	db	91
   890  00EEDF  4F                 	db	79
   891  00EEE0  66                 	db	102
   892  00EEE1  6D                 	db	109
   893  00EEE2  7D                 	db	125
   894  00EEE3  07                 	db	7
   895  00EEE4  7F                 	db	127
   896  00EEE5  6F                 	db	111
   897  00EEE6  77                 	db	119
   898  00EEE7  7C                 	db	124
   899  00EEE8  39                 	db	57
   900  00EEE9  5E                 	db	94
   901  00EEEA  79                 	db	121
   902  00EEEB  71                 	db	113
   903  00EEEC  6F                 	db	111
   904  00EEED  74                 	db	116
   905  00EEEE  06                 	db	6
   906  00EEEF  0E                 	db	14
   907  00EEF0  7A                 	db	122
   908  00EEF1  38                 	db	56
   909  00EEF2  00                 	db	0
   910  00EEF3  37                 	db	55
   911  00EEF4  5C                 	db	92
   912  00EEF5  73                 	db	115
   913  00EEF6  67                 	db	103
   914  00EEF7  50                 	db	80
   915  00EEF8  6D                 	db	109
   916  00EEF9  78                 	db	120
   917  00EEFA  3E                 	db	62
   918  00EEFB  00                 	db	0
   919  00EEFC  00                 	db	0
   920  00EEFD  00                 	db	0
   921  00EEFE  6E                 	db	110
   922  00EEFF  5B                 	db	91
   923  00EF00  40                 	db	64
   924  00EF01  40                 	db	64
   925  00EF02  48                 	db	72
   926  00EF03  00                 	db	0
   927  00EF04  3D                 	db	61
   928  00EF05  76                 	db	118
   929  00EF06                     __end_of_LCDDigitalTable:
   930                           	opt stack 0
   931  00EF06                     _HexTable:
   932                           	opt stack 0
   933  00EF06  30                 	db	48
   934  00EF07  31                 	db	49
   935  00EF08  32                 	db	50
   936  00EF09  33                 	db	51
   937  00EF0A  34                 	db	52
   938  00EF0B  35                 	db	53
   939  00EF0C  36                 	db	54
   940  00EF0D  37                 	db	55
   941  00EF0E  38                 	db	56
   942  00EF0F  39                 	db	57
   943  00EF10  61                 	db	97
   944  00EF11  62                 	db	98
   945  00EF12  63                 	db	99
   946  00EF13  64                 	db	100
   947  00EF14  65                 	db	101
   948  00EF15  66                 	db	102
   949  00EF16  00                 	db	0
   950  00EF17                     __end_of_HexTable:
   951                           	opt stack 0
   952  00EF17                     _hKel:
   953                           	opt stack 0
   954  00EF17  0000               	dw	0
   955  00EF19  0000               	dw	0
   956  00EF1B  4952               	dw	18770
   957  00EF1D  399D               	dw	14749
   958  00EF1F  4952               	dw	18770
   959  00EF21  3A9D               	dw	15005
   960  00EF23  64C3               	dw	25795
   961  00EF25  3B2A               	dw	15146
   962  00EF27  0275               	dw	629
   963  00EF29  3B9A               	dw	15258
   964  00EF2B  34D7               	dw	13527
   965  00EF2D  3BEF               	dw	15343
   966  00EF2F  64C3               	dw	25795
   967  00EF31  3C2A               	dw	15402
   968  00EF33  6042               	dw	24642
   969  00EF35  3C65               	dw	15461
   970  00EF37  182B               	dw	6187
   971  00EF39  3C95               	dw	15509
   972  00EF3B  C711               	dw	50961
   973  00EF3D  3CBA               	dw	15546
   974  00EF3F  6042               	dw	24642
   975  00EF41  3CE5               	dw	15589
   976  00EF43  A027               	dw	40999
   977  00EF45  3D09               	dw	15625
   978  00EF47  9C78               	dw	40056
   979  00EF49  3D22               	dw	15650
   980  00EF4B  A512               	dw	42258
   981  00EF4D  3D3D               	dw	15677
   982  00EF4F  511A               	dw	20762
   983  00EF51  3D5A               	dw	15706
   984  00EF53  A090               	dw	41104
   985  00EF55  3D78               	dw	15736
   986  00EF57  7E28               	dw	32296
   987  00EF59  3D8C               	dw	15756
   988  00EF5B  7DBF               	dw	32191
   989  00EF5D  3D9D               	dw	15773
   990  00EF5F  1AA0               	dw	6816
   991  00EF61  3DAF               	dw	15791
   992  00EF63  BDA5               	dw	48549
   993  00EF65  3DC1               	dw	15809
   994  00EF67  FDF4               	dw	65012
   995  00EF69  3DD4               	dw	15828
   996  00EF6B  0FF9               	dw	4089
   997  00EF6D  3DE9               	dw	15849
   998  00EF6F  BF48               	dw	48968
   999  00EF71  3DFD               	dw	15869
  1000  00EF73  A027               	dw	40999
  1001  00EF75  3E09               	dw	15881
  1002  00EF77  AF4F               	dw	44879
  1003  00EF79  3E14               	dw	15892
  1004  00EF7B  0D1B               	dw	3355
  1005  00EF7D  3E20               	dw	15904
  1006  00EF7F  9F56               	dw	40790
  1007  00EF81  3E2B               	dw	15915
  1008  00EF83  9A6B               	dw	39531
  1009  00EF85  3E37               	dw	15927
  1010  00EF87  E426               	dw	58406
  1011  00EF89  3E43               	dw	15939
  1012  00EF8B  624E               	dw	25166
  1013  00EF8D  3E50               	dw	15952
  1014  00EF8F  2F1B               	dw	12059
  1015  00EF91  3E5D               	dw	15965
  1016  00EF93  3055               	dw	12373
  1017  00EF95  3E6A               	dw	15978
  1018  00EF97  8034               	dw	32820
  1019  00EF99  3E77               	dw	15991
  1020  00EF9B  7525               	dw	29989
  1021  00EF9D  3E82               	dw	16002
  1022  00EF9F  5183               	dw	20867
  1023  00EFA1  3E89               	dw	16009
  1024  00EFA3  4817               	dw	18455
  1025  00EFA5  3E90               	dw	16016
  1026  00EFA7  4BC7               	dw	19399
  1027  00EFA9  3E97               	dw	16023
  1028  00EFAB  69AD               	dw	27053
  1029  00EFAD  3E9E               	dw	16030
  1030  00EFAF  A1CB               	dw	41419
  1031  00EFB1  3EA5               	dw	16037
  1032  00EFB3  E704               	dw	59140
  1033  00EFB5  3EAC               	dw	16044
  1034  00EFB7  3958               	dw	14680
  1035  00EFB9  3EB4               	dw	16052
  1036  00EFBB  A5E3               	dw	42467
  1037  00EFBD  3EBB               	dw	16059
  1038  00EFBF  126F               	dw	4719
  1039  00EFC1  3EC3               	dw	16067
  1040  00EFC3  9931               	dw	39217
  1041  00EFC5  3ECA               	dw	16074
  1042  00EFC7  1FF3               	dw	8179
  1043  00EFC9  3ED2               	dw	16082
  1044  00EFCB  C0EC               	dw	49388
  1045  00EFCD  3ED9               	dw	16089
  1046  00EFCF  54CA               	dw	21706
  1047  00EFD1  3EE1               	dw	16097
  1048  00EFD3  02DE               	dw	734
  1049  00EFD5  3EE9               	dw	16105
  1050  00EFD7  A3D7               	dw	41943
  1051  00EFD9  3EF0               	dw	16112
  1052  00EFDB  51EC               	dw	20972
  1053  00EFDD  3EF8               	dw	16120
  1054  00EFDF  0000               	dw	0
  1055  00EFE1  3F00               	dw	16128
  1056  00EFE3  D70A               	dw	55050
  1057  00EFE5  3F03               	dw	16131
  1058  00EFE7  AE14               	dw	44564
  1059  00EFE9  3F07               	dw	16135
  1060  00EFEB  7E91               	dw	32401
  1061  00EFED  3F0B               	dw	16139
  1062  00EFEF  559B               	dw	21915
  1063  00EFF1  3F0F               	dw	16143
  1064  00EFF3  2618               	dw	9752
  1065  00EFF5  3F13               	dw	16147
  1066  00EFF7  F007               	dw	61447
  1067  00EFF9  3F16               	dw	16150
  1068  00EFFB  B368               	dw	45928
  1069  00EFFD  3F1A               	dw	16154
  1070  00EFFF  76C9               	dw	30409
  1071  00F001  3F1E               	dw	16158
  1072  00F003  2D0E               	dw	11534
  1073  00F005  3F22               	dw	16162
  1074  00F007  E354               	dw	58196
  1075  00F009  3F25               	dw	16165
  1076  00F00B  8C7E               	dw	35966
  1077  00F00D  3F29               	dw	16169
  1078  00F00F  2F1B               	dw	12059
  1079  00F011  3F2D               	dw	16173
  1080  00F013  CB29               	dw	52009
  1081  00F015  3F30               	dw	16176
  1082  00F017  5A1D               	dw	23069
  1083  00F019  3F34               	dw	16180
  1084  00F01B  E282               	dw	57986
  1085  00F01D  3F37               	dw	16183
  1086  00F01F  573F               	dw	22335
  1087  00F021  3F3B               	dw	16187
  1088  00F023  C56D               	dw	50541
  1089  00F025  3F3E               	dw	16190
  1090  00F027  1FF3               	dw	8179
  1091  00F029  3F42               	dw	16194
  1092  00F02B  73EB               	dw	29675
  1093  00F02D  3F45               	dw	16197
  1094  00F02F  B439               	dw	46137
  1095  00F031  3F48               	dw	16200
  1096  00F033  E76D               	dw	59245
  1097  00F035  3F4B               	dw	16203
  1098  00F037  06F7               	dw	1783
  1099  00F039  3F4F               	dw	16207
  1100  00F03B  1965               	dw	6501
  1101  00F03D  3F52               	dw	16210
  1102  00F03F  182B               	dw	6187
  1103  00F041  3F55               	dw	16213
  1104  00F043  0347               	dw	839
  1105  00F045  3F58               	dw	16216
  1106  00F047  D42C               	dw	54316
  1107  00F049  3F5A               	dw	16218
  1108  00F04B  97F6               	dw	38902
  1109  00F04D  3F5D               	dw	16221
  1110  00F04F  4817               	dw	18455
  1111  00F051  3F60               	dw	16224
  1112  00F053  DE01               	dw	56833
  1113  00F055  3F62               	dw	16226
  1114  00F057  6042               	dw	24642
  1115  00F059  3F65               	dw	16229
  1116  00F05B  C84B               	dw	51275
  1117  00F05D  3F67               	dw	16231
  1118  00F05F  1CAC               	dw	7340
  1119  00F061  3F6A               	dw	16234
  1120  00F063  5048               	dw	20552
  1121  00F065  3F6C               	dw	16236
  1122  00F067  703B               	dw	28731
  1123  00F069  3F6E               	dw	16238
  1124  00F06B  6F69               	dw	28521
  1125  00F06D  3F70               	dw	16240
  1126  00F06F  5AEE               	dw	23278
  1127  00F071  3F72               	dw	16242
  1128  00F073  25AF               	dw	9647
  1129  00F075  3F74               	dw	16244
  1130  00F077  D639               	dw	54841
  1131  00F079  3F75               	dw	16245
  1132  00F07B  65FE               	dw	26110
  1133  00F07D  3F77               	dw	16247
  1134  00F07F  D4FE               	dw	54526
  1135  00F081  3F78               	dw	16248
  1136  00F083  29C7               	dw	10695
  1137  00F085  3F7A               	dw	16250
  1138  00F087  573F               	dw	22335
  1139  00F089  3F7B               	dw	16251
  1140  00F08B  6A7F               	dw	27263
  1141  00F08D  3F7C               	dw	16252
  1142  00F08F  566D               	dw	22125
  1143  00F091  3F7D               	dw	16253
  1144  00F093  2824               	dw	10276
  1145  00F095  3F7E               	dw	16254
  1146  00F097  CBFB               	dw	52219
  1147  00F099  3F7E               	dw	16254
  1148  00F09B  559B               	dw	21915
  1149  00F09D  3F7F               	dw	16255
  1150  00F09F  B15B               	dw	45403
  1151  00F0A1  3F7F               	dw	16255
  1152  00F0A3  EC57               	dw	60503
  1153  00F0A5  3F7F               	dw	16255
  1154  00F0A7  0000               	dw	0
  1155  00F0A9  3F80               	dw	16256
  1156  00F0AB                     __end_of_hKel:
  1157                           	opt stack 0
  1158  00F0AB                     _hKcy:
  1159                           	opt stack 0
  1160  00F0AB  0000               	dw	0
  1161  00F0AD  0000               	dw	0
  1162  00F0AF  D289               	dw	53897
  1163  00F0B1  3ADE               	dw	15070
  1164  00F0B3  4952               	dw	18770
  1165  00F0B5  3B9D               	dw	15261
  1166  00F0B7  8A72               	dw	35442
  1167  00F0B9  3C0E               	dw	15374
  1168  00F0BB  8BAC               	dw	35756
  1169  00F0BD  3C5B               	dw	15451
  1170  00F0BF  30BE               	dw	12478
  1171  00F0C1  3C99               	dw	15513
  1172  00F0C3  B439               	dw	46137
  1173  00F0C5  3CC8               	dw	15560
  1174  00F0C7  5048               	dw	20552
  1175  00F0C9  3CFC               	dw	15612
  1176  00F0CB  999A               	dw	39322
  1177  00F0CD  3D19               	dw	15641
  1178  00F0CF  AE7D               	dw	44669
  1179  00F0D1  3D36               	dw	15670
  1180  00F0D3  FDF4               	dw	65012
  1181  00F0D5  3D54               	dw	15700
  1182  00F0D7  F0D8               	dw	61656
  1183  00F0D9  3D74               	dw	15732
  1184  00F0DB  4396               	dw	17302
  1185  00F0DD  3D8B               	dw	15755
  1186  00F0DF  779A               	dw	30618
  1187  00F0E1  3D9C               	dw	15772
  1188  00F0E3  48E9               	dw	18665
  1189  00F0E5  3DAE               	dw	15790
  1190  00F0E7  B780               	dw	46976
  1191  00F0E9  3DC0               	dw	15808
  1192  00F0EB  8EF3               	dw	36595
  1193  00F0ED  3DD3               	dw	15827
  1194  00F0EF  CF42               	dw	53058
  1195  00F0F1  3DE6               	dw	15846
  1196  00F0F3  ACDA               	dw	44250
  1197  00F0F5  3DFA               	dw	15866
  1198  00F0F7  79A7               	dw	31143
  1199  00F0F9  3E07               	dw	15879
  1200  00F0FB  D14E               	dw	53582
  1201  00F0FD  3E11               	dw	15889
  1202  00F0FF  5D64               	dw	23908
  1203  00F101  3E1C               	dw	15900
  1204  00F103  03B0               	dw	944
  1205  00F105  3E27               	dw	15911
  1206  00F107  F8A1               	dw	63649
  1207  00F109  3E31               	dw	15921
  1208  00F10B  ED91               	dw	60817
  1209  00F10D  3E3C               	dw	15932
  1210  00F10F  3127               	dw	12583
  1211  00F111  3E48               	dw	15944
  1212  00F113  8EF3               	dw	36595
  1213  00F115  3E53               	dw	15955
  1214  00F117  06F7               	dw	1783
  1215  00F119  3E5F               	dw	15967
  1216  00F11B  B368               	dw	45928
  1217  00F11D  3E6A               	dw	15978
  1218  00F11F  7A10               	dw	31248
  1219  00F121  3E76               	dw	15990
  1220  00F123  2D77               	dw	11639
  1221  00F125  3E81               	dw	16001
  1222  00F127  2B02               	dw	11010
  1223  00F129  3E87               	dw	16007
  1224  00F12B  42C4               	dw	17092
  1225  00F12D  3E8D               	dw	16013
  1226  00F12F  5A86               	dw	23174
  1227  00F131  3E93               	dw	16019
  1228  00F133  7F63               	dw	32611
  1229  00F135  3E99               	dw	16025
  1230  00F137  B15B               	dw	45403
  1231  00F139  3E9F               	dw	16031
  1232  00F13B  F06F               	dw	61551
  1233  00F13D  3EA5               	dw	16037
  1234  00F13F  3C9F               	dw	15519
  1235  00F141  3EAC               	dw	16044
  1236  00F143  88CE               	dw	35022
  1237  00F145  3EB2               	dw	16050
  1238  00F147  E219               	dw	57881
  1239  00F149  3EB8               	dw	16056
  1240  00F14B  3B64               	dw	15204
  1241  00F14D  3EBF               	dw	16063
  1242  00F14F  A1CB               	dw	41419
  1243  00F151  3EC5               	dw	16069
  1244  00F153  154D               	dw	5453
  1245  00F155  3ECC               	dw	16076
  1246  00F157  88CE               	dw	35022
  1247  00F159  3ED2               	dw	16082
  1248  00F15B  FC50               	dw	64592
  1249  00F15D  3ED8               	dw	16088
  1250  00F15F  6FD2               	dw	28626
  1251  00F161  3EDF               	dw	16095
  1252  00F163  F06F               	dw	61551
  1253  00F165  3EE5               	dw	16101
  1254  00F167  710D               	dw	28941
  1255  00F169  3EEC               	dw	16108
  1256  00F16B  F1AA               	dw	61866
  1257  00F16D  3EF2               	dw	16114
  1258  00F16F  7F63               	dw	32611
  1259  00F171  3EF9               	dw	16121
  1260  00F173  0000               	dw	0
  1261  00F175  3F00               	dw	16128
  1262  00F177  404F               	dw	16463
  1263  00F179  3F03               	dw	16131
  1264  00F17B  872B               	dw	34603
  1265  00F17D  3F06               	dw	16134
  1266  00F17F  C77A               	dw	51066
  1267  00F181  3F09               	dw	16137
  1268  00F183  07C8               	dw	1992
  1269  00F185  3F0D               	dw	16141
  1270  00F187  4817               	dw	18455
  1271  00F189  3F10               	dw	16144
  1272  00F18B  81D8               	dw	33240
  1273  00F18D  3F13               	dw	16147
  1274  00F18F  BB99               	dw	48025
  1275  00F191  3F16               	dw	16150
  1276  00F193  F55A               	dw	62810
  1277  00F195  3F19               	dw	16153
  1278  00F197  2F1B               	dw	12059
  1279  00F199  3F1D               	dw	16157
  1280  00F19B  624E               	dw	25166
  1281  00F19D  3F20               	dw	16160
  1282  00F19F  8EF3               	dw	36595
  1283  00F1A1  3F23               	dw	16163
  1284  00F1A3  BB99               	dw	48025
  1285  00F1A5  3F26               	dw	16166
  1286  00F1A7  E1B1               	dw	57777
  1287  00F1A9  3F29               	dw	16169
  1288  00F1AB  07C8               	dw	1992
  1289  00F1AD  3F2D               	dw	16173
  1290  00F1AF  2752               	dw	10066
  1291  00F1B1  3F30               	dw	16176
  1292  00F1B3  404F               	dw	16463
  1293  00F1B5  3F33               	dw	16179
  1294  00F1B7  52BD               	dw	21181
  1295  00F1B9  3F36               	dw	16182
  1296  00F1BB  5E9E               	dw	24222
  1297  00F1BD  3F39               	dw	16185
  1298  00F1BF  6A7F               	dw	27263
  1299  00F1C1  3F3C               	dw	16188
  1300  00F1C3  6944               	dw	26948
  1301  00F1C5  3F3F               	dw	16191
  1302  00F1C7  617C               	dw	24956
  1303  00F1C9  3F42               	dw	16194
  1304  00F1CB  5326               	dw	21286
  1305  00F1CD  3F45               	dw	16197
  1306  00F1CF  3E42               	dw	15938
  1307  00F1D1  3F48               	dw	16200
  1308  00F1D3  1C43               	dw	7235
  1309  00F1D5  3F4B               	dw	16203
  1310  00F1D7  F3B6               	dw	62390
  1311  00F1D9  3F4D               	dw	16205
  1312  00F1DB  C49C               	dw	50332
  1313  00F1DD  3F50               	dw	16208
  1314  00F1DF  81D8               	dw	33240
  1315  00F1E1  3F53               	dw	16211
  1316  00F1E3  3F14               	dw	16148
  1317  00F1E5  3F56               	dw	16214
  1318  00F1E7  E8A7               	dw	59559
  1319  00F1E9  3F58               	dw	16216
  1320  00F1EB  8BAC               	dw	35756
  1321  00F1ED  3F5B               	dw	16219
  1322  00F1EF  2196               	dw	8598
  1323  00F1F1  3F5E               	dw	16222
  1324  00F1F3  AA65               	dw	43621
  1325  00F1F5  3F60               	dw	16224
  1326  00F1F7  2618               	dw	9752
  1327  00F1F9  3F63               	dw	16227
  1328  00F1FB  8E22               	dw	36386
  1329  00F1FD  3F65               	dw	16229
  1330  00F1FF  E910               	dw	59664
  1331  00F201  3F67               	dw	16231
  1332  00F203  36E3               	dw	14051
  1333  00F205  3F6A               	dw	16234
  1334  00F207  710D               	dw	28941
  1335  00F209  3F6C               	dw	16236
  1336  00F20B  978D               	dw	38797
  1337  00F20D  3F6E               	dw	16238
  1338  00F20F  B0F2               	dw	45298
  1339  00F211  3F70               	dw	16240
  1340  00F213  B021               	dw	45089
  1341  00F215  3F72               	dw	16242
  1342  00F217  9518               	dw	38168
  1343  00F219  3F74               	dw	16244
  1344  00F21B  6666               	dw	26214
  1345  00F21D  3F76               	dw	16246
  1346  00F21F  1D7E               	dw	7550
  1347  00F221  3F78               	dw	16248
  1348  00F223  BA5E               	dw	47710
  1349  00F225  3F79               	dw	16249
  1350  00F227  367A               	dw	13946
  1351  00F229  3F7B               	dw	16251
  1352  00F22B  91D1               	dw	37329
  1353  00F22D  3F7C               	dw	16252
  1354  00F22F  C5D6               	dw	50646
  1355  00F231  3F7D               	dw	16253
  1356  00F233  C56D               	dw	50541
  1357  00F235  3F7E               	dw	16254
  1358  00F237  9097               	dw	37015
  1359  00F239  3F7F               	dw	16255
  1360  00F23B  0000               	dw	0
  1361  00F23D  3F80               	dw	16256
  1362  00F23F                     __end_of_hKcy:
  1363                           	opt stack 0
  1364  00F23F                     _defultSystemData:
  1365                           	opt stack 0
  1366  00F23F  04D2               	dw	1234
  1367  00F241  0000               	dw	0
  1368  00F243  00                 	db	0
  1369  00F244  5F                 	db	95
  1370  00F245  03E8               	dw	1000
  1371  00F247  3A98               	dw	15000
  1372  00F249  0000               	dw	0
  1373  00F24B  0BB8               	dw	3000
  1374  00F24D  0000               	dw	0
  1375  00F24F  0000               	dw	0
  1376  00F251  0000               	dw	0
  1377  00F253  0000               	dw	0
  1378  00F255  0000               	dw	0
  1379  00F257  FF38               	dw	65336
  1380  00F259  FFFF               	dw	65535
  1381  00F25B  0000               	dw	0
  1382  00F25D  0000               	dw	0
  1383  00F25F  0000               	dw	0
  1384  00F261  0000               	dw	0
  1385  00F263  2710               	dw	10000
  1386  00F265  0000               	dw	0
  1387  00F267  2710               	dw	10000
  1388  00F269  0000               	dw	0
  1389  00F26B  0000               	dw	0
  1390  00F26D  0000               	dw	0
  1391  00F26F  0000               	dw	0
  1392  00F271  0000               	dw	0
  1393  00F273  2710               	dw	10000
  1394  00F275  0000               	dw	0
  1395  00F277  2710               	dw	10000
  1396  00F279  0000               	dw	0
  1397  00F27B  0000               	dw	0
  1398  00F27D  0000               	dw	0
  1399  00F27F  00                 	db	0
  1400  00F280  00                 	db	0
  1401  00F281  00                 	db	0
  1402  00F282  00                 	db	0
  1403  00F283  00                 	db	0
  1404  00F284  00                 	db	0
  1405  00F285  00                 	db	0
  1406  00F286  00                 	db	0
  1407  00F287  00                 	db	0
  1408  00F288  00                 	db	0
  1409  00F289  00                 	db	0
  1410  00F28A  00                 	db	0
  1411  00F28B  00                 	db	0
  1412  00F28C  00                 	db	0
  1413  00F28D  00                 	db	0
  1414  00F28E  00                 	db	0
  1415  00F28F  00                 	db	0
  1416  00F290  00                 	db	0
  1417  00F291  00                 	db	0
  1418  00F292  00                 	db	0
  1419  00F293  00                 	db	0
  1420  00F294  00                 	db	0
  1421  00F295  00                 	db	0
  1422  00F296  00                 	db	0
  1423  00F297  00                 	db	0
  1424  00F298  00                 	db	0
  1425  00F299  00                 	db	0
  1426  00F29A  00                 	db	0
  1427  00F29B  00                 	db	0
  1428  00F29C  00                 	db	0
  1429  00F29D  00                 	db	0
  1430  00F29E  00                 	db	0
  1431  00F29F  00                 	db	0
  1432  00F2A0  00                 	db	0
  1433  00F2A1  00                 	db	0
  1434  00F2A2  00                 	db	0
  1435  00F2A3  00                 	db	0
  1436  00F2A4  00                 	db	0
  1437  00F2A5  00                 	db	0
  1438  00F2A6  00                 	db	0
  1439  00F2A7  00                 	db	0
  1440  00F2A8  00                 	db	0
  1441  00F2A9  00                 	db	0
  1442  00F2AA  00                 	db	0
  1443  00F2AB  0000               	dw	0
  1444  00F2AD  0000               	dw	0
  1445  00F2AF  00                 	db	0
  1446  00F2B0  00                 	db	0
  1447  00F2B1  00                 	db	0
  1448  00F2B2  00                 	db	0
  1449  00F2B3  00                 	db	0
  1450  00F2B4  00                 	db	0
  1451  00F2B5  00                 	db	0
  1452  00F2B6  00                 	db	0
  1453  00F2B7  00                 	db	0
  1454  00F2B8  00                 	db	0
  1455  00F2B9  00                 	db	0
  1456  00F2BA  00                 	db	0
  1457  00F2BB  00                 	db	0
  1458  00F2BC  00                 	db	0
  1459  00F2BD  00                 	db	0
  1460  00F2BE  00                 	db	0
  1461  00F2BF  00                 	db	0
  1462  00F2C0  00                 	db	0
  1463  00F2C1  00                 	db	0
  1464  00F2C2  00                 	db	0
  1465  00F2C3  0190               	dw	400
  1466  00F2C5  012C               	dw	300
  1467  00F2C7  00C8               	dw	200
  1468  00F2C9  0064               	dw	100
  1469  00F2CB  0000               	dw	0
  1470  00F2CD  0000               	dw	0
  1471  00F2CF  0000               	dw	0
  1472  00F2D1  00                 	db	0
  1473  00F2D2  00                 	db	0
  1474  00F2D3  2710               	dw	10000
  1475  00F2D5  0000               	dw	0
  1476  00F2D7  2710               	dw	10000
  1477  00F2D9  00                 	db	0
  1478  00F2DA  00                 	db	0
  1479  00F2DB  0000               	dw	0
  1480  00F2DD  0000               	dw	0
  1481  00F2DF  0000               	dw	0
  1482  00F2E1  00                 	db	0
  1483  00F2E2  00                 	db	0
  1484  00F2E3  2710               	dw	10000
  1485  00F2E5  0000               	dw	0
  1486  00F2E7  2710               	dw	10000
  1487  00F2E9  00                 	db	0
  1488  00F2EA  00                 	db	0
  1489  00F2EB  0000               	dw	0
  1490  00F2ED  0000               	dw	0
  1491  00F2EF  0000               	dw	0
  1492  00F2F1  00                 	db	0
  1493  00F2F2  00                 	db	0
  1494  00F2F3  2710               	dw	10000
  1495  00F2F5  0000               	dw	0
  1496  00F2F7  2710               	dw	10000
  1497  00F2F9  00                 	db	0
  1498  00F2FA  00                 	db	0
  1499  00F2FB  0000               	dw	0
  1500  00F2FD  0000               	dw	0
  1501  00F2FF  0000               	dw	0
  1502  00F301  00                 	db	0
  1503  00F302  00                 	db	0
  1504  00F303  2710               	dw	10000
  1505  00F305  0000               	dw	0
  1506  00F307  2710               	dw	10000
  1507  00F309  00                 	db	0
  1508  00F30A  00                 	db	0
  1509  00F30B  03E8               	dw	1000
  1510  00F30D  0000               	dw	0
  1511  00F30F  07D0               	dw	2000
  1512  00F311  0000               	dw	0
  1513  00F313  03E8               	dw	1000
  1514  00F315  0000               	dw	0
  1515  00F317  07D0               	dw	2000
  1516  00F319  0000               	dw	0
  1517  00F31B  03E8               	dw	1000
  1518  00F31D  0000               	dw	0
  1519  00F31F  07D0               	dw	2000
  1520  00F321  0000               	dw	0
  1521  00F323  03E8               	dw	1000
  1522  00F325  0000               	dw	0
  1523  00F327  07D0               	dw	2000
  1524  00F329  0000               	dw	0
  1525  00F32B  03B6               	dw	950
  1526  00F32D  0000               	dw	0
  1527  00F32F                     __end_of_defultSystemData:
  1528                           	opt stack 0
  1529  00F32F                     _flashTestbuf:
  1530                           	opt stack 0
  1531  00F32F  30                 	db	48
  1532  00F330  31                 	db	49
  1533  00F331  32                 	db	50
  1534  00F332  33                 	db	51
  1535  00F333  34                 	db	52
  1536  00F334  35                 	db	53
  1537  00F335  36                 	db	54
  1538  00F336  37                 	db	55
  1539  00F337  38                 	db	56
  1540  00F338  39                 	db	57
  1541  00F339  30                 	db	48
  1542  00F33A  31                 	db	49
  1543  00F33B  32                 	db	50
  1544  00F33C  33                 	db	51
  1545  00F33D  34                 	db	52
  1546  00F33E  35                 	db	53
  1547  00F33F  36                 	db	54
  1548  00F340  37                 	db	55
  1549  00F341  38                 	db	56
  1550  00F342  39                 	db	57
  1551  00F343  30                 	db	48
  1552  00F344  31                 	db	49
  1553  00F345  32                 	db	50
  1554  00F346  33                 	db	51
  1555  00F347  34                 	db	52
  1556  00F348  35                 	db	53
  1557  00F349  36                 	db	54
  1558  00F34A  37                 	db	55
  1559  00F34B  38                 	db	56
  1560  00F34C  39                 	db	57
  1561  00F34D  30                 	db	48
  1562  00F34E  31                 	db	49
  1563  00F34F  32                 	db	50
  1564  00F350  33                 	db	51
  1565  00F351  34                 	db	52
  1566  00F352  35                 	db	53
  1567  00F353  36                 	db	54
  1568  00F354  37                 	db	55
  1569  00F355  38                 	db	56
  1570  00F356  39                 	db	57
  1571  00F357  30                 	db	48
  1572  00F358  31                 	db	49
  1573  00F359  32                 	db	50
  1574  00F35A  33                 	db	51
  1575  00F35B  34                 	db	52
  1576  00F35C  35                 	db	53
  1577  00F35D  36                 	db	54
  1578  00F35E  37                 	db	55
  1579  00F35F  38                 	db	56
  1580  00F360  39                 	db	57
  1581  00F361  30                 	db	48
  1582  00F362  31                 	db	49
  1583  00F363  32                 	db	50
  1584  00F364  33                 	db	51
  1585  00F365  34                 	db	52
  1586  00F366  35                 	db	53
  1587  00F367  36                 	db	54
  1588  00F368  37                 	db	55
  1589  00F369  38                 	db	56
  1590  00F36A  39                 	db	57
  1591  00F36B  30                 	db	48
  1592  00F36C  31                 	db	49
  1593  00F36D  32                 	db	50
  1594  00F36E  33                 	db	51
  1595  00F36F  00                 	db	0
  1596  00F370                     __end_of_flashTestbuf:
  1597                           	opt stack 0
  1598  0000                     _RTCVALH	set	3933
  1599  0000                     _RTCVALL	set	3932
  1600  0000                     _stRTCCFGbits	set	3935
  1601  0000                     _ALRMCFGbits	set	3931
  1602  0000                     _ALRMRPT	set	3930
  1603  0000                     _PADCFG1bits	set	3924
  1604  0000                     _RTCCFGbits	set	3935
  1605  0000                     _PR2	set	4043
  1606  0000                     _T2CON	set	4042
  1607  0000                     _RCONbits	set	4048
  1608  0000                     _T1CONbits	set	4045
  1609  0000                     _IPR3bits	set	4005
  1610  0000                     _PIR3bits	set	4004
  1611  0000                     _PIE3bits	set	4003
  1612  0000                     _INTCON2bits	set	4081
  1613  0000                     _OSCCONbits	set	4051
  1614  0000                     _FSR0H	set	4074
  1615  0000                     _FSR0L	set	4073
  1616  0000                     _TABLAT	set	4085
  1617  0000                     _TBLPTRU	set	4088
  1618  0000                     _TBLPTRH	set	4087
  1619  0000                     _TBLPTRL	set	4086
  1620  0000                     _EECON1bits	set	4006
  1621  0000                     _INTCONbits	set	4082
  1622  0000                     _INTCON	set	4082
  1623  0000                     _LCDCON	set	4008
  1624  0000                     _LATG	set	3983
  1625  0000                     _TRISG	set	3992
  1626  0000                     _LCDSE5	set	4026
  1627  0000                     _LCDSE4	set	4025
  1628  0000                     _LCDSE3	set	4024
  1629  0000                     _LCDSE2	set	4023
  1630  0000                     _LCDSE1	set	4022
  1631  0000                     _LCDSE0	set	4009
  1632  0000                     _LCDPSbits	set	4010
  1633  0000                     _LCDREG	set	4050
  1634  0000                     _LCDDATA23	set	3965
  1635  0000                     _LCDDATA22	set	3964
  1636  0000                     _LCDDATA21	set	3963
  1637  0000                     _LCDDATA20	set	3962
  1638  0000                     _LCDDATA19	set	3961
  1639  0000                     _LCDDATA18	set	3960
  1640  0000                     _LCDDATA17	set	3959
  1641  0000                     _LCDDATA16	set	3958
  1642  0000                     _LCDDATA15	set	3957
  1643  0000                     _LCDDATA14	set	3956
  1644  0000                     _LCDDATA13	set	3955
  1645  0000                     _LCDDATA12	set	3954
  1646  0000                     _LCDDATA11	set	3953
  1647  0000                     _LCDDATA10	set	3952
  1648  0000                     _LCDDATA9	set	3951
  1649  0000                     _LCDDATA8	set	3950
  1650  0000                     _LCDDATA7	set	3949
  1651  0000                     _LCDDATA6	set	3948
  1652  0000                     _LCDDATA5	set	3947
  1653  0000                     _LCDDATA4	set	4031
  1654  0000                     _LCDDATA3	set	4030
  1655  0000                     _LCDDATA2	set	4029
  1656  0000                     _LCDDATA1	set	4028
  1657  0000                     _LCDDATA0	set	4027
  1658  0000                     _PORTB	set	3969
  1659  0000                     _ADRESL	set	4035
  1660  0000                     _ADRESH	set	4036
  1661  0000                     _IPR1bits	set	3999
  1662  0000                     _PIE1bits	set	3997
  1663  0000                     _PIR1bits	set	3998
  1664  0000                     _ADCON0bits	set	4034
  1665  0000                     _ADCON2bits	set	4032
  1666  0000                     _ADCON1	set	4033
  1667  0000                     _PORTC	set	3970
  1668  0000                     _LATC	set	3979
  1669  0000                     _TRISC	set	3988
  1670  0000                     _LATB	set	3978
  1671  0000                     _TRISB	set	3987
  1672  00F370                     STR_2:
  1673  00F370  20                 	db	32
  1674  00F371  20                 	db	32
  1675  00F372  20                 	db	32
  1676  00F373  20                 	db	32
  1677  00F374  20                 	db	32
  1678  00F375  20                 	db	32
  1679  00F376  20                 	db	32
  1680  00F377  20                 	db	32
  1681  00F378  00                 	db	0
  1682  00F379                     STR_32:
  1683  00F379  20                 	db	32
  1684  00F37A  73                 	db	115	;'s'
  1685  00F37B  74                 	db	116	;'t'
  1686  00F37C  61                 	db	97	;'a'
  1687  00F37D  20                 	db	32
  1688  00F37E  6E                 	db	110	;'n'
  1689  00F37F  6F                 	db	111	;'o'
  1690  00F380  72                 	db	114	;'r'
  1691  00F381  00                 	db	0
  1692  00F382                     STR_33:
  1693  00F382  20                 	db	32
  1694  00F383  73                 	db	115	;'s'
  1695  00F384  74                 	db	116	;'t'
  1696  00F385  61                 	db	97	;'a'
  1697  00F386  20                 	db	32
  1698  00F387  74                 	db	116	;'t'
  1699  00F388  73                 	db	115	;'s'
  1700  00F389  74                 	db	116	;'t'
  1701  00F38A  00                 	db	0
  1702  00F38B                     STR_23:
  1703  00F38B  65                 	db	101	;'e'
  1704  00F38C  70                 	db	112	;'p'
  1705  00F38D  30                 	db	48	;'0'
  1706  00F38E  30                 	db	48	;'0'
  1707  00F38F  00                 	db	0
  1708  00F390                     STR_25:
  1709  00F390  65                 	db	101	;'e'
  1710  00F391  70                 	db	112	;'p'
  1711  00F392  31                 	db	49	;'1'
  1712  00F393  30                 	db	48	;'0'
  1713  00F394  00                 	db	0
  1714  00F395                     STR_22:
  1715  00F395  20                 	db	32
  1716  00F396  61                 	db	97	;'a'
  1717  00F397  6C                 	db	108	;'l'
  1718  00F398  30                 	db	48	;'0'
  1719  00F399  00                 	db	0
  1720  00F39A                     STR_16:
  1721  00F39A  61                 	db	97	;'a'
  1722  00F39B  6C                 	db	108	;'l'
  1723  00F39C  74                 	db	116	;'t'
  1724  00F39D  30                 	db	48	;'0'
  1725  00F39E  00                 	db	0
  1726  00F39F                     STR_24:
  1727  00F39F  65                 	db	101	;'e'
  1728  00F3A0  70                 	db	112	;'p'
  1729  00F3A1  30                 	db	48	;'0'
  1730  00F3A2  31                 	db	49	;'1'
  1731  00F3A3  00                 	db	0
  1732  00F3A4                     STR_26:
  1733  00F3A4  65                 	db	101	;'e'
  1734  00F3A5  70                 	db	112	;'p'
  1735  00F3A6  31                 	db	49	;'1'
  1736  00F3A7  31                 	db	49	;'1'
  1737  00F3A8  00                 	db	0
  1738  00F3A9                     STR_1:
  1739  00F3A9  63                 	db	99	;'c'
  1740  00F3AA  73                 	db	115	;'s'
  1741  00F3AB  36                 	db	54	;'6'
  1742  00F3AC  36                 	db	54	;'6'
  1743  00F3AD  00                 	db	0
  1744  00F3AE                     STR_28:
  1745  00F3AE  6C                 	db	108	;'l'
  1746  00F3AF  70                 	db	112	;'p'
  1747  00F3B0  30                 	db	48	;'0'
  1748  00F3B1  48                 	db	72	;'H'
  1749  00F3B2  00                 	db	0
  1750  00F3B3                     STR_30:
  1751  00F3B3  6C                 	db	108	;'l'
  1752  00F3B4  70                 	db	112	;'p'
  1753  00F3B5  31                 	db	49	;'1'
  1754  00F3B6  48                 	db	72	;'H'
  1755  00F3B7  00                 	db	0
  1756  00F3B8                     STR_12:
  1757  00F3B8  20                 	db	32
  1758  00F3B9  20                 	db	32
  1759  00F3BA  68                 	db	104	;'h'
  1760  00F3BB  62                 	db	98	;'b'
  1761  00F3BC  00                 	db	0
  1762  00F3BD                     STR_11:
  1763  00F3BD  20                 	db	32
  1764  00F3BE  20                 	db	32
  1765  00F3BF  20                 	db	32
  1766  00F3C0  64                 	db	100	;'d'
  1767  00F3C1  00                 	db	0
  1768  00F3C2                     STR_19:
  1769  00F3C2  20                 	db	32
  1770  00F3C3  68                 	db	104	;'h'
  1771  00F3C4  2D                 	db	45
  1772  00F3C5  64                 	db	100	;'d'
  1773  00F3C6  00                 	db	0
  1774  00F3C7                     STR_21:
  1775  00F3C7  20                 	db	32
  1776  00F3C8  70                 	db	112	;'p'
  1777  00F3C9  2D                 	db	45
  1778  00F3CA  64                 	db	100	;'d'
  1779  00F3CB  00                 	db	0
  1780  00F3CC                     STR_5:
  1781  00F3CC  20                 	db	32
  1782  00F3CD  70                 	db	112	;'p'
  1783  00F3CE  73                 	db	115	;'s'
  1784  00F3CF  64                 	db	100	;'d'
  1785  00F3D0  00                 	db	0
  1786  00F3D1                     STR_10:
  1787  00F3D1  20                 	db	32
  1788  00F3D2  20                 	db	32
  1789  00F3D3  20                 	db	32
  1790  00F3D4  68                 	db	104	;'h'
  1791  00F3D5  00                 	db	0
  1792  00F3D6                     STR_9:
  1793  00F3D6  20                 	db	32
  1794  00F3D7  20                 	db	32
  1795  00F3D8  20                 	db	32
  1796  00F3D9  6C                 	db	108	;'l'
  1797  00F3DA  00                 	db	0
  1798  00F3DB                     STR_27:
  1799  00F3DB  6C                 	db	108	;'l'
  1800  00F3DC  70                 	db	112	;'p'
  1801  00F3DD  30                 	db	48	;'0'
  1802  00F3DE  6C                 	db	108	;'l'
  1803  00F3DF  00                 	db	0
  1804  00F3E0                     STR_29:
  1805  00F3E0  6C                 	db	108	;'l'
  1806  00F3E1  70                 	db	112	;'p'
  1807  00F3E2  31                 	db	49	;'1'
  1808  00F3E3  6C                 	db	108	;'l'
  1809  00F3E4  00                 	db	0
  1810  00F3E5                     STR_31:
  1811  00F3E5  20                 	db	32
  1812  00F3E6  73                 	db	115	;'s'
  1813  00F3E7  63                 	db	99	;'c'
  1814  00F3E8  6C                 	db	108	;'l'
  1815  00F3E9  00                 	db	0
  1816  00F3EA                     STR_6:
  1817  00F3EA  20                 	db	32
  1818  00F3EB  20                 	db	32
  1819  00F3EC  20                 	db	32
  1820  00F3ED  70                 	db	112	;'p'
  1821  00F3EE  00                 	db	0
  1822  00F3EF                     STR_7:
  1823  00F3EF  20                 	db	32
  1824  00F3F0  20                 	db	32
  1825  00F3F1  66                 	db	102	;'f'
  1826  00F3F2  73                 	db	115	;'s'
  1827  00F3F3  00                 	db	0
  1828  00F3F4                     STR_18:
  1829  00F3F4  20                 	db	32
  1830  00F3F5  68                 	db	104	;'h'
  1831  00F3F6  2D                 	db	45
  1832  00F3F7  75                 	db	117	;'u'
  1833  00F3F8  00                 	db	0
  1834  00F3F9                     STR_20:
  1835  00F3F9  20                 	db	32
  1836  00F3FA  70                 	db	112	;'p'
  1837  00F3FB  2D                 	db	45
  1838  00F3FC  75                 	db	117	;'u'
  1839  00F3FD  00                 	db	0
  1840  0000                     
  1841                           ; #config settings
  1842  00F3FE  00                 	db	0	; dummy byte at the end
  1843  0000                     
  1844                           	psect	cinit
  1845  0071BC                     __pcinit:
  1846                           	opt stack 0
  1847  0071BC                     start_initialization:
  1848                           	opt stack 0
  1849  0071BC                     __initialization:
  1850                           	opt stack 0
  1851                           
  1852                           ; Initialize objects allocated to BANK1 (13 bytes)
  1853                           ; load TBLPTR registers with __pidataBANK1
  1854  0071BC  0E74               	movlw	low __pidataBANK1
  1855  0071BE  6EF6               	movwf	tblptrl,c
  1856  0071C0  0E9C               	movlw	high __pidataBANK1
  1857  0071C2  6EF7               	movwf	tblptrh,c
  1858  0071C4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1859  0071C6  6EF8               	movwf	tblptru,c
  1860  0071C8  EE01  F0F0         	lfsr	0,__pdataBANK1
  1861  0071CC  EE10 F00D          	lfsr	1,13
  1862  0071D0                     copy_data0:
  1863  0071D0  0009               	tblrd		*+
  1864  0071D2  CFF5 FFEE          	movff	tablat,postinc0
  1865  0071D6  50E5               	movf	postdec1,w,c
  1866  0071D8  50E1               	movf	fsr1l,w,c
  1867  0071DA  E1FA               	bnz	copy_data0
  1868                           
  1869                           ; Initialize objects allocated to BANK0 (1 bytes)
  1870                           ; load TBLPTR registers with __pidataBANK0
  1871  0071DC  0EBE               	movlw	low __pidataBANK0
  1872  0071DE  6EF6               	movwf	tblptrl,c
  1873  0071E0  0E9C               	movlw	high __pidataBANK0
  1874  0071E2  6EF7               	movwf	tblptrh,c
  1875  0071E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1876  0071E6  6EF8               	movwf	tblptru,c
  1877  0071E8  0009               	tblrd		*+	;fetch initializer
  1878  0071EA  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1879                           
  1880                           ; Clear objects allocated to BANK5 (256 bytes)
  1881  0071EE  EE05  F000         	lfsr	0,__pbssBANK5
  1882  0071F2  EE11 F000          	lfsr	1,256
  1883  0071F6                     clear_0:
  1884  0071F6  6AEE               	clrf	postinc0,c
  1885  0071F8  50E5               	movf	postdec1,w,c
  1886  0071FA  50E1               	movf	fsr1l,w,c
  1887  0071FC  E1FC               	bnz	clear_0
  1888  0071FE  50E2               	movf	fsr1h,w,c
  1889  007200  E1FA               	bnz	clear_0
  1890                           
  1891                           ; Clear objects allocated to BANK4 (162 bytes)
  1892  007202  EE04  F000         	lfsr	0,__pbssBANK4
  1893  007206  0EA2               	movlw	162
  1894  007208                     clear_1:
  1895  007208  6AEE               	clrf	postinc0,c
  1896  00720A  06E8               	decf	wreg,f,c
  1897  00720C  E1FD               	bnz	clear_1
  1898                           
  1899                           ; Clear objects allocated to BANK3 (202 bytes)
  1900  00720E  EE03  F000         	lfsr	0,__pbssBANK3
  1901  007212  0ECA               	movlw	202
  1902  007214                     clear_2:
  1903  007214  6AEE               	clrf	postinc0,c
  1904  007216  06E8               	decf	wreg,f,c
  1905  007218  E1FD               	bnz	clear_2
  1906                           
  1907                           ; Clear objects allocated to BANK2 (256 bytes)
  1908  00721A  EE02  F000         	lfsr	0,__pbssBANK2
  1909  00721E  EE11 F000          	lfsr	1,256
  1910  007222                     clear_3:
  1911  007222  6AEE               	clrf	postinc0,c
  1912  007224  50E5               	movf	postdec1,w,c
  1913  007226  50E1               	movf	fsr1l,w,c
  1914  007228  E1FC               	bnz	clear_3
  1915  00722A  50E2               	movf	fsr1h,w,c
  1916  00722C  E1FA               	bnz	clear_3
  1917                           
  1918                           ; Clear objects allocated to BANK1 (240 bytes)
  1919  00722E  EE01  F000         	lfsr	0,__pbssBANK1
  1920  007232  0EF0               	movlw	240
  1921  007234                     clear_4:
  1922  007234  6AEE               	clrf	postinc0,c
  1923  007236  06E8               	decf	wreg,f,c
  1924  007238  E1FD               	bnz	clear_4
  1925                           
  1926                           ; Clear objects allocated to BANK0 (23 bytes)
  1927  00723A  EE00  F0E8         	lfsr	0,__pbssBANK0
  1928  00723E  0E17               	movlw	23
  1929  007240                     clear_5:
  1930  007240  6AEE               	clrf	postinc0,c
  1931  007242  06E8               	decf	wreg,f,c
  1932  007244  E1FD               	bnz	clear_5
  1933                           
  1934                           ; Clear objects allocated to COMRAM (31 bytes)
  1935  007246  EE00  F021         	lfsr	0,__pbssCOMRAM
  1936  00724A  0E1F               	movlw	31
  1937  00724C                     clear_6:
  1938  00724C  6AEE               	clrf	postinc0,c
  1939  00724E  06E8               	decf	wreg,f,c
  1940  007250  E1FD               	bnz	clear_6
  1941  007252                     end_of_initialization:
  1942                           	opt stack 0
  1943  007252                     __end_of__initialization:
  1944                           	opt stack 0
  1945  007252  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1946  007254  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1947  007256  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1948  007258  6EF8               	movwf	tblptru,c
  1949  00725A  0100               	movlb	0
  1950  00725C  EF78  F044         	goto	_main	;jump to C main() function
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           postdec1	equ	0xFE5
  1958                           fsr1h	equ	0xFE2
  1959                           fsr1l	equ	0xFE1
  1960                           
  1961                           	psect	bssCOMRAM
  1962  000021                     __pbssCOMRAM:
  1963                           	opt stack 0
  1964  000021                     _adc_iPrEx:
  1965                           	opt stack 0
  1966  000021                     	ds	4
  1967  000025                     _userTicker_ms:
  1968                           	opt stack 0
  1969  000025                     	ds	2
  1970  000027                     _p_prEepromObj:
  1971                           	opt stack 0
  1972  000027                     	ds	2
  1973  000029                     _pdiff_prEepromObj:
  1974                           	opt stack 0
  1975  000029                     	ds	2
  1976  00002B                     _dlyTickerEn:
  1977                           	opt stack 0
  1978  00002B                     	ds	1
  1979  00002C                     _st_Bj:
  1980                           	opt stack 0
  1981  00002C                     	ds	1
  1982  00002D                     _pcf8574Value:
  1983                           	opt stack 0
  1984  00002D                     	ds	1
  1985  00002E                     _glbEvent:
  1986                           	opt stack 0
  1987  00002E                     	ds	1
  1988  00002F                     _sensorPowerOn:
  1989                           	opt stack 0
  1990  00002F                     	ds	1
  1991  000030                     _calibCol:
  1992                           	opt stack 0
  1993  000030                     	ds	1
  1994  000031                     _calibRow:
  1995                           	opt stack 0
  1996  000031                     	ds	1
  1997  000032                     _subMenu:
  1998                           	opt stack 0
  1999  000032                     	ds	1
  2000  000033                     _menu:
  2001                           	opt stack 0
  2002  000033                     	ds	1
  2003  000034                     _lcdTwinkle:
  2004                           	opt stack 0
  2005  000034                     	ds	1
  2006  000035                     _m_floatAdj:
  2007                           	opt stack 0
  2008  000035                     	ds	4
  2009  000039                     _adjValue:
  2010                           	opt stack 0
  2011  000039                     	ds	4
  2012  00003D                     _passWord:
  2013                           	opt stack 0
  2014  00003D                     	ds	2
  2015  00003F                     _adjLocation:
  2016                           	opt stack 0
  2017  00003F                     	ds	1
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1h	equ	0xFE2
  2026                           fsr1l	equ	0xFE1
  2027                           
  2028                           	psect	bssBANK0
  2029  0000E8                     __pbssBANK0:
  2030                           	opt stack 0
  2031  0000E8                     _rtHight:
  2032                           	opt stack 0
  2033  0000E8                     	ds	4
  2034  0000EC                     _pAds1115PrObj:
  2035                           	opt stack 0
  2036  0000EC                     	ds	2
  2037  0000EE                     _pAds1115DiffPrObj:
  2038                           	opt stack 0
  2039  0000EE                     	ds	2
  2040  0000F0                     _sensorSimpleTsLong:
  2041                           	opt stack 0
  2042  0000F0                     	ds	1
  2043  0000F1                     _sensorSimpleEn:
  2044                           	opt stack 0
  2045  0000F1                     	ds	1
  2046  0000F2                     _inSocAdcSampleFinish:
  2047                           	opt stack 0
  2048  0000F2                     	ds	1
  2049  0000F3                     _inSocAdcSampleCh:
  2050                           	opt stack 0
  2051  0000F3                     	ds	1
  2052  0000F4                     _inSocAdcSampleCount:
  2053                           	opt stack 0
  2054  0000F4                     	ds	1
  2055  0000F5                     _PrChipSampleFinish:
  2056                           	opt stack 0
  2057  0000F5                     	ds	1
  2058  0000F6                     _prChipSampleCount:
  2059                           	opt stack 0
  2060  0000F6                     	ds	1
  2061  0000F7                     _prChipSampleCh:
  2062                           	opt stack 0
  2063  0000F7                     	ds	1
  2064  0000F8                     _diffPrChipSampleFinish:
  2065                           	opt stack 0
  2066  0000F8                     	ds	1
  2067  0000F9                     _diffPrChipSampCh:
  2068                           	opt stack 0
  2069  0000F9                     	ds	1
  2070  0000FA                     _diffPrChipSampleCount:
  2071                           	opt stack 0
  2072  0000FA                     	ds	1
  2073  0000FB                     _blackEn:
  2074                           	opt stack 0
  2075  0000FB                     	ds	1
  2076  0000FC                     _keyValue:
  2077                           	opt stack 0
  2078  0000FC                     	ds	1
  2079  0000FD                     _dwm:
  2080                           	opt stack 0
  2081  0000FD                     	ds	1
  2082  0000FE                     _rtLevel:
  2083                           	opt stack 0
  2084  0000FE                     	ds	1
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           
  2095                           	psect	dataBANK0
  2096  0000FF                     __pdataBANK0:
  2097                           	opt stack 0
  2098  0000FF                     _glNoEventTimeOut:
  2099                           	opt stack 0
  2100  0000FF                     	ds	1
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1h	equ	0xFE2
  2109                           fsr1l	equ	0xFE1
  2110                           
  2111                           	psect	bssBANK1
  2112  000100                     __pbssBANK1:
  2113                           	opt stack 0
  2114  000100                     _pLCD:
  2115                           	opt stack 0
  2116  000100                     	ds	24
  2117  000118                     _pcf8574:
  2118                           	opt stack 0
  2119  000118                     	ds	11
  2120  000123                     cal_press@F7863:
  2121                           	opt stack 0
  2122  000123                     	ds	8
  2123  00012B                     _rtExPressure:
  2124                           	opt stack 0
  2125  00012B                     	ds	8
  2126  000133                     _glRtc:
  2127                           	opt stack 0
  2128  000133                     	ds	7
  2129  00013A                     _glTicker:
  2130                           	opt stack 0
  2131  00013A                     	ds	4
  2132  00013E                     ___mflot32_2_int32@F7717:
  2133                           	opt stack 0
  2134  00013E                     	ds	4
  2135  000142                     ___int32_2_mflot32@F7712:
  2136                           	opt stack 0
  2137  000142                     	ds	4
  2138  000146                     _rtTemperatureEx:
  2139                           	opt stack 0
  2140  000146                     	ds	4
  2141  00014A                     _rtPressure:
  2142                           	opt stack 0
  2143  00014A                     	ds	4
  2144  00014E                     _rtTemperatureIn:
  2145                           	opt stack 0
  2146  00014E                     	ds	4
  2147  000152                     _rtVolume:
  2148                           	opt stack 0
  2149  000152                     	ds	4
  2150  000156                     _rtWeight:
  2151                           	opt stack 0
  2152  000156                     	ds	4
  2153  00015A                     _rtDiffPressure:
  2154                           	opt stack 0
  2155  00015A                     	ds	4
  2156  00015E                     _dlyTicker:
  2157                           	opt stack 0
  2158  00015E                     	ds	2
  2159  000160                     _inSocAdcSampleTimer:
  2160                           	opt stack 0
  2161  000160                     	ds	2
  2162  000162                     _PrChipSampleTimer:
  2163                           	opt stack 0
  2164  000162                     	ds	2
  2165  000164                     _diffPrChipSampleTimer:
  2166                           	opt stack 0
  2167  000164                     	ds	2
  2168  000166                     _pAdjValue:
  2169                           	opt stack 0
  2170  000166                     	ds	2
  2171  000168                     _adc_iRef:
  2172                           	opt stack 0
  2173  000168                     	ds	2
  2174  00016A                     _adc_ibat:
  2175                           	opt stack 0
  2176  00016A                     	ds	2
  2177  00016C                     _adc_exPt100:
  2178                           	opt stack 0
  2179  00016C                     	ds	2
  2180  00016E                     _adc_pressure:
  2181                           	opt stack 0
  2182  00016E                     	ds	2
  2183  000170                     _adc_inPt100:
  2184                           	opt stack 0
  2185  000170                     	ds	2
  2186  000172                     _ads1115Chip0:
  2187                           	opt stack 0
  2188  000172                     	ds	16
  2189  000182                     _at24c02Ch0:
  2190                           	opt stack 0
  2191  000182                     	ds	11
  2192  00018D                     _at24c02Ch1:
  2193                           	opt stack 0
  2194  00018D                     	ds	11
  2195  000198                     _sampBufRefInSoc:
  2196                           	opt stack 0
  2197  000198                     	ds	8
  2198  0001A0                     _sampBufBatInSoc:
  2199                           	opt stack 0
  2200  0001A0                     	ds	8
  2201  0001A8                     _sampBufExPr1InSoc:
  2202                           	opt stack 0
  2203  0001A8                     	ds	8
  2204  0001B0                     _sampBufExPr0InSoc:
  2205                           	opt stack 0
  2206  0001B0                     	ds	8
  2207  0001B8                     _sampBufPr:
  2208                           	opt stack 0
  2209  0001B8                     	ds	8
  2210  0001C0                     _sampBufPt100ExB:
  2211                           	opt stack 0
  2212  0001C0                     	ds	8
  2213  0001C8                     _sampBufPt100ExA:
  2214                           	opt stack 0
  2215  0001C8                     	ds	8
  2216  0001D0                     _sampBufDiffPr_S1:
  2217                           	opt stack 0
  2218  0001D0                     	ds	8
  2219  0001D8                     _sampBufDiffPr_D23:
  2220                           	opt stack 0
  2221  0001D8                     	ds	8
  2222  0001E0                     _sampBufDiffPr_D01:
  2223                           	opt stack 0
  2224  0001E0                     	ds	8
  2225  0001E8                     _x_prDiffData:
  2226                           	opt stack 0
  2227  0001E8                     	ds	8
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           fsr1h	equ	0xFE2
  2236                           fsr1l	equ	0xFE1
  2237                           
  2238                           	psect	dataBANK1
  2239  0001F0                     __pdataBANK1:
  2240                           	opt stack 0
  2241  0001F0                     ui_disp_start_cs600@F7726:
  2242                           	opt stack 0
  2243  0001F0                     	ds	6
  2244  0001F6                     _defalutRtc:
  2245                           	opt stack 0
  2246  0001F6                     	ds	7
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           postinc0	equ	0xFEE
  2252                           wreg	equ	0xFE8
  2253                           postdec1	equ	0xFE5
  2254                           fsr1h	equ	0xFE2
  2255                           fsr1l	equ	0xFE1
  2256                           
  2257                           	psect	bssBANK2
  2258  000200                     __pbssBANK2:
  2259                           	opt stack 0
  2260  000200                     _stSysData:
  2261                           	opt stack 0
  2262  000200                     	ds	240
  2263  0002F0                     _ads1115Chip1:
  2264                           	opt stack 0
  2265  0002F0                     	ds	16
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           postdec1	equ	0xFE5
  2273                           fsr1h	equ	0xFE2
  2274                           fsr1l	equ	0xFE1
  2275                           
  2276                           	psect	bssBANK3
  2277  000300                     __pbssBANK3:
  2278                           	opt stack 0
  2279  000300                     _rtDiffPrBuf:
  2280                           	opt stack 0
  2281  000300                     	ds	16
  2282  000310                     _diff_prCalibTabDef:
  2283                           	opt stack 0
  2284  000310                     	ds	162
  2285  0003B2                     _tmpx:
  2286                           	opt stack 0
  2287  0003B2                     	ds	24
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1h	equ	0xFE2
  2296                           fsr1l	equ	0xFE1
  2297                           
  2298                           	psect	bssBANK4
  2299  000400                     __pbssBANK4:
  2300                           	opt stack 0
  2301  000400                     _prCalibTabDef:
  2302                           	opt stack 0
  2303  000400                     	ds	162
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           postdec1	equ	0xFE5
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           
  2314                           	psect	bssBANK5
  2315  000500                     __pbssBANK5:
  2316                           	opt stack 0
  2317  000500                     _globleBuffer:
  2318                           	opt stack 0
  2319  000500                     	ds	256
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           
  2330                           	psect	cstackBANK3
  2331  0003CA                     __pcstackBANK3:
  2332                           	opt stack 0
  2333  0003CA                     ?_cal_diff_hight_to_vol_h:
  2334                           	opt stack 0
  2335  0003CA                     ?_cal_diff_hight_to_vol_v:
  2336                           	opt stack 0
  2337  0003CA                     ___set_short_pose_size@gohome:
  2338                           	opt stack 0
  2339  0003CA                     ___set_short_warn_type@gohome:
  2340                           	opt stack 0
  2341  0003CA                     ___set_short_warn_value@gohome:
  2342                           	opt stack 0
  2343  0003CA                     ___set_short_epr_param@gohome:
  2344                           	opt stack 0
  2345  0003CA                     ___set_short_epr_ilp_scale@gohome:
  2346                           	opt stack 0
  2347  0003CA                     cal_diff_hight_to_vol_h@h:
  2348                           	opt stack 0
  2349  0003CA                     cal_diff_hight_to_vol_v@h:
  2350                           	opt stack 0
  2351  0003CA                     ___set_long_density@t32:
  2352                           	opt stack 0
  2353  0003CA                     ___set_long_base_zero@t32:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0x0
  2357  0003CA                     	ds	1
  2358  0003CB                     ___set_short_pose_size@p:
  2359                           	opt stack 0
  2360  0003CB                     ___set_short_warn_type@p:
  2361                           	opt stack 0
  2362  0003CB                     ___set_short_warn_value@t32:
  2363                           	opt stack 0
  2364  0003CB                     ___set_short_epr_param@t32:
  2365                           	opt stack 0
  2366  0003CB                     ___set_short_epr_ilp_scale@t32:
  2367                           	opt stack 0
  2368                           
  2369                           ; 4 bytes @ 0x1
  2370  0003CB                     	ds	2
  2371  0003CD                     ___set_short_warn_type@stp:
  2372                           	opt stack 0
  2373  0003CD                     ___set_short_pose_size@t32:
  2374                           	opt stack 0
  2375                           
  2376                           ; 4 bytes @ 0x3
  2377  0003CD                     	ds	1
  2378  0003CE                     ___set_long_density@stp:
  2379                           	opt stack 0
  2380  0003CE                     ___set_long_base_zero@stp:
  2381                           	opt stack 0
  2382  0003CE                     cal_diff_hight_to_vol_h@v2:
  2383                           	opt stack 0
  2384  0003CE                     _cal_diff_hight_to_vol_v$5840:
  2385                           	opt stack 0
  2386                           
  2387                           ; 4 bytes @ 0x4
  2388  0003CE                     	ds	1
  2389  0003CF                     ___set_short_warn_value@stp:
  2390                           	opt stack 0
  2391  0003CF                     ___set_short_epr_param@stp:
  2392                           	opt stack 0
  2393  0003CF                     ___set_short_epr_ilp_scale@stp:
  2394                           	opt stack 0
  2395                           
  2396                           ; 2 bytes @ 0x5
  2397  0003CF                     	ds	2
  2398  0003D1                     ___set_short_warn_value@t8:
  2399                           	opt stack 0
  2400  0003D1                     ___set_short_pose_size@stp:
  2401                           	opt stack 0
  2402                           
  2403                           ; 2 bytes @ 0x7
  2404  0003D1                     	ds	1
  2405  0003D2                     cal_diff_hight_to_vol_h@f2:
  2406                           	opt stack 0
  2407  0003D2                     cal_diff_hight_to_vol_v@v1:
  2408                           	opt stack 0
  2409                           
  2410                           ; 4 bytes @ 0x8
  2411  0003D2                     	ds	4
  2412  0003D6                     cal_diff_hight_to_vol_h@v1:
  2413                           	opt stack 0
  2414  0003D6                     cal_diff_hight_to_vol_v@v2:
  2415                           	opt stack 0
  2416                           
  2417                           ; 4 bytes @ 0xC
  2418  0003D6                     	ds	4
  2419  0003DA                     cal_diff_hight_to_vol_h@f1:
  2420                           	opt stack 0
  2421  0003DA                     cal_diff_hight_to_vol_v@D:
  2422                           	opt stack 0
  2423                           
  2424                           ; 4 bytes @ 0x10
  2425  0003DA                     	ds	4
  2426  0003DE                     cal_diff_hight_to_vol_v@f1:
  2427                           	opt stack 0
  2428                           
  2429                           ; 4 bytes @ 0x14
  2430  0003DE                     	ds	4
  2431  0003E2                     cal_diff_press@tabrow:
  2432                           	opt stack 0
  2433                           
  2434                           ; 2 bytes @ 0x18
  2435  0003E2                     	ds	2
  2436  0003E4                     cal_diff_press@xin:
  2437                           	opt stack 0
  2438                           
  2439                           ; 2 bytes @ 0x1A
  2440  0003E4                     	ds	2
  2441  0003E6                     cal_diff_press@i:
  2442                           	opt stack 0
  2443                           
  2444                           ; 1 bytes @ 0x1C
  2445  0003E6                     	ds	1
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           
  2456                           	psect	cstackBANK1
  2457  0001FD                     __pcstackBANK1:
  2458                           	opt stack 0
  2459  0001FD                     key_process@tm:
  2460                           	opt stack 0
  2461                           
  2462                           ; 2 bytes @ 0x0
  2463  0001FD                     	ds	2
  2464  0001FF                     key_process@key:
  2465                           	opt stack 0
  2466                           
  2467                           ; 1 bytes @ 0x2
  2468  0001FF                     	ds	1
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1h	equ	0xFE2
  2477                           fsr1l	equ	0xFE1
  2478                           
  2479                           	psect	cstackBANK0
  2480  000060                     __pcstackBANK0:
  2481                           	opt stack 0
  2482  000060                     ??___enter_menu_poly_coeffic:
  2483  000060                     ??___enter_menu_warn_type:
  2484  000060                     ??___enter_menu_bar_scale:
  2485  000060                     ?___exp_10:
  2486                           	opt stack 0
  2487  000060                     ?_crc_sum:
  2488                           	opt stack 0
  2489  000060                     ?___awdiv:
  2490                           	opt stack 0
  2491  000060                     ?___awmod:
  2492                           	opt stack 0
  2493  000060                     ?___lmul:
  2494                           	opt stack 0
  2495  000060                     ?___lldiv:
  2496                           	opt stack 0
  2497  000060                     ?___xxtofl:
  2498                           	opt stack 0
  2499  000060                     lcd_disp_get_code@chr:
  2500                           	opt stack 0
  2501  000060                     lcd_disp_all@x:
  2502                           	opt stack 0
  2503  000060                     ___lbdiv@dividend:
  2504                           	opt stack 0
  2505  000060                     key_shift_loc@loc:
  2506                           	opt stack 0
  2507  000060                     ___enter_menu_set_pose_size@fps:
  2508                           	opt stack 0
  2509  000060                     ___up_warn_type_adj@p:
  2510                           	opt stack 0
  2511  000060                     ___up_adj_work_mode@p:
  2512                           	opt stack 0
  2513  000060                     ___set_long_work_mode@p:
  2514                           	opt stack 0
  2515  000060                     ___x_arrange_str@str:
  2516                           	opt stack 0
  2517  000060                     crc_sum@puchMsg:
  2518                           	opt stack 0
  2519  000060                     m_mem_set@buf:
  2520                           	opt stack 0
  2521  000060                     m_mem_cpy_len@d:
  2522                           	opt stack 0
  2523  000060                     m_mem_cpy@d:
  2524                           	opt stack 0
  2525  000060                     m_int8_2_hex@str:
  2526                           	opt stack 0
  2527  000060                     ads1115_init@pAds1115:
  2528                           	opt stack 0
  2529  000060                     ads1115_set_mux@pAds1115:
  2530                           	opt stack 0
  2531  000060                     ads1115_set_pga@pAds1115:
  2532                           	opt stack 0
  2533  000060                     ads1115_set_data_rate@pAds1115:
  2534                           	opt stack 0
  2535  000060                     at24c02_init@pAt24c02:
  2536                           	opt stack 0
  2537  000060                     delay_us@dly:
  2538                           	opt stack 0
  2539  000060                     rtc_set@rtc:
  2540                           	opt stack 0
  2541  000060                     ticker_dly@ms:
  2542                           	opt stack 0
  2543  000060                     ___awdiv@dividend:
  2544                           	opt stack 0
  2545  000060                     ___awmod@dividend:
  2546                           	opt stack 0
  2547  000060                     m_flash_erase@addr:
  2548                           	opt stack 0
  2549  000060                     m_flash_read@addr:
  2550                           	opt stack 0
  2551  000060                     ___lmul@multiplier:
  2552                           	opt stack 0
  2553  000060                     ___lldiv@dividend:
  2554                           	opt stack 0
  2555  000060                     ___xxtofl@val:
  2556                           	opt stack 0
  2557                           
  2558                           ; 4 bytes @ 0x0
  2559  000060                     	ds	1
  2560  000061                     lcd_disp_get_code@ret:
  2561                           	opt stack 0
  2562  000061                     lcd_disp_all@i:
  2563                           	opt stack 0
  2564  000061                     ___lbdiv@counter:
  2565                           	opt stack 0
  2566                           
  2567                           ; 1 bytes @ 0x1
  2568  000061                     	ds	1
  2569  000062                     ?___wmul:
  2570                           	opt stack 0
  2571  000062                     ?___lwdiv:
  2572                           	opt stack 0
  2573  000062                     key_shift_loc@min:
  2574                           	opt stack 0
  2575  000062                     ___enter_menu_poly_coeffic@__subMenu:
  2576                           	opt stack 0
  2577  000062                     ___enter_menu_warn_type@__subMenu:
  2578                           	opt stack 0
  2579  000062                     ___x_arrange_str@len:
  2580                           	opt stack 0
  2581  000062                     m_mem_set@x:
  2582                           	opt stack 0
  2583  000062                     m_int8_2_hex@b:
  2584                           	opt stack 0
  2585  000062                     ads1115_init@slvaddr:
  2586                           	opt stack 0
  2587  000062                     ads1115_set_mux@mux:
  2588                           	opt stack 0
  2589  000062                     ads1115_set_pga@pga:
  2590                           	opt stack 0
  2591  000062                     ads1115_set_data_rate@dr:
  2592                           	opt stack 0
  2593  000062                     at24c02_init@slv:
  2594                           	opt stack 0
  2595  000062                     lcd_disp_get_code@i:
  2596                           	opt stack 0
  2597  000062                     ___lbdiv@quotient:
  2598                           	opt stack 0
  2599  000062                     ___enter_menu_bar_scale@fps:
  2600                           	opt stack 0
  2601  000062                     crc_sum@usDataLen:
  2602                           	opt stack 0
  2603  000062                     m_mem_cpy_len@s:
  2604                           	opt stack 0
  2605  000062                     m_mem_cpy@s:
  2606                           	opt stack 0
  2607  000062                     delay_us@i:
  2608                           	opt stack 0
  2609  000062                     rtc_set@stp:
  2610                           	opt stack 0
  2611  000062                     ___wmul@multiplier:
  2612                           	opt stack 0
  2613  000062                     ___awdiv@divisor:
  2614                           	opt stack 0
  2615  000062                     ___awmod@divisor:
  2616                           	opt stack 0
  2617  000062                     ___lwdiv@dividend:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x2
  2621  000062                     	ds	1
  2622  000063                     key_shift_loc@max:
  2623                           	opt stack 0
  2624  000063                     m_mem_set@len:
  2625                           	opt stack 0
  2626  000063                     ___enter_menu_poly_coeffic@fps:
  2627                           	opt stack 0
  2628  000063                     ___enter_menu_warn_type@fps:
  2629                           	opt stack 0
  2630                           
  2631                           ; 2 bytes @ 0x3
  2632  000063                     	ds	1
  2633  000064                     ??_crc_sum:
  2634  000064                     ??___xxtofl:
  2635  000064                     ?_in_adc_start_and_read:
  2636                           	opt stack 0
  2637  000064                     iic_send_byte@x:
  2638                           	opt stack 0
  2639  000064                     iic_received_byte@ret:
  2640                           	opt stack 0
  2641  000064                     ___awdiv@counter:
  2642                           	opt stack 0
  2643  000064                     ___awmod@counter:
  2644                           	opt stack 0
  2645  000064                     m_mem_cpy_len@len:
  2646                           	opt stack 0
  2647  000064                     m_flash_read@buf:
  2648                           	opt stack 0
  2649  000064                     delay_ms@dly:
  2650                           	opt stack 0
  2651  000064                     ___wmul@multiplicand:
  2652                           	opt stack 0
  2653  000064                     ___lwdiv@divisor:
  2654                           	opt stack 0
  2655  000064                     m_flash_erase@t32:
  2656                           	opt stack 0
  2657  000064                     ___lmul@multiplicand:
  2658                           	opt stack 0
  2659  000064                     ___lldiv@divisor:
  2660                           	opt stack 0
  2661                           
  2662                           ; 4 bytes @ 0x4
  2663  000064                     	ds	1
  2664  000065                     iic_send_byte@i:
  2665                           	opt stack 0
  2666  000065                     iic_received_byte@i:
  2667                           	opt stack 0
  2668  000065                     ___awdiv@sign:
  2669                           	opt stack 0
  2670  000065                     ___awmod@sign:
  2671                           	opt stack 0
  2672                           
  2673                           ; 1 bytes @ 0x5
  2674  000065                     	ds	1
  2675  000066                     iic_received_byte_if_ack@ack:
  2676                           	opt stack 0
  2677  000066                     in_adc_start_and_read@ch:
  2678                           	opt stack 0
  2679  000066                     key_polling@ktemp:
  2680                           	opt stack 0
  2681  000066                     ___lwdiv@counter:
  2682                           	opt stack 0
  2683  000066                     crc_sum@len:
  2684                           	opt stack 0
  2685  000066                     ads1115_write_reg@pAds1115:
  2686                           	opt stack 0
  2687  000066                     at24c02_write_n_byte@pAt24c02:
  2688                           	opt stack 0
  2689  000066                     m_flash_read@len:
  2690                           	opt stack 0
  2691  000066                     ___wmul@product:
  2692                           	opt stack 0
  2693  000066                     ___awdiv@quotient:
  2694                           	opt stack 0
  2695                           
  2696                           ; 2 bytes @ 0x6
  2697  000066                     	ds	1
  2698  000067                     iic_received_byte_if_ack@ret:
  2699                           	opt stack 0
  2700  000067                     key_polling@t8:
  2701                           	opt stack 0
  2702  000067                     in_adc_start_and_read@ret:
  2703                           	opt stack 0
  2704  000067                     ___lwdiv@quotient:
  2705                           	opt stack 0
  2706                           
  2707                           ; 2 bytes @ 0x7
  2708  000067                     	ds	1
  2709  000068                     ??_calib_data_set_default_diff_pr:
  2710  000068                     ??_calib_data_set_default_pr:
  2711  000068                     ?_key_waite_release:
  2712                           	opt stack 0
  2713  000068                     ?_ads1115_read_reg:
  2714                           	opt stack 0
  2715  000068                     ads1115_write_reg@addr:
  2716                           	opt stack 0
  2717  000068                     at24c02_write_n_byte@addr:
  2718                           	opt stack 0
  2719  000068                     lcd_set_com_seg@seg:
  2720                           	opt stack 0
  2721  000068                     ___xxtofl@sign:
  2722                           	opt stack 0
  2723  000068                     key_waite_release@timeout:
  2724                           	opt stack 0
  2725  000068                     crc_sum@uIndex:
  2726                           	opt stack 0
  2727  000068                     m_int16_2_str_4@buf:
  2728                           	opt stack 0
  2729  000068                     ads1115_read_reg@pAds1115:
  2730                           	opt stack 0
  2731  000068                     at24c02_read_n_byte@pAt24c02:
  2732                           	opt stack 0
  2733  000068                     m_flash_read@i:
  2734                           	opt stack 0
  2735  000068                     ___lmul@product:
  2736                           	opt stack 0
  2737  000068                     ___lldiv@quotient:
  2738                           	opt stack 0
  2739                           
  2740                           ; 4 bytes @ 0x8
  2741  000068                     	ds	1
  2742  000069                     ?___lwmod:
  2743                           	opt stack 0
  2744  000069                     lcd_set_com_seg@show:
  2745                           	opt stack 0
  2746  000069                     ___xxtofl@exp:
  2747                           	opt stack 0
  2748  000069                     ads1115_write_reg@value:
  2749                           	opt stack 0
  2750  000069                     at24c02_write_n_byte@buf:
  2751                           	opt stack 0
  2752  000069                     ___lwmod@dividend:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x9
  2756  000069                     	ds	1
  2757  00006A                     ??_lcd_set_com_seg:
  2758  00006A                     crc_sum@uchCRCHi:
  2759                           	opt stack 0
  2760  00006A                     ads1115_read_reg@addr:
  2761                           	opt stack 0
  2762  00006A                     at24c02_read_n_byte@addr:
  2763                           	opt stack 0
  2764  00006A                     key_waite_release@key:
  2765                           	opt stack 0
  2766  00006A                     m_int16_2_str_4@x:
  2767                           	opt stack 0
  2768  00006A                     m_flash_read@t32:
  2769                           	opt stack 0
  2770  00006A                     ___xxtofl@arg:
  2771                           	opt stack 0
  2772                           
  2773                           ; 4 bytes @ 0xA
  2774  00006A                     	ds	1
  2775  00006B                     ??_ads1115_read_reg:
  2776  00006B                     crc_sum@uchCRCLo:
  2777                           	opt stack 0
  2778  00006B                     ads1115_start_conversion@pAds1115:
  2779                           	opt stack 0
  2780  00006B                     at24c02_read_n_byte@buf:
  2781                           	opt stack 0
  2782  00006B                     at24c02_write_n_byte@len:
  2783                           	opt stack 0
  2784  00006B                     ___lwmod@divisor:
  2785                           	opt stack 0
  2786                           
  2787                           ; 2 bytes @ 0xB
  2788  00006B                     	ds	1
  2789  00006C                     ?___mflot32_2_int32:
  2790                           	opt stack 0
  2791  00006C                     ?___aldiv:
  2792                           	opt stack 0
  2793  00006C                     ___lldiv@counter:
  2794                           	opt stack 0
  2795  00006C                     crc_verify@message:
  2796                           	opt stack 0
  2797  00006C                     crc_append@message:
  2798                           	opt stack 0
  2799  00006C                     ads1115_read_reg@t16:
  2800                           	opt stack 0
  2801  00006C                     ___mflot32_2_int32@x:
  2802                           	opt stack 0
  2803  00006C                     ___aldiv@dividend:
  2804                           	opt stack 0
  2805                           
  2806                           ; 4 bytes @ 0xC
  2807  00006C                     	ds	1
  2808  00006D                     ?___int32_2_mflot32:
  2809                           	opt stack 0
  2810  00006D                     lcd_set_com_seg@com:
  2811                           	opt stack 0
  2812  00006D                     ___lwmod@counter:
  2813                           	opt stack 0
  2814  00006D                     at24c02_read_n_byte@len:
  2815                           	opt stack 0
  2816  00006D                     at24c02_write_n_byte@i:
  2817                           	opt stack 0
  2818  00006D                     ___int32_2_mflot32@x:
  2819                           	opt stack 0
  2820                           
  2821                           ; 4 bytes @ 0xD
  2822  00006D                     	ds	1
  2823  00006E                     ?_ads1115_read_conversion:
  2824                           	opt stack 0
  2825  00006E                     ?___flmul:
  2826                           	opt stack 0
  2827  00006E                     calib_data_set_default_diff_pr@j:
  2828                           	opt stack 0
  2829  00006E                     calib_data_set_default_pr@i:
  2830                           	opt stack 0
  2831  00006E                     lcd_set_com_seg@offset:
  2832                           	opt stack 0
  2833  00006E                     key_adj_value_fixed@value:
  2834                           	opt stack 0
  2835  00006E                     crc_verify@n:
  2836                           	opt stack 0
  2837  00006E                     crc_append@n:
  2838                           	opt stack 0
  2839  00006E                     ads1115_read_conversion@pAds1115:
  2840                           	opt stack 0
  2841  00006E                     m_flash_write@addr:
  2842                           	opt stack 0
  2843  00006E                     ___flmul@b:
  2844                           	opt stack 0
  2845                           
  2846                           ; 4 bytes @ 0xE
  2847  00006E                     	ds	1
  2848  00006F                     ??_at24c02_read_n_byte:
  2849  00006F                     calib_data_set_default_diff_pr@i:
  2850                           	opt stack 0
  2851  00006F                     calib_data_set_default_pr@j:
  2852                           	opt stack 0
  2853  00006F                     lcd_set_com_seg@bits:
  2854                           	opt stack 0
  2855                           
  2856                           ; 1 bytes @ 0xF
  2857  00006F                     	ds	1
  2858  000070                     ??_crc_verify:
  2859  000070                     ??_crc_append:
  2860  000070                     key_adj_value_fixed@loc:
  2861                           	opt stack 0
  2862  000070                     ___mflot32_2_int32@i:
  2863                           	opt stack 0
  2864  000070                     lcd_disp_battary_bar@bar:
  2865                           	opt stack 0
  2866  000070                     lcd_disp_rf_bar@bar:
  2867                           	opt stack 0
  2868  000070                     lcd_disp_light_bar@bar:
  2869                           	opt stack 0
  2870  000070                     lcd_show_dp@show:
  2871                           	opt stack 0
  2872  000070                     lcd_show_chr@chr:
  2873                           	opt stack 0
  2874  000070                     ___aldiv@divisor:
  2875                           	opt stack 0
  2876                           
  2877                           ; 4 bytes @ 0x10
  2878  000070                     	ds	1
  2879  000071                     ??___int32_2_mflot32:
  2880  000071                     lcd_disp_battary@level:
  2881                           	opt stack 0
  2882  000071                     lcd_disp_rf@rssi:
  2883                           	opt stack 0
  2884  000071                     lcd_disp_light@light:
  2885                           	opt stack 0
  2886  000071                     lcd_show_dp@loc:
  2887                           	opt stack 0
  2888  000071                     lcd_show_chr@loc:
  2889                           	opt stack 0
  2890  000071                     key_adj_value_fixed@dloc:
  2891                           	opt stack 0
  2892  000071                     ads1115_read_conversion@result:
  2893                           	opt stack 0
  2894  000071                     ___mflot32_2_int32@ret:
  2895                           	opt stack 0
  2896                           
  2897                           ; 4 bytes @ 0x11
  2898  000071                     	ds	1
  2899  000072                     lcd_disp_battary@i:
  2900                           	opt stack 0
  2901  000072                     lcd_disp_rf@i:
  2902                           	opt stack 0
  2903  000072                     lcd_show_chr@code:
  2904                           	opt stack 0
  2905  000072                     crc_verify@crccal:
  2906                           	opt stack 0
  2907  000072                     crc_append@crc:
  2908                           	opt stack 0
  2909  000072                     m_flash_write@buf:
  2910                           	opt stack 0
  2911  000072                     ___flmul@a:
  2912                           	opt stack 0
  2913                           
  2914                           ; 4 bytes @ 0x12
  2915  000072                     	ds	1
  2916  000073                     ui_disp_menu_home_test@t8:
  2917                           	opt stack 0
  2918  000073                     key_adj_value_fixed@t16:
  2919                           	opt stack 0
  2920  000073                     at24c02_read_n_byte@i:
  2921                           	opt stack 0
  2922  000073                     lcd_show_string_l0@str:
  2923                           	opt stack 0
  2924  000073                     lcd_show_string_l1@str:
  2925                           	opt stack 0
  2926  000073                     lcd_show_string@str:
  2927                           	opt stack 0
  2928                           
  2929                           ; 2 bytes @ 0x13
  2930  000073                     	ds	1
  2931  000074                     ___aldiv@counter:
  2932                           	opt stack 0
  2933  000074                     crc_verify@expected:
  2934                           	opt stack 0
  2935  000074                     m_flash_write@len:
  2936                           	opt stack 0
  2937                           
  2938                           ; 2 bytes @ 0x14
  2939  000074                     	ds	1
  2940  000075                     lcd_show_string_l0@t8:
  2941                           	opt stack 0
  2942  000075                     lcd_show_string_l1@t8:
  2943                           	opt stack 0
  2944  000075                     lcd_show_string@t8:
  2945                           	opt stack 0
  2946  000075                     ___aldiv@sign:
  2947                           	opt stack 0
  2948  000075                     key_adj_value_float@mfp:
  2949                           	opt stack 0
  2950  000075                     ___int32_2_mflot32@t32:
  2951                           	opt stack 0
  2952  000075                     ___mflot32_2_int32@mf:
  2953                           	opt stack 0
  2954                           
  2955                           ; 4 bytes @ 0x15
  2956  000075                     	ds	1
  2957  000076                     ??_m_flash_write:
  2958  000076                     ??___flmul:
  2959  000076                     calib_data_init_diff_pr@ret:
  2960                           	opt stack 0
  2961  000076                     calib_data_init_pr@ret:
  2962                           	opt stack 0
  2963  000076                     ui_disp_adj_xfloat_pt@str:
  2964                           	opt stack 0
  2965  000076                     ui_disp_adj_xfixed_pt@str:
  2966                           	opt stack 0
  2967  000076                     ui_disp_adj_xfixed_pt_dp@str:
  2968                           	opt stack 0
  2969  000076                     ui_disp_menu_pos_adj@p:
  2970                           	opt stack 0
  2971  000076                     ___aldiv@quotient:
  2972                           	opt stack 0
  2973  000076                     ui_disp_start_cs600@buf:
  2974                           	opt stack 0
  2975                           
  2976                           ; 6 bytes @ 0x16
  2977  000076                     	ds	1
  2978  000077                     key_adj_value_float@loc:
  2979                           	opt stack 0
  2980  000077                     calib_data_init_diff_pr@t16:
  2981                           	opt stack 0
  2982  000077                     calib_data_init_pr@t16:
  2983                           	opt stack 0
  2984  000077                     ui_disp_menu_warn_t_adj@buf:
  2985                           	opt stack 0
  2986  000077                     ui_disp_menu_work_mode_adj@buf:
  2987                           	opt stack 0
  2988                           
  2989                           ; 10 bytes @ 0x17
  2990  000077                     	ds	1
  2991  000078                     m_flash_write@writeTimes:
  2992                           	opt stack 0
  2993  000078                     key_adj_value_float@t16:
  2994                           	opt stack 0
  2995  000078                     ui_disp_adj_xfloat_pt@xpf:
  2996                           	opt stack 0
  2997  000078                     ui_disp_adj_xfixed_pt@x:
  2998                           	opt stack 0
  2999  000078                     ui_disp_adj_xfixed_pt_dp@x:
  3000                           	opt stack 0
  3001  000078                     ui_disp_menu_pos_adj@buf:
  3002                           	opt stack 0
  3003                           
  3004                           ; 6 bytes @ 0x18
  3005  000078                     	ds	1
  3006  000079                     m_flash_write@i:
  3007                           	opt stack 0
  3008  000079                     calib_data_init_diff_pr@buf:
  3009                           	opt stack 0
  3010  000079                     calib_data_init_pr@buf:
  3011                           	opt stack 0
  3012  000079                     ___int32_2_mflot32@mf:
  3013                           	opt stack 0
  3014                           
  3015                           ; 4 bytes @ 0x19
  3016  000079                     	ds	1
  3017  00007A                     ?___x_sample_fliter:
  3018                           	opt stack 0
  3019  00007A                     ?___x_sample_fifo:
  3020                           	opt stack 0
  3021  00007A                     key_adj_value_float@t8:
  3022                           	opt stack 0
  3023  00007A                     ui_disp_adj_xfloat_pt@loc:
  3024                           	opt stack 0
  3025  00007A                     ui_disp_adj_xfixed_pt@loc:
  3026                           	opt stack 0
  3027  00007A                     ui_disp_adj_xfixed_pt_dp@loc:
  3028                           	opt stack 0
  3029  00007A                     ___flmul@sign:
  3030                           	opt stack 0
  3031  00007A                     m_interp1_cal_p_v@tabrow:
  3032                           	opt stack 0
  3033  00007A                     m_interp1_cal_p_t@tmpx:
  3034                           	opt stack 0
  3035  00007A                     ___x_sample_fliter@buf:
  3036                           	opt stack 0
  3037  00007A                     ___x_sample_fifo@buf:
  3038                           	opt stack 0
  3039  00007A                     m_flash_write@pageAddr:
  3040                           	opt stack 0
  3041                           
  3042                           ; 4 bytes @ 0x1A
  3043  00007A                     	ds	1
  3044  00007B                     ??___up_pose_size_adj:
  3045  00007B                     ??_ui_disp_adj_xfloat_pt:
  3046  00007B                     ??_ui_disp_adj_xfixed_pt:
  3047  00007B                     ___up_diff_calib_adj@t8:
  3048                           	opt stack 0
  3049  00007B                     ___up_pr_calib_adj@t8:
  3050                           	opt stack 0
  3051  00007B                     ui_disp_adj_xfixed_pt_dp@dploc:
  3052                           	opt stack 0
  3053  00007B                     ___flmul@aexp:
  3054                           	opt stack 0
  3055                           
  3056                           ; 1 bytes @ 0x1B
  3057  00007B                     	ds	1
  3058  00007C                     ??_ui_disp_adj_xfixed_pt_dp:
  3059  00007C                     ui_disp_start_cs600@dly:
  3060                           	opt stack 0
  3061  00007C                     ___x_sample_fliter@len:
  3062                           	opt stack 0
  3063  00007C                     m_interp1_cal_p_v@xin:
  3064                           	opt stack 0
  3065  00007C                     m_interp1_cal_p_t@xin:
  3066                           	opt stack 0
  3067  00007C                     ___up_pose_size_adj@p:
  3068                           	opt stack 0
  3069  00007C                     ___x_sample_fifo@x:
  3070                           	opt stack 0
  3071  00007C                     ___flmul@grs:
  3072                           	opt stack 0
  3073                           
  3074                           ; 4 bytes @ 0x1C
  3075  00007C                     	ds	1
  3076  00007D                     ??___enter_menu_set_density:
  3077  00007D                     ??___enter_menu_calib_press_diff:
  3078  00007D                     ??___enter_menu_calib_press:
  3079  00007D                     ??___enter_menu_warn_value:
  3080  00007D                     ___enter_menu_epr_calib@__subMenu:
  3081                           	opt stack 0
  3082  00007D                     ___enter_menu_epr_ilp_scale@__subMenu:
  3083                           	opt stack 0
  3084  00007D                     ui_disp_start_cs600@t8:
  3085                           	opt stack 0
  3086  00007D                     ui_disp_menu_warn_t_adj@t8:
  3087                           	opt stack 0
  3088  00007D                     ___x_sample_fliter@loop:
  3089                           	opt stack 0
  3090  00007D                     ___enter_menu_set_d@fps:
  3091                           	opt stack 0
  3092  00007D                     ___enter_menu_set_h@fps:
  3093                           	opt stack 0
  3094  00007D                     ___enter_menu_set_base_zero@fps:
  3095                           	opt stack 0
  3096  00007D                     ui_disp_adj_xfloat_pt@buf:
  3097                           	opt stack 0
  3098  00007D                     ui_disp_adj_xfixed_pt@buf:
  3099                           	opt stack 0
  3100                           
  3101                           ; 10 bytes @ 0x1D
  3102  00007D                     	ds	1
  3103  00007E                     ??___x_sample_fliter:
  3104  00007E                     m_interp1_cal_p_t@tmpxLen:
  3105                           	opt stack 0
  3106  00007E                     ___x_sample_fifo@len:
  3107                           	opt stack 0
  3108  00007E                     m_flash_write@j:
  3109                           	opt stack 0
  3110  00007E                     m_interp1_cal_p_v@xout:
  3111                           	opt stack 0
  3112  00007E                     ui_disp_menu_warn_t_adj@p:
  3113                           	opt stack 0
  3114  00007E                     ___enter_menu_epr_calib@t32:
  3115                           	opt stack 0
  3116  00007E                     ___enter_menu_epr_ilp_scale@t32:
  3117                           	opt stack 0
  3118  00007E                     ui_disp_adj_xfixed_pt_dp@buf:
  3119                           	opt stack 0
  3120                           
  3121                           ; 10 bytes @ 0x1E
  3122  00007E                     	ds	1
  3123  00007F                     ??_m_interp1_cal_p_t:
  3124  00007F                     ??___x_sample_fifo:
  3125  00007F                     ___enter_menu_warn_value@__subMenu:
  3126                           	opt stack 0
  3127  00007F                     ___enter_menu_set_density@fps:
  3128                           	opt stack 0
  3129  00007F                     m_flash_write@tmpBuf:
  3130                           	opt stack 0
  3131  00007F                     ___enter_menu_set_d@t32:
  3132                           	opt stack 0
  3133  00007F                     ___enter_menu_set_h@t32:
  3134                           	opt stack 0
  3135  00007F                     ___enter_menu_set_base_zero@t32:
  3136                           	opt stack 0
  3137                           
  3138                           ; 4 bytes @ 0x1F
  3139  00007F                     	ds	1
  3140  000080                     ??_m_interp1_cal_p_v:
  3141  000080                     ___flmul@bexp:
  3142                           	opt stack 0
  3143  000080                     ___enter_menu_warn_value@fps:
  3144                           	opt stack 0
  3145                           
  3146                           ; 2 bytes @ 0x20
  3147  000080                     	ds	1
  3148  000081                     ui_disp_menu_work_mode_adj@p:
  3149                           	opt stack 0
  3150  000081                     m_flash_write@t16:
  3151                           	opt stack 0
  3152  000081                     ___enter_menu_set_density@t32:
  3153                           	opt stack 0
  3154  000081                     ___flmul@prod:
  3155                           	opt stack 0
  3156                           
  3157                           ; 4 bytes @ 0x21
  3158  000081                     	ds	1
  3159  000082                     ___enter_menu_warn_value@t8:
  3160                           	opt stack 0
  3161  000082                     ___enter_menu_epr_calib@fps:
  3162                           	opt stack 0
  3163  000082                     ___enter_menu_epr_ilp_scale@fps:
  3164                           	opt stack 0
  3165                           
  3166                           ; 2 bytes @ 0x22
  3167  000082                     	ds	1
  3168  000083                     ___enter_menu_calib_press_diff@row:
  3169                           	opt stack 0
  3170  000083                     ___enter_menu_calib_press@row:
  3171                           	opt stack 0
  3172  000083                     ___enter_menu_warn_value@t32:
  3173                           	opt stack 0
  3174                           
  3175                           ; 4 bytes @ 0x23
  3176  000083                     	ds	1
  3177  000084                     ___x_sample_fliter@maxLoc:
  3178                           	opt stack 0
  3179  000084                     ___enter_menu_calib_press_diff@stp:
  3180                           	opt stack 0
  3181  000084                     ___enter_menu_calib_press@stp:
  3182                           	opt stack 0
  3183                           
  3184                           ; 2 bytes @ 0x24
  3185  000084                     	ds	1
  3186  000085                     ___x_sample_fliter@minLoc:
  3187                           	opt stack 0
  3188  000085                     ___flmul@temp:
  3189                           	opt stack 0
  3190  000085                     ___x_sample_fifo@ret:
  3191                           	opt stack 0
  3192                           
  3193                           ; 4 bytes @ 0x25
  3194  000085                     	ds	1
  3195  000086                     ___x_sample_fliter@max:
  3196                           	opt stack 0
  3197  000086                     ___enter_menu_calib_press_diff@t32:
  3198                           	opt stack 0
  3199  000086                     ___enter_menu_calib_press@t32:
  3200                           	opt stack 0
  3201                           
  3202                           ; 4 bytes @ 0x26
  3203  000086                     	ds	1
  3204  000087                     ?___fldiv:
  3205                           	opt stack 0
  3206  000087                     ui_disp_adj_xfloat_pt@x:
  3207                           	opt stack 0
  3208  000087                     ___fldiv@b:
  3209                           	opt stack 0
  3210                           
  3211                           ; 4 bytes @ 0x27
  3212  000087                     	ds	1
  3213  000088                     ___x_sample_fliter@min:
  3214                           	opt stack 0
  3215  000088                     ui_disp_menu_poly_c_adj@buf:
  3216                           	opt stack 0
  3217                           
  3218                           ; 6 bytes @ 0x28
  3219  000088                     	ds	1
  3220  000089                     ui_disp_adj_xfloat_pt@t8:
  3221                           	opt stack 0
  3222  000089                     ___x_sample_fifo@i:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x29
  3226  000089                     	ds	1
  3227  00008A                     ??_key_process_set_down_long:
  3228  00008A                     ??___set_short_diff_calib:
  3229  00008A                     ??___set_short_pr_calib:
  3230  00008A                     ??_ui_disp_menu_warn_v_adj:
  3231  00008A                     sample_pr_chip_fast@ret:
  3232                           	opt stack 0
  3233  00008A                     ui_disp_menu_h_adj@fps:
  3234                           	opt stack 0
  3235  00008A                     sample_in_soc_adc_ch@t16:
  3236                           	opt stack 0
  3237  00008A                     m_interp1_cal_p_t@y:
  3238                           	opt stack 0
  3239  00008A                     ___x_sample_fliter@t32:
  3240                           	opt stack 0
  3241  00008A                     ui_disp_menu_epr_calib_adj@buf:
  3242                           	opt stack 0
  3243  00008A                     ui_disp_menu_epr_ilp_scale_adj@buf:
  3244                           	opt stack 0
  3245  00008A                     ui_disp_menu_calib_diff_adj@buf:
  3246                           	opt stack 0
  3247  00008A                     ui_disp_menu_calib_pr_adj@buf:
  3248                           	opt stack 0
  3249                           
  3250                           ; 10 bytes @ 0x2A
  3251  00008A                     	ds	1
  3252  00008B                     sample_pr_chip_fast@t16:
  3253                           	opt stack 0
  3254  00008B                     m_interp1_cal_p_v@y:
  3255                           	opt stack 0
  3256  00008B                     ___fldiv@a:
  3257                           	opt stack 0
  3258                           
  3259                           ; 4 bytes @ 0x2B
  3260  00008B                     	ds	1
  3261  00008C                     ui_disp_menu_warn_v_adj@buf:
  3262                           	opt stack 0
  3263                           
  3264                           ; 6 bytes @ 0x2C
  3265  00008C                     	ds	2
  3266  00008E                     ui_disp_menu_poly_c_adj@t8:
  3267                           	opt stack 0
  3268  00008E                     ___x_sample_fliter@i:
  3269                           	opt stack 0
  3270  00008E                     m_interp1_cal_p_t@x:
  3271                           	opt stack 0
  3272                           
  3273                           ; 4 bytes @ 0x2E
  3274  00008E                     	ds	1
  3275  00008F                     ??___fldiv:
  3276  00008F                     sample_diff_pr_fliter@xin:
  3277                           	opt stack 0
  3278  00008F                     m_interp1_cal_p_v@x:
  3279                           	opt stack 0
  3280                           
  3281                           ; 4 bytes @ 0x2F
  3282  00008F                     	ds	1
  3283  000090                     ___set_short_diff_calib@pra:
  3284                           	opt stack 0
  3285  000090                     ___set_short_pr_calib@pra:
  3286                           	opt stack 0
  3287                           
  3288                           ; 4 bytes @ 0x30
  3289  000090                     	ds	1
  3290  000091                     sample_diff_pr_chip_fast@t16:
  3291                           	opt stack 0
  3292                           
  3293                           ; 2 bytes @ 0x31
  3294  000091                     	ds	1
  3295  000092                     ui_disp_menu_warn_v_adj@fps:
  3296                           	opt stack 0
  3297  000092                     m_interp1_cal_p_t@pr:
  3298                           	opt stack 0
  3299                           
  3300                           ; 4 bytes @ 0x32
  3301  000092                     	ds	1
  3302  000093                     ___fldiv@sign:
  3303                           	opt stack 0
  3304  000093                     m_interp1_cal_p_v@t16:
  3305                           	opt stack 0
  3306                           
  3307                           ; 2 bytes @ 0x33
  3308  000093                     	ds	1
  3309  000094                     ___set_short_diff_calib@gohome:
  3310                           	opt stack 0
  3311  000094                     ___set_short_pr_calib@gohome:
  3312                           	opt stack 0
  3313  000094                     ui_disp_menu_calib_diff_adj@t8:
  3314                           	opt stack 0
  3315  000094                     ui_disp_menu_calib_pr_adj@t8:
  3316                           	opt stack 0
  3317  000094                     ui_disp_menu_warn_v_adj@type:
  3318                           	opt stack 0
  3319  000094                     ___fldiv@rem:
  3320                           	opt stack 0
  3321                           
  3322                           ; 4 bytes @ 0x34
  3323  000094                     	ds	1
  3324  000095                     ___set_short_diff_calib@t8:
  3325                           	opt stack 0
  3326  000095                     ___set_short_pr_calib@t8:
  3327                           	opt stack 0
  3328  000095                     ui_disp_menu_warn_v_adj@t8:
  3329                           	opt stack 0
  3330  000095                     m_interp1_cal_p_v@pr:
  3331                           	opt stack 0
  3332                           
  3333                           ; 4 bytes @ 0x35
  3334  000095                     	ds	1
  3335  000096                     ___set_short_diff_calib@saveFlg:
  3336                           	opt stack 0
  3337  000096                     ___set_short_pr_calib@saveFlg:
  3338                           	opt stack 0
  3339  000096                     m_interp1_cal_p_t@t16:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x36
  3343  000096                     	ds	1
  3344  000097                     ___set_short_diff_calib@t32:
  3345                           	opt stack 0
  3346  000097                     ___set_short_pr_calib@t32:
  3347                           	opt stack 0
  3348                           
  3349                           ; 4 bytes @ 0x37
  3350  000097                     	ds	1
  3351  000098                     m_interp1_cal_p_t@i:
  3352                           	opt stack 0
  3353  000098                     ___fldiv@new_exp:
  3354                           	opt stack 0
  3355                           
  3356                           ; 2 bytes @ 0x38
  3357  000098                     	ds	1
  3358  000099                     m_interp1_cal_p_v@i:
  3359                           	opt stack 0
  3360                           
  3361                           ; 1 bytes @ 0x39
  3362  000099                     	ds	1
  3363  00009A                     cal_press@ret:
  3364                           	opt stack 0
  3365  00009A                     ___fldiv@grs:
  3366                           	opt stack 0
  3367                           
  3368                           ; 4 bytes @ 0x3A
  3369  00009A                     	ds	1
  3370  00009B                     cal_press@tabrow:
  3371                           	opt stack 0
  3372  00009B                     ___set_short_diff_calib@t16:
  3373                           	opt stack 0
  3374  00009B                     ___set_short_pr_calib@t16:
  3375                           	opt stack 0
  3376                           
  3377                           ; 2 bytes @ 0x3B
  3378  00009B                     	ds	2
  3379  00009D                     ___set_short_diff_calib@adjv:
  3380                           	opt stack 0
  3381  00009D                     ___set_short_pr_calib@adjv:
  3382                           	opt stack 0
  3383  00009D                     cal_press@xin:
  3384                           	opt stack 0
  3385                           
  3386                           ; 8 bytes @ 0x3D
  3387  00009D                     	ds	1
  3388  00009E                     ___fldiv@bexp:
  3389                           	opt stack 0
  3390                           
  3391                           ; 1 bytes @ 0x3E
  3392  00009E                     	ds	1
  3393  00009F                     ___fldiv@aexp:
  3394                           	opt stack 0
  3395                           
  3396                           ; 1 bytes @ 0x3F
  3397  00009F                     	ds	1
  3398  0000A0                     ?___flneg:
  3399                           	opt stack 0
  3400  0000A0                     ___flneg@f1:
  3401                           	opt stack 0
  3402                           
  3403                           ; 4 bytes @ 0x40
  3404  0000A0                     	ds	4
  3405  0000A4                     ?___fladd:
  3406                           	opt stack 0
  3407  0000A4                     ___fladd@b:
  3408                           	opt stack 0
  3409                           
  3410                           ; 4 bytes @ 0x44
  3411  0000A4                     	ds	4
  3412  0000A8                     ___fladd@a:
  3413                           	opt stack 0
  3414                           
  3415                           ; 4 bytes @ 0x48
  3416  0000A8                     	ds	4
  3417  0000AC                     ??___fladd:
  3418                           
  3419                           ; 1 bytes @ 0x4C
  3420  0000AC                     	ds	8
  3421  0000B4                     ___fladd@signs:
  3422                           	opt stack 0
  3423                           
  3424                           ; 1 bytes @ 0x54
  3425  0000B4                     	ds	1
  3426  0000B5                     ___fladd@aexp:
  3427                           	opt stack 0
  3428                           
  3429                           ; 1 bytes @ 0x55
  3430  0000B5                     	ds	1
  3431  0000B6                     ___fladd@bexp:
  3432                           	opt stack 0
  3433                           
  3434                           ; 1 bytes @ 0x56
  3435  0000B6                     	ds	1
  3436  0000B7                     ___fladd@grs:
  3437                           	opt stack 0
  3438                           
  3439                           ; 1 bytes @ 0x57
  3440  0000B7                     	ds	1
  3441  0000B8                     ?___fltol:
  3442                           	opt stack 0
  3443  0000B8                     ___flge@ff1:
  3444                           	opt stack 0
  3445  0000B8                     ___fltol@f1:
  3446                           	opt stack 0
  3447                           
  3448                           ; 4 bytes @ 0x58
  3449  0000B8                     	ds	4
  3450  0000BC                     ??___fltol:
  3451  0000BC                     ___flge@ff2:
  3452                           	opt stack 0
  3453                           
  3454                           ; 4 bytes @ 0x5C
  3455  0000BC                     	ds	4
  3456  0000C0                     ??___flge:
  3457  0000C0                     ___fltol@sign1:
  3458                           	opt stack 0
  3459                           
  3460                           ; 1 bytes @ 0x60
  3461  0000C0                     	ds	1
  3462  0000C1                     ___fltol@exp1:
  3463                           	opt stack 0
  3464                           
  3465                           ; 1 bytes @ 0x61
  3466  0000C1                     	ds	1
  3467  0000C2                     ?_data_sys_cal_v1:
  3468                           	opt stack 0
  3469  0000C2                     ?_data_sys_cal_v2:
  3470                           	opt stack 0
  3471  0000C2                     data_sys_cal_v1@stp:
  3472                           	opt stack 0
  3473  0000C2                     data_sys_cal_v2@stp:
  3474                           	opt stack 0
  3475  0000C2                     cal_diff_p_to_h@xin:
  3476                           	opt stack 0
  3477                           
  3478                           ; 2 bytes @ 0x62
  3479  0000C2                     	ds	2
  3480  0000C4                     ?_m_interp1_float_fast:
  3481                           	opt stack 0
  3482  0000C4                     m_interp1_float_fast@tab:
  3483                           	opt stack 0
  3484  0000C4                     cal_diff_p_to_h@f2:
  3485                           	opt stack 0
  3486  0000C4                     _cal_diff_hight_level$5838:
  3487                           	opt stack 0
  3488                           
  3489                           ; 4 bytes @ 0x64
  3490  0000C4                     	ds	2
  3491  0000C6                     m_interp1_float_fast@in:
  3492                           	opt stack 0
  3493  0000C6                     _data_sys_cal_v1$5832:
  3494                           	opt stack 0
  3495  0000C6                     _data_sys_cal_v2$5835:
  3496                           	opt stack 0
  3497                           
  3498                           ; 4 bytes @ 0x66
  3499  0000C6                     	ds	2
  3500  0000C8                     cal_diff_p_to_h@f1:
  3501                           	opt stack 0
  3502  0000C8                     _cal_diff_hight_level$5839:
  3503                           	opt stack 0
  3504                           
  3505                           ; 4 bytes @ 0x68
  3506  0000C8                     	ds	2
  3507  0000CA                     m_interp1_float_fast@len:
  3508                           	opt stack 0
  3509  0000CA                     _data_sys_cal_v1$5833:
  3510                           	opt stack 0
  3511  0000CA                     _data_sys_cal_v2$5836:
  3512                           	opt stack 0
  3513                           
  3514                           ; 4 bytes @ 0x6A
  3515  0000CA                     	ds	2
  3516  0000CC                     ??_m_interp1_float_fast:
  3517  0000CC                     cal_diff_hight_level@f2:
  3518                           	opt stack 0
  3519                           
  3520                           ; 4 bytes @ 0x6C
  3521  0000CC                     	ds	2
  3522  0000CE                     data_sys_cal_v2@f:
  3523                           	opt stack 0
  3524  0000CE                     _data_sys_cal_v1$5834:
  3525                           	opt stack 0
  3526                           
  3527                           ; 4 bytes @ 0x6E
  3528  0000CE                     	ds	2
  3529  0000D0                     cal_diff_hight_level@f1:
  3530                           	opt stack 0
  3531                           
  3532                           ; 4 bytes @ 0x70
  3533  0000D0                     	ds	2
  3534  0000D2                     data_sys_cal_v1@h:
  3535                           	opt stack 0
  3536  0000D2                     data_sys_cal_v2@d:
  3537                           	opt stack 0
  3538                           
  3539                           ; 4 bytes @ 0x72
  3540  0000D2                     	ds	2
  3541  0000D4                     m_interp1_float_fast@x:
  3542                           	opt stack 0
  3543                           
  3544                           ; 4 bytes @ 0x74
  3545  0000D4                     	ds	2
  3546  0000D6                     data_sys_cal_v1@f:
  3547                           	opt stack 0
  3548                           
  3549                           ; 4 bytes @ 0x76
  3550  0000D6                     	ds	2
  3551  0000D8                     m_interp1_float_fast@y:
  3552                           	opt stack 0
  3553                           
  3554                           ; 4 bytes @ 0x78
  3555  0000D8                     	ds	2
  3556  0000DA                     data_sys_cal_v1@r:
  3557                           	opt stack 0
  3558                           
  3559                           ; 4 bytes @ 0x7A
  3560  0000DA                     	ds	2
  3561  0000DC                     _m_interp1_float_fast$5837:
  3562                           	opt stack 0
  3563                           
  3564                           ; 4 bytes @ 0x7C
  3565  0000DC                     	ds	2
  3566  0000DE                     ___sys_data_save_write_flash@ret:
  3567                           	opt stack 0
  3568  0000DE                     data_sys_init@t16:
  3569                           	opt stack 0
  3570                           
  3571                           ; 2 bytes @ 0x7E
  3572  0000DE                     	ds	1
  3573  0000DF                     ___sys_data_save_write_flash@stp:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x7F
  3577  0000DF                     	ds	1
  3578  0000E0                     data_sys_init@ret:
  3579                           	opt stack 0
  3580  0000E0                     m_interp1_float_fast@f:
  3581                           	opt stack 0
  3582                           
  3583                           ; 4 bytes @ 0x80
  3584  0000E0                     	ds	1
  3585  0000E1                     data_sys_init@stp:
  3586                           	opt stack 0
  3587  0000E1                     ___sys_data_save_write_flash@buf:
  3588                           	opt stack 0
  3589                           
  3590                           ; 2 bytes @ 0x81
  3591  0000E1                     	ds	2
  3592  0000E3                     ??___set_short_warn_type:
  3593  0000E3                     ??___set_short_warn_value:
  3594  0000E3                     ___set_short_poly_coefic@gohome:
  3595                           	opt stack 0
  3596  0000E3                     data_sys_init@buf:
  3597                           	opt stack 0
  3598  0000E3                     ___set_long_bar_level_scale@p:
  3599                           	opt stack 0
  3600                           
  3601                           ; 2 bytes @ 0x83
  3602  0000E3                     	ds	1
  3603  0000E4                     m_interp1_float_fast@i:
  3604                           	opt stack 0
  3605  0000E4                     ___set_short_poly_coefic@p:
  3606                           	opt stack 0
  3607                           
  3608                           ; 2 bytes @ 0x84
  3609  0000E4                     	ds	1
  3610  0000E5                     ___set_long_bar_level_scale@stp:
  3611                           	opt stack 0
  3612                           
  3613                           ; 2 bytes @ 0x85
  3614  0000E5                     	ds	1
  3615  0000E6                     sample_call_in_ticker@ret:
  3616                           	opt stack 0
  3617  0000E6                     sample_function_enable_fi_in_rtc@ret:
  3618                           	opt stack 0
  3619  0000E6                     ___set_short_poly_coefic@stp:
  3620                           	opt stack 0
  3621                           
  3622                           ; 2 bytes @ 0x86
  3623  0000E6                     	ds	1
  3624  0000E7                     event_process_rtc@ret:
  3625                           	opt stack 0
  3626  0000E7                     event_process_ticker@ret:
  3627                           	opt stack 0
  3628                           
  3629                           ; 1 bytes @ 0x87
  3630  0000E7                     	ds	1
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           
  3641                           	psect	cstackCOMRAM
  3642  000001                     __pcstackCOMRAM:
  3643                           	opt stack 0
  3644  000001                     ??_handler_interrupt_hight:
  3645  000001                     
  3646                           ; 2 bytes @ 0x0
  3647  000001                     	ds	14
  3648  00000F                     ??_handler_interrupt_low:
  3649                           
  3650                           ; 1 bytes @ 0xE
  3651  00000F                     	ds	17
  3652  000020                     ??_ads1115_set_data_rate:
  3653  000020                     ??_ads1115_set_mux:
  3654  000020                     ??_ads1115_set_pga:
  3655  000020                     ??_in_adc_start_and_read:
  3656  000020                     ??___up_warn_type_adj:
  3657  000020                     cal_additional_pressute@index:
  3658                           	opt stack 0
  3659  000020                     ___exp_10@n:
  3660                           	opt stack 0
  3661  000020                     key_waite_release@t8:
  3662                           	opt stack 0
  3663  000020                     key_shift_loc@t8:
  3664                           	opt stack 0
  3665  000020                     ___enter_menu_calib_press_diff@col:
  3666                           	opt stack 0
  3667  000020                     ___enter_menu_calib_press@col:
  3668                           	opt stack 0
  3669  000020                     ___down_home_adj_test@t8:
  3670                           	opt stack 0
  3671  000020                     ___up_home_adj@t8:
  3672                           	opt stack 0
  3673  000020                     ___x_arrange_str@i:
  3674                           	opt stack 0
  3675  000020                     m_int8_2_hex@t8:
  3676                           	opt stack 0
  3677  000020                     iic_send_ack@ack:
  3678                           	opt stack 0
  3679  000020                     iic_waite_ack@timeout:
  3680                           	opt stack 0
  3681  000020                     lcd_disp_battary_bar@show:
  3682                           	opt stack 0
  3683  000020                     lcd_disp_rf_bar@show:
  3684                           	opt stack 0
  3685  000020                     lcd_disp_light_bar@show:
  3686                           	opt stack 0
  3687  000020                     lcd_disp_chr_loc_0@code:
  3688                           	opt stack 0
  3689  000020                     lcd_disp_dp_loc_0@dp:
  3690                           	opt stack 0
  3691  000020                     lcd_disp_chr_loc_1@code:
  3692                           	opt stack 0
  3693  000020                     lcd_disp_dp_loc_1@dp:
  3694                           	opt stack 0
  3695  000020                     lcd_disp_chr_loc_2@code:
  3696                           	opt stack 0
  3697  000020                     lcd_disp_dp_loc_2@dp:
  3698                           	opt stack 0
  3699  000020                     lcd_disp_chr_loc_3@code:
  3700                           	opt stack 0
  3701  000020                     lcd_disp_chr_loc_4@code:
  3702                           	opt stack 0
  3703  000020                     lcd_disp_dp_loc_4@dp:
  3704                           	opt stack 0
  3705  000020                     lcd_disp_chr_loc_5@code:
  3706                           	opt stack 0
  3707  000020                     lcd_disp_dp_loc_5@dp:
  3708                           	opt stack 0
  3709  000020                     lcd_disp_chr_loc_6@code:
  3710                           	opt stack 0
  3711  000020                     lcd_disp_dp_loc_6@dp:
  3712                           	opt stack 0
  3713  000020                     lcd_disp_chr_loc_7@code:
  3714                           	opt stack 0
  3715  000020                     lcd_disp_logo@show:
  3716                           	opt stack 0
  3717  000020                     lcd_disp_unit_2nd_m@show:
  3718                           	opt stack 0
  3719  000020                     lcd_disp_unit_mpa@show:
  3720                           	opt stack 0
  3721  000020                     m_flash_unlock@oldGIE:
  3722                           	opt stack 0
  3723  000020                     ___lbdiv@divisor:
  3724                           	opt stack 0
  3725                           
  3726                           ; 1 bytes @ 0x1F
  3727  000020                     	ds	1
  3728  000021                     tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           postinc0	equ	0xFEE
  3733                           wreg	equ	0xFE8
  3734                           postdec1	equ	0xFE5
  3735                           fsr1h	equ	0xFE2
  3736                           fsr1l	equ	0xFE1
  3737                           
  3738                           ; 1 bytes @ 0x20
  3739 ;;
  3740 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3741 ;;
  3742 ;; *************** function _main *****************
  3743 ;; Defined at:
  3744 ;;		line 5 in file "src/app/main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  t16             2    0        unsigned int 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2  1323[None  ] int 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels required when called:   14
  3764 ;; This function calls:
  3765 ;;		_ads1115_init_all_chip
  3766 ;;		_data_init_all
  3767 ;;		_event_process_rtc
  3768 ;;		_event_process_ticker
  3769 ;;		_event_process_time_out
  3770 ;;		_in_adc_init
  3771 ;;		_key_polling
  3772 ;;		_key_process
  3773 ;;		_lcd_init
  3774 ;;		_rtc_set
  3775 ;;		_soc_init
  3776 ;;		_ui_disp_start_cs600
  3777 ;; This function is called by:
  3778 ;;		Startup code after reset
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text0
  3783  0088F0                     __ptext0:
  3784                           	opt stack 0
  3785  0088F0                     _main:
  3786                           	opt stack 17
  3787                           
  3788                           ;main.c: 7: uint16_t t16;
  3789                           ;main.c: 8: __nop();
  3790                           
  3791                           ;incstack = 0
  3792  0088F0  F000               	nop	
  3793                           
  3794                           ;main.c: 10: soc_init();
  3795  0088F2  EC1C  F04E         	call	_soc_init	;wreg free
  3796                           
  3797                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  3798  0088F6  0EF6               	movlw	low _defalutRtc
  3799  0088F8  0100               	movlb	0	; () banked
  3800  0088FA  6F60               	movwf	rtc_set@rtc& (0+255),b
  3801  0088FC  0E01               	movlw	high _defalutRtc
  3802  0088FE  0100               	movlb	0	; () banked
  3803  008900  6F61               	movwf	(rtc_set@rtc+1)& (0+255),b
  3804  008902  EC20  F036         	call	_rtc_set	;wreg free
  3805                           
  3806                           ;main.c: 12: lcd_init();
  3807  008906  EC4C  F04D         	call	_lcd_init	;wreg free
  3808                           
  3809                           ;main.c: 14: ads1115_init_all_chip();
  3810  00890A  EC4B  F049         	call	_ads1115_init_all_chip	;wreg free
  3811                           
  3812                           ;main.c: 15: data_init_all();
  3813  00890E  EC33  F04E         	call	_data_init_all	;wreg free
  3814                           
  3815                           ;main.c: 16: in_adc_init();
  3816  008912  ECB6  F04C         	call	_in_adc_init	;wreg free
  3817                           
  3818                           ;main.c: 18: ui_disp_start_cs600(4);
  3819  008916  0E04               	movlw	4
  3820  008918  EC70  F03A         	call	_ui_disp_start_cs600
  3821                           
  3822                           ;main.c: 23: __nop();
  3823  00891C  F000               	nop	
  3824  00891E                     l17622:
  3825                           
  3826                           ;main.c: 25: if(glbEvent & (1<<1)){
  3827  00891E  A22E               	btfss	_glbEvent,1,c	;volatile
  3828  008920  D003               	goto	l17628
  3829                           
  3830                           ;main.c: 26: glbEvent &= ~(1<<1);
  3831  008922  922E               	bcf	_glbEvent,1,c	;volatile
  3832                           
  3833                           ;main.c: 27: event_process_rtc();
  3834  008924  EC19  F04C         	call	_event_process_rtc	;wreg free
  3835  008928                     l17628:
  3836                           
  3837                           ;main.c: 28: }
  3838                           ;main.c: 29: if(glbEvent & (1<<0)){
  3839  008928  A02E               	btfss	_glbEvent,0,c	;volatile
  3840  00892A  D003               	goto	l17634
  3841                           
  3842                           ;main.c: 30: glbEvent &= ~(1<<0);
  3843  00892C  902E               	bcf	_glbEvent,0,c	;volatile
  3844                           
  3845                           ;main.c: 31: event_process_ticker();
  3846  00892E  EC4D  F04E         	call	_event_process_ticker	;wreg free
  3847  008932                     l17634:
  3848                           
  3849                           ;main.c: 32: }
  3850                           ;main.c: 33: if(glbEvent & (1<<2)){
  3851  008932  A42E               	btfss	_glbEvent,2,c	;volatile
  3852  008934  D003               	goto	l17640
  3853                           
  3854                           ;main.c: 34: glbEvent &= ~(1<<2);
  3855  008936  942E               	bcf	_glbEvent,2,c	;volatile
  3856                           
  3857                           ;main.c: 35: event_process_time_out();
  3858  008938  EC5C  F04E         	call	_event_process_time_out	;wreg free
  3859  00893C                     l17640:
  3860                           
  3861                           ;main.c: 36: }
  3862                           ;main.c: 38: keyValue=key_polling();
  3863  00893C  ECC9  F045         	call	_key_polling	;wreg free
  3864  008940  0100               	movlb	0	; () banked
  3865  008942  6FFC               	movwf	_keyValue& (0+255),b	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;main.c: 39: if(keyValue!=(0x0)){
  3869  008944  0100               	movlb	0	; () banked
  3870  008946  51FC               	movf	_keyValue& (0+255),w,b	;volatile
  3871  008948  B4D8               	btfsc	status,2,c
  3872  00894A  D7E9               	goto	l17622
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;main.c: 40: key_process();
  3876  00894C  EC21  F031         	call	_key_process	;wreg free
  3877  008950  D7E6               	goto	l17622
  3878  008952                     __end_of_main:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           postinc0	equ	0xFEE
  3885                           wreg	equ	0xFE8
  3886                           postdec1	equ	0xFE5
  3887                           fsr1h	equ	0xFE2
  3888                           fsr1l	equ	0xFE1
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _ui_disp_start_cs600 *****************
  3892 ;; Defined at:
  3893 ;;		line 147 in file "src/api/ui.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dly             1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  dly             1   28[BANK0 ] unsigned char 
  3898 ;;  buf             6   22[BANK0 ] unsigned char [6]
  3899 ;;  t8              1   29[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;Total ram usage:        8 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    9
  3916 ;; This function calls:
  3917 ;;		_lcd_disp_all
  3918 ;;		_lcd_disp_logo
  3919 ;;		_lcd_disp_refresh
  3920 ;;		_lcd_show_string_l0
  3921 ;;		_lcd_show_string_l1
  3922 ;;		_m_int8_2_hex
  3923 ;;		_ticker_dly
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text1
  3930  0074E0                     __ptext1:
  3931                           	opt stack 0
  3932  0074E0                     _ui_disp_start_cs600:
  3933                           	opt stack 21
  3934                           
  3935                           ;incstack = 0
  3936                           ;ui_disp_start_cs600@dly stored from wreg
  3937  0074E0  0100               	movlb	0	; () banked
  3938  0074E2  6F7C               	movwf	ui_disp_start_cs600@dly& (0+255),b
  3939                           
  3940                           ;ui.c: 149: uint8_t t8;
  3941                           ;ui.c: 150: uint8_t buf[6]="-00-";
  3942  0074E4  EE21  F0F0         	lfsr	2,ui_disp_start_cs600@F7726
  3943  0074E8  EE10  F076         	lfsr	1,ui_disp_start_cs600@buf
  3944  0074EC  0E05               	movlw	5
  3945  0074EE                     u16011:
  3946  0074EE  CFDB FFE3          	movff	plusw2,plusw1
  3947  0074F2  06E8               	decf	wreg,f,c
  3948  0074F4  E2FC               	bc	u16011
  3949                           
  3950                           ;ui.c: 151: lcd_disp_all(0);;
  3951  0074F6  0E00               	movlw	0
  3952  0074F8  EC90  F04B         	call	_lcd_disp_all
  3953                           
  3954                           ;ui.c: 152: lcd_show_string_l0((uint8_t*)("cs66"));
  3955  0074FC  0EA9               	movlw	low STR_1
  3956  0074FE  0100               	movlb	0	; () banked
  3957  007500  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  3958  007502  0EF3               	movlw	high STR_1
  3959  007504  0100               	movlb	0	; () banked
  3960  007506  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  3961  007508  EC05  F042         	call	_lcd_show_string_l0	;wreg free
  3962                           
  3963                           ;ui.c: 153: lcd_disp_logo(1);
  3964  00750C  0E01               	movlw	1
  3965  00750E  EC78  F04B         	call	_lcd_disp_logo
  3966                           
  3967                           ;ui.c: 154: t8=dly;
  3968  007512  C07C  F07D         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  3969                           
  3970                           ;ui.c: 155: if(t8<1)t8=1;
  3971  007516  0100               	movlb	0	; () banked
  3972  007518  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3973  00751A  0100               	movlb	0	; () banked
  3974  00751C  A4D8               	btfss	status,2,c
  3975  00751E  D026               	goto	l17126
  3976                           
  3977                           ; BSR set to: 0
  3978  007520  0E01               	movlw	1
  3979  007522  0100               	movlb	0	; () banked
  3980  007524  6F7D               	movwf	ui_disp_start_cs600@t8& (0+255),b
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;ui.c: 156: while(t8){
  3984  007526  D022               	goto	l17126
  3985  007528                     l17114:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;ui.c: 157: m_int8_2_hex(buf+1,t8-1);
  3989  007528  0E77               	movlw	low (ui_disp_start_cs600@buf+1)
  3990  00752A  0100               	movlb	0	; () banked
  3991  00752C  6F60               	movwf	m_int8_2_hex@str& (0+255),b
  3992  00752E  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  3993  007530  0100               	movlb	0	; () banked
  3994  007532  6F61               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3995  007534  0100               	movlb	0	; () banked
  3996  007536  057D               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  3997  007538  0100               	movlb	0	; () banked
  3998  00753A  6F62               	movwf	m_int8_2_hex@b& (0+255),b
  3999  00753C  EC25  F046         	call	_m_int8_2_hex	;wreg free
  4000                           
  4001                           ;ui.c: 158: buf[4]='\0';
  4002  007540  0E00               	movlw	0
  4003  007542  0100               	movlb	0	; () banked
  4004  007544  6F7A               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;ui.c: 159: lcd_show_string_l1(buf);
  4008  007546  0E76               	movlw	low ui_disp_start_cs600@buf
  4009  007548  0100               	movlb	0	; () banked
  4010  00754A  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  4011  00754C  0E00               	movlw	high ui_disp_start_cs600@buf
  4012  00754E  0100               	movlb	0	; () banked
  4013  007550  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  4014  007552  ECAC  F048         	call	_lcd_show_string_l1	;wreg free
  4015                           
  4016                           ;ui.c: 161: lcd_disp_refresh();
  4017  007556  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
  4018                           
  4019                           ;ui.c: 162: ticker_dly(1000);
  4020  00755A  0E03               	movlw	3
  4021  00755C  0100               	movlb	0	; () banked
  4022  00755E  6F61               	movwf	(ticker_dly@ms+1)& (0+255),b
  4023  007560  0EE8               	movlw	232
  4024  007562  6F60               	movwf	ticker_dly@ms& (0+255),b
  4025  007564  EC32  F04A         	call	_ticker_dly	;wreg free
  4026                           
  4027                           ;ui.c: 163: t8--;
  4028  007568  0100               	movlb	0	; () banked
  4029  00756A  077D               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  4030  00756C                     l17126:
  4031                           
  4032                           ; BSR set to: 0
  4033  00756C  0100               	movlb	0	; () banked
  4034  00756E  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  4035  007570  0100               	movlb	0	; () banked
  4036  007572  B4D8               	btfsc	status,2,c
  4037  007574  0012               	return	
  4038  007576  D7D8               	goto	l17114
  4039  007578                     __end_of_ui_disp_start_cs600:
  4040                           	opt stack 0
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           postdec1	equ	0xFE5
  4048                           plusw1	equ	0xFE3
  4049                           fsr1h	equ	0xFE2
  4050                           fsr1l	equ	0xFE1
  4051                           plusw2	equ	0xFDB
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function _ticker_dly *****************
  4055 ;; Defined at:
  4056 ;;		line 49 in file "src/soc/ticker.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  ms              2    0[BANK0 ] unsigned int 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    4
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_ui_disp_start_cs600
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text2
  4085  009464                     __ptext2:
  4086                           	opt stack 0
  4087  009464                     _ticker_dly:
  4088                           	opt stack 25
  4089                           
  4090                           ;ticker.c: 51: dlyTicker=0;
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;incstack = 0
  4094  009464  0E00               	movlw	0
  4095  009466  0101               	movlb	1	; () banked
  4096  009468  6F5F               	movwf	(_dlyTicker+1)& (0+255),b
  4097  00946A  0E00               	movlw	0
  4098  00946C  6F5E               	movwf	_dlyTicker& (0+255),b
  4099                           
  4100                           ;ticker.c: 52: dlyTickerEn=1;
  4101  00946E  0E01               	movlw	1
  4102  009470  6E2B               	movwf	_dlyTickerEn,c
  4103                           
  4104                           ;ticker.c: 53: while(dlyTicker<ms){
  4105  009472  D001               	goto	l16914
  4106  009474                     l2416:
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;ticker.c: 54: __nop();
  4110  009474  F000               	nop	
  4111  009476                     l16914:
  4112  009476  0100               	movlb	0	; () banked
  4113  009478  5160               	movf	ticker_dly@ms& (0+255),w,b
  4114  00947A  0101               	movlb	1	; () banked
  4115  00947C  5D5E               	subwf	_dlyTicker& (0+255),w,b
  4116  00947E  0100               	movlb	0	; () banked
  4117  009480  5161               	movf	(ticker_dly@ms+1)& (0+255),w,b
  4118  009482  0101               	movlb	1	; () banked
  4119  009484  595F               	subwfb	(_dlyTicker+1)& (0+255),w,b
  4120  009486  A0D8               	btfss	status,0,c
  4121  009488  D7F5               	goto	l2416
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;ticker.c: 55: }
  4125                           ;ticker.c: 56: dlyTickerEn=0;
  4126                           
  4127                           ; BSR set to: 1
  4128  00948A  0E00               	movlw	0
  4129  00948C  6E2B               	movwf	_dlyTickerEn,c
  4130                           
  4131                           ;ticker.c: 57: dlyTicker=0;
  4132  00948E  0E00               	movlw	0
  4133  009490  0101               	movlb	1	; () banked
  4134  009492  6F5F               	movwf	(_dlyTicker+1)& (0+255),b
  4135  009494  0E00               	movlw	0
  4136  009496  6F5E               	movwf	_dlyTicker& (0+255),b
  4137                           
  4138                           ; BSR set to: 1
  4139  009498  0012               	return		;funcret
  4140  00949A                     __end_of_ticker_dly:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           postinc0	equ	0xFEE
  4147                           wreg	equ	0xFE8
  4148                           postdec1	equ	0xFE5
  4149                           plusw1	equ	0xFE3
  4150                           fsr1h	equ	0xFE2
  4151                           fsr1l	equ	0xFE1
  4152                           plusw2	equ	0xFDB
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _m_int8_2_hex *****************
  4156 ;; Defined at:
  4157 ;;		line 243 in file "src/depend/m_string.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4160 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  4161 ;;  b               1    2[BANK0 ] unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  t8              1   31[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4173 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    4
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_ui_disp_start_cs600
  4184 ;;		_ui_disp_rtc_mm_ss
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text3
  4189  008C4A                     __ptext3:
  4190                           	opt stack 0
  4191  008C4A                     _m_int8_2_hex:
  4192                           	opt stack 25
  4193                           
  4194                           ;m_string.c: 245: uint8_t t8;
  4195                           ;m_string.c: 246: t8=b;
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;incstack = 0
  4199  008C4A  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4200                           
  4201                           ;m_string.c: 247: t8>>=4;
  4202  008C4E  3A20               	swapf	m_int8_2_hex@t8,f,c
  4203  008C50  0E0F               	movlw	15
  4204  008C52  1620               	andwf	m_int8_2_hex@t8,f,c
  4205                           
  4206                           ;m_string.c: 248: t8 &= 0x0f;
  4207  008C54  0E0F               	movlw	15
  4208  008C56  1620               	andwf	m_int8_2_hex@t8,f,c
  4209                           
  4210                           ;m_string.c: 249: str[0]=HexTable[t8];
  4211  008C58  5020               	movf	m_int8_2_hex@t8,w,c
  4212  008C5A  0D01               	mullw	1
  4213  008C5C  0E06               	movlw	low _HexTable
  4214  008C5E  24F3               	addwf	prodl,w,c
  4215  008C60  6EF6               	movwf	tblptrl,c
  4216  008C62  0EEF               	movlw	high _HexTable
  4217  008C64  20F4               	addwfc	prodh,w,c
  4218  008C66  6EF7               	movwf	tblptrh,c
  4219  008C68                     	if	0	;There are less than 3 active tblptr bytes
  4220  008C68                     	endif
  4221  008C68  C060  FFD9         	movff	m_int8_2_hex@str,fsr2l
  4222  008C6C  C061  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  4223  008C70  0008               	tblrd		*
  4224  008C72  CFF5 FFDF          	movff	tablat,indf2
  4225                           
  4226                           ;m_string.c: 251: t8=b;
  4227  008C76  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4228                           
  4229                           ;m_string.c: 253: t8 &= 0x0f;
  4230  008C7A  0E0F               	movlw	15
  4231  008C7C  1620               	andwf	m_int8_2_hex@t8,f,c
  4232                           
  4233                           ;m_string.c: 254: str[1]=HexTable[t8];
  4234  008C7E  5020               	movf	m_int8_2_hex@t8,w,c
  4235  008C80  0D01               	mullw	1
  4236  008C82  0E06               	movlw	low _HexTable
  4237  008C84  24F3               	addwf	prodl,w,c
  4238  008C86  6EF6               	movwf	tblptrl,c
  4239  008C88  0EEF               	movlw	high _HexTable
  4240  008C8A  20F4               	addwfc	prodh,w,c
  4241  008C8C  6EF7               	movwf	tblptrh,c
  4242  008C8E                     	if	0	;There are less than 3 active tblptr bytes
  4243  008C8E                     	endif
  4244  008C8E  0100               	movlb	0	; () banked
  4245  008C90  EE20 F001          	lfsr	2,1
  4246  008C94  5160               	movf	m_int8_2_hex@str& (0+255),w,b
  4247  008C96  26D9               	addwf	fsr2l,f,c
  4248  008C98  5161               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  4249  008C9A  22DA               	addwfc	fsr2h,f,c
  4250  008C9C  0008               	tblrd		*
  4251  008C9E  CFF5 FFDF          	movff	tablat,indf2
  4252                           
  4253                           ; BSR set to: 0
  4254  008CA2  0012               	return		;funcret
  4255  008CA4                     __end_of_m_int8_2_hex:
  4256                           	opt stack 0
  4257                           tblptru	equ	0xFF8
  4258                           tblptrh	equ	0xFF7
  4259                           tblptrl	equ	0xFF6
  4260                           tablat	equ	0xFF5
  4261                           prodh	equ	0xFF4
  4262                           prodl	equ	0xFF3
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           postdec1	equ	0xFE5
  4266                           plusw1	equ	0xFE3
  4267                           fsr1h	equ	0xFE2
  4268                           fsr1l	equ	0xFE1
  4269                           indf2	equ	0xFDF
  4270                           plusw2	equ	0xFDB
  4271                           fsr2h	equ	0xFDA
  4272                           fsr2l	equ	0xFD9
  4273                           status	equ	0xFD8
  4274                           
  4275 ;; *************** function _soc_init *****************
  4276 ;; Defined at:
  4277 ;;		line 2 in file "src/soc/soc.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    6
  4298 ;; This function calls:
  4299 ;;		_rtc_init
  4300 ;;		_sys_ticker_init
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text4
  4307  009C38                     __ptext4:
  4308                           	opt stack 0
  4309  009C38                     _soc_init:
  4310                           	opt stack 24
  4311                           
  4312                           ;soc.c: 5: sys_ticker_init();
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;incstack = 0
  4316  009C38  EC24  F04E         	call	_sys_ticker_init	;wreg free
  4317                           
  4318                           ;soc.c: 6: rtc_init();
  4319  009C3C  EC0D  F049         	call	_rtc_init	;wreg free
  4320                           
  4321                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4322  009C40  8CF2               	bsf	intcon,6,c	;volatile
  4323                           
  4324                           ;soc.c: 9: INTCONbits.GIE = 1;
  4325  009C42  8EF2               	bsf	intcon,7,c	;volatile
  4326                           
  4327                           ;soc.c: 11: RCONbits.IPEN=0;
  4328  009C44  9ED0               	bcf	4048,7,c	;volatile
  4329  009C46  0012               	return		;funcret
  4330  009C48                     __end_of_soc_init:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           postdec1	equ	0xFE5
  4342                           plusw1	equ	0xFE3
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           plusw2	equ	0xFDB
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _sys_ticker_init *****************
  4352 ;; Defined at:
  4353 ;;		line 29 in file "src/soc/ticker.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    4
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_soc_init
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text5
  4382  009C48                     __ptext5:
  4383                           	opt stack 0
  4384  009C48                     _sys_ticker_init:
  4385                           	opt stack 25
  4386                           
  4387                           ;ticker.c: 32: PR2=(uint8_t)((11059200/4/16/16/100));
  4388                           
  4389                           ;incstack = 0
  4390  009C48  0E6C               	movlw	108
  4391  009C4A  6ECB               	movwf	4043,c	;volatile
  4392                           
  4393                           ;ticker.c: 33: IPR1bits.TMR2IP=1;
  4394  009C4C  829F               	bsf	3999,1,c	;volatile
  4395                           
  4396                           ;ticker.c: 34: PIR1bits.TMR2IF=0;
  4397  009C4E  929E               	bcf	3998,1,c	;volatile
  4398                           
  4399                           ;ticker.c: 35: PIE1bits.TMR2IE=1;
  4400  009C50  829D               	bsf	3997,1,c	;volatile
  4401                           
  4402                           ;ticker.c: 37: T2CON=0x7f;
  4403  009C52  0E7F               	movlw	127
  4404  009C54  6ECA               	movwf	4042,c	;volatile
  4405  009C56  0012               	return		;funcret
  4406  009C58                     __end_of_sys_ticker_init:
  4407                           	opt stack 0
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           intcon	equ	0xFF2
  4415                           postinc0	equ	0xFEE
  4416                           wreg	equ	0xFE8
  4417                           postdec1	equ	0xFE5
  4418                           plusw1	equ	0xFE3
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           plusw2	equ	0xFDB
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _rtc_init *****************
  4428 ;; Defined at:
  4429 ;;		line 25 in file "src/soc/rtc.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    5
  4450 ;; This function calls:
  4451 ;;		_rtcc_reg_wr_disable
  4452 ;;		_rtcc_reg_wr_enable
  4453 ;; This function is called by:
  4454 ;;		_soc_init
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text6
  4459  00921A                     __ptext6:
  4460                           	opt stack 0
  4461  00921A                     _rtc_init:
  4462                           	opt stack 24
  4463                           
  4464                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4465                           
  4466                           ;incstack = 0
  4467  00921A  010F               	movlb	15	; () banked
  4468  00921C  9554               	bcf	84,2,b	;volatile
  4469                           
  4470                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4471  00921E  010F               	movlb	15	; () banked
  4472  009220  8354               	bsf	84,1,b	;volatile
  4473                           
  4474                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4475  009222  010F               	movlb	15	; () banked
  4476  009224  955F               	bcf	95,2,b	;volatile
  4477                           
  4478                           ;rtc.c: 31: ALRMRPT=0xff;
  4479  009226  010F               	movlb	15	; () banked
  4480  009228  695A               	setf	90,b	;volatile
  4481                           
  4482                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4483  00922A  010F               	movlb	15	; () banked
  4484  00922C  8F5B               	bsf	91,7,b	;volatile
  4485                           
  4486                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4487  00922E  010F               	movlb	15	; () banked
  4488  009230  8D5B               	bsf	91,6,b	;volatile
  4489                           
  4490                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4491  009232  010F               	movlb	15	; () banked
  4492  009234  955B               	bcf	91,2,b	;volatile
  4493  009236  975B               	bcf	91,3,b	;volatile
  4494  009238  995B               	bcf	91,4,b	;volatile
  4495  00923A  9B5B               	bcf	91,5,b	;volatile
  4496                           
  4497                           ;rtc.c: 37: __nop();
  4498  00923C  F000               	nop	
  4499                           
  4500                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4501  00923E  EC41  F04E         	call	_rtcc_reg_wr_enable	;wreg free
  4502                           
  4503                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4504  009242  010F               	movlb	15	; () banked
  4505  009244  8F5F               	bsf	95,7,b	;volatile
  4506                           
  4507                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4508  009246  EC47  F04E         	call	_rtcc_reg_wr_disable	;wreg free
  4509                           
  4510                           ;rtc.c: 43: __nop();
  4511  00924A  F000               	nop	
  4512                           
  4513                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4514  00924C  80A5               	bsf	4005,0,c	;volatile
  4515                           
  4516                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4517  00924E  90A4               	bcf	4004,0,c	;volatile
  4518                           
  4519                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4520  009250  80A3               	bsf	4003,0,c	;volatile
  4521                           
  4522                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4523  009252  86CD               	bsf	4045,3,c	;volatile
  4524                           
  4525                           ;rtc.c: 51: __nop();
  4526  009254  F000               	nop	
  4527  009256  0012               	return		;funcret
  4528  009258                     __end_of_rtc_init:
  4529                           	opt stack 0
  4530                           tblptru	equ	0xFF8
  4531                           tblptrh	equ	0xFF7
  4532                           tblptrl	equ	0xFF6
  4533                           tablat	equ	0xFF5
  4534                           prodh	equ	0xFF4
  4535                           prodl	equ	0xFF3
  4536                           intcon	equ	0xFF2
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           postdec1	equ	0xFE5
  4540                           plusw1	equ	0xFE3
  4541                           fsr1h	equ	0xFE2
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           plusw2	equ	0xFDB
  4545                           fsr2h	equ	0xFDA
  4546                           fsr2l	equ	0xFD9
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function _rtc_set *****************
  4550 ;; Defined at:
  4551 ;;		line 54 in file "src/soc/rtc.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4554 ;;		 -> defalutRtc(7), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  stp             2    2[BANK0 ] PTR struct .
  4557 ;;		 -> defalutRtc(7), 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;Total ram usage:        4 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:    5
  4574 ;; This function calls:
  4575 ;;		_rtcc_reg_wr_disable
  4576 ;;		_rtcc_reg_wr_enable
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text7
  4583  006C40                     __ptext7:
  4584                           	opt stack 0
  4585  006C40                     _rtc_set:
  4586                           	opt stack 25
  4587                           
  4588                           ;rtc.c: 56: st_RtcDef* stp;
  4589                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4590                           
  4591                           ;incstack = 0
  4592  006C40  C060  F062         	movff	rtc_set@rtc,rtc_set@stp
  4593  006C44  C061  F063         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4594                           
  4595                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4596  006C48  EC41  F04E         	call	_rtcc_reg_wr_enable	;wreg free
  4597                           
  4598                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4599  006C4C  0EFC               	movlw	-4
  4600  006C4E  010F               	movlb	15	; () banked
  4601  006C50  175F               	andwf	95,f,b	;volatile
  4602                           
  4603                           ; BSR set to: 15
  4604                           ;rtc.c: 61: RTCVALL=stp->second;
  4605  006C52  0100               	movlb	0	; () banked
  4606  006C54  EE20 F005          	lfsr	2,5
  4607  006C58  5162               	movf	rtc_set@stp& (0+255),w,b
  4608  006C5A  26D9               	addwf	fsr2l,f,c
  4609  006C5C  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4610  006C5E  22DA               	addwfc	fsr2h,f,c
  4611  006C60  50DF               	movf	indf2,w,c
  4612  006C62  010F               	movlb	15	; () banked
  4613  006C64  6F5C               	movwf	92,b	;volatile
  4614                           
  4615                           ; BSR set to: 15
  4616                           ;rtc.c: 62: RTCVALH=stp->minute;
  4617  006C66  0100               	movlb	0	; () banked
  4618  006C68  EE20 F004          	lfsr	2,4
  4619  006C6C  5162               	movf	rtc_set@stp& (0+255),w,b
  4620  006C6E  26D9               	addwf	fsr2l,f,c
  4621  006C70  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4622  006C72  22DA               	addwfc	fsr2h,f,c
  4623  006C74  50DF               	movf	indf2,w,c
  4624  006C76  010F               	movlb	15	; () banked
  4625  006C78  6F5D               	movwf	93,b	;volatile
  4626                           
  4627                           ; BSR set to: 15
  4628                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4629  006C7A  010F               	movlb	15	; () banked
  4630  006C7C  515F               	movf	95,w,b	;volatile
  4631  006C7E  0BFC               	andlw	-4
  4632  006C80  0901               	iorlw	1
  4633  006C82  6F5F               	movwf	95,b	;volatile
  4634                           
  4635                           ; BSR set to: 15
  4636                           ;rtc.c: 64: RTCVALL=stp->hour;
  4637  006C84  0100               	movlb	0	; () banked
  4638  006C86  EE20 F003          	lfsr	2,3
  4639  006C8A  5162               	movf	rtc_set@stp& (0+255),w,b
  4640  006C8C  26D9               	addwf	fsr2l,f,c
  4641  006C8E  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4642  006C90  22DA               	addwfc	fsr2h,f,c
  4643  006C92  50DF               	movf	indf2,w,c
  4644  006C94  010F               	movlb	15	; () banked
  4645  006C96  6F5C               	movwf	92,b	;volatile
  4646                           
  4647                           ; BSR set to: 15
  4648                           ;rtc.c: 65: RTCVALH=stp->day;
  4649  006C98  0100               	movlb	0	; () banked
  4650  006C9A  EE20 F006          	lfsr	2,6
  4651  006C9E  5162               	movf	rtc_set@stp& (0+255),w,b
  4652  006CA0  26D9               	addwf	fsr2l,f,c
  4653  006CA2  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4654  006CA4  22DA               	addwfc	fsr2h,f,c
  4655  006CA6  50DF               	movf	indf2,w,c
  4656  006CA8  010F               	movlb	15	; () banked
  4657  006CAA  6F5D               	movwf	93,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4661  006CAC  010F               	movlb	15	; () banked
  4662  006CAE  515F               	movf	95,w,b	;volatile
  4663  006CB0  0BFC               	andlw	-4
  4664  006CB2  0902               	iorlw	2
  4665  006CB4  6F5F               	movwf	95,b	;volatile
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;rtc.c: 67: RTCVALL=stp->date;
  4669  006CB6  0100               	movlb	0	; () banked
  4670  006CB8  EE20 F002          	lfsr	2,2
  4671  006CBC  5162               	movf	rtc_set@stp& (0+255),w,b
  4672  006CBE  26D9               	addwf	fsr2l,f,c
  4673  006CC0  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4674  006CC2  22DA               	addwfc	fsr2h,f,c
  4675  006CC4  50DF               	movf	indf2,w,c
  4676  006CC6  010F               	movlb	15	; () banked
  4677  006CC8  6F5C               	movwf	92,b	;volatile
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;rtc.c: 68: RTCVALH=stp->month;
  4681  006CCA  0100               	movlb	0	; () banked
  4682  006CCC  EE20 F001          	lfsr	2,1
  4683  006CD0  5162               	movf	rtc_set@stp& (0+255),w,b
  4684  006CD2  26D9               	addwf	fsr2l,f,c
  4685  006CD4  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4686  006CD6  22DA               	addwfc	fsr2h,f,c
  4687  006CD8  50DF               	movf	indf2,w,c
  4688  006CDA  010F               	movlb	15	; () banked
  4689  006CDC  6F5D               	movwf	93,b	;volatile
  4690                           
  4691                           ; BSR set to: 15
  4692                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4693  006CDE  0E03               	movlw	3
  4694  006CE0  010F               	movlb	15	; () banked
  4695  006CE2  135F               	iorwf	95,f,b	;volatile
  4696                           
  4697                           ; BSR set to: 15
  4698                           ;rtc.c: 70: RTCVALL=stp->year;
  4699  006CE4  C062  FFD9         	movff	rtc_set@stp,fsr2l
  4700  006CE8  C063  FFDA         	movff	rtc_set@stp+1,fsr2h
  4701  006CEC  50DF               	movf	indf2,w,c
  4702  006CEE  010F               	movlb	15	; () banked
  4703  006CF0  6F5C               	movwf	92,b	;volatile
  4704                           
  4705                           ; BSR set to: 15
  4706                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4707  006CF2  EC47  F04E         	call	_rtcc_reg_wr_disable	;wreg free
  4708  006CF6  0012               	return		;funcret
  4709  006CF8                     __end_of_rtc_set:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           plusw1	equ	0xFE3
  4722                           fsr1h	equ	0xFE2
  4723                           fsr1l	equ	0xFE1
  4724                           indf2	equ	0xFDF
  4725                           plusw2	equ	0xFDB
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730 ;; *************** function _rtcc_reg_wr_enable *****************
  4731 ;; Defined at:
  4732 ;;		line 9 in file "src/soc/rtc.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		None
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    4
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_rtc_init
  4757 ;;		_rtc_set
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text8
  4762  009C82                     __ptext8:
  4763                           	opt stack 0
  4764  009C82                     _rtcc_reg_wr_enable:
  4765                           	opt stack 24
  4766                           
  4767                           ;incstack = 0
  4768  009C82  0E55               	movlw	85	;# 
  4769  009C84  6EA7               	movwf	4007,c	;# 
  4770  009C86  0EAA               	movlw	170	;# 
  4771  009C88  6EA7               	movwf	4007,c	;# 
  4772  009C8A  8B5F               	bsf	3935,5,b	;# 
  4773  009C8C  0012               	return		;funcret
  4774  009C8E                     __end_of_rtcc_reg_wr_enable:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           postinc0	equ	0xFEE
  4784                           wreg	equ	0xFE8
  4785                           postdec1	equ	0xFE5
  4786                           plusw1	equ	0xFE3
  4787                           fsr1h	equ	0xFE2
  4788                           fsr1l	equ	0xFE1
  4789                           indf2	equ	0xFDF
  4790                           plusw2	equ	0xFDB
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _rtcc_reg_wr_disable *****************
  4796 ;; Defined at:
  4797 ;;		line 17 in file "src/soc/rtc.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		None
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    4
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_rtc_init
  4822 ;;		_rtc_set
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text9
  4827  009C8E                     __ptext9:
  4828                           	opt stack 0
  4829  009C8E                     _rtcc_reg_wr_disable:
  4830                           	opt stack 24
  4831                           
  4832                           ;incstack = 0
  4833  009C8E  0E55               	movlw	85	;# 
  4834  009C90  6EA7               	movwf	4007,c	;# 
  4835  009C92  0EAA               	movlw	170	;# 
  4836  009C94  6EA7               	movwf	4007,c	;# 
  4837  009C96  9B5F               	bcf	3935,5,b	;# 
  4838  009C98  0012               	return		;funcret
  4839  009C9A                     __end_of_rtcc_reg_wr_disable:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           postdec1	equ	0xFE5
  4851                           plusw1	equ	0xFE3
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           indf2	equ	0xFDF
  4855                           plusw2	equ	0xFDB
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _lcd_init *****************
  4861 ;; Defined at:
  4862 ;;		line 670 in file "src/driver/lcd.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    6
  4883 ;; This function calls:
  4884 ;;		_lcd_bl_off
  4885 ;;		_lcd_bl_on
  4886 ;;		_lcd_config
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text10
  4893  009A98                     __ptext10:
  4894                           	opt stack 0
  4895  009A98                     _lcd_init:
  4896                           	opt stack 24
  4897                           
  4898                           ;lcd.c: 672: lcd_config();
  4899                           
  4900                           ;incstack = 0
  4901  009A98  ECA8  F04B         	call	_lcd_config	;wreg free
  4902                           
  4903                           ;lcd.c: 674: LCDCON=0x8f;;
  4904  009A9C  0E8F               	movlw	143
  4905  009A9E  6EA8               	movwf	4008,c	;volatile
  4906                           
  4907                           ;lcd.c: 675: if(blackEn){
  4908  009AA0  0100               	movlb	0	; () banked
  4909  009AA2  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  4910  009AA4  B4D8               	btfsc	status,2,c
  4911  009AA6  D003               	goto	l17238
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;lcd.c: 676: lcd_bl_on();
  4915  009AA8  EC53  F04E         	call	_lcd_bl_on	;wreg free
  4916                           
  4917                           ;lcd.c: 677: }
  4918  009AAC  0012               	return	
  4919  009AAE                     l17238:
  4920                           
  4921                           ;lcd.c: 678: else{
  4922                           ;lcd.c: 679: lcd_bl_off();
  4923  009AAE  EC58  F04E         	call	_lcd_bl_off	;wreg free
  4924  009AB2  0012               	return	
  4925  009AB4                     __end_of_lcd_init:
  4926                           	opt stack 0
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           intcon	equ	0xFF2
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           plusw1	equ	0xFE3
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           indf2	equ	0xFDF
  4941                           plusw2	equ	0xFDB
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _lcd_config *****************
  4947 ;; Defined at:
  4948 ;;		line 616 in file "src/driver/lcd.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    5
  4969 ;; This function calls:
  4970 ;;		_lcd_disp_all
  4971 ;; This function is called by:
  4972 ;;		_lcd_init
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text11
  4977  009750                     __ptext11:
  4978                           	opt stack 0
  4979  009750                     _lcd_config:
  4980                           	opt stack 24
  4981                           
  4982                           ;lcd.c: 622: LCDREG=0x3f;
  4983                           
  4984                           ;incstack = 0
  4985  009750  0E3F               	movlw	63
  4986  009752  6ED2               	movwf	4050,c	;volatile
  4987                           
  4988                           ;lcd.c: 630: LCDPSbits.WFT = 0;
  4989  009754  9EAA               	bcf	4010,7,c	;volatile
  4990                           
  4991                           ;lcd.c: 631: LCDPSbits.BIASMD = 0;
  4992  009756  9CAA               	bcf	4010,6,c	;volatile
  4993                           
  4994                           ;lcd.c: 632: LCDPSbits.LP3 = 0;
  4995  009758  96AA               	bcf	4010,3,c	;volatile
  4996                           
  4997                           ;lcd.c: 633: LCDPSbits.LP2 = 1;
  4998  00975A  84AA               	bsf	4010,2,c	;volatile
  4999                           
  5000                           ;lcd.c: 634: LCDPSbits.LP1 = 0;
  5001  00975C  92AA               	bcf	4010,1,c	;volatile
  5002                           
  5003                           ;lcd.c: 635: LCDPSbits.LP0 = 0;
  5004  00975E  90AA               	bcf	4010,0,c	;volatile
  5005                           
  5006                           ;lcd.c: 638: LCDSE0 = 0b11111111;
  5007  009760  68A9               	setf	4009,c	;volatile
  5008                           
  5009                           ;lcd.c: 639: LCDSE1 = 0b11100000;
  5010  009762  0EE0               	movlw	224
  5011  009764  6EB6               	movwf	4022,c	;volatile
  5012                           
  5013                           ;lcd.c: 640: LCDSE2 = 0b11111000;
  5014  009766  0EF8               	movlw	248
  5015  009768  6EB7               	movwf	4023,c	;volatile
  5016                           
  5017                           ;lcd.c: 641: LCDSE3 = 0b11000011;
  5018  00976A  0EC3               	movlw	195
  5019  00976C  6EB8               	movwf	4024,c	;volatile
  5020                           
  5021                           ;lcd.c: 642: LCDSE4 = 0b11111110;
  5022  00976E  0EFE               	movlw	254
  5023  009770  6EB9               	movwf	4025,c	;volatile
  5024                           
  5025                           ;lcd.c: 643: LCDSE5 = 0b11001111;
  5026  009772  0ECF               	movlw	207
  5027  009774  6EBA               	movwf	4026,c	;volatile
  5028                           
  5029                           ;lcd.c: 646: lcd_disp_all(0x00);;
  5030  009776  0E00               	movlw	0
  5031  009778  EC90  F04B         	call	_lcd_disp_all
  5032  00977C  0012               	return		;funcret
  5033  00977E                     __end_of_lcd_config:
  5034                           	opt stack 0
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           plusw1	equ	0xFE3
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           plusw2	equ	0xFDB
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function _key_process *****************
  5055 ;; Defined at:
  5056 ;;		line 978 in file "src/api/key_menu.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  tm              2    0[BANK1 ] unsigned int 
  5061 ;;  key             1    2[BANK1 ] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        3 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:   13
  5078 ;; This function calls:
  5079 ;;		_key_process_down
  5080 ;;		_key_process_set
  5081 ;;		_key_process_set_down_long
  5082 ;;		_key_process_set_long
  5083 ;;		_key_process_up
  5084 ;;		_key_waite_release
  5085 ;;		_lcd_bl_off
  5086 ;;		_lcd_bl_on
  5087 ;;		_ui_disp_menu
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;;		_event_process
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text12
  5095  006242                     __ptext12:
  5096                           	opt stack 0
  5097  006242                     _key_process:
  5098                           	opt stack 17
  5099                           
  5100                           ;key_menu.c: 980: uint16_t tm;
  5101                           ;key_menu.c: 981: uint8_t key;
  5102                           ;key_menu.c: 982: tm=key_waite_release(2000,&key);
  5103                           
  5104                           ;incstack = 0
  5105  006242  0E07               	movlw	7
  5106  006244  0100               	movlb	0	; () banked
  5107  006246  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5108  006248  0ED0               	movlw	208
  5109  00624A  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5110  00624C  0EFF               	movlw	low key_process@key
  5111  00624E  0100               	movlb	0	; () banked
  5112  006250  6F6A               	movwf	key_waite_release@key& (0+255),b
  5113  006252  0E01               	movlw	high key_process@key
  5114  006254  0100               	movlb	0	; () banked
  5115  006256  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5116  006258  EC42  F048         	call	_key_waite_release	;wreg free
  5117  00625C  C068  F1FD         	movff	?_key_waite_release,key_process@tm
  5118  006260  C069  F1FE         	movff	?_key_waite_release+1,key_process@tm+1
  5119                           
  5120                           ;key_menu.c: 983: if(tm>=2000){
  5121  006264  0ED0               	movlw	208
  5122  006266  0101               	movlb	1	; () banked
  5123  006268  5DFD               	subwf	key_process@tm& (0+255),w,b
  5124  00626A  0E07               	movlw	7
  5125  00626C  0101               	movlb	1	; () banked
  5126  00626E  59FE               	subwfb	(key_process@tm+1)& (0+255),w,b
  5127  006270  A0D8               	btfss	status,0,c
  5128  006272  D028               	goto	l17082
  5129                           
  5130                           ; BSR set to: 1
  5131                           ;key_menu.c: 985: if(key==(0x01<<0x02)){
  5132  006274  0E04               	movlw	4
  5133  006276  0101               	movlb	1	; () banked
  5134  006278  19FF               	xorwf	key_process@key& (0+255),w,b
  5135  00627A  A4D8               	btfss	status,2,c
  5136  00627C  D003               	goto	l17070
  5137                           
  5138                           ; BSR set to: 1
  5139                           ;key_menu.c: 986: key_process_set_long();
  5140  00627E  EC7C  F036         	call	_key_process_set_long	;wreg free
  5141                           
  5142                           ;key_menu.c: 987: }else if(key == ((0x01<<0x02)+(0x01<<0x0))){
  5143  006282  D035               	goto	l17094
  5144  006284                     l17070:
  5145  006284  0E05               	movlw	5
  5146  006286  0101               	movlb	1	; () banked
  5147  006288  19FF               	xorwf	key_process@key& (0+255),w,b
  5148  00628A  A4D8               	btfss	status,2,c
  5149  00628C  D003               	goto	l17074
  5150                           
  5151                           ; BSR set to: 1
  5152                           ;key_menu.c: 988: key_process_set_down_long();
  5153  00628E  ECF0  F031         	call	_key_process_set_down_long	;wreg free
  5154                           
  5155                           ;key_menu.c: 989: }else if(key == (0x01<<0x0) + (0x01<<0x01)){
  5156  006292  D02D               	goto	l17094
  5157  006294                     l17074:
  5158  006294  0E03               	movlw	3
  5159  006296  0101               	movlb	1	; () banked
  5160  006298  19FF               	xorwf	key_process@key& (0+255),w,b
  5161  00629A  A4D8               	btfss	status,2,c
  5162  00629C  D028               	goto	l17094
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;key_menu.c: 990: blackEn= (!blackEn);
  5166  00629E  0100               	movlb	0	; () banked
  5167  0062A0  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  5168  0062A2  A4D8               	btfss	status,2,c
  5169  0062A4  D002               	goto	u15950
  5170  0062A6  0E01               	movlw	1
  5171  0062A8  D001               	goto	u15960
  5172  0062AA                     u15950:
  5173  0062AA  0E00               	movlw	0
  5174  0062AC                     u15960:
  5175  0062AC  0100               	movlb	0	; () banked
  5176  0062AE  6FFB               	movwf	_blackEn& (0+255),b	;volatile
  5177                           
  5178                           ;key_menu.c: 991: if(blackEn)lcd_bl_on();
  5179  0062B0  0100               	movlb	0	; () banked
  5180  0062B2  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  5181  0062B4  B4D8               	btfsc	status,2,c
  5182  0062B6  D003               	goto	l17080
  5183                           
  5184                           ; BSR set to: 0
  5185  0062B8  EC53  F04E         	call	_lcd_bl_on	;wreg free
  5186  0062BC  D018               	goto	l17094
  5187  0062BE                     l17080:
  5188                           
  5189                           ;key_menu.c: 992: else
  5190                           ;key_menu.c: 993: lcd_bl_off();
  5191  0062BE  EC58  F04E         	call	_lcd_bl_off	;wreg free
  5192                           
  5193                           ;key_menu.c: 994: }
  5194                           ;key_menu.c: 995: }else{
  5195  0062C2  D015               	goto	l17094
  5196  0062C4                     l17082:
  5197                           
  5198                           ;key_menu.c: 997: if(keyValue == (0x01<<0x0)){
  5199  0062C4  0100               	movlb	0	; () banked
  5200  0062C6  05FC               	decf	_keyValue& (0+255),w,b	;volatile
  5201  0062C8  A4D8               	btfss	status,2,c
  5202  0062CA  D003               	goto	l17086
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;key_menu.c: 998: key_process_down();
  5206  0062CC  EC08  F025         	call	_key_process_down	;wreg free
  5207                           
  5208                           ;key_menu.c: 999: }else if(keyValue == (0x01<<0x01)){
  5209  0062D0  D00E               	goto	l17094
  5210  0062D2                     l17086:
  5211  0062D2  0E02               	movlw	2
  5212  0062D4  0100               	movlb	0	; () banked
  5213  0062D6  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5214  0062D8  A4D8               	btfss	status,2,c
  5215  0062DA  D003               	goto	l17090
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;key_menu.c: 1000: key_process_up();
  5219  0062DC  EC88  F037         	call	_key_process_up	;wreg free
  5220                           
  5221                           ;key_menu.c: 1001: }else if(keyValue == (0x01<<0x02)){
  5222  0062E0  D006               	goto	l17094
  5223  0062E2                     l17090:
  5224  0062E2  0E04               	movlw	4
  5225  0062E4  0100               	movlb	0	; () banked
  5226  0062E6  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5227  0062E8  B4D8               	btfsc	status,2,c
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;key_menu.c: 1002: key_process_set();
  5231  0062EA  EC22  F03A         	call	_key_process_set	;wreg free
  5232  0062EE                     l17094:
  5233  0062EE  0E01               	movlw	1
  5234  0062F0  6E34               	movwf	_lcdTwinkle,c
  5235                           
  5236                           ;key_menu.c: 1007: ui_disp_menu();
  5237  0062F2  ECDF  F037         	call	_ui_disp_menu	;wreg free
  5238                           
  5239                           ;key_menu.c: 1008: key_waite_release(2000,&key);
  5240  0062F6  0E07               	movlw	7
  5241  0062F8  0100               	movlb	0	; () banked
  5242  0062FA  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5243  0062FC  0ED0               	movlw	208
  5244  0062FE  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5245  006300  0EFF               	movlw	low key_process@key
  5246  006302  0100               	movlb	0	; () banked
  5247  006304  6F6A               	movwf	key_waite_release@key& (0+255),b
  5248  006306  0E01               	movlw	high key_process@key
  5249  006308  0100               	movlb	0	; () banked
  5250  00630A  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5251  00630C  EC42  F048         	call	_key_waite_release	;wreg free
  5252  006310  0012               	return		;funcret
  5253  006312                     __end_of_key_process:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           plusw1	equ	0xFE3
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           indf2	equ	0xFDF
  5269                           plusw2	equ	0xFDB
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _lcd_bl_on *****************
  5275 ;; Defined at:
  5276 ;;		line 651 in file "src/driver/lcd.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    4
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_key_process
  5301 ;;		_lcd_init
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text13
  5306  009CA6                     __ptext13:
  5307                           	opt stack 0
  5308  009CA6                     _lcd_bl_on:
  5309                           	opt stack 25
  5310                           
  5311                           ;incstack = 0
  5312                           ;lcd.c: 653: do{TRISG &= ~(1<<4);}while(0);;
  5313  009CA6  9898               	bcf	3992,4,c	;volatile
  5314                           
  5315                           ;lcd.c: 654: RTCCFGbits.RTCOE=1;
  5316  009CA8  010F               	movlb	15	; () banked
  5317  009CAA  855F               	bsf	95,2,b	;volatile
  5318                           
  5319                           ; BSR set to: 15
  5320                           
  5321                           ;lcd.c: 655: do{LATG |= (1<<4);}while(0);;
  5322  009CAC  888F               	bsf	3983,4,c	;volatile
  5323  009CAE  0012               	return	
  5324  009CB0                     __end_of_lcd_bl_on:
  5325                           	opt stack 0
  5326                           tblptru	equ	0xFF8
  5327                           tblptrh	equ	0xFF7
  5328                           tblptrl	equ	0xFF6
  5329                           tablat	equ	0xFF5
  5330                           prodh	equ	0xFF4
  5331                           prodl	equ	0xFF3
  5332                           intcon	equ	0xFF2
  5333                           postinc0	equ	0xFEE
  5334                           wreg	equ	0xFE8
  5335                           postdec1	equ	0xFE5
  5336                           plusw1	equ	0xFE3
  5337                           fsr1h	equ	0xFE2
  5338                           fsr1l	equ	0xFE1
  5339                           indf2	equ	0xFDF
  5340                           plusw2	equ	0xFDB
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _lcd_bl_off *****************
  5346 ;; Defined at:
  5347 ;;		line 658 in file "src/driver/lcd.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    4
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_key_process
  5372 ;;		_lcd_init
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text14
  5377  009CB0                     __ptext14:
  5378                           	opt stack 0
  5379  009CB0                     _lcd_bl_off:
  5380                           	opt stack 25
  5381                           
  5382                           ; BSR set to: 15
  5383                           ;incstack = 0
  5384                           ;lcd.c: 660: do{TRISG |= (1<<4);}while(0);;
  5385  009CB0  8898               	bsf	3992,4,c	;volatile
  5386                           
  5387                           ;lcd.c: 661: RTCCFGbits.RTCOE=0;
  5388  009CB2  010F               	movlb	15	; () banked
  5389  009CB4  955F               	bcf	95,2,b	;volatile
  5390                           
  5391                           ; BSR set to: 15
  5392  009CB6  0012               	return		;funcret
  5393  009CB8                     __end_of_lcd_bl_off:
  5394                           	opt stack 0
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           postdec1	equ	0xFE5
  5405                           plusw1	equ	0xFE3
  5406                           fsr1h	equ	0xFE2
  5407                           fsr1l	equ	0xFE1
  5408                           indf2	equ	0xFDF
  5409                           plusw2	equ	0xFDB
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _key_waite_release *****************
  5415 ;; Defined at:
  5416 ;;		line 33 in file "src/api/key_menu.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  timeout         2    8[BANK0 ] unsigned int 
  5419 ;;  key             2   10[BANK0 ] PTR unsigned char 
  5420 ;;		 -> key_process@key(1), 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  t8              1   31[COMRAM] unsigned char 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  2    8[BANK0 ] unsigned int 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        5 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    7
  5439 ;; This function calls:
  5440 ;;		_delay_ms
  5441 ;;		_key_polling
  5442 ;; This function is called by:
  5443 ;;		_key_process
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text15
  5448  009084                     __ptext15:
  5449                           	opt stack 0
  5450  009084                     _key_waite_release:
  5451                           	opt stack 22
  5452                           
  5453                           ;key_menu.c: 35: uint8_t t8;
  5454                           ;key_menu.c: 37: userTicker_ms=0;
  5455                           
  5456                           ; BSR set to: 15
  5457                           ;incstack = 0
  5458  009084  0E00               	movlw	0
  5459  009086  6E26               	movwf	_userTicker_ms+1,c	;volatile
  5460  009088  0E00               	movlw	0
  5461  00908A  6E25               	movwf	_userTicker_ms,c	;volatile
  5462                           
  5463                           ;key_menu.c: 38: while(userTicker_ms<timeout){
  5464  00908C  D00D               	goto	l16696
  5465  00908E                     l16688:
  5466                           
  5467                           ;key_menu.c: 39: t8=key_polling();
  5468  00908E  ECC9  F045         	call	_key_polling	;wreg free
  5469  009092  6E20               	movwf	key_waite_release@t8,c
  5470                           
  5471                           ;key_menu.c: 40: if(t8==(0x0))break;
  5472  009094  5020               	movf	key_waite_release@t8,w,c
  5473  009096  B4D8               	btfsc	status,2,c
  5474  009098  D00F               	goto	l16698
  5475                           
  5476                           ;key_menu.c: 41: delay_ms(10);
  5477  00909A  0E00               	movlw	0
  5478  00909C  0100               	movlb	0	; () banked
  5479  00909E  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5480  0090A0  0E0A               	movlw	10
  5481  0090A2  6F64               	movwf	delay_ms@dly& (0+255),b
  5482  0090A4  EC7F  F04C         	call	_delay_ms	;wreg free
  5483  0090A8                     l16696:
  5484  0090A8  0100               	movlb	0	; () banked
  5485  0090AA  5168               	movf	key_waite_release@timeout& (0+255),w,b
  5486  0090AC  5C25               	subwf	_userTicker_ms,w,c	;volatile
  5487  0090AE  0100               	movlb	0	; () banked
  5488  0090B0  5169               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  5489  0090B2  5826               	subwfb	_userTicker_ms+1,w,c	;volatile
  5490  0090B4  A0D8               	btfss	status,0,c
  5491  0090B6  D7EB               	goto	l16688
  5492  0090B8                     l16698:
  5493                           
  5494                           ;key_menu.c: 42: }
  5495                           ;key_menu.c: 43: *key=t8;
  5496  0090B8  C06A  FFD9         	movff	key_waite_release@key,fsr2l
  5497  0090BC  C06B  FFDA         	movff	key_waite_release@key+1,fsr2h
  5498  0090C0  C020  FFDF         	movff	key_waite_release@t8,indf2
  5499                           
  5500                           ;key_menu.c: 44: return userTicker_ms;
  5501  0090C4  C025  F068         	movff	_userTicker_ms,?_key_waite_release	;volatile
  5502  0090C8  C026  F069         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  5503  0090CC  0012               	return	
  5504  0090CE                     __end_of_key_waite_release:
  5505                           	opt stack 0
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           prodh	equ	0xFF4
  5511                           prodl	equ	0xFF3
  5512                           intcon	equ	0xFF2
  5513                           postinc0	equ	0xFEE
  5514                           wreg	equ	0xFE8
  5515                           postdec1	equ	0xFE5
  5516                           plusw1	equ	0xFE3
  5517                           fsr1h	equ	0xFE2
  5518                           fsr1l	equ	0xFE1
  5519                           indf2	equ	0xFDF
  5520                           plusw2	equ	0xFDB
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _key_polling *****************
  5526 ;; Defined at:
  5527 ;;		line 8 in file "src/driver/key.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  t8              1    7[BANK0 ] unsigned char 
  5532 ;;  ktemp           1    6[BANK0 ] unsigned char 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      unsigned char 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;Total ram usage:        2 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    6
  5549 ;; This function calls:
  5550 ;;		_delay_ms
  5551 ;; This function is called by:
  5552 ;;		_key_waite_release
  5553 ;;		_main
  5554 ;;		_event_process
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text16
  5559  008B92                     __ptext16:
  5560                           	opt stack 0
  5561  008B92                     _key_polling:
  5562                           	opt stack 22
  5563                           
  5564                           ;key.c: 10: uint8_t ktemp=(0x0);
  5565                           
  5566                           ;incstack = 0
  5567  008B92  0E00               	movlw	0
  5568  008B94  0100               	movlb	0	; () banked
  5569  008B96  6F66               	movwf	key_polling@ktemp& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;key.c: 11: uint8_t t8=0xff;
  5573  008B98  0100               	movlb	0	; () banked
  5574  008B9A  6967               	setf	key_polling@t8& (0+255),b
  5575                           
  5576                           ; BSR set to: 0
  5577                           
  5578                           ; BSR set to: 0
  5579                           
  5580                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  5581  008B9C  0E0E               	movlw	14
  5582  008B9E  1293               	iorwf	3987,f,c	;volatile
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5586                           
  5587                           ; BSR set to: 0
  5588  008BA0  5081               	movf	3969,w,c	;volatile
  5589  008BA2  0B0E               	andlw	14
  5590  008BA4  0100               	movlb	0	; () banked
  5591  008BA6  6F67               	movwf	key_polling@t8& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  5595  008BA8  0100               	movlb	0	; () banked
  5596  008BAA  5167               	movf	key_polling@t8& (0+255),w,b
  5597  008BAC  0B0E               	andlw	14
  5598  008BAE  0A0E               	xorlw	14
  5599  008BB0  B4D8               	btfsc	status,2,c
  5600  008BB2  D01A               	goto	l15622
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;key.c: 16: delay_ms(10);
  5604  008BB4  0E00               	movlw	0
  5605  008BB6  0100               	movlb	0	; () banked
  5606  008BB8  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5607  008BBA  0E0A               	movlw	10
  5608  008BBC  6F64               	movwf	delay_ms@dly& (0+255),b
  5609  008BBE  EC7F  F04C         	call	_delay_ms	;wreg free
  5610                           
  5611                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5612  008BC2  5081               	movf	3969,w,c	;volatile
  5613  008BC4  0B0E               	andlw	14
  5614  008BC6  0100               	movlb	0	; () banked
  5615  008BC8  6F67               	movwf	key_polling@t8& (0+255),b
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;key.c: 18: if(!( t8 & (1<<3))){
  5619  008BCA  0100               	movlb	0	; () banked
  5620  008BCC  B767               	btfsc	key_polling@t8& (0+255),3,b
  5621  008BCE  D002               	goto	l15614
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;key.c: 19: ktemp |= (0x01<<0x0);
  5625  008BD0  0100               	movlb	0	; () banked
  5626  008BD2  8166               	bsf	key_polling@ktemp& (0+255),0,b
  5627  008BD4                     l15614:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;key.c: 20: }
  5631                           ;key.c: 21: if(!( t8 & (1<<2))){
  5632  008BD4  0100               	movlb	0	; () banked
  5633  008BD6  B567               	btfsc	key_polling@t8& (0+255),2,b
  5634  008BD8  D002               	goto	l15618
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;key.c: 22: ktemp |= (0x01<<0x01);
  5638  008BDA  0100               	movlb	0	; () banked
  5639  008BDC  8366               	bsf	key_polling@ktemp& (0+255),1,b
  5640  008BDE                     l15618:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;key.c: 23: }
  5644                           ;key.c: 24: if(!( t8 & (1<<1))){
  5645  008BDE  0100               	movlb	0	; () banked
  5646  008BE0  B367               	btfsc	key_polling@t8& (0+255),1,b
  5647  008BE2  D002               	goto	l15622
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;key.c: 25: ktemp |= (0x01<<0x02);
  5651  008BE4  0100               	movlb	0	; () banked
  5652  008BE6  8566               	bsf	key_polling@ktemp& (0+255),2,b
  5653  008BE8                     l15622:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;key.c: 26: }
  5657                           ;key.c: 27: }
  5658                           ;key.c: 29: return ktemp;
  5659  008BE8  0100               	movlb	0	; () banked
  5660  008BEA  5166               	movf	key_polling@ktemp& (0+255),w,b
  5661  008BEC  0012               	return	
  5662  008BEE                     __end_of_key_polling:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           postdec1	equ	0xFE5
  5674                           plusw1	equ	0xFE3
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           plusw2	equ	0xFDB
  5679                           fsr2h	equ	0xFDA
  5680                           fsr2l	equ	0xFD9
  5681                           status	equ	0xFD8
  5682                           
  5683 ;; *************** function _key_process_up *****************
  5684 ;; Defined at:
  5685 ;;		line 575 in file "src/api/key_menu.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    8
  5706 ;; This function calls:
  5707 ;;		___up_adj_bar_level_scale
  5708 ;;		___up_adj_work_mode
  5709 ;;		___up_base_zero_adj
  5710 ;;		___up_density_adj
  5711 ;;		___up_diff_calib_adj
  5712 ;;		___up_epr_calib_adj
  5713 ;;		___up_epr_ilp_scale_adj
  5714 ;;		___up_home_adj
  5715 ;;		___up_poly_coefic_adj
  5716 ;;		___up_pose_size_adj
  5717 ;;		___up_pr_calib_adj
  5718 ;;		___up_psw_adj
  5719 ;;		___up_warn_type_adj
  5720 ;;		___up_warn_value_adj
  5721 ;; This function is called by:
  5722 ;;		_key_process
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text17
  5727  006F10                     __ptext17:
  5728                           	opt stack 0
  5729  006F10                     _key_process_up:
  5730                           	opt stack 21
  5731                           
  5732                           ;key_menu.c: 577: switch(menu){
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;incstack = 0
  5736  006F10  D02A               	goto	l16766
  5737  006F12                     l16736:
  5738  006F12  EC58  F04C         	call	___up_home_adj	;wreg free
  5739  006F16  0012               	return	
  5740  006F18                     l16738:
  5741  006F18  ECA8  F04D         	call	___up_psw_adj	;wreg free
  5742  006F1C  0012               	return	
  5743  006F1E                     l16740:
  5744  006F1E  ECC9  F04D         	call	___up_density_adj	;wreg free
  5745  006F22  0012               	return	
  5746  006F24                     l16742:
  5747  006F24  ECB1  F040         	call	___up_pose_size_adj	;wreg free
  5748  006F28  0012               	return	
  5749  006F2A                     l16744:
  5750  006F2A  ECD4  F04D         	call	___up_base_zero_adj	;wreg free
  5751  006F2E  0012               	return	
  5752  006F30                     l16746:
  5753  006F30  ECC2  F049         	call	___up_diff_calib_adj	;wreg free
  5754  006F34  0012               	return	
  5755  006F36                     l16748:
  5756  006F36  ECA6  F049         	call	___up_pr_calib_adj	;wreg free
  5757  006F3A  0012               	return	
  5758  006F3C                     l16750:
  5759  006F3C  ECB3  F04D         	call	___up_poly_coefic_adj	;wreg free
  5760  006F40  0012               	return	
  5761  006F42                     l16752:
  5762  006F42  ECCD  F048         	call	___up_warn_type_adj	;wreg free
  5763  006F46  0012               	return	
  5764  006F48                     l16754:
  5765  006F48  EC9D  F04D         	call	___up_warn_value_adj	;wreg free
  5766  006F4C  0012               	return	
  5767  006F4E                     l16756:
  5768  006F4E  EC9E  F04A         	call	___up_epr_calib_adj	;wreg free
  5769  006F52  0012               	return	
  5770  006F54                     l16758:
  5771  006F54  ECBE  F04D         	call	___up_epr_ilp_scale_adj	;wreg free
  5772  006F58  0012               	return	
  5773  006F5A                     l16760:
  5774  006F5A  ECDF  F04D         	call	___up_adj_bar_level_scale	;wreg free
  5775  006F5E  0012               	return	
  5776  006F60                     l16762:
  5777  006F60  EC4D  F04A         	call	___up_adj_work_mode	;wreg free
  5778                           
  5779                           ;key_menu.c: 595: }
  5780                           
  5781                           ;key_menu.c: 594: default:break;
  5782  006F64  0012               	return	
  5783  006F66                     l16766:
  5784  006F66  5033               	movf	_menu,w,c	;volatile
  5785                           
  5786                           ; Switch size 1, requested type "space"
  5787                           ; Number of cases is 14, Range of values is 0 to 240
  5788                           ; switch strategies available:
  5789                           ; Name         Instructions Cycles
  5790                           ; simple_byte           43    22 (average)
  5791                           ;	Chosen strategy is simple_byte
  5792  006F68  0A00               	xorlw	0	; case 0
  5793  006F6A  B4D8               	btfsc	status,2,c
  5794  006F6C  D7D2               	goto	l16736
  5795  006F6E  0A10               	xorlw	16	; case 16
  5796  006F70  B4D8               	btfsc	status,2,c
  5797  006F72  D7D2               	goto	l16738
  5798  006F74  0A30               	xorlw	48	; case 32
  5799  006F76  B4D8               	btfsc	status,2,c
  5800  006F78  D7D2               	goto	l16740
  5801  006F7A  0A10               	xorlw	16	; case 48
  5802  006F7C  B4D8               	btfsc	status,2,c
  5803  006F7E  D7D2               	goto	l16742
  5804  006F80  0A70               	xorlw	112	; case 64
  5805  006F82  B4D8               	btfsc	status,2,c
  5806  006F84  D7D2               	goto	l16744
  5807  006F86  0A10               	xorlw	16	; case 80
  5808  006F88  B4D8               	btfsc	status,2,c
  5809  006F8A  D7D2               	goto	l16746
  5810  006F8C  0A30               	xorlw	48	; case 96
  5811  006F8E  B4D8               	btfsc	status,2,c
  5812  006F90  D7D2               	goto	l16748
  5813  006F92  0A10               	xorlw	16	; case 112
  5814  006F94  B4D8               	btfsc	status,2,c
  5815  006F96  D7D2               	goto	l16750
  5816  006F98  0AF0               	xorlw	240	; case 128
  5817  006F9A  B4D8               	btfsc	status,2,c
  5818  006F9C  D7D2               	goto	l16752
  5819  006F9E  0A10               	xorlw	16	; case 144
  5820  006FA0  B4D8               	btfsc	status,2,c
  5821  006FA2  D7D2               	goto	l16754
  5822  006FA4  0A30               	xorlw	48	; case 160
  5823  006FA6  B4D8               	btfsc	status,2,c
  5824  006FA8  D7D2               	goto	l16756
  5825  006FAA  0A10               	xorlw	16	; case 176
  5826  006FAC  B4D8               	btfsc	status,2,c
  5827  006FAE  D7D2               	goto	l16758
  5828  006FB0  0A70               	xorlw	112	; case 192
  5829  006FB2  B4D8               	btfsc	status,2,c
  5830  006FB4  D7D2               	goto	l16760
  5831  006FB6  0A30               	xorlw	48	; case 240
  5832  006FB8  A4D8               	btfss	status,2,c
  5833  006FBA  0012               	return	
  5834  006FBC  D7D1               	goto	l16762
  5835  006FBE                     __end_of_key_process_up:
  5836                           	opt stack 0
  5837                           tblptru	equ	0xFF8
  5838                           tblptrh	equ	0xFF7
  5839                           tblptrl	equ	0xFF6
  5840                           tablat	equ	0xFF5
  5841                           prodh	equ	0xFF4
  5842                           prodl	equ	0xFF3
  5843                           intcon	equ	0xFF2
  5844                           postinc0	equ	0xFEE
  5845                           wreg	equ	0xFE8
  5846                           postdec1	equ	0xFE5
  5847                           plusw1	equ	0xFE3
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           plusw2	equ	0xFDB
  5852                           fsr2h	equ	0xFDA
  5853                           fsr2l	equ	0xFD9
  5854                           status	equ	0xFD8
  5855                           
  5856 ;; *************** function ___up_warn_value_adj *****************
  5857 ;; Defined at:
  5858 ;;		line 531 in file "src/api/key_menu.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    7
  5879 ;; This function calls:
  5880 ;;		_key_adj_value_float
  5881 ;; This function is called by:
  5882 ;;		_key_process_up
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text18
  5887  009B3A                     __ptext18:
  5888                           	opt stack 0
  5889  009B3A                     ___up_warn_value_adj:
  5890                           	opt stack 21
  5891                           
  5892                           ;key_menu.c: 533: key_adj_value_float(&m_floatAdj,adjLocation);
  5893                           
  5894                           ;incstack = 0
  5895  009B3A  0E35               	movlw	low _m_floatAdj
  5896  009B3C  0100               	movlb	0	; () banked
  5897  009B3E  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  5898  009B40  0E00               	movlw	high _m_floatAdj
  5899  009B42  0100               	movlb	0	; () banked
  5900  009B44  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  5901  009B46  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  5902  009B4A  EC46  F030         	call	_key_adj_value_float	;wreg free
  5903  009B4E  0012               	return		;funcret
  5904  009B50                     __end_of___up_warn_value_adj:
  5905                           	opt stack 0
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           postinc0	equ	0xFEE
  5914                           wreg	equ	0xFE8
  5915                           postdec1	equ	0xFE5
  5916                           plusw1	equ	0xFE3
  5917                           fsr1h	equ	0xFE2
  5918                           fsr1l	equ	0xFE1
  5919                           indf2	equ	0xFDF
  5920                           plusw2	equ	0xFDB
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function ___up_warn_type_adj *****************
  5926 ;; Defined at:
  5927 ;;		line 523 in file "src/api/key_menu.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  p               2    0[BANK0 ] PTR unsigned char 
  5932 ;;		 -> adjValue(4), 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        3 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    4
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_key_process_up
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text19
  5957  00919A                     __ptext19:
  5958                           	opt stack 0
  5959  00919A                     ___up_warn_type_adj:
  5960                           	opt stack 24
  5961                           
  5962                           ;key_menu.c: 525: uint8_t* p;
  5963                           ;key_menu.c: 526: p=(uint8_t*)(&adjValue);
  5964                           
  5965                           ;incstack = 0
  5966  00919A  0E39               	movlw	low _adjValue
  5967  00919C  0100               	movlb	0	; () banked
  5968  00919E  6F60               	movwf	___up_warn_type_adj@p& (0+255),b
  5969  0091A0  0E00               	movlw	high _adjValue
  5970  0091A2  0100               	movlb	0	; () banked
  5971  0091A4  6F61               	movwf	(___up_warn_type_adj@p+1)& (0+255),b
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;key_menu.c: 527: (*p)=(*p)+1;
  5975  0091A6  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5976  0091AA  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5977  0091AE  50DF               	movf	indf2,w,c
  5978  0091B0  6E20               	movwf	??___up_warn_type_adj& (0+255),c
  5979  0091B2  2820               	incf	??___up_warn_type_adj,w,c
  5980  0091B4  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5981  0091B8  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5982  0091BC  6EDF               	movwf	indf2,c
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;key_menu.c: 528: if(*p>PRESSURE_LO)*p=HIGHT_HI;
  5986  0091BE  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5987  0091C2  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5988  0091C6  0E03               	movlw	3
  5989  0091C8  64DF               	cpfsgt	indf2,c
  5990  0091CA  0012               	return	
  5991                           
  5992                           ; BSR set to: 0
  5993  0091CC  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5994  0091D0  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5995  0091D4  0E00               	movlw	0
  5996  0091D6  6EDF               	movwf	indf2,c
  5997  0091D8  0012               	return	
  5998  0091DA                     __end_of___up_warn_type_adj:
  5999                           	opt stack 0
  6000                           tblptru	equ	0xFF8
  6001                           tblptrh	equ	0xFF7
  6002                           tblptrl	equ	0xFF6
  6003                           tablat	equ	0xFF5
  6004                           prodh	equ	0xFF4
  6005                           prodl	equ	0xFF3
  6006                           intcon	equ	0xFF2
  6007                           postinc0	equ	0xFEE
  6008                           wreg	equ	0xFE8
  6009                           postdec1	equ	0xFE5
  6010                           plusw1	equ	0xFE3
  6011                           fsr1h	equ	0xFE2
  6012                           fsr1l	equ	0xFE1
  6013                           indf2	equ	0xFDF
  6014                           plusw2	equ	0xFDB
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function ___up_psw_adj *****************
  6020 ;; Defined at:
  6021 ;;		line 458 in file "src/api/key_menu.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      void 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;Total ram usage:        0 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    6
  6042 ;; This function calls:
  6043 ;;		_key_adj_value_fixed
  6044 ;; This function is called by:
  6045 ;;		_key_process_up
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text20
  6050  009B50                     __ptext20:
  6051                           	opt stack 0
  6052  009B50                     ___up_psw_adj:
  6053                           	opt stack 22
  6054                           
  6055                           ;key_menu.c: 460: key_adj_value_fixed((uint16_t*)(&passWord),adjLocation);
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;incstack = 0
  6059  009B50  0E3D               	movlw	low _passWord
  6060  009B52  0100               	movlb	0	; () banked
  6061  009B54  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6062  009B56  0E00               	movlw	high _passWord
  6063  009B58  0100               	movlb	0	; () banked
  6064  009B5A  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6065  009B5C  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  6066  009B60  ECE9  F02E         	call	_key_adj_value_fixed	;wreg free
  6067  009B64  0012               	return		;funcret
  6068  009B66                     __end_of___up_psw_adj:
  6069                           	opt stack 0
  6070                           tblptru	equ	0xFF8
  6071                           tblptrh	equ	0xFF7
  6072                           tblptrl	equ	0xFF6
  6073                           tablat	equ	0xFF5
  6074                           prodh	equ	0xFF4
  6075                           prodl	equ	0xFF3
  6076                           intcon	equ	0xFF2
  6077                           postinc0	equ	0xFEE
  6078                           wreg	equ	0xFE8
  6079                           postdec1	equ	0xFE5
  6080                           plusw1	equ	0xFE3
  6081                           fsr1h	equ	0xFE2
  6082                           fsr1l	equ	0xFE1
  6083                           indf2	equ	0xFDF
  6084                           plusw2	equ	0xFDB
  6085                           fsr2h	equ	0xFDA
  6086                           fsr2l	equ	0xFD9
  6087                           status	equ	0xFD8
  6088                           
  6089 ;; *************** function ___up_pr_calib_adj *****************
  6090 ;; Defined at:
  6091 ;;		line 505 in file "src/api/key_menu.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  t8              1   27[BANK0 ] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;Total ram usage:        1 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    7
  6112 ;; This function calls:
  6113 ;;		_key_adj_value_float
  6114 ;; This function is called by:
  6115 ;;		_key_process_up
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text21
  6120  00934C                     __ptext21:
  6121                           	opt stack 0
  6122  00934C                     ___up_pr_calib_adj:
  6123                           	opt stack 21
  6124                           
  6125                           ;key_menu.c: 507: uint8_t t8;
  6126                           ;key_menu.c: 508: if(calibCol==0){
  6127                           
  6128                           ;incstack = 0
  6129  00934C  5030               	movf	_calibCol,w,c	;volatile
  6130  00934E  A4D8               	btfss	status,2,c
  6131  009350  D00E               	goto	l15758
  6132                           
  6133                           ;key_menu.c: 509: t8=*(uint8_t*)(&adjValue);
  6134  009352  C039  F07B         	movff	_adjValue,___up_pr_calib_adj@t8
  6135                           
  6136                           ;key_menu.c: 510: t8++;
  6137  009356  0100               	movlb	0	; () banked
  6138  009358  2B7B               	incf	___up_pr_calib_adj@t8& (0+255),f,b
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;key_menu.c: 511: if(t8>=6)t8=2;
  6142  00935A  0E05               	movlw	5
  6143  00935C  0100               	movlb	0	; () banked
  6144  00935E  657B               	cpfsgt	___up_pr_calib_adj@t8& (0+255),b
  6145  009360  D003               	goto	l15756
  6146                           
  6147                           ; BSR set to: 0
  6148  009362  0E02               	movlw	2
  6149  009364  0100               	movlb	0	; () banked
  6150  009366  6F7B               	movwf	___up_pr_calib_adj@t8& (0+255),b
  6151  009368                     l15756:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;key_menu.c: 512: *(uint8_t*)(&adjValue)=t8;
  6155  009368  C07B  F039         	movff	___up_pr_calib_adj@t8,_adjValue
  6156                           
  6157                           ;key_menu.c: 513: }else{
  6158  00936C  0012               	return	
  6159  00936E                     l15758:
  6160                           
  6161                           ;key_menu.c: 514: key_adj_value_float(&m_floatAdj,adjLocation);
  6162  00936E  0E35               	movlw	low _m_floatAdj
  6163  009370  0100               	movlb	0	; () banked
  6164  009372  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6165  009374  0E00               	movlw	high _m_floatAdj
  6166  009376  0100               	movlb	0	; () banked
  6167  009378  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6168  00937A  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6169  00937E  EC46  F030         	call	_key_adj_value_float	;wreg free
  6170  009382  0012               	return	
  6171  009384                     __end_of___up_pr_calib_adj:
  6172                           	opt stack 0
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           postinc0	equ	0xFEE
  6181                           wreg	equ	0xFE8
  6182                           postdec1	equ	0xFE5
  6183                           plusw1	equ	0xFE3
  6184                           fsr1h	equ	0xFE2
  6185                           fsr1l	equ	0xFE1
  6186                           indf2	equ	0xFDF
  6187                           plusw2	equ	0xFDB
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function ___up_pose_size_adj *****************
  6193 ;; Defined at:
  6194 ;;		line 468 in file "src/api/key_menu.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;		None
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  p               2   28[BANK0 ] PTR unsigned char 
  6199 ;;		 -> adjValue(4), 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;Total ram usage:        3 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    7
  6216 ;; This function calls:
  6217 ;;		_key_adj_value_float
  6218 ;; This function is called by:
  6219 ;;		_key_process_up
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text22
  6224  008162                     __ptext22:
  6225                           	opt stack 0
  6226  008162                     ___up_pose_size_adj:
  6227                           	opt stack 21
  6228                           
  6229                           ;key_menu.c: 470: uint8_t* p;
  6230                           ;key_menu.c: 471: switch(subMenu){
  6231                           
  6232                           ;incstack = 0
  6233  008162  D02D               	goto	l15728
  6234  008164                     l15716:
  6235                           
  6236                           ;key_menu.c: 473: p=(uint8_t*)(&adjValue);
  6237  008164  0E39               	movlw	low _adjValue
  6238  008166  0100               	movlb	0	; () banked
  6239  008168  6F7C               	movwf	___up_pose_size_adj@p& (0+255),b
  6240  00816A  0E00               	movlw	high _adjValue
  6241  00816C  0100               	movlb	0	; () banked
  6242  00816E  6F7D               	movwf	(___up_pose_size_adj@p+1)& (0+255),b
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;key_menu.c: 474: (*p)=(*p)+1;
  6246  008170  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6247  008174  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6248  008178  50DF               	movf	indf2,w,c
  6249  00817A  0100               	movlb	0	; () banked
  6250  00817C  6F7B               	movwf	??___up_pose_size_adj& (0+255),b
  6251  00817E  0100               	movlb	0	; () banked
  6252  008180  297B               	incf	??___up_pose_size_adj& (0+255),w,b
  6253  008182  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6254  008186  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6255  00818A  6EDF               	movwf	indf2,c
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;key_menu.c: 475: if(*p>VERTICAL)*p=HOTIZONTAL;
  6259  00818C  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6260  008190  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6261  008194  0E01               	movlw	1
  6262  008196  64DF               	cpfsgt	indf2,c
  6263  008198  0012               	return	
  6264                           
  6265                           ; BSR set to: 0
  6266  00819A  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6267  00819E  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6268  0081A2  0E00               	movlw	0
  6269  0081A4  6EDF               	movwf	indf2,c
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;key_menu.c: 476: break;
  6273  0081A6  0012               	return	
  6274  0081A8                     l15724:
  6275                           
  6276                           ;key_menu.c: 478: case 0x02:
  6277                           ;key_menu.c: 479: key_adj_value_float(&m_floatAdj,adjLocation);
  6278  0081A8  0E35               	movlw	low _m_floatAdj
  6279  0081AA  0100               	movlb	0	; () banked
  6280  0081AC  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6281  0081AE  0E00               	movlw	high _m_floatAdj
  6282  0081B0  0100               	movlb	0	; () banked
  6283  0081B2  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6284  0081B4  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6285  0081B8  EC46  F030         	call	_key_adj_value_float	;wreg free
  6286                           
  6287                           ;key_menu.c: 482: }
  6288                           
  6289                           ;key_menu.c: 481: default:break;
  6290                           
  6291                           ;key_menu.c: 480: break;
  6292  0081BC  0012               	return	
  6293  0081BE                     l15728:
  6294  0081BE  5032               	movf	_subMenu,w,c	;volatile
  6295                           
  6296                           ; Switch size 1, requested type "space"
  6297                           ; Number of cases is 3, Range of values is 0 to 2
  6298                           ; switch strategies available:
  6299                           ; Name         Instructions Cycles
  6300                           ; simple_byte           10     6 (average)
  6301                           ;	Chosen strategy is simple_byte
  6302  0081C0  0A00               	xorlw	0	; case 0
  6303  0081C2  B4D8               	btfsc	status,2,c
  6304  0081C4  D7CF               	goto	l15716
  6305  0081C6  0A01               	xorlw	1	; case 1
  6306  0081C8  B4D8               	btfsc	status,2,c
  6307  0081CA  D7EE               	goto	l15724
  6308  0081CC  0A03               	xorlw	3	; case 2
  6309  0081CE  A4D8               	btfss	status,2,c
  6310  0081D0  0012               	return	
  6311  0081D2  D7EA               	goto	l15724
  6312  0081D4                     __end_of___up_pose_size_adj:
  6313                           	opt stack 0
  6314                           tblptru	equ	0xFF8
  6315                           tblptrh	equ	0xFF7
  6316                           tblptrl	equ	0xFF6
  6317                           tablat	equ	0xFF5
  6318                           prodh	equ	0xFF4
  6319                           prodl	equ	0xFF3
  6320                           intcon	equ	0xFF2
  6321                           postinc0	equ	0xFEE
  6322                           wreg	equ	0xFE8
  6323                           postdec1	equ	0xFE5
  6324                           plusw1	equ	0xFE3
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           indf2	equ	0xFDF
  6328                           plusw2	equ	0xFDB
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333 ;; *************** function ___up_poly_coefic_adj *****************
  6334 ;; Defined at:
  6335 ;;		line 518 in file "src/api/key_menu.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:        0 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    6
  6356 ;; This function calls:
  6357 ;;		_key_adj_value_fixed
  6358 ;; This function is called by:
  6359 ;;		_key_process_up
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text23
  6364  009B66                     __ptext23:
  6365                           	opt stack 0
  6366  009B66                     ___up_poly_coefic_adj:
  6367                           	opt stack 22
  6368                           
  6369                           ;key_menu.c: 520: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  6370                           
  6371                           ;incstack = 0
  6372  009B66  0E39               	movlw	low _adjValue
  6373  009B68  0100               	movlb	0	; () banked
  6374  009B6A  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6375  009B6C  0E00               	movlw	high _adjValue
  6376  009B6E  0100               	movlb	0	; () banked
  6377  009B70  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6378  009B72  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  6379  009B76  ECE9  F02E         	call	_key_adj_value_fixed	;wreg free
  6380  009B7A  0012               	return		;funcret
  6381  009B7C                     __end_of___up_poly_coefic_adj:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           postinc0	equ	0xFEE
  6391                           wreg	equ	0xFE8
  6392                           postdec1	equ	0xFE5
  6393                           plusw1	equ	0xFE3
  6394                           fsr1h	equ	0xFE2
  6395                           fsr1l	equ	0xFE1
  6396                           indf2	equ	0xFDF
  6397                           plusw2	equ	0xFDB
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function ___up_home_adj *****************
  6403 ;; Defined at:
  6404 ;;		line 441 in file "src/api/key_menu.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  t8              1   31[COMRAM] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        1 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    4
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_key_process_up
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text24
  6433  0098B0                     __ptext24:
  6434                           	opt stack 0
  6435  0098B0                     ___up_home_adj:
  6436                           	opt stack 24
  6437                           
  6438                           ;key_menu.c: 443: uint8_t t8;
  6439                           ;key_menu.c: 447: t8=(subMenu & 0xf0);
  6440                           
  6441                           ;incstack = 0
  6442  0098B0  5032               	movf	_subMenu,w,c	;volatile
  6443  0098B2  0BF0               	andlw	240
  6444  0098B4  6E20               	movwf	___up_home_adj@t8,c
  6445                           
  6446                           ;key_menu.c: 448: t8>>=4;
  6447  0098B6  3A20               	swapf	___up_home_adj@t8,f,c
  6448  0098B8  0E0F               	movlw	15
  6449  0098BA  1620               	andwf	___up_home_adj@t8,f,c
  6450                           
  6451                           ;key_menu.c: 449: t8++;
  6452  0098BC  2A20               	incf	___up_home_adj@t8,f,c
  6453                           
  6454                           ;key_menu.c: 450: if(t8>2)t8=0;
  6455  0098BE  0E02               	movlw	2
  6456  0098C0  6420               	cpfsgt	___up_home_adj@t8,c
  6457  0098C2  D002               	goto	l15704
  6458  0098C4  0E00               	movlw	0
  6459  0098C6  6E20               	movwf	___up_home_adj@t8,c
  6460  0098C8                     l15704:
  6461                           
  6462                           ;key_menu.c: 451: t8<<=4;
  6463  0098C8  3A20               	swapf	___up_home_adj@t8,f,c
  6464  0098CA  0EF0               	movlw	240
  6465  0098CC  1620               	andwf	___up_home_adj@t8,f,c
  6466                           
  6467                           ;key_menu.c: 452: subMenu &= 0x0f;
  6468  0098CE  0E0F               	movlw	15
  6469  0098D0  1632               	andwf	_subMenu,f,c	;volatile
  6470                           
  6471                           ;key_menu.c: 453: subMenu |= t8;
  6472  0098D2  5020               	movf	___up_home_adj@t8,w,c
  6473  0098D4  1232               	iorwf	_subMenu,f,c	;volatile
  6474  0098D6  0012               	return		;funcret
  6475  0098D8                     __end_of___up_home_adj:
  6476                           	opt stack 0
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           wreg	equ	0xFE8
  6486                           postdec1	equ	0xFE5
  6487                           plusw1	equ	0xFE3
  6488                           fsr1h	equ	0xFE2
  6489                           fsr1l	equ	0xFE1
  6490                           indf2	equ	0xFDF
  6491                           plusw2	equ	0xFDB
  6492                           fsr2h	equ	0xFDA
  6493                           fsr2l	equ	0xFD9
  6494                           status	equ	0xFD8
  6495                           
  6496 ;; *************** function ___up_epr_ilp_scale_adj *****************
  6497 ;; Defined at:
  6498 ;;		line 552 in file "src/api/key_menu.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    7
  6519 ;; This function calls:
  6520 ;;		_key_adj_value_float
  6521 ;; This function is called by:
  6522 ;;		_key_process_up
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text25
  6527  009B7C                     __ptext25:
  6528                           	opt stack 0
  6529  009B7C                     ___up_epr_ilp_scale_adj:
  6530                           	opt stack 21
  6531                           
  6532                           ;key_menu.c: 555: key_adj_value_float(&m_floatAdj,adjLocation);
  6533                           
  6534                           ;incstack = 0
  6535  009B7C  0E35               	movlw	low _m_floatAdj
  6536  009B7E  0100               	movlb	0	; () banked
  6537  009B80  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6538  009B82  0E00               	movlw	high _m_floatAdj
  6539  009B84  0100               	movlb	0	; () banked
  6540  009B86  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6541  009B88  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6542  009B8C  EC46  F030         	call	_key_adj_value_float	;wreg free
  6543  009B90  0012               	return		;funcret
  6544  009B92                     __end_of___up_epr_ilp_scale_adj:
  6545                           	opt stack 0
  6546                           tblptru	equ	0xFF8
  6547                           tblptrh	equ	0xFF7
  6548                           tblptrl	equ	0xFF6
  6549                           tablat	equ	0xFF5
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           intcon	equ	0xFF2
  6553                           postinc0	equ	0xFEE
  6554                           wreg	equ	0xFE8
  6555                           postdec1	equ	0xFE5
  6556                           plusw1	equ	0xFE3
  6557                           fsr1h	equ	0xFE2
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           plusw2	equ	0xFDB
  6561                           fsr2h	equ	0xFDA
  6562                           fsr2l	equ	0xFD9
  6563                           status	equ	0xFD8
  6564                           
  6565 ;; *************** function ___up_epr_calib_adj *****************
  6566 ;; Defined at:
  6567 ;;		line 536 in file "src/api/key_menu.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    7
  6588 ;; This function calls:
  6589 ;;		_key_adj_value_float
  6590 ;; This function is called by:
  6591 ;;		_key_process_up
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text26
  6596  00953C                     __ptext26:
  6597                           	opt stack 0
  6598  00953C                     ___up_epr_calib_adj:
  6599                           	opt stack 21
  6600                           
  6601                           ;key_menu.c: 538: switch(subMenu){
  6602                           
  6603                           ;incstack = 0
  6604  00953C  D00B               	goto	l15778
  6605  00953E                     l15774:
  6606                           
  6607                           ;key_menu.c: 540: case 0x01:
  6608                           ;key_menu.c: 543: case 0x02:
  6609                           ;key_menu.c: 544: case 0x03:
  6610                           ;key_menu.c: 546: key_adj_value_float(&m_floatAdj,adjLocation);
  6611  00953E  0E35               	movlw	low _m_floatAdj
  6612  009540  0100               	movlb	0	; () banked
  6613  009542  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6614  009544  0E00               	movlw	high _m_floatAdj
  6615  009546  0100               	movlb	0	; () banked
  6616  009548  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6617  00954A  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6618  00954E  EC46  F030         	call	_key_adj_value_float	;wreg free
  6619                           
  6620                           ;key_menu.c: 549: }
  6621                           
  6622                           ;key_menu.c: 548: default:break;
  6623                           
  6624                           ;key_menu.c: 547: break;
  6625  009552  0012               	return	
  6626  009554                     l15778:
  6627  009554  5032               	movf	_subMenu,w,c	;volatile
  6628                           
  6629                           ; Switch size 1, requested type "space"
  6630                           ; Number of cases is 4, Range of values is 0 to 3
  6631                           ; switch strategies available:
  6632                           ; Name         Instructions Cycles
  6633                           ; simple_byte           13     7 (average)
  6634                           ;	Chosen strategy is simple_byte
  6635  009556  0A00               	xorlw	0	; case 0
  6636  009558  B4D8               	btfsc	status,2,c
  6637  00955A  D7F1               	goto	l15774
  6638  00955C  0A01               	xorlw	1	; case 1
  6639  00955E  B4D8               	btfsc	status,2,c
  6640  009560  D7EE               	goto	l15774
  6641  009562  0A03               	xorlw	3	; case 2
  6642  009564  B4D8               	btfsc	status,2,c
  6643  009566  D7EB               	goto	l15774
  6644  009568  0A01               	xorlw	1	; case 3
  6645  00956A  A4D8               	btfss	status,2,c
  6646  00956C  0012               	return	
  6647  00956E  D7E7               	goto	l15774
  6648  009570                     __end_of___up_epr_calib_adj:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           intcon	equ	0xFF2
  6657                           postinc0	equ	0xFEE
  6658                           wreg	equ	0xFE8
  6659                           postdec1	equ	0xFE5
  6660                           plusw1	equ	0xFE3
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           indf2	equ	0xFDF
  6664                           plusw2	equ	0xFDB
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function ___up_diff_calib_adj *****************
  6670 ;; Defined at:
  6671 ;;		line 492 in file "src/api/key_menu.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  t8              1   27[BANK0 ] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;Total ram usage:        1 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    7
  6692 ;; This function calls:
  6693 ;;		_key_adj_value_float
  6694 ;; This function is called by:
  6695 ;;		_key_process_up
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text27
  6700  009384                     __ptext27:
  6701                           	opt stack 0
  6702  009384                     ___up_diff_calib_adj:
  6703                           	opt stack 21
  6704                           
  6705                           ;key_menu.c: 494: uint8_t t8;
  6706                           ;key_menu.c: 495: if(calibCol==0){
  6707                           
  6708                           ;incstack = 0
  6709  009384  5030               	movf	_calibCol,w,c	;volatile
  6710  009386  A4D8               	btfss	status,2,c
  6711  009388  D00E               	goto	l15744
  6712                           
  6713                           ;key_menu.c: 496: t8=*(uint8_t*)(&adjValue);
  6714  00938A  C039  F07B         	movff	_adjValue,___up_diff_calib_adj@t8
  6715                           
  6716                           ;key_menu.c: 497: t8++;
  6717  00938E  0100               	movlb	0	; () banked
  6718  009390  2B7B               	incf	___up_diff_calib_adj@t8& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;key_menu.c: 498: if(t8>=6)t8=2;
  6722  009392  0E05               	movlw	5
  6723  009394  0100               	movlb	0	; () banked
  6724  009396  657B               	cpfsgt	___up_diff_calib_adj@t8& (0+255),b
  6725  009398  D003               	goto	l15742
  6726                           
  6727                           ; BSR set to: 0
  6728  00939A  0E02               	movlw	2
  6729  00939C  0100               	movlb	0	; () banked
  6730  00939E  6F7B               	movwf	___up_diff_calib_adj@t8& (0+255),b
  6731  0093A0                     l15742:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;key_menu.c: 499: *(uint8_t*)(&adjValue)=t8;
  6735  0093A0  C07B  F039         	movff	___up_diff_calib_adj@t8,_adjValue
  6736                           
  6737                           ;key_menu.c: 500: }else{
  6738  0093A4  0012               	return	
  6739  0093A6                     l15744:
  6740                           
  6741                           ;key_menu.c: 501: key_adj_value_float(&m_floatAdj,adjLocation);
  6742  0093A6  0E35               	movlw	low _m_floatAdj
  6743  0093A8  0100               	movlb	0	; () banked
  6744  0093AA  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6745  0093AC  0E00               	movlw	high _m_floatAdj
  6746  0093AE  0100               	movlb	0	; () banked
  6747  0093B0  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6748  0093B2  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6749  0093B6  EC46  F030         	call	_key_adj_value_float	;wreg free
  6750  0093BA  0012               	return	
  6751  0093BC                     __end_of___up_diff_calib_adj:
  6752                           	opt stack 0
  6753                           tblptru	equ	0xFF8
  6754                           tblptrh	equ	0xFF7
  6755                           tblptrl	equ	0xFF6
  6756                           tablat	equ	0xFF5
  6757                           prodh	equ	0xFF4
  6758                           prodl	equ	0xFF3
  6759                           intcon	equ	0xFF2
  6760                           postinc0	equ	0xFEE
  6761                           wreg	equ	0xFE8
  6762                           postdec1	equ	0xFE5
  6763                           plusw1	equ	0xFE3
  6764                           fsr1h	equ	0xFE2
  6765                           fsr1l	equ	0xFE1
  6766                           indf2	equ	0xFDF
  6767                           plusw2	equ	0xFDB
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function ___up_density_adj *****************
  6773 ;; Defined at:
  6774 ;;		line 463 in file "src/api/key_menu.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    7
  6795 ;; This function calls:
  6796 ;;		_key_adj_value_float
  6797 ;; This function is called by:
  6798 ;;		_key_process_up
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text28
  6803  009B92                     __ptext28:
  6804                           	opt stack 0
  6805  009B92                     ___up_density_adj:
  6806                           	opt stack 21
  6807                           
  6808                           ;key_menu.c: 465: key_adj_value_float(&m_floatAdj,adjLocation);
  6809                           
  6810                           ;incstack = 0
  6811  009B92  0E35               	movlw	low _m_floatAdj
  6812  009B94  0100               	movlb	0	; () banked
  6813  009B96  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6814  009B98  0E00               	movlw	high _m_floatAdj
  6815  009B9A  0100               	movlb	0	; () banked
  6816  009B9C  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6817  009B9E  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6818  009BA2  EC46  F030         	call	_key_adj_value_float	;wreg free
  6819  009BA6  0012               	return		;funcret
  6820  009BA8                     __end_of___up_density_adj:
  6821                           	opt stack 0
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           postinc0	equ	0xFEE
  6830                           wreg	equ	0xFE8
  6831                           postdec1	equ	0xFE5
  6832                           plusw1	equ	0xFE3
  6833                           fsr1h	equ	0xFE2
  6834                           fsr1l	equ	0xFE1
  6835                           indf2	equ	0xFDF
  6836                           plusw2	equ	0xFDB
  6837                           fsr2h	equ	0xFDA
  6838                           fsr2l	equ	0xFD9
  6839                           status	equ	0xFD8
  6840                           
  6841 ;; *************** function ___up_base_zero_adj *****************
  6842 ;; Defined at:
  6843 ;;		line 485 in file "src/api/key_menu.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    7
  6864 ;; This function calls:
  6865 ;;		_key_adj_value_float
  6866 ;; This function is called by:
  6867 ;;		_key_process_up
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text29
  6872  009BA8                     __ptext29:
  6873                           	opt stack 0
  6874  009BA8                     ___up_base_zero_adj:
  6875                           	opt stack 21
  6876                           
  6877                           ;key_menu.c: 487: key_adj_value_float(&m_floatAdj,adjLocation);
  6878                           
  6879                           ;incstack = 0
  6880  009BA8  0E35               	movlw	low _m_floatAdj
  6881  009BAA  0100               	movlb	0	; () banked
  6882  009BAC  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6883  009BAE  0E00               	movlw	high _m_floatAdj
  6884  009BB0  0100               	movlb	0	; () banked
  6885  009BB2  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6886  009BB4  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6887  009BB8  EC46  F030         	call	_key_adj_value_float	;wreg free
  6888  009BBC  0012               	return		;funcret
  6889  009BBE                     __end_of___up_base_zero_adj:
  6890                           	opt stack 0
  6891                           tblptru	equ	0xFF8
  6892                           tblptrh	equ	0xFF7
  6893                           tblptrl	equ	0xFF6
  6894                           tablat	equ	0xFF5
  6895                           prodh	equ	0xFF4
  6896                           prodl	equ	0xFF3
  6897                           intcon	equ	0xFF2
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           postdec1	equ	0xFE5
  6901                           plusw1	equ	0xFE3
  6902                           fsr1h	equ	0xFE2
  6903                           fsr1l	equ	0xFE1
  6904                           indf2	equ	0xFDF
  6905                           plusw2	equ	0xFDB
  6906                           fsr2h	equ	0xFDA
  6907                           fsr2l	equ	0xFD9
  6908                           status	equ	0xFD8
  6909                           
  6910 ;; *************** function _key_adj_value_float *****************
  6911 ;; Defined at:
  6912 ;;		line 76 in file "src/api/key_menu.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  mfp             2   21[BANK0 ] PTR struct .
  6915 ;;		 -> m_floatAdj(4), 
  6916 ;;  loc             1   23[BANK0 ] unsigned char 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  t16             2   24[BANK0 ] unsigned int 
  6919 ;;  t8              1   26[BANK0 ] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6929 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;Total ram usage:        6 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    6
  6936 ;; This function calls:
  6937 ;;		_key_adj_value_fixed
  6938 ;; This function is called by:
  6939 ;;		___up_density_adj
  6940 ;;		___up_pose_size_adj
  6941 ;;		___up_base_zero_adj
  6942 ;;		___up_diff_calib_adj
  6943 ;;		___up_pr_calib_adj
  6944 ;;		___up_warn_value_adj
  6945 ;;		___up_epr_calib_adj
  6946 ;;		___up_epr_ilp_scale_adj
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text30
  6951  00608C                     __ptext30:
  6952                           	opt stack 0
  6953  00608C                     _key_adj_value_float:
  6954                           	opt stack 21
  6955                           
  6956                           ;key_menu.c: 78: uint16_t t16;
  6957                           ;key_menu.c: 79: uint8_t t8;
  6958                           ;key_menu.c: 80: t16=mfp->stru.significand;
  6959                           
  6960                           ;incstack = 0
  6961  00608C  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  6962  006090  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  6963  006094  CFDE F078          	movff	postinc2,key_adj_value_float@t16
  6964  006098  CFDD F079          	movff	postdec2,key_adj_value_float@t16+1
  6965                           
  6966                           ;key_menu.c: 81: if(loc<4){
  6967  00609C  0E04               	movlw	4
  6968  00609E  0100               	movlb	0	; () banked
  6969  0060A0  6177               	cpfslt	key_adj_value_float@loc& (0+255),b
  6970  0060A2  D013               	goto	l15038
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;key_menu.c: 82: key_adj_value_fixed(&t16,loc);
  6974  0060A4  0E78               	movlw	low key_adj_value_float@t16
  6975  0060A6  0100               	movlb	0	; () banked
  6976  0060A8  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6977  0060AA  0E00               	movlw	high key_adj_value_float@t16
  6978  0060AC  0100               	movlb	0	; () banked
  6979  0060AE  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6980  0060B0  C077  F070         	movff	key_adj_value_float@loc,key_adj_value_fixed@loc
  6981  0060B4  ECE9  F02E         	call	_key_adj_value_fixed	;wreg free
  6982                           
  6983                           ;key_menu.c: 83: mfp->stru.significand=t16;
  6984  0060B8  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  6985  0060BC  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  6986  0060C0  C078  FFDE         	movff	key_adj_value_float@t16,postinc2
  6987  0060C4  C079  FFDD         	movff	key_adj_value_float@t16+1,postdec2
  6988                           
  6989                           ;key_menu.c: 84: }else if(loc==4){
  6990  0060C8  0012               	return	
  6991  0060CA                     l15038:
  6992  0060CA  0E04               	movlw	4
  6993  0060CC  0100               	movlb	0	; () banked
  6994  0060CE  1977               	xorwf	key_adj_value_float@loc& (0+255),w,b
  6995  0060D0  A4D8               	btfss	status,2,c
  6996  0060D2  D02E               	goto	l15056
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;key_menu.c: 85: t8=mfp->stru.exponent;
  7000  0060D4  0100               	movlb	0	; () banked
  7001  0060D6  EE20 F002          	lfsr	2,2
  7002  0060DA  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7003  0060DC  26D9               	addwf	fsr2l,f,c
  7004  0060DE  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7005  0060E0  22DA               	addwfc	fsr2h,f,c
  7006  0060E2  50DF               	movf	indf2,w,c
  7007  0060E4  0100               	movlb	0	; () banked
  7008  0060E6  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;key_menu.c: 86: t8++;
  7012  0060E8  0100               	movlb	0	; () banked
  7013  0060EA  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;key_menu.c: 87: if(t8>3 )t8=0;
  7017  0060EC  0E03               	movlw	3
  7018  0060EE  0100               	movlb	0	; () banked
  7019  0060F0  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7020  0060F2  D003               	goto	l15048
  7021                           
  7022                           ; BSR set to: 0
  7023  0060F4  0E00               	movlw	0
  7024  0060F6  0100               	movlb	0	; () banked
  7025  0060F8  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7026  0060FA                     l15048:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;key_menu.c: 88: if(mfp->stru.sign){
  7030  0060FA  0100               	movlb	0	; () banked
  7031  0060FC  EE20 F003          	lfsr	2,3
  7032  006100  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7033  006102  26D9               	addwf	fsr2l,f,c
  7034  006104  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7035  006106  22DA               	addwfc	fsr2h,f,c
  7036  006108  50DF               	movf	indf2,w,c
  7037  00610A  B4D8               	btfsc	status,2,c
  7038  00610C  D007               	goto	l15054
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;key_menu.c: 89: if(t8>2)t8=0;
  7042  00610E  0E02               	movlw	2
  7043  006110  0100               	movlb	0	; () banked
  7044  006112  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7045  006114  D003               	goto	l15054
  7046                           
  7047                           ; BSR set to: 0
  7048  006116  0E00               	movlw	0
  7049  006118  0100               	movlb	0	; () banked
  7050  00611A  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7051  00611C                     l15054:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;key_menu.c: 90: }
  7055                           ;key_menu.c: 91: mfp->stru.exponent=t8;
  7056  00611C  0100               	movlb	0	; () banked
  7057  00611E  EE20 F002          	lfsr	2,2
  7058  006122  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7059  006124  26D9               	addwf	fsr2l,f,c
  7060  006126  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7061  006128  22DA               	addwfc	fsr2h,f,c
  7062  00612A  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  7063                           
  7064                           ;key_menu.c: 92: }else{
  7065  00612E  0012               	return	
  7066  006130                     l15056:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;key_menu.c: 93: t8=mfp->stru.sign;
  7070  006130  0100               	movlb	0	; () banked
  7071  006132  EE20 F003          	lfsr	2,3
  7072  006136  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7073  006138  26D9               	addwf	fsr2l,f,c
  7074  00613A  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7075  00613C  22DA               	addwfc	fsr2h,f,c
  7076  00613E  50DF               	movf	indf2,w,c
  7077  006140  0100               	movlb	0	; () banked
  7078  006142  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;key_menu.c: 94: t8++;
  7082  006144  0100               	movlb	0	; () banked
  7083  006146  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;key_menu.c: 95: if(t8>1)t8=0;
  7087  006148  0E01               	movlw	1
  7088  00614A  0100               	movlb	0	; () banked
  7089  00614C  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7090  00614E  D003               	goto	l15064
  7091                           
  7092                           ; BSR set to: 0
  7093  006150  0E00               	movlw	0
  7094  006152  0100               	movlb	0	; () banked
  7095  006154  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7096  006156                     l15064:
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;key_menu.c: 97: mfp->stru.sign=t8;
  7100  006156  0100               	movlb	0	; () banked
  7101  006158  EE20 F003          	lfsr	2,3
  7102  00615C  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7103  00615E  26D9               	addwf	fsr2l,f,c
  7104  006160  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7105  006162  22DA               	addwfc	fsr2h,f,c
  7106  006164  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  7107                           
  7108                           ; BSR set to: 0
  7109  006168  0012               	return	
  7110  00616A                     __end_of_key_adj_value_float:
  7111                           	opt stack 0
  7112                           tblptru	equ	0xFF8
  7113                           tblptrh	equ	0xFF7
  7114                           tblptrl	equ	0xFF6
  7115                           tablat	equ	0xFF5
  7116                           prodh	equ	0xFF4
  7117                           prodl	equ	0xFF3
  7118                           intcon	equ	0xFF2
  7119                           postinc0	equ	0xFEE
  7120                           wreg	equ	0xFE8
  7121                           postdec1	equ	0xFE5
  7122                           plusw1	equ	0xFE3
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           indf2	equ	0xFDF
  7126                           postinc2	equ	0xFDE
  7127                           postdec2	equ	0xFDD
  7128                           plusw2	equ	0xFDB
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function ___up_adj_work_mode *****************
  7134 ;; Defined at:
  7135 ;;		line 564 in file "src/api/key_menu.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7140 ;;		 -> adjValue(4), 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;Total ram usage:        2 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    4
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_key_process_up
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text31
  7165  00949A                     __ptext31:
  7166                           	opt stack 0
  7167  00949A                     ___up_adj_work_mode:
  7168                           	opt stack 24
  7169                           
  7170                           ;key_menu.c: 566: uint8_t* p;
  7171                           ;key_menu.c: 567: p=(uint8_t*)(&adjValue);
  7172                           
  7173                           ;incstack = 0
  7174  00949A  0E39               	movlw	low _adjValue
  7175  00949C  0100               	movlb	0	; () banked
  7176  00949E  6F60               	movwf	___up_adj_work_mode@p& (0+255),b
  7177  0094A0  0E00               	movlw	high _adjValue
  7178  0094A2  0100               	movlb	0	; () banked
  7179  0094A4  6F61               	movwf	(___up_adj_work_mode@p+1)& (0+255),b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;key_menu.c: 568: if(*p==TEST_MODE){
  7183  0094A6  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7184  0094AA  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7185  0094AE  50DF               	movf	indf2,w,c
  7186  0094B0  A4D8               	btfss	status,2,c
  7187  0094B2  D007               	goto	l15790
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;key_menu.c: 569: *p=WORK_MODE;
  7191  0094B4  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7192  0094B8  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7193  0094BC  0E01               	movlw	1
  7194  0094BE  6EDF               	movwf	indf2,c
  7195                           
  7196                           ;key_menu.c: 570: }else{
  7197  0094C0  0012               	return	
  7198  0094C2                     l15790:
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;key_menu.c: 571: *p=TEST_MODE;
  7202  0094C2  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7203  0094C6  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7204  0094CA  0E00               	movlw	0
  7205  0094CC  6EDF               	movwf	indf2,c
  7206  0094CE  0012               	return	
  7207  0094D0                     __end_of___up_adj_work_mode:
  7208                           	opt stack 0
  7209                           tblptru	equ	0xFF8
  7210                           tblptrh	equ	0xFF7
  7211                           tblptrl	equ	0xFF6
  7212                           tablat	equ	0xFF5
  7213                           prodh	equ	0xFF4
  7214                           prodl	equ	0xFF3
  7215                           intcon	equ	0xFF2
  7216                           postinc0	equ	0xFEE
  7217                           wreg	equ	0xFE8
  7218                           postdec1	equ	0xFE5
  7219                           plusw1	equ	0xFE3
  7220                           fsr1h	equ	0xFE2
  7221                           fsr1l	equ	0xFE1
  7222                           indf2	equ	0xFDF
  7223                           postinc2	equ	0xFDE
  7224                           postdec2	equ	0xFDD
  7225                           plusw2	equ	0xFDB
  7226                           fsr2h	equ	0xFDA
  7227                           fsr2l	equ	0xFD9
  7228                           status	equ	0xFD8
  7229                           
  7230 ;; *************** function ___up_adj_bar_level_scale *****************
  7231 ;; Defined at:
  7232 ;;		line 559 in file "src/api/key_menu.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    6
  7253 ;; This function calls:
  7254 ;;		_key_adj_value_fixed
  7255 ;; This function is called by:
  7256 ;;		_key_process_up
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text32
  7261  009BBE                     __ptext32:
  7262                           	opt stack 0
  7263  009BBE                     ___up_adj_bar_level_scale:
  7264                           	opt stack 22
  7265                           
  7266                           ;key_menu.c: 561: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;incstack = 0
  7270  009BBE  0E39               	movlw	low _adjValue
  7271  009BC0  0100               	movlb	0	; () banked
  7272  009BC2  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  7273  009BC4  0E00               	movlw	high _adjValue
  7274  009BC6  0100               	movlb	0	; () banked
  7275  009BC8  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  7276  009BCA  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  7277  009BCE  ECE9  F02E         	call	_key_adj_value_fixed	;wreg free
  7278  009BD2  0012               	return		;funcret
  7279  009BD4                     __end_of___up_adj_bar_level_scale:
  7280                           	opt stack 0
  7281                           tblptru	equ	0xFF8
  7282                           tblptrh	equ	0xFF7
  7283                           tblptrl	equ	0xFF6
  7284                           tablat	equ	0xFF5
  7285                           prodh	equ	0xFF4
  7286                           prodl	equ	0xFF3
  7287                           intcon	equ	0xFF2
  7288                           postinc0	equ	0xFEE
  7289                           wreg	equ	0xFE8
  7290                           postdec1	equ	0xFE5
  7291                           plusw1	equ	0xFE3
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _key_adj_value_fixed *****************
  7303 ;; Defined at:
  7304 ;;		line 62 in file "src/api/key_menu.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  value           2   14[BANK0 ] PTR unsigned int 
  7307 ;;		 -> adjValue(4), passWord(2), key_adj_value_float@t16(2), 
  7308 ;;  loc             1   16[BANK0 ] unsigned char 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  t16             2   19[BANK0 ] unsigned int 
  7311 ;;  dloc            2   17[BANK0 ] unsigned int 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:        7 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    5
  7328 ;; This function calls:
  7329 ;;		___exp_10
  7330 ;;		___lwdiv
  7331 ;;		___lwmod
  7332 ;;		___wmul
  7333 ;; This function is called by:
  7334 ;;		_key_adj_value_float
  7335 ;;		___up_psw_adj
  7336 ;;		___up_poly_coefic_adj
  7337 ;;		___up_adj_bar_level_scale
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text33
  7342  005DD2                     __ptext33:
  7343                           	opt stack 0
  7344  005DD2                     _key_adj_value_fixed:
  7345                           	opt stack 21
  7346                           
  7347                           ;key_menu.c: 64: uint16_t dloc;
  7348                           ;key_menu.c: 65: uint16_t t16=*value;
  7349                           
  7350                           ;incstack = 0
  7351  005DD2  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7352  005DD6  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7353  005DDA  CFDE F073          	movff	postinc2,key_adj_value_fixed@t16
  7354  005DDE  CFDD F074          	movff	postdec2,key_adj_value_fixed@t16+1
  7355                           
  7356                           ;key_menu.c: 66: if(loc>3)loc=3;
  7357  005DE2  0E03               	movlw	3
  7358  005DE4  0100               	movlb	0	; () banked
  7359  005DE6  6570               	cpfsgt	key_adj_value_fixed@loc& (0+255),b
  7360  005DE8  D003               	goto	l14626
  7361                           
  7362                           ; BSR set to: 0
  7363  005DEA  0E03               	movlw	3
  7364  005DEC  0100               	movlb	0	; () banked
  7365  005DEE  6F70               	movwf	key_adj_value_fixed@loc& (0+255),b
  7366  005DF0                     l14626:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;key_menu.c: 67: dloc=(t16/__exp_10(loc))%10;
  7370  005DF0  0100               	movlb	0	; () banked
  7371  005DF2  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7372  005DF4  ECF7  F045         	call	___exp_10
  7373  005DF8  C060  F064         	movff	?___exp_10,___lwdiv@divisor
  7374  005DFC  C061  F065         	movff	?___exp_10+1,___lwdiv@divisor+1
  7375  005E00  C073  F062         	movff	key_adj_value_fixed@t16,___lwdiv@dividend
  7376  005E04  C074  F063         	movff	key_adj_value_fixed@t16+1,___lwdiv@dividend+1
  7377  005E08  EC89  F03F         	call	___lwdiv	;wreg free
  7378  005E0C  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  7379  005E10  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  7380  005E14  0E00               	movlw	0
  7381  005E16  0100               	movlb	0	; () banked
  7382  005E18  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  7383  005E1A  0E0A               	movlw	10
  7384  005E1C  6F6B               	movwf	___lwmod@divisor& (0+255),b
  7385  005E1E  ECA9  F044         	call	___lwmod	;wreg free
  7386  005E22  C069  F071         	movff	?___lwmod,key_adj_value_fixed@dloc
  7387  005E26  C06A  F072         	movff	?___lwmod+1,key_adj_value_fixed@dloc+1
  7388                           
  7389                           ;key_menu.c: 68: t16=t16-dloc*__exp_10(loc);
  7390  005E2A  0100               	movlb	0	; () banked
  7391  005E2C  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7392  005E2E  ECF7  F045         	call	___exp_10
  7393  005E32  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7394  005E36  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7395  005E3A  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7396  005E3E  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7397  005E42  EC68  F04A         	call	___wmul	;wreg free
  7398  005E46  0100               	movlb	0	; () banked
  7399  005E48  1F62               	comf	?___wmul& (0+255),f,b
  7400  005E4A  0100               	movlb	0	; () banked
  7401  005E4C  1F63               	comf	(?___wmul+1)& (0+255),f,b
  7402  005E4E  0100               	movlb	0	; () banked
  7403  005E50  4B62               	infsnz	?___wmul& (0+255),f,b
  7404  005E52  2B63               	incf	(?___wmul+1)& (0+255),f,b
  7405  005E54  0100               	movlb	0	; () banked
  7406  005E56  5173               	movf	key_adj_value_fixed@t16& (0+255),w,b
  7407  005E58  0100               	movlb	0	; () banked
  7408  005E5A  2562               	addwf	?___wmul& (0+255),w,b
  7409  005E5C  0100               	movlb	0	; () banked
  7410  005E5E  6F73               	movwf	key_adj_value_fixed@t16& (0+255),b
  7411  005E60  0100               	movlb	0	; () banked
  7412  005E62  5174               	movf	(key_adj_value_fixed@t16+1)& (0+255),w,b
  7413  005E64  0100               	movlb	0	; () banked
  7414  005E66  2163               	addwfc	(?___wmul+1)& (0+255),w,b
  7415  005E68  0100               	movlb	0	; () banked
  7416  005E6A  6F74               	movwf	(key_adj_value_fixed@t16+1)& (0+255),b
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;key_menu.c: 69: dloc++;
  7420  005E6C  0100               	movlb	0	; () banked
  7421  005E6E  4B71               	infsnz	key_adj_value_fixed@dloc& (0+255),f,b
  7422  005E70  2B72               	incf	(key_adj_value_fixed@dloc+1)& (0+255),f,b
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;key_menu.c: 70: if(dloc>9)dloc=0;
  7426  005E72  0100               	movlb	0	; () banked
  7427  005E74  5172               	movf	(key_adj_value_fixed@dloc+1)& (0+255),w,b
  7428  005E76  E105               	bnz	u13530
  7429  005E78  0E0A               	movlw	10
  7430  005E7A  0100               	movlb	0	; () banked
  7431  005E7C  5D71               	subwf	key_adj_value_fixed@dloc& (0+255),w,b
  7432  005E7E  A0D8               	btfss	status,0,c
  7433  005E80  D005               	goto	l14636
  7434  005E82                     u13530:
  7435                           
  7436                           ; BSR set to: 0
  7437  005E82  0E00               	movlw	0
  7438  005E84  0100               	movlb	0	; () banked
  7439  005E86  6F72               	movwf	(key_adj_value_fixed@dloc+1)& (0+255),b
  7440  005E88  0E00               	movlw	0
  7441  005E8A  6F71               	movwf	key_adj_value_fixed@dloc& (0+255),b
  7442  005E8C                     l14636:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;key_menu.c: 71: t16+=(dloc*__exp_10(loc));
  7446  005E8C  0100               	movlb	0	; () banked
  7447  005E8E  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7448  005E90  ECF7  F045         	call	___exp_10
  7449  005E94  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7450  005E98  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7451  005E9C  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7452  005EA0  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7453  005EA4  EC68  F04A         	call	___wmul	;wreg free
  7454  005EA8  0100               	movlb	0	; () banked
  7455  005EAA  5162               	movf	?___wmul& (0+255),w,b
  7456  005EAC  0100               	movlb	0	; () banked
  7457  005EAE  2773               	addwf	key_adj_value_fixed@t16& (0+255),f,b
  7458  005EB0  0100               	movlb	0	; () banked
  7459  005EB2  5163               	movf	(?___wmul+1)& (0+255),w,b
  7460  005EB4  0100               	movlb	0	; () banked
  7461  005EB6  2374               	addwfc	(key_adj_value_fixed@t16+1)& (0+255),f,b
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;key_menu.c: 72: *value=t16;
  7465  005EB8  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7466  005EBC  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7467  005EC0  C073  FFDE         	movff	key_adj_value_fixed@t16,postinc2
  7468  005EC4  C074  FFDD         	movff	key_adj_value_fixed@t16+1,postdec2
  7469                           
  7470                           ; BSR set to: 0
  7471  005EC8  0012               	return		;funcret
  7472  005ECA                     __end_of_key_adj_value_fixed:
  7473                           	opt stack 0
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           intcon	equ	0xFF2
  7481                           postinc0	equ	0xFEE
  7482                           wreg	equ	0xFE8
  7483                           postdec1	equ	0xFE5
  7484                           plusw1	equ	0xFE3
  7485                           fsr1h	equ	0xFE2
  7486                           fsr1l	equ	0xFE1
  7487                           indf2	equ	0xFDF
  7488                           postinc2	equ	0xFDE
  7489                           postdec2	equ	0xFDD
  7490                           plusw2	equ	0xFDB
  7491                           fsr2h	equ	0xFDA
  7492                           fsr2l	equ	0xFD9
  7493                           status	equ	0xFD8
  7494                           
  7495 ;; *************** function ___lwmod *****************
  7496 ;; Defined at:
  7497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  dividend        2    9[BANK0 ] unsigned int 
  7500 ;;  divisor         2   11[BANK0 ] unsigned int 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  counter         1   13[BANK0 ] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  2    9[BANK0 ] unsigned int 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;Total ram usage:        5 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    4
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_key_adj_value_fixed
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text34
  7527  008952                     __ptext34:
  7528                           	opt stack 0
  7529  008952                     ___lwmod:
  7530                           	opt stack 21
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;incstack = 0
  7534  008952  0100               	movlb	0	; () banked
  7535  008954  516B               	movf	___lwmod@divisor& (0+255),w,b
  7536  008956  0100               	movlb	0	; () banked
  7537  008958  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7538  00895A  B4D8               	btfsc	status,2,c
  7539  00895C  D026               	goto	l2831
  7540                           
  7541                           ; BSR set to: 0
  7542  00895E  0E01               	movlw	1
  7543  008960  0100               	movlb	0	; () banked
  7544  008962  6F6D               	movwf	___lwmod@counter& (0+255),b
  7545  008964  D006               	goto	l14310
  7546  008966                     l14308:
  7547                           
  7548                           ; BSR set to: 0
  7549  008966  0100               	movlb	0	; () banked
  7550  008968  90D8               	bcf	status,0,c
  7551  00896A  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  7552  00896C  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7553  00896E  0100               	movlb	0	; () banked
  7554  008970  2B6D               	incf	___lwmod@counter& (0+255),f,b
  7555  008972                     l14310:
  7556                           
  7557                           ; BSR set to: 0
  7558  008972  0100               	movlb	0	; () banked
  7559  008974  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7560  008976  D7F7               	goto	l14308
  7561  008978                     l14312:
  7562                           
  7563                           ; BSR set to: 0
  7564  008978  0100               	movlb	0	; () banked
  7565  00897A  516B               	movf	___lwmod@divisor& (0+255),w,b
  7566  00897C  0100               	movlb	0	; () banked
  7567  00897E  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  7568  008980  0100               	movlb	0	; () banked
  7569  008982  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7570  008984  0100               	movlb	0	; () banked
  7571  008986  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7572  008988  A0D8               	btfss	status,0,c
  7573  00898A  D008               	goto	l14316
  7574                           
  7575                           ; BSR set to: 0
  7576  00898C  0100               	movlb	0	; () banked
  7577  00898E  516B               	movf	___lwmod@divisor& (0+255),w,b
  7578  008990  0100               	movlb	0	; () banked
  7579  008992  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  7580  008994  0100               	movlb	0	; () banked
  7581  008996  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7582  008998  0100               	movlb	0	; () banked
  7583  00899A  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7584  00899C                     l14316:
  7585                           
  7586                           ; BSR set to: 0
  7587  00899C  0100               	movlb	0	; () banked
  7588  00899E  90D8               	bcf	status,0,c
  7589  0089A0  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7590  0089A2  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593  0089A4  0100               	movlb	0	; () banked
  7594  0089A6  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  7595  0089A8  D7E7               	goto	l14312
  7596  0089AA                     l2831:
  7597                           
  7598                           ; BSR set to: 0
  7599  0089AA  C069  F069         	movff	___lwmod@dividend,?___lwmod
  7600  0089AE  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  7601                           
  7602                           ; BSR set to: 0
  7603  0089B2  0012               	return		;funcret
  7604  0089B4                     __end_of___lwmod:
  7605                           	opt stack 0
  7606                           tblptru	equ	0xFF8
  7607                           tblptrh	equ	0xFF7
  7608                           tblptrl	equ	0xFF6
  7609                           tablat	equ	0xFF5
  7610                           prodh	equ	0xFF4
  7611                           prodl	equ	0xFF3
  7612                           intcon	equ	0xFF2
  7613                           postinc0	equ	0xFEE
  7614                           wreg	equ	0xFE8
  7615                           postdec1	equ	0xFE5
  7616                           plusw1	equ	0xFE3
  7617                           fsr1h	equ	0xFE2
  7618                           fsr1l	equ	0xFE1
  7619                           indf2	equ	0xFDF
  7620                           postinc2	equ	0xFDE
  7621                           postdec2	equ	0xFDD
  7622                           plusw2	equ	0xFDB
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function ___lwdiv *****************
  7628 ;; Defined at:
  7629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  dividend        2    2[BANK0 ] unsigned int 
  7632 ;;  divisor         2    4[BANK0 ] unsigned int 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  quotient        2    7[BANK0 ] unsigned int 
  7635 ;;  counter         1    6[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  2    2[BANK0 ] unsigned int 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;Total ram usage:        7 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    4
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_key_adj_value_fixed
  7656 ;;		_ui_disp_xfloat_pt
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text35
  7661  007F12                     __ptext35:
  7662                           	opt stack 0
  7663  007F12                     ___lwdiv:
  7664                           	opt stack 21
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;incstack = 0
  7668  007F12  0E00               	movlw	0
  7669  007F14  0100               	movlb	0	; () banked
  7670  007F16  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7671  007F18  0E00               	movlw	0
  7672  007F1A  6F67               	movwf	___lwdiv@quotient& (0+255),b
  7673                           
  7674                           ; BSR set to: 0
  7675  007F1C  0100               	movlb	0	; () banked
  7676  007F1E  5164               	movf	___lwdiv@divisor& (0+255),w,b
  7677  007F20  0100               	movlb	0	; () banked
  7678  007F22  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7679  007F24  B4D8               	btfsc	status,2,c
  7680  007F26  D02C               	goto	l2821
  7681                           
  7682                           ; BSR set to: 0
  7683  007F28  0E01               	movlw	1
  7684  007F2A  0100               	movlb	0	; () banked
  7685  007F2C  6F66               	movwf	___lwdiv@counter& (0+255),b
  7686  007F2E  D006               	goto	l14290
  7687  007F30                     l14288:
  7688                           
  7689                           ; BSR set to: 0
  7690  007F30  0100               	movlb	0	; () banked
  7691  007F32  90D8               	bcf	status,0,c
  7692  007F34  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
  7693  007F36  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7694  007F38  0100               	movlb	0	; () banked
  7695  007F3A  2B66               	incf	___lwdiv@counter& (0+255),f,b
  7696  007F3C                     l14290:
  7697                           
  7698                           ; BSR set to: 0
  7699  007F3C  0100               	movlb	0	; () banked
  7700  007F3E  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7701  007F40  D7F7               	goto	l14288
  7702  007F42                     l14292:
  7703                           
  7704                           ; BSR set to: 0
  7705  007F42  0100               	movlb	0	; () banked
  7706  007F44  90D8               	bcf	status,0,c
  7707  007F46  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
  7708  007F48  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7709                           
  7710                           ; BSR set to: 0
  7711  007F4A  0100               	movlb	0	; () banked
  7712  007F4C  5164               	movf	___lwdiv@divisor& (0+255),w,b
  7713  007F4E  0100               	movlb	0	; () banked
  7714  007F50  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
  7715  007F52  0100               	movlb	0	; () banked
  7716  007F54  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7717  007F56  0100               	movlb	0	; () banked
  7718  007F58  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7719  007F5A  A0D8               	btfss	status,0,c
  7720  007F5C  D00A               	goto	l14300
  7721                           
  7722                           ; BSR set to: 0
  7723  007F5E  0100               	movlb	0	; () banked
  7724  007F60  5164               	movf	___lwdiv@divisor& (0+255),w,b
  7725  007F62  0100               	movlb	0	; () banked
  7726  007F64  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
  7727  007F66  0100               	movlb	0	; () banked
  7728  007F68  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7729  007F6A  0100               	movlb	0	; () banked
  7730  007F6C  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7731                           
  7732                           ; BSR set to: 0
  7733  007F6E  0100               	movlb	0	; () banked
  7734  007F70  8167               	bsf	___lwdiv@quotient& (0+255),0,b
  7735  007F72                     l14300:
  7736                           
  7737                           ; BSR set to: 0
  7738  007F72  0100               	movlb	0	; () banked
  7739  007F74  90D8               	bcf	status,0,c
  7740  007F76  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7741  007F78  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
  7742                           
  7743                           ; BSR set to: 0
  7744  007F7A  0100               	movlb	0	; () banked
  7745  007F7C  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  7746  007F7E  D7E1               	goto	l14292
  7747  007F80                     l2821:
  7748                           
  7749                           ; BSR set to: 0
  7750  007F80  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
  7751  007F84  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7752                           
  7753                           ; BSR set to: 0
  7754  007F88  0012               	return		;funcret
  7755  007F8A                     __end_of___lwdiv:
  7756                           	opt stack 0
  7757                           tblptru	equ	0xFF8
  7758                           tblptrh	equ	0xFF7
  7759                           tblptrl	equ	0xFF6
  7760                           tablat	equ	0xFF5
  7761                           prodh	equ	0xFF4
  7762                           prodl	equ	0xFF3
  7763                           intcon	equ	0xFF2
  7764                           postinc0	equ	0xFEE
  7765                           wreg	equ	0xFE8
  7766                           postdec1	equ	0xFE5
  7767                           plusw1	equ	0xFE3
  7768                           fsr1h	equ	0xFE2
  7769                           fsr1l	equ	0xFE1
  7770                           indf2	equ	0xFDF
  7771                           postinc2	equ	0xFDE
  7772                           postdec2	equ	0xFDD
  7773                           plusw2	equ	0xFDB
  7774                           fsr2h	equ	0xFDA
  7775                           fsr2l	equ	0xFD9
  7776                           status	equ	0xFD8
  7777                           
  7778 ;; *************** function ___exp_10 *****************
  7779 ;; Defined at:
  7780 ;;		line 22 in file "src/api/key_menu.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  n               1    wreg     unsigned char 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  n               1   31[COMRAM] unsigned char 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  2    0[BANK0 ] unsigned int 
  7787 ;; Registers used:
  7788 ;;		wreg, status,2, status,0
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;Total ram usage:        3 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    4
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_key_adj_value_fixed
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text36
  7809  008BEE                     __ptext36:
  7810                           	opt stack 0
  7811  008BEE                     ___exp_10:
  7812                           	opt stack 21
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;incstack = 0
  7816                           ;___exp_10@n stored from wreg
  7817  008BEE  6E20               	movwf	___exp_10@n,c
  7818                           
  7819                           ;key_menu.c: 24: switch(n){
  7820  008BF0  D01E               	goto	l13992
  7821  008BF2                     l13970:
  7822  008BF2  0E00               	movlw	0
  7823  008BF4  0100               	movlb	0	; () banked
  7824  008BF6  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7825  008BF8  0E01               	movlw	1
  7826  008BFA  6F60               	movwf	?___exp_10& (0+255),b
  7827                           
  7828                           ; BSR set to: 0
  7829  008BFC  0012               	return	
  7830  008BFE                     l13974:
  7831  008BFE  0E00               	movlw	0
  7832  008C00  0100               	movlb	0	; () banked
  7833  008C02  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7834  008C04  0E0A               	movlw	10
  7835  008C06  6F60               	movwf	?___exp_10& (0+255),b
  7836                           
  7837                           ; BSR set to: 0
  7838  008C08  0012               	return	
  7839  008C0A                     l13978:
  7840  008C0A  0E00               	movlw	0
  7841  008C0C  0100               	movlb	0	; () banked
  7842  008C0E  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7843  008C10  0E64               	movlw	100
  7844  008C12  6F60               	movwf	?___exp_10& (0+255),b
  7845                           
  7846                           ; BSR set to: 0
  7847  008C14  0012               	return	
  7848  008C16                     l13982:
  7849  008C16  0E03               	movlw	3
  7850  008C18  0100               	movlb	0	; () banked
  7851  008C1A  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7852  008C1C  0EE8               	movlw	232
  7853  008C1E  6F60               	movwf	?___exp_10& (0+255),b
  7854                           
  7855                           ; BSR set to: 0
  7856  008C20  0012               	return	
  7857  008C22                     l13986:
  7858  008C22  0E03               	movlw	3
  7859  008C24  0100               	movlb	0	; () banked
  7860  008C26  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7861  008C28  0EE8               	movlw	232
  7862  008C2A  6F60               	movwf	?___exp_10& (0+255),b
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;key_menu.c: 30: }
  7866                           
  7867                           ; BSR set to: 0
  7868  008C2C  0012               	return	
  7869  008C2E                     l13992:
  7870  008C2E  5020               	movf	___exp_10@n,w,c
  7871                           
  7872                           ; Switch size 1, requested type "space"
  7873                           ; Number of cases is 4, Range of values is 0 to 3
  7874                           ; switch strategies available:
  7875                           ; Name         Instructions Cycles
  7876                           ; simple_byte           13     7 (average)
  7877                           ;	Chosen strategy is simple_byte
  7878  008C30  0A00               	xorlw	0	; case 0
  7879  008C32  B4D8               	btfsc	status,2,c
  7880  008C34  D7DE               	goto	l13970
  7881  008C36  0A01               	xorlw	1	; case 1
  7882  008C38  B4D8               	btfsc	status,2,c
  7883  008C3A  D7E1               	goto	l13974
  7884  008C3C  0A03               	xorlw	3	; case 2
  7885  008C3E  B4D8               	btfsc	status,2,c
  7886  008C40  D7E4               	goto	l13978
  7887  008C42  0A01               	xorlw	1	; case 3
  7888  008C44  B4D8               	btfsc	status,2,c
  7889  008C46  D7E7               	goto	l13982
  7890  008C48  D7EC               	goto	l13986
  7891  008C4A                     __end_of___exp_10:
  7892                           	opt stack 0
  7893                           tblptru	equ	0xFF8
  7894                           tblptrh	equ	0xFF7
  7895                           tblptrl	equ	0xFF6
  7896                           tablat	equ	0xFF5
  7897                           prodh	equ	0xFF4
  7898                           prodl	equ	0xFF3
  7899                           intcon	equ	0xFF2
  7900                           postinc0	equ	0xFEE
  7901                           wreg	equ	0xFE8
  7902                           postdec1	equ	0xFE5
  7903                           plusw1	equ	0xFE3
  7904                           fsr1h	equ	0xFE2
  7905                           fsr1l	equ	0xFE1
  7906                           indf2	equ	0xFDF
  7907                           postinc2	equ	0xFDE
  7908                           postdec2	equ	0xFDD
  7909                           plusw2	equ	0xFDB
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function _key_process_set_long *****************
  7915 ;; Defined at:
  7916 ;;		line 931 in file "src/api/key_menu.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;		None
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;Total ram usage:        0 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:   10
  7937 ;; This function calls:
  7938 ;;		___exit_menu_to_home_unsave
  7939 ;;		___set_long_bar_level_scale
  7940 ;;		___set_long_base_zero
  7941 ;;		___set_long_density
  7942 ;;		___set_long_work_mode
  7943 ;;		___set_short_diff_calib
  7944 ;;		___set_short_epr_ilp_scale
  7945 ;;		___set_short_epr_param
  7946 ;;		___set_short_poly_coefic
  7947 ;;		___set_short_pose_size
  7948 ;;		___set_short_pr_calib
  7949 ;;		___set_short_warn_type
  7950 ;;		___set_short_warn_value
  7951 ;; This function is called by:
  7952 ;;		_key_process
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text37
  7957  006CF8                     __ptext37:
  7958                           	opt stack 0
  7959  006CF8                     _key_process_set_long:
  7960                           	opt stack 19
  7961                           
  7962                           ;key_menu.c: 933: switch(menu){
  7963                           
  7964                           ;incstack = 0
  7965  006CF8  D02F               	goto	l16834
  7966  006CFA                     l16806:
  7967                           
  7968                           ;key_menu.c: 935: case 0x10: __exit_menu_to_home_unsave(); break;
  7969  006CFA  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  7970  006CFE  0012               	return	
  7971  006D00                     l16808:
  7972  006D00  EC58  F047         	call	___set_long_density	;wreg free
  7973  006D04  0012               	return	
  7974  006D06                     l16810:
  7975  006D06  0E01               	movlw	1
  7976  006D08  ECDA  F02A         	call	___set_short_pose_size
  7977  006D0C  0012               	return	
  7978  006D0E                     l16812:
  7979  006D0E  ECAC  F046         	call	___set_long_base_zero	;wreg free
  7980  006D12  0012               	return	
  7981  006D14                     l16814:
  7982  006D14  0E01               	movlw	1
  7983  006D16  EC20  F011         	call	___set_short_diff_calib
  7984  006D1A  0012               	return	
  7985  006D1C                     l16816:
  7986  006D1C  0E01               	movlw	1
  7987  006D1E  ECD5  F012         	call	___set_short_pr_calib
  7988  006D22  0012               	return	
  7989  006D24                     l16818:
  7990  006D24  0E01               	movlw	1
  7991  006D26  EC95  F041         	call	___set_short_poly_coefic
  7992  006D2A  0012               	return	
  7993  006D2C                     l16820:
  7994  006D2C  0E01               	movlw	1
  7995  006D2E  ECD5  F03D         	call	___set_short_warn_type
  7996  006D32  0012               	return	
  7997  006D34                     l16822:
  7998  006D34  0E01               	movlw	1
  7999  006D36  EC54  F032         	call	___set_short_warn_value
  8000  006D3A  0012               	return	
  8001  006D3C                     l16824:
  8002  006D3C  0E01               	movlw	1
  8003  006D3E  EC51  F026         	call	___set_short_epr_param
  8004  006D42  0012               	return	
  8005  006D44                     l16826:
  8006  006D44  0E01               	movlw	1
  8007  006D46  ECD8  F036         	call	___set_short_epr_ilp_scale
  8008  006D4A  0012               	return	
  8009  006D4C                     l16828:
  8010  006D4C  ECED  F048         	call	___set_long_bar_level_scale	;wreg free
  8011  006D50  0012               	return	
  8012  006D52                     l16830:
  8013  006D52  EC0E  F04D         	call	___set_long_work_mode	;wreg free
  8014                           
  8015                           ;key_menu.c: 950: }
  8016                           
  8017                           ;key_menu.c: 949: default:break;
  8018  006D56  0012               	return	
  8019  006D58                     l16834:
  8020  006D58  5033               	movf	_menu,w,c	;volatile
  8021                           
  8022                           ; Switch size 1, requested type "space"
  8023                           ; Number of cases is 14, Range of values is 0 to 240
  8024                           ; switch strategies available:
  8025                           ; Name         Instructions Cycles
  8026                           ; simple_byte           43    22 (average)
  8027                           ;	Chosen strategy is simple_byte
  8028  006D5A  0A00               	xorlw	0	; case 0
  8029  006D5C  B4D8               	btfsc	status,2,c
  8030  006D5E  D7CD               	goto	l16806
  8031  006D60  0A10               	xorlw	16	; case 16
  8032  006D62  B4D8               	btfsc	status,2,c
  8033  006D64  D7CA               	goto	l16806
  8034  006D66  0A30               	xorlw	48	; case 32
  8035  006D68  B4D8               	btfsc	status,2,c
  8036  006D6A  D7CA               	goto	l16808
  8037  006D6C  0A10               	xorlw	16	; case 48
  8038  006D6E  B4D8               	btfsc	status,2,c
  8039  006D70  D7CA               	goto	l16810
  8040  006D72  0A70               	xorlw	112	; case 64
  8041  006D74  B4D8               	btfsc	status,2,c
  8042  006D76  D7CB               	goto	l16812
  8043  006D78  0A10               	xorlw	16	; case 80
  8044  006D7A  B4D8               	btfsc	status,2,c
  8045  006D7C  D7CB               	goto	l16814
  8046  006D7E  0A30               	xorlw	48	; case 96
  8047  006D80  B4D8               	btfsc	status,2,c
  8048  006D82  D7CC               	goto	l16816
  8049  006D84  0A10               	xorlw	16	; case 112
  8050  006D86  B4D8               	btfsc	status,2,c
  8051  006D88  D7CD               	goto	l16818
  8052  006D8A  0AF0               	xorlw	240	; case 128
  8053  006D8C  B4D8               	btfsc	status,2,c
  8054  006D8E  D7CE               	goto	l16820
  8055  006D90  0A10               	xorlw	16	; case 144
  8056  006D92  B4D8               	btfsc	status,2,c
  8057  006D94  D7CF               	goto	l16822
  8058  006D96  0A30               	xorlw	48	; case 160
  8059  006D98  B4D8               	btfsc	status,2,c
  8060  006D9A  D7D0               	goto	l16824
  8061  006D9C  0A10               	xorlw	16	; case 176
  8062  006D9E  B4D8               	btfsc	status,2,c
  8063  006DA0  D7D1               	goto	l16826
  8064  006DA2  0A70               	xorlw	112	; case 192
  8065  006DA4  B4D8               	btfsc	status,2,c
  8066  006DA6  D7D2               	goto	l16828
  8067  006DA8  0A30               	xorlw	48	; case 240
  8068  006DAA  A4D8               	btfss	status,2,c
  8069  006DAC  0012               	return	
  8070  006DAE  D7D1               	goto	l16830
  8071  006DB0                     __end_of_key_process_set_long:
  8072                           	opt stack 0
  8073                           tblptru	equ	0xFF8
  8074                           tblptrh	equ	0xFF7
  8075                           tblptrl	equ	0xFF6
  8076                           tablat	equ	0xFF5
  8077                           prodh	equ	0xFF4
  8078                           prodl	equ	0xFF3
  8079                           intcon	equ	0xFF2
  8080                           postinc0	equ	0xFEE
  8081                           wreg	equ	0xFE8
  8082                           postdec1	equ	0xFE5
  8083                           plusw1	equ	0xFE3
  8084                           fsr1h	equ	0xFE2
  8085                           fsr1l	equ	0xFE1
  8086                           indf2	equ	0xFDF
  8087                           postinc2	equ	0xFDE
  8088                           postdec2	equ	0xFDD
  8089                           plusw2	equ	0xFDB
  8090                           fsr2h	equ	0xFDA
  8091                           fsr2l	equ	0xFD9
  8092                           status	equ	0xFD8
  8093                           
  8094 ;; *************** function ___set_long_work_mode *****************
  8095 ;; Defined at:
  8096 ;;		line 919 in file "src/api/key_menu.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  t32             4    0        long 
  8101 ;;  p               2    0[BANK0 ] PTR unsigned char 
  8102 ;;		 -> adjValue(4), 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;Total ram usage:        2 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; Hardware stack levels required when called:    5
  8119 ;; This function calls:
  8120 ;;		___exit_menu_to_home_unsave
  8121 ;; This function is called by:
  8122 ;;		_key_process_set_long
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text38
  8127  009A1C                     __ptext38:
  8128                           	opt stack 0
  8129  009A1C                     ___set_long_work_mode:
  8130                           	opt stack 23
  8131                           
  8132                           ;key_menu.c: 921: uint8_t* p;
  8133                           ;key_menu.c: 922: int32_t t32;
  8134                           ;key_menu.c: 925: p=(uint8_t*)(&adjValue);
  8135                           
  8136                           ;incstack = 0
  8137  009A1C  0E39               	movlw	low _adjValue
  8138  009A1E  0100               	movlb	0	; () banked
  8139  009A20  6F60               	movwf	___set_long_work_mode@p& (0+255),b
  8140  009A22  0E00               	movlw	high _adjValue
  8141  009A24  0100               	movlb	0	; () banked
  8142  009A26  6F61               	movwf	(___set_long_work_mode@p+1)& (0+255),b
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;key_menu.c: 927: dwm=*p;
  8146  009A28  C060  FFD9         	movff	___set_long_work_mode@p,fsr2l
  8147  009A2C  C061  FFDA         	movff	___set_long_work_mode@p+1,fsr2h
  8148  009A30  50DF               	movf	indf2,w,c
  8149  009A32  0100               	movlb	0	; () banked
  8150  009A34  6FFD               	movwf	_dwm& (0+255),b	;volatile
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;key_menu.c: 928: __exit_menu_to_home_unsave();
  8154  009A36  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  8155  009A3A  0012               	return		;funcret
  8156  009A3C                     __end_of___set_long_work_mode:
  8157                           	opt stack 0
  8158                           tblptru	equ	0xFF8
  8159                           tblptrh	equ	0xFF7
  8160                           tblptrl	equ	0xFF6
  8161                           tablat	equ	0xFF5
  8162                           prodh	equ	0xFF4
  8163                           prodl	equ	0xFF3
  8164                           intcon	equ	0xFF2
  8165                           postinc0	equ	0xFEE
  8166                           wreg	equ	0xFE8
  8167                           postdec1	equ	0xFE5
  8168                           plusw1	equ	0xFE3
  8169                           fsr1h	equ	0xFE2
  8170                           fsr1l	equ	0xFE1
  8171                           indf2	equ	0xFDF
  8172                           postinc2	equ	0xFDE
  8173                           postdec2	equ	0xFDD
  8174                           plusw2	equ	0xFDB
  8175                           fsr2h	equ	0xFDA
  8176                           fsr2l	equ	0xFD9
  8177                           status	equ	0xFD8
  8178                           
  8179 ;; *************** function ___set_long_density *****************
  8180 ;; Defined at:
  8181 ;;		line 875 in file "src/api/key_menu.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  t32             4    0[BANK3 ] long 
  8186 ;;  p               3    0        PTR unsigned char 
  8187 ;;  stp             2    4[BANK3 ] PTR struct .
  8188 ;;		 -> stSysData(240), 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;Total ram usage:        6 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    8
  8205 ;; This function calls:
  8206 ;;		___exit_menu_to_home_unsave
  8207 ;;		___mflot32_2_int32
  8208 ;;		___sys_data_save_write_flash
  8209 ;; This function is called by:
  8210 ;;		_key_process_set_long
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text39
  8215  008EB0                     __ptext39:
  8216                           	opt stack 0
  8217  008EB0                     ___set_long_density:
  8218                           	opt stack 20
  8219                           
  8220                           ;key_menu.c: 877: uint8_t* p;
  8221                           ;key_menu.c: 878: int32_t t32;
  8222                           ;key_menu.c: 881: st_sysDataDef* stp=&stSysData;
  8223                           
  8224                           ;incstack = 0
  8225  008EB0  0E00               	movlw	low _stSysData
  8226  008EB2  0103               	movlb	3	; () banked
  8227  008EB4  6FCE               	movwf	___set_long_density@stp& (0+255),b
  8228  008EB6  0E02               	movlw	high _stSysData
  8229  008EB8  0103               	movlb	3	; () banked
  8230  008EBA  6FCF               	movwf	(___set_long_density@stp+1)& (0+255),b
  8231                           
  8232                           ; BSR set to: 3
  8233                           ;key_menu.c: 882: t32=__mflot32_2_int32(m_floatAdj.t32);
  8234  008EBC  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  8235  008EC0  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  8236  008EC4  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  8237  008EC8  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  8238  008ECC  EC8A  F038         	call	___mflot32_2_int32	;wreg free
  8239  008ED0  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_density@t32
  8240  008ED4  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_density@t32+1
  8241  008ED8  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_density@t32+2
  8242  008EDC  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_density@t32+3
  8243                           
  8244                           ;key_menu.c: 883: stp->density=t32;
  8245  008EE0  0103               	movlb	3	; () banked
  8246  008EE2  EE20 F006          	lfsr	2,6
  8247  008EE6  51CE               	movf	___set_long_density@stp& (0+255),w,b
  8248  008EE8  26D9               	addwf	fsr2l,f,c
  8249  008EEA  51CF               	movf	(___set_long_density@stp+1)& (0+255),w,b
  8250  008EEC  22DA               	addwfc	fsr2h,f,c
  8251  008EEE  C3CA  FFDE         	movff	___set_long_density@t32,postinc2
  8252  008EF2  C3CB  FFDD         	movff	___set_long_density@t32+1,postdec2
  8253                           
  8254                           ; BSR set to: 3
  8255                           ;key_menu.c: 885: __sys_data_save_write_flash();
  8256  008EF6  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
  8257                           
  8258                           ;key_menu.c: 887: __exit_menu_to_home_unsave();
  8259  008EFA  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  8260  008EFE  0012               	return		;funcret
  8261  008F00                     __end_of___set_long_density:
  8262                           	opt stack 0
  8263                           tblptru	equ	0xFF8
  8264                           tblptrh	equ	0xFF7
  8265                           tblptrl	equ	0xFF6
  8266                           tablat	equ	0xFF5
  8267                           prodh	equ	0xFF4
  8268                           prodl	equ	0xFF3
  8269                           intcon	equ	0xFF2
  8270                           postinc0	equ	0xFEE
  8271                           wreg	equ	0xFE8
  8272                           postdec1	equ	0xFE5
  8273                           plusw1	equ	0xFE3
  8274                           fsr1h	equ	0xFE2
  8275                           fsr1l	equ	0xFE1
  8276                           indf2	equ	0xFDF
  8277                           postinc2	equ	0xFDE
  8278                           postdec2	equ	0xFDD
  8279                           plusw2	equ	0xFDB
  8280                           fsr2h	equ	0xFDA
  8281                           fsr2l	equ	0xFD9
  8282                           status	equ	0xFD8
  8283                           
  8284 ;; *************** function ___set_long_base_zero *****************
  8285 ;; Defined at:
  8286 ;;		line 890 in file "src/api/key_menu.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  t32             4    0[BANK3 ] long 
  8291 ;;  p               3    0        PTR unsigned char 
  8292 ;;  stp             2    4[BANK3 ] PTR struct .
  8293 ;;		 -> stSysData(240), 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;Total ram usage:        6 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    8
  8310 ;; This function calls:
  8311 ;;		___exit_menu_to_home_unsave
  8312 ;;		___mflot32_2_int32
  8313 ;;		___sys_data_save_write_flash
  8314 ;; This function is called by:
  8315 ;;		_key_process_set_long
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text40
  8320  008D58                     __ptext40:
  8321                           	opt stack 0
  8322  008D58                     ___set_long_base_zero:
  8323                           	opt stack 20
  8324                           
  8325                           ;key_menu.c: 892: uint8_t* p;
  8326                           ;key_menu.c: 893: int32_t t32;
  8327                           ;key_menu.c: 896: st_sysDataDef* stp=&stSysData;
  8328                           
  8329                           ;incstack = 0
  8330  008D58  0E00               	movlw	low _stSysData
  8331  008D5A  0103               	movlb	3	; () banked
  8332  008D5C  6FCE               	movwf	___set_long_base_zero@stp& (0+255),b
  8333  008D5E  0E02               	movlw	high _stSysData
  8334  008D60  0103               	movlb	3	; () banked
  8335  008D62  6FCF               	movwf	(___set_long_base_zero@stp+1)& (0+255),b
  8336                           
  8337                           ; BSR set to: 3
  8338                           ;key_menu.c: 897: t32=__mflot32_2_int32(m_floatAdj.t32);
  8339  008D64  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  8340  008D68  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  8341  008D6C  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  8342  008D70  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  8343  008D74  EC8A  F038         	call	___mflot32_2_int32	;wreg free
  8344  008D78  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_base_zero@t32
  8345  008D7C  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_base_zero@t32+1
  8346  008D80  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_base_zero@t32+2
  8347  008D84  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_base_zero@t32+3
  8348                           
  8349                           ;key_menu.c: 898: stp->baseZero=t32;
  8350  008D88  0103               	movlb	3	; () banked
  8351  008D8A  EE20 F018          	lfsr	2,24
  8352  008D8E  51CE               	movf	___set_long_base_zero@stp& (0+255),w,b
  8353  008D90  26D9               	addwf	fsr2l,f,c
  8354  008D92  51CF               	movf	(___set_long_base_zero@stp+1)& (0+255),w,b
  8355  008D94  22DA               	addwfc	fsr2h,f,c
  8356  008D96  C3CA  FFDE         	movff	___set_long_base_zero@t32,postinc2
  8357  008D9A  C3CB  FFDE         	movff	___set_long_base_zero@t32+1,postinc2
  8358  008D9E  C3CC  FFDE         	movff	___set_long_base_zero@t32+2,postinc2
  8359  008DA2  C3CD  FFDE         	movff	___set_long_base_zero@t32+3,postinc2
  8360                           
  8361                           ; BSR set to: 3
  8362                           ;key_menu.c: 900: __sys_data_save_write_flash();
  8363  008DA6  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
  8364                           
  8365                           ;key_menu.c: 902: __exit_menu_to_home_unsave();
  8366  008DAA  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  8367  008DAE  0012               	return		;funcret
  8368  008DB0                     __end_of___set_long_base_zero:
  8369                           	opt stack 0
  8370                           tblptru	equ	0xFF8
  8371                           tblptrh	equ	0xFF7
  8372                           tblptrl	equ	0xFF6
  8373                           tablat	equ	0xFF5
  8374                           prodh	equ	0xFF4
  8375                           prodl	equ	0xFF3
  8376                           intcon	equ	0xFF2
  8377                           postinc0	equ	0xFEE
  8378                           wreg	equ	0xFE8
  8379                           postdec1	equ	0xFE5
  8380                           plusw1	equ	0xFE3
  8381                           fsr1h	equ	0xFE2
  8382                           fsr1l	equ	0xFE1
  8383                           indf2	equ	0xFDF
  8384                           postinc2	equ	0xFDE
  8385                           postdec2	equ	0xFDD
  8386                           plusw2	equ	0xFDB
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function ___set_long_bar_level_scale *****************
  8392 ;; Defined at:
  8393 ;;		line 904 in file "src/api/key_menu.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  t32             4    0        long 
  8398 ;;  stp             2  133[BANK0 ] PTR struct .
  8399 ;;		 -> stSysData(240), 
  8400 ;;  p               2  131[BANK0 ] PTR int 
  8401 ;;		 -> adjValue(4), 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;Total ram usage:        4 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    8
  8418 ;; This function calls:
  8419 ;;		___exit_menu_to_home_unsave
  8420 ;;		___sys_data_save_write_flash
  8421 ;; This function is called by:
  8422 ;;		_key_process_set_long
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text41
  8427  0091DA                     __ptext41:
  8428                           	opt stack 0
  8429  0091DA                     ___set_long_bar_level_scale:
  8430                           	opt stack 20
  8431                           
  8432                           ;key_menu.c: 906: int16_t* p;
  8433                           ;key_menu.c: 907: int32_t t32;
  8434                           ;key_menu.c: 910: st_sysDataDef* stp=&stSysData;
  8435                           
  8436                           ;incstack = 0
  8437  0091DA  0E00               	movlw	low _stSysData
  8438  0091DC  0100               	movlb	0	; () banked
  8439  0091DE  6FE5               	movwf	___set_long_bar_level_scale@stp& (0+255),b
  8440  0091E0  0E02               	movlw	high _stSysData
  8441  0091E2  0100               	movlb	0	; () banked
  8442  0091E4  6FE6               	movwf	(___set_long_bar_level_scale@stp+1)& (0+255),b
  8443                           
  8444                           ;key_menu.c: 911: p=(uint16_t*)(&adjValue);
  8445  0091E6  0E39               	movlw	low _adjValue
  8446  0091E8  0100               	movlb	0	; () banked
  8447  0091EA  6FE3               	movwf	___set_long_bar_level_scale@p& (0+255),b
  8448  0091EC  0E00               	movlw	high _adjValue
  8449  0091EE  0100               	movlb	0	; () banked
  8450  0091F0  6FE4               	movwf	(___set_long_bar_level_scale@p+1)& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;key_menu.c: 912: stp->barScale=*p;
  8454  0091F2  C0E3  FFD9         	movff	___set_long_bar_level_scale@p,fsr2l
  8455  0091F6  C0E4  FFDA         	movff	___set_long_bar_level_scale@p+1,fsr2h
  8456  0091FA  0100               	movlb	0	; () banked
  8457  0091FC  EE10 F0EC          	lfsr	1,236
  8458  009200  51E5               	movf	___set_long_bar_level_scale@stp& (0+255),w,b
  8459  009202  26E1               	addwf	fsr1l,f,c
  8460  009204  51E6               	movf	(___set_long_bar_level_scale@stp+1)& (0+255),w,b
  8461  009206  22E2               	addwfc	fsr1h,f,c
  8462  009208  CFDE FFE6          	movff	postinc2,postinc1
  8463  00920C  CFDD FFE5          	movff	postdec2,postdec1
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;key_menu.c: 914: __sys_data_save_write_flash();
  8467  009210  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
  8468                           
  8469                           ;key_menu.c: 916: __exit_menu_to_home_unsave();
  8470  009214  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  8471  009218  0012               	return		;funcret
  8472  00921A                     __end_of___set_long_bar_level_scale:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           postinc1	equ	0xFE6
  8484                           postdec1	equ	0xFE5
  8485                           plusw1	equ	0xFE3
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           indf2	equ	0xFDF
  8489                           postinc2	equ	0xFDE
  8490                           postdec2	equ	0xFDD
  8491                           plusw2	equ	0xFDB
  8492                           fsr2h	equ	0xFDA
  8493                           fsr2l	equ	0xFD9
  8494                           status	equ	0xFD8
  8495                           
  8496 ;; *************** function _key_process_set_down_long *****************
  8497 ;; Defined at:
  8498 ;;		line 598 in file "src/api/key_menu.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;Total ram usage:        2 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    7
  8519 ;; This function calls:
  8520 ;;		___enter_menu_bar_scale
  8521 ;;		___enter_menu_calib_press
  8522 ;;		___enter_menu_calib_press_diff
  8523 ;;		___enter_menu_epr_calib
  8524 ;;		___enter_menu_epr_ilp_scale
  8525 ;;		___enter_menu_poly_coeffic
  8526 ;;		___enter_menu_set_base_zero
  8527 ;;		___enter_menu_set_density
  8528 ;;		___enter_menu_set_pose_size
  8529 ;;		___enter_menu_warn_type
  8530 ;;		___enter_menu_warn_value
  8531 ;;		___enter_menu_work_mode
  8532 ;; This function is called by:
  8533 ;;		_key_process
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text42
  8538  0063E0                     __ptext42:
  8539                           	opt stack 0
  8540  0063E0                     _key_process_set_down_long:
  8541                           	opt stack 22
  8542                           
  8543                           ;key_menu.c: 600: if(menu==0x10){
  8544                           
  8545                           ;incstack = 0
  8546  0063E0  0E10               	movlw	16
  8547  0063E2  1833               	xorwf	_menu,w,c	;volatile
  8548  0063E4  A4D8               	btfss	status,2,c
  8549  0063E6  0012               	return	
  8550  0063E8  D02F               	goto	l16798
  8551  0063EA                     l16772:
  8552  0063EA  ECEA  F040         	call	___enter_menu_set_density	;wreg free
  8553  0063EE  0012               	return	
  8554  0063F0                     l16774:
  8555  0063F0  EC88  F049         	call	___enter_menu_set_pose_size	;wreg free
  8556  0063F4  0012               	return	
  8557  0063F6                     l16776:
  8558  0063F6  ECC5  F03F         	call	___enter_menu_set_base_zero	;wreg free
  8559  0063FA  0012               	return	
  8560  0063FC                     l16778:
  8561  0063FC  0E00               	movlw	0
  8562  0063FE  6E20               	movwf	___enter_menu_calib_press_diff@col,c
  8563  006400  0E00               	movlw	0
  8564  006402  EC69  F02D         	call	___enter_menu_calib_press_diff
  8565  006406  0012               	return	
  8566  006408                     l16780:
  8567  006408  0E00               	movlw	0
  8568  00640A  6E20               	movwf	___enter_menu_calib_press@col,c
  8569  00640C  0E00               	movlw	0
  8570  00640E  EC65  F02C         	call	___enter_menu_calib_press
  8571  006412  0012               	return	
  8572  006414                     l16782:
  8573  006414  0E00               	movlw	0
  8574  006416  EC80  F047         	call	___enter_menu_poly_coeffic
  8575  00641A  0012               	return	
  8576  00641C                     l16784:
  8577  00641C  0E00               	movlw	0
  8578  00641E  ECDA  F044         	call	___enter_menu_warn_type
  8579  006422  0012               	return	
  8580  006424                     l16786:
  8581  006424  0E00               	movlw	0
  8582  006426  ECA7  F034         	call	___enter_menu_warn_value
  8583  00642A  0012               	return	
  8584  00642C                     l16788:
  8585  00642C  0E00               	movlw	0
  8586  00642E  EC36  F038         	call	___enter_menu_epr_calib
  8587  006432  0012               	return	
  8588  006434                     l16790:
  8589  006434  0E00               	movlw	0
  8590  006436  ECC3  F035         	call	___enter_menu_epr_ilp_scale
  8591  00643A  0012               	return	
  8592  00643C                     l16792:
  8593  00643C  EC6A  F049         	call	___enter_menu_bar_scale	;wreg free
  8594  006440  0012               	return	
  8595  006442                     l16794:
  8596  006442  EC13  F04E         	call	___enter_menu_work_mode	;wreg free
  8597                           
  8598                           ;key_menu.c: 615: }
  8599                           
  8600                           ;key_menu.c: 614: default:break;
  8601  006446  0012               	return	
  8602  006448                     l16798:
  8603  006448  C03D  F08A         	movff	_passWord,??_key_process_set_down_long	;volatile
  8604  00644C  C03E  F08B         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  8605                           
  8606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8607                           ; Switch size 1, requested type "space"
  8608                           ; Number of cases is 1, Range of values is 0 to 0
  8609                           ; switch strategies available:
  8610                           ; Name         Instructions Cycles
  8611                           ; simple_byte            4     3 (average)
  8612                           ;	Chosen strategy is simple_byte
  8613  006450  0100               	movlb	0	; () banked
  8614  006452  518B               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  8615  006454  0A00               	xorlw	0	; case 0
  8616  006456  A4D8               	btfss	status,2,c
  8617  006458  0012               	return	
  8618                           
  8619                           ; BSR set to: 0
  8620                           ; Switch size 1, requested type "space"
  8621                           ; Number of cases is 12, Range of values is 6 to 188
  8622                           ; switch strategies available:
  8623                           ; Name         Instructions Cycles
  8624                           ; simple_byte           37    19 (average)
  8625                           ;	Chosen strategy is simple_byte
  8626  00645A  0100               	movlb	0	; () banked
  8627  00645C  518A               	movf	??_key_process_set_down_long& (0+255),w,b
  8628  00645E  0A06               	xorlw	6	; case 6
  8629  006460  B4D8               	btfsc	status,2,c
  8630  006462  D7DC               	goto	l16784
  8631  006464  0A16               	xorlw	22	; case 16
  8632  006466  B4D8               	btfsc	status,2,c
  8633  006468  D7DD               	goto	l16786
  8634  00646A  0A02               	xorlw	2	; case 18
  8635  00646C  B4D8               	btfsc	status,2,c
  8636  00646E  D7E9               	goto	l16794
  8637  006470  0A36               	xorlw	54	; case 36
  8638  006472  B4D8               	btfsc	status,2,c
  8639  006474  D7BA               	goto	l16772
  8640  006476  0A1C               	xorlw	28	; case 56
  8641  006478  B4D8               	btfsc	status,2,c
  8642  00647A  D7BD               	goto	l16776
  8643  00647C  0A7A               	xorlw	122	; case 66
  8644  00647E  B4D8               	btfsc	status,2,c
  8645  006480  D7B7               	goto	l16774
  8646  006482  0AC7               	xorlw	199	; case 133
  8647  006484  B4D8               	btfsc	status,2,c
  8648  006486  D7C6               	goto	l16782
  8649  006488  0A0F               	xorlw	15	; case 138
  8650  00648A  B4D8               	btfsc	status,2,c
  8651  00648C  D7CF               	goto	l16788
  8652  00648E  0A01               	xorlw	1	; case 139
  8653  006490  B4D8               	btfsc	status,2,c
  8654  006492  D7D0               	goto	l16790
  8655  006494  0A23               	xorlw	35	; case 168
  8656  006496  B4D8               	btfsc	status,2,c
  8657  006498  D7B1               	goto	l16778
  8658  00649A  0A01               	xorlw	1	; case 169
  8659  00649C  B4D8               	btfsc	status,2,c
  8660  00649E  D7B4               	goto	l16780
  8661  0064A0  0A15               	xorlw	21	; case 188
  8662  0064A2  A4D8               	btfss	status,2,c
  8663                           
  8664                           ; BSR set to: 0
  8665  0064A4  0012               	return	
  8666  0064A6  D7CA               	goto	l16792
  8667  0064A8                     __end_of_key_process_set_down_long:
  8668                           	opt stack 0
  8669                           tblptru	equ	0xFF8
  8670                           tblptrh	equ	0xFF7
  8671                           tblptrl	equ	0xFF6
  8672                           tablat	equ	0xFF5
  8673                           prodh	equ	0xFF4
  8674                           prodl	equ	0xFF3
  8675                           intcon	equ	0xFF2
  8676                           postinc0	equ	0xFEE
  8677                           wreg	equ	0xFE8
  8678                           postinc1	equ	0xFE6
  8679                           postdec1	equ	0xFE5
  8680                           plusw1	equ	0xFE3
  8681                           fsr1h	equ	0xFE2
  8682                           fsr1l	equ	0xFE1
  8683                           indf2	equ	0xFDF
  8684                           postinc2	equ	0xFDE
  8685                           postdec2	equ	0xFDD
  8686                           plusw2	equ	0xFDB
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function ___enter_menu_work_mode *****************
  8692 ;; Defined at:
  8693 ;;		line 342 in file "src/api/key_menu.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;Total ram usage:        0 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    4
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_key_process_set_down_long
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text43
  8722  009C26                     __ptext43:
  8723                           	opt stack 0
  8724  009C26                     ___enter_menu_work_mode:
  8725                           	opt stack 24
  8726                           
  8727                           ;key_menu.c: 344: menu=0xf0;
  8728                           
  8729                           ;incstack = 0
  8730  009C26  0EF0               	movlw	240
  8731  009C28  6E33               	movwf	_menu,c	;volatile
  8732                           
  8733                           ;key_menu.c: 345: subMenu=0x00;
  8734  009C2A  0E00               	movlw	0
  8735  009C2C  6E32               	movwf	_subMenu,c	;volatile
  8736                           
  8737                           ;key_menu.c: 346: *((uint8_t*)(&adjValue))=dwm;
  8738  009C2E  C0FD  F039         	movff	_dwm,_adjValue	;volatile
  8739                           
  8740                           ;key_menu.c: 347: adjLocation=0;
  8741  009C32  0E00               	movlw	0
  8742  009C34  6E3F               	movwf	_adjLocation,c	;volatile
  8743  009C36  0012               	return		;funcret
  8744  009C38                     __end_of___enter_menu_work_mode:
  8745                           	opt stack 0
  8746                           tblptru	equ	0xFF8
  8747                           tblptrh	equ	0xFF7
  8748                           tblptrl	equ	0xFF6
  8749                           tablat	equ	0xFF5
  8750                           prodh	equ	0xFF4
  8751                           prodl	equ	0xFF3
  8752                           intcon	equ	0xFF2
  8753                           postinc0	equ	0xFEE
  8754                           wreg	equ	0xFE8
  8755                           postinc1	equ	0xFE6
  8756                           postdec1	equ	0xFE5
  8757                           plusw1	equ	0xFE3
  8758                           fsr1h	equ	0xFE2
  8759                           fsr1l	equ	0xFE1
  8760                           indf2	equ	0xFDF
  8761                           postinc2	equ	0xFDE
  8762                           postdec2	equ	0xFDD
  8763                           plusw2	equ	0xFDB
  8764                           fsr2h	equ	0xFDA
  8765                           fsr2l	equ	0xFD9
  8766                           status	equ	0xFD8
  8767                           
  8768 ;; *************** function ___enter_menu_set_density *****************
  8769 ;; Defined at:
  8770 ;;		line 113 in file "src/api/key_menu.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;		None
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  t32             4   33[BANK0 ] long 
  8775 ;;  fps             2   31[BANK0 ] PTR struct .
  8776 ;;		 -> stSysData(240), 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:        8 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    6
  8793 ;; This function calls:
  8794 ;;		___int32_2_mflot32
  8795 ;; This function is called by:
  8796 ;;		_key_process_set_down_long
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text44
  8801  0081D4                     __ptext44:
  8802                           	opt stack 0
  8803  0081D4                     ___enter_menu_set_density:
  8804                           	opt stack 22
  8805                           
  8806                           ;key_menu.c: 115: int32_t t32;
  8807                           ;key_menu.c: 116: menu=0x20;
  8808                           
  8809                           ;incstack = 0
  8810  0081D4  0E20               	movlw	32
  8811  0081D6  6E33               	movwf	_menu,c	;volatile
  8812                           
  8813                           ;key_menu.c: 117: subMenu=0x00;
  8814  0081D8  0E00               	movlw	0
  8815  0081DA  6E32               	movwf	_subMenu,c	;volatile
  8816                           
  8817                           ;key_menu.c: 119: st_sysDataDef* fps= &stSysData;
  8818  0081DC  0E00               	movlw	low _stSysData
  8819  0081DE  0100               	movlb	0	; () banked
  8820  0081E0  6F7F               	movwf	___enter_menu_set_density@fps& (0+255),b
  8821  0081E2  0E02               	movlw	high _stSysData
  8822  0081E4  0100               	movlb	0	; () banked
  8823  0081E6  6F80               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;key_menu.c: 120: t32=fps->density;
  8827  0081E8  0100               	movlb	0	; () banked
  8828  0081EA  EE20 F006          	lfsr	2,6
  8829  0081EE  517F               	movf	___enter_menu_set_density@fps& (0+255),w,b
  8830  0081F0  26D9               	addwf	fsr2l,f,c
  8831  0081F2  5180               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  8832  0081F4  22DA               	addwfc	fsr2h,f,c
  8833  0081F6  CFDE F07D          	movff	postinc2,??___enter_menu_set_density
  8834  0081FA  CFDD F07E          	movff	postdec2,??___enter_menu_set_density+1
  8835  0081FE  C07D  F081         	movff	??___enter_menu_set_density,___enter_menu_set_density@t32
  8836  008202  C07E  F082         	movff	??___enter_menu_set_density+1,___enter_menu_set_density@t32+1
  8837  008206  0100               	movlb	0	; () banked
  8838  008208  6B83               	clrf	(___enter_menu_set_density@t32+2)& (0+255),b
  8839  00820A  6B84               	clrf	(___enter_menu_set_density@t32+3)& (0+255),b
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;key_menu.c: 121: t32=__int32_2_mflot32(t32);
  8843  00820C  C081  F06D         	movff	___enter_menu_set_density@t32,___int32_2_mflot32@x
  8844  008210  C082  F06E         	movff	___enter_menu_set_density@t32+1,___int32_2_mflot32@x+1
  8845  008214  C083  F06F         	movff	___enter_menu_set_density@t32+2,___int32_2_mflot32@x+2
  8846  008218  C084  F070         	movff	___enter_menu_set_density@t32+3,___int32_2_mflot32@x+3
  8847  00821C  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
  8848  008220  C06D  F081         	movff	?___int32_2_mflot32,___enter_menu_set_density@t32
  8849  008224  C06E  F082         	movff	?___int32_2_mflot32+1,___enter_menu_set_density@t32+1
  8850  008228  C06F  F083         	movff	?___int32_2_mflot32+2,___enter_menu_set_density@t32+2
  8851  00822C  C070  F084         	movff	?___int32_2_mflot32+3,___enter_menu_set_density@t32+3
  8852                           
  8853                           ;key_menu.c: 122: m_floatAdj.t32=t32;
  8854  008230  C081  F035         	movff	___enter_menu_set_density@t32,_m_floatAdj
  8855  008234  C082  F036         	movff	___enter_menu_set_density@t32+1,_m_floatAdj+1
  8856  008238  C083  F037         	movff	___enter_menu_set_density@t32+2,_m_floatAdj+2
  8857  00823C  C084  F038         	movff	___enter_menu_set_density@t32+3,_m_floatAdj+3
  8858                           
  8859                           ;key_menu.c: 123: adjLocation=0;
  8860  008240  0E00               	movlw	0
  8861  008242  6E3F               	movwf	_adjLocation,c	;volatile
  8862  008244  0012               	return		;funcret
  8863  008246                     __end_of___enter_menu_set_density:
  8864                           	opt stack 0
  8865                           tblptru	equ	0xFF8
  8866                           tblptrh	equ	0xFF7
  8867                           tblptrl	equ	0xFF6
  8868                           tablat	equ	0xFF5
  8869                           prodh	equ	0xFF4
  8870                           prodl	equ	0xFF3
  8871                           intcon	equ	0xFF2
  8872                           postinc0	equ	0xFEE
  8873                           wreg	equ	0xFE8
  8874                           postinc1	equ	0xFE6
  8875                           postdec1	equ	0xFE5
  8876                           plusw1	equ	0xFE3
  8877                           fsr1h	equ	0xFE2
  8878                           fsr1l	equ	0xFE1
  8879                           indf2	equ	0xFDF
  8880                           postinc2	equ	0xFDE
  8881                           postdec2	equ	0xFDD
  8882                           plusw2	equ	0xFDB
  8883                           fsr2h	equ	0xFDA
  8884                           fsr2l	equ	0xFD9
  8885                           status	equ	0xFD8
  8886                           
  8887 ;; *************** function ___enter_menu_set_base_zero *****************
  8888 ;; Defined at:
  8889 ;;		line 159 in file "src/api/key_menu.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  t32             4   31[BANK0 ] long 
  8894 ;;  fps             2   29[BANK0 ] PTR struct .
  8895 ;;		 -> stSysData(240), 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;Total ram usage:        6 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    6
  8912 ;; This function calls:
  8913 ;;		___int32_2_mflot32
  8914 ;; This function is called by:
  8915 ;;		_key_process_set_down_long
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text45
  8920  007F8A                     __ptext45:
  8921                           	opt stack 0
  8922  007F8A                     ___enter_menu_set_base_zero:
  8923                           	opt stack 22
  8924                           
  8925                           ;key_menu.c: 161: int32_t t32;
  8926                           ;key_menu.c: 162: menu=0x40;
  8927                           
  8928                           ;incstack = 0
  8929  007F8A  0E40               	movlw	64
  8930  007F8C  6E33               	movwf	_menu,c	;volatile
  8931                           
  8932                           ;key_menu.c: 163: subMenu=0;
  8933  007F8E  0E00               	movlw	0
  8934  007F90  6E32               	movwf	_subMenu,c	;volatile
  8935                           
  8936                           ;key_menu.c: 165: st_sysDataDef* fps= &stSysData;
  8937  007F92  0E00               	movlw	low _stSysData
  8938  007F94  0100               	movlb	0	; () banked
  8939  007F96  6F7D               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  8940  007F98  0E02               	movlw	high _stSysData
  8941  007F9A  0100               	movlb	0	; () banked
  8942  007F9C  6F7E               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;key_menu.c: 166: t32=(fps->baseZero);
  8946  007F9E  0100               	movlb	0	; () banked
  8947  007FA0  EE20 F018          	lfsr	2,24
  8948  007FA4  517D               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  8949  007FA6  26D9               	addwf	fsr2l,f,c
  8950  007FA8  517E               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  8951  007FAA  22DA               	addwfc	fsr2h,f,c
  8952  007FAC  CFDE F07F          	movff	postinc2,___enter_menu_set_base_zero@t32
  8953  007FB0  CFDE F080          	movff	postinc2,___enter_menu_set_base_zero@t32+1
  8954  007FB4  CFDE F081          	movff	postinc2,___enter_menu_set_base_zero@t32+2
  8955  007FB8  CFDE F082          	movff	postinc2,___enter_menu_set_base_zero@t32+3
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;key_menu.c: 167: t32=__int32_2_mflot32(t32);
  8959  007FBC  C07F  F06D         	movff	___enter_menu_set_base_zero@t32,___int32_2_mflot32@x
  8960  007FC0  C080  F06E         	movff	___enter_menu_set_base_zero@t32+1,___int32_2_mflot32@x+1
  8961  007FC4  C081  F06F         	movff	___enter_menu_set_base_zero@t32+2,___int32_2_mflot32@x+2
  8962  007FC8  C082  F070         	movff	___enter_menu_set_base_zero@t32+3,___int32_2_mflot32@x+3
  8963  007FCC  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
  8964  007FD0  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_base_zero@t32
  8965  007FD4  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_base_zero@t32+1
  8966  007FD8  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_base_zero@t32+2
  8967  007FDC  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_base_zero@t32+3
  8968                           
  8969                           ;key_menu.c: 168: m_floatAdj.t32=t32;
  8970  007FE0  C07F  F035         	movff	___enter_menu_set_base_zero@t32,_m_floatAdj
  8971  007FE4  C080  F036         	movff	___enter_menu_set_base_zero@t32+1,_m_floatAdj+1
  8972  007FE8  C081  F037         	movff	___enter_menu_set_base_zero@t32+2,_m_floatAdj+2
  8973  007FEC  C082  F038         	movff	___enter_menu_set_base_zero@t32+3,_m_floatAdj+3
  8974                           
  8975                           ;key_menu.c: 169: if(m_floatAdj.stru.sign){
  8976  007FF0  5038               	movf	_m_floatAdj+3,w,c
  8977  007FF2  B4D8               	btfsc	status,2,c
  8978  007FF4  D003               	goto	l15654
  8979                           
  8980                           ;key_menu.c: 170: adjLocation=1;
  8981  007FF6  0E01               	movlw	1
  8982  007FF8  6E3F               	movwf	_adjLocation,c	;volatile
  8983                           
  8984                           ;key_menu.c: 171: }else{
  8985  007FFA  0012               	return	
  8986  007FFC                     l15654:
  8987                           
  8988                           ;key_menu.c: 172: adjLocation=0;
  8989  007FFC  0E00               	movlw	0
  8990  007FFE  6E3F               	movwf	_adjLocation,c	;volatile
  8991  008000  0012               	return	
  8992  008002                     __end_of___enter_menu_set_base_zero:
  8993                           	opt stack 0
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           postinc0	equ	0xFEE
  9002                           wreg	equ	0xFE8
  9003                           postinc1	equ	0xFE6
  9004                           postdec1	equ	0xFE5
  9005                           plusw1	equ	0xFE3
  9006                           fsr1h	equ	0xFE2
  9007                           fsr1l	equ	0xFE1
  9008                           indf2	equ	0xFDF
  9009                           postinc2	equ	0xFDE
  9010                           postdec2	equ	0xFDD
  9011                           plusw2	equ	0xFDB
  9012                           fsr2h	equ	0xFDA
  9013                           fsr2l	equ	0xFD9
  9014                           status	equ	0xFD8
  9015                           
  9016 ;; *************** function ___enter_menu_bar_scale *****************
  9017 ;; Defined at:
  9018 ;;		line 332 in file "src/api/key_menu.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  fps             2    2[BANK0 ] PTR struct .
  9023 ;;		 -> stSysData(240), 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;Total ram usage:        4 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:    4
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_key_process_set_down_long
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text46
  9048  0092D4                     __ptext46:
  9049                           	opt stack 0
  9050  0092D4                     ___enter_menu_bar_scale:
  9051                           	opt stack 24
  9052                           
  9053                           ;key_menu.c: 334: menu=0xc0;
  9054                           
  9055                           ;incstack = 0
  9056  0092D4  0EC0               	movlw	192
  9057  0092D6  6E33               	movwf	_menu,c	;volatile
  9058                           
  9059                           ;key_menu.c: 335: subMenu=0x00;
  9060  0092D8  0E00               	movlw	0
  9061  0092DA  6E32               	movwf	_subMenu,c	;volatile
  9062                           
  9063                           ;key_menu.c: 337: st_sysDataDef* fps= &stSysData;
  9064  0092DC  0E00               	movlw	low _stSysData
  9065  0092DE  0100               	movlb	0	; () banked
  9066  0092E0  6F62               	movwf	___enter_menu_bar_scale@fps& (0+255),b
  9067  0092E2  0E02               	movlw	high _stSysData
  9068  0092E4  0100               	movlb	0	; () banked
  9069  0092E6  6F63               	movwf	(___enter_menu_bar_scale@fps+1)& (0+255),b
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;key_menu.c: 338: adjValue=fps->barScale;
  9073  0092E8  0100               	movlb	0	; () banked
  9074  0092EA  EE20 F0EC          	lfsr	2,236
  9075  0092EE  5162               	movf	___enter_menu_bar_scale@fps& (0+255),w,b
  9076  0092F0  26D9               	addwf	fsr2l,f,c
  9077  0092F2  5163               	movf	(___enter_menu_bar_scale@fps+1)& (0+255),w,b
  9078  0092F4  22DA               	addwfc	fsr2h,f,c
  9079  0092F6  CFDE F060          	movff	postinc2,??___enter_menu_bar_scale
  9080  0092FA  CFDD F061          	movff	postdec2,??___enter_menu_bar_scale+1
  9081  0092FE  C060  F039         	movff	??___enter_menu_bar_scale,_adjValue	;volatile
  9082  009302  C061  F03A         	movff	??___enter_menu_bar_scale+1,_adjValue+1	;volatile
  9083  009306  6A3B               	clrf	_adjValue+2,c	;volatile
  9084  009308  6A3C               	clrf	_adjValue+3,c	;volatile
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;key_menu.c: 339: adjLocation=0;
  9088  00930A  0E00               	movlw	0
  9089  00930C  6E3F               	movwf	_adjLocation,c	;volatile
  9090                           
  9091                           ; BSR set to: 0
  9092  00930E  0012               	return		;funcret
  9093  009310                     __end_of___enter_menu_bar_scale:
  9094                           	opt stack 0
  9095                           tblptru	equ	0xFF8
  9096                           tblptrh	equ	0xFF7
  9097                           tblptrl	equ	0xFF6
  9098                           tablat	equ	0xFF5
  9099                           prodh	equ	0xFF4
  9100                           prodl	equ	0xFF3
  9101                           intcon	equ	0xFF2
  9102                           postinc0	equ	0xFEE
  9103                           wreg	equ	0xFE8
  9104                           postinc1	equ	0xFE6
  9105                           postdec1	equ	0xFE5
  9106                           plusw1	equ	0xFE3
  9107                           fsr1h	equ	0xFE2
  9108                           fsr1l	equ	0xFE1
  9109                           indf2	equ	0xFDF
  9110                           postinc2	equ	0xFDE
  9111                           postdec2	equ	0xFDD
  9112                           plusw2	equ	0xFDB
  9113                           fsr2h	equ	0xFDA
  9114                           fsr2l	equ	0xFD9
  9115                           status	equ	0xFD8
  9116                           
  9117 ;; *************** function _key_process_set *****************
  9118 ;; Defined at:
  9119 ;;		line 953 in file "src/api/key_menu.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;Total ram usage:        0 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:   10
  9140 ;; This function calls:
  9141 ;;		___enter_menu_password
  9142 ;;		___set_short_diff_calib
  9143 ;;		___set_short_epr_ilp_scale
  9144 ;;		___set_short_epr_param
  9145 ;;		___set_short_poly_coefic
  9146 ;;		___set_short_pose_size
  9147 ;;		___set_short_pr_calib
  9148 ;;		___set_short_warn_type
  9149 ;;		___set_short_warn_value
  9150 ;; This function is called by:
  9151 ;;		_key_process
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text47
  9156  007444                     __ptext47:
  9157                           	opt stack 0
  9158  007444                     _key_process_set:
  9159                           	opt stack 19
  9160                           
  9161                           ;key_menu.c: 955: switch(menu){
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;incstack = 0
  9165  007444  D023               	goto	l16858
  9166  007446                     l16838:
  9167  007446  ECEA  F04D         	call	___enter_menu_password	;wreg free
  9168                           
  9169                           ;key_menu.c: 958: case 0x20: break;
  9170                           
  9171                           ;key_menu.c: 957: case 0x10: break;
  9172  00744A  0012               	return	
  9173  00744C                     l16840:
  9174  00744C  0E00               	movlw	0
  9175  00744E  ECDA  F02A         	call	___set_short_pose_size
  9176                           
  9177                           ;key_menu.c: 960: case 0x40: break;
  9178  007452  0012               	return	
  9179  007454                     l16842:
  9180  007454  0E00               	movlw	0
  9181  007456  EC20  F011         	call	___set_short_diff_calib
  9182  00745A  0012               	return	
  9183  00745C                     l16844:
  9184  00745C  0E00               	movlw	0
  9185  00745E  ECD5  F012         	call	___set_short_pr_calib
  9186  007462  0012               	return	
  9187  007464                     l16846:
  9188  007464  0E00               	movlw	0
  9189  007466  EC95  F041         	call	___set_short_poly_coefic
  9190  00746A  0012               	return	
  9191  00746C                     l16848:
  9192  00746C  0E00               	movlw	0
  9193  00746E  ECD5  F03D         	call	___set_short_warn_type
  9194  007472  0012               	return	
  9195  007474                     l16850:
  9196  007474  0E00               	movlw	0
  9197  007476  EC54  F032         	call	___set_short_warn_value
  9198  00747A  0012               	return	
  9199  00747C                     l16852:
  9200  00747C  0E00               	movlw	0
  9201  00747E  EC51  F026         	call	___set_short_epr_param
  9202  007482  0012               	return	
  9203  007484                     l16854:
  9204  007484  0E00               	movlw	0
  9205  007486  ECD8  F036         	call	___set_short_epr_ilp_scale
  9206                           
  9207                           ;key_menu.c: 974: }
  9208                           
  9209                           ;key_menu.c: 973: default:break;
  9210                           
  9211                           ;key_menu.c: 972: case 0xf0: break;
  9212                           
  9213                           ;key_menu.c: 971: case 0xc0: break;
  9214  00748A  0012               	return	
  9215  00748C                     l16858:
  9216  00748C  5033               	movf	_menu,w,c	;volatile
  9217                           
  9218                           ; Switch size 1, requested type "space"
  9219                           ; Number of cases is 14, Range of values is 0 to 240
  9220                           ; switch strategies available:
  9221                           ; Name         Instructions Cycles
  9222                           ; simple_byte           43    22 (average)
  9223                           ;	Chosen strategy is simple_byte
  9224  00748E  0A00               	xorlw	0	; case 0
  9225  007490  B4D8               	btfsc	status,2,c
  9226  007492  D7D9               	goto	l16838
  9227  007494  0A10               	xorlw	16	; case 16
  9228  007496  B4D8               	btfsc	status,2,c
  9229  007498  0012               	return	
  9230  00749A  0A30               	xorlw	48	; case 32
  9231  00749C  B4D8               	btfsc	status,2,c
  9232  00749E  0012               	return	
  9233  0074A0  0A10               	xorlw	16	; case 48
  9234  0074A2  B4D8               	btfsc	status,2,c
  9235  0074A4  D7D3               	goto	l16840
  9236  0074A6  0A70               	xorlw	112	; case 64
  9237  0074A8  B4D8               	btfsc	status,2,c
  9238  0074AA  0012               	return	
  9239  0074AC  0A10               	xorlw	16	; case 80
  9240  0074AE  B4D8               	btfsc	status,2,c
  9241  0074B0  D7D1               	goto	l16842
  9242  0074B2  0A30               	xorlw	48	; case 96
  9243  0074B4  B4D8               	btfsc	status,2,c
  9244  0074B6  D7D2               	goto	l16844
  9245  0074B8  0A10               	xorlw	16	; case 112
  9246  0074BA  B4D8               	btfsc	status,2,c
  9247  0074BC  D7D3               	goto	l16846
  9248  0074BE  0AF0               	xorlw	240	; case 128
  9249  0074C0  B4D8               	btfsc	status,2,c
  9250  0074C2  D7D4               	goto	l16848
  9251  0074C4  0A10               	xorlw	16	; case 144
  9252  0074C6  B4D8               	btfsc	status,2,c
  9253  0074C8  D7D5               	goto	l16850
  9254  0074CA  0A30               	xorlw	48	; case 160
  9255  0074CC  B4D8               	btfsc	status,2,c
  9256  0074CE  D7D6               	goto	l16852
  9257  0074D0  0A10               	xorlw	16	; case 176
  9258  0074D2  B4D8               	btfsc	status,2,c
  9259  0074D4  D7D7               	goto	l16854
  9260  0074D6  0A70               	xorlw	112	; case 192
  9261  0074D8  B4D8               	btfsc	status,2,c
  9262  0074DA  0012               	return	
  9263  0074DC  0A30               	xorlw	48	; case 240
  9264  0074DE  0012               	return	
  9265  0074E0                     __end_of_key_process_set:
  9266                           	opt stack 0
  9267                           tblptru	equ	0xFF8
  9268                           tblptrh	equ	0xFF7
  9269                           tblptrl	equ	0xFF6
  9270                           tablat	equ	0xFF5
  9271                           prodh	equ	0xFF4
  9272                           prodl	equ	0xFF3
  9273                           intcon	equ	0xFF2
  9274                           postinc0	equ	0xFEE
  9275                           wreg	equ	0xFE8
  9276                           postinc1	equ	0xFE6
  9277                           postdec1	equ	0xFE5
  9278                           plusw1	equ	0xFE3
  9279                           fsr1h	equ	0xFE2
  9280                           fsr1l	equ	0xFE1
  9281                           indf2	equ	0xFDF
  9282                           postinc2	equ	0xFDE
  9283                           postdec2	equ	0xFDD
  9284                           plusw2	equ	0xFDB
  9285                           fsr2h	equ	0xFDA
  9286                           fsr2l	equ	0xFD9
  9287                           status	equ	0xFD8
  9288                           
  9289 ;; *************** function ___set_short_warn_value *****************
  9290 ;; Defined at:
  9291 ;;		line 795 in file "src/api/key_menu.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  gohome          1    wreg     unsigned char 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  gohome          1    0[BANK3 ] unsigned char 
  9296 ;;  t32             4    1[BANK3 ] long 
  9297 ;;  stp             2    5[BANK3 ] PTR struct .
  9298 ;;		 -> stSysData(240), 
  9299 ;;  t8              1    7[BANK3 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      void 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Totals:         0       2       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;Total ram usage:       10 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    8
  9316 ;; This function calls:
  9317 ;;		___enter_menu_warn_value
  9318 ;;		___exit_menu_to_home_unsave
  9319 ;;		___mflot32_2_int32
  9320 ;;		___sys_data_save_write_flash
  9321 ;; This function is called by:
  9322 ;;		_key_process_set_long
  9323 ;;		_key_process_set
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text48
  9328  0064A8                     __ptext48:
  9329                           	opt stack 0
  9330  0064A8                     ___set_short_warn_value:
  9331                           	opt stack 20
  9332                           
  9333                           ;incstack = 0
  9334                           ;___set_short_warn_value@gohome stored from wreg
  9335  0064A8  0103               	movlb	3	; () banked
  9336  0064AA  6FCA               	movwf	___set_short_warn_value@gohome& (0+255),b
  9337                           
  9338                           ;key_menu.c: 797: uint8_t t8;
  9339                           ;key_menu.c: 799: int32_t t32;
  9340                           ;key_menu.c: 802: st_sysDataDef* stp=&stSysData;
  9341  0064AC  0E00               	movlw	low _stSysData
  9342  0064AE  0103               	movlb	3	; () banked
  9343  0064B0  6FCF               	movwf	___set_short_warn_value@stp& (0+255),b
  9344  0064B2  0E02               	movlw	high _stSysData
  9345  0064B4  0103               	movlb	3	; () banked
  9346  0064B6  6FD0               	movwf	(___set_short_warn_value@stp+1)& (0+255),b
  9347                           
  9348                           ; BSR set to: 3
  9349                           ;key_menu.c: 803: t32=__mflot32_2_int32(m_floatAdj.t32);
  9350  0064B8  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  9351  0064BC  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  9352  0064C0  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  9353  0064C4  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  9354  0064C8  EC8A  F038         	call	___mflot32_2_int32	;wreg free
  9355  0064CC  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_warn_value@t32
  9356  0064D0  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_warn_value@t32+1
  9357  0064D4  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_warn_value@t32+2
  9358  0064D8  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_warn_value@t32+3
  9359                           
  9360                           ;key_menu.c: 811: t8=subMenu>>1;
  9361  0064DC  90D8               	bcf	status,0,c
  9362  0064DE  3032               	rrcf	_subMenu,w,c	;volatile
  9363  0064E0  0103               	movlb	3	; () banked
  9364  0064E2  6FD1               	movwf	___set_short_warn_value@t8& (0+255),b
  9365                           
  9366                           ; BSR set to: 3
  9367                           ;key_menu.c: 812: if(subMenu & 0x01){
  9368  0064E4  A032               	btfss	_subMenu,0,c	;volatile
  9369  0064E6  D019               	goto	l15982
  9370                           
  9371                           ; BSR set to: 3
  9372                           ;key_menu.c: 813: stp->diffPressureWarnSet[t8].warnValueHi=t32;
  9373  0064E8  0103               	movlb	3	; () banked
  9374  0064EA  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9375  0064EC  0D0C               	mullw	12
  9376  0064EE  0E3C               	movlw	60
  9377  0064F0  26F3               	addwf	prodl,f,c
  9378  0064F2  0E00               	movlw	0
  9379  0064F4  22F4               	addwfc	prodh,f,c
  9380  0064F6  C3CF  F0E3         	movff	___set_short_warn_value@stp,??___set_short_warn_value
  9381  0064FA  C3D0  F0E4         	movff	___set_short_warn_value@stp+1,??___set_short_warn_value+1
  9382  0064FE  50F3               	movf	prodl,w,c
  9383  006500  0100               	movlb	0	; () banked
  9384  006502  27E3               	addwf	??___set_short_warn_value& (0+255),f,b
  9385  006504  50F4               	movf	prodh,w,c
  9386  006506  0100               	movlb	0	; () banked
  9387  006508  23E4               	addwfc	(??___set_short_warn_value+1)& (0+255),f,b
  9388  00650A  0E04               	movlw	4
  9389  00650C  0100               	movlb	0	; () banked
  9390  00650E  25E3               	addwf	??___set_short_warn_value& (0+255),w,b
  9391  006510  6ED9               	movwf	fsr2l,c
  9392  006512  0E00               	movlw	0
  9393  006514  0100               	movlb	0	; () banked
  9394  006516  21E4               	addwfc	(??___set_short_warn_value+1)& (0+255),w,b
  9395  006518  D00E               	goto	L1
  9396  00651A                     l15982:
  9397                           
  9398                           ;key_menu.c: 815: stp->diffPressureWarnSet[t8].warnValueLo=t32;
  9399  00651A  0103               	movlb	3	; () banked
  9400  00651C  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9401  00651E  0D0C               	mullw	12
  9402  006520  0E3C               	movlw	60
  9403  006522  26F3               	addwf	prodl,f,c
  9404  006524  0E00               	movlw	0
  9405  006526  22F4               	addwfc	prodh,f,c
  9406  006528  50F3               	movf	prodl,w,c
  9407  00652A  0103               	movlb	3	; () banked
  9408  00652C  25CF               	addwf	___set_short_warn_value@stp& (0+255),w,b
  9409  00652E  6ED9               	movwf	fsr2l,c
  9410  006530  50F4               	movf	prodh,w,c
  9411  006532  0103               	movlb	3	; () banked
  9412  006534  21D0               	addwfc	(___set_short_warn_value@stp+1)& (0+255),w,b
  9413  006536                     L1:
  9414  006536  6EDA               	movwf	fsr2h,c
  9415  006538  C3CB  FFDE         	movff	___set_short_warn_value@t32,postinc2
  9416  00653C  C3CC  FFDE         	movff	___set_short_warn_value@t32+1,postinc2
  9417  006540  C3CD  FFDE         	movff	___set_short_warn_value@t32+2,postinc2
  9418  006544  C3CE  FFDE         	movff	___set_short_warn_value@t32+3,postinc2
  9419                           
  9420                           ;key_menu.c: 816: }
  9421                           ;key_menu.c: 818: __sys_data_save_write_flash();
  9422                           
  9423                           ; BSR set to: 3
  9424  006548  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
  9425                           
  9426                           ;key_menu.c: 820: if(gohome){__exit_menu_to_home_unsave(); return;}
  9427  00654C  0103               	movlb	3	; () banked
  9428  00654E  51CA               	movf	___set_short_warn_value@gohome& (0+255),w,b
  9429  006550  0103               	movlb	3	; () banked
  9430  006552  B4D8               	btfsc	status,2,c
  9431  006554  D003               	goto	l15992
  9432                           
  9433                           ; BSR set to: 3
  9434  006556  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  9435  00655A  0012               	return	
  9436  00655C                     l15992:
  9437                           
  9438                           ;key_menu.c: 822: subMenu++;
  9439  00655C  2A32               	incf	_subMenu,f,c	;volatile
  9440                           
  9441                           ;key_menu.c: 823: if(subMenu>0x07)subMenu=0x00;
  9442  00655E  0E07               	movlw	7
  9443  006560  6432               	cpfsgt	_subMenu,c	;volatile
  9444  006562  D002               	goto	l15998
  9445  006564  0E00               	movlw	0
  9446  006566  6E32               	movwf	_subMenu,c	;volatile
  9447  006568                     l15998:
  9448                           
  9449                           ;key_menu.c: 824: __enter_menu_warn_value(subMenu);
  9450  006568  5032               	movf	_subMenu,w,c	;volatile
  9451  00656A  ECA7  F034         	call	___enter_menu_warn_value
  9452  00656E  0012               	return		;funcret
  9453  006570                     __end_of___set_short_warn_value:
  9454                           	opt stack 0
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           postinc0	equ	0xFEE
  9463                           wreg	equ	0xFE8
  9464                           postinc1	equ	0xFE6
  9465                           postdec1	equ	0xFE5
  9466                           plusw1	equ	0xFE3
  9467                           fsr1h	equ	0xFE2
  9468                           fsr1l	equ	0xFE1
  9469                           indf2	equ	0xFDF
  9470                           postinc2	equ	0xFDE
  9471                           postdec2	equ	0xFDD
  9472                           plusw2	equ	0xFDB
  9473                           fsr2h	equ	0xFDA
  9474                           fsr2l	equ	0xFD9
  9475                           status	equ	0xFD8
  9476                           
  9477 ;; *************** function ___enter_menu_warn_value *****************
  9478 ;; Defined at:
  9479 ;;		line 261 in file "src/api/key_menu.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  __subMenu       1    wreg     unsigned char 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  __subMenu       1   31[BANK0 ] unsigned char 
  9484 ;;  t32             4   35[BANK0 ] long 
  9485 ;;  fps             2   32[BANK0 ] PTR struct .
  9486 ;;		 -> stSysData(240), 
  9487 ;;  t8              1   34[BANK0 ] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;Total ram usage:       10 bytes
  9502 ;; Hardware stack levels used:    1
  9503 ;; Hardware stack levels required when called:    6
  9504 ;; This function calls:
  9505 ;;		___int32_2_mflot32
  9506 ;; This function is called by:
  9507 ;;		_key_process_set_down_long
  9508 ;;		___set_short_warn_value
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text49
  9513  00694E                     __ptext49:
  9514                           	opt stack 0
  9515  00694E                     ___enter_menu_warn_value:
  9516                           	opt stack 21
  9517                           
  9518                           ;incstack = 0
  9519                           ;___enter_menu_warn_value@__subMenu stored from wreg
  9520  00694E  0100               	movlb	0	; () banked
  9521  006950  6F7F               	movwf	___enter_menu_warn_value@__subMenu& (0+255),b
  9522                           
  9523                           ;key_menu.c: 263: uint8_t t8;
  9524                           ;key_menu.c: 264: int32_t t32;
  9525                           ;key_menu.c: 265: menu=0x90;
  9526  006952  0E90               	movlw	144
  9527  006954  6E33               	movwf	_menu,c	;volatile
  9528                           
  9529                           ;key_menu.c: 266: subMenu=__subMenu;
  9530  006956  C07F  F032         	movff	___enter_menu_warn_value@__subMenu,_subMenu	;volatile
  9531                           
  9532                           ;key_menu.c: 268: st_sysDataDef* fps= &stSysData;
  9533  00695A  0E00               	movlw	low _stSysData
  9534  00695C  0100               	movlb	0	; () banked
  9535  00695E  6F80               	movwf	___enter_menu_warn_value@fps& (0+255),b
  9536  006960  0E02               	movlw	high _stSysData
  9537  006962  0100               	movlb	0	; () banked
  9538  006964  6F81               	movwf	(___enter_menu_warn_value@fps+1)& (0+255),b
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;key_menu.c: 276: t8=subMenu >>1;
  9542  006966  90D8               	bcf	status,0,c
  9543  006968  3032               	rrcf	_subMenu,w,c	;volatile
  9544  00696A  0100               	movlb	0	; () banked
  9545  00696C  6F82               	movwf	___enter_menu_warn_value@t8& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;key_menu.c: 277: if(subMenu & 0x01){
  9549  00696E  A032               	btfss	_subMenu,0,c	;volatile
  9550  006970  D019               	goto	l15174
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;key_menu.c: 279: t32=fps->diffPressureWarnSet[t8].warnValueHi;
  9554  006972  0100               	movlb	0	; () banked
  9555  006974  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9556  006976  0D0C               	mullw	12
  9557  006978  0E3C               	movlw	60
  9558  00697A  26F3               	addwf	prodl,f,c
  9559  00697C  0E00               	movlw	0
  9560  00697E  22F4               	addwfc	prodh,f,c
  9561  006980  C080  F07D         	movff	___enter_menu_warn_value@fps,??___enter_menu_warn_value
  9562  006984  C081  F07E         	movff	___enter_menu_warn_value@fps+1,??___enter_menu_warn_value+1
  9563  006988  50F3               	movf	prodl,w,c
  9564  00698A  0100               	movlb	0	; () banked
  9565  00698C  277D               	addwf	??___enter_menu_warn_value& (0+255),f,b
  9566  00698E  50F4               	movf	prodh,w,c
  9567  006990  0100               	movlb	0	; () banked
  9568  006992  237E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),f,b
  9569  006994  0E04               	movlw	4
  9570  006996  0100               	movlb	0	; () banked
  9571  006998  257D               	addwf	??___enter_menu_warn_value& (0+255),w,b
  9572  00699A  6ED9               	movwf	fsr2l,c
  9573  00699C  0E00               	movlw	0
  9574  00699E  0100               	movlb	0	; () banked
  9575  0069A0  217E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),w,b
  9576  0069A2  D00E               	goto	L2
  9577  0069A4                     l15174:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;key_menu.c: 281: t32=fps->diffPressureWarnSet[t8].warnValueLo;
  9581  0069A4  0100               	movlb	0	; () banked
  9582  0069A6  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9583  0069A8  0D0C               	mullw	12
  9584  0069AA  0E3C               	movlw	60
  9585  0069AC  26F3               	addwf	prodl,f,c
  9586  0069AE  0E00               	movlw	0
  9587  0069B0  22F4               	addwfc	prodh,f,c
  9588  0069B2  50F3               	movf	prodl,w,c
  9589  0069B4  0100               	movlb	0	; () banked
  9590  0069B6  2580               	addwf	___enter_menu_warn_value@fps& (0+255),w,b
  9591  0069B8  6ED9               	movwf	fsr2l,c
  9592  0069BA  50F4               	movf	prodh,w,c
  9593  0069BC  0100               	movlb	0	; () banked
  9594  0069BE  2181               	addwfc	(___enter_menu_warn_value@fps+1)& (0+255),w,b
  9595  0069C0                     L2:
  9596  0069C0  6EDA               	movwf	fsr2h,c
  9597  0069C2  CFDE F083          	movff	postinc2,___enter_menu_warn_value@t32
  9598  0069C6  CFDE F084          	movff	postinc2,___enter_menu_warn_value@t32+1
  9599  0069CA  CFDE F085          	movff	postinc2,___enter_menu_warn_value@t32+2
  9600  0069CE  CFDE F086          	movff	postinc2,___enter_menu_warn_value@t32+3
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;key_menu.c: 282: }
  9604                           ;key_menu.c: 284: t32=__int32_2_mflot32(t32);
  9605                           
  9606                           ; BSR set to: 0
  9607  0069D2  C083  F06D         	movff	___enter_menu_warn_value@t32,___int32_2_mflot32@x
  9608  0069D6  C084  F06E         	movff	___enter_menu_warn_value@t32+1,___int32_2_mflot32@x+1
  9609  0069DA  C085  F06F         	movff	___enter_menu_warn_value@t32+2,___int32_2_mflot32@x+2
  9610  0069DE  C086  F070         	movff	___enter_menu_warn_value@t32+3,___int32_2_mflot32@x+3
  9611  0069E2  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
  9612  0069E6  C06D  F083         	movff	?___int32_2_mflot32,___enter_menu_warn_value@t32
  9613  0069EA  C06E  F084         	movff	?___int32_2_mflot32+1,___enter_menu_warn_value@t32+1
  9614  0069EE  C06F  F085         	movff	?___int32_2_mflot32+2,___enter_menu_warn_value@t32+2
  9615  0069F2  C070  F086         	movff	?___int32_2_mflot32+3,___enter_menu_warn_value@t32+3
  9616                           
  9617                           ;key_menu.c: 285: m_floatAdj.t32=t32;
  9618  0069F6  C083  F035         	movff	___enter_menu_warn_value@t32,_m_floatAdj
  9619  0069FA  C084  F036         	movff	___enter_menu_warn_value@t32+1,_m_floatAdj+1
  9620  0069FE  C085  F037         	movff	___enter_menu_warn_value@t32+2,_m_floatAdj+2
  9621  006A02  C086  F038         	movff	___enter_menu_warn_value@t32+3,_m_floatAdj+3
  9622                           
  9623                           ;key_menu.c: 286: adjLocation=0;
  9624  006A06  0E00               	movlw	0
  9625  006A08  6E3F               	movwf	_adjLocation,c	;volatile
  9626  006A0A  0012               	return		;funcret
  9627  006A0C                     __end_of___enter_menu_warn_value:
  9628                           	opt stack 0
  9629                           tblptru	equ	0xFF8
  9630                           tblptrh	equ	0xFF7
  9631                           tblptrl	equ	0xFF6
  9632                           tablat	equ	0xFF5
  9633                           prodh	equ	0xFF4
  9634                           prodl	equ	0xFF3
  9635                           intcon	equ	0xFF2
  9636                           postinc0	equ	0xFEE
  9637                           wreg	equ	0xFE8
  9638                           postinc1	equ	0xFE6
  9639                           postdec1	equ	0xFE5
  9640                           plusw1	equ	0xFE3
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           indf2	equ	0xFDF
  9644                           postinc2	equ	0xFDE
  9645                           postdec2	equ	0xFDD
  9646                           plusw2	equ	0xFDB
  9647                           fsr2h	equ	0xFDA
  9648                           fsr2l	equ	0xFD9
  9649                           status	equ	0xFD8
  9650                           
  9651 ;; *************** function ___set_short_warn_type *****************
  9652 ;; Defined at:
  9653 ;;		line 777 in file "src/api/key_menu.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  gohome          1    wreg     unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  gohome          1    0[BANK3 ] unsigned char 
  9658 ;;  stp             2    3[BANK3 ] PTR struct .
  9659 ;;		 -> stSysData(240), 
  9660 ;;  p               2    1[BANK3 ] PTR unsigned char 
  9661 ;;		 -> adjValue(4), 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Totals:         0       2       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;Total ram usage:        7 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    8
  9678 ;; This function calls:
  9679 ;;		___enter_menu_warn_type
  9680 ;;		___exit_menu_to_home_unsave
  9681 ;;		___sys_data_save_write_flash
  9682 ;; This function is called by:
  9683 ;;		_key_process_set_long
  9684 ;;		_key_process_set
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text50
  9689  007BAA                     __ptext50:
  9690                           	opt stack 0
  9691  007BAA                     ___set_short_warn_type:
  9692                           	opt stack 20
  9693                           
  9694                           ;incstack = 0
  9695                           ;___set_short_warn_type@gohome stored from wreg
  9696  007BAA  0103               	movlb	3	; () banked
  9697  007BAC  6FCA               	movwf	___set_short_warn_type@gohome& (0+255),b
  9698                           
  9699                           ;key_menu.c: 779: uint8_t* p;
  9700                           ;key_menu.c: 783: st_sysDataDef* stp=&stSysData;
  9701  007BAE  0E00               	movlw	low _stSysData
  9702  007BB0  0103               	movlb	3	; () banked
  9703  007BB2  6FCD               	movwf	___set_short_warn_type@stp& (0+255),b
  9704  007BB4  0E02               	movlw	high _stSysData
  9705  007BB6  0103               	movlb	3	; () banked
  9706  007BB8  6FCE               	movwf	(___set_short_warn_type@stp+1)& (0+255),b
  9707                           
  9708                           ;key_menu.c: 784: p=(uint8_t*)(&adjValue);
  9709  007BBA  0E39               	movlw	low _adjValue
  9710  007BBC  0103               	movlb	3	; () banked
  9711  007BBE  6FCB               	movwf	___set_short_warn_type@p& (0+255),b
  9712  007BC0  0E00               	movlw	high _adjValue
  9713  007BC2  0103               	movlb	3	; () banked
  9714  007BC4  6FCC               	movwf	(___set_short_warn_type@p+1)& (0+255),b
  9715                           
  9716                           ; BSR set to: 3
  9717                           ;key_menu.c: 785: stp->diffPressureWarnSet[subMenu].type=*p;
  9718  007BC6  C3CB  FFD9         	movff	___set_short_warn_type@p,fsr2l
  9719  007BCA  C3CC  FFDA         	movff	___set_short_warn_type@p+1,fsr2h
  9720  007BCE  5032               	movf	_subMenu,w,c	;volatile
  9721  007BD0  0D0C               	mullw	12
  9722  007BD2  0E3C               	movlw	60
  9723  007BD4  26F3               	addwf	prodl,f,c
  9724  007BD6  0E00               	movlw	0
  9725  007BD8  22F4               	addwfc	prodh,f,c
  9726  007BDA  C3CD  F0E3         	movff	___set_short_warn_type@stp,??___set_short_warn_type
  9727  007BDE  C3CE  F0E4         	movff	___set_short_warn_type@stp+1,??___set_short_warn_type+1
  9728  007BE2  50F3               	movf	prodl,w,c
  9729  007BE4  0100               	movlb	0	; () banked
  9730  007BE6  27E3               	addwf	??___set_short_warn_type& (0+255),f,b
  9731  007BE8  50F4               	movf	prodh,w,c
  9732  007BEA  0100               	movlb	0	; () banked
  9733  007BEC  23E4               	addwfc	(??___set_short_warn_type+1)& (0+255),f,b
  9734  007BEE  0E08               	movlw	8
  9735  007BF0  0100               	movlb	0	; () banked
  9736  007BF2  25E3               	addwf	??___set_short_warn_type& (0+255),w,b
  9737  007BF4  6EE1               	movwf	fsr1l,c
  9738  007BF6  0E00               	movlw	0
  9739  007BF8  0100               	movlb	0	; () banked
  9740  007BFA  21E4               	addwfc	(??___set_short_warn_type+1)& (0+255),w,b
  9741  007BFC  6EE2               	movwf	fsr1h,c
  9742  007BFE  CFDF FFE7          	movff	indf2,indf1
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;key_menu.c: 786: __sys_data_save_write_flash();
  9746  007C02  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
  9747                           
  9748                           ;key_menu.c: 788: if(gohome){__exit_menu_to_home_unsave(); return;}
  9749  007C06  0103               	movlb	3	; () banked
  9750  007C08  51CA               	movf	___set_short_warn_type@gohome& (0+255),w,b
  9751  007C0A  0103               	movlb	3	; () banked
  9752  007C0C  B4D8               	btfsc	status,2,c
  9753  007C0E  D003               	goto	l15964
  9754                           
  9755                           ; BSR set to: 3
  9756  007C10  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
  9757  007C14  0012               	return	
  9758  007C16                     l15964:
  9759                           
  9760                           ;key_menu.c: 790: subMenu++;
  9761  007C16  2A32               	incf	_subMenu,f,c	;volatile
  9762                           
  9763                           ;key_menu.c: 791: if(subMenu>0x03)subMenu=0x00;
  9764  007C18  0E03               	movlw	3
  9765  007C1A  6432               	cpfsgt	_subMenu,c	;volatile
  9766  007C1C  D002               	goto	l15970
  9767  007C1E  0E00               	movlw	0
  9768  007C20  6E32               	movwf	_subMenu,c	;volatile
  9769  007C22                     l15970:
  9770                           
  9771                           ;key_menu.c: 792: __enter_menu_warn_type(subMenu);
  9772  007C22  5032               	movf	_subMenu,w,c	;volatile
  9773  007C24  ECDA  F044         	call	___enter_menu_warn_type
  9774  007C28  0012               	return		;funcret
  9775  007C2A                     __end_of___set_short_warn_type:
  9776                           	opt stack 0
  9777                           tblptru	equ	0xFF8
  9778                           tblptrh	equ	0xFF7
  9779                           tblptrl	equ	0xFF6
  9780                           tablat	equ	0xFF5
  9781                           prodh	equ	0xFF4
  9782                           prodl	equ	0xFF3
  9783                           intcon	equ	0xFF2
  9784                           postinc0	equ	0xFEE
  9785                           wreg	equ	0xFE8
  9786                           indf1	equ	0xFE7
  9787                           postinc1	equ	0xFE6
  9788                           postdec1	equ	0xFE5
  9789                           plusw1	equ	0xFE3
  9790                           fsr1h	equ	0xFE2
  9791                           fsr1l	equ	0xFE1
  9792                           indf2	equ	0xFDF
  9793                           postinc2	equ	0xFDE
  9794                           postdec2	equ	0xFDD
  9795                           plusw2	equ	0xFDB
  9796                           fsr2h	equ	0xFDA
  9797                           fsr2l	equ	0xFD9
  9798                           status	equ	0xFD8
  9799                           
  9800 ;; *************** function ___enter_menu_warn_type *****************
  9801 ;; Defined at:
  9802 ;;		line 250 in file "src/api/key_menu.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  __subMenu       1    wreg     unsigned char 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  __subMenu       1    2[BANK0 ] unsigned char 
  9807 ;;  fps             2    3[BANK0 ] PTR struct .
  9808 ;;		 -> stSysData(240), 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        5 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    4
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_key_process_set_down_long
  9829 ;;		___set_short_warn_type
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text51
  9834  0089B4                     __ptext51:
  9835                           	opt stack 0
  9836  0089B4                     ___enter_menu_warn_type:
  9837                           	opt stack 23
  9838                           
  9839                           ;incstack = 0
  9840                           ;___enter_menu_warn_type@__subMenu stored from wreg
  9841  0089B4  0100               	movlb	0	; () banked
  9842  0089B6  6F62               	movwf	___enter_menu_warn_type@__subMenu& (0+255),b
  9843                           
  9844                           ;key_menu.c: 252: menu=0x80;
  9845  0089B8  0E80               	movlw	128
  9846  0089BA  6E33               	movwf	_menu,c	;volatile
  9847                           
  9848                           ;key_menu.c: 253: subMenu=__subMenu;
  9849  0089BC  C062  F032         	movff	___enter_menu_warn_type@__subMenu,_subMenu	;volatile
  9850                           
  9851                           ;key_menu.c: 255: st_sysDataDef* fps= &stSysData;
  9852  0089C0  0E00               	movlw	low _stSysData
  9853  0089C2  0100               	movlb	0	; () banked
  9854  0089C4  6F63               	movwf	___enter_menu_warn_type@fps& (0+255),b
  9855  0089C6  0E02               	movlw	high _stSysData
  9856  0089C8  0100               	movlb	0	; () banked
  9857  0089CA  6F64               	movwf	(___enter_menu_warn_type@fps+1)& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;key_menu.c: 256: adjValue=0x00ul;
  9861  0089CC  0E00               	movlw	0
  9862  0089CE  6E39               	movwf	_adjValue,c	;volatile
  9863  0089D0  0E00               	movlw	0
  9864  0089D2  6E3A               	movwf	_adjValue+1,c	;volatile
  9865  0089D4  0E00               	movlw	0
  9866  0089D6  6E3B               	movwf	_adjValue+2,c	;volatile
  9867  0089D8  0E00               	movlw	0
  9868  0089DA  6E3C               	movwf	_adjValue+3,c	;volatile
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;key_menu.c: 257: *((uint8_t*)(&adjValue))=(uint8_t)(fps->diffPressureWarnSet[subMenu].t
      +                          ype);
  9872  0089DC  5032               	movf	_subMenu,w,c	;volatile
  9873  0089DE  0D0C               	mullw	12
  9874  0089E0  0E3C               	movlw	60
  9875  0089E2  26F3               	addwf	prodl,f,c
  9876  0089E4  0E00               	movlw	0
  9877  0089E6  22F4               	addwfc	prodh,f,c
  9878  0089E8  C063  F060         	movff	___enter_menu_warn_type@fps,??___enter_menu_warn_type
  9879  0089EC  C064  F061         	movff	___enter_menu_warn_type@fps+1,??___enter_menu_warn_type+1
  9880  0089F0  50F3               	movf	prodl,w,c
  9881  0089F2  0100               	movlb	0	; () banked
  9882  0089F4  2760               	addwf	??___enter_menu_warn_type& (0+255),f,b
  9883  0089F6  50F4               	movf	prodh,w,c
  9884  0089F8  0100               	movlb	0	; () banked
  9885  0089FA  2361               	addwfc	(??___enter_menu_warn_type+1)& (0+255),f,b
  9886  0089FC  0E08               	movlw	8
  9887  0089FE  0100               	movlb	0	; () banked
  9888  008A00  2560               	addwf	??___enter_menu_warn_type& (0+255),w,b
  9889  008A02  6ED9               	movwf	fsr2l,c
  9890  008A04  0E00               	movlw	0
  9891  008A06  0100               	movlb	0	; () banked
  9892  008A08  2161               	addwfc	(??___enter_menu_warn_type+1)& (0+255),w,b
  9893  008A0A  6EDA               	movwf	fsr2h,c
  9894  008A0C  50DF               	movf	indf2,w,c
  9895  008A0E  6E39               	movwf	_adjValue,c
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;key_menu.c: 258: adjLocation=0;
  9899  008A10  0E00               	movlw	0
  9900  008A12  6E3F               	movwf	_adjLocation,c	;volatile
  9901                           
  9902                           ; BSR set to: 0
  9903  008A14  0012               	return		;funcret
  9904  008A16                     __end_of___enter_menu_warn_type:
  9905                           	opt stack 0
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           intcon	equ	0xFF2
  9913                           postinc0	equ	0xFEE
  9914                           wreg	equ	0xFE8
  9915                           indf1	equ	0xFE7
  9916                           postinc1	equ	0xFE6
  9917                           postdec1	equ	0xFE5
  9918                           plusw1	equ	0xFE3
  9919                           fsr1h	equ	0xFE2
  9920                           fsr1l	equ	0xFE1
  9921                           indf2	equ	0xFDF
  9922                           postinc2	equ	0xFDE
  9923                           postdec2	equ	0xFDD
  9924                           plusw2	equ	0xFDB
  9925                           fsr2h	equ	0xFDA
  9926                           fsr2l	equ	0xFD9
  9927                           status	equ	0xFD8
  9928                           
  9929 ;; *************** function ___set_short_pr_calib *****************
  9930 ;; Defined at:
  9931 ;;		line 718 in file "src/api/key_menu.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  gohome          1    wreg     unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  gohome          1   52[BANK0 ] unsigned char 
  9936 ;;  t32             4   55[BANK0 ] unsigned long 
  9937 ;;  pra             4   48[BANK0 ] unsigned long 
  9938 ;;  t16             2   59[BANK0 ] unsigned int 
  9939 ;;  adjv            1   61[BANK0 ] unsigned char 
  9940 ;;  saveFlg         1   54[BANK0 ] unsigned char 
  9941 ;;  t8              1   53[BANK0 ] unsigned char 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;Total ram usage:       20 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    9
  9958 ;; This function calls:
  9959 ;;		___enter_menu_calib_press
  9960 ;;		___exit_menu_to_home_unsave
  9961 ;;		___mflot32_2_int32
  9962 ;;		_at24c02_write_n_byte
  9963 ;;		_crc_append
  9964 ;; This function is called by:
  9965 ;;		_key_process_set_long
  9966 ;;		_key_process_set
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text52
  9971  0025AA                     __ptext52:
  9972                           	opt stack 0
  9973  0025AA                     ___set_short_pr_calib:
  9974                           	opt stack 19
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;incstack = 0
  9978                           ;___set_short_pr_calib@gohome stored from wreg
  9979  0025AA  0100               	movlb	0	; () banked
  9980  0025AC  6F94               	movwf	___set_short_pr_calib@gohome& (0+255),b
  9981                           
  9982                           ;key_menu.c: 720: bool saveFlg=0;
  9983  0025AE  0E00               	movlw	0
  9984  0025B0  0100               	movlb	0	; () banked
  9985  0025B2  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;key_menu.c: 721: uint8_t t8,adjv;
  9989                           ;key_menu.c: 722: uint16_t t16;
  9990                           ;key_menu.c: 723: uint32_t t32,pra;
  9991                           ;key_menu.c: 724: if(calibCol==0){
  9992  0025B4  5030               	movf	_calibCol,w,c	;volatile
  9993  0025B6  A4D8               	btfss	status,2,c
  9994  0025B8  D021               	goto	l15900
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;key_menu.c: 725: t8=prCalibTabDef.prCalibRow[calibRow].pCount;
  9998  0025BA  5031               	movf	_calibRow,w,c	;volatile
  9999  0025BC  0D34               	mullw	52
 10000  0025BE  0E04               	movlw	low (_prCalibTabDef+4)
 10001  0025C0  24F3               	addwf	prodl,w,c
 10002  0025C2  6ED9               	movwf	fsr2l,c
 10003  0025C4  0E04               	movlw	high (_prCalibTabDef+4)
 10004  0025C6  20F4               	addwfc	prodh,w,c
 10005  0025C8  6EDA               	movwf	fsr2h,c
 10006  0025CA  50DF               	movf	indf2,w,c
 10007  0025CC  0100               	movlb	0	; () banked
 10008  0025CE  6F95               	movwf	___set_short_pr_calib@t8& (0+255),b
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;key_menu.c: 726: adjv=*(uint8_t*)(&adjValue);
 10012  0025D0  C039  F09D         	movff	_adjValue,___set_short_pr_calib@adjv
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;key_menu.c: 727: if(t8!=adjv){
 10016  0025D4  0100               	movlb	0	; () banked
 10017  0025D6  519D               	movf	___set_short_pr_calib@adjv& (0+255),w,b
 10018  0025D8  0100               	movlb	0	; () banked
 10019  0025DA  1995               	xorwf	___set_short_pr_calib@t8& (0+255),w,b
 10020  0025DC  B4D8               	btfsc	status,2,c
 10021  0025DE  D148               	goto	l15910
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;key_menu.c: 728: saveFlg=1;
 10025  0025E0  0E01               	movlw	1
 10026  0025E2  0100               	movlb	0	; () banked
 10027  0025E4  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;key_menu.c: 729: prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
 10031  0025E6  5031               	movf	_calibRow,w,c	;volatile
 10032  0025E8  0D34               	mullw	52
 10033  0025EA  0E04               	movlw	low (_prCalibTabDef+4)
 10034  0025EC  24F3               	addwf	prodl,w,c
 10035  0025EE  6ED9               	movwf	fsr2l,c
 10036  0025F0  0E04               	movlw	high (_prCalibTabDef+4)
 10037  0025F2  20F4               	addwfc	prodh,w,c
 10038  0025F4  6EDA               	movwf	fsr2h,c
 10039  0025F6  C09D  FFDF         	movff	___set_short_pr_calib@adjv,indf2
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;key_menu.c: 730: }
 10043                           ;key_menu.c: 731: }else{
 10044  0025FA  D13A               	goto	l15910
 10045  0025FC                     l15900:
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;key_menu.c: 732: t32=__mflot32_2_int32(m_floatAdj.t32);
 10049  0025FC  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10050  002600  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10051  002604  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10052  002608  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10053  00260C  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 10054  002610  C06C  F097         	movff	?___mflot32_2_int32,___set_short_pr_calib@t32
 10055  002614  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_pr_calib@t32+1
 10056  002618  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_pr_calib@t32+2
 10057  00261C  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_pr_calib@t32+3
 10058                           
 10059                           ;key_menu.c: 733: pra=prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue
      +                          ;
 10060  002620  5031               	movf	_calibRow,w,c	;volatile
 10061  002622  0D34               	mullw	52
 10062  002624  0EFC               	movlw	252
 10063  002626  0100               	movlb	0	; () banked
 10064  002628  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10065  00262A  0EFF               	movlw	255
 10066  00262C  0100               	movlb	0	; () banked
 10067  00262E  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10068  002630  5030               	movf	_calibCol,w,c	;volatile
 10069  002632  0100               	movlb	0	; () banked
 10070  002634  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10071  002636  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10072  002638  0100               	movlb	0	; () banked
 10073  00263A  90D8               	bcf	status,0,c
 10074  00263C  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10075  00263E  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10076  002640  0100               	movlb	0	; () banked
 10077  002642  90D8               	bcf	status,0,c
 10078  002644  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10079  002646  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10080  002648  0100               	movlb	0	; () banked
 10081  00264A  90D8               	bcf	status,0,c
 10082  00264C  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10083  00264E  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10084  002650  0100               	movlb	0	; () banked
 10085  002652  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10086  002654  0100               	movlb	0	; () banked
 10087  002656  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10088  002658  0100               	movlb	0	; () banked
 10089  00265A  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10090  00265C  0100               	movlb	0	; () banked
 10091  00265E  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10092  002660  0E00               	movlw	low _prCalibTabDef
 10093  002662  0100               	movlb	0	; () banked
 10094  002664  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10095  002666  0E04               	movlw	high _prCalibTabDef
 10096  002668  0100               	movlb	0	; () banked
 10097  00266A  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10098  00266C  0E04               	movlw	4
 10099  00266E  0100               	movlb	0	; () banked
 10100  002670  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10101  002672  0E00               	movlw	0
 10102  002674  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10103  002676  0100               	movlb	0	; () banked
 10104  002678  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10105  00267A  0100               	movlb	0	; () banked
 10106  00267C  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10107  00267E  0100               	movlb	0	; () banked
 10108  002680  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10109  002682  0100               	movlb	0	; () banked
 10110  002684  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10111  002686  50F3               	movf	prodl,w,c
 10112  002688  0100               	movlb	0	; () banked
 10113  00268A  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10114  00268C  6ED9               	movwf	fsr2l,c
 10115  00268E  50F4               	movf	prodh,w,c
 10116  002690  0100               	movlb	0	; () banked
 10117  002692  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10118  002694  6EDA               	movwf	fsr2h,c
 10119  002696  CFDE F090          	movff	postinc2,___set_short_pr_calib@pra
 10120  00269A  CFDE F091          	movff	postinc2,___set_short_pr_calib@pra+1
 10121  00269E  CFDE F092          	movff	postinc2,___set_short_pr_calib@pra+2
 10122  0026A2  CFDE F093          	movff	postinc2,___set_short_pr_calib@pra+3
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;key_menu.c: 734: if(pra!=t32){
 10126  0026A6  0100               	movlb	0	; () banked
 10127  0026A8  5197               	movf	___set_short_pr_calib@t32& (0+255),w,b
 10128  0026AA  0100               	movlb	0	; () banked
 10129  0026AC  1990               	xorwf	___set_short_pr_calib@pra& (0+255),w,b
 10130  0026AE  E110               	bnz	u15100
 10131  0026B0  0100               	movlb	0	; () banked
 10132  0026B2  5198               	movf	(___set_short_pr_calib@t32+1)& (0+255),w,b
 10133  0026B4  0100               	movlb	0	; () banked
 10134  0026B6  1991               	xorwf	(___set_short_pr_calib@pra+1)& (0+255),w,b
 10135  0026B8  E10B               	bnz	u15100
 10136  0026BA  0100               	movlb	0	; () banked
 10137  0026BC  5199               	movf	(___set_short_pr_calib@t32+2)& (0+255),w,b
 10138  0026BE  0100               	movlb	0	; () banked
 10139  0026C0  1992               	xorwf	(___set_short_pr_calib@pra+2)& (0+255),w,b
 10140  0026C2  E106               	bnz	u15100
 10141  0026C4  0100               	movlb	0	; () banked
 10142  0026C6  519A               	movf	(___set_short_pr_calib@t32+3)& (0+255),w,b
 10143  0026C8  0100               	movlb	0	; () banked
 10144  0026CA  1993               	xorwf	(___set_short_pr_calib@pra+3)& (0+255),w,b
 10145  0026CC  B4D8               	btfsc	status,2,c
 10146  0026CE  D0D0               	goto	l15910
 10147  0026D0                     u15100:
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;key_menu.c: 735: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue=t32
      +                          ;
 10151  0026D0  5031               	movf	_calibRow,w,c	;volatile
 10152  0026D2  0D34               	mullw	52
 10153  0026D4  0EFC               	movlw	252
 10154  0026D6  0100               	movlb	0	; () banked
 10155  0026D8  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10156  0026DA  0EFF               	movlw	255
 10157  0026DC  0100               	movlb	0	; () banked
 10158  0026DE  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10159  0026E0  5030               	movf	_calibCol,w,c	;volatile
 10160  0026E2  0100               	movlb	0	; () banked
 10161  0026E4  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10162  0026E6  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10163  0026E8  0100               	movlb	0	; () banked
 10164  0026EA  90D8               	bcf	status,0,c
 10165  0026EC  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10166  0026EE  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10167  0026F0  0100               	movlb	0	; () banked
 10168  0026F2  90D8               	bcf	status,0,c
 10169  0026F4  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10170  0026F6  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10171  0026F8  0100               	movlb	0	; () banked
 10172  0026FA  90D8               	bcf	status,0,c
 10173  0026FC  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10174  0026FE  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10175  002700  0100               	movlb	0	; () banked
 10176  002702  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10177  002704  0100               	movlb	0	; () banked
 10178  002706  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10179  002708  0100               	movlb	0	; () banked
 10180  00270A  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10181  00270C  0100               	movlb	0	; () banked
 10182  00270E  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10183  002710  0E00               	movlw	low _prCalibTabDef
 10184  002712  0100               	movlb	0	; () banked
 10185  002714  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10186  002716  0E04               	movlw	high _prCalibTabDef
 10187  002718  0100               	movlb	0	; () banked
 10188  00271A  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10189  00271C  0E04               	movlw	4
 10190  00271E  0100               	movlb	0	; () banked
 10191  002720  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10192  002722  0E00               	movlw	0
 10193  002724  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10194  002726  0100               	movlb	0	; () banked
 10195  002728  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10196  00272A  0100               	movlb	0	; () banked
 10197  00272C  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10198  00272E  0100               	movlb	0	; () banked
 10199  002730  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10200  002732  0100               	movlb	0	; () banked
 10201  002734  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10202  002736  50F3               	movf	prodl,w,c
 10203  002738  0100               	movlb	0	; () banked
 10204  00273A  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10205  00273C  6ED9               	movwf	fsr2l,c
 10206  00273E  50F4               	movf	prodh,w,c
 10207  002740  0100               	movlb	0	; () banked
 10208  002742  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10209  002744  6EDA               	movwf	fsr2h,c
 10210  002746  C097  FFDE         	movff	___set_short_pr_calib@t32,postinc2
 10211  00274A  C098  FFDE         	movff	___set_short_pr_calib@t32+1,postinc2
 10212  00274E  C099  FFDE         	movff	___set_short_pr_calib@t32+2,postinc2
 10213  002752  C09A  FFDE         	movff	___set_short_pr_calib@t32+3,postinc2
 10214                           
 10215                           ;key_menu.c: 736: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcValue=
      +                          x_prDiffData.pAdcValue;
 10216  002756  5031               	movf	_calibRow,w,c	;volatile
 10217  002758  0D34               	mullw	52
 10218  00275A  0EFC               	movlw	252
 10219  00275C  0100               	movlb	0	; () banked
 10220  00275E  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10221  002760  0EFF               	movlw	255
 10222  002762  0100               	movlb	0	; () banked
 10223  002764  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10224  002766  5030               	movf	_calibCol,w,c	;volatile
 10225  002768  0100               	movlb	0	; () banked
 10226  00276A  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10227  00276C  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10228  00276E  0100               	movlb	0	; () banked
 10229  002770  90D8               	bcf	status,0,c
 10230  002772  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10231  002774  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10232  002776  0100               	movlb	0	; () banked
 10233  002778  90D8               	bcf	status,0,c
 10234  00277A  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10235  00277C  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10236  00277E  0100               	movlb	0	; () banked
 10237  002780  90D8               	bcf	status,0,c
 10238  002782  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10239  002784  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10240  002786  0100               	movlb	0	; () banked
 10241  002788  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10242  00278A  0100               	movlb	0	; () banked
 10243  00278C  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10244  00278E  0100               	movlb	0	; () banked
 10245  002790  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10246  002792  0100               	movlb	0	; () banked
 10247  002794  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10248  002796  0E00               	movlw	low _prCalibTabDef
 10249  002798  0100               	movlb	0	; () banked
 10250  00279A  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10251  00279C  0E04               	movlw	high _prCalibTabDef
 10252  00279E  0100               	movlb	0	; () banked
 10253  0027A0  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10254  0027A2  0E04               	movlw	4
 10255  0027A4  0100               	movlb	0	; () banked
 10256  0027A6  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10257  0027A8  0E00               	movlw	0
 10258  0027AA  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10259  0027AC  0100               	movlb	0	; () banked
 10260  0027AE  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10261  0027B0  0100               	movlb	0	; () banked
 10262  0027B2  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10263  0027B4  0100               	movlb	0	; () banked
 10264  0027B6  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10265  0027B8  0100               	movlb	0	; () banked
 10266  0027BA  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10267  0027BC  50F3               	movf	prodl,w,c
 10268  0027BE  0100               	movlb	0	; () banked
 10269  0027C0  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10270  0027C2  50F4               	movf	prodh,w,c
 10271  0027C4  0100               	movlb	0	; () banked
 10272  0027C6  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10273  0027C8  0E04               	movlw	4
 10274  0027CA  0100               	movlb	0	; () banked
 10275  0027CC  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10276  0027CE  6ED9               	movwf	fsr2l,c
 10277  0027D0  0E00               	movlw	0
 10278  0027D2  0100               	movlb	0	; () banked
 10279  0027D4  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10280  0027D6  6EDA               	movwf	fsr2h,c
 10281  0027D8  C1EC  FFDE         	movff	_x_prDiffData+4,postinc2
 10282  0027DC  C1ED  FFDD         	movff	_x_prDiffData+5,postdec2
 10283                           
 10284                           ;key_menu.c: 737: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcValue=
      +                          x_prDiffData.tAdcValue;
 10285  0027E0  5031               	movf	_calibRow,w,c	;volatile
 10286  0027E2  0D34               	mullw	52
 10287  0027E4  0EFC               	movlw	252
 10288  0027E6  0100               	movlb	0	; () banked
 10289  0027E8  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10290  0027EA  0EFF               	movlw	255
 10291  0027EC  0100               	movlb	0	; () banked
 10292  0027EE  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10293  0027F0  5030               	movf	_calibCol,w,c	;volatile
 10294  0027F2  0100               	movlb	0	; () banked
 10295  0027F4  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10296  0027F6  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10297  0027F8  0100               	movlb	0	; () banked
 10298  0027FA  90D8               	bcf	status,0,c
 10299  0027FC  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10300  0027FE  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10301  002800  0100               	movlb	0	; () banked
 10302  002802  90D8               	bcf	status,0,c
 10303  002804  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10304  002806  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10305  002808  0100               	movlb	0	; () banked
 10306  00280A  90D8               	bcf	status,0,c
 10307  00280C  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10308  00280E  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10309  002810  0100               	movlb	0	; () banked
 10310  002812  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10311  002814  0100               	movlb	0	; () banked
 10312  002816  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10313  002818  0100               	movlb	0	; () banked
 10314  00281A  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10315  00281C  0100               	movlb	0	; () banked
 10316  00281E  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10317  002820  0E00               	movlw	low _prCalibTabDef
 10318  002822  0100               	movlb	0	; () banked
 10319  002824  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10320  002826  0E04               	movlw	high _prCalibTabDef
 10321  002828  0100               	movlb	0	; () banked
 10322  00282A  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10323  00282C  0E04               	movlw	4
 10324  00282E  0100               	movlb	0	; () banked
 10325  002830  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10326  002832  0E00               	movlw	0
 10327  002834  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10328  002836  0100               	movlb	0	; () banked
 10329  002838  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10330  00283A  0100               	movlb	0	; () banked
 10331  00283C  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10332  00283E  0100               	movlb	0	; () banked
 10333  002840  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10334  002842  0100               	movlb	0	; () banked
 10335  002844  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10336  002846  50F3               	movf	prodl,w,c
 10337  002848  0100               	movlb	0	; () banked
 10338  00284A  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10339  00284C  50F4               	movf	prodh,w,c
 10340  00284E  0100               	movlb	0	; () banked
 10341  002850  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10342  002852  0E06               	movlw	6
 10343  002854  0100               	movlb	0	; () banked
 10344  002856  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10345  002858  6ED9               	movwf	fsr2l,c
 10346  00285A  0E00               	movlw	0
 10347  00285C  0100               	movlb	0	; () banked
 10348  00285E  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10349  002860  6EDA               	movwf	fsr2h,c
 10350  002862  C1EE  FFDE         	movff	_x_prDiffData+6,postinc2
 10351  002866  C1EF  FFDD         	movff	_x_prDiffData+7,postdec2
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;key_menu.c: 738: saveFlg=1;
 10355  00286A  0E01               	movlw	1
 10356  00286C  0100               	movlb	0	; () banked
 10357  00286E  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
 10358  002870                     l15910:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;key_menu.c: 739: }
 10362                           ;key_menu.c: 740: }
 10363                           ;key_menu.c: 742: if(saveFlg){
 10364  002870  0100               	movlb	0	; () banked
 10365  002872  5196               	movf	___set_short_pr_calib@saveFlg& (0+255),w,b
 10366  002874  0100               	movlb	0	; () banked
 10367  002876  B4D8               	btfsc	status,2,c
 10368  002878  D02A               	goto	l15918
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;key_menu.c: 743: t16=sizeof(prCalibTabDef);
 10372  00287A  0E00               	movlw	0
 10373  00287C  0100               	movlb	0	; () banked
 10374  00287E  6F9C               	movwf	(___set_short_pr_calib@t16+1)& (0+255),b
 10375  002880  0EA2               	movlw	162
 10376  002882  6F9B               	movwf	___set_short_pr_calib@t16& (0+255),b
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;key_menu.c: 744: crc_append((uint8_t*)&prCalibTabDef,t16-2);
 10380  002884  0E00               	movlw	low _prCalibTabDef
 10381  002886  0100               	movlb	0	; () banked
 10382  002888  6F6C               	movwf	crc_append@message& (0+255),b
 10383  00288A  0E04               	movlw	high _prCalibTabDef
 10384  00288C  0100               	movlb	0	; () banked
 10385  00288E  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 10386  002890  0EFE               	movlw	254
 10387  002892  0100               	movlb	0	; () banked
 10388  002894  259B               	addwf	___set_short_pr_calib@t16& (0+255),w,b
 10389  002896  0100               	movlb	0	; () banked
 10390  002898  6F6E               	movwf	crc_append@n& (0+255),b
 10391  00289A  0EFF               	movlw	255
 10392  00289C  0100               	movlb	0	; () banked
 10393  00289E  219C               	addwfc	(___set_short_pr_calib@t16+1)& (0+255),w,b
 10394  0028A0  0100               	movlb	0	; () banked
 10395  0028A2  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 10396  0028A4  EC14  F044         	call	_crc_append	;wreg free
 10397                           
 10398                           ;key_menu.c: 745: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&prCalibTabDef,t16)
      +                          ;
 10399  0028A8  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 10400  0028AC  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 10401  0028B0  0E00               	movlw	0
 10402  0028B2  0100               	movlb	0	; () banked
 10403  0028B4  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 10404  0028B6  0E00               	movlw	low _prCalibTabDef
 10405  0028B8  0100               	movlb	0	; () banked
 10406  0028BA  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 10407  0028BC  0E04               	movlw	high _prCalibTabDef
 10408  0028BE  0100               	movlb	0	; () banked
 10409  0028C0  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 10410  0028C2  C09B  F06B         	movff	___set_short_pr_calib@t16,at24c02_write_n_byte@len
 10411  0028C6  C09C  F06C         	movff	___set_short_pr_calib@t16+1,at24c02_write_n_byte@len+1
 10412  0028CA  ECC9  F029         	call	_at24c02_write_n_byte	;wreg free
 10413  0028CE                     l15918:
 10414                           
 10415                           ;key_menu.c: 746: }
 10416                           ;key_menu.c: 747: if(gohome){__exit_menu_to_home_unsave(); return;}
 10417  0028CE  0100               	movlb	0	; () banked
 10418  0028D0  5194               	movf	___set_short_pr_calib@gohome& (0+255),w,b
 10419  0028D2  0100               	movlb	0	; () banked
 10420  0028D4  B4D8               	btfsc	status,2,c
 10421  0028D6  D003               	goto	l15924
 10422                           
 10423                           ; BSR set to: 0
 10424  0028D8  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 10425  0028DC  0012               	return	
 10426  0028DE                     l15924:
 10427                           
 10428                           ;key_menu.c: 748: calibCol++;
 10429  0028DE  2A30               	incf	_calibCol,f,c	;volatile
 10430                           
 10431                           ;key_menu.c: 749: if(calibCol>prCalibTabDef.prCalibRow[calibRow].pCount){
 10432  0028E0  5031               	movf	_calibRow,w,c	;volatile
 10433  0028E2  0D34               	mullw	52
 10434  0028E4  0E04               	movlw	low (_prCalibTabDef+4)
 10435  0028E6  24F3               	addwf	prodl,w,c
 10436  0028E8  6ED9               	movwf	fsr2l,c
 10437  0028EA  0E04               	movlw	high (_prCalibTabDef+4)
 10438  0028EC  20F4               	addwfc	prodh,w,c
 10439  0028EE  6EDA               	movwf	fsr2h,c
 10440  0028F0  5030               	movf	_calibCol,w,c	;volatile
 10441  0028F2  5CDE               	subwf	postinc2,w,c
 10442  0028F4  B0D8               	btfsc	status,0,c
 10443  0028F6  D002               	goto	l15930
 10444                           
 10445                           ;key_menu.c: 750: calibCol=0;
 10446  0028F8  0E00               	movlw	0
 10447  0028FA  6E30               	movwf	_calibCol,c	;volatile
 10448  0028FC                     l15930:
 10449                           
 10450                           ;key_menu.c: 753: }
 10451                           ;key_menu.c: 754: __enter_menu_calib_press(0,calibCol);
 10452  0028FC  C030  F020         	movff	_calibCol,___enter_menu_calib_press@col	;volatile
 10453  002900  0E00               	movlw	0
 10454  002902  EC65  F02C         	call	___enter_menu_calib_press
 10455  002906  0012               	return		;funcret
 10456  002908                     __end_of___set_short_pr_calib:
 10457                           	opt stack 0
 10458                           tblptru	equ	0xFF8
 10459                           tblptrh	equ	0xFF7
 10460                           tblptrl	equ	0xFF6
 10461                           tablat	equ	0xFF5
 10462                           prodh	equ	0xFF4
 10463                           prodl	equ	0xFF3
 10464                           intcon	equ	0xFF2
 10465                           postinc0	equ	0xFEE
 10466                           wreg	equ	0xFE8
 10467                           indf1	equ	0xFE7
 10468                           postinc1	equ	0xFE6
 10469                           postdec1	equ	0xFE5
 10470                           plusw1	equ	0xFE3
 10471                           fsr1h	equ	0xFE2
 10472                           fsr1l	equ	0xFE1
 10473                           indf2	equ	0xFDF
 10474                           postinc2	equ	0xFDE
 10475                           postdec2	equ	0xFDD
 10476                           plusw2	equ	0xFDB
 10477                           fsr2h	equ	0xFDA
 10478                           fsr2l	equ	0xFD9
 10479                           status	equ	0xFD8
 10480                           
 10481 ;; *************** function ___enter_menu_calib_press *****************
 10482 ;; Defined at:
 10483 ;;		line 218 in file "src/api/key_menu.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  row             1    wreg     unsigned char 
 10486 ;;  col             1   31[COMRAM] unsigned char 
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  row             1   35[BANK0 ] unsigned char 
 10489 ;;  t32             4   38[BANK0 ] long 
 10490 ;;  stp             2   36[BANK0 ] PTR struct .
 10491 ;;		 -> prCalibTabDef(162), 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;Total ram usage:       14 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    6
 10508 ;; This function calls:
 10509 ;;		___int32_2_mflot32
 10510 ;; This function is called by:
 10511 ;;		_key_process_set_down_long
 10512 ;;		___set_short_pr_calib
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text53
 10517  0058CA                     __ptext53:
 10518                           	opt stack 0
 10519  0058CA                     ___enter_menu_calib_press:
 10520                           	opt stack 21
 10521                           
 10522                           ;incstack = 0
 10523                           ;___enter_menu_calib_press@row stored from wreg
 10524  0058CA  0100               	movlb	0	; () banked
 10525  0058CC  6F83               	movwf	___enter_menu_calib_press@row& (0+255),b
 10526                           
 10527                           ;key_menu.c: 221: int32_t t32;
 10528                           ;key_menu.c: 222: st_prCalibTabDef* stp;
 10529                           ;key_menu.c: 224: menu=0x60;
 10530  0058CE  0E60               	movlw	96
 10531  0058D0  6E33               	movwf	_menu,c	;volatile
 10532                           
 10533                           ;key_menu.c: 225: subMenu=0;
 10534  0058D2  0E00               	movlw	0
 10535  0058D4  6E32               	movwf	_subMenu,c	;volatile
 10536                           
 10537                           ;key_menu.c: 226: calibRow=row;
 10538  0058D6  C083  F031         	movff	___enter_menu_calib_press@row,_calibRow	;volatile
 10539                           
 10540                           ;key_menu.c: 227: calibCol=col;
 10541  0058DA  C020  F030         	movff	___enter_menu_calib_press@col,_calibCol	;volatile
 10542                           
 10543                           ;key_menu.c: 228: stp=(st_prCalibTabDef*)(&prCalibTabDef);
 10544  0058DE  0E00               	movlw	low _prCalibTabDef
 10545  0058E0  0100               	movlb	0	; () banked
 10546  0058E2  6F84               	movwf	___enter_menu_calib_press@stp& (0+255),b
 10547  0058E4  0E04               	movlw	high _prCalibTabDef
 10548  0058E6  0100               	movlb	0	; () banked
 10549  0058E8  6F85               	movwf	(___enter_menu_calib_press@stp+1)& (0+255),b
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;key_menu.c: 229: if(col==0){
 10553  0058EA  5020               	movf	___enter_menu_calib_press@col,w,c
 10554  0058EC  A4D8               	btfss	status,2,c
 10555  0058EE  D012               	goto	l15132
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;key_menu.c: 230: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 10559  0058F0  0100               	movlb	0	; () banked
 10560  0058F2  5183               	movf	___enter_menu_calib_press@row& (0+255),w,b
 10561  0058F4  0D34               	mullw	52
 10562  0058F6  0E04               	movlw	4
 10563  0058F8  26F3               	addwf	prodl,f,c
 10564  0058FA  0E00               	movlw	0
 10565  0058FC  22F4               	addwfc	prodh,f,c
 10566  0058FE  50F3               	movf	prodl,w,c
 10567  005900  0100               	movlb	0	; () banked
 10568  005902  2584               	addwf	___enter_menu_calib_press@stp& (0+255),w,b
 10569  005904  6ED9               	movwf	fsr2l,c
 10570  005906  50F4               	movf	prodh,w,c
 10571  005908  0100               	movlb	0	; () banked
 10572  00590A  2185               	addwfc	(___enter_menu_calib_press@stp+1)& (0+255),w,b
 10573  00590C  6EDA               	movwf	fsr2h,c
 10574  00590E  50DF               	movf	indf2,w,c
 10575  005910  6E39               	movwf	_adjValue,c
 10576                           
 10577                           ;key_menu.c: 231: }else{
 10578  005912  D05A               	goto	l15138
 10579  005914                     l15132:
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;key_menu.c: 232: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 10583  005914  0EFC               	movlw	252
 10584  005916  0100               	movlb	0	; () banked
 10585  005918  6F7D               	movwf	??___enter_menu_calib_press& (0+255),b
 10586  00591A  0EFF               	movlw	255
 10587  00591C  0100               	movlb	0	; () banked
 10588  00591E  6F7E               	movwf	(??___enter_menu_calib_press+1)& (0+255),b
 10589  005920  5030               	movf	_calibCol,w,c	;volatile
 10590  005922  0100               	movlb	0	; () banked
 10591  005924  6F7F               	movwf	(??___enter_menu_calib_press+2)& (0+255),b
 10592  005926  6B80               	clrf	(??___enter_menu_calib_press+3)& (0+255),b
 10593  005928  0100               	movlb	0	; () banked
 10594  00592A  90D8               	bcf	status,0,c
 10595  00592C  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10596  00592E  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10597  005930  0100               	movlb	0	; () banked
 10598  005932  90D8               	bcf	status,0,c
 10599  005934  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10600  005936  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10601  005938  0100               	movlb	0	; () banked
 10602  00593A  90D8               	bcf	status,0,c
 10603  00593C  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10604  00593E  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10605  005940  0100               	movlb	0	; () banked
 10606  005942  517D               	movf	??___enter_menu_calib_press& (0+255),w,b
 10607  005944  0100               	movlb	0	; () banked
 10608  005946  277F               	addwf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10609  005948  0100               	movlb	0	; () banked
 10610  00594A  517E               	movf	(??___enter_menu_calib_press+1)& (0+255),w,b
 10611  00594C  0100               	movlb	0	; () banked
 10612  00594E  2380               	addwfc	(??___enter_menu_calib_press+3)& (0+255),f,b
 10613  005950  5031               	movf	_calibRow,w,c	;volatile
 10614  005952  0D34               	mullw	52
 10615  005954  0E04               	movlw	4
 10616  005956  26F3               	addwf	prodl,f,c
 10617  005958  0E00               	movlw	0
 10618  00595A  22F4               	addwfc	prodh,f,c
 10619  00595C  C084  F081         	movff	___enter_menu_calib_press@stp,??___enter_menu_calib_press+4
 10620  005960  C085  F082         	movff	___enter_menu_calib_press@stp+1,??___enter_menu_calib_press+5
 10621  005964  50F3               	movf	prodl,w,c
 10622  005966  0100               	movlb	0	; () banked
 10623  005968  2781               	addwf	(??___enter_menu_calib_press+4)& (0+255),f,b
 10624  00596A  50F4               	movf	prodh,w,c
 10625  00596C  0100               	movlb	0	; () banked
 10626  00596E  2382               	addwfc	(??___enter_menu_calib_press+5)& (0+255),f,b
 10627  005970  0100               	movlb	0	; () banked
 10628  005972  517F               	movf	(??___enter_menu_calib_press+2)& (0+255),w,b
 10629  005974  0100               	movlb	0	; () banked
 10630  005976  2581               	addwf	(??___enter_menu_calib_press+4)& (0+255),w,b
 10631  005978  6ED9               	movwf	fsr2l,c
 10632  00597A  0100               	movlb	0	; () banked
 10633  00597C  5180               	movf	(??___enter_menu_calib_press+3)& (0+255),w,b
 10634  00597E  0100               	movlb	0	; () banked
 10635  005980  2182               	addwfc	(??___enter_menu_calib_press+5)& (0+255),w,b
 10636  005982  6EDA               	movwf	fsr2h,c
 10637  005984  CFDE F086          	movff	postinc2,___enter_menu_calib_press@t32
 10638  005988  CFDE F087          	movff	postinc2,___enter_menu_calib_press@t32+1
 10639  00598C  CFDE F088          	movff	postinc2,___enter_menu_calib_press@t32+2
 10640  005990  CFDE F089          	movff	postinc2,___enter_menu_calib_press@t32+3
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;key_menu.c: 233: t32=__int32_2_mflot32(t32);
 10644  005994  C086  F06D         	movff	___enter_menu_calib_press@t32,___int32_2_mflot32@x
 10645  005998  C087  F06E         	movff	___enter_menu_calib_press@t32+1,___int32_2_mflot32@x+1
 10646  00599C  C088  F06F         	movff	___enter_menu_calib_press@t32+2,___int32_2_mflot32@x+2
 10647  0059A0  C089  F070         	movff	___enter_menu_calib_press@t32+3,___int32_2_mflot32@x+3
 10648  0059A4  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 10649  0059A8  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press@t32
 10650  0059AC  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press@t32+1
 10651  0059B0  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press@t32+2
 10652  0059B4  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press@t32+3
 10653                           
 10654                           ;key_menu.c: 234: m_floatAdj.t32=t32;
 10655  0059B8  C086  F035         	movff	___enter_menu_calib_press@t32,_m_floatAdj
 10656  0059BC  C087  F036         	movff	___enter_menu_calib_press@t32+1,_m_floatAdj+1
 10657  0059C0  C088  F037         	movff	___enter_menu_calib_press@t32+2,_m_floatAdj+2
 10658  0059C4  C089  F038         	movff	___enter_menu_calib_press@t32+3,_m_floatAdj+3
 10659  0059C8                     l15138:
 10660                           
 10661                           ;key_menu.c: 235: }
 10662                           ;key_menu.c: 236: adjLocation=0;
 10663  0059C8  0E00               	movlw	0
 10664  0059CA  6E3F               	movwf	_adjLocation,c	;volatile
 10665  0059CC  0012               	return		;funcret
 10666  0059CE                     __end_of___enter_menu_calib_press:
 10667                           	opt stack 0
 10668                           tblptru	equ	0xFF8
 10669                           tblptrh	equ	0xFF7
 10670                           tblptrl	equ	0xFF6
 10671                           tablat	equ	0xFF5
 10672                           prodh	equ	0xFF4
 10673                           prodl	equ	0xFF3
 10674                           intcon	equ	0xFF2
 10675                           postinc0	equ	0xFEE
 10676                           wreg	equ	0xFE8
 10677                           indf1	equ	0xFE7
 10678                           postinc1	equ	0xFE6
 10679                           postdec1	equ	0xFE5
 10680                           plusw1	equ	0xFE3
 10681                           fsr1h	equ	0xFE2
 10682                           fsr1l	equ	0xFE1
 10683                           indf2	equ	0xFDF
 10684                           postinc2	equ	0xFDE
 10685                           postdec2	equ	0xFDD
 10686                           plusw2	equ	0xFDB
 10687                           fsr2h	equ	0xFDA
 10688                           fsr2l	equ	0xFD9
 10689                           status	equ	0xFD8
 10690                           
 10691 ;; *************** function ___set_short_pose_size *****************
 10692 ;; Defined at:
 10693 ;;		line 644 in file "src/api/key_menu.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  gohome          1    wreg     unsigned char 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  gohome          1    0[BANK3 ] unsigned char 
 10698 ;;  t32             4    3[BANK3 ] long 
 10699 ;;  stp             2    7[BANK3 ] PTR struct .
 10700 ;;		 -> stSysData(240), 
 10701 ;;  p               2    1[BANK3 ] PTR unsigned char 
 10702 ;;		 -> adjValue(4), 
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;      Totals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;Total ram usage:        9 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    8
 10719 ;; This function calls:
 10720 ;;		___enter_menu_set_d
 10721 ;;		___enter_menu_set_h
 10722 ;;		___enter_menu_set_pose_size
 10723 ;;		___exit_menu_to_home_unsave
 10724 ;;		___mflot32_2_int32
 10725 ;;		___sys_data_save_write_flash
 10726 ;; This function is called by:
 10727 ;;		_key_process_set_long
 10728 ;;		_key_process_set
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text54
 10733  0055B4                     __ptext54:
 10734                           	opt stack 0
 10735  0055B4                     ___set_short_pose_size:
 10736                           	opt stack 20
 10737                           
 10738                           ;incstack = 0
 10739                           ;___set_short_pose_size@gohome stored from wreg
 10740  0055B4  0103               	movlb	3	; () banked
 10741  0055B6  6FCA               	movwf	___set_short_pose_size@gohome& (0+255),b
 10742                           
 10743                           ;key_menu.c: 646: uint8_t* p;
 10744                           ;key_menu.c: 647: int32_t t32;
 10745                           ;key_menu.c: 650: st_sysDataDef* stp=&stSysData;
 10746  0055B8  0E00               	movlw	low _stSysData
 10747  0055BA  0103               	movlb	3	; () banked
 10748  0055BC  6FD1               	movwf	___set_short_pose_size@stp& (0+255),b
 10749  0055BE  0E02               	movlw	high _stSysData
 10750  0055C0  0103               	movlb	3	; () banked
 10751  0055C2  6FD2               	movwf	(___set_short_pose_size@stp+1)& (0+255),b
 10752                           
 10753                           ;key_menu.c: 651: switch(subMenu){
 10754  0055C4  D04C               	goto	l15808
 10755  0055C6                     l15794:
 10756                           
 10757                           ; BSR set to: 3
 10758                           ;key_menu.c: 653: p=(uint8_t*)(&adjValue);
 10759  0055C6  0E39               	movlw	low _adjValue
 10760  0055C8  0103               	movlb	3	; () banked
 10761  0055CA  6FCB               	movwf	___set_short_pose_size@p& (0+255),b
 10762  0055CC  0E00               	movlw	high _adjValue
 10763  0055CE  0103               	movlb	3	; () banked
 10764  0055D0  6FCC               	movwf	(___set_short_pose_size@p+1)& (0+255),b
 10765                           
 10766                           ; BSR set to: 3
 10767                           ;key_menu.c: 654: stp->pos=(*p);
 10768  0055D2  C3CB  FFD9         	movff	___set_short_pose_size@p,fsr2l
 10769  0055D6  C3CC  FFDA         	movff	___set_short_pose_size@p+1,fsr2h
 10770  0055DA  0103               	movlb	3	; () banked
 10771  0055DC  EE10 F004          	lfsr	1,4
 10772  0055E0  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10773  0055E2  26E1               	addwf	fsr1l,f,c
 10774  0055E4  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10775  0055E6  22E2               	addwfc	fsr1h,f,c
 10776  0055E8  CFDF FFE7          	movff	indf2,indf1
 10777                           
 10778                           ;key_menu.c: 655: break;
 10779  0055EC  D042               	goto	l15810
 10780  0055EE                     l15798:
 10781                           
 10782                           ; BSR set to: 3
 10783                           ;key_menu.c: 657: t32=__mflot32_2_int32(m_floatAdj.t32);
 10784  0055EE  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10785  0055F2  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10786  0055F6  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10787  0055FA  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10788  0055FE  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 10789  005602  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10790  005606  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10791  00560A  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10792  00560E  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10793                           
 10794                           ;key_menu.c: 658: stp->h=t32;
 10795  005612  0103               	movlb	3	; () banked
 10796  005614  EE20 F008          	lfsr	2,8
 10797  005618  D015               	goto	L3
 10798  00561A                     l15802:
 10799                           
 10800                           ; BSR set to: 3
 10801                           ;key_menu.c: 661: t32=__mflot32_2_int32(m_floatAdj.t32);
 10802  00561A  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10803  00561E  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10804  005622  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10805  005626  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10806  00562A  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 10807  00562E  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10808  005632  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10809  005636  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10810  00563A  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10811                           
 10812                           ;key_menu.c: 662: stp->d=t32;
 10813  00563E  0103               	movlb	3	; () banked
 10814  005640  EE20 F00C          	lfsr	2,12
 10815  005644                     L3:
 10816  005644  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10817  005646  26D9               	addwf	fsr2l,f,c
 10818  005648  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10819  00564A  22DA               	addwfc	fsr2h,f,c
 10820  00564C  C3CD  FFDE         	movff	___set_short_pose_size@t32,postinc2
 10821  005650  C3CE  FFDE         	movff	___set_short_pose_size@t32+1,postinc2
 10822  005654  C3CF  FFDE         	movff	___set_short_pose_size@t32+2,postinc2
 10823  005658  C3D0  FFDE         	movff	___set_short_pose_size@t32+3,postinc2
 10824                           
 10825                           ; BSR set to: 3
 10826                           ;key_menu.c: 664: }
 10827                           
 10828                           ;key_menu.c: 663: break;
 10829  00565C  D00A               	goto	l15810
 10830  00565E                     l15808:
 10831                           
 10832                           ; BSR set to: 3
 10833  00565E  5032               	movf	_subMenu,w,c	;volatile
 10834                           
 10835                           ; Switch size 1, requested type "space"
 10836                           ; Number of cases is 3, Range of values is 0 to 2
 10837                           ; switch strategies available:
 10838                           ; Name         Instructions Cycles
 10839                           ; simple_byte           10     6 (average)
 10840                           ;	Chosen strategy is simple_byte
 10841  005660  0A00               	xorlw	0	; case 0
 10842  005662  B4D8               	btfsc	status,2,c
 10843  005664  D7B0               	goto	l15794
 10844  005666  0A01               	xorlw	1	; case 1
 10845  005668  B4D8               	btfsc	status,2,c
 10846  00566A  D7C1               	goto	l15798
 10847  00566C  0A03               	xorlw	3	; case 2
 10848  00566E  B4D8               	btfsc	status,2,c
 10849  005670  D7D4               	goto	l15802
 10850  005672                     l15810:
 10851                           
 10852                           ; BSR set to: 3
 10853                           ;key_menu.c: 665: if(gohome){__exit_menu_to_home_unsave(); return;}
 10854  005672  0103               	movlb	3	; () banked
 10855  005674  51CA               	movf	___set_short_pose_size@gohome& (0+255),w,b
 10856  005676  0103               	movlb	3	; () banked
 10857  005678  B4D8               	btfsc	status,2,c
 10858  00567A  D003               	goto	l15816
 10859                           
 10860                           ; BSR set to: 3
 10861  00567C  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 10862  005680  0012               	return	
 10863  005682                     l15816:
 10864                           
 10865                           ;key_menu.c: 666: __sys_data_save_write_flash();
 10866  005682  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
 10867                           
 10868                           ;key_menu.c: 667: subMenu++;
 10869  005686  2A32               	incf	_subMenu,f,c	;volatile
 10870                           
 10871                           ;key_menu.c: 668: if(subMenu>0x02)subMenu=0x00;
 10872  005688  0E02               	movlw	2
 10873  00568A  6432               	cpfsgt	_subMenu,c	;volatile
 10874  00568C  D00C               	goto	l15832
 10875  00568E  0E00               	movlw	0
 10876  005690  6E32               	movwf	_subMenu,c	;volatile
 10877                           
 10878                           ;key_menu.c: 669: switch(subMenu){
 10879  005692  D009               	goto	l15832
 10880  005694                     l15824:
 10881  005694  EC88  F049         	call	___enter_menu_set_pose_size	;wreg free
 10882  005698  0012               	return	
 10883  00569A                     l15826:
 10884  00569A  EC14  F043         	call	___enter_menu_set_h	;wreg free
 10885  00569E  0012               	return	
 10886  0056A0                     l15828:
 10887  0056A0  EC48  F043         	call	___enter_menu_set_d	;wreg free
 10888                           
 10889                           ;key_menu.c: 674: }
 10890                           
 10891                           ;key_menu.c: 673: default:break;
 10892  0056A4  0012               	return	
 10893  0056A6                     l15832:
 10894  0056A6  5032               	movf	_subMenu,w,c	;volatile
 10895                           
 10896                           ; Switch size 1, requested type "space"
 10897                           ; Number of cases is 3, Range of values is 0 to 2
 10898                           ; switch strategies available:
 10899                           ; Name         Instructions Cycles
 10900                           ; simple_byte           10     6 (average)
 10901                           ;	Chosen strategy is simple_byte
 10902  0056A8  0A00               	xorlw	0	; case 0
 10903  0056AA  B4D8               	btfsc	status,2,c
 10904  0056AC  D7F3               	goto	l15824
 10905  0056AE  0A01               	xorlw	1	; case 1
 10906  0056B0  B4D8               	btfsc	status,2,c
 10907  0056B2  D7F3               	goto	l15826
 10908  0056B4  0A03               	xorlw	3	; case 2
 10909  0056B6  A4D8               	btfss	status,2,c
 10910  0056B8  0012               	return	
 10911  0056BA  D7F2               	goto	l15828
 10912  0056BC                     __end_of___set_short_pose_size:
 10913                           	opt stack 0
 10914                           tblptru	equ	0xFF8
 10915                           tblptrh	equ	0xFF7
 10916                           tblptrl	equ	0xFF6
 10917                           tablat	equ	0xFF5
 10918                           prodh	equ	0xFF4
 10919                           prodl	equ	0xFF3
 10920                           intcon	equ	0xFF2
 10921                           postinc0	equ	0xFEE
 10922                           wreg	equ	0xFE8
 10923                           indf1	equ	0xFE7
 10924                           postinc1	equ	0xFE6
 10925                           postdec1	equ	0xFE5
 10926                           plusw1	equ	0xFE3
 10927                           fsr1h	equ	0xFE2
 10928                           fsr1l	equ	0xFE1
 10929                           indf2	equ	0xFDF
 10930                           postinc2	equ	0xFDE
 10931                           postdec2	equ	0xFDD
 10932                           plusw2	equ	0xFDB
 10933                           fsr2h	equ	0xFDA
 10934                           fsr2l	equ	0xFD9
 10935                           status	equ	0xFD8
 10936                           
 10937 ;; *************** function ___enter_menu_set_pose_size *****************
 10938 ;; Defined at:
 10939 ;;		line 126 in file "src/api/key_menu.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;		None
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  fps             2    0[BANK0 ] PTR struct .
 10944 ;;		 -> stSysData(240), 
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;Total ram usage:        2 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; Hardware stack levels required when called:    4
 10961 ;; This function calls:
 10962 ;;		Nothing
 10963 ;; This function is called by:
 10964 ;;		_key_process_set_down_long
 10965 ;;		___set_short_pose_size
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text55
 10970  009310                     __ptext55:
 10971                           	opt stack 0
 10972  009310                     ___enter_menu_set_pose_size:
 10973                           	opt stack 23
 10974                           
 10975                           ;key_menu.c: 128: menu=0x30;
 10976                           
 10977                           ;incstack = 0
 10978  009310  0E30               	movlw	48
 10979  009312  6E33               	movwf	_menu,c	;volatile
 10980                           
 10981                           ;key_menu.c: 129: subMenu=0x00;
 10982  009314  0E00               	movlw	0
 10983  009316  6E32               	movwf	_subMenu,c	;volatile
 10984                           
 10985                           ;key_menu.c: 131: st_sysDataDef* fps= &stSysData;
 10986  009318  0E00               	movlw	low _stSysData
 10987  00931A  0100               	movlb	0	; () banked
 10988  00931C  6F60               	movwf	___enter_menu_set_pose_size@fps& (0+255),b
 10989  00931E  0E02               	movlw	high _stSysData
 10990  009320  0100               	movlb	0	; () banked
 10991  009322  6F61               	movwf	(___enter_menu_set_pose_size@fps+1)& (0+255),b
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;key_menu.c: 132: adjValue=0x00ul;
 10995  009324  0E00               	movlw	0
 10996  009326  6E39               	movwf	_adjValue,c	;volatile
 10997  009328  0E00               	movlw	0
 10998  00932A  6E3A               	movwf	_adjValue+1,c	;volatile
 10999  00932C  0E00               	movlw	0
 11000  00932E  6E3B               	movwf	_adjValue+2,c	;volatile
 11001  009330  0E00               	movlw	0
 11002  009332  6E3C               	movwf	_adjValue+3,c	;volatile
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;key_menu.c: 133: *((uint8_t*)(&adjValue))=(uint8_t)(fps->pos);
 11006  009334  0100               	movlb	0	; () banked
 11007  009336  EE20 F004          	lfsr	2,4
 11008  00933A  5160               	movf	___enter_menu_set_pose_size@fps& (0+255),w,b
 11009  00933C  26D9               	addwf	fsr2l,f,c
 11010  00933E  5161               	movf	(___enter_menu_set_pose_size@fps+1)& (0+255),w,b
 11011  009340  22DA               	addwfc	fsr2h,f,c
 11012  009342  50DF               	movf	indf2,w,c
 11013  009344  6E39               	movwf	_adjValue,c
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;key_menu.c: 134: adjLocation=0;
 11017  009346  0E00               	movlw	0
 11018  009348  6E3F               	movwf	_adjLocation,c	;volatile
 11019                           
 11020                           ; BSR set to: 0
 11021  00934A  0012               	return		;funcret
 11022  00934C                     __end_of___enter_menu_set_pose_size:
 11023                           	opt stack 0
 11024                           tblptru	equ	0xFF8
 11025                           tblptrh	equ	0xFF7
 11026                           tblptrl	equ	0xFF6
 11027                           tablat	equ	0xFF5
 11028                           prodh	equ	0xFF4
 11029                           prodl	equ	0xFF3
 11030                           intcon	equ	0xFF2
 11031                           postinc0	equ	0xFEE
 11032                           wreg	equ	0xFE8
 11033                           indf1	equ	0xFE7
 11034                           postinc1	equ	0xFE6
 11035                           postdec1	equ	0xFE5
 11036                           plusw1	equ	0xFE3
 11037                           fsr1h	equ	0xFE2
 11038                           fsr1l	equ	0xFE1
 11039                           indf2	equ	0xFDF
 11040                           postinc2	equ	0xFDE
 11041                           postdec2	equ	0xFDD
 11042                           plusw2	equ	0xFDB
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function ___enter_menu_set_h *****************
 11048 ;; Defined at:
 11049 ;;		line 148 in file "src/api/key_menu.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  t32             4   31[BANK0 ] long 
 11054 ;;  fps             2   29[BANK0 ] PTR struct .
 11055 ;;		 -> stSysData(240), 
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;Total ram usage:        6 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    6
 11072 ;; This function calls:
 11073 ;;		___int32_2_mflot32
 11074 ;; This function is called by:
 11075 ;;		___set_short_pose_size
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text56
 11080  008628                     __ptext56:
 11081                           	opt stack 0
 11082  008628                     ___enter_menu_set_h:
 11083                           	opt stack 21
 11084                           
 11085                           ;key_menu.c: 149: int32_t t32;
 11086                           ;key_menu.c: 150: subMenu=0x01;
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;incstack = 0
 11090  008628  0E01               	movlw	1
 11091  00862A  6E32               	movwf	_subMenu,c	;volatile
 11092                           
 11093                           ;key_menu.c: 152: st_sysDataDef* fps= &stSysData;
 11094  00862C  0E00               	movlw	low _stSysData
 11095  00862E  0100               	movlb	0	; () banked
 11096  008630  6F7D               	movwf	___enter_menu_set_h@fps& (0+255),b
 11097  008632  0E02               	movlw	high _stSysData
 11098  008634  0100               	movlb	0	; () banked
 11099  008636  6F7E               	movwf	(___enter_menu_set_h@fps+1)& (0+255),b
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;key_menu.c: 153: t32=(fps->h);
 11103  008638  0100               	movlb	0	; () banked
 11104  00863A  EE20 F008          	lfsr	2,8
 11105  00863E  517D               	movf	___enter_menu_set_h@fps& (0+255),w,b
 11106  008640  26D9               	addwf	fsr2l,f,c
 11107  008642  517E               	movf	(___enter_menu_set_h@fps+1)& (0+255),w,b
 11108  008644  22DA               	addwfc	fsr2h,f,c
 11109  008646  CFDE F07F          	movff	postinc2,___enter_menu_set_h@t32
 11110  00864A  CFDE F080          	movff	postinc2,___enter_menu_set_h@t32+1
 11111  00864E  CFDE F081          	movff	postinc2,___enter_menu_set_h@t32+2
 11112  008652  CFDE F082          	movff	postinc2,___enter_menu_set_h@t32+3
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;key_menu.c: 154: t32=__int32_2_mflot32(t32);
 11116  008656  C07F  F06D         	movff	___enter_menu_set_h@t32,___int32_2_mflot32@x
 11117  00865A  C080  F06E         	movff	___enter_menu_set_h@t32+1,___int32_2_mflot32@x+1
 11118  00865E  C081  F06F         	movff	___enter_menu_set_h@t32+2,___int32_2_mflot32@x+2
 11119  008662  C082  F070         	movff	___enter_menu_set_h@t32+3,___int32_2_mflot32@x+3
 11120  008666  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 11121  00866A  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_h@t32
 11122  00866E  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_h@t32+1
 11123  008672  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_h@t32+2
 11124  008676  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_h@t32+3
 11125                           
 11126                           ;key_menu.c: 155: m_floatAdj.t32=t32;
 11127  00867A  C07F  F035         	movff	___enter_menu_set_h@t32,_m_floatAdj
 11128  00867E  C080  F036         	movff	___enter_menu_set_h@t32+1,_m_floatAdj+1
 11129  008682  C081  F037         	movff	___enter_menu_set_h@t32+2,_m_floatAdj+2
 11130  008686  C082  F038         	movff	___enter_menu_set_h@t32+3,_m_floatAdj+3
 11131                           
 11132                           ;key_menu.c: 156: adjLocation=0;
 11133  00868A  0E00               	movlw	0
 11134  00868C  6E3F               	movwf	_adjLocation,c	;volatile
 11135  00868E  0012               	return		;funcret
 11136  008690                     __end_of___enter_menu_set_h:
 11137                           	opt stack 0
 11138                           tblptru	equ	0xFF8
 11139                           tblptrh	equ	0xFF7
 11140                           tblptrl	equ	0xFF6
 11141                           tablat	equ	0xFF5
 11142                           prodh	equ	0xFF4
 11143                           prodl	equ	0xFF3
 11144                           intcon	equ	0xFF2
 11145                           postinc0	equ	0xFEE
 11146                           wreg	equ	0xFE8
 11147                           indf1	equ	0xFE7
 11148                           postinc1	equ	0xFE6
 11149                           postdec1	equ	0xFE5
 11150                           plusw1	equ	0xFE3
 11151                           fsr1h	equ	0xFE2
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           plusw2	equ	0xFDB
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function ___enter_menu_set_d *****************
 11162 ;; Defined at:
 11163 ;;		line 137 in file "src/api/key_menu.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;		None
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  t32             4   31[BANK0 ] long 
 11168 ;;  fps             2   29[BANK0 ] PTR struct .
 11169 ;;		 -> stSysData(240), 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11180 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;Total ram usage:        6 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    6
 11186 ;; This function calls:
 11187 ;;		___int32_2_mflot32
 11188 ;; This function is called by:
 11189 ;;		___set_short_pose_size
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text57
 11194  008690                     __ptext57:
 11195                           	opt stack 0
 11196  008690                     ___enter_menu_set_d:
 11197                           	opt stack 21
 11198                           
 11199                           ;key_menu.c: 138: int32_t t32;
 11200                           ;key_menu.c: 139: subMenu=0x02;
 11201                           
 11202                           ;incstack = 0
 11203  008690  0E02               	movlw	2
 11204  008692  6E32               	movwf	_subMenu,c	;volatile
 11205                           
 11206                           ;key_menu.c: 141: st_sysDataDef* fps= &stSysData;
 11207  008694  0E00               	movlw	low _stSysData
 11208  008696  0100               	movlb	0	; () banked
 11209  008698  6F7D               	movwf	___enter_menu_set_d@fps& (0+255),b
 11210  00869A  0E02               	movlw	high _stSysData
 11211  00869C  0100               	movlb	0	; () banked
 11212  00869E  6F7E               	movwf	(___enter_menu_set_d@fps+1)& (0+255),b
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;key_menu.c: 142: t32=fps->d;
 11216  0086A0  0100               	movlb	0	; () banked
 11217  0086A2  EE20 F00C          	lfsr	2,12
 11218  0086A6  517D               	movf	___enter_menu_set_d@fps& (0+255),w,b
 11219  0086A8  26D9               	addwf	fsr2l,f,c
 11220  0086AA  517E               	movf	(___enter_menu_set_d@fps+1)& (0+255),w,b
 11221  0086AC  22DA               	addwfc	fsr2h,f,c
 11222  0086AE  CFDE F07F          	movff	postinc2,___enter_menu_set_d@t32
 11223  0086B2  CFDE F080          	movff	postinc2,___enter_menu_set_d@t32+1
 11224  0086B6  CFDE F081          	movff	postinc2,___enter_menu_set_d@t32+2
 11225  0086BA  CFDE F082          	movff	postinc2,___enter_menu_set_d@t32+3
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;key_menu.c: 143: t32=__int32_2_mflot32(t32);
 11229  0086BE  C07F  F06D         	movff	___enter_menu_set_d@t32,___int32_2_mflot32@x
 11230  0086C2  C080  F06E         	movff	___enter_menu_set_d@t32+1,___int32_2_mflot32@x+1
 11231  0086C6  C081  F06F         	movff	___enter_menu_set_d@t32+2,___int32_2_mflot32@x+2
 11232  0086CA  C082  F070         	movff	___enter_menu_set_d@t32+3,___int32_2_mflot32@x+3
 11233  0086CE  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 11234  0086D2  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_d@t32
 11235  0086D6  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_d@t32+1
 11236  0086DA  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_d@t32+2
 11237  0086DE  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_d@t32+3
 11238                           
 11239                           ;key_menu.c: 144: m_floatAdj.t32=t32;
 11240  0086E2  C07F  F035         	movff	___enter_menu_set_d@t32,_m_floatAdj
 11241  0086E6  C080  F036         	movff	___enter_menu_set_d@t32+1,_m_floatAdj+1
 11242  0086EA  C081  F037         	movff	___enter_menu_set_d@t32+2,_m_floatAdj+2
 11243  0086EE  C082  F038         	movff	___enter_menu_set_d@t32+3,_m_floatAdj+3
 11244                           
 11245                           ;key_menu.c: 145: adjLocation=0;
 11246  0086F2  0E00               	movlw	0
 11247  0086F4  6E3F               	movwf	_adjLocation,c	;volatile
 11248  0086F6  0012               	return		;funcret
 11249  0086F8                     __end_of___enter_menu_set_d:
 11250                           	opt stack 0
 11251                           tblptru	equ	0xFF8
 11252                           tblptrh	equ	0xFF7
 11253                           tblptrl	equ	0xFF6
 11254                           tablat	equ	0xFF5
 11255                           prodh	equ	0xFF4
 11256                           prodl	equ	0xFF3
 11257                           intcon	equ	0xFF2
 11258                           postinc0	equ	0xFEE
 11259                           wreg	equ	0xFE8
 11260                           indf1	equ	0xFE7
 11261                           postinc1	equ	0xFE6
 11262                           postdec1	equ	0xFE5
 11263                           plusw1	equ	0xFE3
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           plusw2	equ	0xFDB
 11270                           fsr2h	equ	0xFDA
 11271                           fsr2l	equ	0xFD9
 11272                           status	equ	0xFD8
 11273                           
 11274 ;; *************** function ___set_short_poly_coefic *****************
 11275 ;; Defined at:
 11276 ;;		line 758 in file "src/api/key_menu.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;  gohome          1    wreg     unsigned char 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  gohome          1  131[BANK0 ] unsigned char 
 11281 ;;  stp             2  134[BANK0 ] PTR struct .
 11282 ;;		 -> stSysData(240), 
 11283 ;;  p               2  132[BANK0 ] PTR int 
 11284 ;;		 -> adjValue(4), 
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      void 
 11287 ;; Registers used:
 11288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11295 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;Total ram usage:        5 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    8
 11301 ;; This function calls:
 11302 ;;		___enter_menu_poly_coeffic
 11303 ;;		___exit_menu_to_home_unsave
 11304 ;;		___sys_data_save_write_flash
 11305 ;; This function is called by:
 11306 ;;		_key_process_set_long
 11307 ;;		_key_process_set
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text58
 11312  00832A                     __ptext58:
 11313                           	opt stack 0
 11314  00832A                     ___set_short_poly_coefic:
 11315                           	opt stack 20
 11316                           
 11317                           ;incstack = 0
 11318                           ;___set_short_poly_coefic@gohome stored from wreg
 11319  00832A  0100               	movlb	0	; () banked
 11320  00832C  6FE3               	movwf	___set_short_poly_coefic@gohome& (0+255),b
 11321                           
 11322                           ;key_menu.c: 760: int16_t* p;
 11323                           ;key_menu.c: 764: st_sysDataDef* stp=&stSysData;
 11324  00832E  0E00               	movlw	low _stSysData
 11325  008330  0100               	movlb	0	; () banked
 11326  008332  6FE6               	movwf	___set_short_poly_coefic@stp& (0+255),b
 11327  008334  0E02               	movlw	high _stSysData
 11328  008336  0100               	movlb	0	; () banked
 11329  008338  6FE7               	movwf	(___set_short_poly_coefic@stp+1)& (0+255),b
 11330                           
 11331                           ;key_menu.c: 766: p=(int16_t*)(&adjValue);
 11332  00833A  0E39               	movlw	low _adjValue
 11333  00833C  0100               	movlb	0	; () banked
 11334  00833E  6FE4               	movwf	___set_short_poly_coefic@p& (0+255),b
 11335  008340  0E00               	movlw	high _adjValue
 11336  008342  0100               	movlb	0	; () banked
 11337  008344  6FE5               	movwf	(___set_short_poly_coefic@p+1)& (0+255),b
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;key_menu.c: 767: stp->ployCoeffic[subMenu]=*p;
 11341  008346  C0E4  FFD9         	movff	___set_short_poly_coefic@p,fsr2l
 11342  00834A  C0E5  FFDA         	movff	___set_short_poly_coefic@p+1,fsr2h
 11343  00834E  5032               	movf	_subMenu,w,c	;volatile
 11344  008350  0D02               	mullw	2
 11345  008352  0E84               	movlw	132
 11346  008354  26F3               	addwf	prodl,f,c
 11347  008356  0E00               	movlw	0
 11348  008358  22F4               	addwfc	prodh,f,c
 11349  00835A  50F3               	movf	prodl,w,c
 11350  00835C  0100               	movlb	0	; () banked
 11351  00835E  25E6               	addwf	___set_short_poly_coefic@stp& (0+255),w,b
 11352  008360  6EE1               	movwf	fsr1l,c
 11353  008362  50F4               	movf	prodh,w,c
 11354  008364  0100               	movlb	0	; () banked
 11355  008366  21E7               	addwfc	(___set_short_poly_coefic@stp+1)& (0+255),w,b
 11356  008368  6EE2               	movwf	fsr1h,c
 11357  00836A  CFDE FFE6          	movff	postinc2,postinc1
 11358  00836E  CFDD FFE5          	movff	postdec2,postdec1
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;key_menu.c: 768: __sys_data_save_write_flash();
 11362  008372  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
 11363                           
 11364                           ;key_menu.c: 770: if(gohome){__exit_menu_to_home_unsave(); return;}
 11365  008376  0100               	movlb	0	; () banked
 11366  008378  51E3               	movf	___set_short_poly_coefic@gohome& (0+255),w,b
 11367  00837A  0100               	movlb	0	; () banked
 11368  00837C  B4D8               	btfsc	status,2,c
 11369  00837E  D003               	goto	l15944
 11370                           
 11371                           ; BSR set to: 0
 11372  008380  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 11373  008384  0012               	return	
 11374  008386                     l15944:
 11375                           
 11376                           ;key_menu.c: 772: subMenu++;
 11377  008386  2A32               	incf	_subMenu,f,c	;volatile
 11378                           
 11379                           ;key_menu.c: 773: if(subMenu>0x03)subMenu=0x00;
 11380  008388  0E03               	movlw	3
 11381  00838A  6432               	cpfsgt	_subMenu,c	;volatile
 11382  00838C  D002               	goto	l15950
 11383  00838E  0E00               	movlw	0
 11384  008390  6E32               	movwf	_subMenu,c	;volatile
 11385  008392                     l15950:
 11386                           
 11387                           ;key_menu.c: 774: __enter_menu_poly_coeffic(subMenu);
 11388  008392  5032               	movf	_subMenu,w,c	;volatile
 11389  008394  EC80  F047         	call	___enter_menu_poly_coeffic
 11390  008398  0012               	return		;funcret
 11391  00839A                     __end_of___set_short_poly_coefic:
 11392                           	opt stack 0
 11393                           tblptru	equ	0xFF8
 11394                           tblptrh	equ	0xFF7
 11395                           tblptrl	equ	0xFF6
 11396                           tablat	equ	0xFF5
 11397                           prodh	equ	0xFF4
 11398                           prodl	equ	0xFF3
 11399                           intcon	equ	0xFF2
 11400                           postinc0	equ	0xFEE
 11401                           wreg	equ	0xFE8
 11402                           indf1	equ	0xFE7
 11403                           postinc1	equ	0xFE6
 11404                           postdec1	equ	0xFE5
 11405                           plusw1	equ	0xFE3
 11406                           fsr1h	equ	0xFE2
 11407                           fsr1l	equ	0xFE1
 11408                           indf2	equ	0xFDF
 11409                           postinc2	equ	0xFDE
 11410                           postdec2	equ	0xFDD
 11411                           plusw2	equ	0xFDB
 11412                           fsr2h	equ	0xFDA
 11413                           fsr2l	equ	0xFD9
 11414                           status	equ	0xFD8
 11415                           
 11416 ;; *************** function ___enter_menu_poly_coeffic *****************
 11417 ;; Defined at:
 11418 ;;		line 239 in file "src/api/key_menu.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;  __subMenu       1    wreg     unsigned char 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;  __subMenu       1    2[BANK0 ] unsigned char 
 11423 ;;  fps             2    3[BANK0 ] PTR struct .
 11424 ;;		 -> stSysData(240), 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;Total ram usage:        5 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:    4
 11441 ;; This function calls:
 11442 ;;		Nothing
 11443 ;; This function is called by:
 11444 ;;		_key_process_set_down_long
 11445 ;;		___set_short_poly_coefic
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text59
 11450  008F00                     __ptext59:
 11451                           	opt stack 0
 11452  008F00                     ___enter_menu_poly_coeffic:
 11453                           	opt stack 23
 11454                           
 11455                           ;incstack = 0
 11456                           ;___enter_menu_poly_coeffic@__subMenu stored from wreg
 11457  008F00  0100               	movlb	0	; () banked
 11458  008F02  6F62               	movwf	___enter_menu_poly_coeffic@__subMenu& (0+255),b
 11459                           
 11460                           ;key_menu.c: 241: menu=0x70;
 11461  008F04  0E70               	movlw	112
 11462  008F06  6E33               	movwf	_menu,c	;volatile
 11463                           
 11464                           ;key_menu.c: 242: subMenu=__subMenu;
 11465  008F08  C062  F032         	movff	___enter_menu_poly_coeffic@__subMenu,_subMenu	;volatile
 11466                           
 11467                           ;key_menu.c: 244: st_sysDataDef* fps= &stSysData;
 11468  008F0C  0E00               	movlw	low _stSysData
 11469  008F0E  0100               	movlb	0	; () banked
 11470  008F10  6F63               	movwf	___enter_menu_poly_coeffic@fps& (0+255),b
 11471  008F12  0E02               	movlw	high _stSysData
 11472  008F14  0100               	movlb	0	; () banked
 11473  008F16  6F64               	movwf	(___enter_menu_poly_coeffic@fps+1)& (0+255),b
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;key_menu.c: 246: adjValue=(int32_t)(fps->ployCoeffic[subMenu]);
 11477  008F18  5032               	movf	_subMenu,w,c	;volatile
 11478  008F1A  0D02               	mullw	2
 11479  008F1C  0E84               	movlw	132
 11480  008F1E  26F3               	addwf	prodl,f,c
 11481  008F20  0E00               	movlw	0
 11482  008F22  22F4               	addwfc	prodh,f,c
 11483  008F24  50F3               	movf	prodl,w,c
 11484  008F26  0100               	movlb	0	; () banked
 11485  008F28  2563               	addwf	___enter_menu_poly_coeffic@fps& (0+255),w,b
 11486  008F2A  6ED9               	movwf	fsr2l,c
 11487  008F2C  50F4               	movf	prodh,w,c
 11488  008F2E  0100               	movlb	0	; () banked
 11489  008F30  2164               	addwfc	(___enter_menu_poly_coeffic@fps+1)& (0+255),w,b
 11490  008F32  6EDA               	movwf	fsr2h,c
 11491  008F34  CFDE F060          	movff	postinc2,??___enter_menu_poly_coeffic
 11492  008F38  CFDD F061          	movff	postdec2,??___enter_menu_poly_coeffic+1
 11493  008F3C  C060  F039         	movff	??___enter_menu_poly_coeffic,_adjValue	;volatile
 11494  008F40  C061  F03A         	movff	??___enter_menu_poly_coeffic+1,_adjValue+1	;volatile
 11495  008F44  6A3B               	clrf	_adjValue+2,c	;volatile
 11496  008F46  6A3C               	clrf	_adjValue+3,c	;volatile
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;key_menu.c: 247: adjLocation=0;
 11500  008F48  0E00               	movlw	0
 11501  008F4A  6E3F               	movwf	_adjLocation,c	;volatile
 11502                           
 11503                           ; BSR set to: 0
 11504  008F4C  0012               	return		;funcret
 11505  008F4E                     __end_of___enter_menu_poly_coeffic:
 11506                           	opt stack 0
 11507                           tblptru	equ	0xFF8
 11508                           tblptrh	equ	0xFF7
 11509                           tblptrl	equ	0xFF6
 11510                           tablat	equ	0xFF5
 11511                           prodh	equ	0xFF4
 11512                           prodl	equ	0xFF3
 11513                           intcon	equ	0xFF2
 11514                           postinc0	equ	0xFEE
 11515                           wreg	equ	0xFE8
 11516                           indf1	equ	0xFE7
 11517                           postinc1	equ	0xFE6
 11518                           postdec1	equ	0xFE5
 11519                           plusw1	equ	0xFE3
 11520                           fsr1h	equ	0xFE2
 11521                           fsr1l	equ	0xFE1
 11522                           indf2	equ	0xFDF
 11523                           postinc2	equ	0xFDE
 11524                           postdec2	equ	0xFDD
 11525                           plusw2	equ	0xFDB
 11526                           fsr2h	equ	0xFDA
 11527                           fsr2l	equ	0xFD9
 11528                           status	equ	0xFD8
 11529                           
 11530 ;; *************** function ___set_short_epr_param *****************
 11531 ;; Defined at:
 11532 ;;		line 827 in file "src/api/key_menu.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  gohome          1    wreg     unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  gohome          1    0[BANK3 ] unsigned char 
 11537 ;;  t32             4    1[BANK3 ] long 
 11538 ;;  p               3    0        PTR unsigned char 
 11539 ;;  stp             2    5[BANK3 ] PTR struct .
 11540 ;;		 -> stSysData(240), 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;Total ram usage:        7 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    8
 11557 ;; This function calls:
 11558 ;;		___enter_menu_epr_calib
 11559 ;;		___exit_menu_to_home_unsave
 11560 ;;		___mflot32_2_int32
 11561 ;;		___sys_data_save_write_flash
 11562 ;; This function is called by:
 11563 ;;		_key_process_set_long
 11564 ;;		_key_process_set
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text60
 11569  004CA2                     __ptext60:
 11570                           	opt stack 0
 11571  004CA2                     ___set_short_epr_param:
 11572                           	opt stack 20
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;incstack = 0
 11576                           ;___set_short_epr_param@gohome stored from wreg
 11577  004CA2  0103               	movlb	3	; () banked
 11578  004CA4  6FCA               	movwf	___set_short_epr_param@gohome& (0+255),b
 11579                           
 11580                           ;key_menu.c: 829: uint8_t* p;
 11581                           ;key_menu.c: 830: int32_t t32;
 11582                           ;key_menu.c: 833: st_sysDataDef* stp=&stSysData;
 11583  004CA6  0E00               	movlw	low _stSysData
 11584  004CA8  0103               	movlb	3	; () banked
 11585  004CAA  6FCF               	movwf	___set_short_epr_param@stp& (0+255),b
 11586  004CAC  0E02               	movlw	high _stSysData
 11587  004CAE  0103               	movlb	3	; () banked
 11588  004CB0  6FD0               	movwf	(___set_short_epr_param@stp+1)& (0+255),b
 11589                           
 11590                           ; BSR set to: 3
 11591                           ;key_menu.c: 834: t32=__mflot32_2_int32(m_floatAdj.t32);
 11592  004CB2  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11593  004CB6  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11594  004CBA  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11595  004CBE  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11596  004CC2  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 11597  004CC6  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_param@t32
 11598  004CCA  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_param@t32+1
 11599  004CCE  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_param@t32+2
 11600  004CD2  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_param@t32+3
 11601                           
 11602                           ;key_menu.c: 835: switch(subMenu){
 11603  004CD6  D05C               	goto	l16014
 11604  004CD8                     l16004:
 11605  004CD8  0103               	movlb	3	; () banked
 11606  004CDA  EE20 F09C          	lfsr	2,156
 11607  004CDE  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11608  004CE0  26D9               	addwf	fsr2l,f,c
 11609  004CE2  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11610  004CE4  22DA               	addwfc	fsr2h,f,c
 11611  004CE6  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11612  004CEA  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11613  004CEE  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11614  004CF2  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11615  004CF6  0103               	movlb	3	; () banked
 11616  004CF8  EE20 F0A0          	lfsr	2,160
 11617  004CFC  D012               	goto	L4
 11618  004CFE                     l16006:
 11619  004CFE  0103               	movlb	3	; () banked
 11620  004D00  EE20 F0A4          	lfsr	2,164
 11621  004D04  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11622  004D06  26D9               	addwf	fsr2l,f,c
 11623  004D08  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11624  004D0A  22DA               	addwfc	fsr2h,f,c
 11625  004D0C  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11626  004D10  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11627  004D14  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11628  004D18  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11629  004D1C  0103               	movlb	3	; () banked
 11630  004D1E  EE20 F0A8          	lfsr	2,168
 11631  004D22                     L4:
 11632  004D22  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11633  004D24  26D9               	addwf	fsr2l,f,c
 11634  004D26  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11635  004D28  22DA               	addwfc	fsr2h,f,c
 11636  004D2A  C021  FFDE         	movff	_adc_iPrEx,postinc2	;volatile
 11637  004D2E  C022  FFDD         	movff	_adc_iPrEx+1,postdec2	;volatile
 11638  004D32  D03B               	goto	l16016
 11639  004D34                     l16008:
 11640  004D34  0103               	movlb	3	; () banked
 11641  004D36  EE20 F0AC          	lfsr	2,172
 11642  004D3A  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11643  004D3C  26D9               	addwf	fsr2l,f,c
 11644  004D3E  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11645  004D40  22DA               	addwfc	fsr2h,f,c
 11646  004D42  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11647  004D46  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11648  004D4A  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11649  004D4E  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11650  004D52  0103               	movlb	3	; () banked
 11651  004D54  EE20 F0B0          	lfsr	2,176
 11652  004D58  D012               	goto	L5
 11653  004D5A                     l16010:
 11654  004D5A  0103               	movlb	3	; () banked
 11655  004D5C  EE20 F0B4          	lfsr	2,180
 11656  004D60  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11657  004D62  26D9               	addwf	fsr2l,f,c
 11658  004D64  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11659  004D66  22DA               	addwfc	fsr2h,f,c
 11660  004D68  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11661  004D6C  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11662  004D70  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11663  004D74  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11664  004D78  0103               	movlb	3	; () banked
 11665  004D7A  EE20 F0B8          	lfsr	2,184
 11666  004D7E                     L5:
 11667  004D7E  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11668  004D80  26D9               	addwf	fsr2l,f,c
 11669  004D82  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11670  004D84  22DA               	addwfc	fsr2h,f,c
 11671  004D86  C023  FFDE         	movff	_adc_iPrEx+2,postinc2	;volatile
 11672  004D8A  C024  FFDD         	movff	_adc_iPrEx+3,postdec2	;volatile
 11673                           
 11674                           ; BSR set to: 3
 11675                           ;key_menu.c: 841: }
 11676                           
 11677                           ; BSR set to: 3
 11678                           
 11679                           ;key_menu.c: 840: default:break;
 11680  004D8E  D00D               	goto	l16016
 11681  004D90                     l16014:
 11682  004D90  5032               	movf	_subMenu,w,c	;volatile
 11683                           
 11684                           ; Switch size 1, requested type "space"
 11685                           ; Number of cases is 4, Range of values is 0 to 3
 11686                           ; switch strategies available:
 11687                           ; Name         Instructions Cycles
 11688                           ; simple_byte           13     7 (average)
 11689                           ;	Chosen strategy is simple_byte
 11690  004D92  0A00               	xorlw	0	; case 0
 11691  004D94  B4D8               	btfsc	status,2,c
 11692  004D96  D7A0               	goto	l16004
 11693  004D98  0A01               	xorlw	1	; case 1
 11694  004D9A  B4D8               	btfsc	status,2,c
 11695  004D9C  D7B0               	goto	l16006
 11696  004D9E  0A03               	xorlw	3	; case 2
 11697  004DA0  B4D8               	btfsc	status,2,c
 11698  004DA2  D7C8               	goto	l16008
 11699  004DA4  0A01               	xorlw	1	; case 3
 11700  004DA6  B4D8               	btfsc	status,2,c
 11701  004DA8  D7D8               	goto	l16010
 11702  004DAA                     l16016:
 11703                           
 11704                           ;key_menu.c: 842: __sys_data_save_write_flash();
 11705  004DAA  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
 11706                           
 11707                           ;key_menu.c: 844: if(gohome){__exit_menu_to_home_unsave(); return;}
 11708  004DAE  0103               	movlb	3	; () banked
 11709  004DB0  51CA               	movf	___set_short_epr_param@gohome& (0+255),w,b
 11710  004DB2  0103               	movlb	3	; () banked
 11711  004DB4  B4D8               	btfsc	status,2,c
 11712  004DB6  D003               	goto	l16024
 11713                           
 11714                           ; BSR set to: 3
 11715  004DB8  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 11716  004DBC  0012               	return	
 11717  004DBE                     l16024:
 11718                           
 11719                           ;key_menu.c: 846: subMenu++;
 11720  004DBE  2A32               	incf	_subMenu,f,c	;volatile
 11721                           
 11722                           ;key_menu.c: 847: if(subMenu>0x03)subMenu=0x00;
 11723  004DC0  0E03               	movlw	3
 11724  004DC2  6432               	cpfsgt	_subMenu,c	;volatile
 11725  004DC4  D002               	goto	l16030
 11726  004DC6  0E00               	movlw	0
 11727  004DC8  6E32               	movwf	_subMenu,c	;volatile
 11728  004DCA                     l16030:
 11729                           
 11730                           ;key_menu.c: 848: __enter_menu_epr_calib(subMenu);
 11731  004DCA  5032               	movf	_subMenu,w,c	;volatile
 11732  004DCC  EC36  F038         	call	___enter_menu_epr_calib
 11733  004DD0  0012               	return		;funcret
 11734  004DD2                     __end_of___set_short_epr_param:
 11735                           	opt stack 0
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           postinc0	equ	0xFEE
 11744                           wreg	equ	0xFE8
 11745                           indf1	equ	0xFE7
 11746                           postinc1	equ	0xFE6
 11747                           postdec1	equ	0xFE5
 11748                           plusw1	equ	0xFE3
 11749                           fsr1h	equ	0xFE2
 11750                           fsr1l	equ	0xFE1
 11751                           indf2	equ	0xFDF
 11752                           postinc2	equ	0xFDE
 11753                           postdec2	equ	0xFDD
 11754                           plusw2	equ	0xFDB
 11755                           fsr2h	equ	0xFDA
 11756                           fsr2l	equ	0xFD9
 11757                           status	equ	0xFD8
 11758                           
 11759 ;; *************** function ___enter_menu_epr_calib *****************
 11760 ;; Defined at:
 11761 ;;		line 289 in file "src/api/key_menu.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  __subMenu       1    wreg     unsigned char 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 11766 ;;  t32             4   30[BANK0 ] long 
 11767 ;;  fps             2   34[BANK0 ] PTR struct .
 11768 ;;		 -> stSysData(240), 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  1    wreg      void 
 11771 ;; Registers used:
 11772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;Total ram usage:        7 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    6
 11785 ;; This function calls:
 11786 ;;		___int32_2_mflot32
 11787 ;; This function is called by:
 11788 ;;		_key_process_set_down_long
 11789 ;;		___set_short_epr_param
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text61
 11794  00706C                     __ptext61:
 11795                           	opt stack 0
 11796  00706C                     ___enter_menu_epr_calib:
 11797                           	opt stack 21
 11798                           
 11799                           ;incstack = 0
 11800                           ;___enter_menu_epr_calib@__subMenu stored from wreg
 11801  00706C  0100               	movlb	0	; () banked
 11802  00706E  6F7D               	movwf	___enter_menu_epr_calib@__subMenu& (0+255),b
 11803                           
 11804                           ;key_menu.c: 291: int32_t t32;
 11805                           ;key_menu.c: 292: menu=0xa0;
 11806  007070  0EA0               	movlw	160
 11807  007072  6E33               	movwf	_menu,c	;volatile
 11808                           
 11809                           ;key_menu.c: 293: subMenu=__subMenu;
 11810  007074  C07D  F032         	movff	___enter_menu_epr_calib@__subMenu,_subMenu	;volatile
 11811                           
 11812                           ;key_menu.c: 296: st_sysDataDef* fps= &stSysData;
 11813  007078  0E00               	movlw	low _stSysData
 11814  00707A  0100               	movlb	0	; () banked
 11815  00707C  6F82               	movwf	___enter_menu_epr_calib@fps& (0+255),b
 11816  00707E  0E02               	movlw	high _stSysData
 11817  007080  0100               	movlb	0	; () banked
 11818  007082  6F83               	movwf	(___enter_menu_epr_calib@fps+1)& (0+255),b
 11819                           
 11820                           ;key_menu.c: 297: switch(subMenu){
 11821  007084  D01C               	goto	l15198
 11822  007086                     l15188:
 11823                           
 11824                           ; BSR set to: 0
 11825  007086  0100               	movlb	0	; () banked
 11826  007088  EE20 F09C          	lfsr	2,156
 11827  00708C  D00B               	goto	L8
 11828  00708E                     l15190:
 11829                           
 11830                           ; BSR set to: 0
 11831  00708E  0100               	movlb	0	; () banked
 11832  007090  EE20 F0A4          	lfsr	2,164
 11833  007094  D007               	goto	L8
 11834  007096                     l15192:
 11835                           
 11836                           ; BSR set to: 0
 11837  007096  0100               	movlb	0	; () banked
 11838  007098  EE20 F0AC          	lfsr	2,172
 11839  00709C  D003               	goto	L8
 11840  00709E                     l15194:
 11841                           
 11842                           ; BSR set to: 0
 11843  00709E  0100               	movlb	0	; () banked
 11844  0070A0  EE20 F0B4          	lfsr	2,180
 11845  0070A4                     L8:
 11846  0070A4  5182               	movf	___enter_menu_epr_calib@fps& (0+255),w,b
 11847  0070A6  26D9               	addwf	fsr2l,f,c
 11848  0070A8  5183               	movf	(___enter_menu_epr_calib@fps+1)& (0+255),w,b
 11849  0070AA  22DA               	addwfc	fsr2h,f,c
 11850  0070AC  CFDE F07E          	movff	postinc2,___enter_menu_epr_calib@t32
 11851  0070B0  CFDE F07F          	movff	postinc2,___enter_menu_epr_calib@t32+1
 11852  0070B4  CFDE F080          	movff	postinc2,___enter_menu_epr_calib@t32+2
 11853  0070B8  CFDE F081          	movff	postinc2,___enter_menu_epr_calib@t32+3
 11854  0070BC  D00E               	goto	l15200
 11855  0070BE                     l15198:
 11856                           
 11857                           ; BSR set to: 0
 11858  0070BE  5032               	movf	_subMenu,w,c	;volatile
 11859                           
 11860                           ; Switch size 1, requested type "space"
 11861                           ; Number of cases is 4, Range of values is 0 to 3
 11862                           ; switch strategies available:
 11863                           ; Name         Instructions Cycles
 11864                           ; simple_byte           13     7 (average)
 11865                           ;	Chosen strategy is simple_byte
 11866  0070C0  0A00               	xorlw	0	; case 0
 11867  0070C2  B4D8               	btfsc	status,2,c
 11868  0070C4  D7E0               	goto	l15188
 11869  0070C6  0A01               	xorlw	1	; case 1
 11870  0070C8  B4D8               	btfsc	status,2,c
 11871  0070CA  D7E1               	goto	l15190
 11872  0070CC  0A03               	xorlw	3	; case 2
 11873  0070CE  B4D8               	btfsc	status,2,c
 11874  0070D0  D7E2               	goto	l15192
 11875  0070D2  0A01               	xorlw	1	; case 3
 11876  0070D4  A4D8               	btfss	status,2,c
 11877  0070D6  0012               	return	
 11878  0070D8  D7E2               	goto	l15194
 11879  0070DA                     l15200:
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;key_menu.c: 305: t32=__int32_2_mflot32(t32);
 11883  0070DA  C07E  F06D         	movff	___enter_menu_epr_calib@t32,___int32_2_mflot32@x
 11884  0070DE  C07F  F06E         	movff	___enter_menu_epr_calib@t32+1,___int32_2_mflot32@x+1
 11885  0070E2  C080  F06F         	movff	___enter_menu_epr_calib@t32+2,___int32_2_mflot32@x+2
 11886  0070E6  C081  F070         	movff	___enter_menu_epr_calib@t32+3,___int32_2_mflot32@x+3
 11887  0070EA  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 11888  0070EE  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_calib@t32
 11889  0070F2  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_calib@t32+1
 11890  0070F6  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_calib@t32+2
 11891  0070FA  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_calib@t32+3
 11892                           
 11893                           ;key_menu.c: 306: m_floatAdj.t32=t32;
 11894  0070FE  C07E  F035         	movff	___enter_menu_epr_calib@t32,_m_floatAdj
 11895  007102  C07F  F036         	movff	___enter_menu_epr_calib@t32+1,_m_floatAdj+1
 11896  007106  C080  F037         	movff	___enter_menu_epr_calib@t32+2,_m_floatAdj+2
 11897  00710A  C081  F038         	movff	___enter_menu_epr_calib@t32+3,_m_floatAdj+3
 11898                           
 11899                           ;key_menu.c: 307: adjLocation=0;
 11900  00710E  0E00               	movlw	0
 11901  007110  6E3F               	movwf	_adjLocation,c	;volatile
 11902  007112  0012               	return		;funcret
 11903  007114                     __end_of___enter_menu_epr_calib:
 11904                           	opt stack 0
 11905                           tblptru	equ	0xFF8
 11906                           tblptrh	equ	0xFF7
 11907                           tblptrl	equ	0xFF6
 11908                           tablat	equ	0xFF5
 11909                           prodh	equ	0xFF4
 11910                           prodl	equ	0xFF3
 11911                           intcon	equ	0xFF2
 11912                           postinc0	equ	0xFEE
 11913                           wreg	equ	0xFE8
 11914                           indf1	equ	0xFE7
 11915                           postinc1	equ	0xFE6
 11916                           postdec1	equ	0xFE5
 11917                           plusw1	equ	0xFE3
 11918                           fsr1h	equ	0xFE2
 11919                           fsr1l	equ	0xFE1
 11920                           indf2	equ	0xFDF
 11921                           postinc2	equ	0xFDE
 11922                           postdec2	equ	0xFDD
 11923                           plusw2	equ	0xFDB
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function ___set_short_epr_ilp_scale *****************
 11929 ;; Defined at:
 11930 ;;		line 851 in file "src/api/key_menu.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;  gohome          1    wreg     unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  gohome          1    0[BANK3 ] unsigned char 
 11935 ;;  t32             4    1[BANK3 ] long 
 11936 ;;  p               3    0        PTR unsigned char 
 11937 ;;  stp             2    5[BANK3 ] PTR struct .
 11938 ;;		 -> stSysData(240), 
 11939 ;; Return value:  Size  Location     Type
 11940 ;;                  1    wreg      void 
 11941 ;; Registers used:
 11942 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11943 ;; Tracked objects:
 11944 ;;		On entry : 0/0
 11945 ;;		On exit  : 0/0
 11946 ;;		Unchanged: 0/0
 11947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;Total ram usage:        7 bytes
 11953 ;; Hardware stack levels used:    1
 11954 ;; Hardware stack levels required when called:    8
 11955 ;; This function calls:
 11956 ;;		___enter_menu_epr_ilp_scale
 11957 ;;		___exit_menu_to_home_unsave
 11958 ;;		___mflot32_2_int32
 11959 ;;		___sys_data_save_write_flash
 11960 ;; This function is called by:
 11961 ;;		_key_process_set_long
 11962 ;;		_key_process_set
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text62
 11967  006DB0                     __ptext62:
 11968                           	opt stack 0
 11969  006DB0                     ___set_short_epr_ilp_scale:
 11970                           	opt stack 20
 11971                           
 11972                           ;incstack = 0
 11973                           ;___set_short_epr_ilp_scale@gohome stored from wreg
 11974  006DB0  0103               	movlb	3	; () banked
 11975  006DB2  6FCA               	movwf	___set_short_epr_ilp_scale@gohome& (0+255),b
 11976                           
 11977                           ;key_menu.c: 853: uint8_t* p;
 11978                           ;key_menu.c: 854: int32_t t32;
 11979                           ;key_menu.c: 857: st_sysDataDef* stp=&stSysData;
 11980  006DB4  0E00               	movlw	low _stSysData
 11981  006DB6  0103               	movlb	3	; () banked
 11982  006DB8  6FCF               	movwf	___set_short_epr_ilp_scale@stp& (0+255),b
 11983  006DBA  0E02               	movlw	high _stSysData
 11984  006DBC  0103               	movlb	3	; () banked
 11985  006DBE  6FD0               	movwf	(___set_short_epr_ilp_scale@stp+1)& (0+255),b
 11986                           
 11987                           ; BSR set to: 3
 11988                           ;key_menu.c: 858: t32=__mflot32_2_int32(m_floatAdj.t32);
 11989  006DC0  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11990  006DC4  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11991  006DC8  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11992  006DCC  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11993  006DD0  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 11994  006DD4  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_ilp_scale@t32
 11995  006DD8  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_ilp_scale@t32+1
 11996  006DDC  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_ilp_scale@t32+2
 11997  006DE0  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_ilp_scale@t32+3
 11998                           
 11999                           ;key_menu.c: 859: switch(subMenu){
 12000  006DE4  D01C               	goto	l16046
 12001  006DE6                     l16036:
 12002  006DE6  0103               	movlb	3	; () banked
 12003  006DE8  EE20 F0DC          	lfsr	2,220
 12004  006DEC  D00B               	goto	L11
 12005  006DEE                     l16038:
 12006  006DEE  0103               	movlb	3	; () banked
 12007  006DF0  EE20 F0E0          	lfsr	2,224
 12008  006DF4  D007               	goto	L11
 12009  006DF6                     l16040:
 12010  006DF6  0103               	movlb	3	; () banked
 12011  006DF8  EE20 F0E4          	lfsr	2,228
 12012  006DFC  D003               	goto	L11
 12013  006DFE                     l16042:
 12014  006DFE  0103               	movlb	3	; () banked
 12015  006E00  EE20 F0E8          	lfsr	2,232
 12016  006E04                     L11:
 12017  006E04  51CF               	movf	___set_short_epr_ilp_scale@stp& (0+255),w,b
 12018  006E06  26D9               	addwf	fsr2l,f,c
 12019  006E08  51D0               	movf	(___set_short_epr_ilp_scale@stp+1)& (0+255),w,b
 12020  006E0A  22DA               	addwfc	fsr2h,f,c
 12021  006E0C  C3CB  FFDE         	movff	___set_short_epr_ilp_scale@t32,postinc2
 12022  006E10  C3CC  FFDE         	movff	___set_short_epr_ilp_scale@t32+1,postinc2
 12023  006E14  C3CD  FFDE         	movff	___set_short_epr_ilp_scale@t32+2,postinc2
 12024  006E18  C3CE  FFDE         	movff	___set_short_epr_ilp_scale@t32+3,postinc2
 12025                           
 12026                           ; BSR set to: 3
 12027                           ;key_menu.c: 865: }
 12028                           
 12029                           ; BSR set to: 3
 12030                           
 12031                           ;key_menu.c: 864: default:break;
 12032  006E1C  D00D               	goto	l16048
 12033  006E1E                     l16046:
 12034  006E1E  5032               	movf	_subMenu,w,c	;volatile
 12035                           
 12036                           ; Switch size 1, requested type "space"
 12037                           ; Number of cases is 4, Range of values is 0 to 3
 12038                           ; switch strategies available:
 12039                           ; Name         Instructions Cycles
 12040                           ; simple_byte           13     7 (average)
 12041                           ;	Chosen strategy is simple_byte
 12042  006E20  0A00               	xorlw	0	; case 0
 12043  006E22  B4D8               	btfsc	status,2,c
 12044  006E24  D7E0               	goto	l16036
 12045  006E26  0A01               	xorlw	1	; case 1
 12046  006E28  B4D8               	btfsc	status,2,c
 12047  006E2A  D7E1               	goto	l16038
 12048  006E2C  0A03               	xorlw	3	; case 2
 12049  006E2E  B4D8               	btfsc	status,2,c
 12050  006E30  D7E2               	goto	l16040
 12051  006E32  0A01               	xorlw	1	; case 3
 12052  006E34  B4D8               	btfsc	status,2,c
 12053  006E36  D7E3               	goto	l16042
 12054  006E38                     l16048:
 12055                           
 12056                           ;key_menu.c: 866: __sys_data_save_write_flash();
 12057  006E38  ECE7  F02C         	call	___sys_data_save_write_flash	;wreg free
 12058                           
 12059                           ;key_menu.c: 868: if(gohome){__exit_menu_to_home_unsave(); return;}
 12060  006E3C  0103               	movlb	3	; () banked
 12061  006E3E  51CA               	movf	___set_short_epr_ilp_scale@gohome& (0+255),w,b
 12062  006E40  0103               	movlb	3	; () banked
 12063  006E42  B4D8               	btfsc	status,2,c
 12064  006E44  D003               	goto	l16056
 12065                           
 12066                           ; BSR set to: 3
 12067  006E46  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 12068  006E4A  0012               	return	
 12069  006E4C                     l16056:
 12070                           
 12071                           ;key_menu.c: 870: subMenu++;
 12072  006E4C  2A32               	incf	_subMenu,f,c	;volatile
 12073                           
 12074                           ;key_menu.c: 871: if(subMenu>0x03)subMenu=0x00;
 12075  006E4E  0E03               	movlw	3
 12076  006E50  6432               	cpfsgt	_subMenu,c	;volatile
 12077  006E52  D002               	goto	l16062
 12078  006E54  0E00               	movlw	0
 12079  006E56  6E32               	movwf	_subMenu,c	;volatile
 12080  006E58                     l16062:
 12081                           
 12082                           ;key_menu.c: 872: __enter_menu_epr_ilp_scale(subMenu);
 12083  006E58  5032               	movf	_subMenu,w,c	;volatile
 12084  006E5A  ECC3  F035         	call	___enter_menu_epr_ilp_scale
 12085  006E5E  0012               	return		;funcret
 12086  006E60                     __end_of___set_short_epr_ilp_scale:
 12087                           	opt stack 0
 12088                           tblptru	equ	0xFF8
 12089                           tblptrh	equ	0xFF7
 12090                           tblptrl	equ	0xFF6
 12091                           tablat	equ	0xFF5
 12092                           prodh	equ	0xFF4
 12093                           prodl	equ	0xFF3
 12094                           intcon	equ	0xFF2
 12095                           postinc0	equ	0xFEE
 12096                           wreg	equ	0xFE8
 12097                           indf1	equ	0xFE7
 12098                           postinc1	equ	0xFE6
 12099                           postdec1	equ	0xFE5
 12100                           plusw1	equ	0xFE3
 12101                           fsr1h	equ	0xFE2
 12102                           fsr1l	equ	0xFE1
 12103                           indf2	equ	0xFDF
 12104                           postinc2	equ	0xFDE
 12105                           postdec2	equ	0xFDD
 12106                           plusw2	equ	0xFDB
 12107                           fsr2h	equ	0xFDA
 12108                           fsr2l	equ	0xFD9
 12109                           status	equ	0xFD8
 12110                           
 12111 ;; *************** function ___sys_data_save_write_flash *****************
 12112 ;; Defined at:
 12113 ;;		line 627 in file "src/api/key_menu.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;		None
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;  buf             2  129[BANK0 ] PTR unsigned char 
 12118 ;;		 -> stSysData(240), 
 12119 ;;  stp             2  127[BANK0 ] PTR struct .
 12120 ;;		 -> stSysData(240), 
 12121 ;;  ret             1  126[BANK0 ] unsigned char 
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      unsigned char 
 12124 ;; Registers used:
 12125 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;Total ram usage:        5 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    7
 12138 ;; This function calls:
 12139 ;;		_crc_append
 12140 ;;		_crc_verify
 12141 ;;		_data_sys_cal_v1
 12142 ;;		_data_sys_cal_v2
 12143 ;;		_m_flash_read
 12144 ;;		_m_flash_write
 12145 ;; This function is called by:
 12146 ;;		___set_short_pose_size
 12147 ;;		___set_short_poly_coefic
 12148 ;;		___set_short_warn_type
 12149 ;;		___set_short_warn_value
 12150 ;;		___set_short_epr_param
 12151 ;;		___set_short_epr_ilp_scale
 12152 ;;		___set_long_density
 12153 ;;		___set_long_base_zero
 12154 ;;		___set_long_bar_level_scale
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           	psect	text63
 12159  0059CE                     __ptext63:
 12160                           	opt stack 0
 12161  0059CE                     ___sys_data_save_write_flash:
 12162                           	opt stack 20
 12163                           
 12164                           ;key_menu.c: 629: uint8_t ret=0;
 12165                           
 12166                           ;incstack = 0
 12167  0059CE  0E00               	movlw	0
 12168  0059D0  0100               	movlb	0	; () banked
 12169  0059D2  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;key_menu.c: 632: st_sysDataDef* stp=&stSysData;
 12173  0059D4  0E00               	movlw	low _stSysData
 12174  0059D6  0100               	movlb	0	; () banked
 12175  0059D8  6FDF               	movwf	___sys_data_save_write_flash@stp& (0+255),b
 12176  0059DA  0E02               	movlw	high _stSysData
 12177  0059DC  0100               	movlb	0	; () banked
 12178  0059DE  6FE0               	movwf	(___sys_data_save_write_flash@stp+1)& (0+255),b
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;key_menu.c: 633: uint8_t* buf=(uint8_t*)(&stSysData);
 12182  0059E0  0E00               	movlw	low _stSysData
 12183  0059E2  0100               	movlb	0	; () banked
 12184  0059E4  6FE1               	movwf	___sys_data_save_write_flash@buf& (0+255),b
 12185  0059E6  0E02               	movlw	high _stSysData
 12186  0059E8  0100               	movlb	0	; () banked
 12187  0059EA  6FE2               	movwf	(___sys_data_save_write_flash@buf+1)& (0+255),b
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;key_menu.c: 634: stp->V1=data_sys_cal_v1(stp);
 12191  0059EC  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v1@stp
 12192  0059F0  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v1@stp+1
 12193  0059F4  ECAC  F019         	call	_data_sys_cal_v1	;wreg free
 12194  0059F8  0100               	movlb	0	; () banked
 12195  0059FA  EE20 F010          	lfsr	2,16
 12196  0059FE  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 12197  005A00  26D9               	addwf	fsr2l,f,c
 12198  005A02  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 12199  005A04  22DA               	addwfc	fsr2h,f,c
 12200  005A06  0100               	movlb	0	; () banked
 12201  005A08  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 12202  005A0C  0100               	movlb	0	; () banked
 12203  005A0E  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 12204  005A12  0100               	movlb	0	; () banked
 12205  005A14  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 12206  005A18  0100               	movlb	0	; () banked
 12207  005A1A  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;key_menu.c: 635: stp->V2=data_sys_cal_v2(stp);
 12211  005A1E  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v2@stp
 12212  005A22  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v2@stp+1
 12213  005A26  ECA7  F023         	call	_data_sys_cal_v2	;wreg free
 12214  005A2A  0100               	movlb	0	; () banked
 12215  005A2C  EE20 F014          	lfsr	2,20
 12216  005A30  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 12217  005A32  26D9               	addwf	fsr2l,f,c
 12218  005A34  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 12219  005A36  22DA               	addwfc	fsr2h,f,c
 12220  005A38  0100               	movlb	0	; () banked
 12221  005A3A  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 12222  005A3E  0100               	movlb	0	; () banked
 12223  005A40  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 12224  005A44  0100               	movlb	0	; () banked
 12225  005A46  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 12226  005A4A  0100               	movlb	0	; () banked
 12227  005A4C  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;key_menu.c: 636: crc_append(buf,sizeof(st_sysDataDef)-2);
 12231  005A50  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_append@message
 12232  005A54  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_append@message+1
 12233  005A58  0E00               	movlw	0
 12234  005A5A  0100               	movlb	0	; () banked
 12235  005A5C  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 12236  005A5E  0EEE               	movlw	238
 12237  005A60  6F6E               	movwf	crc_append@n& (0+255),b
 12238  005A62  EC14  F044         	call	_crc_append	;wreg free
 12239                           
 12240                           ;key_menu.c: 637: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 12241  005A66  0E00               	movlw	0
 12242  005A68  0100               	movlb	0	; () banked
 12243  005A6A  6F6E               	movwf	m_flash_write@addr& (0+255),b
 12244  005A6C  0EF4               	movlw	244
 12245  005A6E  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 12246  005A70  0E00               	movlw	0
 12247  005A72  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 12248  005A74  0E00               	movlw	0
 12249  005A76  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 12250  005A78  C0E1  F072         	movff	___sys_data_save_write_flash@buf,m_flash_write@buf
 12251  005A7C  C0E2  F073         	movff	___sys_data_save_write_flash@buf+1,m_flash_write@buf+1
 12252  005A80  0E00               	movlw	0
 12253  005A82  0100               	movlb	0	; () banked
 12254  005A84  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 12255  005A86  0EF0               	movlw	240
 12256  005A88  6F74               	movwf	m_flash_write@len& (0+255),b
 12257  005A8A  ECB6  F025         	call	_m_flash_write	;wreg free
 12258                           
 12259                           ;key_menu.c: 638: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 12260  005A8E  0E00               	movlw	0
 12261  005A90  0100               	movlb	0	; () banked
 12262  005A92  6F60               	movwf	m_flash_read@addr& (0+255),b
 12263  005A94  0EF4               	movlw	244
 12264  005A96  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 12265  005A98  0E00               	movlw	0
 12266  005A9A  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 12267  005A9C  0E00               	movlw	0
 12268  005A9E  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 12269  005AA0  C0E1  F064         	movff	___sys_data_save_write_flash@buf,m_flash_read@buf
 12270  005AA4  C0E2  F065         	movff	___sys_data_save_write_flash@buf+1,m_flash_read@buf+1
 12271  005AA8  0E00               	movlw	0
 12272  005AAA  0100               	movlb	0	; () banked
 12273  005AAC  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 12274  005AAE  0EF0               	movlw	240
 12275  005AB0  6F66               	movwf	m_flash_read@len& (0+255),b
 12276  005AB2  EC54  F03E         	call	_m_flash_read	;wreg free
 12277                           
 12278                           ;key_menu.c: 639: ret=crc_verify(buf,sizeof(st_sysDataDef));
 12279  005AB6  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_verify@message
 12280  005ABA  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_verify@message+1
 12281  005ABE  0E00               	movlw	0
 12282  005AC0  0100               	movlb	0	; () banked
 12283  005AC2  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 12284  005AC4  0EF0               	movlw	240
 12285  005AC6  6F6E               	movwf	crc_verify@n& (0+255),b
 12286  005AC8  EC8F  F03D         	call	_crc_verify	;wreg free
 12287  005ACC  0100               	movlb	0	; () banked
 12288  005ACE  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 12289  005AD0  0012               	return	
 12290  005AD2                     __end_of___sys_data_save_write_flash:
 12291                           	opt stack 0
 12292                           tblptru	equ	0xFF8
 12293                           tblptrh	equ	0xFF7
 12294                           tblptrl	equ	0xFF6
 12295                           tablat	equ	0xFF5
 12296                           prodh	equ	0xFF4
 12297                           prodl	equ	0xFF3
 12298                           intcon	equ	0xFF2
 12299                           postinc0	equ	0xFEE
 12300                           wreg	equ	0xFE8
 12301                           indf1	equ	0xFE7
 12302                           postinc1	equ	0xFE6
 12303                           postdec1	equ	0xFE5
 12304                           plusw1	equ	0xFE3
 12305                           fsr1h	equ	0xFE2
 12306                           fsr1l	equ	0xFE1
 12307                           indf2	equ	0xFDF
 12308                           postinc2	equ	0xFDE
 12309                           postdec2	equ	0xFDD
 12310                           plusw2	equ	0xFDB
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function ___enter_menu_epr_ilp_scale *****************
 12316 ;; Defined at:
 12317 ;;		line 310 in file "src/api/key_menu.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  __subMenu       1    wreg     unsigned char 
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 12322 ;;  t32             4   30[BANK0 ] long 
 12323 ;;  fps             2   34[BANK0 ] PTR struct .
 12324 ;;		 -> stSysData(240), 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;Total ram usage:        7 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    6
 12341 ;; This function calls:
 12342 ;;		___int32_2_mflot32
 12343 ;; This function is called by:
 12344 ;;		_key_process_set_down_long
 12345 ;;		___set_short_epr_ilp_scale
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text64
 12350  006B86                     __ptext64:
 12351                           	opt stack 0
 12352  006B86                     ___enter_menu_epr_ilp_scale:
 12353                           	opt stack 21
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;incstack = 0
 12357                           ;___enter_menu_epr_ilp_scale@__subMenu stored from wreg
 12358  006B86  0100               	movlb	0	; () banked
 12359  006B88  6F7D               	movwf	___enter_menu_epr_ilp_scale@__subMenu& (0+255),b
 12360                           
 12361                           ;key_menu.c: 312: menu=0xb0;
 12362  006B8A  0EB0               	movlw	176
 12363  006B8C  6E33               	movwf	_menu,c	;volatile
 12364                           
 12365                           ;key_menu.c: 313: subMenu=__subMenu;
 12366  006B8E  C07D  F032         	movff	___enter_menu_epr_ilp_scale@__subMenu,_subMenu	;volatile
 12367                           
 12368                           ;key_menu.c: 314: int32_t t32=0;
 12369  006B92  0E00               	movlw	0
 12370  006B94  0100               	movlb	0	; () banked
 12371  006B96  6F7E               	movwf	___enter_menu_epr_ilp_scale@t32& (0+255),b
 12372  006B98  0E00               	movlw	0
 12373  006B9A  6F7F               	movwf	(___enter_menu_epr_ilp_scale@t32+1)& (0+255),b
 12374  006B9C  0E00               	movlw	0
 12375  006B9E  6F80               	movwf	(___enter_menu_epr_ilp_scale@t32+2)& (0+255),b
 12376  006BA0  0E00               	movlw	0
 12377  006BA2  6F81               	movwf	(___enter_menu_epr_ilp_scale@t32+3)& (0+255),b
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;key_menu.c: 317: st_sysDataDef* fps= &stSysData;
 12381  006BA4  0E00               	movlw	low _stSysData
 12382  006BA6  0100               	movlb	0	; () banked
 12383  006BA8  6F82               	movwf	___enter_menu_epr_ilp_scale@fps& (0+255),b
 12384  006BAA  0E02               	movlw	high _stSysData
 12385  006BAC  0100               	movlb	0	; () banked
 12386  006BAE  6F83               	movwf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),b
 12387                           
 12388                           ;key_menu.c: 318: switch(subMenu)
 12389  006BB0  D01C               	goto	l15224
 12390  006BB2                     l15214:
 12391                           
 12392                           ; BSR set to: 0
 12393  006BB2  0100               	movlb	0	; () banked
 12394  006BB4  EE20 F0DC          	lfsr	2,220
 12395  006BB8  D00B               	goto	L14
 12396  006BBA                     l15216:
 12397                           
 12398                           ; BSR set to: 0
 12399  006BBA  0100               	movlb	0	; () banked
 12400  006BBC  EE20 F0E0          	lfsr	2,224
 12401  006BC0  D007               	goto	L14
 12402  006BC2                     l15218:
 12403                           
 12404                           ; BSR set to: 0
 12405  006BC2  0100               	movlb	0	; () banked
 12406  006BC4  EE20 F0E4          	lfsr	2,228
 12407  006BC8  D003               	goto	L14
 12408  006BCA                     l15220:
 12409                           
 12410                           ; BSR set to: 0
 12411  006BCA  0100               	movlb	0	; () banked
 12412  006BCC  EE20 F0E8          	lfsr	2,232
 12413  006BD0                     L14:
 12414  006BD0  5182               	movf	___enter_menu_epr_ilp_scale@fps& (0+255),w,b
 12415  006BD2  26D9               	addwf	fsr2l,f,c
 12416  006BD4  5183               	movf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),w,b
 12417  006BD6  22DA               	addwfc	fsr2h,f,c
 12418  006BD8  CFDE F07E          	movff	postinc2,___enter_menu_epr_ilp_scale@t32
 12419  006BDC  CFDE F07F          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+1
 12420  006BE0  CFDE F080          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+2
 12421  006BE4  CFDE F081          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+3
 12422  006BE8  D00E               	goto	l15226
 12423  006BEA                     l15224:
 12424                           
 12425                           ; BSR set to: 0
 12426  006BEA  5032               	movf	_subMenu,w,c	;volatile
 12427                           
 12428                           ; Switch size 1, requested type "space"
 12429                           ; Number of cases is 4, Range of values is 0 to 3
 12430                           ; switch strategies available:
 12431                           ; Name         Instructions Cycles
 12432                           ; simple_byte           13     7 (average)
 12433                           ;	Chosen strategy is simple_byte
 12434  006BEC  0A00               	xorlw	0	; case 0
 12435  006BEE  B4D8               	btfsc	status,2,c
 12436  006BF0  D7E0               	goto	l15214
 12437  006BF2  0A01               	xorlw	1	; case 1
 12438  006BF4  B4D8               	btfsc	status,2,c
 12439  006BF6  D7E1               	goto	l15216
 12440  006BF8  0A03               	xorlw	3	; case 2
 12441  006BFA  B4D8               	btfsc	status,2,c
 12442  006BFC  D7E2               	goto	l15218
 12443  006BFE  0A01               	xorlw	1	; case 3
 12444  006C00  A4D8               	btfss	status,2,c
 12445  006C02  0012               	return	
 12446  006C04  D7E2               	goto	l15220
 12447  006C06                     l15226:
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;key_menu.c: 327: t32=__int32_2_mflot32(t32);
 12451  006C06  C07E  F06D         	movff	___enter_menu_epr_ilp_scale@t32,___int32_2_mflot32@x
 12452  006C0A  C07F  F06E         	movff	___enter_menu_epr_ilp_scale@t32+1,___int32_2_mflot32@x+1
 12453  006C0E  C080  F06F         	movff	___enter_menu_epr_ilp_scale@t32+2,___int32_2_mflot32@x+2
 12454  006C12  C081  F070         	movff	___enter_menu_epr_ilp_scale@t32+3,___int32_2_mflot32@x+3
 12455  006C16  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 12456  006C1A  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_ilp_scale@t32
 12457  006C1E  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_ilp_scale@t32+1
 12458  006C22  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_ilp_scale@t32+2
 12459  006C26  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_ilp_scale@t32+3
 12460                           
 12461                           ;key_menu.c: 328: m_floatAdj.t32=t32;
 12462  006C2A  C07E  F035         	movff	___enter_menu_epr_ilp_scale@t32,_m_floatAdj
 12463  006C2E  C07F  F036         	movff	___enter_menu_epr_ilp_scale@t32+1,_m_floatAdj+1
 12464  006C32  C080  F037         	movff	___enter_menu_epr_ilp_scale@t32+2,_m_floatAdj+2
 12465  006C36  C081  F038         	movff	___enter_menu_epr_ilp_scale@t32+3,_m_floatAdj+3
 12466                           
 12467                           ;key_menu.c: 329: adjLocation=0;
 12468  006C3A  0E00               	movlw	0
 12469  006C3C  6E3F               	movwf	_adjLocation,c	;volatile
 12470  006C3E  0012               	return		;funcret
 12471  006C40                     __end_of___enter_menu_epr_ilp_scale:
 12472                           	opt stack 0
 12473                           tblptru	equ	0xFF8
 12474                           tblptrh	equ	0xFF7
 12475                           tblptrl	equ	0xFF6
 12476                           tablat	equ	0xFF5
 12477                           prodh	equ	0xFF4
 12478                           prodl	equ	0xFF3
 12479                           intcon	equ	0xFF2
 12480                           postinc0	equ	0xFEE
 12481                           wreg	equ	0xFE8
 12482                           indf1	equ	0xFE7
 12483                           postinc1	equ	0xFE6
 12484                           postdec1	equ	0xFE5
 12485                           plusw1	equ	0xFE3
 12486                           fsr1h	equ	0xFE2
 12487                           fsr1l	equ	0xFE1
 12488                           indf2	equ	0xFDF
 12489                           postinc2	equ	0xFDE
 12490                           postdec2	equ	0xFDD
 12491                           plusw2	equ	0xFDB
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function ___set_short_diff_calib *****************
 12497 ;; Defined at:
 12498 ;;		line 678 in file "src/api/key_menu.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  gohome          1    wreg     unsigned char 
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;  gohome          1   52[BANK0 ] unsigned char 
 12503 ;;  t32             4   55[BANK0 ] unsigned long 
 12504 ;;  pra             4   48[BANK0 ] unsigned long 
 12505 ;;  t16             2   59[BANK0 ] unsigned int 
 12506 ;;  adjv            1   61[BANK0 ] unsigned char 
 12507 ;;  saveFlg         1   54[BANK0 ] unsigned char 
 12508 ;;  t8              1   53[BANK0 ] unsigned char 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;Total ram usage:       20 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    9
 12525 ;; This function calls:
 12526 ;;		___enter_menu_calib_press_diff
 12527 ;;		___exit_menu_to_home_unsave
 12528 ;;		___mflot32_2_int32
 12529 ;;		_at24c02_write_n_byte
 12530 ;;		_crc_append
 12531 ;; This function is called by:
 12532 ;;		_key_process_set_long
 12533 ;;		_key_process_set
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text65
 12538  002240                     __ptext65:
 12539                           	opt stack 0
 12540  002240                     ___set_short_diff_calib:
 12541                           	opt stack 19
 12542                           
 12543                           ;incstack = 0
 12544                           ;___set_short_diff_calib@gohome stored from wreg
 12545  002240  0100               	movlb	0	; () banked
 12546  002242  6F94               	movwf	___set_short_diff_calib@gohome& (0+255),b
 12547                           
 12548                           ;key_menu.c: 680: bool saveFlg=0;
 12549  002244  0E00               	movlw	0
 12550  002246  0100               	movlb	0	; () banked
 12551  002248  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;key_menu.c: 681: uint8_t t8,adjv;
 12555                           ;key_menu.c: 682: uint16_t t16;
 12556                           ;key_menu.c: 683: uint32_t t32,pra;
 12557                           ;key_menu.c: 684: if(calibCol==0){
 12558  00224A  5030               	movf	_calibCol,w,c	;volatile
 12559  00224C  A4D8               	btfss	status,2,c
 12560  00224E  D021               	goto	l15848
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;key_menu.c: 685: t8=diff_prCalibTabDef.prCalibRow[calibRow].pCount;
 12564  002250  5031               	movf	_calibRow,w,c	;volatile
 12565  002252  0D34               	mullw	52
 12566  002254  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12567  002256  24F3               	addwf	prodl,w,c
 12568  002258  6ED9               	movwf	fsr2l,c
 12569  00225A  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12570  00225C  20F4               	addwfc	prodh,w,c
 12571  00225E  6EDA               	movwf	fsr2h,c
 12572  002260  50DF               	movf	indf2,w,c
 12573  002262  0100               	movlb	0	; () banked
 12574  002264  6F95               	movwf	___set_short_diff_calib@t8& (0+255),b
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;key_menu.c: 686: adjv=*(uint8_t*)(&adjValue);
 12578  002266  C039  F09D         	movff	_adjValue,___set_short_diff_calib@adjv
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;key_menu.c: 687: if(t8!=adjv){
 12582  00226A  0100               	movlb	0	; () banked
 12583  00226C  519D               	movf	___set_short_diff_calib@adjv& (0+255),w,b
 12584  00226E  0100               	movlb	0	; () banked
 12585  002270  1995               	xorwf	___set_short_diff_calib@t8& (0+255),w,b
 12586  002272  B4D8               	btfsc	status,2,c
 12587  002274  D148               	goto	l15858
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;key_menu.c: 688: saveFlg=1;
 12591  002276  0E01               	movlw	1
 12592  002278  0100               	movlb	0	; () banked
 12593  00227A  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;key_menu.c: 689: diff_prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
 12597  00227C  5031               	movf	_calibRow,w,c	;volatile
 12598  00227E  0D34               	mullw	52
 12599  002280  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12600  002282  24F3               	addwf	prodl,w,c
 12601  002284  6ED9               	movwf	fsr2l,c
 12602  002286  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12603  002288  20F4               	addwfc	prodh,w,c
 12604  00228A  6EDA               	movwf	fsr2h,c
 12605  00228C  C09D  FFDF         	movff	___set_short_diff_calib@adjv,indf2
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;key_menu.c: 690: }
 12609                           ;key_menu.c: 691: }else{
 12610  002290  D13A               	goto	l15858
 12611  002292                     l15848:
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;key_menu.c: 692: t32=__mflot32_2_int32(m_floatAdj.t32);
 12615  002292  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 12616  002296  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 12617  00229A  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 12618  00229E  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 12619  0022A2  EC8A  F038         	call	___mflot32_2_int32	;wreg free
 12620  0022A6  C06C  F097         	movff	?___mflot32_2_int32,___set_short_diff_calib@t32
 12621  0022AA  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_diff_calib@t32+1
 12622  0022AE  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_diff_calib@t32+2
 12623  0022B2  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_diff_calib@t32+3
 12624                           
 12625                           ;key_menu.c: 693: pra=diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].p
      +                          Value;
 12626  0022B6  5031               	movf	_calibRow,w,c	;volatile
 12627  0022B8  0D34               	mullw	52
 12628  0022BA  0EFC               	movlw	252
 12629  0022BC  0100               	movlb	0	; () banked
 12630  0022BE  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12631  0022C0  0EFF               	movlw	255
 12632  0022C2  0100               	movlb	0	; () banked
 12633  0022C4  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12634  0022C6  5030               	movf	_calibCol,w,c	;volatile
 12635  0022C8  0100               	movlb	0	; () banked
 12636  0022CA  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12637  0022CC  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12638  0022CE  0100               	movlb	0	; () banked
 12639  0022D0  90D8               	bcf	status,0,c
 12640  0022D2  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12641  0022D4  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12642  0022D6  0100               	movlb	0	; () banked
 12643  0022D8  90D8               	bcf	status,0,c
 12644  0022DA  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12645  0022DC  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12646  0022DE  0100               	movlb	0	; () banked
 12647  0022E0  90D8               	bcf	status,0,c
 12648  0022E2  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12649  0022E4  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12650  0022E6  0100               	movlb	0	; () banked
 12651  0022E8  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12652  0022EA  0100               	movlb	0	; () banked
 12653  0022EC  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12654  0022EE  0100               	movlb	0	; () banked
 12655  0022F0  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12656  0022F2  0100               	movlb	0	; () banked
 12657  0022F4  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12658  0022F6  0E10               	movlw	low _diff_prCalibTabDef
 12659  0022F8  0100               	movlb	0	; () banked
 12660  0022FA  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12661  0022FC  0E03               	movlw	high _diff_prCalibTabDef
 12662  0022FE  0100               	movlb	0	; () banked
 12663  002300  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12664  002302  0E04               	movlw	4
 12665  002304  0100               	movlb	0	; () banked
 12666  002306  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12667  002308  0E00               	movlw	0
 12668  00230A  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12669  00230C  0100               	movlb	0	; () banked
 12670  00230E  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12671  002310  0100               	movlb	0	; () banked
 12672  002312  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12673  002314  0100               	movlb	0	; () banked
 12674  002316  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12675  002318  0100               	movlb	0	; () banked
 12676  00231A  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12677  00231C  50F3               	movf	prodl,w,c
 12678  00231E  0100               	movlb	0	; () banked
 12679  002320  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12680  002322  6ED9               	movwf	fsr2l,c
 12681  002324  50F4               	movf	prodh,w,c
 12682  002326  0100               	movlb	0	; () banked
 12683  002328  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12684  00232A  6EDA               	movwf	fsr2h,c
 12685  00232C  CFDE F090          	movff	postinc2,___set_short_diff_calib@pra
 12686  002330  CFDE F091          	movff	postinc2,___set_short_diff_calib@pra+1
 12687  002334  CFDE F092          	movff	postinc2,___set_short_diff_calib@pra+2
 12688  002338  CFDE F093          	movff	postinc2,___set_short_diff_calib@pra+3
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;key_menu.c: 694: if(pra!=t32){
 12692  00233C  0100               	movlb	0	; () banked
 12693  00233E  5197               	movf	___set_short_diff_calib@t32& (0+255),w,b
 12694  002340  0100               	movlb	0	; () banked
 12695  002342  1990               	xorwf	___set_short_diff_calib@pra& (0+255),w,b
 12696  002344  E110               	bnz	u15030
 12697  002346  0100               	movlb	0	; () banked
 12698  002348  5198               	movf	(___set_short_diff_calib@t32+1)& (0+255),w,b
 12699  00234A  0100               	movlb	0	; () banked
 12700  00234C  1991               	xorwf	(___set_short_diff_calib@pra+1)& (0+255),w,b
 12701  00234E  E10B               	bnz	u15030
 12702  002350  0100               	movlb	0	; () banked
 12703  002352  5199               	movf	(___set_short_diff_calib@t32+2)& (0+255),w,b
 12704  002354  0100               	movlb	0	; () banked
 12705  002356  1992               	xorwf	(___set_short_diff_calib@pra+2)& (0+255),w,b
 12706  002358  E106               	bnz	u15030
 12707  00235A  0100               	movlb	0	; () banked
 12708  00235C  519A               	movf	(___set_short_diff_calib@t32+3)& (0+255),w,b
 12709  00235E  0100               	movlb	0	; () banked
 12710  002360  1993               	xorwf	(___set_short_diff_calib@pra+3)& (0+255),w,b
 12711  002362  B4D8               	btfsc	status,2,c
 12712  002364  D0D0               	goto	l15858
 12713  002366                     u15030:
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;key_menu.c: 695: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValu
      +                          e=t32;
 12717  002366  5031               	movf	_calibRow,w,c	;volatile
 12718  002368  0D34               	mullw	52
 12719  00236A  0EFC               	movlw	252
 12720  00236C  0100               	movlb	0	; () banked
 12721  00236E  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12722  002370  0EFF               	movlw	255
 12723  002372  0100               	movlb	0	; () banked
 12724  002374  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12725  002376  5030               	movf	_calibCol,w,c	;volatile
 12726  002378  0100               	movlb	0	; () banked
 12727  00237A  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12728  00237C  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12729  00237E  0100               	movlb	0	; () banked
 12730  002380  90D8               	bcf	status,0,c
 12731  002382  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12732  002384  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12733  002386  0100               	movlb	0	; () banked
 12734  002388  90D8               	bcf	status,0,c
 12735  00238A  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12736  00238C  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12737  00238E  0100               	movlb	0	; () banked
 12738  002390  90D8               	bcf	status,0,c
 12739  002392  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12740  002394  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12741  002396  0100               	movlb	0	; () banked
 12742  002398  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12743  00239A  0100               	movlb	0	; () banked
 12744  00239C  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12745  00239E  0100               	movlb	0	; () banked
 12746  0023A0  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12747  0023A2  0100               	movlb	0	; () banked
 12748  0023A4  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12749  0023A6  0E10               	movlw	low _diff_prCalibTabDef
 12750  0023A8  0100               	movlb	0	; () banked
 12751  0023AA  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12752  0023AC  0E03               	movlw	high _diff_prCalibTabDef
 12753  0023AE  0100               	movlb	0	; () banked
 12754  0023B0  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12755  0023B2  0E04               	movlw	4
 12756  0023B4  0100               	movlb	0	; () banked
 12757  0023B6  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12758  0023B8  0E00               	movlw	0
 12759  0023BA  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12760  0023BC  0100               	movlb	0	; () banked
 12761  0023BE  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12762  0023C0  0100               	movlb	0	; () banked
 12763  0023C2  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12764  0023C4  0100               	movlb	0	; () banked
 12765  0023C6  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12766  0023C8  0100               	movlb	0	; () banked
 12767  0023CA  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12768  0023CC  50F3               	movf	prodl,w,c
 12769  0023CE  0100               	movlb	0	; () banked
 12770  0023D0  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12771  0023D2  6ED9               	movwf	fsr2l,c
 12772  0023D4  50F4               	movf	prodh,w,c
 12773  0023D6  0100               	movlb	0	; () banked
 12774  0023D8  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12775  0023DA  6EDA               	movwf	fsr2h,c
 12776  0023DC  C097  FFDE         	movff	___set_short_diff_calib@t32,postinc2
 12777  0023E0  C098  FFDE         	movff	___set_short_diff_calib@t32+1,postinc2
 12778  0023E4  C099  FFDE         	movff	___set_short_diff_calib@t32+2,postinc2
 12779  0023E8  C09A  FFDE         	movff	___set_short_diff_calib@t32+3,postinc2
 12780                           
 12781                           ;key_menu.c: 696: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcV
      +                          alue=x_prDiffData.pAdcValue;
 12782  0023EC  5031               	movf	_calibRow,w,c	;volatile
 12783  0023EE  0D34               	mullw	52
 12784  0023F0  0EFC               	movlw	252
 12785  0023F2  0100               	movlb	0	; () banked
 12786  0023F4  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12787  0023F6  0EFF               	movlw	255
 12788  0023F8  0100               	movlb	0	; () banked
 12789  0023FA  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12790  0023FC  5030               	movf	_calibCol,w,c	;volatile
 12791  0023FE  0100               	movlb	0	; () banked
 12792  002400  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12793  002402  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12794  002404  0100               	movlb	0	; () banked
 12795  002406  90D8               	bcf	status,0,c
 12796  002408  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12797  00240A  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12798  00240C  0100               	movlb	0	; () banked
 12799  00240E  90D8               	bcf	status,0,c
 12800  002410  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12801  002412  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12802  002414  0100               	movlb	0	; () banked
 12803  002416  90D8               	bcf	status,0,c
 12804  002418  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12805  00241A  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12806  00241C  0100               	movlb	0	; () banked
 12807  00241E  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12808  002420  0100               	movlb	0	; () banked
 12809  002422  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12810  002424  0100               	movlb	0	; () banked
 12811  002426  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12812  002428  0100               	movlb	0	; () banked
 12813  00242A  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12814  00242C  0E10               	movlw	low _diff_prCalibTabDef
 12815  00242E  0100               	movlb	0	; () banked
 12816  002430  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12817  002432  0E03               	movlw	high _diff_prCalibTabDef
 12818  002434  0100               	movlb	0	; () banked
 12819  002436  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12820  002438  0E04               	movlw	4
 12821  00243A  0100               	movlb	0	; () banked
 12822  00243C  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12823  00243E  0E00               	movlw	0
 12824  002440  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12825  002442  0100               	movlb	0	; () banked
 12826  002444  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12827  002446  0100               	movlb	0	; () banked
 12828  002448  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12829  00244A  0100               	movlb	0	; () banked
 12830  00244C  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12831  00244E  0100               	movlb	0	; () banked
 12832  002450  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12833  002452  50F3               	movf	prodl,w,c
 12834  002454  0100               	movlb	0	; () banked
 12835  002456  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12836  002458  50F4               	movf	prodh,w,c
 12837  00245A  0100               	movlb	0	; () banked
 12838  00245C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12839  00245E  0E04               	movlw	4
 12840  002460  0100               	movlb	0	; () banked
 12841  002462  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12842  002464  6ED9               	movwf	fsr2l,c
 12843  002466  0E00               	movlw	0
 12844  002468  0100               	movlb	0	; () banked
 12845  00246A  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12846  00246C  6EDA               	movwf	fsr2h,c
 12847  00246E  C1EC  FFDE         	movff	_x_prDiffData+4,postinc2
 12848  002472  C1ED  FFDD         	movff	_x_prDiffData+5,postdec2
 12849                           
 12850                           ;key_menu.c: 697: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcV
      +                          alue=x_prDiffData.tAdcValue;
 12851  002476  5031               	movf	_calibRow,w,c	;volatile
 12852  002478  0D34               	mullw	52
 12853  00247A  0EFC               	movlw	252
 12854  00247C  0100               	movlb	0	; () banked
 12855  00247E  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12856  002480  0EFF               	movlw	255
 12857  002482  0100               	movlb	0	; () banked
 12858  002484  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12859  002486  5030               	movf	_calibCol,w,c	;volatile
 12860  002488  0100               	movlb	0	; () banked
 12861  00248A  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12862  00248C  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12863  00248E  0100               	movlb	0	; () banked
 12864  002490  90D8               	bcf	status,0,c
 12865  002492  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12866  002494  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12867  002496  0100               	movlb	0	; () banked
 12868  002498  90D8               	bcf	status,0,c
 12869  00249A  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12870  00249C  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12871  00249E  0100               	movlb	0	; () banked
 12872  0024A0  90D8               	bcf	status,0,c
 12873  0024A2  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12874  0024A4  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12875  0024A6  0100               	movlb	0	; () banked
 12876  0024A8  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12877  0024AA  0100               	movlb	0	; () banked
 12878  0024AC  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12879  0024AE  0100               	movlb	0	; () banked
 12880  0024B0  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12881  0024B2  0100               	movlb	0	; () banked
 12882  0024B4  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12883  0024B6  0E10               	movlw	low _diff_prCalibTabDef
 12884  0024B8  0100               	movlb	0	; () banked
 12885  0024BA  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12886  0024BC  0E03               	movlw	high _diff_prCalibTabDef
 12887  0024BE  0100               	movlb	0	; () banked
 12888  0024C0  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12889  0024C2  0E04               	movlw	4
 12890  0024C4  0100               	movlb	0	; () banked
 12891  0024C6  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12892  0024C8  0E00               	movlw	0
 12893  0024CA  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12894  0024CC  0100               	movlb	0	; () banked
 12895  0024CE  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12896  0024D0  0100               	movlb	0	; () banked
 12897  0024D2  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12898  0024D4  0100               	movlb	0	; () banked
 12899  0024D6  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12900  0024D8  0100               	movlb	0	; () banked
 12901  0024DA  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12902  0024DC  50F3               	movf	prodl,w,c
 12903  0024DE  0100               	movlb	0	; () banked
 12904  0024E0  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12905  0024E2  50F4               	movf	prodh,w,c
 12906  0024E4  0100               	movlb	0	; () banked
 12907  0024E6  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12908  0024E8  0E06               	movlw	6
 12909  0024EA  0100               	movlb	0	; () banked
 12910  0024EC  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12911  0024EE  6ED9               	movwf	fsr2l,c
 12912  0024F0  0E00               	movlw	0
 12913  0024F2  0100               	movlb	0	; () banked
 12914  0024F4  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12915  0024F6  6EDA               	movwf	fsr2h,c
 12916  0024F8  C1EE  FFDE         	movff	_x_prDiffData+6,postinc2
 12917  0024FC  C1EF  FFDD         	movff	_x_prDiffData+7,postdec2
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;key_menu.c: 698: saveFlg=1;
 12921  002500  0E01               	movlw	1
 12922  002502  0100               	movlb	0	; () banked
 12923  002504  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12924  002506                     l15858:
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;key_menu.c: 699: }
 12928                           ;key_menu.c: 700: }
 12929                           ;key_menu.c: 702: if(saveFlg){
 12930  002506  0100               	movlb	0	; () banked
 12931  002508  5196               	movf	___set_short_diff_calib@saveFlg& (0+255),w,b
 12932  00250A  0100               	movlb	0	; () banked
 12933  00250C  B4D8               	btfsc	status,2,c
 12934  00250E  D02A               	goto	l15866
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;key_menu.c: 703: t16=sizeof(diff_prCalibTabDef);
 12938  002510  0E00               	movlw	0
 12939  002512  0100               	movlb	0	; () banked
 12940  002514  6F9C               	movwf	(___set_short_diff_calib@t16+1)& (0+255),b
 12941  002516  0EA2               	movlw	162
 12942  002518  6F9B               	movwf	___set_short_diff_calib@t16& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;key_menu.c: 704: crc_append((uint8_t*)&diff_prCalibTabDef,t16-2);
 12946  00251A  0E10               	movlw	low _diff_prCalibTabDef
 12947  00251C  0100               	movlb	0	; () banked
 12948  00251E  6F6C               	movwf	crc_append@message& (0+255),b
 12949  002520  0E03               	movlw	high _diff_prCalibTabDef
 12950  002522  0100               	movlb	0	; () banked
 12951  002524  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 12952  002526  0EFE               	movlw	254
 12953  002528  0100               	movlb	0	; () banked
 12954  00252A  259B               	addwf	___set_short_diff_calib@t16& (0+255),w,b
 12955  00252C  0100               	movlb	0	; () banked
 12956  00252E  6F6E               	movwf	crc_append@n& (0+255),b
 12957  002530  0EFF               	movlw	255
 12958  002532  0100               	movlb	0	; () banked
 12959  002534  219C               	addwfc	(___set_short_diff_calib@t16+1)& (0+255),w,b
 12960  002536  0100               	movlb	0	; () banked
 12961  002538  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 12962  00253A  EC14  F044         	call	_crc_append	;wreg free
 12963                           
 12964                           ;key_menu.c: 705: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&diff_prCalibTabDef
      +                          ,t16);
 12965  00253E  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 12966  002542  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 12967  002546  0E00               	movlw	0
 12968  002548  0100               	movlb	0	; () banked
 12969  00254A  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 12970  00254C  0E10               	movlw	low _diff_prCalibTabDef
 12971  00254E  0100               	movlb	0	; () banked
 12972  002550  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 12973  002552  0E03               	movlw	high _diff_prCalibTabDef
 12974  002554  0100               	movlb	0	; () banked
 12975  002556  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 12976  002558  C09B  F06B         	movff	___set_short_diff_calib@t16,at24c02_write_n_byte@len
 12977  00255C  C09C  F06C         	movff	___set_short_diff_calib@t16+1,at24c02_write_n_byte@len+1
 12978  002560  ECC9  F029         	call	_at24c02_write_n_byte	;wreg free
 12979  002564                     l15866:
 12980                           
 12981                           ;key_menu.c: 706: }
 12982                           ;key_menu.c: 707: if(gohome){__exit_menu_to_home_unsave(); return;}
 12983  002564  0100               	movlb	0	; () banked
 12984  002566  5194               	movf	___set_short_diff_calib@gohome& (0+255),w,b
 12985  002568  0100               	movlb	0	; () banked
 12986  00256A  B4D8               	btfsc	status,2,c
 12987  00256C  D003               	goto	l15872
 12988                           
 12989                           ; BSR set to: 0
 12990  00256E  EC2C  F049         	call	___exit_menu_to_home_unsave	;wreg free
 12991  002572  0012               	return	
 12992  002574                     l15872:
 12993                           
 12994                           ;key_menu.c: 708: calibCol++;
 12995  002574  2A30               	incf	_calibCol,f,c	;volatile
 12996                           
 12997                           ;key_menu.c: 709: if(calibCol>diff_prCalibTabDef.prCalibRow[calibRow].pCount){
 12998  002576  5031               	movf	_calibRow,w,c	;volatile
 12999  002578  0D34               	mullw	52
 13000  00257A  0E14               	movlw	low (_diff_prCalibTabDef+4)
 13001  00257C  24F3               	addwf	prodl,w,c
 13002  00257E  6ED9               	movwf	fsr2l,c
 13003  002580  0E03               	movlw	high (_diff_prCalibTabDef+4)
 13004  002582  20F4               	addwfc	prodh,w,c
 13005  002584  6EDA               	movwf	fsr2h,c
 13006  002586  5030               	movf	_calibCol,w,c	;volatile
 13007  002588  5CDE               	subwf	postinc2,w,c
 13008  00258A  B0D8               	btfsc	status,0,c
 13009  00258C  D008               	goto	l15884
 13010                           
 13011                           ;key_menu.c: 710: calibCol=0;
 13012  00258E  0E00               	movlw	0
 13013  002590  6E30               	movwf	_calibCol,c	;volatile
 13014                           
 13015                           ;key_menu.c: 711: calibRow++;
 13016  002592  2A31               	incf	_calibRow,f,c	;volatile
 13017                           
 13018                           ;key_menu.c: 712: if(calibRow>2)calibRow=0;
 13019  002594  0E02               	movlw	2
 13020  002596  6431               	cpfsgt	_calibRow,c	;volatile
 13021  002598  D002               	goto	l15884
 13022  00259A  0E00               	movlw	0
 13023  00259C  6E31               	movwf	_calibRow,c	;volatile
 13024  00259E                     l15884:
 13025                           
 13026                           ;key_menu.c: 713: }
 13027                           ;key_menu.c: 714: __enter_menu_calib_press_diff(calibRow,calibCol);
 13028  00259E  C030  F020         	movff	_calibCol,___enter_menu_calib_press_diff@col	;volatile
 13029  0025A2  5031               	movf	_calibRow,w,c	;volatile
 13030  0025A4  EC69  F02D         	call	___enter_menu_calib_press_diff
 13031  0025A8  0012               	return		;funcret
 13032  0025AA                     __end_of___set_short_diff_calib:
 13033                           	opt stack 0
 13034                           tblptru	equ	0xFF8
 13035                           tblptrh	equ	0xFF7
 13036                           tblptrl	equ	0xFF6
 13037                           tablat	equ	0xFF5
 13038                           prodh	equ	0xFF4
 13039                           prodl	equ	0xFF3
 13040                           intcon	equ	0xFF2
 13041                           postinc0	equ	0xFEE
 13042                           wreg	equ	0xFE8
 13043                           indf1	equ	0xFE7
 13044                           postinc1	equ	0xFE6
 13045                           postdec1	equ	0xFE5
 13046                           plusw1	equ	0xFE3
 13047                           fsr1h	equ	0xFE2
 13048                           fsr1l	equ	0xFE1
 13049                           indf2	equ	0xFDF
 13050                           postinc2	equ	0xFDE
 13051                           postdec2	equ	0xFDD
 13052                           plusw2	equ	0xFDB
 13053                           fsr2h	equ	0xFDA
 13054                           fsr2l	equ	0xFD9
 13055                           status	equ	0xFD8
 13056                           
 13057 ;; *************** function ___mflot32_2_int32 *****************
 13058 ;; Defined at:
 13059 ;;		line 77 in file "src/api/ui.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;  x               4   12[BANK0 ] long 
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;  mf              4   21[BANK0 ] struct .
 13064 ;;  ret             4   17[BANK0 ] long 
 13065 ;;  i               1   16[BANK0 ] unsigned char 
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  4   12[BANK0 ] long 
 13068 ;; Registers used:
 13069 ;;		wreg, status,2, status,0, cstack
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/0
 13072 ;;		On exit  : 0/0
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13078 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13079 ;;Total ram usage:       13 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; Hardware stack levels required when called:    5
 13082 ;; This function calls:
 13083 ;;		___lmul
 13084 ;; This function is called by:
 13085 ;;		___set_short_pose_size
 13086 ;;		___set_short_diff_calib
 13087 ;;		___set_short_pr_calib
 13088 ;;		___set_short_warn_value
 13089 ;;		___set_short_epr_param
 13090 ;;		___set_short_epr_ilp_scale
 13091 ;;		___set_long_density
 13092 ;;		___set_long_base_zero
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text66
 13097  007114                     __ptext66:
 13098                           	opt stack 0
 13099  007114                     ___mflot32_2_int32:
 13100                           	opt stack 22
 13101                           
 13102                           ;ui.c: 79: uint8_t i;
 13103                           ;ui.c: 80: st_float32 mf={0};
 13104                           
 13105                           ;incstack = 0
 13106  007114  C13E  F075         	movff	___mflot32_2_int32@F7717,___mflot32_2_int32@mf
 13107  007118  C13F  F076         	movff	___mflot32_2_int32@F7717+1,___mflot32_2_int32@mf+1
 13108  00711C  C140  F077         	movff	___mflot32_2_int32@F7717+2,___mflot32_2_int32@mf+2
 13109  007120  C141  F078         	movff	___mflot32_2_int32@F7717+3,___mflot32_2_int32@mf+3
 13110                           
 13111                           ;ui.c: 81: int32_t ret;
 13112                           ;ui.c: 82: mf.t32=x;
 13113  007124  C06C  F075         	movff	___mflot32_2_int32@x,___mflot32_2_int32@mf
 13114  007128  C06D  F076         	movff	___mflot32_2_int32@x+1,___mflot32_2_int32@mf+1
 13115  00712C  C06E  F077         	movff	___mflot32_2_int32@x+2,___mflot32_2_int32@mf+2
 13116  007130  C06F  F078         	movff	___mflot32_2_int32@x+3,___mflot32_2_int32@mf+3
 13117                           
 13118                           ;ui.c: 83: ret=mf.stru.significand;
 13119  007134  C075  F071         	movff	___mflot32_2_int32@mf,___mflot32_2_int32@ret
 13120  007138  C076  F072         	movff	___mflot32_2_int32@mf+1,___mflot32_2_int32@ret+1
 13121  00713C  0100               	movlb	0	; () banked
 13122  00713E  6B73               	clrf	(___mflot32_2_int32@ret+2)& (0+255),b
 13123  007140  6B74               	clrf	(___mflot32_2_int32@ret+3)& (0+255),b
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;ui.c: 84: for(i=0;i<mf.stru.exponent;i++){
 13127  007142  0E00               	movlw	0
 13128  007144  0100               	movlb	0	; () banked
 13129  007146  6F70               	movwf	___mflot32_2_int32@i& (0+255),b
 13130  007148  D01D               	goto	l15264
 13131  00714A                     l15260:
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;ui.c: 85: ret*=10;
 13135  00714A  C071  F060         	movff	___mflot32_2_int32@ret,___lmul@multiplier
 13136  00714E  C072  F061         	movff	___mflot32_2_int32@ret+1,___lmul@multiplier+1
 13137  007152  C073  F062         	movff	___mflot32_2_int32@ret+2,___lmul@multiplier+2
 13138  007156  C074  F063         	movff	___mflot32_2_int32@ret+3,___lmul@multiplier+3
 13139  00715A  0E0A               	movlw	10
 13140  00715C  0100               	movlb	0	; () banked
 13141  00715E  6F64               	movwf	___lmul@multiplicand& (0+255),b
 13142  007160  0E00               	movlw	0
 13143  007162  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13144  007164  0E00               	movlw	0
 13145  007166  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13146  007168  0E00               	movlw	0
 13147  00716A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13148  00716C  EC3C  F040         	call	___lmul	;wreg free
 13149  007170  C060  F071         	movff	?___lmul,___mflot32_2_int32@ret
 13150  007174  C061  F072         	movff	?___lmul+1,___mflot32_2_int32@ret+1
 13151  007178  C062  F073         	movff	?___lmul+2,___mflot32_2_int32@ret+2
 13152  00717C  C063  F074         	movff	?___lmul+3,___mflot32_2_int32@ret+3
 13153  007180  0100               	movlb	0	; () banked
 13154  007182  2B70               	incf	___mflot32_2_int32@i& (0+255),f,b
 13155  007184                     l15264:
 13156                           
 13157                           ; BSR set to: 0
 13158  007184  0100               	movlb	0	; () banked
 13159  007186  5177               	movf	(___mflot32_2_int32@mf+2)& (0+255),w,b
 13160  007188  0100               	movlb	0	; () banked
 13161  00718A  5D70               	subwf	___mflot32_2_int32@i& (0+255),w,b
 13162  00718C  A0D8               	btfss	status,0,c
 13163  00718E  D7DD               	goto	l15260
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;ui.c: 86: }
 13167                           ;ui.c: 87: if(mf.stru.sign)ret=((~ret)+1);
 13168                           
 13169                           ; BSR set to: 0
 13170  007190  0100               	movlb	0	; () banked
 13171  007192  5178               	movf	(___mflot32_2_int32@mf+3)& (0+255),w,b
 13172  007194  B4D8               	btfsc	status,2,c
 13173  007196  D009               	goto	l15270
 13174                           
 13175                           ; BSR set to: 0
 13176  007198  0100               	movlb	0	; () banked
 13177  00719A  1F74               	comf	(___mflot32_2_int32@ret+3)& (0+255),f,b
 13178  00719C  1F73               	comf	(___mflot32_2_int32@ret+2)& (0+255),f,b
 13179  00719E  1F72               	comf	(___mflot32_2_int32@ret+1)& (0+255),f,b
 13180  0071A0  6D71               	negf	___mflot32_2_int32@ret& (0+255),b
 13181  0071A2  0E00               	movlw	0
 13182  0071A4  2372               	addwfc	(___mflot32_2_int32@ret+1)& (0+255),f,b
 13183  0071A6  2373               	addwfc	(___mflot32_2_int32@ret+2)& (0+255),f,b
 13184  0071A8  2374               	addwfc	(___mflot32_2_int32@ret+3)& (0+255),f,b
 13185  0071AA                     l15270:
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;ui.c: 88: return ret;
 13189  0071AA  C071  F06C         	movff	___mflot32_2_int32@ret,?___mflot32_2_int32
 13190  0071AE  C072  F06D         	movff	___mflot32_2_int32@ret+1,?___mflot32_2_int32+1
 13191  0071B2  C073  F06E         	movff	___mflot32_2_int32@ret+2,?___mflot32_2_int32+2
 13192  0071B6  C074  F06F         	movff	___mflot32_2_int32@ret+3,?___mflot32_2_int32+3
 13193  0071BA  0012               	return	
 13194  0071BC                     __end_of___mflot32_2_int32:
 13195                           	opt stack 0
 13196                           tblptru	equ	0xFF8
 13197                           tblptrh	equ	0xFF7
 13198                           tblptrl	equ	0xFF6
 13199                           tablat	equ	0xFF5
 13200                           prodh	equ	0xFF4
 13201                           prodl	equ	0xFF3
 13202                           intcon	equ	0xFF2
 13203                           postinc0	equ	0xFEE
 13204                           wreg	equ	0xFE8
 13205                           indf1	equ	0xFE7
 13206                           postinc1	equ	0xFE6
 13207                           postdec1	equ	0xFE5
 13208                           plusw1	equ	0xFE3
 13209                           fsr1h	equ	0xFE2
 13210                           fsr1l	equ	0xFE1
 13211                           indf2	equ	0xFDF
 13212                           postinc2	equ	0xFDE
 13213                           postdec2	equ	0xFDD
 13214                           plusw2	equ	0xFDB
 13215                           fsr2h	equ	0xFDA
 13216                           fsr2l	equ	0xFD9
 13217                           status	equ	0xFD8
 13218                           
 13219 ;; *************** function ___exit_menu_to_home_unsave *****************
 13220 ;; Defined at:
 13221 ;;		line 350 in file "src/api/key_menu.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;		None
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;		None
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  1    wreg      void 
 13228 ;; Registers used:
 13229 ;;		wreg, status,2
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;Total ram usage:        0 bytes
 13240 ;; Hardware stack levels used:    1
 13241 ;; Hardware stack levels required when called:    4
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		___set_short_pose_size
 13246 ;;		___set_short_diff_calib
 13247 ;;		___set_short_pr_calib
 13248 ;;		___set_short_poly_coefic
 13249 ;;		___set_short_warn_type
 13250 ;;		___set_short_warn_value
 13251 ;;		___set_short_epr_param
 13252 ;;		___set_short_epr_ilp_scale
 13253 ;;		___set_long_density
 13254 ;;		___set_long_base_zero
 13255 ;;		___set_long_bar_level_scale
 13256 ;;		___set_long_work_mode
 13257 ;;		_key_process_set_long
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261                           	psect	text67
 13262  009258                     __ptext67:
 13263                           	opt stack 0
 13264  009258                     ___exit_menu_to_home_unsave:
 13265                           	opt stack 23
 13266                           
 13267                           ;key_menu.c: 352: menu=0x00;
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;incstack = 0
 13271  009258  0E00               	movlw	0
 13272  00925A  6E33               	movwf	_menu,c	;volatile
 13273                           
 13274                           ;key_menu.c: 353: subMenu=0x00;
 13275  00925C  0E00               	movlw	0
 13276  00925E  6E32               	movwf	_subMenu,c	;volatile
 13277                           
 13278                           ;key_menu.c: 355: adjValue=0;
 13279  009260  0E00               	movlw	0
 13280  009262  6E39               	movwf	_adjValue,c	;volatile
 13281  009264  0E00               	movlw	0
 13282  009266  6E3A               	movwf	_adjValue+1,c	;volatile
 13283  009268  0E00               	movlw	0
 13284  00926A  6E3B               	movwf	_adjValue+2,c	;volatile
 13285  00926C  0E00               	movlw	0
 13286  00926E  6E3C               	movwf	_adjValue+3,c	;volatile
 13287                           
 13288                           ;key_menu.c: 356: m_floatAdj.t32=0;
 13289  009270  0E00               	movlw	0
 13290  009272  6E35               	movwf	_m_floatAdj,c
 13291  009274  0E00               	movlw	0
 13292  009276  6E36               	movwf	_m_floatAdj+1,c
 13293  009278  0E00               	movlw	0
 13294  00927A  6E37               	movwf	_m_floatAdj+2,c
 13295  00927C  0E00               	movlw	0
 13296  00927E  6E38               	movwf	_m_floatAdj+3,c
 13297                           
 13298                           ;key_menu.c: 357: adjLocation=0x00;
 13299  009280  0E00               	movlw	0
 13300  009282  6E3F               	movwf	_adjLocation,c	;volatile
 13301                           
 13302                           ;key_menu.c: 359: calibRow=0;
 13303  009284  0E00               	movlw	0
 13304  009286  6E31               	movwf	_calibRow,c	;volatile
 13305                           
 13306                           ;key_menu.c: 360: calibCol=0;
 13307  009288  0E00               	movlw	0
 13308  00928A  6E30               	movwf	_calibCol,c	;volatile
 13309                           
 13310                           ;key_menu.c: 361: passWord=0x00;
 13311  00928C  0E00               	movlw	0
 13312  00928E  6E3E               	movwf	_passWord+1,c	;volatile
 13313  009290  0E00               	movlw	0
 13314  009292  6E3D               	movwf	_passWord,c	;volatile
 13315  009294  0012               	return		;funcret
 13316  009296                     __end_of___exit_menu_to_home_unsave:
 13317                           	opt stack 0
 13318                           tblptru	equ	0xFF8
 13319                           tblptrh	equ	0xFF7
 13320                           tblptrl	equ	0xFF6
 13321                           tablat	equ	0xFF5
 13322                           prodh	equ	0xFF4
 13323                           prodl	equ	0xFF3
 13324                           intcon	equ	0xFF2
 13325                           postinc0	equ	0xFEE
 13326                           wreg	equ	0xFE8
 13327                           indf1	equ	0xFE7
 13328                           postinc1	equ	0xFE6
 13329                           postdec1	equ	0xFE5
 13330                           plusw1	equ	0xFE3
 13331                           fsr1h	equ	0xFE2
 13332                           fsr1l	equ	0xFE1
 13333                           indf2	equ	0xFDF
 13334                           postinc2	equ	0xFDE
 13335                           postdec2	equ	0xFDD
 13336                           plusw2	equ	0xFDB
 13337                           fsr2h	equ	0xFDA
 13338                           fsr2l	equ	0xFD9
 13339                           status	equ	0xFD8
 13340                           
 13341 ;; *************** function ___enter_menu_calib_press_diff *****************
 13342 ;; Defined at:
 13343 ;;		line 196 in file "src/api/key_menu.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  row             1    wreg     unsigned char 
 13346 ;;  col             1   31[COMRAM] unsigned char 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  row             1   35[BANK0 ] unsigned char 
 13349 ;;  t32             4   38[BANK0 ] long 
 13350 ;;  stp             2   36[BANK0 ] PTR struct .
 13351 ;;		 -> diff_prCalibTabDef(162), 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;Total ram usage:       14 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    6
 13368 ;; This function calls:
 13369 ;;		___int32_2_mflot32
 13370 ;; This function is called by:
 13371 ;;		_key_process_set_down_long
 13372 ;;		___set_short_diff_calib
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text68
 13377  005AD2                     __ptext68:
 13378                           	opt stack 0
 13379  005AD2                     ___enter_menu_calib_press_diff:
 13380                           	opt stack 21
 13381                           
 13382                           ;incstack = 0
 13383                           ;___enter_menu_calib_press_diff@row stored from wreg
 13384  005AD2  0100               	movlb	0	; () banked
 13385  005AD4  6F83               	movwf	___enter_menu_calib_press_diff@row& (0+255),b
 13386                           
 13387                           ;key_menu.c: 199: int32_t t32;
 13388                           ;key_menu.c: 200: st_prCalibTabDef* stp;
 13389                           ;key_menu.c: 202: menu=0x50;
 13390  005AD6  0E50               	movlw	80
 13391  005AD8  6E33               	movwf	_menu,c	;volatile
 13392                           
 13393                           ;key_menu.c: 203: subMenu=0;
 13394  005ADA  0E00               	movlw	0
 13395  005ADC  6E32               	movwf	_subMenu,c	;volatile
 13396                           
 13397                           ;key_menu.c: 204: calibRow=row;
 13398  005ADE  C083  F031         	movff	___enter_menu_calib_press_diff@row,_calibRow	;volatile
 13399                           
 13400                           ;key_menu.c: 205: calibCol=col;
 13401  005AE2  C020  F030         	movff	___enter_menu_calib_press_diff@col,_calibCol	;volatile
 13402                           
 13403                           ;key_menu.c: 206: stp=(st_prCalibTabDef*)(&diff_prCalibTabDef);
 13404  005AE6  0E10               	movlw	low _diff_prCalibTabDef
 13405  005AE8  0100               	movlb	0	; () banked
 13406  005AEA  6F84               	movwf	___enter_menu_calib_press_diff@stp& (0+255),b
 13407  005AEC  0E03               	movlw	high _diff_prCalibTabDef
 13408  005AEE  0100               	movlb	0	; () banked
 13409  005AF0  6F85               	movwf	(___enter_menu_calib_press_diff@stp+1)& (0+255),b
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;key_menu.c: 207: if(col==0){
 13413  005AF2  5020               	movf	___enter_menu_calib_press_diff@col,w,c
 13414  005AF4  A4D8               	btfss	status,2,c
 13415  005AF6  D012               	goto	l15112
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;key_menu.c: 208: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 13419  005AF8  0100               	movlb	0	; () banked
 13420  005AFA  5183               	movf	___enter_menu_calib_press_diff@row& (0+255),w,b
 13421  005AFC  0D34               	mullw	52
 13422  005AFE  0E04               	movlw	4
 13423  005B00  26F3               	addwf	prodl,f,c
 13424  005B02  0E00               	movlw	0
 13425  005B04  22F4               	addwfc	prodh,f,c
 13426  005B06  50F3               	movf	prodl,w,c
 13427  005B08  0100               	movlb	0	; () banked
 13428  005B0A  2584               	addwf	___enter_menu_calib_press_diff@stp& (0+255),w,b
 13429  005B0C  6ED9               	movwf	fsr2l,c
 13430  005B0E  50F4               	movf	prodh,w,c
 13431  005B10  0100               	movlb	0	; () banked
 13432  005B12  2185               	addwfc	(___enter_menu_calib_press_diff@stp+1)& (0+255),w,b
 13433  005B14  6EDA               	movwf	fsr2h,c
 13434  005B16  50DF               	movf	indf2,w,c
 13435  005B18  6E39               	movwf	_adjValue,c
 13436                           
 13437                           ;key_menu.c: 209: }else{
 13438  005B1A  D05A               	goto	l15118
 13439  005B1C                     l15112:
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;key_menu.c: 210: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 13443  005B1C  0EFC               	movlw	252
 13444  005B1E  0100               	movlb	0	; () banked
 13445  005B20  6F7D               	movwf	??___enter_menu_calib_press_diff& (0+255),b
 13446  005B22  0EFF               	movlw	255
 13447  005B24  0100               	movlb	0	; () banked
 13448  005B26  6F7E               	movwf	(??___enter_menu_calib_press_diff+1)& (0+255),b
 13449  005B28  5030               	movf	_calibCol,w,c	;volatile
 13450  005B2A  0100               	movlb	0	; () banked
 13451  005B2C  6F7F               	movwf	(??___enter_menu_calib_press_diff+2)& (0+255),b
 13452  005B2E  6B80               	clrf	(??___enter_menu_calib_press_diff+3)& (0+255),b
 13453  005B30  0100               	movlb	0	; () banked
 13454  005B32  90D8               	bcf	status,0,c
 13455  005B34  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13456  005B36  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13457  005B38  0100               	movlb	0	; () banked
 13458  005B3A  90D8               	bcf	status,0,c
 13459  005B3C  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13460  005B3E  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13461  005B40  0100               	movlb	0	; () banked
 13462  005B42  90D8               	bcf	status,0,c
 13463  005B44  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13464  005B46  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13465  005B48  0100               	movlb	0	; () banked
 13466  005B4A  517D               	movf	??___enter_menu_calib_press_diff& (0+255),w,b
 13467  005B4C  0100               	movlb	0	; () banked
 13468  005B4E  277F               	addwf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13469  005B50  0100               	movlb	0	; () banked
 13470  005B52  517E               	movf	(??___enter_menu_calib_press_diff+1)& (0+255),w,b
 13471  005B54  0100               	movlb	0	; () banked
 13472  005B56  2380               	addwfc	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13473  005B58  5031               	movf	_calibRow,w,c	;volatile
 13474  005B5A  0D34               	mullw	52
 13475  005B5C  0E04               	movlw	4
 13476  005B5E  26F3               	addwf	prodl,f,c
 13477  005B60  0E00               	movlw	0
 13478  005B62  22F4               	addwfc	prodh,f,c
 13479  005B64  C084  F081         	movff	___enter_menu_calib_press_diff@stp,??___enter_menu_calib_press_diff+4
 13480  005B68  C085  F082         	movff	___enter_menu_calib_press_diff@stp+1,??___enter_menu_calib_press_diff+5
 13481  005B6C  50F3               	movf	prodl,w,c
 13482  005B6E  0100               	movlb	0	; () banked
 13483  005B70  2781               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),f,b
 13484  005B72  50F4               	movf	prodh,w,c
 13485  005B74  0100               	movlb	0	; () banked
 13486  005B76  2382               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),f,b
 13487  005B78  0100               	movlb	0	; () banked
 13488  005B7A  517F               	movf	(??___enter_menu_calib_press_diff+2)& (0+255),w,b
 13489  005B7C  0100               	movlb	0	; () banked
 13490  005B7E  2581               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),w,b
 13491  005B80  6ED9               	movwf	fsr2l,c
 13492  005B82  0100               	movlb	0	; () banked
 13493  005B84  5180               	movf	(??___enter_menu_calib_press_diff+3)& (0+255),w,b
 13494  005B86  0100               	movlb	0	; () banked
 13495  005B88  2182               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),w,b
 13496  005B8A  6EDA               	movwf	fsr2h,c
 13497  005B8C  CFDE F086          	movff	postinc2,___enter_menu_calib_press_diff@t32
 13498  005B90  CFDE F087          	movff	postinc2,___enter_menu_calib_press_diff@t32+1
 13499  005B94  CFDE F088          	movff	postinc2,___enter_menu_calib_press_diff@t32+2
 13500  005B98  CFDE F089          	movff	postinc2,___enter_menu_calib_press_diff@t32+3
 13501                           
 13502                           ; BSR set to: 0
 13503                           ;key_menu.c: 211: t32=__int32_2_mflot32(t32);
 13504  005B9C  C086  F06D         	movff	___enter_menu_calib_press_diff@t32,___int32_2_mflot32@x
 13505  005BA0  C087  F06E         	movff	___enter_menu_calib_press_diff@t32+1,___int32_2_mflot32@x+1
 13506  005BA4  C088  F06F         	movff	___enter_menu_calib_press_diff@t32+2,___int32_2_mflot32@x+2
 13507  005BA8  C089  F070         	movff	___enter_menu_calib_press_diff@t32+3,___int32_2_mflot32@x+3
 13508  005BAC  ECE2  F02B         	call	___int32_2_mflot32	;wreg free
 13509  005BB0  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press_diff@t32
 13510  005BB4  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press_diff@t32+1
 13511  005BB8  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press_diff@t32+2
 13512  005BBC  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press_diff@t32+3
 13513                           
 13514                           ;key_menu.c: 212: m_floatAdj.t32=t32;
 13515  005BC0  C086  F035         	movff	___enter_menu_calib_press_diff@t32,_m_floatAdj
 13516  005BC4  C087  F036         	movff	___enter_menu_calib_press_diff@t32+1,_m_floatAdj+1
 13517  005BC8  C088  F037         	movff	___enter_menu_calib_press_diff@t32+2,_m_floatAdj+2
 13518  005BCC  C089  F038         	movff	___enter_menu_calib_press_diff@t32+3,_m_floatAdj+3
 13519  005BD0                     l15118:
 13520                           
 13521                           ;key_menu.c: 213: }
 13522                           ;key_menu.c: 214: adjLocation=0;
 13523  005BD0  0E00               	movlw	0
 13524  005BD2  6E3F               	movwf	_adjLocation,c	;volatile
 13525  005BD4  0012               	return		;funcret
 13526  005BD6                     __end_of___enter_menu_calib_press_diff:
 13527                           	opt stack 0
 13528                           tblptru	equ	0xFF8
 13529                           tblptrh	equ	0xFF7
 13530                           tblptrl	equ	0xFF6
 13531                           tablat	equ	0xFF5
 13532                           prodh	equ	0xFF4
 13533                           prodl	equ	0xFF3
 13534                           intcon	equ	0xFF2
 13535                           postinc0	equ	0xFEE
 13536                           wreg	equ	0xFE8
 13537                           indf1	equ	0xFE7
 13538                           postinc1	equ	0xFE6
 13539                           postdec1	equ	0xFE5
 13540                           plusw1	equ	0xFE3
 13541                           fsr1h	equ	0xFE2
 13542                           fsr1l	equ	0xFE1
 13543                           indf2	equ	0xFDF
 13544                           postinc2	equ	0xFDE
 13545                           postdec2	equ	0xFDD
 13546                           plusw2	equ	0xFDB
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function ___int32_2_mflot32 *****************
 13552 ;; Defined at:
 13553 ;;		line 58 in file "src/api/ui.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  x               4   13[BANK0 ] long 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  mf              4   25[BANK0 ] struct .
 13558 ;;  t32             4   21[BANK0 ] unsigned long 
 13559 ;; Return value:  Size  Location     Type
 13560 ;;                  4   13[BANK0 ] long 
 13561 ;; Registers used:
 13562 ;;		wreg, status,2, status,0, cstack
 13563 ;; Tracked objects:
 13564 ;;		On entry : 0/0
 13565 ;;		On exit  : 0/0
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13571 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13572 ;;Total ram usage:       16 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:    5
 13575 ;; This function calls:
 13576 ;;		___lldiv
 13577 ;; This function is called by:
 13578 ;;		___enter_menu_set_density
 13579 ;;		___enter_menu_set_d
 13580 ;;		___enter_menu_set_h
 13581 ;;		___enter_menu_set_base_zero
 13582 ;;		___enter_menu_calib_press_diff
 13583 ;;		___enter_menu_calib_press
 13584 ;;		___enter_menu_warn_value
 13585 ;;		___enter_menu_epr_calib
 13586 ;;		___enter_menu_epr_ilp_scale
 13587 ;;		_ui_disp_menu_home
 13588 ;; This function uses a non-reentrant model
 13589 ;;
 13590                           
 13591                           	psect	text69
 13592  0057C4                     __ptext69:
 13593                           	opt stack 0
 13594  0057C4                     ___int32_2_mflot32:
 13595                           	opt stack 21
 13596                           
 13597                           ;ui.c: 60: st_float32 mf={0};
 13598                           
 13599                           ;incstack = 0
 13600  0057C4  C142  F079         	movff	___int32_2_mflot32@F7712,___int32_2_mflot32@mf
 13601  0057C8  C143  F07A         	movff	___int32_2_mflot32@F7712+1,___int32_2_mflot32@mf+1
 13602  0057CC  C144  F07B         	movff	___int32_2_mflot32@F7712+2,___int32_2_mflot32@mf+2
 13603  0057D0  C145  F07C         	movff	___int32_2_mflot32@F7712+3,___int32_2_mflot32@mf+3
 13604                           
 13605                           ;ui.c: 61: uint32_t t32;
 13606                           ;ui.c: 62: t32=x;
 13607  0057D4  C06D  F075         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 13608  0057D8  C06E  F076         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 13609  0057DC  C06F  F077         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 13610  0057E0  C070  F078         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 13611                           
 13612                           ;ui.c: 63: if(x<0){
 13613  0057E4  0100               	movlb	0	; () banked
 13614  0057E6  AF70               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 13615  0057E8  D040               	goto	l14656
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;ui.c: 64: t32 = ((~x) +1);
 13619  0057EA  C06D  F071         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 13620  0057EE  C06E  F072         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 13621  0057F2  C06F  F073         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 13622  0057F6  C070  F074         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 13623  0057FA  0100               	movlb	0	; () banked
 13624  0057FC  1F71               	comf	??___int32_2_mflot32& (0+255),f,b
 13625  0057FE  1F72               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 13626  005800  1F73               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 13627  005802  1F74               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 13628  005804  2B71               	incf	??___int32_2_mflot32& (0+255),f,b
 13629  005806  0E00               	movlw	0
 13630  005808  2372               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 13631  00580A  2373               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 13632  00580C  2374               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 13633  00580E  C071  F075         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 13634  005812  C072  F076         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 13635  005816  C073  F077         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 13636  00581A  C074  F078         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;ui.c: 65: mf.stru.sign=1;
 13640  00581E  0E01               	movlw	1
 13641  005820  0100               	movlb	0	; () banked
 13642  005822  6F7C               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;ui.c: 66: }
 13646                           ;ui.c: 67: while(t32>9999){
 13647  005824  D022               	goto	l14656
 13648  005826                     l14648:
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;ui.c: 68: mf.stru.exponent++;
 13652  005826  0100               	movlb	0	; () banked
 13653  005828  2B7B               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;ui.c: 69: t32/=10;
 13657  00582A  C075  F060         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 13658  00582E  C076  F061         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 13659  005832  C077  F062         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 13660  005836  C078  F063         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 13661  00583A  0E0A               	movlw	10
 13662  00583C  0100               	movlb	0	; () banked
 13663  00583E  6F64               	movwf	___lldiv@divisor& (0+255),b
 13664  005840  0E00               	movlw	0
 13665  005842  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13666  005844  0E00               	movlw	0
 13667  005846  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13668  005848  0E00               	movlw	0
 13669  00584A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13670  00584C  EC65  F035         	call	___lldiv	;wreg free
 13671  005850  C060  F075         	movff	?___lldiv,___int32_2_mflot32@t32
 13672  005854  C061  F076         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 13673  005858  C062  F077         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 13674  00585C  C063  F078         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 13675                           
 13676                           ;ui.c: 70: if( mf.stru.exponent>=3)break;
 13677  005860  0E02               	movlw	2
 13678  005862  0100               	movlb	0	; () banked
 13679  005864  657B               	cpfsgt	(___int32_2_mflot32@mf+2)& (0+255),b
 13680  005866  D001               	goto	l14656
 13681  005868  D00D               	goto	l14658
 13682  00586A                     l14656:
 13683                           
 13684                           ; BSR set to: 0
 13685  00586A  0100               	movlb	0	; () banked
 13686  00586C  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 13687  00586E  0100               	movlb	0	; () banked
 13688  005870  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 13689  005872  E1D9               	bnz	l14648
 13690  005874  0E10               	movlw	16
 13691  005876  0100               	movlb	0	; () banked
 13692  005878  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 13693  00587A  0E27               	movlw	39
 13694  00587C  0100               	movlb	0	; () banked
 13695  00587E  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 13696  005880  B0D8               	btfsc	status,0,c
 13697  005882  D7D1               	goto	l14648
 13698  005884                     l14658:
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;ui.c: 71: }
 13702                           ;ui.c: 72: if(t32>9999)t32=9999;
 13703  005884  0100               	movlb	0	; () banked
 13704  005886  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 13705  005888  0100               	movlb	0	; () banked
 13706  00588A  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 13707  00588C  E108               	bnz	u13570
 13708  00588E  0E10               	movlw	16
 13709  005890  0100               	movlb	0	; () banked
 13710  005892  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 13711  005894  0E27               	movlw	39
 13712  005896  0100               	movlb	0	; () banked
 13713  005898  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 13714  00589A  A0D8               	btfss	status,0,c
 13715  00589C  D009               	goto	l14662
 13716  00589E                     u13570:
 13717                           
 13718                           ; BSR set to: 0
 13719  00589E  0E0F               	movlw	15
 13720  0058A0  0100               	movlb	0	; () banked
 13721  0058A2  6F75               	movwf	___int32_2_mflot32@t32& (0+255),b
 13722  0058A4  0E27               	movlw	39
 13723  0058A6  6F76               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 13724  0058A8  0E00               	movlw	0
 13725  0058AA  6F77               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 13726  0058AC  0E00               	movlw	0
 13727  0058AE  6F78               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 13728  0058B0                     l14662:
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;ui.c: 73: mf.stru.significand=t32;
 13732  0058B0  C075  F079         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 13733  0058B4  C076  F07A         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;ui.c: 74: return mf.t32;
 13737  0058B8  C079  F06D         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 13738  0058BC  C07A  F06E         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 13739  0058C0  C07B  F06F         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 13740  0058C4  C07C  F070         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 13741  0058C8  0012               	return	
 13742  0058CA                     __end_of___int32_2_mflot32:
 13743                           	opt stack 0
 13744                           tblptru	equ	0xFF8
 13745                           tblptrh	equ	0xFF7
 13746                           tblptrl	equ	0xFF6
 13747                           tablat	equ	0xFF5
 13748                           prodh	equ	0xFF4
 13749                           prodl	equ	0xFF3
 13750                           intcon	equ	0xFF2
 13751                           postinc0	equ	0xFEE
 13752                           wreg	equ	0xFE8
 13753                           indf1	equ	0xFE7
 13754                           postinc1	equ	0xFE6
 13755                           postdec1	equ	0xFE5
 13756                           plusw1	equ	0xFE3
 13757                           fsr1h	equ	0xFE2
 13758                           fsr1l	equ	0xFE1
 13759                           indf2	equ	0xFDF
 13760                           postinc2	equ	0xFDE
 13761                           postdec2	equ	0xFDD
 13762                           plusw2	equ	0xFDB
 13763                           fsr2h	equ	0xFDA
 13764                           fsr2l	equ	0xFD9
 13765                           status	equ	0xFD8
 13766                           
 13767 ;; *************** function ___lldiv *****************
 13768 ;; Defined at:
 13769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;  dividend        4    0[BANK0 ] unsigned long 
 13772 ;;  divisor         4    4[BANK0 ] unsigned long 
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;  quotient        4    8[BANK0 ] unsigned long 
 13775 ;;  counter         1   12[BANK0 ] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  4    0[BANK0 ] unsigned long 
 13778 ;; Registers used:
 13779 ;;		wreg, status,2, status,0
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13785 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13789 ;;Total ram usage:       13 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:    4
 13792 ;; This function calls:
 13793 ;;		Nothing
 13794 ;; This function is called by:
 13795 ;;		___int32_2_mflot32
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           	psect	text70
 13800  006ACA                     __ptext70:
 13801                           	opt stack 0
 13802  006ACA                     ___lldiv:
 13803                           	opt stack 21
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;incstack = 0
 13807  006ACA  0E00               	movlw	0
 13808  006ACC  0100               	movlb	0	; () banked
 13809  006ACE  6F68               	movwf	___lldiv@quotient& (0+255),b
 13810  006AD0  0E00               	movlw	0
 13811  006AD2  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 13812  006AD4  0E00               	movlw	0
 13813  006AD6  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13814  006AD8  0E00               	movlw	0
 13815  006ADA  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818  006ADC  0100               	movlb	0	; () banked
 13819  006ADE  5164               	movf	___lldiv@divisor& (0+255),w,b
 13820  006AE0  0100               	movlb	0	; () banked
 13821  006AE2  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13822  006AE4  0100               	movlb	0	; () banked
 13823  006AE6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13824  006AE8  0100               	movlb	0	; () banked
 13825  006AEA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13826  006AEC  B4D8               	btfsc	status,2,c
 13827  006AEE  D042               	goto	l2768
 13828                           
 13829                           ; BSR set to: 0
 13830  006AF0  0E01               	movlw	1
 13831  006AF2  0100               	movlb	0	; () banked
 13832  006AF4  6F6C               	movwf	___lldiv@counter& (0+255),b
 13833  006AF6  D008               	goto	l14268
 13834  006AF8                     l14266:
 13835                           
 13836                           ; BSR set to: 0
 13837  006AF8  0100               	movlb	0	; () banked
 13838  006AFA  90D8               	bcf	status,0,c
 13839  006AFC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 13840  006AFE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13841  006B00  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13842  006B02  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13843  006B04  0100               	movlb	0	; () banked
 13844  006B06  2B6C               	incf	___lldiv@counter& (0+255),f,b
 13845  006B08                     l14268:
 13846                           
 13847                           ; BSR set to: 0
 13848  006B08  0100               	movlb	0	; () banked
 13849  006B0A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13850  006B0C  D7F5               	goto	l14266
 13851  006B0E                     l14270:
 13852                           
 13853                           ; BSR set to: 0
 13854  006B0E  0100               	movlb	0	; () banked
 13855  006B10  90D8               	bcf	status,0,c
 13856  006B12  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 13857  006B14  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13858  006B16  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13859  006B18  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13860                           
 13861                           ; BSR set to: 0
 13862  006B1A  0100               	movlb	0	; () banked
 13863  006B1C  5164               	movf	___lldiv@divisor& (0+255),w,b
 13864  006B1E  0100               	movlb	0	; () banked
 13865  006B20  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 13866  006B22  0100               	movlb	0	; () banked
 13867  006B24  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13868  006B26  0100               	movlb	0	; () banked
 13869  006B28  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13870  006B2A  0100               	movlb	0	; () banked
 13871  006B2C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13872  006B2E  0100               	movlb	0	; () banked
 13873  006B30  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13874  006B32  0100               	movlb	0	; () banked
 13875  006B34  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13876  006B36  0100               	movlb	0	; () banked
 13877  006B38  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13878  006B3A  A0D8               	btfss	status,0,c
 13879  006B3C  D012               	goto	l14278
 13880                           
 13881                           ; BSR set to: 0
 13882  006B3E  0100               	movlb	0	; () banked
 13883  006B40  5164               	movf	___lldiv@divisor& (0+255),w,b
 13884  006B42  0100               	movlb	0	; () banked
 13885  006B44  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 13886  006B46  0100               	movlb	0	; () banked
 13887  006B48  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13888  006B4A  0100               	movlb	0	; () banked
 13889  006B4C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13890  006B4E  0100               	movlb	0	; () banked
 13891  006B50  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13892  006B52  0100               	movlb	0	; () banked
 13893  006B54  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13894  006B56  0100               	movlb	0	; () banked
 13895  006B58  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13896  006B5A  0100               	movlb	0	; () banked
 13897  006B5C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13898                           
 13899                           ; BSR set to: 0
 13900  006B5E  0100               	movlb	0	; () banked
 13901  006B60  8168               	bsf	___lldiv@quotient& (0+255),0,b
 13902  006B62                     l14278:
 13903                           
 13904                           ; BSR set to: 0
 13905  006B62  0100               	movlb	0	; () banked
 13906  006B64  90D8               	bcf	status,0,c
 13907  006B66  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13908  006B68  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13909  006B6A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13910  006B6C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 13911                           
 13912                           ; BSR set to: 0
 13913  006B6E  0100               	movlb	0	; () banked
 13914  006B70  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 13915  006B72  D7CD               	goto	l14270
 13916  006B74                     l2768:
 13917                           
 13918                           ; BSR set to: 0
 13919  006B74  C068  F060         	movff	___lldiv@quotient,?___lldiv
 13920  006B78  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 13921  006B7C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 13922  006B80  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 13923                           
 13924                           ; BSR set to: 0
 13925  006B84  0012               	return		;funcret
 13926  006B86                     __end_of___lldiv:
 13927                           	opt stack 0
 13928                           tblptru	equ	0xFF8
 13929                           tblptrh	equ	0xFF7
 13930                           tblptrl	equ	0xFF6
 13931                           tablat	equ	0xFF5
 13932                           prodh	equ	0xFF4
 13933                           prodl	equ	0xFF3
 13934                           intcon	equ	0xFF2
 13935                           postinc0	equ	0xFEE
 13936                           wreg	equ	0xFE8
 13937                           indf1	equ	0xFE7
 13938                           postinc1	equ	0xFE6
 13939                           postdec1	equ	0xFE5
 13940                           plusw1	equ	0xFE3
 13941                           fsr1h	equ	0xFE2
 13942                           fsr1l	equ	0xFE1
 13943                           indf2	equ	0xFDF
 13944                           postinc2	equ	0xFDE
 13945                           postdec2	equ	0xFDD
 13946                           plusw2	equ	0xFDB
 13947                           fsr2h	equ	0xFDA
 13948                           fsr2l	equ	0xFD9
 13949                           status	equ	0xFD8
 13950                           
 13951 ;; *************** function ___enter_menu_password *****************
 13952 ;; Defined at:
 13953 ;;		line 104 in file "src/api/key_menu.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  1    wreg      void 
 13960 ;; Registers used:
 13961 ;;		wreg, status,2
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13971 ;;Total ram usage:        0 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    4
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_key_process_set
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text71
 13982  009BD4                     __ptext71:
 13983                           	opt stack 0
 13984  009BD4                     ___enter_menu_password:
 13985                           	opt stack 24
 13986                           
 13987                           ;key_menu.c: 106: menu=0x10;
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;incstack = 0
 13991  009BD4  0E10               	movlw	16
 13992  009BD6  6E33               	movwf	_menu,c	;volatile
 13993                           
 13994                           ;key_menu.c: 107: subMenu=0x00;
 13995  009BD8  0E00               	movlw	0
 13996  009BDA  6E32               	movwf	_subMenu,c	;volatile
 13997                           
 13998                           ;key_menu.c: 109: passWord=0x00;
 13999  009BDC  0E00               	movlw	0
 14000  009BDE  6E3E               	movwf	_passWord+1,c	;volatile
 14001  009BE0  0E00               	movlw	0
 14002  009BE2  6E3D               	movwf	_passWord,c	;volatile
 14003                           
 14004                           ;key_menu.c: 110: adjLocation=0x00;
 14005  009BE4  0E00               	movlw	0
 14006  009BE6  6E3F               	movwf	_adjLocation,c	;volatile
 14007  009BE8  0012               	return		;funcret
 14008  009BEA                     __end_of___enter_menu_password:
 14009                           	opt stack 0
 14010                           tblptru	equ	0xFF8
 14011                           tblptrh	equ	0xFF7
 14012                           tblptrl	equ	0xFF6
 14013                           tablat	equ	0xFF5
 14014                           prodh	equ	0xFF4
 14015                           prodl	equ	0xFF3
 14016                           intcon	equ	0xFF2
 14017                           postinc0	equ	0xFEE
 14018                           wreg	equ	0xFE8
 14019                           indf1	equ	0xFE7
 14020                           postinc1	equ	0xFE6
 14021                           postdec1	equ	0xFE5
 14022                           plusw1	equ	0xFE3
 14023                           fsr1h	equ	0xFE2
 14024                           fsr1l	equ	0xFE1
 14025                           indf2	equ	0xFDF
 14026                           postinc2	equ	0xFDE
 14027                           postdec2	equ	0xFDD
 14028                           plusw2	equ	0xFDB
 14029                           fsr2h	equ	0xFDA
 14030                           fsr2l	equ	0xFD9
 14031                           status	equ	0xFD8
 14032                           
 14033 ;; *************** function _key_process_down *****************
 14034 ;; Defined at:
 14035 ;;		line 417 in file "src/api/key_menu.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;		None
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;		None
 14040 ;; Return value:  Size  Location     Type
 14041 ;;                  1    wreg      void 
 14042 ;; Registers used:
 14043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14044 ;; Tracked objects:
 14045 ;;		On entry : 0/0
 14046 ;;		On exit  : 0/0
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;Total ram usage:        0 bytes
 14054 ;; Hardware stack levels used:    1
 14055 ;; Hardware stack levels required when called:    6
 14056 ;; This function calls:
 14057 ;;		___down_dpr_calib
 14058 ;;		___down_home_adj_test
 14059 ;;		___down_pose_size
 14060 ;;		___down_pr_calib
 14061 ;;		_key_shift_loc
 14062 ;; This function is called by:
 14063 ;;		_key_process
 14064 ;; This function uses a non-reentrant model
 14065 ;;
 14066                           
 14067                           	psect	text72
 14068  004A10                     __ptext72:
 14069                           	opt stack 0
 14070  004A10                     _key_process_down:
 14071                           	opt stack 23
 14072                           
 14073                           ;key_menu.c: 419: switch(menu){
 14074                           
 14075                           ;incstack = 0
 14076  004A10  D084               	goto	l16732
 14077  004A12                     l16706:
 14078  004A12  EC5A  F04D         	call	___down_home_adj_test	;wreg free
 14079  004A16  0012               	return	
 14080  004A18                     l16708:
 14081  004A18  0E3F               	movlw	low _adjLocation
 14082  004A1A  0100               	movlb	0	; () banked
 14083  004A1C  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14084  004A1E  0E00               	movlw	high _adjLocation
 14085  004A20  0100               	movlb	0	; () banked
 14086  004A22  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14087  004A24  0E00               	movlw	0
 14088  004A26  0100               	movlb	0	; () banked
 14089  004A28  6F62               	movwf	key_shift_loc@min& (0+255),b
 14090  004A2A  0E03               	movlw	3
 14091  004A2C  0100               	movlb	0	; () banked
 14092  004A2E  6F63               	movwf	key_shift_loc@max& (0+255),b
 14093  004A30  EC8A  F048         	call	_key_shift_loc	;wreg free
 14094  004A34  0012               	return	
 14095  004A36                     l16710:
 14096  004A36  0E3F               	movlw	low _adjLocation
 14097  004A38  0100               	movlb	0	; () banked
 14098  004A3A  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14099  004A3C  0E00               	movlw	high _adjLocation
 14100  004A3E  0100               	movlb	0	; () banked
 14101  004A40  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14102  004A42  0E00               	movlw	0
 14103  004A44  0100               	movlb	0	; () banked
 14104  004A46  6F62               	movwf	key_shift_loc@min& (0+255),b
 14105  004A48  0E04               	movlw	4
 14106  004A4A  0100               	movlb	0	; () banked
 14107  004A4C  6F63               	movwf	key_shift_loc@max& (0+255),b
 14108  004A4E  EC8A  F048         	call	_key_shift_loc	;wreg free
 14109  004A52  0012               	return	
 14110  004A54                     l16712:
 14111  004A54  ECB8  F04A         	call	___down_pose_size	;wreg free
 14112  004A58  0012               	return	
 14113  004A5A                     l16714:
 14114  004A5A  0E3F               	movlw	low _adjLocation
 14115  004A5C  0100               	movlb	0	; () banked
 14116  004A5E  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14117  004A60  0E00               	movlw	high _adjLocation
 14118  004A62  0100               	movlb	0	; () banked
 14119  004A64  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14120  004A66  0E00               	movlw	0
 14121  004A68  0100               	movlb	0	; () banked
 14122  004A6A  6F62               	movwf	key_shift_loc@min& (0+255),b
 14123  004A6C  0E05               	movlw	5
 14124  004A6E  0100               	movlb	0	; () banked
 14125  004A70  6F63               	movwf	key_shift_loc@max& (0+255),b
 14126  004A72  EC8A  F048         	call	_key_shift_loc	;wreg free
 14127  004A76  0012               	return	
 14128  004A78                     l16716:
 14129  004A78  ECA4  F04C         	call	___down_dpr_calib	;wreg free
 14130  004A7C  0012               	return	
 14131  004A7E                     l16718:
 14132  004A7E  EC92  F04C         	call	___down_pr_calib	;wreg free
 14133  004A82  0012               	return	
 14134  004A84                     l16720:
 14135  004A84  0E3F               	movlw	low _adjLocation
 14136  004A86  0100               	movlb	0	; () banked
 14137  004A88  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14138  004A8A  0E00               	movlw	high _adjLocation
 14139  004A8C  0100               	movlb	0	; () banked
 14140  004A8E  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14141  004A90  0E00               	movlw	0
 14142  004A92  0100               	movlb	0	; () banked
 14143  004A94  6F62               	movwf	key_shift_loc@min& (0+255),b
 14144  004A96  0E02               	movlw	2
 14145  004A98  0100               	movlb	0	; () banked
 14146  004A9A  6F63               	movwf	key_shift_loc@max& (0+255),b
 14147  004A9C  EC8A  F048         	call	_key_shift_loc	;wreg free
 14148                           
 14149                           ;key_menu.c: 432: case 0x80:break;
 14150  004AA0  0012               	return	
 14151  004AA2                     l16722:
 14152  004AA2  0E3F               	movlw	low _adjLocation
 14153  004AA4  0100               	movlb	0	; () banked
 14154  004AA6  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14155  004AA8  0E00               	movlw	high _adjLocation
 14156  004AAA  0100               	movlb	0	; () banked
 14157  004AAC  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14158  004AAE  0E00               	movlw	0
 14159  004AB0  0100               	movlb	0	; () banked
 14160  004AB2  6F62               	movwf	key_shift_loc@min& (0+255),b
 14161  004AB4  0E04               	movlw	4
 14162  004AB6  0100               	movlb	0	; () banked
 14163  004AB8  6F63               	movwf	key_shift_loc@max& (0+255),b
 14164  004ABA  EC8A  F048         	call	_key_shift_loc	;wreg free
 14165  004ABE  0012               	return	
 14166  004AC0                     l16724:
 14167  004AC0  0E3F               	movlw	low _adjLocation
 14168  004AC2  0100               	movlb	0	; () banked
 14169  004AC4  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14170  004AC6  0E00               	movlw	high _adjLocation
 14171  004AC8  0100               	movlb	0	; () banked
 14172  004ACA  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14173  004ACC  0E00               	movlw	0
 14174  004ACE  0100               	movlb	0	; () banked
 14175  004AD0  6F62               	movwf	key_shift_loc@min& (0+255),b
 14176  004AD2  0E04               	movlw	4
 14177  004AD4  0100               	movlb	0	; () banked
 14178  004AD6  6F63               	movwf	key_shift_loc@max& (0+255),b
 14179  004AD8  EC8A  F048         	call	_key_shift_loc	;wreg free
 14180  004ADC  0012               	return	
 14181  004ADE                     l16726:
 14182  004ADE  0E3F               	movlw	low _adjLocation
 14183  004AE0  0100               	movlb	0	; () banked
 14184  004AE2  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14185  004AE4  0E00               	movlw	high _adjLocation
 14186  004AE6  0100               	movlb	0	; () banked
 14187  004AE8  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14188  004AEA  0E00               	movlw	0
 14189  004AEC  0100               	movlb	0	; () banked
 14190  004AEE  6F62               	movwf	key_shift_loc@min& (0+255),b
 14191  004AF0  0E04               	movlw	4
 14192  004AF2  0100               	movlb	0	; () banked
 14193  004AF4  6F63               	movwf	key_shift_loc@max& (0+255),b
 14194  004AF6  EC8A  F048         	call	_key_shift_loc	;wreg free
 14195  004AFA  0012               	return	
 14196  004AFC                     l16728:
 14197  004AFC  0E3F               	movlw	low _adjLocation
 14198  004AFE  0100               	movlb	0	; () banked
 14199  004B00  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14200  004B02  0E00               	movlw	high _adjLocation
 14201  004B04  0100               	movlb	0	; () banked
 14202  004B06  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14203  004B08  0E00               	movlw	0
 14204  004B0A  0100               	movlb	0	; () banked
 14205  004B0C  6F62               	movwf	key_shift_loc@min& (0+255),b
 14206  004B0E  0E02               	movlw	2
 14207  004B10  0100               	movlb	0	; () banked
 14208  004B12  6F63               	movwf	key_shift_loc@max& (0+255),b
 14209  004B14  EC8A  F048         	call	_key_shift_loc	;wreg free
 14210                           
 14211                           ;key_menu.c: 438: }
 14212                           
 14213                           ;key_menu.c: 437: default:break;
 14214  004B18  0012               	return	
 14215  004B1A                     l16732:
 14216  004B1A  5033               	movf	_menu,w,c	;volatile
 14217                           
 14218                           ; Switch size 1, requested type "space"
 14219                           ; Number of cases is 13, Range of values is 0 to 192
 14220                           ; switch strategies available:
 14221                           ; Name         Instructions Cycles
 14222                           ; simple_byte           40    21 (average)
 14223                           ;	Chosen strategy is simple_byte
 14224  004B1C  0A00               	xorlw	0	; case 0
 14225  004B1E  B4D8               	btfsc	status,2,c
 14226  004B20  D778               	goto	l16706
 14227  004B22  0A10               	xorlw	16	; case 16
 14228  004B24  B4D8               	btfsc	status,2,c
 14229  004B26  D778               	goto	l16708
 14230  004B28  0A30               	xorlw	48	; case 32
 14231  004B2A  B4D8               	btfsc	status,2,c
 14232  004B2C  D784               	goto	l16710
 14233  004B2E  0A10               	xorlw	16	; case 48
 14234  004B30  B4D8               	btfsc	status,2,c
 14235  004B32  D790               	goto	l16712
 14236  004B34  0A70               	xorlw	112	; case 64
 14237  004B36  B4D8               	btfsc	status,2,c
 14238  004B38  D790               	goto	l16714
 14239  004B3A  0A10               	xorlw	16	; case 80
 14240  004B3C  B4D8               	btfsc	status,2,c
 14241  004B3E  D79C               	goto	l16716
 14242  004B40  0A30               	xorlw	48	; case 96
 14243  004B42  B4D8               	btfsc	status,2,c
 14244  004B44  D79C               	goto	l16718
 14245  004B46  0A10               	xorlw	16	; case 112
 14246  004B48  B4D8               	btfsc	status,2,c
 14247  004B4A  D79C               	goto	l16720
 14248  004B4C  0AF0               	xorlw	240	; case 128
 14249  004B4E  B4D8               	btfsc	status,2,c
 14250  004B50  0012               	return	
 14251  004B52  0A10               	xorlw	16	; case 144
 14252  004B54  B4D8               	btfsc	status,2,c
 14253  004B56  D7A5               	goto	l16722
 14254  004B58  0A30               	xorlw	48	; case 160
 14255  004B5A  B4D8               	btfsc	status,2,c
 14256  004B5C  D7B1               	goto	l16724
 14257  004B5E  0A10               	xorlw	16	; case 176
 14258  004B60  B4D8               	btfsc	status,2,c
 14259  004B62  D7BD               	goto	l16726
 14260  004B64  0A70               	xorlw	112	; case 192
 14261  004B66  A4D8               	btfss	status,2,c
 14262  004B68  0012               	return	
 14263  004B6A  D7C8               	goto	l16728
 14264  004B6C                     __end_of_key_process_down:
 14265                           	opt stack 0
 14266                           tblptru	equ	0xFF8
 14267                           tblptrh	equ	0xFF7
 14268                           tblptrl	equ	0xFF6
 14269                           tablat	equ	0xFF5
 14270                           prodh	equ	0xFF4
 14271                           prodl	equ	0xFF3
 14272                           intcon	equ	0xFF2
 14273                           postinc0	equ	0xFEE
 14274                           wreg	equ	0xFE8
 14275                           indf1	equ	0xFE7
 14276                           postinc1	equ	0xFE6
 14277                           postdec1	equ	0xFE5
 14278                           plusw1	equ	0xFE3
 14279                           fsr1h	equ	0xFE2
 14280                           fsr1l	equ	0xFE1
 14281                           indf2	equ	0xFDF
 14282                           postinc2	equ	0xFDE
 14283                           postdec2	equ	0xFDD
 14284                           plusw2	equ	0xFDB
 14285                           fsr2h	equ	0xFDA
 14286                           fsr2l	equ	0xFD9
 14287                           status	equ	0xFD8
 14288                           
 14289 ;; *************** function ___down_pr_calib *****************
 14290 ;; Defined at:
 14291 ;;		line 381 in file "src/api/key_menu.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;		None
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;		None
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1    wreg      void 
 14298 ;; Registers used:
 14299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/0
 14302 ;;		On exit  : 0/0
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:    5
 14312 ;; This function calls:
 14313 ;;		_key_shift_loc
 14314 ;; This function is called by:
 14315 ;;		_key_process_down
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text73
 14320  009924                     __ptext73:
 14321                           	opt stack 0
 14322  009924                     ___down_pr_calib:
 14323                           	opt stack 23
 14324                           
 14325                           ;key_menu.c: 383: if(calibCol){
 14326                           
 14327                           ;incstack = 0
 14328  009924  5030               	movf	_calibCol,w,c	;volatile
 14329  009926  B4D8               	btfsc	status,2,c
 14330  009928  0012               	return	
 14331                           
 14332                           ;key_menu.c: 384: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 14333  00992A  0E3F               	movlw	low _adjLocation
 14334  00992C  0100               	movlb	0	; () banked
 14335  00992E  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14336  009930  0E00               	movlw	high _adjLocation
 14337  009932  0100               	movlb	0	; () banked
 14338  009934  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14339  009936  0E00               	movlw	0
 14340  009938  0100               	movlb	0	; () banked
 14341  00993A  6F62               	movwf	key_shift_loc@min& (0+255),b
 14342  00993C  0E04               	movlw	4
 14343  00993E  0100               	movlb	0	; () banked
 14344  009940  6F63               	movwf	key_shift_loc@max& (0+255),b
 14345  009942  EC8A  F048         	call	_key_shift_loc	;wreg free
 14346  009946  0012               	return	
 14347  009948                     __end_of___down_pr_calib:
 14348                           	opt stack 0
 14349                           tblptru	equ	0xFF8
 14350                           tblptrh	equ	0xFF7
 14351                           tblptrl	equ	0xFF6
 14352                           tablat	equ	0xFF5
 14353                           prodh	equ	0xFF4
 14354                           prodl	equ	0xFF3
 14355                           intcon	equ	0xFF2
 14356                           postinc0	equ	0xFEE
 14357                           wreg	equ	0xFE8
 14358                           indf1	equ	0xFE7
 14359                           postinc1	equ	0xFE6
 14360                           postdec1	equ	0xFE5
 14361                           plusw1	equ	0xFE3
 14362                           fsr1h	equ	0xFE2
 14363                           fsr1l	equ	0xFE1
 14364                           indf2	equ	0xFDF
 14365                           postinc2	equ	0xFDE
 14366                           postdec2	equ	0xFDD
 14367                           plusw2	equ	0xFDB
 14368                           fsr2h	equ	0xFDA
 14369                           fsr2l	equ	0xFD9
 14370                           status	equ	0xFD8
 14371                           
 14372 ;; *************** function ___down_pose_size *****************
 14373 ;; Defined at:
 14374 ;;		line 364 in file "src/api/key_menu.c"
 14375 ;; Parameters:    Size  Location     Type
 14376 ;;		None
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;		None
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  1    wreg      void 
 14381 ;; Registers used:
 14382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;Total ram usage:        0 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:    5
 14395 ;; This function calls:
 14396 ;;		_key_shift_loc
 14397 ;; This function is called by:
 14398 ;;		_key_process_down
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text74
 14403  009570                     __ptext74:
 14404                           	opt stack 0
 14405  009570                     ___down_pose_size:
 14406                           	opt stack 23
 14407                           
 14408                           ;key_menu.c: 366: switch(subMenu){
 14409                           
 14410                           ;incstack = 0
 14411  009570  D00F               	goto	l15674
 14412  009572                     l15670:
 14413                           
 14414                           ;key_menu.c: 368: case 0x02:
 14415                           ;key_menu.c: 369: key_shift_loc((uint8_t*)(&adjLocation),0,4);break;
 14416  009572  0E3F               	movlw	low _adjLocation
 14417  009574  0100               	movlb	0	; () banked
 14418  009576  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14419  009578  0E00               	movlw	high _adjLocation
 14420  00957A  0100               	movlb	0	; () banked
 14421  00957C  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14422  00957E  0E00               	movlw	0
 14423  009580  0100               	movlb	0	; () banked
 14424  009582  6F62               	movwf	key_shift_loc@min& (0+255),b
 14425  009584  0E04               	movlw	4
 14426  009586  0100               	movlb	0	; () banked
 14427  009588  6F63               	movwf	key_shift_loc@max& (0+255),b
 14428  00958A  EC8A  F048         	call	_key_shift_loc	;wreg free
 14429                           
 14430                           ;key_menu.c: 371: }
 14431                           
 14432                           ;key_menu.c: 370: default:break;
 14433  00958E  0012               	return	
 14434  009590                     l15674:
 14435  009590  5032               	movf	_subMenu,w,c	;volatile
 14436                           
 14437                           ; Switch size 1, requested type "space"
 14438                           ; Number of cases is 2, Range of values is 1 to 2
 14439                           ; switch strategies available:
 14440                           ; Name         Instructions Cycles
 14441                           ; simple_byte            7     4 (average)
 14442                           ;	Chosen strategy is simple_byte
 14443  009592  0A01               	xorlw	1	; case 1
 14444  009594  B4D8               	btfsc	status,2,c
 14445  009596  D7ED               	goto	l15670
 14446  009598  0A03               	xorlw	3	; case 2
 14447  00959A  A4D8               	btfss	status,2,c
 14448  00959C  0012               	return	
 14449  00959E  D7E9               	goto	l15670
 14450  0095A0                     __end_of___down_pose_size:
 14451                           	opt stack 0
 14452                           tblptru	equ	0xFF8
 14453                           tblptrh	equ	0xFF7
 14454                           tblptrl	equ	0xFF6
 14455                           tablat	equ	0xFF5
 14456                           prodh	equ	0xFF4
 14457                           prodl	equ	0xFF3
 14458                           intcon	equ	0xFF2
 14459                           postinc0	equ	0xFEE
 14460                           wreg	equ	0xFE8
 14461                           indf1	equ	0xFE7
 14462                           postinc1	equ	0xFE6
 14463                           postdec1	equ	0xFE5
 14464                           plusw1	equ	0xFE3
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           indf2	equ	0xFDF
 14468                           postinc2	equ	0xFDE
 14469                           postdec2	equ	0xFDD
 14470                           plusw2	equ	0xFDB
 14471                           fsr2h	equ	0xFDA
 14472                           fsr2l	equ	0xFD9
 14473                           status	equ	0xFD8
 14474                           
 14475 ;; *************** function ___down_home_adj_test *****************
 14476 ;; Defined at:
 14477 ;;		line 401 in file "src/api/key_menu.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  t8              1   31[COMRAM] unsigned char 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      void 
 14484 ;; Registers used:
 14485 ;;		wreg, status,2, status,0
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;Total ram usage:        1 bytes
 14496 ;; Hardware stack levels used:    1
 14497 ;; Hardware stack levels required when called:    4
 14498 ;; This function calls:
 14499 ;;		Nothing
 14500 ;; This function is called by:
 14501 ;;		_key_process_down
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text75
 14506  009AB4                     __ptext75:
 14507                           	opt stack 0
 14508  009AB4                     ___down_home_adj_test:
 14509                           	opt stack 24
 14510                           
 14511                           ;key_menu.c: 403: uint8_t t8;
 14512                           ;key_menu.c: 406: t8=subMenu & 0x0f;
 14513                           
 14514                           ;incstack = 0
 14515  009AB4  5032               	movf	_subMenu,w,c	;volatile
 14516  009AB6  0B0F               	andlw	15
 14517  009AB8  6E20               	movwf	___down_home_adj_test@t8,c
 14518                           
 14519                           ;key_menu.c: 407: t8++;
 14520  009ABA  2A20               	incf	___down_home_adj_test@t8,f,c
 14521                           
 14522                           ;key_menu.c: 408: if(t8>10)t8=0;
 14523  009ABC  0E0A               	movlw	10
 14524  009ABE  6420               	cpfsgt	___down_home_adj_test@t8,c
 14525  009AC0  D002               	goto	l15692
 14526  009AC2  0E00               	movlw	0
 14527  009AC4  6E20               	movwf	___down_home_adj_test@t8,c
 14528  009AC6                     l15692:
 14529                           
 14530                           ;key_menu.c: 410: subMenu &= 0xf0;
 14531  009AC6  0EF0               	movlw	240
 14532  009AC8  1632               	andwf	_subMenu,f,c	;volatile
 14533                           
 14534                           ;key_menu.c: 411: subMenu |= t8;
 14535  009ACA  5020               	movf	___down_home_adj_test@t8,w,c
 14536  009ACC  1232               	iorwf	_subMenu,f,c	;volatile
 14537  009ACE  0012               	return		;funcret
 14538  009AD0                     __end_of___down_home_adj_test:
 14539                           	opt stack 0
 14540                           tblptru	equ	0xFF8
 14541                           tblptrh	equ	0xFF7
 14542                           tblptrl	equ	0xFF6
 14543                           tablat	equ	0xFF5
 14544                           prodh	equ	0xFF4
 14545                           prodl	equ	0xFF3
 14546                           intcon	equ	0xFF2
 14547                           postinc0	equ	0xFEE
 14548                           wreg	equ	0xFE8
 14549                           indf1	equ	0xFE7
 14550                           postinc1	equ	0xFE6
 14551                           postdec1	equ	0xFE5
 14552                           plusw1	equ	0xFE3
 14553                           fsr1h	equ	0xFE2
 14554                           fsr1l	equ	0xFE1
 14555                           indf2	equ	0xFDF
 14556                           postinc2	equ	0xFDE
 14557                           postdec2	equ	0xFDD
 14558                           plusw2	equ	0xFDB
 14559                           fsr2h	equ	0xFDA
 14560                           fsr2l	equ	0xFD9
 14561                           status	equ	0xFD8
 14562                           
 14563 ;; *************** function ___down_dpr_calib *****************
 14564 ;; Defined at:
 14565 ;;		line 374 in file "src/api/key_menu.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;		None
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      void 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    5
 14586 ;; This function calls:
 14587 ;;		_key_shift_loc
 14588 ;; This function is called by:
 14589 ;;		_key_process_down
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text76
 14594  009948                     __ptext76:
 14595                           	opt stack 0
 14596  009948                     ___down_dpr_calib:
 14597                           	opt stack 23
 14598                           
 14599                           ;key_menu.c: 376: if(calibCol){
 14600                           
 14601                           ;incstack = 0
 14602  009948  5030               	movf	_calibCol,w,c	;volatile
 14603  00994A  B4D8               	btfsc	status,2,c
 14604  00994C  0012               	return	
 14605                           
 14606                           ;key_menu.c: 377: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 14607  00994E  0E3F               	movlw	low _adjLocation
 14608  009950  0100               	movlb	0	; () banked
 14609  009952  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14610  009954  0E00               	movlw	high _adjLocation
 14611  009956  0100               	movlb	0	; () banked
 14612  009958  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14613  00995A  0E00               	movlw	0
 14614  00995C  0100               	movlb	0	; () banked
 14615  00995E  6F62               	movwf	key_shift_loc@min& (0+255),b
 14616  009960  0E04               	movlw	4
 14617  009962  0100               	movlb	0	; () banked
 14618  009964  6F63               	movwf	key_shift_loc@max& (0+255),b
 14619  009966  EC8A  F048         	call	_key_shift_loc	;wreg free
 14620  00996A  0012               	return	
 14621  00996C                     __end_of___down_dpr_calib:
 14622                           	opt stack 0
 14623                           tblptru	equ	0xFF8
 14624                           tblptrh	equ	0xFF7
 14625                           tblptrl	equ	0xFF6
 14626                           tablat	equ	0xFF5
 14627                           prodh	equ	0xFF4
 14628                           prodl	equ	0xFF3
 14629                           intcon	equ	0xFF2
 14630                           postinc0	equ	0xFEE
 14631                           wreg	equ	0xFE8
 14632                           indf1	equ	0xFE7
 14633                           postinc1	equ	0xFE6
 14634                           postdec1	equ	0xFE5
 14635                           plusw1	equ	0xFE3
 14636                           fsr1h	equ	0xFE2
 14637                           fsr1l	equ	0xFE1
 14638                           indf2	equ	0xFDF
 14639                           postinc2	equ	0xFDE
 14640                           postdec2	equ	0xFDD
 14641                           plusw2	equ	0xFDB
 14642                           fsr2h	equ	0xFDA
 14643                           fsr2l	equ	0xFD9
 14644                           status	equ	0xFD8
 14645                           
 14646 ;; *************** function _key_shift_loc *****************
 14647 ;; Defined at:
 14648 ;;		line 47 in file "src/api/key_menu.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 14651 ;;		 -> adjLocation(1), 
 14652 ;;  min             1    2[BANK0 ] unsigned char 
 14653 ;;  max             1    3[BANK0 ] unsigned char 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  t8              1   31[COMRAM] unsigned char 
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  1    wreg      void 
 14658 ;; Registers used:
 14659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14668 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;Total ram usage:        5 bytes
 14670 ;; Hardware stack levels used:    1
 14671 ;; Hardware stack levels required when called:    4
 14672 ;; This function calls:
 14673 ;;		Nothing
 14674 ;; This function is called by:
 14675 ;;		___down_pose_size
 14676 ;;		___down_dpr_calib
 14677 ;;		___down_pr_calib
 14678 ;;		_key_process_down
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text77
 14683  009114                     __ptext77:
 14684                           	opt stack 0
 14685  009114                     _key_shift_loc:
 14686                           	opt stack 24
 14687                           
 14688                           ;key_menu.c: 49: uint8_t t8=*loc;
 14689                           
 14690                           ;incstack = 0
 14691  009114  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14692  009118  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14693  00911C  50DF               	movf	indf2,w,c
 14694  00911E  6E20               	movwf	key_shift_loc@t8,c
 14695                           
 14696                           ;key_menu.c: 50: if(min>=max){
 14697  009120  0100               	movlb	0	; () banked
 14698  009122  5163               	movf	key_shift_loc@max& (0+255),w,b
 14699  009124  0100               	movlb	0	; () banked
 14700  009126  5D62               	subwf	key_shift_loc@min& (0+255),w,b
 14701  009128  B0D8               	btfsc	status,0,c
 14702  00912A  D005               	goto	l15020
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;key_menu.c: 53: t8++;
 14706                           
 14707                           ; BSR set to: 0
 14708                           
 14709                           ;key_menu.c: 52: }else{
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;key_menu.c: 51: t8=min;
 14713  00912C  2A20               	incf	key_shift_loc@t8,f,c
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;key_menu.c: 54: if(t8>max)t8=min;
 14717  00912E  5020               	movf	key_shift_loc@t8,w,c
 14718  009130  0100               	movlb	0	; () banked
 14719  009132  5D63               	subwf	key_shift_loc@max& (0+255),w,b
 14720  009134  A0D8               	btfss	status,0,c
 14721  009136                     l15020:
 14722                           
 14723                           ; BSR set to: 0
 14724  009136  C062  F020         	movff	key_shift_loc@min,key_shift_loc@t8
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;key_menu.c: 55: }
 14728                           ;key_menu.c: 56: if(m_floatAdj.stru.sign){
 14729                           
 14730                           ; BSR set to: 0
 14731                           
 14732                           ; BSR set to: 0
 14733  00913A  5038               	movf	_m_floatAdj+3,w,c
 14734  00913C  B4D8               	btfsc	status,2,c
 14735  00913E  D005               	goto	l15028
 14736                           
 14737                           ; BSR set to: 0
 14738                           ;key_menu.c: 57: if(t8==0)t8=1;
 14739  009140  5020               	movf	key_shift_loc@t8,w,c
 14740  009142  A4D8               	btfss	status,2,c
 14741  009144  D002               	goto	l15028
 14742                           
 14743                           ; BSR set to: 0
 14744  009146  0E01               	movlw	1
 14745  009148  6E20               	movwf	key_shift_loc@t8,c
 14746  00914A                     l15028:
 14747                           
 14748                           ; BSR set to: 0
 14749                           ;key_menu.c: 58: }
 14750                           ;key_menu.c: 59: *loc=t8;
 14751  00914A  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14752  00914E  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14753  009152  C020  FFDF         	movff	key_shift_loc@t8,indf2
 14754                           
 14755                           ; BSR set to: 0
 14756  009156  0012               	return		;funcret
 14757  009158                     __end_of_key_shift_loc:
 14758                           	opt stack 0
 14759                           tblptru	equ	0xFF8
 14760                           tblptrh	equ	0xFF7
 14761                           tblptrl	equ	0xFF6
 14762                           tablat	equ	0xFF5
 14763                           prodh	equ	0xFF4
 14764                           prodl	equ	0xFF3
 14765                           intcon	equ	0xFF2
 14766                           postinc0	equ	0xFEE
 14767                           wreg	equ	0xFE8
 14768                           indf1	equ	0xFE7
 14769                           postinc1	equ	0xFE6
 14770                           postdec1	equ	0xFE5
 14771                           plusw1	equ	0xFE3
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           postinc2	equ	0xFDE
 14776                           postdec2	equ	0xFDD
 14777                           plusw2	equ	0xFDB
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function _event_process_time_out *****************
 14783 ;; Defined at:
 14784 ;;		line 30 in file "src/app/event.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;		None
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      char 
 14791 ;; Registers used:
 14792 ;;		None
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;Total ram usage:        0 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    4
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_main
 14809 ;;		_event_process
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text78
 14814  009CB8                     __ptext78:
 14815                           	opt stack 0
 14816  009CB8                     _event_process_time_out:
 14817                           	opt stack 26
 14818                           
 14819                           ;event.c: 33: return 1;
 14820                           ;	Return value of _event_process_time_out is never used
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;incstack = 0
 14824  009CB8  0012               	return		;funcret
 14825  009CBA                     __end_of_event_process_time_out:
 14826                           	opt stack 0
 14827                           tblptru	equ	0xFF8
 14828                           tblptrh	equ	0xFF7
 14829                           tblptrl	equ	0xFF6
 14830                           tablat	equ	0xFF5
 14831                           prodh	equ	0xFF4
 14832                           prodl	equ	0xFF3
 14833                           intcon	equ	0xFF2
 14834                           postinc0	equ	0xFEE
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postinc1	equ	0xFE6
 14838                           postdec1	equ	0xFE5
 14839                           plusw1	equ	0xFE3
 14840                           fsr1h	equ	0xFE2
 14841                           fsr1l	equ	0xFE1
 14842                           indf2	equ	0xFDF
 14843                           postinc2	equ	0xFDE
 14844                           postdec2	equ	0xFDD
 14845                           plusw2	equ	0xFDB
 14846                           fsr2h	equ	0xFDA
 14847                           fsr2l	equ	0xFD9
 14848                           status	equ	0xFD8
 14849                           
 14850 ;; *************** function _event_process_ticker *****************
 14851 ;; Defined at:
 14852 ;;		line 23 in file "src/app/event.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;		None
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  ret             1  135[BANK0 ] unsigned char 
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  1    wreg      char 
 14859 ;; Registers used:
 14860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 0/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14870 ;;Total ram usage:        1 bytes
 14871 ;; Hardware stack levels used:    1
 14872 ;; Hardware stack levels required when called:   12
 14873 ;; This function calls:
 14874 ;;		_sample_call_in_ticker
 14875 ;; This function is called by:
 14876 ;;		_main
 14877 ;;		_event_process
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           	psect	text79
 14882  009C9A                     __ptext79:
 14883                           	opt stack 0
 14884  009C9A                     _event_process_ticker:
 14885                           	opt stack 18
 14886                           
 14887                           ;event.c: 25: uint8_t ret=0;
 14888                           
 14889                           ;incstack = 0
 14890  009C9A  0E00               	movlw	0
 14891  009C9C  0100               	movlb	0	; () banked
 14892  009C9E  6FE7               	movwf	event_process_ticker@ret& (0+255),b
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;event.c: 26: sample_call_in_ticker();
 14896  009CA0  ECA7  F047         	call	_sample_call_in_ticker	;wreg free
 14897  009CA4  0012               	return	
 14898  009CA6                     __end_of_event_process_ticker:
 14899                           	opt stack 0
 14900                           tblptru	equ	0xFF8
 14901                           tblptrh	equ	0xFF7
 14902                           tblptrl	equ	0xFF6
 14903                           tablat	equ	0xFF5
 14904                           prodh	equ	0xFF4
 14905                           prodl	equ	0xFF3
 14906                           intcon	equ	0xFF2
 14907                           postinc0	equ	0xFEE
 14908                           wreg	equ	0xFE8
 14909                           indf1	equ	0xFE7
 14910                           postinc1	equ	0xFE6
 14911                           postdec1	equ	0xFE5
 14912                           plusw1	equ	0xFE3
 14913                           fsr1h	equ	0xFE2
 14914                           fsr1l	equ	0xFE1
 14915                           indf2	equ	0xFDF
 14916                           postinc2	equ	0xFDE
 14917                           postdec2	equ	0xFDD
 14918                           plusw2	equ	0xFDB
 14919                           fsr2h	equ	0xFDA
 14920                           fsr2l	equ	0xFD9
 14921                           status	equ	0xFD8
 14922                           
 14923 ;; *************** function _sample_call_in_ticker *****************
 14924 ;; Defined at:
 14925 ;;		line 148 in file "src/api/sample.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;		None
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  ret             1  134[BANK0 ] unsigned char 
 14930 ;; Return value:  Size  Location     Type
 14931 ;;                  1    wreg      void 
 14932 ;; Registers used:
 14933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14934 ;; Tracked objects:
 14935 ;;		On entry : 0/0
 14936 ;;		On exit  : 0/0
 14937 ;;		Unchanged: 0/0
 14938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;Total ram usage:        1 bytes
 14944 ;; Hardware stack levels used:    1
 14945 ;; Hardware stack levels required when called:   11
 14946 ;; This function calls:
 14947 ;;		_sample_call_cal_diff_pr
 14948 ;;		_sample_call_cal_in_soc
 14949 ;;		_sample_call_cal_pr
 14950 ;;		_sample_diff_pr_chip_fast
 14951 ;;		_sample_in_soc_adc_ch
 14952 ;;		_sample_pr_chip_fast
 14953 ;; This function is called by:
 14954 ;;		_event_process_ticker
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text80
 14959  008F4E                     __ptext80:
 14960                           	opt stack 0
 14961  008F4E                     _sample_call_in_ticker:
 14962                           	opt stack 18
 14963                           
 14964                           ;sample.c: 150: uint8_t ret=0;
 14965                           
 14966                           ;incstack = 0
 14967  008F4E  0E00               	movlw	0
 14968  008F50  0100               	movlb	0	; () banked
 14969  008F52  6FE6               	movwf	sample_call_in_ticker@ret& (0+255),b
 14970                           
 14971                           ;sample.c: 151: if(!sensorSimpleEn)return;
 14972  008F54  0100               	movlb	0	; () banked
 14973  008F56  51F1               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 14974  008F58  B4D8               	btfsc	status,2,c
 14975  008F5A  0012               	return	
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;sample.c: 152: if(dwm!=WORK_MODE){
 14979                           
 14980                           ; BSR set to: 0
 14981                           
 14982                           ; BSR set to: 0
 14983  008F5C  0100               	movlb	0	; () banked
 14984  008F5E  05FD               	decf	_dwm& (0+255),w,b	;volatile
 14985  008F60  B4D8               	btfsc	status,2,c
 14986  008F62  D00F               	goto	l16936
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;sample.c: 153: if(sample_call_cal_diff_pr())return;
 14990  008F64  EC3D  F04D         	call	_sample_call_cal_diff_pr	;wreg free
 14991  008F68  0900               	iorlw	0
 14992  008F6A  A4D8               	btfss	status,2,c
 14993  008F6C  0012               	return	
 14994                           
 14995                           ;sample.c: 154: if(sample_call_cal_pr())return;
 14996  008F6E  EC2E  F04D         	call	_sample_call_cal_pr	;wreg free
 14997  008F72  0900               	iorlw	0
 14998  008F74  A4D8               	btfss	status,2,c
 14999  008F76  0012               	return	
 15000                           
 15001                           ;sample.c: 155: if(sample_call_cal_in_soc())return;
 15002  008F78  ECEC  F04C         	call	_sample_call_cal_in_soc	;wreg free
 15003  008F7C  0900               	iorlw	0
 15004  008F7E  A4D8               	btfss	status,2,c
 15005  008F80  0012               	return	
 15006  008F82                     l16936:
 15007                           
 15008                           ;sample.c: 156: }
 15009                           ;sample.c: 157: if(sample_diff_pr_chip_fast())return;
 15010  008F82  EC9D  F01B         	call	_sample_diff_pr_chip_fast	;wreg free
 15011  008F86  0900               	iorlw	0
 15012  008F88  A4D8               	btfss	status,2,c
 15013  008F8A  0012               	return	
 15014                           
 15015                           ;sample.c: 158: if(sample_pr_chip_fast())return;
 15016  008F8C  EC8A  F021         	call	_sample_pr_chip_fast	;wreg free
 15017  008F90  0900               	iorlw	0
 15018  008F92  A4D8               	btfss	status,2,c
 15019  008F94  0012               	return	
 15020                           
 15021                           ;sample.c: 159: if(sample_in_soc_adc_ch())return;
 15022  008F96  ECF4  F022         	call	_sample_in_soc_adc_ch	;wreg free
 15023  008F9A  0012               	return	
 15024  008F9C                     __end_of_sample_call_in_ticker:
 15025                           	opt stack 0
 15026                           tblptru	equ	0xFF8
 15027                           tblptrh	equ	0xFF7
 15028                           tblptrl	equ	0xFF6
 15029                           tablat	equ	0xFF5
 15030                           prodh	equ	0xFF4
 15031                           prodl	equ	0xFF3
 15032                           intcon	equ	0xFF2
 15033                           postinc0	equ	0xFEE
 15034                           wreg	equ	0xFE8
 15035                           indf1	equ	0xFE7
 15036                           postinc1	equ	0xFE6
 15037                           postdec1	equ	0xFE5
 15038                           plusw1	equ	0xFE3
 15039                           fsr1h	equ	0xFE2
 15040                           fsr1l	equ	0xFE1
 15041                           indf2	equ	0xFDF
 15042                           postinc2	equ	0xFDE
 15043                           postdec2	equ	0xFDD
 15044                           plusw2	equ	0xFDB
 15045                           fsr2h	equ	0xFDA
 15046                           fsr2l	equ	0xFD9
 15047                           status	equ	0xFD8
 15048                           
 15049 ;; *************** function _sample_pr_chip_fast *****************
 15050 ;; Defined at:
 15051 ;;		line 242 in file "src/api/sample.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;		None
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  t16             2   43[BANK0 ] unsigned int 
 15056 ;;  ret             1   42[BANK0 ] unsigned char 
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      unsigned char 
 15059 ;; Registers used:
 15060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15070 ;;Total ram usage:        3 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:   10
 15073 ;; This function calls:
 15074 ;;		___x_sample_fifo
 15075 ;;		_ads1115_read_conversion
 15076 ;;		_ads1115_set_mux
 15077 ;;		_ads1115_start_conversion
 15078 ;; This function is called by:
 15079 ;;		_sample_call_in_ticker
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           	psect	text81
 15084  004314                     __ptext81:
 15085                           	opt stack 0
 15086  004314                     _sample_pr_chip_fast:
 15087                           	opt stack 18
 15088                           
 15089                           ;sample.c: 244: uint8_t ret=0;
 15090                           
 15091                           ;incstack = 0
 15092  004314  0E00               	movlw	0
 15093  004316  0100               	movlb	0	; () banked
 15094  004318  6F8A               	movwf	sample_pr_chip_fast@ret& (0+255),b
 15095                           
 15096                           ; BSR set to: 0
 15097                           ;sample.c: 245: uint16_t t16;
 15098                           ;sample.c: 246: PrChipSampleTimer+=(1000/100);
 15099  00431A  0E0A               	movlw	10
 15100  00431C  0101               	movlb	1	; () banked
 15101  00431E  2762               	addwf	_PrChipSampleTimer& (0+255),f,b	;volatile
 15102  004320  0E00               	movlw	0
 15103  004322  2363               	addwfc	(_PrChipSampleTimer+1)& (0+255),f,b	;volatile
 15104                           
 15105                           ; BSR set to: 1
 15106                           ;sample.c: 247: if(PrChipSampleTimer<100)return 0;
 15107  004324  0101               	movlb	1	; () banked
 15108  004326  5163               	movf	(_PrChipSampleTimer+1)& (0+255),w,b	;volatile
 15109  004328  E107               	bnz	l16470
 15110  00432A  0E64               	movlw	100
 15111  00432C  0101               	movlb	1	; () banked
 15112  00432E  5D62               	subwf	_PrChipSampleTimer& (0+255),w,b	;volatile
 15113  004330  B0D8               	btfsc	status,0,c
 15114  004332  D002               	goto	l16470
 15115                           
 15116                           ; BSR set to: 1
 15117  004334  0E00               	movlw	0
 15118                           
 15119                           ; BSR set to: 1
 15120  004336  0012               	return	
 15121  004338                     l16470:
 15122                           
 15123                           ; BSR set to: 1
 15124                           ;sample.c: 248: PrChipSampleTimer=0;
 15125  004338  0E00               	movlw	0
 15126  00433A  0101               	movlb	1	; () banked
 15127  00433C  6F63               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 15128  00433E  0E00               	movlw	0
 15129  004340  6F62               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 15130                           
 15131                           ;sample.c: 249: if(prChipSampleCount==0){
 15132  004342  0100               	movlb	0	; () banked
 15133  004344  51F6               	movf	_prChipSampleCount& (0+255),w,b	;volatile
 15134  004346  A4D8               	btfss	status,2,c
 15135  004348  D015               	goto	l16484
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;sample.c: 250: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 15139  00434A  0E04               	movlw	4
 15140  00434C  0100               	movlb	0	; () banked
 15141  00434E  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 15142                           
 15143                           ; BSR set to: 0
 15144                           ;sample.c: 251: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 15145  004350  C0EC  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 15146  004354  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 15147  004358  C0F7  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 15148  00435C  ECDA  F04C         	call	_ads1115_set_mux	;wreg free
 15149                           
 15150                           ;sample.c: 252: ads1115_start_conversion(pAds1115PrObj);
 15151  004360  C0EC  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 15152  004364  C0ED  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 15153  004368  EC04  F04C         	call	_ads1115_start_conversion	;wreg free
 15154                           
 15155                           ;sample.c: 253: prChipSampleCount++;
 15156  00436C  0100               	movlb	0	; () banked
 15157  00436E  2BF6               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;sample.c: 254: return 1;
 15161  004370  0E01               	movlw	1
 15162                           
 15163                           ; BSR set to: 0
 15164  004372  0012               	return	
 15165  004374                     l16484:
 15166                           
 15167                           ; BSR set to: 0
 15168                           ;sample.c: 255: }
 15169                           ;sample.c: 257: t16=ads1115_read_conversion(pAds1115PrObj);
 15170  004374  C0EC  F06E         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 15171  004378  C0ED  F06F         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 15172  00437C  EC67  F048         	call	_ads1115_read_conversion	;wreg free
 15173  004380  C06E  F08B         	movff	?_ads1115_read_conversion,sample_pr_chip_fast@t16
 15174  004384  C06F  F08C         	movff	?_ads1115_read_conversion+1,sample_pr_chip_fast@t16+1
 15175                           
 15176                           ;sample.c: 258: if(prChipSampleCh==ADS1X1X_MUX_SINGLE_0){
 15177  004388  0E04               	movlw	4
 15178  00438A  0100               	movlb	0	; () banked
 15179  00438C  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 15180  00438E  A4D8               	btfss	status,2,c
 15181  004390  D015               	goto	l16492
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;sample.c: 259: adc_exPt100=__x_sample_fifo(sampBufPt100ExA,t16,4);
 15185  004392  0EC8               	movlw	low _sampBufPt100ExA
 15186  004394  0100               	movlb	0	; () banked
 15187  004396  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15188  004398  0E01               	movlw	high _sampBufPt100ExA
 15189  00439A  0100               	movlb	0	; () banked
 15190  00439C  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15191  00439E  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 15192  0043A2  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15193  0043A6  0E04               	movlw	4
 15194  0043A8  0100               	movlb	0	; () banked
 15195  0043AA  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15196  0043AC  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15197  0043B0  C07A  F16C         	movff	?___x_sample_fifo,_adc_exPt100	;volatile
 15198  0043B4  C07B  F16D         	movff	?___x_sample_fifo+1,_adc_exPt100+1	;volatile
 15199                           
 15200                           ;sample.c: 260: prChipSampleCh=ADS1X1X_MUX_SINGLE_1;
 15201  0043B8  0E05               	movlw	5
 15202  0043BA  D045               	goto	L16
 15203  0043BC                     l16492:
 15204                           
 15205                           ; BSR set to: 0
 15206  0043BC  0E05               	movlw	5
 15207  0043BE  0100               	movlb	0	; () banked
 15208  0043C0  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 15209  0043C2  A4D8               	btfss	status,2,c
 15210  0043C4  D021               	goto	l16502
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;sample.c: 262: t16=__x_sample_fifo(sampBufPt100ExB,t16,4);
 15214  0043C6  0EC0               	movlw	low _sampBufPt100ExB
 15215  0043C8  0100               	movlb	0	; () banked
 15216  0043CA  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15217  0043CC  0E01               	movlw	high _sampBufPt100ExB
 15218  0043CE  0100               	movlb	0	; () banked
 15219  0043D0  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15220  0043D2  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 15221  0043D6  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15222  0043DA  0E04               	movlw	4
 15223  0043DC  0100               	movlb	0	; () banked
 15224  0043DE  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15225  0043E0  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15226  0043E4  C07A  F08B         	movff	?___x_sample_fifo,sample_pr_chip_fast@t16
 15227  0043E8  C07B  F08C         	movff	?___x_sample_fifo+1,sample_pr_chip_fast@t16+1
 15228                           
 15229                           ;sample.c: 263: t16*=2;
 15230  0043EC  0100               	movlb	0	; () banked
 15231  0043EE  90D8               	bcf	status,0,c
 15232  0043F0  378B               	rlcf	sample_pr_chip_fast@t16& (0+255),f,b
 15233  0043F2  378C               	rlcf	(sample_pr_chip_fast@t16+1)& (0+255),f,b
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;sample.c: 264: adc_exPt100-=t16;
 15237  0043F4  0100               	movlb	0	; () banked
 15238  0043F6  518B               	movf	sample_pr_chip_fast@t16& (0+255),w,b
 15239  0043F8  0101               	movlb	1	; () banked
 15240  0043FA  5F6C               	subwf	_adc_exPt100& (0+255),f,b	;volatile
 15241  0043FC  0100               	movlb	0	; () banked
 15242  0043FE  518C               	movf	(sample_pr_chip_fast@t16+1)& (0+255),w,b
 15243  004400  0101               	movlb	1	; () banked
 15244  004402  5B6D               	subwfb	(_adc_exPt100+1)& (0+255),f,b	;volatile
 15245                           
 15246                           ; BSR set to: 1
 15247                           ;sample.c: 265: prChipSampleCh=ADS1X1X_MUX_DIFF_2_3;
 15248  004404  0E03               	movlw	3
 15249  004406  D01F               	goto	L16
 15250  004408                     l16502:
 15251                           
 15252                           ; BSR set to: 0
 15253  004408  0E03               	movlw	3
 15254  00440A  0100               	movlb	0	; () banked
 15255  00440C  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 15256  00440E  A4D8               	btfss	status,2,c
 15257  004410  D019               	goto	l16510
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;sample.c: 267: adc_pressure=__x_sample_fifo(sampBufPr,t16,4);
 15261  004412  0EB8               	movlw	low _sampBufPr
 15262  004414  0100               	movlb	0	; () banked
 15263  004416  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15264  004418  0E01               	movlw	high _sampBufPr
 15265  00441A  0100               	movlb	0	; () banked
 15266  00441C  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15267  00441E  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 15268  004422  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15269  004426  0E04               	movlw	4
 15270  004428  0100               	movlb	0	; () banked
 15271  00442A  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15272  00442C  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15273  004430  C07A  F16E         	movff	?___x_sample_fifo,_adc_pressure	;volatile
 15274  004434  C07B  F16F         	movff	?___x_sample_fifo+1,_adc_pressure+1	;volatile
 15275                           
 15276                           ;sample.c: 268: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 15277  004438  0E04               	movlw	4
 15278  00443A  0100               	movlb	0	; () banked
 15279  00443C  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;sample.c: 269: prChipSampleCount++;
 15283  00443E  0100               	movlb	0	; () banked
 15284  004440  2BF6               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 15285                           
 15286                           ;sample.c: 270: }else{
 15287  004442  D003               	goto	l16512
 15288  004444                     l16510:
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;sample.c: 271: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 15292  004444  0E04               	movlw	4
 15293  004446                     L16:
 15294  004446  0100               	movlb	0	; () banked
 15295  004448  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 15296  00444A                     l16512:
 15297                           
 15298                           ; BSR set to: 0
 15299                           ;sample.c: 272: }
 15300                           ;sample.c: 274: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 15301  00444A  C0EC  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 15302  00444E  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 15303  004452  C0F7  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 15304  004456  ECDA  F04C         	call	_ads1115_set_mux	;wreg free
 15305                           
 15306                           ;sample.c: 275: ads1115_start_conversion(pAds1115PrObj);
 15307  00445A  C0EC  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 15308  00445E  C0ED  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 15309  004462  EC04  F04C         	call	_ads1115_start_conversion	;wreg free
 15310                           
 15311                           ;sample.c: 276: if(prChipSampleCount>4){
 15312  004466  0E04               	movlw	4
 15313  004468  0100               	movlb	0	; () banked
 15314  00446A  65F6               	cpfsgt	_prChipSampleCount& (0+255),b	;volatile
 15315  00446C  D006               	goto	l16520
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;sample.c: 277: PrChipSampleFinish=1;
 15319  00446E  0E01               	movlw	1
 15320  004470  0100               	movlb	0	; () banked
 15321  004472  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 15322                           
 15323                           ;sample.c: 278: prChipSampleCount=0;
 15324  004474  0E00               	movlw	0
 15325  004476  0100               	movlb	0	; () banked
 15326  004478  6FF6               	movwf	_prChipSampleCount& (0+255),b	;volatile
 15327  00447A                     l16520:
 15328                           
 15329                           ; BSR set to: 0
 15330                           ;sample.c: 279: }
 15331                           ;sample.c: 280: return 1;
 15332  00447A  0E01               	movlw	1
 15333  00447C  0012               	return	
 15334  00447E                     __end_of_sample_pr_chip_fast:
 15335                           	opt stack 0
 15336                           tblptru	equ	0xFF8
 15337                           tblptrh	equ	0xFF7
 15338                           tblptrl	equ	0xFF6
 15339                           tablat	equ	0xFF5
 15340                           prodh	equ	0xFF4
 15341                           prodl	equ	0xFF3
 15342                           intcon	equ	0xFF2
 15343                           postinc0	equ	0xFEE
 15344                           wreg	equ	0xFE8
 15345                           indf1	equ	0xFE7
 15346                           postinc1	equ	0xFE6
 15347                           postdec1	equ	0xFE5
 15348                           plusw1	equ	0xFE3
 15349                           fsr1h	equ	0xFE2
 15350                           fsr1l	equ	0xFE1
 15351                           indf2	equ	0xFDF
 15352                           postinc2	equ	0xFDE
 15353                           postdec2	equ	0xFDD
 15354                           plusw2	equ	0xFDB
 15355                           fsr2h	equ	0xFDA
 15356                           fsr2l	equ	0xFD9
 15357                           status	equ	0xFD8
 15358                           
 15359 ;; *************** function _sample_in_soc_adc_ch *****************
 15360 ;; Defined at:
 15361 ;;		line 283 in file "src/api/sample.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;		None
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  t16             2   42[BANK0 ] unsigned int 
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      unsigned char 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;Total ram usage:        2 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:    6
 15382 ;; This function calls:
 15383 ;;		___x_sample_fifo
 15384 ;;		_in_adc_init
 15385 ;;		_in_adc_start_and_read
 15386 ;; This function is called by:
 15387 ;;		_sample_call_in_ticker
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           
 15391                           	psect	text82
 15392  0045E8                     __ptext82:
 15393                           	opt stack 0
 15394  0045E8                     _sample_in_soc_adc_ch:
 15395                           	opt stack 22
 15396                           
 15397                           ;sample.c: 285: uint16_t t16;
 15398                           ;sample.c: 286: inSocAdcSampleTimer+=(1000/100);
 15399                           
 15400                           ;incstack = 0
 15401  0045E8  0E0A               	movlw	10
 15402  0045EA  0101               	movlb	1	; () banked
 15403  0045EC  2760               	addwf	_inSocAdcSampleTimer& (0+255),f,b	;volatile
 15404  0045EE  0E00               	movlw	0
 15405  0045F0  2361               	addwfc	(_inSocAdcSampleTimer+1)& (0+255),f,b	;volatile
 15406                           
 15407                           ;sample.c: 287: if(inSocAdcSampleTimer<50)return 0;
 15408  0045F2  0101               	movlb	1	; () banked
 15409  0045F4  5161               	movf	(_inSocAdcSampleTimer+1)& (0+255),w,b	;volatile
 15410  0045F6  E107               	bnz	l16530
 15411  0045F8  0E32               	movlw	50
 15412  0045FA  0101               	movlb	1	; () banked
 15413  0045FC  5D60               	subwf	_inSocAdcSampleTimer& (0+255),w,b	;volatile
 15414  0045FE  B0D8               	btfsc	status,0,c
 15415  004600  D002               	goto	l16530
 15416                           
 15417                           ; BSR set to: 1
 15418  004602  0E00               	movlw	0
 15419                           
 15420                           ; BSR set to: 1
 15421  004604  0012               	return	
 15422  004606                     l16530:
 15423                           
 15424                           ; BSR set to: 1
 15425                           ;sample.c: 288: inSocAdcSampleTimer=0;
 15426  004606  0E00               	movlw	0
 15427  004608  0101               	movlb	1	; () banked
 15428  00460A  6F61               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 15429  00460C  0E00               	movlw	0
 15430  00460E  6F60               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 15431                           
 15432                           ;sample.c: 289: if(inSocAdcSampleCount==0){
 15433  004610  0100               	movlb	0	; () banked
 15434  004612  51F4               	movf	_inSocAdcSampleCount& (0+255),w,b	;volatile
 15435  004614  A4D8               	btfss	status,2,c
 15436  004616  D00A               	goto	l16542
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;sample.c: 290: in_adc_init();
 15440  004618  ECB6  F04C         	call	_in_adc_init	;wreg free
 15441                           
 15442                           ;sample.c: 291: inSocAdcSampleCh=2;
 15443  00461C  0E02               	movlw	2
 15444  00461E  0100               	movlb	0	; () banked
 15445  004620  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;sample.c: 292: inSocAdcSampleCount=1;
 15449  004622  0E01               	movlw	1
 15450  004624  0100               	movlb	0	; () banked
 15451  004626  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;sample.c: 293: return 1;
 15455  004628  0E01               	movlw	1
 15456                           
 15457                           ; BSR set to: 0
 15458  00462A  0012               	return	
 15459  00462C                     l16542:
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;sample.c: 294: }
 15463                           ;sample.c: 295: if(inSocAdcSampleCh==2){
 15464  00462C  0E02               	movlw	2
 15465  00462E  0100               	movlb	0	; () banked
 15466  004630  19F3               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15467  004632  A4D8               	btfss	status,2,c
 15468  004634  D01D               	goto	l16550
 15469                           
 15470                           ; BSR set to: 0
 15471                           ;sample.c: 296: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15472  004636  0100               	movlb	0	; () banked
 15473  004638  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15474  00463A  ECDF  F042         	call	_in_adc_start_and_read
 15475  00463E  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15476  004642  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15477                           
 15478                           ;sample.c: 297: adc_iPrEx[0]=__x_sample_fifo((int16_t*)sampBufExPr0InSoc,t16,4);
 15479  004646  0EB0               	movlw	low _sampBufExPr0InSoc
 15480  004648  0100               	movlb	0	; () banked
 15481  00464A  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15482  00464C  0E01               	movlw	high _sampBufExPr0InSoc
 15483  00464E  0100               	movlb	0	; () banked
 15484  004650  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15485  004652  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15486  004656  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15487  00465A  0E04               	movlw	4
 15488  00465C  0100               	movlb	0	; () banked
 15489  00465E  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15490  004660  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15491  004664  C07A  F021         	movff	?___x_sample_fifo,_adc_iPrEx	;volatile
 15492  004668  C07B  F022         	movff	?___x_sample_fifo+1,_adc_iPrEx+1	;volatile
 15493                           
 15494                           ;sample.c: 298: inSocAdcSampleCh=1;
 15495  00466C  0E01               	movlw	1
 15496  00466E  D061               	goto	L19
 15497  004670                     l16550:
 15498                           
 15499                           ; BSR set to: 0
 15500  004670  0100               	movlb	0	; () banked
 15501  004672  05F3               	decf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15502  004674  A4D8               	btfss	status,2,c
 15503  004676  D01D               	goto	l16558
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;sample.c: 300: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15507  004678  0100               	movlb	0	; () banked
 15508  00467A  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15509  00467C  ECDF  F042         	call	_in_adc_start_and_read
 15510  004680  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15511  004684  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15512                           
 15513                           ;sample.c: 301: adc_iPrEx[1]=__x_sample_fifo((int16_t*)sampBufExPr1InSoc,t16,4);
 15514  004688  0EA8               	movlw	low _sampBufExPr1InSoc
 15515  00468A  0100               	movlb	0	; () banked
 15516  00468C  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15517  00468E  0E01               	movlw	high _sampBufExPr1InSoc
 15518  004690  0100               	movlb	0	; () banked
 15519  004692  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15520  004694  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15521  004698  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15522  00469C  0E04               	movlw	4
 15523  00469E  0100               	movlb	0	; () banked
 15524  0046A0  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15525  0046A2  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15526  0046A6  C07A  F023         	movff	?___x_sample_fifo,_adc_iPrEx+2	;volatile
 15527  0046AA  C07B  F024         	movff	?___x_sample_fifo+1,_adc_iPrEx+3	;volatile
 15528                           
 15529                           ;sample.c: 302: inSocAdcSampleCh=0;
 15530  0046AE  0E00               	movlw	0
 15531  0046B0  D040               	goto	L19
 15532  0046B2                     l16558:
 15533                           
 15534                           ; BSR set to: 0
 15535  0046B2  0100               	movlb	0	; () banked
 15536  0046B4  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15537  0046B6  A4D8               	btfss	status,2,c
 15538  0046B8  D019               	goto	l16566
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;sample.c: 304: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15542  0046BA  0100               	movlb	0	; () banked
 15543  0046BC  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15544  0046BE  ECDF  F042         	call	_in_adc_start_and_read
 15545  0046C2  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15546  0046C6  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15547                           
 15548                           ;sample.c: 305: __x_sample_fifo((int16_t*)sampBufBatInSoc,t16,4);
 15549  0046CA  0EA0               	movlw	low _sampBufBatInSoc
 15550  0046CC  0100               	movlb	0	; () banked
 15551  0046CE  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15552  0046D0  0E01               	movlw	high _sampBufBatInSoc
 15553  0046D2  0100               	movlb	0	; () banked
 15554  0046D4  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15555  0046D6  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15556  0046DA  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15557  0046DE  0E04               	movlw	4
 15558  0046E0  0100               	movlb	0	; () banked
 15559  0046E2  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15560  0046E4  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15561                           
 15562                           ;sample.c: 306: inSocAdcSampleCh=3;
 15563  0046E8  0E03               	movlw	3
 15564  0046EA  D023               	goto	L19
 15565  0046EC                     l16566:
 15566                           
 15567                           ; BSR set to: 0
 15568  0046EC  0E03               	movlw	3
 15569  0046EE  0100               	movlb	0	; () banked
 15570  0046F0  19F3               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15571  0046F2  A4D8               	btfss	status,2,c
 15572  0046F4  D01D               	goto	l16576
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;sample.c: 308: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15576  0046F6  0100               	movlb	0	; () banked
 15577  0046F8  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15578  0046FA  ECDF  F042         	call	_in_adc_start_and_read
 15579  0046FE  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15580  004702  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15581                           
 15582                           ;sample.c: 309: __x_sample_fifo((int16_t*)sampBufRefInSoc,t16,4);
 15583  004706  0E98               	movlw	low _sampBufRefInSoc
 15584  004708  0100               	movlb	0	; () banked
 15585  00470A  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15586  00470C  0E01               	movlw	high _sampBufRefInSoc
 15587  00470E  0100               	movlb	0	; () banked
 15588  004710  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15589  004712  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15590  004716  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15591  00471A  0E04               	movlw	4
 15592  00471C  0100               	movlb	0	; () banked
 15593  00471E  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15594  004720  EC3F  F022         	call	___x_sample_fifo	;wreg free
 15595                           
 15596                           ;sample.c: 310: inSocAdcSampleCh=2;
 15597  004724  0E02               	movlw	2
 15598  004726  0100               	movlb	0	; () banked
 15599  004728  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;sample.c: 311: inSocAdcSampleCount++;
 15603  00472A  0100               	movlb	0	; () banked
 15604  00472C  2BF4               	incf	_inSocAdcSampleCount& (0+255),f,b	;volatile
 15605                           
 15606                           ;sample.c: 312: }else{
 15607  00472E  D003               	goto	l16578
 15608  004730                     l16576:
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;sample.c: 313: inSocAdcSampleCh=2;
 15612  004730  0E02               	movlw	2
 15613  004732                     L19:
 15614  004732  0100               	movlb	0	; () banked
 15615  004734  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 15616  004736                     l16578:
 15617                           
 15618                           ; BSR set to: 0
 15619                           ;sample.c: 314: }
 15620                           ;sample.c: 315: if(inSocAdcSampleCount>4){
 15621  004736  0E04               	movlw	4
 15622  004738  0100               	movlb	0	; () banked
 15623  00473A  65F4               	cpfsgt	_inSocAdcSampleCount& (0+255),b	;volatile
 15624  00473C  D006               	goto	l16582
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;sample.c: 316: inSocAdcSampleFinish=1;
 15628  00473E  0E01               	movlw	1
 15629  004740  0100               	movlb	0	; () banked
 15630  004742  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 15631                           
 15632                           ;sample.c: 317: inSocAdcSampleCount=0;
 15633  004744  0E00               	movlw	0
 15634  004746  0100               	movlb	0	; () banked
 15635  004748  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 15636  00474A                     l16582:
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;sample.c: 318: }
 15640                           ;sample.c: 319: return 1;
 15641  00474A  0E01               	movlw	1
 15642  00474C  0012               	return	
 15643  00474E                     __end_of_sample_in_soc_adc_ch:
 15644                           	opt stack 0
 15645                           tblptru	equ	0xFF8
 15646                           tblptrh	equ	0xFF7
 15647                           tblptrl	equ	0xFF6
 15648                           tablat	equ	0xFF5
 15649                           prodh	equ	0xFF4
 15650                           prodl	equ	0xFF3
 15651                           intcon	equ	0xFF2
 15652                           postinc0	equ	0xFEE
 15653                           wreg	equ	0xFE8
 15654                           indf1	equ	0xFE7
 15655                           postinc1	equ	0xFE6
 15656                           postdec1	equ	0xFE5
 15657                           plusw1	equ	0xFE3
 15658                           fsr1h	equ	0xFE2
 15659                           fsr1l	equ	0xFE1
 15660                           indf2	equ	0xFDF
 15661                           postinc2	equ	0xFDE
 15662                           postdec2	equ	0xFDD
 15663                           plusw2	equ	0xFDB
 15664                           fsr2h	equ	0xFDA
 15665                           fsr2l	equ	0xFD9
 15666                           status	equ	0xFD8
 15667                           
 15668 ;; *************** function _in_adc_start_and_read *****************
 15669 ;; Defined at:
 15670 ;;		line 21 in file "src/driver/in_adc.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  ch              1    wreg     unsigned char 
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;  ch              1    6[BANK0 ] unsigned char 
 15675 ;;  ret             2    7[BANK0 ] unsigned int 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  2    4[BANK0 ] unsigned int 
 15678 ;; Registers used:
 15679 ;;		wreg, status,2, status,0, cstack
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15686 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;Total ram usage:        6 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:    5
 15692 ;; This function calls:
 15693 ;;		_delay_us
 15694 ;; This function is called by:
 15695 ;;		_sample_in_soc_adc_ch
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text83
 15700  0085BE                     __ptext83:
 15701                           	opt stack 0
 15702  0085BE                     _in_adc_start_and_read:
 15703                           	opt stack 22
 15704                           
 15705                           ;incstack = 0
 15706                           ;in_adc_start_and_read@ch stored from wreg
 15707  0085BE  0100               	movlb	0	; () banked
 15708  0085C0  6F66               	movwf	in_adc_start_and_read@ch& (0+255),b
 15709                           
 15710                           ;in_adc.c: 23: uint16_t ret=0;
 15711  0085C2  0E00               	movlw	0
 15712  0085C4  0100               	movlb	0	; () banked
 15713  0085C6  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15714  0085C8  0E00               	movlw	0
 15715  0085CA  6F67               	movwf	in_adc_start_and_read@ret& (0+255),b
 15716                           
 15717                           ; BSR set to: 0
 15718                           
 15719                           ; BSR set to: 0
 15720                           
 15721                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 15722  0085CC  80C2               	bsf	4034,0,c	;volatile
 15723                           
 15724                           ; BSR set to: 0
 15725                           
 15726                           ; BSR set to: 0
 15727                           
 15728                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 15729                           
 15730                           ; BSR set to: 0
 15731  0085CE  C066  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 15732  0085D2  4620               	rlncf	??_in_adc_start_and_read,f,c
 15733  0085D4  4620               	rlncf	??_in_adc_start_and_read,f,c
 15734  0085D6  50C2               	movf	4034,w,c	;volatile
 15735  0085D8  1820               	xorwf	??_in_adc_start_and_read,w,c
 15736  0085DA  0BC3               	andlw	-61
 15737  0085DC  1820               	xorwf	??_in_adc_start_and_read,w,c
 15738  0085DE  6EC2               	movwf	4034,c	;volatile
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;in_adc.c: 26: delay_us(2);
 15742                           
 15743                           ; BSR set to: 0
 15744  0085E0  0E00               	movlw	0
 15745  0085E2  0100               	movlb	0	; () banked
 15746  0085E4  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15747  0085E6  0E02               	movlw	2
 15748  0085E8  6F60               	movwf	delay_us@dly& (0+255),b
 15749  0085EA  EC16  F04A         	call	_delay_us	;wreg free
 15750                           
 15751                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 15752  0085EE  82C2               	bsf	4034,1,c	;volatile
 15753                           
 15754                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 15755  0085F0  D001               	goto	l1751
 15756  0085F2                     l1752:
 15757  0085F2  F000               	nop	
 15758  0085F4                     l1751:
 15759  0085F4  B2C2               	btfsc	4034,1,c	;volatile
 15760  0085F6  D7FD               	goto	l1752
 15761                           
 15762                           ;in_adc.c: 30: ret=ADRESH;
 15763  0085F8  CFC4 F067          	movff	4036,in_adc_start_and_read@ret	;volatile
 15764  0085FC  0100               	movlb	0	; () banked
 15765  0085FE  6B68               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;in_adc.c: 31: ret<<=8;
 15769  008600  0100               	movlb	0	; () banked
 15770  008602  5167               	movf	in_adc_start_and_read@ret& (0+255),w,b
 15771  008604  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15772  008606  6B67               	clrf	in_adc_start_and_read@ret& (0+255),b
 15773                           
 15774                           ; BSR set to: 0
 15775                           ;in_adc.c: 32: ret |= ADRESL;
 15776  008608  50C3               	movf	4035,w,c	;volatile
 15777  00860A  0100               	movlb	0	; () banked
 15778  00860C  1367               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;in_adc.c: 33: delay_us(2);
 15782  00860E  0E00               	movlw	0
 15783  008610  0100               	movlb	0	; () banked
 15784  008612  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15785  008614  0E02               	movlw	2
 15786  008616  6F60               	movwf	delay_us@dly& (0+255),b
 15787  008618  EC16  F04A         	call	_delay_us	;wreg free
 15788                           
 15789                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 15790  00861C  90C2               	bcf	4034,0,c	;volatile
 15791                           
 15792                           ;in_adc.c: 35: return ret;
 15793  00861E  C067  F064         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 15794  008622  C068  F065         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 15795  008626  0012               	return	
 15796  008628                     __end_of_in_adc_start_and_read:
 15797                           	opt stack 0
 15798                           tblptru	equ	0xFF8
 15799                           tblptrh	equ	0xFF7
 15800                           tblptrl	equ	0xFF6
 15801                           tablat	equ	0xFF5
 15802                           prodh	equ	0xFF4
 15803                           prodl	equ	0xFF3
 15804                           intcon	equ	0xFF2
 15805                           postinc0	equ	0xFEE
 15806                           wreg	equ	0xFE8
 15807                           indf1	equ	0xFE7
 15808                           postinc1	equ	0xFE6
 15809                           postdec1	equ	0xFE5
 15810                           plusw1	equ	0xFE3
 15811                           fsr1h	equ	0xFE2
 15812                           fsr1l	equ	0xFE1
 15813                           indf2	equ	0xFDF
 15814                           postinc2	equ	0xFDE
 15815                           postdec2	equ	0xFDD
 15816                           plusw2	equ	0xFDB
 15817                           fsr2h	equ	0xFDA
 15818                           fsr2l	equ	0xFD9
 15819                           status	equ	0xFD8
 15820                           
 15821 ;; *************** function _in_adc_init *****************
 15822 ;; Defined at:
 15823 ;;		line 9 in file "src/driver/in_adc.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;		None
 15826 ;; Auto vars:     Size  Location     Type
 15827 ;;		None
 15828 ;; Return value:  Size  Location     Type
 15829 ;;                  1    wreg      void 
 15830 ;; Registers used:
 15831 ;;		wreg, status,2
 15832 ;; Tracked objects:
 15833 ;;		On entry : 0/0
 15834 ;;		On exit  : 0/0
 15835 ;;		Unchanged: 0/0
 15836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15841 ;;Total ram usage:        0 bytes
 15842 ;; Hardware stack levels used:    1
 15843 ;; Hardware stack levels required when called:    4
 15844 ;; This function calls:
 15845 ;;		Nothing
 15846 ;; This function is called by:
 15847 ;;		_sample_in_soc_adc_ch
 15848 ;;		_main
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text84
 15853  00996C                     __ptext84:
 15854                           	opt stack 0
 15855  00996C                     _in_adc_init:
 15856                           	opt stack 26
 15857                           
 15858                           ;in_adc.c: 11: ADCON1=0b00001101;
 15859                           
 15860                           ;incstack = 0
 15861  00996C  0E0D               	movlw	13
 15862  00996E  6EC1               	movwf	4033,c	;volatile
 15863                           
 15864                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 15865  009970  8EC0               	bsf	4032,7,c	;volatile
 15866                           
 15867                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 15868  009972  86C0               	bsf	4032,3,c	;volatile
 15869  009974  88C0               	bsf	4032,4,c	;volatile
 15870  009976  8AC0               	bsf	4032,5,c	;volatile
 15871                           
 15872                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 15873  009978  80C0               	bsf	4032,0,c	;volatile
 15874  00997A  82C0               	bsf	4032,1,c	;volatile
 15875  00997C  84C0               	bsf	4032,2,c	;volatile
 15876                           
 15877                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 15878  00997E  8EC2               	bsf	4034,7,c	;volatile
 15879                           
 15880                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 15881  009980  50C2               	movf	4034,w,c	;volatile
 15882  009982  0BC3               	andlw	-61
 15883  009984  090C               	iorlw	12
 15884  009986  6EC2               	movwf	4034,c	;volatile
 15885                           
 15886                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 15887  009988  9C9E               	bcf	3998,6,c	;volatile
 15888                           
 15889                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 15890  00998A  9C9D               	bcf	3997,6,c	;volatile
 15891                           
 15892                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 15893  00998C  9C9F               	bcf	3999,6,c	;volatile
 15894  00998E  0012               	return		;funcret
 15895  009990                     __end_of_in_adc_init:
 15896                           	opt stack 0
 15897                           tblptru	equ	0xFF8
 15898                           tblptrh	equ	0xFF7
 15899                           tblptrl	equ	0xFF6
 15900                           tablat	equ	0xFF5
 15901                           prodh	equ	0xFF4
 15902                           prodl	equ	0xFF3
 15903                           intcon	equ	0xFF2
 15904                           postinc0	equ	0xFEE
 15905                           wreg	equ	0xFE8
 15906                           indf1	equ	0xFE7
 15907                           postinc1	equ	0xFE6
 15908                           postdec1	equ	0xFE5
 15909                           plusw1	equ	0xFE3
 15910                           fsr1h	equ	0xFE2
 15911                           fsr1l	equ	0xFE1
 15912                           indf2	equ	0xFDF
 15913                           postinc2	equ	0xFDE
 15914                           postdec2	equ	0xFDD
 15915                           plusw2	equ	0xFDB
 15916                           fsr2h	equ	0xFDA
 15917                           fsr2l	equ	0xFD9
 15918                           status	equ	0xFD8
 15919                           
 15920 ;; *************** function _sample_diff_pr_chip_fast *****************
 15921 ;; Defined at:
 15922 ;;		line 197 in file "src/api/sample.c"
 15923 ;; Parameters:    Size  Location     Type
 15924 ;;		None
 15925 ;; Auto vars:     Size  Location     Type
 15926 ;;  t16             2   49[BANK0 ] int 
 15927 ;; Return value:  Size  Location     Type
 15928 ;;                  1    wreg      unsigned char 
 15929 ;; Registers used:
 15930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15931 ;; Tracked objects:
 15932 ;;		On entry : 0/0
 15933 ;;		On exit  : 0/0
 15934 ;;		Unchanged: 0/0
 15935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15940 ;;Total ram usage:        2 bytes
 15941 ;; Hardware stack levels used:    1
 15942 ;; Hardware stack levels required when called:   10
 15943 ;; This function calls:
 15944 ;;		___x_sample_fifo
 15945 ;;		_ads1115_read_conversion
 15946 ;;		_ads1115_set_data_rate
 15947 ;;		_ads1115_set_mux
 15948 ;;		_ads1115_set_pga
 15949 ;;		_ads1115_start_conversion
 15950 ;;		_sample_diff_pr_fliter
 15951 ;; This function is called by:
 15952 ;;		_sample_call_in_ticker
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           	psect	text85
 15957  00373A                     __ptext85:
 15958                           	opt stack 0
 15959  00373A                     _sample_diff_pr_chip_fast:
 15960                           	opt stack 18
 15961                           
 15962                           ;sample.c: 199: int16_t t16;
 15963                           ;sample.c: 200: diffPrChipSampleTimer+=(1000/100);
 15964                           
 15965                           ;incstack = 0
 15966  00373A  0E0A               	movlw	10
 15967  00373C  0101               	movlb	1	; () banked
 15968  00373E  2764               	addwf	_diffPrChipSampleTimer& (0+255),f,b	;volatile
 15969  003740  0E00               	movlw	0
 15970  003742  2365               	addwfc	(_diffPrChipSampleTimer+1)& (0+255),f,b	;volatile
 15971                           
 15972                           ;sample.c: 201: if(diffPrChipSampleTimer<100)return 0;
 15973  003744  0101               	movlb	1	; () banked
 15974  003746  5165               	movf	(_diffPrChipSampleTimer+1)& (0+255),w,b	;volatile
 15975  003748  E107               	bnz	l16392
 15976  00374A  0E64               	movlw	100
 15977  00374C  0101               	movlb	1	; () banked
 15978  00374E  5D64               	subwf	_diffPrChipSampleTimer& (0+255),w,b	;volatile
 15979  003750  B0D8               	btfsc	status,0,c
 15980  003752  D002               	goto	l16392
 15981                           
 15982                           ; BSR set to: 1
 15983  003754  0E00               	movlw	0
 15984                           
 15985                           ; BSR set to: 1
 15986  003756  0012               	return	
 15987  003758                     l16392:
 15988                           
 15989                           ; BSR set to: 1
 15990                           ;sample.c: 202: diffPrChipSampleTimer=0;
 15991  003758  0E00               	movlw	0
 15992  00375A  0101               	movlb	1	; () banked
 15993  00375C  6F65               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 15994  00375E  0E00               	movlw	0
 15995  003760  6F64               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 15996                           
 15997                           ;sample.c: 203: if(diffPrChipSampleCount==0){
 15998  003762  0100               	movlb	0	; () banked
 15999  003764  51FA               	movf	_diffPrChipSampleCount& (0+255),w,b	;volatile
 16000  003766  A4D8               	btfss	status,2,c
 16001  003768  D028               	goto	l16410
 16002                           
 16003                           ; BSR set to: 0
 16004                           ;sample.c: 205: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 16005  00376A  0E00               	movlw	0
 16006  00376C  0100               	movlb	0	; () banked
 16007  00376E  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;sample.c: 206: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 16011  003770  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 16012  003774  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 16013  003778  0E02               	movlw	2
 16014  00377A  0100               	movlb	0	; () banked
 16015  00377C  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 16016  00377E  EC6C  F04C         	call	_ads1115_set_data_rate	;wreg free
 16017                           
 16018                           ;sample.c: 207: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 16019  003782  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 16020  003786  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 16021  00378A  C0F9  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 16022  00378E  ECDA  F04C         	call	_ads1115_set_mux	;wreg free
 16023                           
 16024                           ;sample.c: 208: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 16025  003792  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 16026  003796  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 16027  00379A  0E00               	movlw	0
 16028  00379C  0100               	movlb	0	; () banked
 16029  00379E  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 16030  0037A0  ECC8  F04C         	call	_ads1115_set_pga	;wreg free
 16031                           
 16032                           ;sample.c: 209: ads1115_start_conversion(pAds1115DiffPrObj);
 16033  0037A4  C0EE  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 16034  0037A8  C0EF  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 16035  0037AC  EC04  F04C         	call	_ads1115_start_conversion	;wreg free
 16036                           
 16037                           ;sample.c: 210: diffPrChipSampleCount=1;
 16038  0037B0  0E01               	movlw	1
 16039  0037B2  0100               	movlb	0	; () banked
 16040  0037B4  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;sample.c: 211: return 1;
 16044  0037B6  0E01               	movlw	1
 16045                           
 16046                           ; BSR set to: 0
 16047  0037B8  0012               	return	
 16048  0037BA                     l16410:
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;sample.c: 212: }
 16052                           ;sample.c: 213: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 16053  0037BA  C0EE  F06E         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 16054  0037BE  C0EF  F06F         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 16055  0037C2  EC67  F048         	call	_ads1115_read_conversion	;wreg free
 16056  0037C6  C06E  F091         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
 16057  0037CA  C06F  F092         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
 16058                           
 16059                           ;sample.c: 214: if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_0_1){
 16060  0037CE  0100               	movlb	0	; () banked
 16061  0037D0  51F9               	movf	_diffPrChipSampCh& (0+255),w,b	;volatile
 16062  0037D2  A4D8               	btfss	status,2,c
 16063  0037D4  D01C               	goto	l16420
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;sample.c: 215: __x_sample_fifo(sampBufDiffPr_D01,t16,4);
 16067  0037D6  0EE0               	movlw	low _sampBufDiffPr_D01
 16068  0037D8  0100               	movlb	0	; () banked
 16069  0037DA  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 16070  0037DC  0E01               	movlw	high _sampBufDiffPr_D01
 16071  0037DE  0100               	movlb	0	; () banked
 16072  0037E0  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 16073  0037E2  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 16074  0037E6  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 16075  0037EA  0E04               	movlw	4
 16076  0037EC  0100               	movlb	0	; () banked
 16077  0037EE  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 16078  0037F0  EC3F  F022         	call	___x_sample_fifo	;wreg free
 16079                           
 16080                           ;sample.c: 216: diffPrChipSampCh=ADS1X1X_MUX_DIFF_2_3;
 16081  0037F4  0E03               	movlw	3
 16082  0037F6  0100               	movlb	0	; () banked
 16083  0037F8  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;sample.c: 217: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_256);
 16087  0037FA  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 16088  0037FE  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 16089  003802  0E05               	movlw	5
 16090  003804  0100               	movlb	0	; () banked
 16091  003806  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 16092  003808  ECC8  F04C         	call	_ads1115_set_pga	;wreg free
 16093                           
 16094                           ;sample.c: 218: }else if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_2_3){
 16095  00380C  D054               	goto	l16442
 16096  00380E                     l16420:
 16097  00380E  0E03               	movlw	3
 16098  003810  0100               	movlb	0	; () banked
 16099  003812  19F9               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 16100  003814  A4D8               	btfss	status,2,c
 16101  003816  D01C               	goto	l16428
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;sample.c: 219: __x_sample_fifo(sampBufDiffPr_D23,t16,4);
 16105  003818  0ED8               	movlw	low _sampBufDiffPr_D23
 16106  00381A  0100               	movlb	0	; () banked
 16107  00381C  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 16108  00381E  0E01               	movlw	high _sampBufDiffPr_D23
 16109  003820  0100               	movlb	0	; () banked
 16110  003822  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 16111  003824  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 16112  003828  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 16113  00382C  0E04               	movlw	4
 16114  00382E  0100               	movlb	0	; () banked
 16115  003830  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 16116  003832  EC3F  F022         	call	___x_sample_fifo	;wreg free
 16117                           
 16118                           ;sample.c: 220: diffPrChipSampCh=ADS1X1X_MUX_SINGLE_1;
 16119  003836  0E05               	movlw	5
 16120  003838  0100               	movlb	0	; () banked
 16121  00383A  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;sample.c: 221: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_512);
 16125  00383C  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 16126  003840  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 16127  003844  0E04               	movlw	4
 16128  003846  0100               	movlb	0	; () banked
 16129  003848  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 16130  00384A  ECC8  F04C         	call	_ads1115_set_pga	;wreg free
 16131                           
 16132                           ;sample.c: 222: }else if(diffPrChipSampCh==ADS1X1X_MUX_SINGLE_1){
 16133  00384E  D033               	goto	l16442
 16134  003850                     l16428:
 16135  003850  0E05               	movlw	5
 16136  003852  0100               	movlb	0	; () banked
 16137  003854  19F9               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 16138  003856  A4D8               	btfss	status,2,c
 16139  003858  D022               	goto	l16438
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;sample.c: 223: adc_inPt100=__x_sample_fifo(sampBufDiffPr_S1,t16,4);
 16143  00385A  0ED0               	movlw	low _sampBufDiffPr_S1
 16144  00385C  0100               	movlb	0	; () banked
 16145  00385E  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 16146  003860  0E01               	movlw	high _sampBufDiffPr_S1
 16147  003862  0100               	movlb	0	; () banked
 16148  003864  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 16149  003866  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 16150  00386A  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 16151  00386E  0E04               	movlw	4
 16152  003870  0100               	movlb	0	; () banked
 16153  003872  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 16154  003874  EC3F  F022         	call	___x_sample_fifo	;wreg free
 16155  003878  C07A  F170         	movff	?___x_sample_fifo,_adc_inPt100	;volatile
 16156  00387C  C07B  F171         	movff	?___x_sample_fifo+1,_adc_inPt100+1	;volatile
 16157                           
 16158                           ;sample.c: 224: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 16159  003880  0E00               	movlw	0
 16160  003882  0100               	movlb	0	; () banked
 16161  003884  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 16162                           
 16163                           ; BSR set to: 0
 16164                           ;sample.c: 225: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 16165  003886  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 16166  00388A  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 16167  00388E  0E00               	movlw	0
 16168  003890  0100               	movlb	0	; () banked
 16169  003892  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 16170  003894  ECC8  F04C         	call	_ads1115_set_pga	;wreg free
 16171                           
 16172                           ;sample.c: 226: diffPrChipSampleCount++;
 16173  003898  0100               	movlb	0	; () banked
 16174  00389A  2BFA               	incf	_diffPrChipSampleCount& (0+255),f,b	;volatile
 16175                           
 16176                           ;sample.c: 227: }else{
 16177  00389C  D00C               	goto	l16442
 16178  00389E                     l16438:
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;sample.c: 228: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 16182  00389E  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 16183  0038A2  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 16184  0038A6  0E00               	movlw	0
 16185  0038A8  0100               	movlb	0	; () banked
 16186  0038AA  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 16187  0038AC  ECC8  F04C         	call	_ads1115_set_pga	;wreg free
 16188                           
 16189                           ;sample.c: 229: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 16190  0038B0  0E00               	movlw	0
 16191  0038B2  0100               	movlb	0	; () banked
 16192  0038B4  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 16193  0038B6                     l16442:
 16194                           
 16195                           ;sample.c: 230: }
 16196                           ;sample.c: 231: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 16197  0038B6  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 16198  0038BA  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 16199  0038BE  0E02               	movlw	2
 16200  0038C0  0100               	movlb	0	; () banked
 16201  0038C2  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 16202  0038C4  EC6C  F04C         	call	_ads1115_set_data_rate	;wreg free
 16203                           
 16204                           ;sample.c: 232: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 16205  0038C8  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 16206  0038CC  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 16207  0038D0  C0F9  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 16208  0038D4  ECDA  F04C         	call	_ads1115_set_mux	;wreg free
 16209                           
 16210                           ;sample.c: 233: ads1115_start_conversion(pAds1115DiffPrObj);
 16211  0038D8  C0EE  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 16212  0038DC  C0EF  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 16213  0038E0  EC04  F04C         	call	_ads1115_start_conversion	;wreg free
 16214                           
 16215                           ;sample.c: 234: if(diffPrChipSampleCount>4){
 16216  0038E4  0E04               	movlw	4
 16217  0038E6  0100               	movlb	0	; () banked
 16218  0038E8  65FA               	cpfsgt	_diffPrChipSampleCount& (0+255),b	;volatile
 16219  0038EA  D00E               	goto	l16456
 16220                           
 16221                           ; BSR set to: 0
 16222                           ;sample.c: 235: sample_diff_pr_fliter(&x_prDiffData);
 16223  0038EC  0EE8               	movlw	low _x_prDiffData
 16224  0038EE  0100               	movlb	0	; () banked
 16225  0038F0  6F8F               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 16226  0038F2  0E01               	movlw	high _x_prDiffData
 16227  0038F4  0100               	movlb	0	; () banked
 16228  0038F6  6F90               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 16229  0038F8  EC15  F03E         	call	_sample_diff_pr_fliter	;wreg free
 16230                           
 16231                           ;sample.c: 236: diffPrChipSampleFinish=1;
 16232  0038FC  0E01               	movlw	1
 16233  0038FE  0100               	movlb	0	; () banked
 16234  003900  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;sample.c: 237: diffPrChipSampleCount=0;
 16238  003902  0E00               	movlw	0
 16239  003904  0100               	movlb	0	; () banked
 16240  003906  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 16241  003908                     l16456:
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;sample.c: 238: }
 16245                           ;sample.c: 239: return 1;
 16246  003908  0E01               	movlw	1
 16247  00390A  0012               	return	
 16248  00390C                     __end_of_sample_diff_pr_chip_fast:
 16249                           	opt stack 0
 16250                           tblptru	equ	0xFF8
 16251                           tblptrh	equ	0xFF7
 16252                           tblptrl	equ	0xFF6
 16253                           tablat	equ	0xFF5
 16254                           prodh	equ	0xFF4
 16255                           prodl	equ	0xFF3
 16256                           intcon	equ	0xFF2
 16257                           postinc0	equ	0xFEE
 16258                           wreg	equ	0xFE8
 16259                           indf1	equ	0xFE7
 16260                           postinc1	equ	0xFE6
 16261                           postdec1	equ	0xFE5
 16262                           plusw1	equ	0xFE3
 16263                           fsr1h	equ	0xFE2
 16264                           fsr1l	equ	0xFE1
 16265                           indf2	equ	0xFDF
 16266                           postinc2	equ	0xFDE
 16267                           postdec2	equ	0xFDD
 16268                           plusw2	equ	0xFDB
 16269                           fsr2h	equ	0xFDA
 16270                           fsr2l	equ	0xFD9
 16271                           status	equ	0xFD8
 16272                           
 16273 ;; *************** function _sample_diff_pr_fliter *****************
 16274 ;; Defined at:
 16275 ;;		line 80 in file "src/api/sample.c"
 16276 ;; Parameters:    Size  Location     Type
 16277 ;;  xin             2   47[BANK0 ] PTR struct .
 16278 ;;		 -> x_prDiffData(8), 
 16279 ;; Auto vars:     Size  Location     Type
 16280 ;;		None
 16281 ;; Return value:  Size  Location     Type
 16282 ;;                  1    wreg      unsigned char 
 16283 ;; Registers used:
 16284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16285 ;; Tracked objects:
 16286 ;;		On entry : 0/0
 16287 ;;		On exit  : 0/0
 16288 ;;		Unchanged: 0/0
 16289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16294 ;;Total ram usage:        2 bytes
 16295 ;; Hardware stack levels used:    1
 16296 ;; Hardware stack levels required when called:    6
 16297 ;; This function calls:
 16298 ;;		___x_sample_fliter
 16299 ;; This function is called by:
 16300 ;;		_sample_diff_pr_chip_fast
 16301 ;; This function uses a non-reentrant model
 16302 ;;
 16303                           
 16304                           	psect	text86
 16305  007C2A                     __ptext86:
 16306                           	opt stack 0
 16307  007C2A                     _sample_diff_pr_fliter:
 16308                           	opt stack 21
 16309                           
 16310                           ;sample.c: 82: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,4,4);
 16311                           
 16312                           ;incstack = 0
 16313  007C2A  0EE0               	movlw	low _sampBufDiffPr_D01
 16314  007C2C  0100               	movlb	0	; () banked
 16315  007C2E  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 16316  007C30  0E01               	movlw	high _sampBufDiffPr_D01
 16317  007C32  0100               	movlb	0	; () banked
 16318  007C34  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 16319  007C36  0E04               	movlw	4
 16320  007C38  0100               	movlb	0	; () banked
 16321  007C3A  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 16322  007C3C  0E04               	movlw	4
 16323  007C3E  0100               	movlb	0	; () banked
 16324  007C40  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 16325  007C42  EC84  F014         	call	___x_sample_fliter	;wreg free
 16326  007C46  0100               	movlb	0	; () banked
 16327  007C48  EE20 F006          	lfsr	2,6
 16328  007C4C  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 16329  007C4E  26D9               	addwf	fsr2l,f,c
 16330  007C50  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 16331  007C52  22DA               	addwfc	fsr2h,f,c
 16332  007C54  0100               	movlb	0	; () banked
 16333  007C56  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 16334  007C5A  0100               	movlb	0	; () banked
 16335  007C5C  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 16336                           
 16337                           ;sample.c: 83: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,4,4);
 16338  007C60  0ED8               	movlw	low _sampBufDiffPr_D23
 16339  007C62  0100               	movlb	0	; () banked
 16340  007C64  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 16341  007C66  0E01               	movlw	high _sampBufDiffPr_D23
 16342  007C68  0100               	movlb	0	; () banked
 16343  007C6A  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 16344  007C6C  0E04               	movlw	4
 16345  007C6E  0100               	movlb	0	; () banked
 16346  007C70  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 16347  007C72  0E04               	movlw	4
 16348  007C74  0100               	movlb	0	; () banked
 16349  007C76  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 16350  007C78  EC84  F014         	call	___x_sample_fliter	;wreg free
 16351  007C7C  0100               	movlb	0	; () banked
 16352  007C7E  EE20 F004          	lfsr	2,4
 16353  007C82  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 16354  007C84  26D9               	addwf	fsr2l,f,c
 16355  007C86  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 16356  007C88  22DA               	addwfc	fsr2h,f,c
 16357  007C8A  0100               	movlb	0	; () banked
 16358  007C8C  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 16359  007C90  0100               	movlb	0	; () banked
 16360  007C92  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;sample.c: 84: xin->pValue=0;
 16364  007C96  C08F  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 16365  007C9A  C090  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 16366  007C9E  6ADE               	clrf	postinc2,c
 16367  007CA0  6ADE               	clrf	postinc2,c
 16368  007CA2  6ADE               	clrf	postinc2,c
 16369  007CA4  6ADD               	clrf	postdec2,c
 16370  007CA6  0012               	return	
 16371  007CA8                     __end_of_sample_diff_pr_fliter:
 16372                           	opt stack 0
 16373                           tblptru	equ	0xFF8
 16374                           tblptrh	equ	0xFF7
 16375                           tblptrl	equ	0xFF6
 16376                           tablat	equ	0xFF5
 16377                           prodh	equ	0xFF4
 16378                           prodl	equ	0xFF3
 16379                           intcon	equ	0xFF2
 16380                           postinc0	equ	0xFEE
 16381                           wreg	equ	0xFE8
 16382                           indf1	equ	0xFE7
 16383                           postinc1	equ	0xFE6
 16384                           postdec1	equ	0xFE5
 16385                           plusw1	equ	0xFE3
 16386                           fsr1h	equ	0xFE2
 16387                           fsr1l	equ	0xFE1
 16388                           indf2	equ	0xFDF
 16389                           postinc2	equ	0xFDE
 16390                           postdec2	equ	0xFDD
 16391                           plusw2	equ	0xFDB
 16392                           fsr2h	equ	0xFDA
 16393                           fsr2l	equ	0xFD9
 16394                           status	equ	0xFD8
 16395                           
 16396 ;; *************** function ___x_sample_fliter *****************
 16397 ;; Defined at:
 16398 ;;		line 42 in file "src/api/sample.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;  buf             2   26[BANK0 ] PTR int 
 16401 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 16402 ;;  len             1   28[BANK0 ] unsigned char 
 16403 ;;  loop            1   29[BANK0 ] unsigned char 
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  t32             4   42[BANK0 ] long 
 16406 ;;  min             2   40[BANK0 ] int 
 16407 ;;  max             2   38[BANK0 ] int 
 16408 ;;  i               1   46[BANK0 ] unsigned char 
 16409 ;;  minLoc          1   37[BANK0 ] unsigned char 
 16410 ;;  maxLoc          1   36[BANK0 ] unsigned char 
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  2   26[BANK0 ] int 
 16413 ;; Registers used:
 16414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16421 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;Total ram usage:       21 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:    5
 16427 ;; This function calls:
 16428 ;;		___aldiv
 16429 ;; This function is called by:
 16430 ;;		_sample_diff_pr_fliter
 16431 ;; This function uses a non-reentrant model
 16432 ;;
 16433                           
 16434                           	psect	text87
 16435  002908                     __ptext87:
 16436                           	opt stack 0
 16437  002908                     ___x_sample_fliter:
 16438                           	opt stack 21
 16439                           
 16440                           ;sample.c: 44: int16_t max,min;
 16441                           ;sample.c: 45: uint8_t i,maxLoc,minLoc;
 16442                           ;sample.c: 46: int32_t t32=0;
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;incstack = 0
 16446  002908  0E00               	movlw	0
 16447  00290A  0100               	movlb	0	; () banked
 16448  00290C  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16449  00290E  0E00               	movlw	0
 16450  002910  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16451  002912  0E00               	movlw	0
 16452  002914  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16453  002916  0E00               	movlw	0
 16454  002918  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;sample.c: 47: if(len<3)return 0;
 16458  00291A  0E03               	movlw	3
 16459  00291C  0100               	movlb	0	; () banked
 16460  00291E  617C               	cpfslt	___x_sample_fliter@len& (0+255),b
 16461  002920  D14B               	goto	l14850
 16462                           
 16463                           ; BSR set to: 0
 16464  002922  0E00               	movlw	0
 16465  002924  0100               	movlb	0	; () banked
 16466  002926  6F7B               	movwf	(?___x_sample_fliter+1)& (0+255),b
 16467  002928  0E00               	movlw	0
 16468  00292A  6F7A               	movwf	?___x_sample_fliter& (0+255),b
 16469                           
 16470                           ; BSR set to: 0
 16471  00292C  0012               	return	
 16472  00292E                     l14820:
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;sample.c: 49: min=max=buf[0];
 16476  00292E  C07A  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 16477  002932  C07B  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 16478  002936  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 16479  00293A  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 16480  00293E  C086  F088         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 16481  002942  C087  F089         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;sample.c: 50: t32=0;
 16485  002946  0E00               	movlw	0
 16486  002948  0100               	movlb	0	; () banked
 16487  00294A  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16488  00294C  0E00               	movlw	0
 16489  00294E  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16490  002950  0E00               	movlw	0
 16491  002952  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16492  002954  0E00               	movlw	0
 16493  002956  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16494                           
 16495                           ; BSR set to: 0
 16496                           ;sample.c: 51: for(i=0;i<len;i++){
 16497  002958  0E00               	movlw	0
 16498  00295A  0100               	movlb	0	; () banked
 16499  00295C  6F8E               	movwf	___x_sample_fliter@i& (0+255),b
 16500  00295E  D07F               	goto	l14838
 16501  002960                     l14826:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;sample.c: 52: if(min>buf[i]){min=buf[i];minLoc=i;}
 16505  002960  0100               	movlb	0	; () banked
 16506  002962  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16507  002964  0D02               	mullw	2
 16508  002966  50F3               	movf	prodl,w,c
 16509  002968  0100               	movlb	0	; () banked
 16510  00296A  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16511  00296C  6ED9               	movwf	fsr2l,c
 16512  00296E  50F4               	movf	prodh,w,c
 16513  002970  0100               	movlb	0	; () banked
 16514  002972  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16515  002974  6EDA               	movwf	fsr2h,c
 16516  002976  0100               	movlb	0	; () banked
 16517  002978  5188               	movf	___x_sample_fliter@min& (0+255),w,b
 16518  00297A  5CDE               	subwf	postinc2,w,c
 16519  00297C  50DE               	movf	postinc2,w,c
 16520  00297E  0A80               	xorlw	128
 16521  002980  0100               	movlb	0	; () banked
 16522  002982  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16523  002984  0100               	movlb	0	; () banked
 16524  002986  5189               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 16525  002988  0A80               	xorlw	128
 16526  00298A  0100               	movlb	0	; () banked
 16527  00298C  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 16528  00298E  B0D8               	btfsc	status,0,c
 16529  002990  D011               	goto	l1129
 16530                           
 16531                           ; BSR set to: 0
 16532  002992  0100               	movlb	0	; () banked
 16533  002994  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16534  002996  0D02               	mullw	2
 16535  002998  50F3               	movf	prodl,w,c
 16536  00299A  0100               	movlb	0	; () banked
 16537  00299C  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16538  00299E  6ED9               	movwf	fsr2l,c
 16539  0029A0  50F4               	movf	prodh,w,c
 16540  0029A2  0100               	movlb	0	; () banked
 16541  0029A4  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16542  0029A6  6EDA               	movwf	fsr2h,c
 16543  0029A8  CFDE F088          	movff	postinc2,___x_sample_fliter@min
 16544  0029AC  CFDD F089          	movff	postdec2,___x_sample_fliter@min+1
 16545                           
 16546                           ; BSR set to: 0
 16547  0029B0  C08E  F085         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 16548  0029B4                     l1129:
 16549                           
 16550                           ; BSR set to: 0
 16551                           ;sample.c: 53: if(max<buf[i]){max=buf[i];maxLoc=i;}
 16552  0029B4  0100               	movlb	0	; () banked
 16553  0029B6  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16554  0029B8  0D02               	mullw	2
 16555  0029BA  50F3               	movf	prodl,w,c
 16556  0029BC  0100               	movlb	0	; () banked
 16557  0029BE  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16558  0029C0  6ED9               	movwf	fsr2l,c
 16559  0029C2  50F4               	movf	prodh,w,c
 16560  0029C4  0100               	movlb	0	; () banked
 16561  0029C6  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16562  0029C8  6EDA               	movwf	fsr2h,c
 16563  0029CA  50DE               	movf	postinc2,w,c
 16564  0029CC  0100               	movlb	0	; () banked
 16565  0029CE  5D86               	subwf	___x_sample_fliter@max& (0+255),w,b
 16566  0029D0  0100               	movlb	0	; () banked
 16567  0029D2  5187               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 16568  0029D4  0A80               	xorlw	128
 16569  0029D6  0100               	movlb	0	; () banked
 16570  0029D8  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16571  0029DA  50DE               	movf	postinc2,w,c
 16572  0029DC  0A80               	xorlw	128
 16573  0029DE  0100               	movlb	0	; () banked
 16574  0029E0  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 16575  0029E2  B0D8               	btfsc	status,0,c
 16576  0029E4  D011               	goto	l1130
 16577                           
 16578                           ; BSR set to: 0
 16579  0029E6  0100               	movlb	0	; () banked
 16580  0029E8  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16581  0029EA  0D02               	mullw	2
 16582  0029EC  50F3               	movf	prodl,w,c
 16583  0029EE  0100               	movlb	0	; () banked
 16584  0029F0  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16585  0029F2  6ED9               	movwf	fsr2l,c
 16586  0029F4  50F4               	movf	prodh,w,c
 16587  0029F6  0100               	movlb	0	; () banked
 16588  0029F8  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16589  0029FA  6EDA               	movwf	fsr2h,c
 16590  0029FC  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 16591  002A00  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 16592                           
 16593                           ; BSR set to: 0
 16594  002A04  C08E  F084         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 16595  002A08                     l1130:
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;sample.c: 54: t32+=buf[i];
 16599  002A08  0100               	movlb	0	; () banked
 16600  002A0A  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16601  002A0C  0D02               	mullw	2
 16602  002A0E  50F3               	movf	prodl,w,c
 16603  002A10  0100               	movlb	0	; () banked
 16604  002A12  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16605  002A14  6ED9               	movwf	fsr2l,c
 16606  002A16  50F4               	movf	prodh,w,c
 16607  002A18  0100               	movlb	0	; () banked
 16608  002A1A  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16609  002A1C  6EDA               	movwf	fsr2h,c
 16610  002A1E  CFDE F07E          	movff	postinc2,??___x_sample_fliter
 16611  002A22  CFDD F07F          	movff	postdec2,??___x_sample_fliter+1
 16612  002A26  C07E  F080         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 16613  002A2A  C07F  F081         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 16614  002A2E  0E00               	movlw	0
 16615  002A30  0100               	movlb	0	; () banked
 16616  002A32  BF81               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 16617  002A34  0EFF               	movlw	255
 16618  002A36  6F82               	movwf	(??___x_sample_fliter+4)& (0+255),b
 16619  002A38  6F83               	movwf	(??___x_sample_fliter+5)& (0+255),b
 16620  002A3A  0100               	movlb	0	; () banked
 16621  002A3C  5180               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 16622  002A3E  0100               	movlb	0	; () banked
 16623  002A40  278A               	addwf	___x_sample_fliter@t32& (0+255),f,b
 16624  002A42  0100               	movlb	0	; () banked
 16625  002A44  5181               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 16626  002A46  0100               	movlb	0	; () banked
 16627  002A48  238B               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 16628  002A4A  0100               	movlb	0	; () banked
 16629  002A4C  5182               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 16630  002A4E  0100               	movlb	0	; () banked
 16631  002A50  238C               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 16632  002A52  0100               	movlb	0	; () banked
 16633  002A54  5183               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 16634  002A56  0100               	movlb	0	; () banked
 16635  002A58  238D               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 16636                           
 16637                           ; BSR set to: 0
 16638  002A5A  0100               	movlb	0	; () banked
 16639  002A5C  2B8E               	incf	___x_sample_fliter@i& (0+255),f,b
 16640  002A5E                     l14838:
 16641                           
 16642                           ; BSR set to: 0
 16643  002A5E  0100               	movlb	0	; () banked
 16644  002A60  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16645  002A62  0100               	movlb	0	; () banked
 16646  002A64  5D8E               	subwf	___x_sample_fliter@i& (0+255),w,b
 16647  002A66  A0D8               	btfss	status,0,c
 16648  002A68  D77B               	goto	l14826
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;sample.c: 55: }
 16652                           ;sample.c: 57: t32=t32-(int32_t)max;
 16653                           
 16654                           ; BSR set to: 0
 16655  002A6A  C086  F07E         	movff	___x_sample_fliter@max,??___x_sample_fliter
 16656  002A6E  C087  F07F         	movff	___x_sample_fliter@max+1,??___x_sample_fliter+1
 16657  002A72  0E00               	movlw	0
 16658  002A74  0100               	movlb	0	; () banked
 16659  002A76  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16660  002A78  0EFF               	movlw	255
 16661  002A7A  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16662  002A7C  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16663  002A7E  0100               	movlb	0	; () banked
 16664  002A80  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16665  002A82  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16666  002A84  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16667  002A86  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16668  002A88  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16669  002A8A  0E00               	movlw	0
 16670  002A8C  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16671  002A8E  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16672  002A90  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16673  002A92  0100               	movlb	0	; () banked
 16674  002A94  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16675  002A96  0100               	movlb	0	; () banked
 16676  002A98  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16677  002A9A  0100               	movlb	0	; () banked
 16678  002A9C  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16679  002A9E  0100               	movlb	0	; () banked
 16680  002AA0  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16681  002AA2  0100               	movlb	0	; () banked
 16682  002AA4  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16683  002AA6  0100               	movlb	0	; () banked
 16684  002AA8  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16685  002AAA  0100               	movlb	0	; () banked
 16686  002AAC  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16687  002AAE  0100               	movlb	0	; () banked
 16688  002AB0  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16689  002AB2  0100               	movlb	0	; () banked
 16690  002AB4  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16691  002AB6  0100               	movlb	0	; () banked
 16692  002AB8  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16693  002ABA  0100               	movlb	0	; () banked
 16694  002ABC  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16695  002ABE  0100               	movlb	0	; () banked
 16696  002AC0  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16697                           
 16698                           ;sample.c: 58: t32=t32-(int32_t)min;
 16699  002AC2  C088  F07E         	movff	___x_sample_fliter@min,??___x_sample_fliter
 16700  002AC6  C089  F07F         	movff	___x_sample_fliter@min+1,??___x_sample_fliter+1
 16701  002ACA  0E00               	movlw	0
 16702  002ACC  0100               	movlb	0	; () banked
 16703  002ACE  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16704  002AD0  0EFF               	movlw	255
 16705  002AD2  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16706  002AD4  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16707  002AD6  0100               	movlb	0	; () banked
 16708  002AD8  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16709  002ADA  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16710  002ADC  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16711  002ADE  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16712  002AE0  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16713  002AE2  0E00               	movlw	0
 16714  002AE4  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16715  002AE6  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16716  002AE8  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16717  002AEA  0100               	movlb	0	; () banked
 16718  002AEC  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16719  002AEE  0100               	movlb	0	; () banked
 16720  002AF0  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16721  002AF2  0100               	movlb	0	; () banked
 16722  002AF4  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16723  002AF6  0100               	movlb	0	; () banked
 16724  002AF8  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16725  002AFA  0100               	movlb	0	; () banked
 16726  002AFC  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16727  002AFE  0100               	movlb	0	; () banked
 16728  002B00  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16729  002B02  0100               	movlb	0	; () banked
 16730  002B04  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16731  002B06  0100               	movlb	0	; () banked
 16732  002B08  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16733  002B0A  0100               	movlb	0	; () banked
 16734  002B0C  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16735  002B0E  0100               	movlb	0	; () banked
 16736  002B10  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16737  002B12  0100               	movlb	0	; () banked
 16738  002B14  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16739  002B16  0100               	movlb	0	; () banked
 16740  002B18  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;sample.c: 59: t32=t32/(len-2);
 16744  002B1A  C08A  F06C         	movff	___x_sample_fliter@t32,___aldiv@dividend
 16745  002B1E  C08B  F06D         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 16746  002B22  C08C  F06E         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 16747  002B26  C08D  F06F         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 16748  002B2A  0EFE               	movlw	254
 16749  002B2C  0100               	movlb	0	; () banked
 16750  002B2E  6F7E               	movwf	??___x_sample_fliter& (0+255),b
 16751  002B30  0EFF               	movlw	255
 16752  002B32  0100               	movlb	0	; () banked
 16753  002B34  6F7F               	movwf	(??___x_sample_fliter+1)& (0+255),b
 16754  002B36  0100               	movlb	0	; () banked
 16755  002B38  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16756  002B3A  0100               	movlb	0	; () banked
 16757  002B3C  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16758  002B3E  6B81               	clrf	(??___x_sample_fliter+3)& (0+255),b
 16759  002B40  0100               	movlb	0	; () banked
 16760  002B42  517E               	movf	??___x_sample_fliter& (0+255),w,b
 16761  002B44  0100               	movlb	0	; () banked
 16762  002B46  2780               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 16763  002B48  0100               	movlb	0	; () banked
 16764  002B4A  517F               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 16765  002B4C  0100               	movlb	0	; () banked
 16766  002B4E  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16767  002B50  C080  F070         	movff	??___x_sample_fliter+2,___aldiv@divisor
 16768  002B54  C081  F071         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 16769  002B58  0100               	movlb	0	; () banked
 16770  002B5A  0E00               	movlw	0
 16771  002B5C  BF71               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 16772  002B5E  0EFF               	movlw	-1
 16773  002B60  6F72               	movwf	(___aldiv@divisor+2)& (0+255),b
 16774  002B62  6F73               	movwf	(___aldiv@divisor+3)& (0+255),b
 16775  002B64  EC3C  F029         	call	___aldiv	;wreg free
 16776  002B68  C06C  F08A         	movff	?___aldiv,___x_sample_fliter@t32
 16777  002B6C  C06D  F08B         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 16778  002B70  C06E  F08C         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 16779  002B74  C06F  F08D         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 16780                           
 16781                           ;sample.c: 60: buf[minLoc]=(int16_t)t32;
 16782  002B78  0100               	movlb	0	; () banked
 16783  002B7A  5185               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 16784  002B7C  0D02               	mullw	2
 16785  002B7E  50F3               	movf	prodl,w,c
 16786  002B80  0100               	movlb	0	; () banked
 16787  002B82  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16788  002B84  6ED9               	movwf	fsr2l,c
 16789  002B86  50F4               	movf	prodh,w,c
 16790  002B88  0100               	movlb	0	; () banked
 16791  002B8A  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16792  002B8C  6EDA               	movwf	fsr2h,c
 16793  002B8E  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16794  002B92  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;sample.c: 61: buf[maxLoc]=(int16_t)t32;
 16798  002B96  0100               	movlb	0	; () banked
 16799  002B98  5184               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 16800  002B9A  0D02               	mullw	2
 16801  002B9C  50F3               	movf	prodl,w,c
 16802  002B9E  0100               	movlb	0	; () banked
 16803  002BA0  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16804  002BA2  6ED9               	movwf	fsr2l,c
 16805  002BA4  50F4               	movf	prodh,w,c
 16806  002BA6  0100               	movlb	0	; () banked
 16807  002BA8  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16808  002BAA  6EDA               	movwf	fsr2h,c
 16809  002BAC  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16810  002BB0  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;sample.c: 62: loop--;
 16814  002BB4  0100               	movlb	0	; () banked
 16815  002BB6  077D               	decf	___x_sample_fliter@loop& (0+255),f,b
 16816  002BB8                     l14850:
 16817                           
 16818                           ; BSR set to: 0
 16819  002BB8  0100               	movlb	0	; () banked
 16820  002BBA  517D               	movf	___x_sample_fliter@loop& (0+255),w,b
 16821  002BBC  0100               	movlb	0	; () banked
 16822  002BBE  A4D8               	btfss	status,2,c
 16823  002BC0  D6B6               	goto	l14820
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;sample.c: 63: }
 16827                           ;sample.c: 64: return (int16_t)t32;
 16828  002BC2  C08A  F07A         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 16829  002BC6  C08B  F07B         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 16830                           
 16831                           ; BSR set to: 0
 16832  002BCA  0012               	return		;funcret
 16833  002BCC                     __end_of___x_sample_fliter:
 16834                           	opt stack 0
 16835                           tblptru	equ	0xFF8
 16836                           tblptrh	equ	0xFF7
 16837                           tblptrl	equ	0xFF6
 16838                           tablat	equ	0xFF5
 16839                           prodh	equ	0xFF4
 16840                           prodl	equ	0xFF3
 16841                           intcon	equ	0xFF2
 16842                           postinc0	equ	0xFEE
 16843                           wreg	equ	0xFE8
 16844                           indf1	equ	0xFE7
 16845                           postinc1	equ	0xFE6
 16846                           postdec1	equ	0xFE5
 16847                           plusw1	equ	0xFE3
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           postdec2	equ	0xFDD
 16853                           plusw2	equ	0xFDB
 16854                           fsr2h	equ	0xFDA
 16855                           fsr2l	equ	0xFD9
 16856                           status	equ	0xFD8
 16857                           
 16858 ;; *************** function _ads1115_start_conversion *****************
 16859 ;; Defined at:
 16860 ;;		line 122 in file "src/driver/ads1115.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;  pAds1115        2   11[BANK0 ] PTR struct .
 16863 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;		None
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      void 
 16868 ;; Registers used:
 16869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16870 ;; Tracked objects:
 16871 ;;		On entry : 0/0
 16872 ;;		On exit  : 0/0
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;Total ram usage:        2 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:    9
 16882 ;; This function calls:
 16883 ;;		_ads1115_write_reg
 16884 ;; This function is called by:
 16885 ;;		_sample_diff_pr_chip_fast
 16886 ;;		_sample_pr_chip_fast
 16887 ;; This function uses a non-reentrant model
 16888 ;;
 16889                           
 16890                           	psect	text88
 16891  009808                     __ptext88:
 16892                           	opt stack 0
 16893  009808                     _ads1115_start_conversion:
 16894                           	opt stack 18
 16895                           
 16896                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;incstack = 0
 16900  009808  C06B  F066         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 16901  00980C  C06C  F067         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 16902  009810  0E01               	movlw	1
 16903  009812  0100               	movlb	0	; () banked
 16904  009814  6F68               	movwf	ads1115_write_reg@addr& (0+255),b
 16905  009816  0100               	movlb	0	; () banked
 16906  009818  EE20 F002          	lfsr	2,2
 16907  00981C  516B               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 16908  00981E  26D9               	addwf	fsr2l,f,c
 16909  009820  516C               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 16910  009822  22DA               	addwfc	fsr2h,f,c
 16911  009824  CFDE F069          	movff	postinc2,ads1115_write_reg@value
 16912  009828  CFDD F06A          	movff	postdec2,ads1115_write_reg@value+1
 16913  00982C  ECEB  F02D         	call	_ads1115_write_reg	;wreg free
 16914  009830  0012               	return		;funcret
 16915  009832                     __end_of_ads1115_start_conversion:
 16916                           	opt stack 0
 16917                           tblptru	equ	0xFF8
 16918                           tblptrh	equ	0xFF7
 16919                           tblptrl	equ	0xFF6
 16920                           tablat	equ	0xFF5
 16921                           prodh	equ	0xFF4
 16922                           prodl	equ	0xFF3
 16923                           intcon	equ	0xFF2
 16924                           postinc0	equ	0xFEE
 16925                           wreg	equ	0xFE8
 16926                           indf1	equ	0xFE7
 16927                           postinc1	equ	0xFE6
 16928                           postdec1	equ	0xFE5
 16929                           plusw1	equ	0xFE3
 16930                           fsr1h	equ	0xFE2
 16931                           fsr1l	equ	0xFE1
 16932                           indf2	equ	0xFDF
 16933                           postinc2	equ	0xFDE
 16934                           postdec2	equ	0xFDD
 16935                           plusw2	equ	0xFDB
 16936                           fsr2h	equ	0xFDA
 16937                           fsr2l	equ	0xFD9
 16938                           status	equ	0xFD8
 16939                           
 16940 ;; *************** function _ads1115_write_reg *****************
 16941 ;; Defined at:
 16942 ;;		line 17 in file "src/driver/ads1115.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;  pAds1115        2    6[BANK0 ] PTR struct .
 16945 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16946 ;;  addr            1    8[BANK0 ] unsigned char 
 16947 ;;  value           2    9[BANK0 ] unsigned int 
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;		None
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  1    wreg      void 
 16952 ;; Registers used:
 16953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16954 ;; Tracked objects:
 16955 ;;		On entry : 0/0
 16956 ;;		On exit  : 0/0
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16959 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16962 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16963 ;;Total ram usage:        5 bytes
 16964 ;; Hardware stack levels used:    1
 16965 ;; Hardware stack levels required when called:    8
 16966 ;; This function calls:
 16967 ;;		_iic_send_byte
 16968 ;;		_iic_start
 16969 ;;		_iic_stop
 16970 ;; This function is called by:
 16971 ;;		_ads1115_start_conversion
 16972 ;;		_ads1115_set_threshold_lo
 16973 ;;		_ads1115_set_threshold_hi
 16974 ;; This function uses a non-reentrant model
 16975 ;;
 16976                           
 16977                           	psect	text89
 16978  005BD6                     __ptext89:
 16979                           	opt stack 0
 16980  005BD6                     _ads1115_write_reg:
 16981                           	opt stack 18
 16982                           
 16983                           ;ads1115.c: 19: pAds1115->iic_start();
 16984                           
 16985                           ;incstack = 0
 16986  005BD6  0100               	movlb	0	; () banked
 16987  005BD8  EE20 F006          	lfsr	2,6
 16988  005BDC  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16989  005BDE  26D9               	addwf	fsr2l,f,c
 16990  005BE0  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16991  005BE2  22DA               	addwfc	fsr2h,f,c
 16992  005BE4  D801               	call	u13928
 16993  005BE6  D00A               	goto	u13929
 16994  005BE8                     u13928:
 16995  005BE8  0005               	push	
 16996  005BEA  6EFA               	movwf	pclath,c
 16997  005BEC  50DE               	movf	postinc2,w,c
 16998  005BEE  6EFD               	movwf	tosl,c
 16999  005BF0  50DE               	movf	postinc2,w,c
 17000  005BF2  6EFE               	movwf	tosh,c
 17001  005BF4  50F8               	movf	tblptru,w,c
 17002  005BF6  6EFF               	movwf	tosu,c
 17003  005BF8  50FA               	movf	pclath,w,c
 17004  005BFA  0012               	return		;indir
 17005  005BFC                     u13929:
 17006                           
 17007                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 17008  005BFC  0100               	movlb	0	; () banked
 17009  005BFE  EE20 F00A          	lfsr	2,10
 17010  005C02  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17011  005C04  26D9               	addwf	fsr2l,f,c
 17012  005C06  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17013  005C08  22DA               	addwfc	fsr2h,f,c
 17014  005C0A  D801               	call	u13938
 17015  005C0C  D012               	goto	u13939
 17016  005C0E                     u13938:
 17017  005C0E  0005               	push	
 17018  005C10  6EFA               	movwf	pclath,c
 17019  005C12  50DE               	movf	postinc2,w,c
 17020  005C14  6EFD               	movwf	tosl,c
 17021  005C16  50DE               	movf	postinc2,w,c
 17022  005C18  6EFE               	movwf	tosh,c
 17023  005C1A  50F8               	movf	tblptru,w,c
 17024  005C1C  6EFF               	movwf	tosu,c
 17025  005C1E  50FA               	movf	pclath,w,c
 17026  005C20  0100               	movlb	0	; () banked
 17027  005C22  EE20 F001          	lfsr	2,1
 17028  005C26  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17029  005C28  26D9               	addwf	fsr2l,f,c
 17030  005C2A  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17031  005C2C  22DA               	addwfc	fsr2h,f,c
 17032  005C2E  50DF               	movf	indf2,w,c
 17033  005C30  0012               	return		;indir
 17034  005C32                     u13939:
 17035                           
 17036                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 17037  005C32  0100               	movlb	0	; () banked
 17038  005C34  EE20 F00A          	lfsr	2,10
 17039  005C38  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17040  005C3A  26D9               	addwf	fsr2l,f,c
 17041  005C3C  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17042  005C3E  22DA               	addwfc	fsr2h,f,c
 17043  005C40  D801               	call	u13948
 17044  005C42  D00C               	goto	u13949
 17045  005C44                     u13948:
 17046  005C44  0005               	push	
 17047  005C46  6EFA               	movwf	pclath,c
 17048  005C48  50DE               	movf	postinc2,w,c
 17049  005C4A  6EFD               	movwf	tosl,c
 17050  005C4C  50DE               	movf	postinc2,w,c
 17051  005C4E  6EFE               	movwf	tosh,c
 17052  005C50  50F8               	movf	tblptru,w,c
 17053  005C52  6EFF               	movwf	tosu,c
 17054  005C54  50FA               	movf	pclath,w,c
 17055  005C56  0100               	movlb	0	; () banked
 17056  005C58  5168               	movf	ads1115_write_reg@addr& (0+255),w,b
 17057  005C5A  0012               	return		;indir
 17058  005C5C                     u13949:
 17059                           
 17060                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 17061  005C5C  0100               	movlb	0	; () banked
 17062  005C5E  EE20 F00A          	lfsr	2,10
 17063  005C62  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17064  005C64  26D9               	addwf	fsr2l,f,c
 17065  005C66  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17066  005C68  22DA               	addwfc	fsr2h,f,c
 17067  005C6A  D801               	call	u13958
 17068  005C6C  D00C               	goto	u13959
 17069  005C6E                     u13958:
 17070  005C6E  0005               	push	
 17071  005C70  6EFA               	movwf	pclath,c
 17072  005C72  50DE               	movf	postinc2,w,c
 17073  005C74  6EFD               	movwf	tosl,c
 17074  005C76  50DE               	movf	postinc2,w,c
 17075  005C78  6EFE               	movwf	tosh,c
 17076  005C7A  50F8               	movf	tblptru,w,c
 17077  005C7C  6EFF               	movwf	tosu,c
 17078  005C7E  50FA               	movf	pclath,w,c
 17079  005C80  0100               	movlb	0	; () banked
 17080  005C82  516A               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 17081  005C84  0012               	return		;indir
 17082  005C86                     u13959:
 17083                           
 17084                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 17085  005C86  0100               	movlb	0	; () banked
 17086  005C88  EE20 F00A          	lfsr	2,10
 17087  005C8C  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17088  005C8E  26D9               	addwf	fsr2l,f,c
 17089  005C90  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17090  005C92  22DA               	addwfc	fsr2h,f,c
 17091  005C94  D801               	call	u13968
 17092  005C96  D00C               	goto	u13969
 17093  005C98                     u13968:
 17094  005C98  0005               	push	
 17095  005C9A  6EFA               	movwf	pclath,c
 17096  005C9C  50DE               	movf	postinc2,w,c
 17097  005C9E  6EFD               	movwf	tosl,c
 17098  005CA0  50DE               	movf	postinc2,w,c
 17099  005CA2  6EFE               	movwf	tosh,c
 17100  005CA4  50F8               	movf	tblptru,w,c
 17101  005CA6  6EFF               	movwf	tosu,c
 17102  005CA8  50FA               	movf	pclath,w,c
 17103  005CAA  0100               	movlb	0	; () banked
 17104  005CAC  5169               	movf	ads1115_write_reg@value& (0+255),w,b
 17105  005CAE  0012               	return		;indir
 17106  005CB0                     u13969:
 17107                           
 17108                           ;ads1115.c: 26: pAds1115->iic_stop();
 17109  005CB0  0100               	movlb	0	; () banked
 17110  005CB2  EE20 F008          	lfsr	2,8
 17111  005CB6  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 17112  005CB8  26D9               	addwf	fsr2l,f,c
 17113  005CBA  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 17114  005CBC  22DA               	addwfc	fsr2h,f,c
 17115  005CBE  D801               	call	u13978
 17116  005CC0  0012               	return	
 17117  005CC2                     u13978:
 17118  005CC2  0005               	push	
 17119  005CC4  6EFA               	movwf	pclath,c
 17120  005CC6  50DE               	movf	postinc2,w,c
 17121  005CC8  6EFD               	movwf	tosl,c
 17122  005CCA  50DE               	movf	postinc2,w,c
 17123  005CCC  6EFE               	movwf	tosh,c
 17124  005CCE  50F8               	movf	tblptru,w,c
 17125  005CD0  6EFF               	movwf	tosu,c
 17126  005CD2  50FA               	movf	pclath,w,c
 17127  005CD4  0012               	return		;indir
 17128  005CD6                     __end_of_ads1115_write_reg:
 17129                           	opt stack 0
 17130                           tosu	equ	0xFFF
 17131                           tosh	equ	0xFFE
 17132                           tosl	equ	0xFFD
 17133                           pclath	equ	0xFFA
 17134                           tblptru	equ	0xFF8
 17135                           tblptrh	equ	0xFF7
 17136                           tblptrl	equ	0xFF6
 17137                           tablat	equ	0xFF5
 17138                           prodh	equ	0xFF4
 17139                           prodl	equ	0xFF3
 17140                           intcon	equ	0xFF2
 17141                           postinc0	equ	0xFEE
 17142                           wreg	equ	0xFE8
 17143                           indf1	equ	0xFE7
 17144                           postinc1	equ	0xFE6
 17145                           postdec1	equ	0xFE5
 17146                           plusw1	equ	0xFE3
 17147                           fsr1h	equ	0xFE2
 17148                           fsr1l	equ	0xFE1
 17149                           indf2	equ	0xFDF
 17150                           postinc2	equ	0xFDE
 17151                           postdec2	equ	0xFDD
 17152                           plusw2	equ	0xFDB
 17153                           fsr2h	equ	0xFDA
 17154                           fsr2l	equ	0xFD9
 17155                           status	equ	0xFD8
 17156                           
 17157 ;; *************** function _ads1115_set_pga *****************
 17158 ;; Defined at:
 17159 ;;		line 59 in file "src/driver/ads1115.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 17162 ;;		 -> ads1115Chip1(16), NULL(0), 
 17163 ;;  pga             1    2[BANK0 ] enum E6987
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;		None
 17166 ;; Return value:  Size  Location     Type
 17167 ;;                  1    wreg      void 
 17168 ;; Registers used:
 17169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17170 ;; Tracked objects:
 17171 ;;		On entry : 0/0
 17172 ;;		On exit  : 0/0
 17173 ;;		Unchanged: 0/0
 17174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17178 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17179 ;;Total ram usage:        4 bytes
 17180 ;; Hardware stack levels used:    1
 17181 ;; Hardware stack levels required when called:    4
 17182 ;; This function calls:
 17183 ;;		Nothing
 17184 ;; This function is called by:
 17185 ;;		_sample_diff_pr_chip_fast
 17186 ;; This function uses a non-reentrant model
 17187 ;;
 17188                           
 17189                           	psect	text90
 17190  009990                     __ptext90:
 17191                           	opt stack 0
 17192  009990                     _ads1115_set_pga:
 17193                           	opt stack 23
 17194                           
 17195                           ;ads1115.c: 61: pAds1115->config.bits.PGA=pga;
 17196                           
 17197                           ;incstack = 0
 17198  009990  C062  F020         	movff	ads1115_set_pga@pga,??_ads1115_set_pga
 17199  009994  0100               	movlb	0	; () banked
 17200  009996  EE20 F003          	lfsr	2,3
 17201  00999A  5160               	movf	ads1115_set_pga@pAds1115& (0+255),w,b
 17202  00999C  26D9               	addwf	fsr2l,f,c
 17203  00999E  5161               	movf	(ads1115_set_pga@pAds1115+1)& (0+255),w,b
 17204  0099A0  22DA               	addwfc	fsr2h,f,c
 17205  0099A2  4620               	rlncf	??_ads1115_set_pga,f,c
 17206  0099A4  0100               	movlb	0	; () banked
 17207  0099A6  50DF               	movf	223,w,c
 17208  0099A8  1820               	xorwf	??_ads1115_set_pga,w,c
 17209  0099AA  0BF1               	andlw	-15
 17210  0099AC  1820               	xorwf	??_ads1115_set_pga,w,c
 17211  0099AE  0100               	movlb	0	; () banked
 17212  0099B0  6EDF               	movwf	223,c
 17213                           
 17214                           ; BSR set to: 0
 17215  0099B2  0012               	return		;funcret
 17216  0099B4                     __end_of_ads1115_set_pga:
 17217                           	opt stack 0
 17218                           tosu	equ	0xFFF
 17219                           tosh	equ	0xFFE
 17220                           tosl	equ	0xFFD
 17221                           pclath	equ	0xFFA
 17222                           tblptru	equ	0xFF8
 17223                           tblptrh	equ	0xFF7
 17224                           tblptrl	equ	0xFF6
 17225                           tablat	equ	0xFF5
 17226                           prodh	equ	0xFF4
 17227                           prodl	equ	0xFF3
 17228                           intcon	equ	0xFF2
 17229                           postinc0	equ	0xFEE
 17230                           wreg	equ	0xFE8
 17231                           indf1	equ	0xFE7
 17232                           postinc1	equ	0xFE6
 17233                           postdec1	equ	0xFE5
 17234                           plusw1	equ	0xFE3
 17235                           fsr1h	equ	0xFE2
 17236                           fsr1l	equ	0xFE1
 17237                           indf2	equ	0xFDF
 17238                           postinc2	equ	0xFDE
 17239                           postdec2	equ	0xFDD
 17240                           plusw2	equ	0xFDB
 17241                           fsr2h	equ	0xFDA
 17242                           fsr2l	equ	0xFD9
 17243                           status	equ	0xFD8
 17244                           
 17245 ;; *************** function _ads1115_set_mux *****************
 17246 ;; Defined at:
 17247 ;;		line 54 in file "src/driver/ads1115.c"
 17248 ;; Parameters:    Size  Location     Type
 17249 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 17250 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 17251 ;;  mux             1    2[BANK0 ] enum E6976
 17252 ;; Auto vars:     Size  Location     Type
 17253 ;;		None
 17254 ;; Return value:  Size  Location     Type
 17255 ;;                  1    wreg      void 
 17256 ;; Registers used:
 17257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17258 ;; Tracked objects:
 17259 ;;		On entry : 0/0
 17260 ;;		On exit  : 0/0
 17261 ;;		Unchanged: 0/0
 17262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17263 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17266 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;Total ram usage:        4 bytes
 17268 ;; Hardware stack levels used:    1
 17269 ;; Hardware stack levels required when called:    4
 17270 ;; This function calls:
 17271 ;;		Nothing
 17272 ;; This function is called by:
 17273 ;;		_sample_diff_pr_chip_fast
 17274 ;;		_sample_pr_chip_fast
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           	psect	text91
 17279  0099B4                     __ptext91:
 17280                           	opt stack 0
 17281  0099B4                     _ads1115_set_mux:
 17282                           	opt stack 23
 17283                           
 17284                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 17285                           
 17286                           ; BSR set to: 0
 17287                           ;incstack = 0
 17288  0099B4  C062  F020         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 17289  0099B8  0100               	movlb	0	; () banked
 17290  0099BA  EE20 F003          	lfsr	2,3
 17291  0099BE  5160               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 17292  0099C0  26D9               	addwf	fsr2l,f,c
 17293  0099C2  5161               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 17294  0099C4  22DA               	addwfc	fsr2h,f,c
 17295  0099C6  3A20               	swapf	??_ads1115_set_mux,f,c
 17296  0099C8  0100               	movlb	0	; () banked
 17297  0099CA  50DF               	movf	223,w,c
 17298  0099CC  1820               	xorwf	??_ads1115_set_mux,w,c
 17299  0099CE  0B8F               	andlw	-113
 17300  0099D0  1820               	xorwf	??_ads1115_set_mux,w,c
 17301  0099D2  0100               	movlb	0	; () banked
 17302  0099D4  6EDF               	movwf	223,c
 17303                           
 17304                           ; BSR set to: 0
 17305  0099D6  0012               	return		;funcret
 17306  0099D8                     __end_of_ads1115_set_mux:
 17307                           	opt stack 0
 17308                           tosu	equ	0xFFF
 17309                           tosh	equ	0xFFE
 17310                           tosl	equ	0xFFD
 17311                           pclath	equ	0xFFA
 17312                           tblptru	equ	0xFF8
 17313                           tblptrh	equ	0xFF7
 17314                           tblptrl	equ	0xFF6
 17315                           tablat	equ	0xFF5
 17316                           prodh	equ	0xFF4
 17317                           prodl	equ	0xFF3
 17318                           intcon	equ	0xFF2
 17319                           postinc0	equ	0xFEE
 17320                           wreg	equ	0xFE8
 17321                           indf1	equ	0xFE7
 17322                           postinc1	equ	0xFE6
 17323                           postdec1	equ	0xFE5
 17324                           plusw1	equ	0xFE3
 17325                           fsr1h	equ	0xFE2
 17326                           fsr1l	equ	0xFE1
 17327                           indf2	equ	0xFDF
 17328                           postinc2	equ	0xFDE
 17329                           postdec2	equ	0xFDD
 17330                           plusw2	equ	0xFDB
 17331                           fsr2h	equ	0xFDA
 17332                           fsr2l	equ	0xFD9
 17333                           status	equ	0xFD8
 17334                           
 17335 ;; *************** function _ads1115_set_data_rate *****************
 17336 ;; Defined at:
 17337 ;;		line 69 in file "src/driver/ads1115.c"
 17338 ;; Parameters:    Size  Location     Type
 17339 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 17340 ;;		 -> ads1115Chip1(16), NULL(0), 
 17341 ;;  dr              1    2[BANK0 ] enum E7001
 17342 ;; Auto vars:     Size  Location     Type
 17343 ;;		None
 17344 ;; Return value:  Size  Location     Type
 17345 ;;                  1    wreg      void 
 17346 ;; Registers used:
 17347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17348 ;; Tracked objects:
 17349 ;;		On entry : 0/0
 17350 ;;		On exit  : 0/0
 17351 ;;		Unchanged: 0/0
 17352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17353 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17357 ;;Total ram usage:        4 bytes
 17358 ;; Hardware stack levels used:    1
 17359 ;; Hardware stack levels required when called:    4
 17360 ;; This function calls:
 17361 ;;		Nothing
 17362 ;; This function is called by:
 17363 ;;		_sample_diff_pr_chip_fast
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           	psect	text92
 17368  0098D8                     __ptext92:
 17369                           	opt stack 0
 17370  0098D8                     _ads1115_set_data_rate:
 17371                           	opt stack 23
 17372                           
 17373                           ;ads1115.c: 71: pAds1115->config.bits.DR=dr;
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;incstack = 0
 17377  0098D8  C062  F020         	movff	ads1115_set_data_rate@dr,??_ads1115_set_data_rate
 17378  0098DC  0100               	movlb	0	; () banked
 17379  0098DE  EE20 F002          	lfsr	2,2
 17380  0098E2  5160               	movf	ads1115_set_data_rate@pAds1115& (0+255),w,b
 17381  0098E4  26D9               	addwf	fsr2l,f,c
 17382  0098E6  5161               	movf	(ads1115_set_data_rate@pAds1115+1)& (0+255),w,b
 17383  0098E8  22DA               	addwfc	fsr2h,f,c
 17384  0098EA  3A20               	swapf	??_ads1115_set_data_rate,f,c
 17385  0098EC  4620               	rlncf	??_ads1115_set_data_rate,f,c
 17386  0098EE  0100               	movlb	0	; () banked
 17387  0098F0  50DF               	movf	223,w,c
 17388  0098F2  1820               	xorwf	??_ads1115_set_data_rate,w,c
 17389  0098F4  0B1F               	andlw	-225
 17390  0098F6  1820               	xorwf	??_ads1115_set_data_rate,w,c
 17391  0098F8  0100               	movlb	0	; () banked
 17392  0098FA  6EDF               	movwf	223,c
 17393                           
 17394                           ; BSR set to: 0
 17395  0098FC  0012               	return		;funcret
 17396  0098FE                     __end_of_ads1115_set_data_rate:
 17397                           	opt stack 0
 17398                           tosu	equ	0xFFF
 17399                           tosh	equ	0xFFE
 17400                           tosl	equ	0xFFD
 17401                           pclath	equ	0xFFA
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           postinc0	equ	0xFEE
 17410                           wreg	equ	0xFE8
 17411                           indf1	equ	0xFE7
 17412                           postinc1	equ	0xFE6
 17413                           postdec1	equ	0xFE5
 17414                           plusw1	equ	0xFE3
 17415                           fsr1h	equ	0xFE2
 17416                           fsr1l	equ	0xFE1
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _ads1115_read_conversion *****************
 17426 ;; Defined at:
 17427 ;;		line 127 in file "src/driver/ads1115.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;  pAds1115        2   14[BANK0 ] PTR struct .
 17430 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;  result          2   17[BANK0 ] unsigned int 
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  2   14[BANK0 ] unsigned int 
 17435 ;; Registers used:
 17436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17445 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17446 ;;Total ram usage:        5 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    9
 17449 ;; This function calls:
 17450 ;;		_ads1115_read_reg
 17451 ;; This function is called by:
 17452 ;;		_sample_diff_pr_chip_fast
 17453 ;;		_sample_pr_chip_fast
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text93
 17458  0090CE                     __ptext93:
 17459                           	opt stack 0
 17460  0090CE                     _ads1115_read_conversion:
 17461                           	opt stack 18
 17462                           
 17463                           ;ads1115.c: 129: uint16_t result;
 17464                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;incstack = 0
 17468  0090CE  C06E  F068         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 17469  0090D2  C06F  F069         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 17470  0090D6  0E00               	movlw	0
 17471  0090D8  0100               	movlb	0	; () banked
 17472  0090DA  6F6A               	movwf	ads1115_read_reg@addr& (0+255),b
 17473  0090DC  EC4F  F01E         	call	_ads1115_read_reg
 17474  0090E0  C068  F071         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 17475  0090E4  C069  F072         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 17476                           
 17477                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 17478  0090E8  C06E  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 17479  0090EC  C06F  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 17480  0090F0  0E03               	movlw	3
 17481  0090F2  60DF               	cpfslt	indf2,c
 17482  0090F4  D00A               	goto	l15496
 17483                           
 17484                           ;ads1115.c: 132: result >>= 4;
 17485  0090F6  0100               	movlb	0	; () banked
 17486  0090F8  3B71               	swapf	ads1115_read_conversion@result& (0+255),f,b
 17487  0090FA  3B72               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 17488  0090FC  0E0F               	movlw	15
 17489  0090FE  1771               	andwf	ads1115_read_conversion@result& (0+255),f,b
 17490  009100  5172               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 17491  009102  0BF0               	andlw	240
 17492  009104  1371               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 17493  009106  0E0F               	movlw	15
 17494  009108  1772               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 17495  00910A                     l15496:
 17496                           
 17497                           ;ads1115.c: 133: }
 17498                           ;ads1115.c: 134: return result;
 17499  00910A  C071  F06E         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 17500  00910E  C072  F06F         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 17501  009112  0012               	return	
 17502  009114                     __end_of_ads1115_read_conversion:
 17503                           	opt stack 0
 17504                           tosu	equ	0xFFF
 17505                           tosh	equ	0xFFE
 17506                           tosl	equ	0xFFD
 17507                           pclath	equ	0xFFA
 17508                           tblptru	equ	0xFF8
 17509                           tblptrh	equ	0xFF7
 17510                           tblptrl	equ	0xFF6
 17511                           tablat	equ	0xFF5
 17512                           prodh	equ	0xFF4
 17513                           prodl	equ	0xFF3
 17514                           intcon	equ	0xFF2
 17515                           postinc0	equ	0xFEE
 17516                           wreg	equ	0xFE8
 17517                           indf1	equ	0xFE7
 17518                           postinc1	equ	0xFE6
 17519                           postdec1	equ	0xFE5
 17520                           plusw1	equ	0xFE3
 17521                           fsr1h	equ	0xFE2
 17522                           fsr1l	equ	0xFE1
 17523                           indf2	equ	0xFDF
 17524                           postinc2	equ	0xFDE
 17525                           postdec2	equ	0xFDD
 17526                           plusw2	equ	0xFDB
 17527                           fsr2h	equ	0xFDA
 17528                           fsr2l	equ	0xFD9
 17529                           status	equ	0xFD8
 17530                           
 17531 ;; *************** function _ads1115_read_reg *****************
 17532 ;; Defined at:
 17533 ;;		line 29 in file "src/driver/ads1115.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 17536 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 17537 ;;  addr            1   10[BANK0 ] unsigned char 
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;  t16             2   12[BANK0 ] unsigned int 
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  2    8[BANK0 ] unsigned int 
 17542 ;; Registers used:
 17543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;Total ram usage:        6 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; Hardware stack levels required when called:    8
 17556 ;; This function calls:
 17557 ;;		_iic_received_byte_if_ack
 17558 ;;		_iic_send_byte
 17559 ;;		_iic_start
 17560 ;;		_iic_stop
 17561 ;; This function is called by:
 17562 ;;		_ads1115_read_conversion
 17563 ;; This function uses a non-reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text94
 17567  003C9E                     __ptext94:
 17568                           	opt stack 0
 17569  003C9E                     _ads1115_read_reg:
 17570                           	opt stack 18
 17571                           
 17572                           ;ads1115.c: 31: uint16_t t16=0;
 17573                           
 17574                           ;incstack = 0
 17575  003C9E  0E00               	movlw	0
 17576  003CA0  0100               	movlb	0	; () banked
 17577  003CA2  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 17578  003CA4  0E00               	movlw	0
 17579  003CA6  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;ads1115.c: 32: pAds1115->iic_start();
 17583  003CA8  0100               	movlb	0	; () banked
 17584  003CAA  EE20 F006          	lfsr	2,6
 17585  003CAE  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17586  003CB0  26D9               	addwf	fsr2l,f,c
 17587  003CB2  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17588  003CB4  22DA               	addwfc	fsr2h,f,c
 17589  003CB6  D801               	call	u13988
 17590  003CB8  D00A               	goto	l14858
 17591  003CBA                     u13988:
 17592  003CBA  0005               	push	
 17593  003CBC  6EFA               	movwf	pclath,c
 17594  003CBE  50DE               	movf	postinc2,w,c
 17595  003CC0  6EFD               	movwf	tosl,c
 17596  003CC2  50DE               	movf	postinc2,w,c
 17597  003CC4  6EFE               	movwf	tosh,c
 17598  003CC6  50F8               	movf	tblptru,w,c
 17599  003CC8  6EFF               	movwf	tosu,c
 17600  003CCA  50FA               	movf	pclath,w,c
 17601  003CCC  0012               	return		;indir
 17602  003CCE                     l14858:
 17603                           
 17604                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 17605  003CCE  0100               	movlb	0	; () banked
 17606  003CD0  EE20 F00A          	lfsr	2,10
 17607  003CD4  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17608  003CD6  26D9               	addwf	fsr2l,f,c
 17609  003CD8  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17610  003CDA  22DA               	addwfc	fsr2h,f,c
 17611  003CDC  D801               	call	u13998
 17612  003CDE  D012               	goto	l14860
 17613  003CE0                     u13998:
 17614  003CE0  0005               	push	
 17615  003CE2  6EFA               	movwf	pclath,c
 17616  003CE4  50DE               	movf	postinc2,w,c
 17617  003CE6  6EFD               	movwf	tosl,c
 17618  003CE8  50DE               	movf	postinc2,w,c
 17619  003CEA  6EFE               	movwf	tosh,c
 17620  003CEC  50F8               	movf	tblptru,w,c
 17621  003CEE  6EFF               	movwf	tosu,c
 17622  003CF0  50FA               	movf	pclath,w,c
 17623  003CF2  0100               	movlb	0	; () banked
 17624  003CF4  EE20 F001          	lfsr	2,1
 17625  003CF8  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17626  003CFA  26D9               	addwf	fsr2l,f,c
 17627  003CFC  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17628  003CFE  22DA               	addwfc	fsr2h,f,c
 17629  003D00  50DF               	movf	indf2,w,c
 17630  003D02  0012               	return		;indir
 17631  003D04                     l14860:
 17632                           
 17633                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 17634  003D04  0100               	movlb	0	; () banked
 17635  003D06  EE20 F00A          	lfsr	2,10
 17636  003D0A  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17637  003D0C  26D9               	addwf	fsr2l,f,c
 17638  003D0E  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17639  003D10  22DA               	addwfc	fsr2h,f,c
 17640  003D12  D801               	call	u14008
 17641  003D14  D00C               	goto	l14862
 17642  003D16                     u14008:
 17643  003D16  0005               	push	
 17644  003D18  6EFA               	movwf	pclath,c
 17645  003D1A  50DE               	movf	postinc2,w,c
 17646  003D1C  6EFD               	movwf	tosl,c
 17647  003D1E  50DE               	movf	postinc2,w,c
 17648  003D20  6EFE               	movwf	tosh,c
 17649  003D22  50F8               	movf	tblptru,w,c
 17650  003D24  6EFF               	movwf	tosu,c
 17651  003D26  50FA               	movf	pclath,w,c
 17652  003D28  0100               	movlb	0	; () banked
 17653  003D2A  516A               	movf	ads1115_read_reg@addr& (0+255),w,b
 17654  003D2C  0012               	return		;indir
 17655  003D2E                     l14862:
 17656                           
 17657                           ;ads1115.c: 36: pAds1115->iic_stop();
 17658  003D2E  0100               	movlb	0	; () banked
 17659  003D30  EE20 F008          	lfsr	2,8
 17660  003D34  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17661  003D36  26D9               	addwf	fsr2l,f,c
 17662  003D38  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17663  003D3A  22DA               	addwfc	fsr2h,f,c
 17664  003D3C  D801               	call	u14018
 17665  003D3E  D00A               	goto	l14864
 17666  003D40                     u14018:
 17667  003D40  0005               	push	
 17668  003D42  6EFA               	movwf	pclath,c
 17669  003D44  50DE               	movf	postinc2,w,c
 17670  003D46  6EFD               	movwf	tosl,c
 17671  003D48  50DE               	movf	postinc2,w,c
 17672  003D4A  6EFE               	movwf	tosh,c
 17673  003D4C  50F8               	movf	tblptru,w,c
 17674  003D4E  6EFF               	movwf	tosu,c
 17675  003D50  50FA               	movf	pclath,w,c
 17676  003D52  0012               	return		;indir
 17677  003D54                     l14864:
 17678                           
 17679                           ;ads1115.c: 38: pAds1115->iic_start();
 17680  003D54  0100               	movlb	0	; () banked
 17681  003D56  EE20 F006          	lfsr	2,6
 17682  003D5A  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17683  003D5C  26D9               	addwf	fsr2l,f,c
 17684  003D5E  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17685  003D60  22DA               	addwfc	fsr2h,f,c
 17686  003D62  D801               	call	u14028
 17687  003D64  D00A               	goto	l14866
 17688  003D66                     u14028:
 17689  003D66  0005               	push	
 17690  003D68  6EFA               	movwf	pclath,c
 17691  003D6A  50DE               	movf	postinc2,w,c
 17692  003D6C  6EFD               	movwf	tosl,c
 17693  003D6E  50DE               	movf	postinc2,w,c
 17694  003D70  6EFE               	movwf	tosh,c
 17695  003D72  50F8               	movf	tblptru,w,c
 17696  003D74  6EFF               	movwf	tosu,c
 17697  003D76  50FA               	movf	pclath,w,c
 17698  003D78  0012               	return		;indir
 17699  003D7A                     l14866:
 17700                           
 17701                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 17702  003D7A  0100               	movlb	0	; () banked
 17703  003D7C  EE20 F00A          	lfsr	2,10
 17704  003D80  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17705  003D82  26D9               	addwf	fsr2l,f,c
 17706  003D84  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17707  003D86  22DA               	addwfc	fsr2h,f,c
 17708  003D88  D801               	call	u14038
 17709  003D8A  D016               	goto	l14868
 17710  003D8C                     u14038:
 17711  003D8C  0005               	push	
 17712  003D8E  6EFA               	movwf	pclath,c
 17713  003D90  50DE               	movf	postinc2,w,c
 17714  003D92  6EFD               	movwf	tosl,c
 17715  003D94  50DE               	movf	postinc2,w,c
 17716  003D96  6EFE               	movwf	tosh,c
 17717  003D98  50F8               	movf	tblptru,w,c
 17718  003D9A  6EFF               	movwf	tosu,c
 17719  003D9C  50FA               	movf	pclath,w,c
 17720  003D9E  0100               	movlb	0	; () banked
 17721  003DA0  EE20 F001          	lfsr	2,1
 17722  003DA4  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17723  003DA6  26D9               	addwf	fsr2l,f,c
 17724  003DA8  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17725  003DAA  22DA               	addwfc	fsr2h,f,c
 17726  003DAC  50DF               	movf	indf2,w,c
 17727  003DAE  0100               	movlb	0	; () banked
 17728  003DB0  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17729  003DB2  0100               	movlb	0	; () banked
 17730  003DB4  296B               	incf	??_ads1115_read_reg& (0+255),w,b
 17731  003DB6  0012               	return		;indir
 17732  003DB8                     l14868:
 17733                           
 17734                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17735  003DB8  0100               	movlb	0	; () banked
 17736  003DBA  EE20 F00E          	lfsr	2,14
 17737  003DBE  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17738  003DC0  26D9               	addwf	fsr2l,f,c
 17739  003DC2  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17740  003DC4  22DA               	addwfc	fsr2h,f,c
 17741  003DC6  D801               	call	u14048
 17742  003DC8  D00B               	goto	u14049
 17743  003DCA                     u14048:
 17744  003DCA  0005               	push	
 17745  003DCC  6EFA               	movwf	pclath,c
 17746  003DCE  50DE               	movf	postinc2,w,c
 17747  003DD0  6EFD               	movwf	tosl,c
 17748  003DD2  50DE               	movf	postinc2,w,c
 17749  003DD4  6EFE               	movwf	tosh,c
 17750  003DD6  50F8               	movf	tblptru,w,c
 17751  003DD8  6EFF               	movwf	tosu,c
 17752  003DDA  50FA               	movf	pclath,w,c
 17753  003DDC  0E00               	movlw	0
 17754  003DDE  0012               	return		;indir
 17755  003DE0                     u14049:
 17756  003DE0  0100               	movlb	0	; () banked
 17757  003DE2  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17758  003DE4  0100               	movlb	0	; () banked
 17759  003DE6  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17760  003DE8  0100               	movlb	0	; () banked
 17761  003DEA  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 17762  003DEC  6B6D               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;ads1115.c: 41: t16<<=8;
 17766  003DEE  0100               	movlb	0	; () banked
 17767  003DF0  516C               	movf	ads1115_read_reg@t16& (0+255),w,b
 17768  003DF2  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 17769  003DF4  6B6C               	clrf	ads1115_read_reg@t16& (0+255),b
 17770                           
 17771                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17772  003DF6  0100               	movlb	0	; () banked
 17773  003DF8  EE20 F00E          	lfsr	2,14
 17774  003DFC  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17775  003DFE  26D9               	addwf	fsr2l,f,c
 17776  003E00  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17777  003E02  22DA               	addwfc	fsr2h,f,c
 17778  003E04  D801               	call	u14058
 17779  003E06  D00B               	goto	u14059
 17780  003E08                     u14058:
 17781  003E08  0005               	push	
 17782  003E0A  6EFA               	movwf	pclath,c
 17783  003E0C  50DE               	movf	postinc2,w,c
 17784  003E0E  6EFD               	movwf	tosl,c
 17785  003E10  50DE               	movf	postinc2,w,c
 17786  003E12  6EFE               	movwf	tosh,c
 17787  003E14  50F8               	movf	tblptru,w,c
 17788  003E16  6EFF               	movwf	tosu,c
 17789  003E18  50FA               	movf	pclath,w,c
 17790  003E1A  0E00               	movlw	0
 17791  003E1C  0012               	return		;indir
 17792  003E1E                     u14059:
 17793  003E1E  0100               	movlb	0	; () banked
 17794  003E20  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17795  003E22  0100               	movlb	0	; () banked
 17796  003E24  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17797  003E26  0100               	movlb	0	; () banked
 17798  003E28  136C               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 17799                           
 17800                           ;ads1115.c: 44: pAds1115->iic_stop();
 17801  003E2A  0100               	movlb	0	; () banked
 17802  003E2C  EE20 F008          	lfsr	2,8
 17803  003E30  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17804  003E32  26D9               	addwf	fsr2l,f,c
 17805  003E34  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17806  003E36  22DA               	addwfc	fsr2h,f,c
 17807  003E38  D801               	call	u14068
 17808  003E3A  D00A               	goto	l14872
 17809  003E3C                     u14068:
 17810  003E3C  0005               	push	
 17811  003E3E  6EFA               	movwf	pclath,c
 17812  003E40  50DE               	movf	postinc2,w,c
 17813  003E42  6EFD               	movwf	tosl,c
 17814  003E44  50DE               	movf	postinc2,w,c
 17815  003E46  6EFE               	movwf	tosh,c
 17816  003E48  50F8               	movf	tblptru,w,c
 17817  003E4A  6EFF               	movwf	tosu,c
 17818  003E4C  50FA               	movf	pclath,w,c
 17819  003E4E  0012               	return		;indir
 17820  003E50                     l14872:
 17821                           
 17822                           ;ads1115.c: 45: return t16;
 17823  003E50  C06C  F068         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 17824  003E54  C06D  F069         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 17825  003E58  0012               	return	
 17826  003E5A                     __end_of_ads1115_read_reg:
 17827                           	opt stack 0
 17828                           tosu	equ	0xFFF
 17829                           tosh	equ	0xFFE
 17830                           tosl	equ	0xFFD
 17831                           pclath	equ	0xFFA
 17832                           tblptru	equ	0xFF8
 17833                           tblptrh	equ	0xFF7
 17834                           tblptrl	equ	0xFF6
 17835                           tablat	equ	0xFF5
 17836                           prodh	equ	0xFF4
 17837                           prodl	equ	0xFF3
 17838                           intcon	equ	0xFF2
 17839                           postinc0	equ	0xFEE
 17840                           wreg	equ	0xFE8
 17841                           indf1	equ	0xFE7
 17842                           postinc1	equ	0xFE6
 17843                           postdec1	equ	0xFE5
 17844                           plusw1	equ	0xFE3
 17845                           fsr1h	equ	0xFE2
 17846                           fsr1l	equ	0xFE1
 17847                           indf2	equ	0xFDF
 17848                           postinc2	equ	0xFDE
 17849                           postdec2	equ	0xFDD
 17850                           plusw2	equ	0xFDB
 17851                           fsr2h	equ	0xFDA
 17852                           fsr2l	equ	0xFD9
 17853                           status	equ	0xFD8
 17854                           
 17855 ;; *************** function ___x_sample_fifo *****************
 17856 ;; Defined at:
 17857 ;;		line 67 in file "src/api/sample.c"
 17858 ;; Parameters:    Size  Location     Type
 17859 ;;  buf             2   26[BANK0 ] PTR int 
 17860 ;;		 -> sampBufRefInSoc(8), sampBufBatInSoc(8), sampBufExPr1InSoc(8), sampBufExPr0InSoc(8), 
 17861 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), sampBufDiffPr_S1(8), 
 17862 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 17863 ;;  x               2   28[BANK0 ] int 
 17864 ;;  len             1   30[BANK0 ] unsigned char 
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;  ret             4   37[BANK0 ] long 
 17867 ;;  i               1   41[BANK0 ] unsigned char 
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  2   26[BANK0 ] int 
 17870 ;; Registers used:
 17871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17877 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17878 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17879 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17881 ;;Total ram usage:       16 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    5
 17884 ;; This function calls:
 17885 ;;		___aldiv
 17886 ;; This function is called by:
 17887 ;;		_sample_diff_pr_chip_fast
 17888 ;;		_sample_pr_chip_fast
 17889 ;;		_sample_in_soc_adc_ch
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text95
 17894  00447E                     __ptext95:
 17895                           	opt stack 0
 17896  00447E                     ___x_sample_fifo:
 17897                           	opt stack 22
 17898                           
 17899                           ;sample.c: 69: int32_t ret=0;
 17900                           
 17901                           ;incstack = 0
 17902  00447E  0E00               	movlw	0
 17903  004480  0100               	movlb	0	; () banked
 17904  004482  6F85               	movwf	___x_sample_fifo@ret& (0+255),b
 17905  004484  0E00               	movlw	0
 17906  004486  6F86               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 17907  004488  0E00               	movlw	0
 17908  00448A  6F87               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 17909  00448C  0E00               	movlw	0
 17910  00448E  6F88               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;sample.c: 70: uint8_t i;
 17914                           ;sample.c: 71: for(i=len-1;i>0;i--){
 17915  004490  0100               	movlb	0	; () banked
 17916  004492  057E               	decf	___x_sample_fifo@len& (0+255),w,b
 17917  004494  0100               	movlb	0	; () banked
 17918  004496  6F89               	movwf	___x_sample_fifo@i& (0+255),b
 17919  004498                     l15454:
 17920                           
 17921                           ; BSR set to: 0
 17922  004498  0100               	movlb	0	; () banked
 17923  00449A  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17924  00449C  0100               	movlb	0	; () banked
 17925  00449E  B4D8               	btfsc	status,2,c
 17926  0044A0  D05C               	goto	l15466
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;sample.c: 72: buf[i]=buf[i-1];
 17930                           
 17931                           ; BSR set to: 0
 17932                           
 17933                           ; BSR set to: 0
 17934  0044A2  0EFE               	movlw	254
 17935  0044A4  0100               	movlb	0	; () banked
 17936  0044A6  6F7F               	movwf	??___x_sample_fifo& (0+255),b
 17937  0044A8  0EFF               	movlw	255
 17938  0044AA  0100               	movlb	0	; () banked
 17939  0044AC  6F80               	movwf	(??___x_sample_fifo+1)& (0+255),b
 17940  0044AE  0100               	movlb	0	; () banked
 17941  0044B0  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17942  0044B2  0100               	movlb	0	; () banked
 17943  0044B4  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17944  0044B6  6B82               	clrf	(??___x_sample_fifo+3)& (0+255),b
 17945  0044B8  90D8               	bcf	status,0,c
 17946  0044BA  0100               	movlb	0	; () banked
 17947  0044BC  3781               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 17948  0044BE  3782               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 17949  0044C0  0100               	movlb	0	; () banked
 17950  0044C2  517F               	movf	??___x_sample_fifo& (0+255),w,b
 17951  0044C4  0100               	movlb	0	; () banked
 17952  0044C6  2781               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 17953  0044C8  0100               	movlb	0	; () banked
 17954  0044CA  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17955  0044CC  0100               	movlb	0	; () banked
 17956  0044CE  2382               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 17957  0044D0  0100               	movlb	0	; () banked
 17958  0044D2  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17959  0044D4  0100               	movlb	0	; () banked
 17960  0044D6  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17961  0044D8  6ED9               	movwf	fsr2l,c
 17962  0044DA  0100               	movlb	0	; () banked
 17963  0044DC  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17964  0044DE  0100               	movlb	0	; () banked
 17965  0044E0  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17966  0044E2  6EDA               	movwf	fsr2h,c
 17967  0044E4  0100               	movlb	0	; () banked
 17968  0044E6  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17969  0044E8  0D02               	mullw	2
 17970  0044EA  50F3               	movf	prodl,w,c
 17971  0044EC  0100               	movlb	0	; () banked
 17972  0044EE  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17973  0044F0  6EE1               	movwf	fsr1l,c
 17974  0044F2  50F4               	movf	prodh,w,c
 17975  0044F4  0100               	movlb	0	; () banked
 17976  0044F6  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17977  0044F8  6EE2               	movwf	fsr1h,c
 17978  0044FA  CFDE FFE6          	movff	postinc2,postinc1
 17979  0044FE  CFDD FFE5          	movff	postdec2,postdec1
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;sample.c: 73: ret+=buf[i];
 17983  004502  0100               	movlb	0	; () banked
 17984  004504  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17985  004506  0D02               	mullw	2
 17986  004508  50F3               	movf	prodl,w,c
 17987  00450A  0100               	movlb	0	; () banked
 17988  00450C  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17989  00450E  6ED9               	movwf	fsr2l,c
 17990  004510  50F4               	movf	prodh,w,c
 17991  004512  0100               	movlb	0	; () banked
 17992  004514  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17993  004516  6EDA               	movwf	fsr2h,c
 17994  004518  CFDE F07F          	movff	postinc2,??___x_sample_fifo
 17995  00451C  CFDD F080          	movff	postdec2,??___x_sample_fifo+1
 17996  004520  C07F  F081         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 17997  004524  C080  F082         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 17998  004528  0E00               	movlw	0
 17999  00452A  0100               	movlb	0	; () banked
 18000  00452C  BF82               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 18001  00452E  0EFF               	movlw	255
 18002  004530  6F83               	movwf	(??___x_sample_fifo+4)& (0+255),b
 18003  004532  6F84               	movwf	(??___x_sample_fifo+5)& (0+255),b
 18004  004534  0100               	movlb	0	; () banked
 18005  004536  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 18006  004538  0100               	movlb	0	; () banked
 18007  00453A  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 18008  00453C  0100               	movlb	0	; () banked
 18009  00453E  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 18010  004540  0100               	movlb	0	; () banked
 18011  004542  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 18012  004544  0100               	movlb	0	; () banked
 18013  004546  5183               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 18014  004548  0100               	movlb	0	; () banked
 18015  00454A  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 18016  00454C  0100               	movlb	0	; () banked
 18017  00454E  5184               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 18018  004550  0100               	movlb	0	; () banked
 18019  004552  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 18020                           
 18021                           ; BSR set to: 0
 18022  004554  0100               	movlb	0	; () banked
 18023  004556  0789               	decf	___x_sample_fifo@i& (0+255),f,b
 18024  004558  D79F               	goto	l15454
 18025  00455A                     l15466:
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;sample.c: 74: }
 18029                           ;sample.c: 75: buf[i]=x;
 18030  00455A  0100               	movlb	0	; () banked
 18031  00455C  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 18032  00455E  0D02               	mullw	2
 18033  004560  50F3               	movf	prodl,w,c
 18034  004562  0100               	movlb	0	; () banked
 18035  004564  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 18036  004566  6ED9               	movwf	fsr2l,c
 18037  004568  50F4               	movf	prodh,w,c
 18038  00456A  0100               	movlb	0	; () banked
 18039  00456C  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 18040  00456E  6EDA               	movwf	fsr2h,c
 18041  004570  C07C  FFDE         	movff	___x_sample_fifo@x,postinc2
 18042  004574  C07D  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;sample.c: 76: ret+=x;
 18046  004578  C07C  F07F         	movff	___x_sample_fifo@x,??___x_sample_fifo
 18047  00457C  C07D  F080         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 18048  004580  0E00               	movlw	0
 18049  004582  0100               	movlb	0	; () banked
 18050  004584  BF80               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 18051  004586  0EFF               	movlw	255
 18052  004588  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 18053  00458A  6F82               	movwf	(??___x_sample_fifo+3)& (0+255),b
 18054  00458C  0100               	movlb	0	; () banked
 18055  00458E  517F               	movf	??___x_sample_fifo& (0+255),w,b
 18056  004590  0100               	movlb	0	; () banked
 18057  004592  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 18058  004594  0100               	movlb	0	; () banked
 18059  004596  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 18060  004598  0100               	movlb	0	; () banked
 18061  00459A  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 18062  00459C  0100               	movlb	0	; () banked
 18063  00459E  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 18064  0045A0  0100               	movlb	0	; () banked
 18065  0045A2  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 18066  0045A4  0100               	movlb	0	; () banked
 18067  0045A6  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 18068  0045A8  0100               	movlb	0	; () banked
 18069  0045AA  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;sample.c: 77: ret/=len;
 18073  0045AC  C085  F06C         	movff	___x_sample_fifo@ret,___aldiv@dividend
 18074  0045B0  C086  F06D         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 18075  0045B4  C087  F06E         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 18076  0045B8  C088  F06F         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 18077  0045BC  0100               	movlb	0	; () banked
 18078  0045BE  517E               	movf	___x_sample_fifo@len& (0+255),w,b
 18079  0045C0  0100               	movlb	0	; () banked
 18080  0045C2  6F70               	movwf	___aldiv@divisor& (0+255),b
 18081  0045C4  6B71               	clrf	(___aldiv@divisor+1)& (0+255),b
 18082  0045C6  6B72               	clrf	(___aldiv@divisor+2)& (0+255),b
 18083  0045C8  6B73               	clrf	(___aldiv@divisor+3)& (0+255),b
 18084  0045CA  EC3C  F029         	call	___aldiv
 18085  0045CE  C06C  F085         	movff	?___aldiv,___x_sample_fifo@ret
 18086  0045D2  C06D  F086         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 18087  0045D6  C06E  F087         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 18088  0045DA  C06F  F088         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 18089                           
 18090                           ;sample.c: 78: return (int16_t)(ret);
 18091  0045DE  C085  F07A         	movff	___x_sample_fifo@ret,?___x_sample_fifo
 18092  0045E2  C086  F07B         	movff	___x_sample_fifo@ret+1,?___x_sample_fifo+1
 18093  0045E6  0012               	return	
 18094  0045E8                     __end_of___x_sample_fifo:
 18095                           	opt stack 0
 18096                           tosu	equ	0xFFF
 18097                           tosh	equ	0xFFE
 18098                           tosl	equ	0xFFD
 18099                           pclath	equ	0xFFA
 18100                           tblptru	equ	0xFF8
 18101                           tblptrh	equ	0xFF7
 18102                           tblptrl	equ	0xFF6
 18103                           tablat	equ	0xFF5
 18104                           prodh	equ	0xFF4
 18105                           prodl	equ	0xFF3
 18106                           intcon	equ	0xFF2
 18107                           postinc0	equ	0xFEE
 18108                           wreg	equ	0xFE8
 18109                           indf1	equ	0xFE7
 18110                           postinc1	equ	0xFE6
 18111                           postdec1	equ	0xFE5
 18112                           plusw1	equ	0xFE3
 18113                           fsr1h	equ	0xFE2
 18114                           fsr1l	equ	0xFE1
 18115                           indf2	equ	0xFDF
 18116                           postinc2	equ	0xFDE
 18117                           postdec2	equ	0xFDD
 18118                           plusw2	equ	0xFDB
 18119                           fsr2h	equ	0xFDA
 18120                           fsr2l	equ	0xFD9
 18121                           status	equ	0xFD8
 18122                           
 18123 ;; *************** function _event_process_rtc *****************
 18124 ;; Defined at:
 18125 ;;		line 6 in file "src/app/event.c"
 18126 ;; Parameters:    Size  Location     Type
 18127 ;;		None
 18128 ;; Auto vars:     Size  Location     Type
 18129 ;;  ret             1  135[BANK0 ] unsigned char 
 18130 ;; Return value:  Size  Location     Type
 18131 ;;                  1    wreg      char 
 18132 ;; Registers used:
 18133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18134 ;; Tracked objects:
 18135 ;;		On entry : 0/0
 18136 ;;		On exit  : 0/0
 18137 ;;		Unchanged: 0/0
 18138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;Total ram usage:        1 bytes
 18144 ;; Hardware stack levels used:    1
 18145 ;; Hardware stack levels required when called:   13
 18146 ;; This function calls:
 18147 ;;		_sample_function_enable_fi_in_rtc
 18148 ;;		_ui_disp_menu
 18149 ;; This function is called by:
 18150 ;;		_main
 18151 ;;		_event_process
 18152 ;; This function uses a non-reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text96
 18156  009832                     __ptext96:
 18157                           	opt stack 0
 18158  009832                     _event_process_rtc:
 18159                           	opt stack 17
 18160                           
 18161                           ;event.c: 8: uint8_t ret=0;
 18162                           
 18163                           ;incstack = 0
 18164  009832  0E00               	movlw	0
 18165  009834  0100               	movlb	0	; () banked
 18166  009836  6FE7               	movwf	event_process_rtc@ret& (0+255),b
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;event.c: 9: sample_function_enable_fi_in_rtc();
 18170  009838  EC89  F031         	call	_sample_function_enable_fi_in_rtc	;wreg free
 18171                           
 18172                           ;event.c: 11: if(glNoEventTimeOut){
 18173  00983C  0100               	movlb	0	; () banked
 18174  00983E  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 18175  009840  B4D8               	btfsc	status,2,c
 18176  009842  D006               	goto	l17178
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;event.c: 12: glNoEventTimeOut--;
 18180  009844  0100               	movlb	0	; () banked
 18181  009846  07FF               	decf	_glNoEventTimeOut& (0+255),f,b	;volatile
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;event.c: 13: if(!glNoEventTimeOut){
 18185  009848  0100               	movlb	0	; () banked
 18186  00984A  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 18187  00984C  B4D8               	btfsc	status,2,c
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;event.c: 14: glbEvent |= (1<<2);
 18191  00984E  842E               	bsf	_glbEvent,2,c	;volatile
 18192  009850                     l17178:
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;event.c: 15: }
 18196                           ;event.c: 16: }
 18197                           ;event.c: 18: if(lcdTwinkle>0)lcdTwinkle--;
 18198  009850  5034               	movf	_lcdTwinkle,w,c
 18199  009852  A4D8               	btfss	status,2,c
 18200                           
 18201                           ; BSR set to: 0
 18202  009854  0634               	decf	_lcdTwinkle,f,c
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;event.c: 19: ui_disp_menu();
 18206                           
 18207                           ; BSR set to: 0
 18208  009856  ECDF  F037         	call	_ui_disp_menu	;wreg free
 18209  00985A  0012               	return	
 18210  00985C                     __end_of_event_process_rtc:
 18211                           	opt stack 0
 18212                           tosu	equ	0xFFF
 18213                           tosh	equ	0xFFE
 18214                           tosl	equ	0xFFD
 18215                           pclath	equ	0xFFA
 18216                           tblptru	equ	0xFF8
 18217                           tblptrh	equ	0xFF7
 18218                           tblptrl	equ	0xFF6
 18219                           tablat	equ	0xFF5
 18220                           prodh	equ	0xFF4
 18221                           prodl	equ	0xFF3
 18222                           intcon	equ	0xFF2
 18223                           postinc0	equ	0xFEE
 18224                           wreg	equ	0xFE8
 18225                           indf1	equ	0xFE7
 18226                           postinc1	equ	0xFE6
 18227                           postdec1	equ	0xFE5
 18228                           plusw1	equ	0xFE3
 18229                           fsr1h	equ	0xFE2
 18230                           fsr1l	equ	0xFE1
 18231                           indf2	equ	0xFDF
 18232                           postinc2	equ	0xFDE
 18233                           postdec2	equ	0xFDD
 18234                           plusw2	equ	0xFDB
 18235                           fsr2h	equ	0xFDA
 18236                           fsr2l	equ	0xFD9
 18237                           status	equ	0xFD8
 18238                           
 18239 ;; *************** function _ui_disp_menu *****************
 18240 ;; Defined at:
 18241 ;;		line 756 in file "src/api/ui.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;		None
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;		None
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      void 
 18248 ;; Registers used:
 18249 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18259 ;;Total ram usage:        0 bytes
 18260 ;; Hardware stack levels used:    1
 18261 ;; Hardware stack levels required when called:   12
 18262 ;; This function calls:
 18263 ;;		_ui_disp_menu_bar_full_adj
 18264 ;;		_ui_disp_menu_bzero_adj
 18265 ;;		_ui_disp_menu_calib_diff_adj
 18266 ;;		_ui_disp_menu_calib_pr_adj
 18267 ;;		_ui_disp_menu_density_adj
 18268 ;;		_ui_disp_menu_epr_calib_adj
 18269 ;;		_ui_disp_menu_epr_ilp_scale_adj
 18270 ;;		_ui_disp_menu_home_test
 18271 ;;		_ui_disp_menu_poly_c_adj
 18272 ;;		_ui_disp_menu_pose_size
 18273 ;;		_ui_disp_menu_psw_adj
 18274 ;;		_ui_disp_menu_warn_t_adj
 18275 ;;		_ui_disp_menu_warn_v_adj
 18276 ;;		_ui_disp_menu_work_mode_adj
 18277 ;; This function is called by:
 18278 ;;		_key_process
 18279 ;;		_event_process_rtc
 18280 ;; This function uses a non-reentrant model
 18281 ;;
 18282                           
 18283                           	psect	text97
 18284  006FBE                     __ptext97:
 18285                           	opt stack 0
 18286  006FBE                     _ui_disp_menu:
 18287                           	opt stack 17
 18288                           
 18289                           ;ui.c: 758: switch(menu){
 18290                           
 18291                           ;incstack = 0
 18292  006FBE  D02A               	goto	l16900
 18293  006FC0                     l16870:
 18294  006FC0  EC30  F037         	call	_ui_disp_menu_home_test	;wreg free
 18295  006FC4  0012               	return	
 18296  006FC6                     l16872:
 18297  006FC6  EC2E  F04C         	call	_ui_disp_menu_psw_adj	;wreg free
 18298  006FCA  0012               	return	
 18299  006FCC                     l16874:
 18300  006FCC  ECD6  F04B         	call	_ui_disp_menu_density_adj	;wreg free
 18301  006FD0  0012               	return	
 18302  006FD2                     l16876:
 18303  006FD2  EC43  F04C         	call	_ui_disp_menu_pose_size	;wreg free
 18304  006FD6  0012               	return	
 18305  006FD8                     l16878:
 18306  006FD8  ECED  F04B         	call	_ui_disp_menu_bzero_adj	;wreg free
 18307  006FDC  0012               	return	
 18308  006FDE                     l16880:
 18309  006FDE  EC6B  F02E         	call	_ui_disp_menu_calib_diff_adj	;wreg free
 18310  006FE2  0012               	return	
 18311  006FE4                     l16882:
 18312  006FE4  ECD6  F02F         	call	_ui_disp_menu_calib_pr_adj	;wreg free
 18313  006FE8  0012               	return	
 18314  006FEA                     l16884:
 18315  006FEA  ECE2  F043         	call	_ui_disp_menu_poly_c_adj	;wreg free
 18316  006FEE  0012               	return	
 18317  006FF0                     l16886:
 18318  006FF0  ECE9  F026         	call	_ui_disp_menu_warn_t_adj	;wreg free
 18319  006FF4  0012               	return	
 18320  006FF6                     l16888:
 18321  006FF6  EC65  F02F         	call	_ui_disp_menu_warn_v_adj	;wreg free
 18322  006FFA  0012               	return	
 18323  006FFC                     l16890:
 18324                           
 18325                           ;ui.c: 778: ui_disp_menu_epr_calib_adj(); break;
 18326  006FFC  EC46  F034         	call	_ui_disp_menu_epr_calib_adj	;wreg free
 18327  007000  0012               	return	
 18328  007002                     l16892:
 18329                           
 18330                           ;ui.c: 780: ui_disp_menu_epr_ilp_scale_adj(); break;
 18331  007002  ECE4  F033         	call	_ui_disp_menu_epr_ilp_scale_adj	;wreg free
 18332  007006  0012               	return	
 18333  007008                     l16894:
 18334  007008  ECD0  F04A         	call	_ui_disp_menu_bar_full_adj	;wreg free
 18335  00700C  0012               	return	
 18336  00700E                     l16896:
 18337  00700E  EC01  F040         	call	_ui_disp_menu_work_mode_adj	;wreg free
 18338                           
 18339                           ;ui.c: 784: }
 18340                           
 18341                           ;ui.c: 783: default:break;
 18342  007012  0012               	return	
 18343  007014                     l16900:
 18344  007014  5033               	movf	_menu,w,c	;volatile
 18345                           
 18346                           ; Switch size 1, requested type "space"
 18347                           ; Number of cases is 14, Range of values is 0 to 240
 18348                           ; switch strategies available:
 18349                           ; Name         Instructions Cycles
 18350                           ; simple_byte           43    22 (average)
 18351                           ;	Chosen strategy is simple_byte
 18352  007016  0A00               	xorlw	0	; case 0
 18353  007018  B4D8               	btfsc	status,2,c
 18354  00701A  D7D2               	goto	l16870
 18355  00701C  0A10               	xorlw	16	; case 16
 18356  00701E  B4D8               	btfsc	status,2,c
 18357  007020  D7D2               	goto	l16872
 18358  007022  0A30               	xorlw	48	; case 32
 18359  007024  B4D8               	btfsc	status,2,c
 18360  007026  D7D2               	goto	l16874
 18361  007028  0A10               	xorlw	16	; case 48
 18362  00702A  B4D8               	btfsc	status,2,c
 18363  00702C  D7D2               	goto	l16876
 18364  00702E  0A70               	xorlw	112	; case 64
 18365  007030  B4D8               	btfsc	status,2,c
 18366  007032  D7D2               	goto	l16878
 18367  007034  0A10               	xorlw	16	; case 80
 18368  007036  B4D8               	btfsc	status,2,c
 18369  007038  D7D2               	goto	l16880
 18370  00703A  0A30               	xorlw	48	; case 96
 18371  00703C  B4D8               	btfsc	status,2,c
 18372  00703E  D7D2               	goto	l16882
 18373  007040  0A10               	xorlw	16	; case 112
 18374  007042  B4D8               	btfsc	status,2,c
 18375  007044  D7D2               	goto	l16884
 18376  007046  0AF0               	xorlw	240	; case 128
 18377  007048  B4D8               	btfsc	status,2,c
 18378  00704A  D7D2               	goto	l16886
 18379  00704C  0A10               	xorlw	16	; case 144
 18380  00704E  B4D8               	btfsc	status,2,c
 18381  007050  D7D2               	goto	l16888
 18382  007052  0A30               	xorlw	48	; case 160
 18383  007054  B4D8               	btfsc	status,2,c
 18384  007056  D7D2               	goto	l16890
 18385  007058  0A10               	xorlw	16	; case 176
 18386  00705A  B4D8               	btfsc	status,2,c
 18387  00705C  D7D2               	goto	l16892
 18388  00705E  0A70               	xorlw	112	; case 192
 18389  007060  B4D8               	btfsc	status,2,c
 18390  007062  D7D2               	goto	l16894
 18391  007064  0A30               	xorlw	48	; case 240
 18392  007066  A4D8               	btfss	status,2,c
 18393  007068  0012               	return	
 18394  00706A  D7D1               	goto	l16896
 18395  00706C                     __end_of_ui_disp_menu:
 18396                           	opt stack 0
 18397                           tosu	equ	0xFFF
 18398                           tosh	equ	0xFFE
 18399                           tosl	equ	0xFFD
 18400                           pclath	equ	0xFFA
 18401                           tblptru	equ	0xFF8
 18402                           tblptrh	equ	0xFF7
 18403                           tblptrl	equ	0xFF6
 18404                           tablat	equ	0xFF5
 18405                           prodh	equ	0xFF4
 18406                           prodl	equ	0xFF3
 18407                           intcon	equ	0xFF2
 18408                           postinc0	equ	0xFEE
 18409                           wreg	equ	0xFE8
 18410                           indf1	equ	0xFE7
 18411                           postinc1	equ	0xFE6
 18412                           postdec1	equ	0xFE5
 18413                           plusw1	equ	0xFE3
 18414                           fsr1h	equ	0xFE2
 18415                           fsr1l	equ	0xFE1
 18416                           indf2	equ	0xFDF
 18417                           postinc2	equ	0xFDE
 18418                           postdec2	equ	0xFDD
 18419                           plusw2	equ	0xFDB
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function _ui_disp_menu_work_mode_adj *****************
 18425 ;; Defined at:
 18426 ;;		line 740 in file "src/api/ui.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;		None
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  buf            10   23[BANK0 ] unsigned char [10]
 18431 ;;  p               2   33[BANK0 ] PTR unsigned char 
 18432 ;;		 -> adjValue(4), 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  1    wreg      void 
 18435 ;; Registers used:
 18436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18443 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18445 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18446 ;;Total ram usage:       13 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:    9
 18449 ;; This function calls:
 18450 ;;		_lcd_disp_all
 18451 ;;		_lcd_disp_logo
 18452 ;;		_lcd_disp_refresh
 18453 ;;		_lcd_show_string
 18454 ;;		_m_mem_cpy
 18455 ;; This function is called by:
 18456 ;;		_ui_disp_menu
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text98
 18461  008002                     __ptext98:
 18462                           	opt stack 0
 18463  008002                     _ui_disp_menu_work_mode_adj:
 18464                           	opt stack 19
 18465                           
 18466                           ;ui.c: 742: uint8_t* p;
 18467                           ;ui.c: 743: uint8_t buf[10];
 18468                           ;ui.c: 744: lcd_disp_all(0x00);;
 18469                           
 18470                           ;incstack = 0
 18471  008002  0E00               	movlw	0
 18472  008004  EC90  F04B         	call	_lcd_disp_all
 18473                           
 18474                           ;ui.c: 745: lcd_disp_logo(1);
 18475  008008  0E01               	movlw	1
 18476  00800A  EC78  F04B         	call	_lcd_disp_logo
 18477                           
 18478                           ;ui.c: 746: p=(uint8_t*)(&adjValue);
 18479  00800E  0E39               	movlw	low _adjValue
 18480  008010  0100               	movlb	0	; () banked
 18481  008012  6F81               	movwf	ui_disp_menu_work_mode_adj@p& (0+255),b
 18482  008014  0E00               	movlw	high _adjValue
 18483  008016  0100               	movlb	0	; () banked
 18484  008018  6F82               	movwf	(ui_disp_menu_work_mode_adj@p+1)& (0+255),b
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;ui.c: 748: if(*p==WORK_MODE){
 18488  00801A  C081  FFD9         	movff	ui_disp_menu_work_mode_adj@p,fsr2l
 18489  00801E  C082  FFDA         	movff	ui_disp_menu_work_mode_adj@p+1,fsr2h
 18490  008022  04DE               	decf	postinc2,w,c
 18491  008024  A4D8               	btfss	status,2,c
 18492  008026  D00F               	goto	l16348
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;ui.c: 749: m_mem_cpy(buf,(uint8_t*)" sta nor");
 18496  008028  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 18497  00802A  0100               	movlb	0	; () banked
 18498  00802C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18499  00802E  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 18500  008030  0100               	movlb	0	; () banked
 18501  008032  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18502  008034  0E79               	movlw	low STR_32
 18503  008036  0100               	movlb	0	; () banked
 18504  008038  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18505  00803A  0EF3               	movlw	high STR_32
 18506  00803C  0100               	movlb	0	; () banked
 18507  00803E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18508  008040  ECA9  F042         	call	_m_mem_cpy	;wreg free
 18509                           
 18510                           ;ui.c: 750: }else{
 18511  008044  D00E               	goto	l16350
 18512  008046                     l16348:
 18513                           
 18514                           ;ui.c: 751: m_mem_cpy(buf,(uint8_t*)" sta tst");
 18515  008046  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 18516  008048  0100               	movlb	0	; () banked
 18517  00804A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18518  00804C  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 18519  00804E  0100               	movlb	0	; () banked
 18520  008050  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18521  008052  0E82               	movlw	low STR_33
 18522  008054  0100               	movlb	0	; () banked
 18523  008056  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18524  008058  0EF3               	movlw	high STR_33
 18525  00805A  0100               	movlb	0	; () banked
 18526  00805C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18527  00805E  ECA9  F042         	call	_m_mem_cpy	;wreg free
 18528  008062                     l16350:
 18529                           
 18530                           ;ui.c: 752: }
 18531                           ;ui.c: 753: lcd_show_string(buf);
 18532  008062  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 18533  008064  0100               	movlb	0	; () banked
 18534  008066  6F73               	movwf	lcd_show_string@str& (0+255),b
 18535  008068  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 18536  00806A  0100               	movlb	0	; () banked
 18537  00806C  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 18538  00806E  EC3C  F042         	call	_lcd_show_string	;wreg free
 18539                           
 18540                           ;ui.c: 754: lcd_disp_refresh();
 18541  008072  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 18542  008076  0012               	return		;funcret
 18543  008078                     __end_of_ui_disp_menu_work_mode_adj:
 18544                           	opt stack 0
 18545                           tosu	equ	0xFFF
 18546                           tosh	equ	0xFFE
 18547                           tosl	equ	0xFFD
 18548                           pclath	equ	0xFFA
 18549                           tblptru	equ	0xFF8
 18550                           tblptrh	equ	0xFF7
 18551                           tblptrl	equ	0xFF6
 18552                           tablat	equ	0xFF5
 18553                           prodh	equ	0xFF4
 18554                           prodl	equ	0xFF3
 18555                           intcon	equ	0xFF2
 18556                           postinc0	equ	0xFEE
 18557                           wreg	equ	0xFE8
 18558                           indf1	equ	0xFE7
 18559                           postinc1	equ	0xFE6
 18560                           postdec1	equ	0xFE5
 18561                           plusw1	equ	0xFE3
 18562                           fsr1h	equ	0xFE2
 18563                           fsr1l	equ	0xFE1
 18564                           indf2	equ	0xFDF
 18565                           postinc2	equ	0xFDE
 18566                           postdec2	equ	0xFDD
 18567                           plusw2	equ	0xFDB
 18568                           fsr2h	equ	0xFDA
 18569                           fsr2l	equ	0xFD9
 18570                           status	equ	0xFD8
 18571                           
 18572 ;; *************** function _ui_disp_menu_warn_v_adj *****************
 18573 ;; Defined at:
 18574 ;;		line 660 in file "src/api/ui.c"
 18575 ;; Parameters:    Size  Location     Type
 18576 ;;		None
 18577 ;; Auto vars:     Size  Location     Type
 18578 ;;  buf             6   44[BANK0 ] unsigned char [6]
 18579 ;;  t32             4    0        long 
 18580 ;;  fps             2   50[BANK0 ] PTR struct .
 18581 ;;		 -> stSysData(240), 
 18582 ;;  t8              1   53[BANK0 ] unsigned char 
 18583 ;;  type            1   52[BANK0 ] unsigned char 
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      void 
 18586 ;; Registers used:
 18587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18588 ;; Tracked objects:
 18589 ;;		On entry : 0/0
 18590 ;;		On exit  : 0/0
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18594 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18596 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18597 ;;Total ram usage:       12 bytes
 18598 ;; Hardware stack levels used:    1
 18599 ;; Hardware stack levels required when called:   10
 18600 ;; This function calls:
 18601 ;;		_lcd_disp_all
 18602 ;;		_lcd_disp_logo
 18603 ;;		_lcd_disp_unit_2nd_m
 18604 ;;		_lcd_disp_unit_mpa
 18605 ;;		_m_mem_cpy
 18606 ;;		_ui_disp_adj_xfloat_pt
 18607 ;; This function is called by:
 18608 ;;		_ui_disp_menu
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612                           	psect	text99
 18613  005ECA                     __ptext99:
 18614                           	opt stack 0
 18615  005ECA                     _ui_disp_menu_warn_v_adj:
 18616                           	opt stack 18
 18617                           
 18618                           ;ui.c: 662: uint8_t buf[6];
 18619                           ;ui.c: 663: uint8_t t8,type;
 18620                           ;ui.c: 664: int32_t t32 ;
 18621                           ;ui.c: 665: lcd_disp_all(0x00);;
 18622                           
 18623                           ;incstack = 0
 18624  005ECA  0E00               	movlw	0
 18625  005ECC  EC90  F04B         	call	_lcd_disp_all
 18626                           
 18627                           ;ui.c: 666: lcd_disp_logo(1);
 18628  005ED0  0E01               	movlw	1
 18629  005ED2  EC78  F04B         	call	_lcd_disp_logo
 18630                           
 18631                           ;ui.c: 667: t8=subMenu;
 18632  005ED6  C032  F095         	movff	_subMenu,ui_disp_menu_warn_v_adj@t8	;volatile
 18633                           
 18634                           ;ui.c: 668: if(t8>7)return;
 18635  005EDA  0E07               	movlw	7
 18636  005EDC  0100               	movlb	0	; () banked
 18637  005EDE  6595               	cpfsgt	ui_disp_menu_warn_v_adj@t8& (0+255),b
 18638  005EE0  D001               	goto	l16284
 18639  005EE2  0012               	return	
 18640  005EE4                     l16284:
 18641                           
 18642                           ; BSR set to: 0
 18643                           ;ui.c: 670: st_sysDataDef* fps= &stSysData;
 18644  005EE4  0E00               	movlw	low _stSysData
 18645  005EE6  0100               	movlb	0	; () banked
 18646  005EE8  6F92               	movwf	ui_disp_menu_warn_v_adj@fps& (0+255),b
 18647  005EEA  0E02               	movlw	high _stSysData
 18648  005EEC  0100               	movlb	0	; () banked
 18649  005EEE  6F93               	movwf	(ui_disp_menu_warn_v_adj@fps+1)& (0+255),b
 18650                           
 18651                           ;ui.c: 684: t8=subMenu>>1;
 18652  005EF0  90D8               	bcf	status,0,c
 18653  005EF2  3032               	rrcf	_subMenu,w,c	;volatile
 18654  005EF4  0100               	movlb	0	; () banked
 18655  005EF6  6F95               	movwf	ui_disp_menu_warn_v_adj@t8& (0+255),b
 18656                           
 18657                           ;ui.c: 686: buf[3]='0'+t8;
 18658  005EF8  0100               	movlb	0	; () banked
 18659  005EFA  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18660  005EFC  0F30               	addlw	48
 18661  005EFE  0100               	movlb	0	; () banked
 18662  005F00  6F8F               	movwf	(ui_disp_menu_warn_v_adj@buf+3)& (0+255),b
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;ui.c: 687: type=fps->diffPressureWarnSet[t8].type;
 18666  005F02  0100               	movlb	0	; () banked
 18667  005F04  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18668  005F06  0D0C               	mullw	12
 18669  005F08  0E3C               	movlw	60
 18670  005F0A  26F3               	addwf	prodl,f,c
 18671  005F0C  0E00               	movlw	0
 18672  005F0E  22F4               	addwfc	prodh,f,c
 18673  005F10  C092  F08A         	movff	ui_disp_menu_warn_v_adj@fps,??_ui_disp_menu_warn_v_adj
 18674  005F14  C093  F08B         	movff	ui_disp_menu_warn_v_adj@fps+1,??_ui_disp_menu_warn_v_adj+1
 18675  005F18  50F3               	movf	prodl,w,c
 18676  005F1A  0100               	movlb	0	; () banked
 18677  005F1C  278A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),f,b
 18678  005F1E  50F4               	movf	prodh,w,c
 18679  005F20  0100               	movlb	0	; () banked
 18680  005F22  238B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),f,b
 18681  005F24  0E08               	movlw	8
 18682  005F26  0100               	movlb	0	; () banked
 18683  005F28  258A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),w,b
 18684  005F2A  6ED9               	movwf	fsr2l,c
 18685  005F2C  0E00               	movlw	0
 18686  005F2E  0100               	movlb	0	; () banked
 18687  005F30  218B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),w,b
 18688  005F32  6EDA               	movwf	fsr2h,c
 18689  005F34  50DF               	movf	indf2,w,c
 18690  005F36  0100               	movlb	0	; () banked
 18691  005F38  6F94               	movwf	ui_disp_menu_warn_v_adj@type& (0+255),b
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;ui.c: 688: m_mem_cpy(buf,(uint8_t*)" al0");
 18695  005F3A  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18696  005F3C  0100               	movlb	0	; () banked
 18697  005F3E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18698  005F40  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18699  005F42  0100               	movlb	0	; () banked
 18700  005F44  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18701  005F46  0E95               	movlw	low STR_22
 18702  005F48  0100               	movlb	0	; () banked
 18703  005F4A  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18704  005F4C  0EF3               	movlw	high STR_22
 18705  005F4E  0100               	movlb	0	; () banked
 18706  005F50  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18707  005F52  ECA9  F042         	call	_m_mem_cpy	;wreg free
 18708                           
 18709                           ;ui.c: 689: buf[3]='0'+t8;
 18710  005F56  0100               	movlb	0	; () banked
 18711  005F58  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18712  005F5A  0F30               	addlw	48
 18713  005F5C  0100               	movlb	0	; () banked
 18714  005F5E  6F8F               	movwf	(ui_disp_menu_warn_v_adj@buf+3)& (0+255),b
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;ui.c: 690: if(subMenu & 0x01){
 18718  005F60  A032               	btfss	_subMenu,0,c	;volatile
 18719  005F62  D003               	goto	l964
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;ui.c: 692: buf[2]='H';
 18723  005F64  0E48               	movlw	72
 18724  005F66  0100               	movlb	0	; () banked
 18725  005F68  6F8E               	movwf	(ui_disp_menu_warn_v_adj@buf+2)& (0+255),b
 18726  005F6A                     l964:
 18727                           
 18728                           ; BSR set to: 0
 18729                           ;ui.c: 693: }
 18730                           ;ui.c: 695: if(type == HIGHT_HI || type== HIGHT_LO){
 18731  005F6A  0100               	movlb	0	; () banked
 18732  005F6C  5194               	movf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18733  005F6E  0100               	movlb	0	; () banked
 18734  005F70  B4D8               	btfsc	status,2,c
 18735  005F72  D004               	goto	l16298
 18736                           
 18737                           ; BSR set to: 0
 18738  005F74  0100               	movlb	0	; () banked
 18739  005F76  0594               	decf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18740  005F78  A4D8               	btfss	status,2,c
 18741  005F7A  D004               	goto	l16300
 18742  005F7C                     l16298:
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;ui.c: 696: lcd_disp_unit_2nd_m(1);
 18746  005F7C  0E01               	movlw	1
 18747  005F7E  ECAF  F043         	call	_lcd_disp_unit_2nd_m
 18748                           
 18749                           ;ui.c: 697: }else{
 18750  005F82  D003               	goto	l16302
 18751  005F84                     l16300:
 18752                           
 18753                           ;ui.c: 698: lcd_disp_unit_mpa(1);
 18754  005F84  0E01               	movlw	1
 18755  005F86  EC7C  F043         	call	_lcd_disp_unit_mpa
 18756  005F8A                     l16302:
 18757                           
 18758                           ;ui.c: 699: }
 18759                           ;ui.c: 700: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 18760  005F8A  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18761  005F8C  0100               	movlb	0	; () banked
 18762  005F8E  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 18763  005F90  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18764  005F92  0100               	movlb	0	; () banked
 18765  005F94  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 18766  005F96  0E35               	movlw	low _m_floatAdj
 18767  005F98  0100               	movlb	0	; () banked
 18768  005F9A  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 18769  005F9C  0E00               	movlw	high _m_floatAdj
 18770  005F9E  0100               	movlb	0	; () banked
 18771  005FA0  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 18772  005FA2  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 18773  005FA6  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 18774  005FAA  0012               	return		;funcret
 18775  005FAC                     __end_of_ui_disp_menu_warn_v_adj:
 18776                           	opt stack 0
 18777                           tosu	equ	0xFFF
 18778                           tosh	equ	0xFFE
 18779                           tosl	equ	0xFFD
 18780                           pclath	equ	0xFFA
 18781                           tblptru	equ	0xFF8
 18782                           tblptrh	equ	0xFF7
 18783                           tblptrl	equ	0xFF6
 18784                           tablat	equ	0xFF5
 18785                           prodh	equ	0xFF4
 18786                           prodl	equ	0xFF3
 18787                           intcon	equ	0xFF2
 18788                           postinc0	equ	0xFEE
 18789                           wreg	equ	0xFE8
 18790                           indf1	equ	0xFE7
 18791                           postinc1	equ	0xFE6
 18792                           postdec1	equ	0xFE5
 18793                           plusw1	equ	0xFE3
 18794                           fsr1h	equ	0xFE2
 18795                           fsr1l	equ	0xFE1
 18796                           indf2	equ	0xFDF
 18797                           postinc2	equ	0xFDE
 18798                           postdec2	equ	0xFDD
 18799                           plusw2	equ	0xFDB
 18800                           fsr2h	equ	0xFDA
 18801                           fsr2l	equ	0xFD9
 18802                           status	equ	0xFD8
 18803                           
 18804 ;; *************** function _lcd_disp_unit_mpa *****************
 18805 ;; Defined at:
 18806 ;;		line 465 in file "src/driver/lcd.c"
 18807 ;; Parameters:    Size  Location     Type
 18808 ;;  show            1    wreg     unsigned char 
 18809 ;; Auto vars:     Size  Location     Type
 18810 ;;  show            1   31[COMRAM] unsigned char 
 18811 ;; Return value:  Size  Location     Type
 18812 ;;                  1    wreg      void 
 18813 ;; Registers used:
 18814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18815 ;; Tracked objects:
 18816 ;;		On entry : 0/0
 18817 ;;		On exit  : 0/0
 18818 ;;		Unchanged: 0/0
 18819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18824 ;;Total ram usage:        1 bytes
 18825 ;; Hardware stack levels used:    1
 18826 ;; Hardware stack levels required when called:    6
 18827 ;; This function calls:
 18828 ;;		_lcd_set_com_seg
 18829 ;; This function is called by:
 18830 ;;		_ui_disp_menu_warn_v_adj
 18831 ;;		_ui_disp_menu_home
 18832 ;; This function uses a non-reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text100
 18836  0086F8                     __ptext100:
 18837                           	opt stack 0
 18838  0086F8                     _lcd_disp_unit_mpa:
 18839                           	opt stack 21
 18840                           
 18841                           ;incstack = 0
 18842                           ;lcd_disp_unit_mpa@show stored from wreg
 18843  0086F8  6E20               	movwf	lcd_disp_unit_mpa@show,c
 18844                           
 18845                           ;lcd.c: 468: lcd_set_com_seg(3,13,0);
 18846  0086FA  0E0D               	movlw	13
 18847  0086FC  0100               	movlb	0	; () banked
 18848  0086FE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18849  008700  0E00               	movlw	0
 18850  008702  0100               	movlb	0	; () banked
 18851  008704  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18852  008706  0E03               	movlw	3
 18853  008708  EC1C  F033         	call	_lcd_set_com_seg
 18854                           
 18855                           ;lcd.c: 469: lcd_set_com_seg(1,41,0);
 18856  00870C  0E29               	movlw	41
 18857  00870E  0100               	movlb	0	; () banked
 18858  008710  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18859  008712  0E00               	movlw	0
 18860  008714  0100               	movlb	0	; () banked
 18861  008716  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18862  008718  0E01               	movlw	1
 18863  00871A  EC1C  F033         	call	_lcd_set_com_seg
 18864                           
 18865                           ;lcd.c: 470: lcd_set_com_seg(0,41,0);
 18866  00871E  0E29               	movlw	41
 18867  008720  0100               	movlb	0	; () banked
 18868  008722  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18869  008724  0E00               	movlw	0
 18870  008726  0100               	movlb	0	; () banked
 18871  008728  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18872  00872A  0E00               	movlw	0
 18873  00872C  EC1C  F033         	call	_lcd_set_com_seg
 18874                           
 18875                           ;lcd.c: 471: if(show){
 18876  008730  5020               	movf	lcd_disp_unit_mpa@show,w,c
 18877  008732  B4D8               	btfsc	status,2,c
 18878  008734  D00A               	goto	l15406
 18879                           
 18880                           ;lcd.c: 472: lcd_set_com_seg(0,40,1);
 18881  008736  0E28               	movlw	40
 18882  008738  0100               	movlb	0	; () banked
 18883  00873A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18884  00873C  0E01               	movlw	1
 18885  00873E  0100               	movlb	0	; () banked
 18886  008740  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18887  008742  0E00               	movlw	0
 18888  008744  EC1C  F033         	call	_lcd_set_com_seg
 18889                           
 18890                           ;lcd.c: 473: }else{
 18891  008748  0012               	return	
 18892  00874A                     l15406:
 18893                           
 18894                           ;lcd.c: 474: lcd_set_com_seg(0,40,0);
 18895  00874A  0E28               	movlw	40
 18896  00874C  0100               	movlb	0	; () banked
 18897  00874E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18898  008750  0E00               	movlw	0
 18899  008752  0100               	movlb	0	; () banked
 18900  008754  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18901  008756  0E00               	movlw	0
 18902  008758  EC1C  F033         	call	_lcd_set_com_seg
 18903  00875C  0012               	return	
 18904  00875E                     __end_of_lcd_disp_unit_mpa:
 18905                           	opt stack 0
 18906                           tosu	equ	0xFFF
 18907                           tosh	equ	0xFFE
 18908                           tosl	equ	0xFFD
 18909                           pclath	equ	0xFFA
 18910                           tblptru	equ	0xFF8
 18911                           tblptrh	equ	0xFF7
 18912                           tblptrl	equ	0xFF6
 18913                           tablat	equ	0xFF5
 18914                           prodh	equ	0xFF4
 18915                           prodl	equ	0xFF3
 18916                           intcon	equ	0xFF2
 18917                           postinc0	equ	0xFEE
 18918                           wreg	equ	0xFE8
 18919                           indf1	equ	0xFE7
 18920                           postinc1	equ	0xFE6
 18921                           postdec1	equ	0xFE5
 18922                           plusw1	equ	0xFE3
 18923                           fsr1h	equ	0xFE2
 18924                           fsr1l	equ	0xFE1
 18925                           indf2	equ	0xFDF
 18926                           postinc2	equ	0xFDE
 18927                           postdec2	equ	0xFDD
 18928                           plusw2	equ	0xFDB
 18929                           fsr2h	equ	0xFDA
 18930                           fsr2l	equ	0xFD9
 18931                           status	equ	0xFD8
 18932                           
 18933 ;; *************** function _lcd_disp_unit_2nd_m *****************
 18934 ;; Defined at:
 18935 ;;		line 437 in file "src/driver/lcd.c"
 18936 ;; Parameters:    Size  Location     Type
 18937 ;;  show            1    wreg     unsigned char 
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;  show            1   31[COMRAM] unsigned char 
 18940 ;; Return value:  Size  Location     Type
 18941 ;;                  1    wreg      void 
 18942 ;; Registers used:
 18943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18953 ;;Total ram usage:        1 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:    6
 18956 ;; This function calls:
 18957 ;;		_lcd_set_com_seg
 18958 ;; This function is called by:
 18959 ;;		_ui_disp_menu_warn_v_adj
 18960 ;;		_ui_disp_menu_home
 18961 ;; This function uses a non-reentrant model
 18962 ;;
 18963                           
 18964                           	psect	text101
 18965  00875E                     __ptext101:
 18966                           	opt stack 0
 18967  00875E                     _lcd_disp_unit_2nd_m:
 18968                           	opt stack 21
 18969                           
 18970                           ;incstack = 0
 18971                           ;lcd_disp_unit_2nd_m@show stored from wreg
 18972  00875E  6E20               	movwf	lcd_disp_unit_2nd_m@show,c
 18973                           
 18974                           ;lcd.c: 440: lcd_set_com_seg(0,40,0);
 18975  008760  0E28               	movlw	40
 18976  008762  0100               	movlb	0	; () banked
 18977  008764  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18978  008766  0E00               	movlw	0
 18979  008768  0100               	movlb	0	; () banked
 18980  00876A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18981  00876C  0E00               	movlw	0
 18982  00876E  EC1C  F033         	call	_lcd_set_com_seg
 18983                           
 18984                           ;lcd.c: 441: lcd_set_com_seg(1,41,0);
 18985  008772  0E29               	movlw	41
 18986  008774  0100               	movlb	0	; () banked
 18987  008776  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18988  008778  0E00               	movlw	0
 18989  00877A  0100               	movlb	0	; () banked
 18990  00877C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 18991  00877E  0E01               	movlw	1
 18992  008780  EC1C  F033         	call	_lcd_set_com_seg
 18993                           
 18994                           ;lcd.c: 442: lcd_set_com_seg(3,13,0);
 18995  008784  0E0D               	movlw	13
 18996  008786  0100               	movlb	0	; () banked
 18997  008788  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 18998  00878A  0E00               	movlw	0
 18999  00878C  0100               	movlb	0	; () banked
 19000  00878E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 19001  008790  0E03               	movlw	3
 19002  008792  EC1C  F033         	call	_lcd_set_com_seg
 19003                           
 19004                           ;lcd.c: 443: if(show)
 19005  008796  5020               	movf	lcd_disp_unit_2nd_m@show,w,c
 19006  008798  B4D8               	btfsc	status,2,c
 19007  00879A  D00A               	goto	l15414
 19008                           
 19009                           ;lcd.c: 444: lcd_set_com_seg(0,41,1);
 19010  00879C  0E29               	movlw	41
 19011  00879E  0100               	movlb	0	; () banked
 19012  0087A0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 19013  0087A2  0E01               	movlw	1
 19014  0087A4  0100               	movlb	0	; () banked
 19015  0087A6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 19016  0087A8  0E00               	movlw	0
 19017  0087AA  EC1C  F033         	call	_lcd_set_com_seg
 19018  0087AE  0012               	return	
 19019  0087B0                     l15414:
 19020                           
 19021                           ;lcd.c: 445: else
 19022                           ;lcd.c: 446: lcd_set_com_seg(0,41,0);
 19023  0087B0  0E29               	movlw	41
 19024  0087B2  0100               	movlb	0	; () banked
 19025  0087B4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 19026  0087B6  0E00               	movlw	0
 19027  0087B8  0100               	movlb	0	; () banked
 19028  0087BA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 19029  0087BC  0E00               	movlw	0
 19030  0087BE  EC1C  F033         	call	_lcd_set_com_seg
 19031  0087C2  0012               	return	
 19032  0087C4                     __end_of_lcd_disp_unit_2nd_m:
 19033                           	opt stack 0
 19034                           tosu	equ	0xFFF
 19035                           tosh	equ	0xFFE
 19036                           tosl	equ	0xFFD
 19037                           pclath	equ	0xFFA
 19038                           tblptru	equ	0xFF8
 19039                           tblptrh	equ	0xFF7
 19040                           tblptrl	equ	0xFF6
 19041                           tablat	equ	0xFF5
 19042                           prodh	equ	0xFF4
 19043                           prodl	equ	0xFF3
 19044                           intcon	equ	0xFF2
 19045                           postinc0	equ	0xFEE
 19046                           wreg	equ	0xFE8
 19047                           indf1	equ	0xFE7
 19048                           postinc1	equ	0xFE6
 19049                           postdec1	equ	0xFE5
 19050                           plusw1	equ	0xFE3
 19051                           fsr1h	equ	0xFE2
 19052                           fsr1l	equ	0xFE1
 19053                           indf2	equ	0xFDF
 19054                           postinc2	equ	0xFDE
 19055                           postdec2	equ	0xFDD
 19056                           plusw2	equ	0xFDB
 19057                           fsr2h	equ	0xFDA
 19058                           fsr2l	equ	0xFD9
 19059                           status	equ	0xFD8
 19060                           
 19061 ;; *************** function _ui_disp_menu_warn_t_adj *****************
 19062 ;; Defined at:
 19063 ;;		line 631 in file "src/api/ui.c"
 19064 ;; Parameters:    Size  Location     Type
 19065 ;;		None
 19066 ;; Auto vars:     Size  Location     Type
 19067 ;;  buf             6   23[BANK0 ] unsigned char [6]
 19068 ;;  p               2   30[BANK0 ] PTR unsigned char 
 19069 ;;		 -> adjValue(4), 
 19070 ;;  t8              1   29[BANK0 ] unsigned char 
 19071 ;; Return value:  Size  Location     Type
 19072 ;;                  1    wreg      void 
 19073 ;; Registers used:
 19074 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19075 ;; Tracked objects:
 19076 ;;		On entry : 0/0
 19077 ;;		On exit  : 0/0
 19078 ;;		Unchanged: 0/0
 19079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19081 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19084 ;;Total ram usage:       10 bytes
 19085 ;; Hardware stack levels used:    1
 19086 ;; Hardware stack levels required when called:    9
 19087 ;; This function calls:
 19088 ;;		_lcd_disp_all
 19089 ;;		_lcd_disp_logo
 19090 ;;		_lcd_disp_refresh
 19091 ;;		_lcd_show_string_l0
 19092 ;;		_lcd_show_string_l1
 19093 ;;		_m_mem_cpy
 19094 ;; This function is called by:
 19095 ;;		_ui_disp_menu
 19096 ;; This function uses a non-reentrant model
 19097 ;;
 19098                           
 19099                           	psect	text102
 19100  004DD2                     __ptext102:
 19101                           	opt stack 0
 19102  004DD2                     _ui_disp_menu_warn_t_adj:
 19103                           	opt stack 19
 19104                           
 19105                           ;ui.c: 633: uint8_t buf[6];
 19106                           ;ui.c: 634: uint8_t t8;
 19107                           ;ui.c: 635: lcd_disp_all(0x00);;
 19108                           
 19109                           ;incstack = 0
 19110  004DD2  0E00               	movlw	0
 19111  004DD4  EC90  F04B         	call	_lcd_disp_all
 19112                           
 19113                           ;ui.c: 636: lcd_disp_logo(1);
 19114  004DD8  0E01               	movlw	1
 19115  004DDA  EC78  F04B         	call	_lcd_disp_logo
 19116                           
 19117                           ;ui.c: 637: t8=subMenu;
 19118  004DDE  C032  F07D         	movff	_subMenu,ui_disp_menu_warn_t_adj@t8	;volatile
 19119                           
 19120                           ;ui.c: 638: if(t8>3)return;
 19121  004DE2  0E03               	movlw	3
 19122  004DE4  0100               	movlb	0	; () banked
 19123  004DE6  657D               	cpfsgt	ui_disp_menu_warn_t_adj@t8& (0+255),b
 19124  004DE8  D001               	goto	l16248
 19125  004DEA  0012               	return	
 19126  004DEC                     l16248:
 19127                           
 19128                           ; BSR set to: 0
 19129                           ;ui.c: 640: m_mem_cpy(buf,(uint8_t*)"alt0");
 19130  004DEC  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19131  004DEE  0100               	movlb	0	; () banked
 19132  004DF0  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19133  004DF2  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19134  004DF4  0100               	movlb	0	; () banked
 19135  004DF6  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19136  004DF8  0E9A               	movlw	low STR_16
 19137  004DFA  0100               	movlb	0	; () banked
 19138  004DFC  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19139  004DFE  0EF3               	movlw	high STR_16
 19140  004E00  0100               	movlb	0	; () banked
 19141  004E02  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19142  004E04  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19143                           
 19144                           ;ui.c: 641: buf[3]='0'+t8;
 19145  004E08  0100               	movlb	0	; () banked
 19146  004E0A  517D               	movf	ui_disp_menu_warn_t_adj@t8& (0+255),w,b
 19147  004E0C  0F30               	addlw	48
 19148  004E0E  0100               	movlb	0	; () banked
 19149  004E10  6F7A               	movwf	(ui_disp_menu_warn_t_adj@buf+3)& (0+255),b
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;ui.c: 643: lcd_show_string_l0(buf);
 19153  004E12  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19154  004E14  0100               	movlb	0	; () banked
 19155  004E16  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 19156  004E18  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19157  004E1A  0100               	movlb	0	; () banked
 19158  004E1C  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 19159  004E1E  EC05  F042         	call	_lcd_show_string_l0	;wreg free
 19160                           
 19161                           ;ui.c: 644: uint8_t* p=(uint8_t*)(&adjValue);
 19162  004E22  0E39               	movlw	low _adjValue
 19163  004E24  0100               	movlb	0	; () banked
 19164  004E26  6F7E               	movwf	ui_disp_menu_warn_t_adj@p& (0+255),b
 19165  004E28  0E00               	movlw	high _adjValue
 19166  004E2A  0100               	movlb	0	; () banked
 19167  004E2C  6F7F               	movwf	(ui_disp_menu_warn_t_adj@p+1)& (0+255),b
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;ui.c: 645: m_mem_cpy(buf,(uint8_t*)"    ");
 19171  004E2E  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19172  004E30  0100               	movlb	0	; () banked
 19173  004E32  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19174  004E34  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19175  004E36  0100               	movlb	0	; () banked
 19176  004E38  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19177  004E3A  0E74               	movlw	low (STR_2+4)
 19178  004E3C  0100               	movlb	0	; () banked
 19179  004E3E  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19180  004E40  0EF3               	movlw	high (STR_2+4)
 19181  004E42  0100               	movlb	0	; () banked
 19182  004E44  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19183  004E46  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19184                           
 19185                           ;ui.c: 646: if(*p==HIGHT_HI){
 19186  004E4A  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 19187  004E4E  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 19188  004E52  50DF               	movf	indf2,w,c
 19189  004E54  A4D8               	btfss	status,2,c
 19190  004E56  D00F               	goto	l16262
 19191                           
 19192                           ;ui.c: 647: m_mem_cpy(buf,(uint8_t*)" h-u");
 19193  004E58  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19194  004E5A  0100               	movlb	0	; () banked
 19195  004E5C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19196  004E5E  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19197  004E60  0100               	movlb	0	; () banked
 19198  004E62  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19199  004E64  0EF4               	movlw	low STR_18
 19200  004E66  0100               	movlb	0	; () banked
 19201  004E68  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19202  004E6A  0EF3               	movlw	high STR_18
 19203  004E6C  0100               	movlb	0	; () banked
 19204  004E6E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19205  004E70  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19206                           
 19207                           ;ui.c: 648: }else if(*p==HIGHT_LO){
 19208  004E74  D03B               	goto	l16272
 19209  004E76                     l16262:
 19210  004E76  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 19211  004E7A  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 19212  004E7E  04DE               	decf	postinc2,w,c
 19213  004E80  A4D8               	btfss	status,2,c
 19214  004E82  D00F               	goto	l16266
 19215                           
 19216                           ;ui.c: 649: m_mem_cpy(buf,(uint8_t*)" h-d");
 19217  004E84  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19218  004E86  0100               	movlb	0	; () banked
 19219  004E88  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19220  004E8A  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19221  004E8C  0100               	movlb	0	; () banked
 19222  004E8E  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19223  004E90  0EC2               	movlw	low STR_19
 19224  004E92  0100               	movlb	0	; () banked
 19225  004E94  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19226  004E96  0EF3               	movlw	high STR_19
 19227  004E98  0100               	movlb	0	; () banked
 19228  004E9A  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19229  004E9C  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19230                           
 19231                           ;ui.c: 650: }else if(*p==PRESSURE_HI){
 19232  004EA0  D025               	goto	l16272
 19233  004EA2                     l16266:
 19234  004EA2  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 19235  004EA6  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 19236  004EAA  0E02               	movlw	2
 19237  004EAC  18DE               	xorwf	postinc2,w,c
 19238  004EAE  A4D8               	btfss	status,2,c
 19239  004EB0  D00F               	goto	l16270
 19240                           
 19241                           ;ui.c: 651: m_mem_cpy(buf,(uint8_t*)" p-u");
 19242  004EB2  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19243  004EB4  0100               	movlb	0	; () banked
 19244  004EB6  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19245  004EB8  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19246  004EBA  0100               	movlb	0	; () banked
 19247  004EBC  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19248  004EBE  0EF9               	movlw	low STR_20
 19249  004EC0  0100               	movlb	0	; () banked
 19250  004EC2  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19251  004EC4  0EF3               	movlw	high STR_20
 19252  004EC6  0100               	movlb	0	; () banked
 19253  004EC8  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19254  004ECA  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19255                           
 19256                           ;ui.c: 652: }else{
 19257  004ECE  D00E               	goto	l16272
 19258  004ED0                     l16270:
 19259                           
 19260                           ;ui.c: 653: m_mem_cpy(buf,(uint8_t*)" p-d");
 19261  004ED0  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19262  004ED2  0100               	movlb	0	; () banked
 19263  004ED4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19264  004ED6  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19265  004ED8  0100               	movlb	0	; () banked
 19266  004EDA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19267  004EDC  0EC7               	movlw	low STR_21
 19268  004EDE  0100               	movlb	0	; () banked
 19269  004EE0  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19270  004EE2  0EF3               	movlw	high STR_21
 19271  004EE4  0100               	movlb	0	; () banked
 19272  004EE6  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19273  004EE8  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19274  004EEC                     l16272:
 19275                           
 19276                           ;ui.c: 654: }
 19277                           ;ui.c: 655: lcd_show_string_l1(buf);
 19278  004EEC  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 19279  004EEE  0100               	movlb	0	; () banked
 19280  004EF0  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 19281  004EF2  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 19282  004EF4  0100               	movlb	0	; () banked
 19283  004EF6  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 19284  004EF8  ECAC  F048         	call	_lcd_show_string_l1	;wreg free
 19285                           
 19286                           ;ui.c: 656: lcd_disp_refresh();
 19287  004EFC  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 19288  004F00  0012               	return		;funcret
 19289  004F02                     __end_of_ui_disp_menu_warn_t_adj:
 19290                           	opt stack 0
 19291                           tosu	equ	0xFFF
 19292                           tosh	equ	0xFFE
 19293                           tosl	equ	0xFFD
 19294                           pclath	equ	0xFFA
 19295                           tblptru	equ	0xFF8
 19296                           tblptrh	equ	0xFF7
 19297                           tblptrl	equ	0xFF6
 19298                           tablat	equ	0xFF5
 19299                           prodh	equ	0xFF4
 19300                           prodl	equ	0xFF3
 19301                           intcon	equ	0xFF2
 19302                           postinc0	equ	0xFEE
 19303                           wreg	equ	0xFE8
 19304                           indf1	equ	0xFE7
 19305                           postinc1	equ	0xFE6
 19306                           postdec1	equ	0xFE5
 19307                           plusw1	equ	0xFE3
 19308                           fsr1h	equ	0xFE2
 19309                           fsr1l	equ	0xFE1
 19310                           indf2	equ	0xFDF
 19311                           postinc2	equ	0xFDE
 19312                           postdec2	equ	0xFDD
 19313                           plusw2	equ	0xFDB
 19314                           fsr2h	equ	0xFDA
 19315                           fsr2l	equ	0xFD9
 19316                           status	equ	0xFD8
 19317                           
 19318 ;; *************** function _ui_disp_menu_psw_adj *****************
 19319 ;; Defined at:
 19320 ;;		line 353 in file "src/api/ui.c"
 19321 ;; Parameters:    Size  Location     Type
 19322 ;;		None
 19323 ;; Auto vars:     Size  Location     Type
 19324 ;;		None
 19325 ;; Return value:  Size  Location     Type
 19326 ;;                  1    wreg      void 
 19327 ;; Registers used:
 19328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19329 ;; Tracked objects:
 19330 ;;		On entry : 0/0
 19331 ;;		On exit  : 0/0
 19332 ;;		Unchanged: 0/0
 19333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19338 ;;Total ram usage:        0 bytes
 19339 ;; Hardware stack levels used:    1
 19340 ;; Hardware stack levels required when called:   11
 19341 ;; This function calls:
 19342 ;;		_lcd_disp_all
 19343 ;;		_lcd_disp_logo
 19344 ;;		_ui_disp_adj_xfixed_pt
 19345 ;; This function is called by:
 19346 ;;		_ui_disp_menu
 19347 ;; This function uses a non-reentrant model
 19348 ;;
 19349                           
 19350                           	psect	text103
 19351  00985C                     __ptext103:
 19352                           	opt stack 0
 19353  00985C                     _ui_disp_menu_psw_adj:
 19354                           	opt stack 17
 19355                           
 19356                           ;ui.c: 355: lcd_disp_all(0x00);;
 19357                           
 19358                           ;incstack = 0
 19359  00985C  0E00               	movlw	0
 19360  00985E  EC90  F04B         	call	_lcd_disp_all
 19361                           
 19362                           ;ui.c: 356: lcd_disp_logo(1);
 19363  009862  0E01               	movlw	1
 19364  009864  EC78  F04B         	call	_lcd_disp_logo
 19365                           
 19366                           ;ui.c: 357: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
 19367  009868  0ECC               	movlw	low STR_5
 19368  00986A  0100               	movlb	0	; () banked
 19369  00986C  6F76               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
 19370  00986E  0EF3               	movlw	high STR_5
 19371  009870  0100               	movlb	0	; () banked
 19372  009872  6F77               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
 19373  009874  C03D  F078         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
 19374  009878  C03E  F079         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
 19375  00987C  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
 19376  009880  ECB8  F032         	call	_ui_disp_adj_xfixed_pt	;wreg free
 19377  009884  0012               	return		;funcret
 19378  009886                     __end_of_ui_disp_menu_psw_adj:
 19379                           	opt stack 0
 19380                           tosu	equ	0xFFF
 19381                           tosh	equ	0xFFE
 19382                           tosl	equ	0xFFD
 19383                           pclath	equ	0xFFA
 19384                           tblptru	equ	0xFF8
 19385                           tblptrh	equ	0xFF7
 19386                           tblptrl	equ	0xFF6
 19387                           tablat	equ	0xFF5
 19388                           prodh	equ	0xFF4
 19389                           prodl	equ	0xFF3
 19390                           intcon	equ	0xFF2
 19391                           postinc0	equ	0xFEE
 19392                           wreg	equ	0xFE8
 19393                           indf1	equ	0xFE7
 19394                           postinc1	equ	0xFE6
 19395                           postdec1	equ	0xFE5
 19396                           plusw1	equ	0xFE3
 19397                           fsr1h	equ	0xFE2
 19398                           fsr1l	equ	0xFE1
 19399                           indf2	equ	0xFDF
 19400                           postinc2	equ	0xFDE
 19401                           postdec2	equ	0xFDD
 19402                           plusw2	equ	0xFDB
 19403                           fsr2h	equ	0xFDA
 19404                           fsr2l	equ	0xFD9
 19405                           status	equ	0xFD8
 19406                           
 19407 ;; *************** function _ui_disp_adj_xfixed_pt *****************
 19408 ;; Defined at:
 19409 ;;		line 291 in file "src/api/ui.c"
 19410 ;; Parameters:    Size  Location     Type
 19411 ;;  str             2   22[BANK0 ] PTR unsigned char 
 19412 ;;		 -> STR_5(5), 
 19413 ;;  x               2   24[BANK0 ] unsigned int 
 19414 ;;  loc             1   26[BANK0 ] unsigned char 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;  buf            10   29[BANK0 ] unsigned char [10]
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19426 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19427 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19429 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19430 ;;Total ram usage:       17 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:   10
 19433 ;; This function calls:
 19434 ;;		___x_arrange_str
 19435 ;;		_lcd_disp_refresh
 19436 ;;		_lcd_show_string
 19437 ;;		_m_int16_2_str_4
 19438 ;;		_m_mem_cpy
 19439 ;;		_ui_disp_clear_num_dp
 19440 ;; This function is called by:
 19441 ;;		_ui_disp_menu_psw_adj
 19442 ;; This function uses a non-reentrant model
 19443 ;;
 19444                           
 19445                           	psect	text104
 19446  006570                     __ptext104:
 19447                           	opt stack 0
 19448  006570                     _ui_disp_adj_xfixed_pt:
 19449                           	opt stack 17
 19450                           
 19451                           ;ui.c: 293: uint8_t buf[10];
 19452                           ;ui.c: 294: ui_disp_clear_num_dp();
 19453                           
 19454                           ;incstack = 0
 19455  006570  EC52  F046         	call	_ui_disp_clear_num_dp	;wreg free
 19456                           
 19457                           ;ui.c: 295: if(x>9999)x=9999;
 19458  006574  0E10               	movlw	16
 19459  006576  0100               	movlb	0	; () banked
 19460  006578  5D78               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
 19461  00657A  0E27               	movlw	39
 19462  00657C  0100               	movlb	0	; () banked
 19463  00657E  5979               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
 19464  006580  A0D8               	btfss	status,0,c
 19465  006582  D005               	goto	l15280
 19466                           
 19467                           ; BSR set to: 0
 19468  006584  0E27               	movlw	39
 19469  006586  0100               	movlb	0	; () banked
 19470  006588  6F79               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
 19471  00658A  0E0F               	movlw	15
 19472  00658C  6F78               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
 19473  00658E                     l15280:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;ui.c: 296: m_mem_cpy(buf,str);
 19477  00658E  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 19478  006590  0100               	movlb	0	; () banked
 19479  006592  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19480  006594  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 19481  006596  0100               	movlb	0	; () banked
 19482  006598  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19483  00659A  C076  F062         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
 19484  00659E  C077  F063         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
 19485  0065A2  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19486                           
 19487                           ;ui.c: 297: m_int16_2_str_4(buf+4,x);
 19488  0065A6  0E81               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
 19489  0065A8  0100               	movlb	0	; () banked
 19490  0065AA  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 19491  0065AC  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
 19492  0065AE  0100               	movlb	0	; () banked
 19493  0065B0  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 19494  0065B2  C078  F06A         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
 19495  0065B6  C079  F06B         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
 19496  0065BA  EC59  F024         	call	_m_int16_2_str_4	;wreg free
 19497                           
 19498                           ;ui.c: 298: __x_arrange_str(buf,8);
 19499  0065BE  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 19500  0065C0  0100               	movlb	0	; () banked
 19501  0065C2  6F60               	movwf	___x_arrange_str@str& (0+255),b
 19502  0065C4  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 19503  0065C6  0100               	movlb	0	; () banked
 19504  0065C8  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 19505  0065CA  0E08               	movlw	8
 19506  0065CC  0100               	movlb	0	; () banked
 19507  0065CE  6F62               	movwf	___x_arrange_str@len& (0+255),b
 19508  0065D0  EC9A  F045         	call	___x_arrange_str	;wreg free
 19509                           
 19510                           ;ui.c: 299: if(loc>3)loc=3;
 19511  0065D4  0E03               	movlw	3
 19512  0065D6  0100               	movlb	0	; () banked
 19513  0065D8  657A               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
 19514  0065DA  D003               	goto	l15290
 19515                           
 19516                           ; BSR set to: 0
 19517  0065DC  0E03               	movlw	3
 19518  0065DE  0100               	movlb	0	; () banked
 19519  0065E0  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 19520  0065E2                     l15290:
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;ui.c: 300: loc=3-loc;
 19524  0065E2  0100               	movlb	0	; () banked
 19525  0065E4  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 19526  0065E6  0800               	sublw	0
 19527  0065E8  0F03               	addlw	3
 19528  0065EA  0100               	movlb	0	; () banked
 19529  0065EC  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 19530                           
 19531                           ; BSR set to: 0
 19532                           ;ui.c: 301: if(!(lcdTwinkle>0)){
 19533  0065EE  5034               	movf	_lcdTwinkle,w,c
 19534  0065F0  A4D8               	btfss	status,2,c
 19535  0065F2  D017               	goto	l15298
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;ui.c: 302: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 19539  0065F4  010F               	movlb	15	; () banked
 19540  0065F6  B75F               	btfsc	95,3,b	;volatile
 19541  0065F8  D014               	goto	l15298
 19542                           
 19543                           ; BSR set to: 15
 19544  0065FA  0100               	movlb	0	; () banked
 19545  0065FC  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 19546  0065FE  0100               	movlb	0	; () banked
 19547  006600  6F7B               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
 19548  006602  6B7C               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
 19549  006604  0E04               	movlw	4
 19550  006606  0100               	movlb	0	; () banked
 19551  006608  277B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
 19552  00660A  0E00               	movlw	0
 19553  00660C  237C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
 19554  00660E  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 19555  006610  0100               	movlb	0	; () banked
 19556  006612  257B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
 19557  006614  6ED9               	movwf	fsr2l,c
 19558  006616  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 19559  006618  0100               	movlb	0	; () banked
 19560  00661A  217C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
 19561  00661C  6EDA               	movwf	fsr2h,c
 19562  00661E  0E20               	movlw	32
 19563  006620  6EDF               	movwf	indf2,c
 19564  006622                     l15298:
 19565                           
 19566                           ;ui.c: 303: }
 19567                           ;ui.c: 304: lcd_show_string(buf);
 19568  006622  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 19569  006624  0100               	movlb	0	; () banked
 19570  006626  6F73               	movwf	lcd_show_string@str& (0+255),b
 19571  006628  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 19572  00662A  0100               	movlb	0	; () banked
 19573  00662C  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 19574  00662E  EC3C  F042         	call	_lcd_show_string	;wreg free
 19575                           
 19576                           ;ui.c: 305: lcd_disp_refresh();
 19577  006632  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 19578  006636  0012               	return		;funcret
 19579  006638                     __end_of_ui_disp_adj_xfixed_pt:
 19580                           	opt stack 0
 19581                           tosu	equ	0xFFF
 19582                           tosh	equ	0xFFE
 19583                           tosl	equ	0xFFD
 19584                           pclath	equ	0xFFA
 19585                           tblptru	equ	0xFF8
 19586                           tblptrh	equ	0xFF7
 19587                           tblptrl	equ	0xFF6
 19588                           tablat	equ	0xFF5
 19589                           prodh	equ	0xFF4
 19590                           prodl	equ	0xFF3
 19591                           intcon	equ	0xFF2
 19592                           postinc0	equ	0xFEE
 19593                           wreg	equ	0xFE8
 19594                           indf1	equ	0xFE7
 19595                           postinc1	equ	0xFE6
 19596                           postdec1	equ	0xFE5
 19597                           plusw1	equ	0xFE3
 19598                           fsr1h	equ	0xFE2
 19599                           fsr1l	equ	0xFE1
 19600                           indf2	equ	0xFDF
 19601                           postinc2	equ	0xFDE
 19602                           postdec2	equ	0xFDD
 19603                           plusw2	equ	0xFDB
 19604                           fsr2h	equ	0xFDA
 19605                           fsr2l	equ	0xFD9
 19606                           status	equ	0xFD8
 19607                           
 19608 ;; *************** function _ui_disp_menu_pose_size *****************
 19609 ;; Defined at:
 19610 ;;		line 542 in file "src/api/ui.c"
 19611 ;; Parameters:    Size  Location     Type
 19612 ;;		None
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;		None
 19615 ;; Return value:  Size  Location     Type
 19616 ;;                  1    wreg      void 
 19617 ;; Registers used:
 19618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19619 ;; Tracked objects:
 19620 ;;		On entry : 0/0
 19621 ;;		On exit  : 0/0
 19622 ;;		Unchanged: 0/0
 19623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19628 ;;Total ram usage:        0 bytes
 19629 ;; Hardware stack levels used:    1
 19630 ;; Hardware stack levels required when called:   11
 19631 ;; This function calls:
 19632 ;;		_ui_disp_menu_d_adj
 19633 ;;		_ui_disp_menu_h_adj
 19634 ;;		_ui_disp_menu_pos_adj
 19635 ;; This function is called by:
 19636 ;;		_ui_disp_menu
 19637 ;; This function uses a non-reentrant model
 19638 ;;
 19639                           
 19640                           	psect	text105
 19641  009886                     __ptext105:
 19642                           	opt stack 0
 19643  009886                     _ui_disp_menu_pose_size:
 19644                           	opt stack 17
 19645                           
 19646                           ;ui.c: 544: switch(subMenu){
 19647                           
 19648                           ;incstack = 0
 19649  009886  D009               	goto	l16146
 19650  009888                     l16138:
 19651  009888  EC48  F03D         	call	_ui_disp_menu_pos_adj	;wreg free
 19652  00988C  0012               	return	
 19653  00988E                     l16140:
 19654  00988E  ECCD  F041         	call	_ui_disp_menu_h_adj	;wreg free
 19655  009892  0012               	return	
 19656  009894                     l16142:
 19657  009894  ECBF  F04B         	call	_ui_disp_menu_d_adj	;wreg free
 19658                           
 19659                           ;ui.c: 549: }
 19660                           
 19661                           ;ui.c: 548: default:break;
 19662  009898  0012               	return	
 19663  00989A                     l16146:
 19664  00989A  5032               	movf	_subMenu,w,c	;volatile
 19665                           
 19666                           ; Switch size 1, requested type "space"
 19667                           ; Number of cases is 3, Range of values is 0 to 2
 19668                           ; switch strategies available:
 19669                           ; Name         Instructions Cycles
 19670                           ; simple_byte           10     6 (average)
 19671                           ;	Chosen strategy is simple_byte
 19672  00989C  0A00               	xorlw	0	; case 0
 19673  00989E  B4D8               	btfsc	status,2,c
 19674  0098A0  D7F3               	goto	l16138
 19675  0098A2  0A01               	xorlw	1	; case 1
 19676  0098A4  B4D8               	btfsc	status,2,c
 19677  0098A6  D7F3               	goto	l16140
 19678  0098A8  0A03               	xorlw	3	; case 2
 19679  0098AA  A4D8               	btfss	status,2,c
 19680  0098AC  0012               	return	
 19681  0098AE  D7F2               	goto	l16142
 19682  0098B0                     __end_of_ui_disp_menu_pose_size:
 19683                           	opt stack 0
 19684                           tosu	equ	0xFFF
 19685                           tosh	equ	0xFFE
 19686                           tosl	equ	0xFFD
 19687                           pclath	equ	0xFFA
 19688                           tblptru	equ	0xFF8
 19689                           tblptrh	equ	0xFF7
 19690                           tblptrl	equ	0xFF6
 19691                           tablat	equ	0xFF5
 19692                           prodh	equ	0xFF4
 19693                           prodl	equ	0xFF3
 19694                           intcon	equ	0xFF2
 19695                           postinc0	equ	0xFEE
 19696                           wreg	equ	0xFE8
 19697                           indf1	equ	0xFE7
 19698                           postinc1	equ	0xFE6
 19699                           postdec1	equ	0xFE5
 19700                           plusw1	equ	0xFE3
 19701                           fsr1h	equ	0xFE2
 19702                           fsr1l	equ	0xFE1
 19703                           indf2	equ	0xFDF
 19704                           postinc2	equ	0xFDE
 19705                           postdec2	equ	0xFDD
 19706                           plusw2	equ	0xFDB
 19707                           fsr2h	equ	0xFDA
 19708                           fsr2l	equ	0xFD9
 19709                           status	equ	0xFD8
 19710                           
 19711 ;; *************** function _ui_disp_menu_pos_adj *****************
 19712 ;; Defined at:
 19713 ;;		line 505 in file "src/api/ui.c"
 19714 ;; Parameters:    Size  Location     Type
 19715 ;;		None
 19716 ;; Auto vars:     Size  Location     Type
 19717 ;;  buf             6   24[BANK0 ] unsigned char [6]
 19718 ;;  p               2   22[BANK0 ] PTR unsigned char 
 19719 ;;		 -> adjValue(4), 
 19720 ;; Return value:  Size  Location     Type
 19721 ;;                  1    wreg      void 
 19722 ;; Registers used:
 19723 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19724 ;; Tracked objects:
 19725 ;;		On entry : 0/0
 19726 ;;		On exit  : 0/0
 19727 ;;		Unchanged: 0/0
 19728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19730 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19732 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19733 ;;Total ram usage:        8 bytes
 19734 ;; Hardware stack levels used:    1
 19735 ;; Hardware stack levels required when called:    9
 19736 ;; This function calls:
 19737 ;;		_lcd_disp_all
 19738 ;;		_lcd_disp_logo
 19739 ;;		_lcd_disp_refresh
 19740 ;;		_lcd_show_string_l0
 19741 ;;		_lcd_show_string_l1
 19742 ;;		_m_mem_cpy
 19743 ;; This function is called by:
 19744 ;;		_ui_disp_menu_pose_size
 19745 ;; This function uses a non-reentrant model
 19746 ;;
 19747                           
 19748                           	psect	text106
 19749  007A90                     __ptext106:
 19750                           	opt stack 0
 19751  007A90                     _ui_disp_menu_pos_adj:
 19752                           	opt stack 18
 19753                           
 19754                           ;ui.c: 507: uint8_t buf[6];
 19755                           ;ui.c: 508: lcd_disp_all(0x00);;
 19756                           
 19757                           ;incstack = 0
 19758  007A90  0E00               	movlw	0
 19759  007A92  EC90  F04B         	call	_lcd_disp_all
 19760                           
 19761                           ;ui.c: 509: lcd_disp_logo(1);
 19762  007A96  0E01               	movlw	1
 19763  007A98  EC78  F04B         	call	_lcd_disp_logo
 19764                           
 19765                           ;ui.c: 510: m_mem_cpy(buf,(uint8_t*)"  fs");
 19766  007A9C  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19767  007A9E  0100               	movlb	0	; () banked
 19768  007AA0  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19769  007AA2  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19770  007AA4  0100               	movlb	0	; () banked
 19771  007AA6  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19772  007AA8  0EEF               	movlw	low STR_7
 19773  007AAA  0100               	movlb	0	; () banked
 19774  007AAC  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19775  007AAE  0EF3               	movlw	high STR_7
 19776  007AB0  0100               	movlb	0	; () banked
 19777  007AB2  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19778  007AB4  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19779                           
 19780                           ;ui.c: 511: lcd_show_string_l0(buf);
 19781  007AB8  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19782  007ABA  0100               	movlb	0	; () banked
 19783  007ABC  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 19784  007ABE  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19785  007AC0  0100               	movlb	0	; () banked
 19786  007AC2  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 19787  007AC4  EC05  F042         	call	_lcd_show_string_l0	;wreg free
 19788                           
 19789                           ;ui.c: 512: uint8_t* p=(uint8_t*)(&adjValue);
 19790  007AC8  0E39               	movlw	low _adjValue
 19791  007ACA  0100               	movlb	0	; () banked
 19792  007ACC  6F76               	movwf	ui_disp_menu_pos_adj@p& (0+255),b
 19793  007ACE  0E00               	movlw	high _adjValue
 19794  007AD0  0100               	movlb	0	; () banked
 19795  007AD2  6F77               	movwf	(ui_disp_menu_pos_adj@p+1)& (0+255),b
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;ui.c: 513: m_mem_cpy(buf,(uint8_t*)"    ");
 19799  007AD4  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19800  007AD6  0100               	movlb	0	; () banked
 19801  007AD8  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19802  007ADA  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19803  007ADC  0100               	movlb	0	; () banked
 19804  007ADE  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19805  007AE0  0E74               	movlw	low (STR_2+4)
 19806  007AE2  0100               	movlb	0	; () banked
 19807  007AE4  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19808  007AE6  0EF3               	movlw	high (STR_2+4)
 19809  007AE8  0100               	movlb	0	; () banked
 19810  007AEA  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19811  007AEC  ECA9  F042         	call	_m_mem_cpy	;wreg free
 19812                           
 19813                           ;ui.c: 514: if(*p==HOTIZONTAL){
 19814  007AF0  C076  FFD9         	movff	ui_disp_menu_pos_adj@p,fsr2l
 19815  007AF4  C077  FFDA         	movff	ui_disp_menu_pos_adj@p+1,fsr2h
 19816  007AF8  50DF               	movf	indf2,w,c
 19817  007AFA  A4D8               	btfss	status,2,c
 19818  007AFC  D002               	goto	l15430
 19819                           
 19820                           ;ui.c: 515: buf[3]='l';
 19821  007AFE  0E6C               	movlw	108
 19822  007B00  D001               	goto	L20
 19823  007B02                     l15430:
 19824                           
 19825                           ;ui.c: 517: buf[3]='h';
 19826  007B02  0E68               	movlw	104
 19827  007B04                     L20:
 19828  007B04  0100               	movlb	0	; () banked
 19829  007B06  6F7B               	movwf	(ui_disp_menu_pos_adj@buf+3)& (0+255),b
 19830                           
 19831                           ; BSR set to: 0
 19832                           ;ui.c: 518: }
 19833                           ;ui.c: 519: lcd_show_string_l1(buf);
 19834                           
 19835                           ; BSR set to: 0
 19836  007B08  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19837  007B0A  0100               	movlb	0	; () banked
 19838  007B0C  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 19839  007B0E  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19840  007B10  0100               	movlb	0	; () banked
 19841  007B12  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 19842  007B14  ECAC  F048         	call	_lcd_show_string_l1	;wreg free
 19843                           
 19844                           ;ui.c: 520: lcd_disp_refresh();
 19845  007B18  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 19846  007B1C  0012               	return		;funcret
 19847  007B1E                     __end_of_ui_disp_menu_pos_adj:
 19848                           	opt stack 0
 19849                           tosu	equ	0xFFF
 19850                           tosh	equ	0xFFE
 19851                           tosl	equ	0xFFD
 19852                           pclath	equ	0xFFA
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           intcon	equ	0xFF2
 19860                           postinc0	equ	0xFEE
 19861                           wreg	equ	0xFE8
 19862                           indf1	equ	0xFE7
 19863                           postinc1	equ	0xFE6
 19864                           postdec1	equ	0xFE5
 19865                           plusw1	equ	0xFE3
 19866                           fsr1h	equ	0xFE2
 19867                           fsr1l	equ	0xFE1
 19868                           indf2	equ	0xFDF
 19869                           postinc2	equ	0xFDE
 19870                           postdec2	equ	0xFDD
 19871                           plusw2	equ	0xFDB
 19872                           fsr2h	equ	0xFDA
 19873                           fsr2l	equ	0xFD9
 19874                           status	equ	0xFD8
 19875                           
 19876 ;; *************** function _lcd_show_string_l1 *****************
 19877 ;; Defined at:
 19878 ;;		line 552 in file "src/driver/lcd.c"
 19879 ;; Parameters:    Size  Location     Type
 19880 ;;  str             2   19[BANK0 ] PTR unsigned char 
 19881 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), ui_disp_start_cs600@buf(
      +6), 
 19882 ;; Auto vars:     Size  Location     Type
 19883 ;;  t8              1   21[BANK0 ] unsigned char 
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  1    wreg      void 
 19886 ;; Registers used:
 19887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19888 ;; Tracked objects:
 19889 ;;		On entry : 0/0
 19890 ;;		On exit  : 0/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19897 ;;Total ram usage:        3 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; Hardware stack levels required when called:    8
 19900 ;; This function calls:
 19901 ;;		_lcd_show_chr
 19902 ;; This function is called by:
 19903 ;;		_ui_disp_start_cs600
 19904 ;;		_ui_disp_menu_pos_adj
 19905 ;;		_ui_disp_menu_warn_t_adj
 19906 ;;		_ui_disp_xfloat_pt
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text107
 19911  009158                     __ptext107:
 19912                           	opt stack 0
 19913  009158                     _lcd_show_string_l1:
 19914                           	opt stack 21
 19915                           
 19916                           ;lcd.c: 554: uint8_t t8=0;
 19917                           
 19918                           ;incstack = 0
 19919  009158  0E00               	movlw	0
 19920  00915A  0100               	movlb	0	; () banked
 19921  00915C  6F75               	movwf	lcd_show_string_l1@t8& (0+255),b
 19922                           
 19923                           ;lcd.c: 555: while(*str!='\0' && t8<4){
 19924  00915E  D011               	goto	l14706
 19925  009160                     l14700:
 19926                           
 19927                           ; BSR set to: 0
 19928                           ;lcd.c: 556: lcd_show_chr(t8+4,*str);
 19929  009160  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 19930  009164  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 19931  009168  50DF               	movf	indf2,w,c
 19932  00916A  0100               	movlb	0	; () banked
 19933  00916C  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 19934  00916E  0100               	movlb	0	; () banked
 19935  009170  5175               	movf	lcd_show_string_l1@t8& (0+255),w,b
 19936  009172  0F04               	addlw	4
 19937  009174  ECBC  F03A         	call	_lcd_show_chr
 19938                           
 19939                           ;lcd.c: 557: str++;
 19940  009178  0100               	movlb	0	; () banked
 19941  00917A  4B73               	infsnz	lcd_show_string_l1@str& (0+255),f,b
 19942  00917C  2B74               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
 19943                           
 19944                           ; BSR set to: 0
 19945                           ;lcd.c: 558: t8++;
 19946  00917E  0100               	movlb	0	; () banked
 19947  009180  2B75               	incf	lcd_show_string_l1@t8& (0+255),f,b
 19948  009182                     l14706:
 19949                           
 19950                           ; BSR set to: 0
 19951  009182  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 19952  009186  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 19953  00918A  50DF               	movf	indf2,w,c
 19954  00918C  B4D8               	btfsc	status,2,c
 19955  00918E  0012               	return	
 19956                           
 19957                           ; BSR set to: 0
 19958  009190  0E03               	movlw	3
 19959  009192  0100               	movlb	0	; () banked
 19960  009194  6575               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
 19961  009196  D7E4               	goto	l14700
 19962  009198  0012               	return	
 19963  00919A                     __end_of_lcd_show_string_l1:
 19964                           	opt stack 0
 19965                           tosu	equ	0xFFF
 19966                           tosh	equ	0xFFE
 19967                           tosl	equ	0xFFD
 19968                           pclath	equ	0xFFA
 19969                           tblptru	equ	0xFF8
 19970                           tblptrh	equ	0xFF7
 19971                           tblptrl	equ	0xFF6
 19972                           tablat	equ	0xFF5
 19973                           prodh	equ	0xFF4
 19974                           prodl	equ	0xFF3
 19975                           intcon	equ	0xFF2
 19976                           postinc0	equ	0xFEE
 19977                           wreg	equ	0xFE8
 19978                           indf1	equ	0xFE7
 19979                           postinc1	equ	0xFE6
 19980                           postdec1	equ	0xFE5
 19981                           plusw1	equ	0xFE3
 19982                           fsr1h	equ	0xFE2
 19983                           fsr1l	equ	0xFE1
 19984                           indf2	equ	0xFDF
 19985                           postinc2	equ	0xFDE
 19986                           postdec2	equ	0xFDD
 19987                           plusw2	equ	0xFDB
 19988                           fsr2h	equ	0xFDA
 19989                           fsr2l	equ	0xFD9
 19990                           status	equ	0xFD8
 19991                           
 19992 ;; *************** function _lcd_show_string_l0 *****************
 19993 ;; Defined at:
 19994 ;;		line 542 in file "src/driver/lcd.c"
 19995 ;; Parameters:    Size  Location     Type
 19996 ;;  str             2   19[BANK0 ] PTR unsigned char 
 19997 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), STR_1(5), 
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;  t8              1   21[BANK0 ] unsigned char 
 20000 ;; Return value:  Size  Location     Type
 20001 ;;                  1    wreg      void 
 20002 ;; Registers used:
 20003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20004 ;; Tracked objects:
 20005 ;;		On entry : 0/0
 20006 ;;		On exit  : 0/0
 20007 ;;		Unchanged: 0/0
 20008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20013 ;;Total ram usage:        3 bytes
 20014 ;; Hardware stack levels used:    1
 20015 ;; Hardware stack levels required when called:    8
 20016 ;; This function calls:
 20017 ;;		_lcd_show_chr
 20018 ;; This function is called by:
 20019 ;;		_ui_disp_start_cs600
 20020 ;;		_ui_disp_menu_pos_adj
 20021 ;;		_ui_disp_menu_warn_t_adj
 20022 ;;		_ui_disp_xfloat_pt
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text108
 20027  00840A                     __ptext108:
 20028                           	opt stack 0
 20029  00840A                     _lcd_show_string_l0:
 20030                           	opt stack 21
 20031                           
 20032                           ;lcd.c: 544: uint8_t t8=0;
 20033                           
 20034                           ; BSR set to: 0
 20035                           ;incstack = 0
 20036  00840A  0E00               	movlw	0
 20037  00840C  0100               	movlb	0	; () banked
 20038  00840E  6F75               	movwf	lcd_show_string_l0@t8& (0+255),b
 20039                           
 20040                           ;lcd.c: 545: while(*str!='\0' && t8<4){
 20041  008410  D01B               	goto	l14688
 20042  008412                     l14682:
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;lcd.c: 546: lcd_show_chr(t8,*str);
 20046  008412  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20047  008416  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20048  00841A  6AF8               	clrf	tblptru,c
 20049  00841C  0E0F               	movlw	(high __ramtop+-1)
 20050  00841E  64F7               	cpfsgt	tblptrh,c
 20051  008420  D003               	bra	u13607
 20052  008422  0008               	tblrd		*
 20053  008424  50F5               	movf	tablat,w,c
 20054  008426  D005               	bra	u13600
 20055  008428                     u13607:
 20056  008428  CFF6 FFE9          	movff	tblptrl,fsr0l
 20057  00842C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20058  008430  50EF               	movf	indf0,w,c
 20059  008432                     u13600:
 20060  008432  0100               	movlb	0	; () banked
 20061  008434  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 20062  008436  0100               	movlb	0	; () banked
 20063  008438  5175               	movf	lcd_show_string_l0@t8& (0+255),w,b
 20064  00843A  ECBC  F03A         	call	_lcd_show_chr
 20065                           
 20066                           ;lcd.c: 547: str++;
 20067  00843E  0100               	movlb	0	; () banked
 20068  008440  4B73               	infsnz	lcd_show_string_l0@str& (0+255),f,b
 20069  008442  2B74               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;lcd.c: 548: t8++;
 20073  008444  0100               	movlb	0	; () banked
 20074  008446  2B75               	incf	lcd_show_string_l0@t8& (0+255),f,b
 20075  008448                     l14688:
 20076                           
 20077                           ; BSR set to: 0
 20078  008448  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20079  00844C  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20080  008450  6AF8               	clrf	tblptru,c
 20081  008452  0E0F               	movlw	(high __ramtop+-1)
 20082  008454  64F7               	cpfsgt	tblptrh,c
 20083  008456  D003               	bra	u13617
 20084  008458  0008               	tblrd		*
 20085  00845A  50F5               	movf	tablat,w,c
 20086  00845C  D005               	bra	u13610
 20087  00845E                     u13617:
 20088  00845E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20089  008462  CFF7 FFEA          	movff	tblptrh,fsr0h
 20090  008466  50EF               	movf	indf0,w,c
 20091  008468                     u13610:
 20092  008468  0900               	iorlw	0
 20093  00846A  B4D8               	btfsc	status,2,c
 20094  00846C  0012               	return	
 20095  00846E  0E03               	movlw	3
 20096  008470  0100               	movlb	0	; () banked
 20097  008472  6575               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
 20098  008474  D7CE               	goto	l14682
 20099  008476  0012               	return	
 20100  008478                     __end_of_lcd_show_string_l0:
 20101                           	opt stack 0
 20102                           tosu	equ	0xFFF
 20103                           tosh	equ	0xFFE
 20104                           tosl	equ	0xFFD
 20105                           pclath	equ	0xFFA
 20106                           tblptru	equ	0xFF8
 20107                           tblptrh	equ	0xFF7
 20108                           tblptrl	equ	0xFF6
 20109                           tablat	equ	0xFF5
 20110                           prodh	equ	0xFF4
 20111                           prodl	equ	0xFF3
 20112                           intcon	equ	0xFF2
 20113                           indf0	equ	0xFEF
 20114                           postinc0	equ	0xFEE
 20115                           fsr0h	equ	0xFEA
 20116                           fsr0l	equ	0xFE9
 20117                           wreg	equ	0xFE8
 20118                           indf1	equ	0xFE7
 20119                           postinc1	equ	0xFE6
 20120                           postdec1	equ	0xFE5
 20121                           plusw1	equ	0xFE3
 20122                           fsr1h	equ	0xFE2
 20123                           fsr1l	equ	0xFE1
 20124                           indf2	equ	0xFDF
 20125                           postinc2	equ	0xFDE
 20126                           postdec2	equ	0xFDD
 20127                           plusw2	equ	0xFDB
 20128                           fsr2h	equ	0xFDA
 20129                           fsr2l	equ	0xFD9
 20130                           status	equ	0xFD8
 20131                           
 20132 ;; *************** function _ui_disp_menu_h_adj *****************
 20133 ;; Defined at:
 20134 ;;		line 523 in file "src/api/ui.c"
 20135 ;; Parameters:    Size  Location     Type
 20136 ;;		None
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;  fps             2   42[BANK0 ] PTR struct .
 20139 ;;		 -> stSysData(240), 
 20140 ;; Return value:  Size  Location     Type
 20141 ;;                  1    wreg      void 
 20142 ;; Registers used:
 20143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20144 ;; Tracked objects:
 20145 ;;		On entry : 0/0
 20146 ;;		On exit  : 0/0
 20147 ;;		Unchanged: 0/0
 20148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20153 ;;Total ram usage:        2 bytes
 20154 ;; Hardware stack levels used:    1
 20155 ;; Hardware stack levels required when called:   10
 20156 ;; This function calls:
 20157 ;;		_lcd_disp_all
 20158 ;;		_lcd_disp_logo
 20159 ;;		_ui_disp_adj_xfloat_pt
 20160 ;; This function is called by:
 20161 ;;		_ui_disp_menu_pose_size
 20162 ;; This function uses a non-reentrant model
 20163 ;;
 20164                           
 20165                           	psect	text109
 20166  00839A                     __ptext109:
 20167                           	opt stack 0
 20168  00839A                     _ui_disp_menu_h_adj:
 20169                           	opt stack 17
 20170                           
 20171                           ;ui.c: 525: lcd_disp_all(0x00);;
 20172                           
 20173                           ;incstack = 0
 20174  00839A  0E00               	movlw	0
 20175  00839C  EC90  F04B         	call	_lcd_disp_all
 20176                           
 20177                           ;ui.c: 526: lcd_disp_logo(1);
 20178  0083A0  0E01               	movlw	1
 20179  0083A2  EC78  F04B         	call	_lcd_disp_logo
 20180                           
 20181                           ;ui.c: 528: st_sysDataDef* fps= &stSysData;
 20182  0083A6  0E00               	movlw	low _stSysData
 20183  0083A8  0100               	movlb	0	; () banked
 20184  0083AA  6F8A               	movwf	ui_disp_menu_h_adj@fps& (0+255),b
 20185  0083AC  0E02               	movlw	high _stSysData
 20186  0083AE  0100               	movlb	0	; () banked
 20187  0083B0  6F8B               	movwf	(ui_disp_menu_h_adj@fps+1)& (0+255),b
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;ui.c: 529: if(fps->pos==HOTIZONTAL){
 20191  0083B2  0100               	movlb	0	; () banked
 20192  0083B4  EE20 F004          	lfsr	2,4
 20193  0083B8  518A               	movf	ui_disp_menu_h_adj@fps& (0+255),w,b
 20194  0083BA  26D9               	addwf	fsr2l,f,c
 20195  0083BC  518B               	movf	(ui_disp_menu_h_adj@fps+1)& (0+255),w,b
 20196  0083BE  22DA               	addwfc	fsr2h,f,c
 20197  0083C0  50DF               	movf	indf2,w,c
 20198  0083C2  A4D8               	btfss	status,2,c
 20199  0083C4  D011               	goto	l15444
 20200                           
 20201                           ; BSR set to: 0
 20202                           ;ui.c: 530: ui_disp_adj_xfloat_pt((uint8_t*)"   l",&m_floatAdj,adjLocation);
 20203  0083C6  0ED6               	movlw	low STR_9
 20204  0083C8  0100               	movlb	0	; () banked
 20205  0083CA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 20206  0083CC  0EF3               	movlw	high STR_9
 20207  0083CE  0100               	movlb	0	; () banked
 20208  0083D0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 20209  0083D2  0E35               	movlw	low _m_floatAdj
 20210  0083D4  0100               	movlb	0	; () banked
 20211  0083D6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 20212  0083D8  0E00               	movlw	high _m_floatAdj
 20213  0083DA  0100               	movlb	0	; () banked
 20214  0083DC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 20215  0083DE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 20216  0083E2  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 20217                           
 20218                           ;ui.c: 531: }else{
 20219  0083E6  0012               	return	
 20220  0083E8                     l15444:
 20221                           
 20222                           ;ui.c: 532: ui_disp_adj_xfloat_pt((uint8_t*)"   h",&m_floatAdj,adjLocation);
 20223  0083E8  0ED1               	movlw	low STR_10
 20224  0083EA  0100               	movlb	0	; () banked
 20225  0083EC  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 20226  0083EE  0EF3               	movlw	high STR_10
 20227  0083F0  0100               	movlb	0	; () banked
 20228  0083F2  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 20229  0083F4  0E35               	movlw	low _m_floatAdj
 20230  0083F6  0100               	movlb	0	; () banked
 20231  0083F8  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 20232  0083FA  0E00               	movlw	high _m_floatAdj
 20233  0083FC  0100               	movlb	0	; () banked
 20234  0083FE  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 20235  008400  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 20236  008404  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 20237  008408  0012               	return	
 20238  00840A                     __end_of_ui_disp_menu_h_adj:
 20239                           	opt stack 0
 20240                           tosu	equ	0xFFF
 20241                           tosh	equ	0xFFE
 20242                           tosl	equ	0xFFD
 20243                           pclath	equ	0xFFA
 20244                           tblptru	equ	0xFF8
 20245                           tblptrh	equ	0xFF7
 20246                           tblptrl	equ	0xFF6
 20247                           tablat	equ	0xFF5
 20248                           prodh	equ	0xFF4
 20249                           prodl	equ	0xFF3
 20250                           intcon	equ	0xFF2
 20251                           indf0	equ	0xFEF
 20252                           postinc0	equ	0xFEE
 20253                           fsr0h	equ	0xFEA
 20254                           fsr0l	equ	0xFE9
 20255                           wreg	equ	0xFE8
 20256                           indf1	equ	0xFE7
 20257                           postinc1	equ	0xFE6
 20258                           postdec1	equ	0xFE5
 20259                           plusw1	equ	0xFE3
 20260                           fsr1h	equ	0xFE2
 20261                           fsr1l	equ	0xFE1
 20262                           indf2	equ	0xFDF
 20263                           postinc2	equ	0xFDE
 20264                           postdec2	equ	0xFDD
 20265                           plusw2	equ	0xFDB
 20266                           fsr2h	equ	0xFDA
 20267                           fsr2l	equ	0xFD9
 20268                           status	equ	0xFD8
 20269                           
 20270 ;; *************** function _ui_disp_menu_d_adj *****************
 20271 ;; Defined at:
 20272 ;;		line 536 in file "src/api/ui.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;		None
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;		None
 20277 ;; Return value:  Size  Location     Type
 20278 ;;                  1    wreg      void 
 20279 ;; Registers used:
 20280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20281 ;; Tracked objects:
 20282 ;;		On entry : 0/0
 20283 ;;		On exit  : 0/0
 20284 ;;		Unchanged: 0/0
 20285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20290 ;;Total ram usage:        0 bytes
 20291 ;; Hardware stack levels used:    1
 20292 ;; Hardware stack levels required when called:   10
 20293 ;; This function calls:
 20294 ;;		_lcd_disp_all
 20295 ;;		_lcd_disp_logo
 20296 ;;		_ui_disp_adj_xfloat_pt
 20297 ;; This function is called by:
 20298 ;;		_ui_disp_menu_pose_size
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302                           	psect	text110
 20303  00977E                     __ptext110:
 20304                           	opt stack 0
 20305  00977E                     _ui_disp_menu_d_adj:
 20306                           	opt stack 17
 20307                           
 20308                           ;ui.c: 538: lcd_disp_all(0x00);;
 20309                           
 20310                           ;incstack = 0
 20311  00977E  0E00               	movlw	0
 20312  009780  EC90  F04B         	call	_lcd_disp_all
 20313                           
 20314                           ;ui.c: 539: lcd_disp_logo(1);
 20315  009784  0E01               	movlw	1
 20316  009786  EC78  F04B         	call	_lcd_disp_logo
 20317                           
 20318                           ;ui.c: 540: ui_disp_adj_xfloat_pt((uint8_t*)"   d",&m_floatAdj,adjLocation);
 20319  00978A  0EBD               	movlw	low STR_11
 20320  00978C  0100               	movlb	0	; () banked
 20321  00978E  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 20322  009790  0EF3               	movlw	high STR_11
 20323  009792  0100               	movlb	0	; () banked
 20324  009794  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 20325  009796  0E35               	movlw	low _m_floatAdj
 20326  009798  0100               	movlb	0	; () banked
 20327  00979A  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 20328  00979C  0E00               	movlw	high _m_floatAdj
 20329  00979E  0100               	movlb	0	; () banked
 20330  0097A0  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 20331  0097A2  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 20332  0097A6  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 20333  0097AA  0012               	return		;funcret
 20334  0097AC                     __end_of_ui_disp_menu_d_adj:
 20335                           	opt stack 0
 20336                           tosu	equ	0xFFF
 20337                           tosh	equ	0xFFE
 20338                           tosl	equ	0xFFD
 20339                           pclath	equ	0xFFA
 20340                           tblptru	equ	0xFF8
 20341                           tblptrh	equ	0xFF7
 20342                           tblptrl	equ	0xFF6
 20343                           tablat	equ	0xFF5
 20344                           prodh	equ	0xFF4
 20345                           prodl	equ	0xFF3
 20346                           intcon	equ	0xFF2
 20347                           indf0	equ	0xFEF
 20348                           postinc0	equ	0xFEE
 20349                           fsr0h	equ	0xFEA
 20350                           fsr0l	equ	0xFE9
 20351                           wreg	equ	0xFE8
 20352                           indf1	equ	0xFE7
 20353                           postinc1	equ	0xFE6
 20354                           postdec1	equ	0xFE5
 20355                           plusw1	equ	0xFE3
 20356                           fsr1h	equ	0xFE2
 20357                           fsr1l	equ	0xFE1
 20358                           indf2	equ	0xFDF
 20359                           postinc2	equ	0xFDE
 20360                           postdec2	equ	0xFDD
 20361                           plusw2	equ	0xFDB
 20362                           fsr2h	equ	0xFDA
 20363                           fsr2l	equ	0xFD9
 20364                           status	equ	0xFD8
 20365                           
 20366 ;; *************** function _ui_disp_menu_poly_c_adj *****************
 20367 ;; Defined at:
 20368 ;;		line 615 in file "src/api/ui.c"
 20369 ;; Parameters:    Size  Location     Type
 20370 ;;		None
 20371 ;; Auto vars:     Size  Location     Type
 20372 ;;  buf             6   40[BANK0 ] unsigned char [6]
 20373 ;;  t8              1   46[BANK0 ] unsigned char 
 20374 ;; Return value:  Size  Location     Type
 20375 ;;                  1    wreg      void 
 20376 ;; Registers used:
 20377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20378 ;; Tracked objects:
 20379 ;;		On entry : 0/0
 20380 ;;		On exit  : 0/0
 20381 ;;		Unchanged: 0/0
 20382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20384 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20386 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20387 ;;Total ram usage:        7 bytes
 20388 ;; Hardware stack levels used:    1
 20389 ;; Hardware stack levels required when called:   11
 20390 ;; This function calls:
 20391 ;;		_lcd_disp_all
 20392 ;;		_lcd_disp_logo
 20393 ;;		_m_mem_cpy
 20394 ;;		_ui_disp_adj_xfixed_pt_dp
 20395 ;; This function is called by:
 20396 ;;		_ui_disp_menu
 20397 ;; This function uses a non-reentrant model
 20398 ;;
 20399                           
 20400                           	psect	text111
 20401  0087C4                     __ptext111:
 20402                           	opt stack 0
 20403  0087C4                     _ui_disp_menu_poly_c_adj:
 20404                           	opt stack 17
 20405                           
 20406                           ;ui.c: 617: uint8_t buf[6];
 20407                           ;ui.c: 618: uint8_t t8;
 20408                           ;ui.c: 620: lcd_disp_all(0x00);;
 20409                           
 20410                           ;incstack = 0
 20411  0087C4  0E00               	movlw	0
 20412  0087C6  EC90  F04B         	call	_lcd_disp_all
 20413                           
 20414                           ;ui.c: 621: lcd_disp_logo(1);
 20415  0087CA  0E01               	movlw	1
 20416  0087CC  EC78  F04B         	call	_lcd_disp_logo
 20417                           
 20418                           ;ui.c: 623: t8=subMenu;
 20419  0087D0  C032  F08E         	movff	_subMenu,ui_disp_menu_poly_c_adj@t8	;volatile
 20420                           
 20421                           ;ui.c: 624: if(t8>3)return;
 20422  0087D4  0E03               	movlw	3
 20423  0087D6  0100               	movlb	0	; () banked
 20424  0087D8  658E               	cpfsgt	ui_disp_menu_poly_c_adj@t8& (0+255),b
 20425  0087DA  D001               	goto	l16234
 20426  0087DC  0012               	return	
 20427  0087DE                     l16234:
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;ui.c: 625: m_mem_cpy(buf,(uint8_t*)"    ");
 20431  0087DE  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 20432  0087E0  0100               	movlb	0	; () banked
 20433  0087E2  6F60               	movwf	m_mem_cpy@d& (0+255),b
 20434  0087E4  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 20435  0087E6  0100               	movlb	0	; () banked
 20436  0087E8  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 20437  0087EA  0E74               	movlw	low (STR_2+4)
 20438  0087EC  0100               	movlb	0	; () banked
 20439  0087EE  6F62               	movwf	m_mem_cpy@s& (0+255),b
 20440  0087F0  0EF3               	movlw	high (STR_2+4)
 20441  0087F2  0100               	movlb	0	; () banked
 20442  0087F4  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 20443  0087F6  ECA9  F042         	call	_m_mem_cpy	;wreg free
 20444                           
 20445                           ;ui.c: 627: buf[3]='a'+t8;
 20446  0087FA  0100               	movlb	0	; () banked
 20447  0087FC  518E               	movf	ui_disp_menu_poly_c_adj@t8& (0+255),w,b
 20448  0087FE  0F61               	addlw	97
 20449  008800  0100               	movlb	0	; () banked
 20450  008802  6F8B               	movwf	(ui_disp_menu_poly_c_adj@buf+3)& (0+255),b
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;ui.c: 628: ui_disp_adj_xfixed_pt_dp(buf,adjValue,adjLocation,0);
 20454  008804  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 20455  008806  0100               	movlb	0	; () banked
 20456  008808  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 20457  00880A  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 20458  00880C  0100               	movlb	0	; () banked
 20459  00880E  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 20460  008810  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 20461  008814  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 20462  008818  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 20463  00881C  0E00               	movlw	0
 20464  00881E  0100               	movlb	0	; () banked
 20465  008820  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 20466  008822  ECB5  F030         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 20467  008826  0012               	return		;funcret
 20468  008828                     __end_of_ui_disp_menu_poly_c_adj:
 20469                           	opt stack 0
 20470                           tosu	equ	0xFFF
 20471                           tosh	equ	0xFFE
 20472                           tosl	equ	0xFFD
 20473                           pclath	equ	0xFFA
 20474                           tblptru	equ	0xFF8
 20475                           tblptrh	equ	0xFF7
 20476                           tblptrl	equ	0xFF6
 20477                           tablat	equ	0xFF5
 20478                           prodh	equ	0xFF4
 20479                           prodl	equ	0xFF3
 20480                           intcon	equ	0xFF2
 20481                           indf0	equ	0xFEF
 20482                           postinc0	equ	0xFEE
 20483                           fsr0h	equ	0xFEA
 20484                           fsr0l	equ	0xFE9
 20485                           wreg	equ	0xFE8
 20486                           indf1	equ	0xFE7
 20487                           postinc1	equ	0xFE6
 20488                           postdec1	equ	0xFE5
 20489                           plusw1	equ	0xFE3
 20490                           fsr1h	equ	0xFE2
 20491                           fsr1l	equ	0xFE1
 20492                           indf2	equ	0xFDF
 20493                           postinc2	equ	0xFDE
 20494                           postdec2	equ	0xFDD
 20495                           plusw2	equ	0xFDB
 20496                           fsr2h	equ	0xFDA
 20497                           fsr2l	equ	0xFD9
 20498                           status	equ	0xFD8
 20499                           
 20500 ;; *************** function _ui_disp_menu_home_test *****************
 20501 ;; Defined at:
 20502 ;;		line 424 in file "src/api/ui.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;		None
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;  t8              1   19[BANK0 ] unsigned char 
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1    wreg      void 
 20509 ;; Registers used:
 20510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;Total ram usage:        1 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:    8
 20523 ;; This function calls:
 20524 ;;		_lcd_disp_all
 20525 ;;		_lcd_disp_battary
 20526 ;;		_lcd_disp_light
 20527 ;;		_lcd_disp_rf
 20528 ;; This function is called by:
 20529 ;;		_ui_disp_menu
 20530 ;; This function uses a non-reentrant model
 20531 ;;
 20532                           
 20533                           	psect	text112
 20534  006E60                     __ptext112:
 20535                           	opt stack 0
 20536  006E60                     _ui_disp_menu_home_test:
 20537                           	opt stack 20
 20538                           
 20539                           ;ui.c: 426: uint8_t t8;
 20540                           ;ui.c: 427: lcd_disp_all(0x00);;
 20541                           
 20542                           ;incstack = 0
 20543  006E60  0E00               	movlw	0
 20544  006E62  EC90  F04B         	call	_lcd_disp_all
 20545                           
 20546                           ;ui.c: 428: t8=subMenu & 0x0f;
 20547  006E66  5032               	movf	_subMenu,w,c	;volatile
 20548  006E68  0B0F               	andlw	15
 20549  006E6A  0100               	movlb	0	; () banked
 20550  006E6C  6F73               	movwf	ui_disp_menu_home_test@t8& (0+255),b
 20551                           
 20552                           ;ui.c: 429: switch(t8)
 20553  006E6E  D02C               	goto	l16130
 20554  006E70                     l16106:
 20555                           
 20556                           ; BSR set to: 0
 20557  006E70  0EFF               	movlw	255
 20558  006E72  EC90  F04B         	call	_lcd_disp_all
 20559  006E76  0012               	return	
 20560  006E78                     l16108:
 20561  006E78  0E64               	movlw	100
 20562  006E7A  EC5C  F041         	call	_lcd_disp_battary
 20563  006E7E  0012               	return	
 20564  006E80                     l16110:
 20565  006E80  0E4B               	movlw	75
 20566  006E82  EC5C  F041         	call	_lcd_disp_battary
 20567  006E86  0012               	return	
 20568  006E88                     l16112:
 20569  006E88  0E32               	movlw	50
 20570  006E8A  EC5C  F041         	call	_lcd_disp_battary
 20571  006E8E  0012               	return	
 20572  006E90                     l16114:
 20573  006E90  0E19               	movlw	25
 20574  006E92  EC5C  F041         	call	_lcd_disp_battary
 20575  006E96  0012               	return	
 20576  006E98                     l16116:
 20577  006E98  0E64               	movlw	100
 20578  006E9A  EC23  F041         	call	_lcd_disp_rf
 20579  006E9E  0012               	return	
 20580  006EA0                     l16118:
 20581  006EA0  0E4B               	movlw	75
 20582  006EA2  EC23  F041         	call	_lcd_disp_rf
 20583  006EA6  0012               	return	
 20584  006EA8                     l16120:
 20585  006EA8  0E32               	movlw	50
 20586  006EAA  EC23  F041         	call	_lcd_disp_rf
 20587  006EAE  0012               	return	
 20588  006EB0                     l16122:
 20589  006EB0  0E19               	movlw	25
 20590  006EB2  EC23  F041         	call	_lcd_disp_rf
 20591  006EB6  0012               	return	
 20592  006EB8                     l16124:
 20593  006EB8  0E64               	movlw	100
 20594  006EBA  EC3C  F045         	call	_lcd_disp_light
 20595  006EBE  0012               	return	
 20596  006EC0                     l16126:
 20597  006EC0  0E32               	movlw	50
 20598  006EC2  EC3C  F045         	call	_lcd_disp_light
 20599                           
 20600                           ;ui.c: 443: }
 20601                           
 20602                           ;ui.c: 442: default:break;
 20603  006EC6  0012               	return	
 20604  006EC8                     l16130:
 20605  006EC8  0100               	movlb	0	; () banked
 20606  006ECA  5173               	movf	ui_disp_menu_home_test@t8& (0+255),w,b
 20607                           
 20608                           ; Switch size 1, requested type "space"
 20609                           ; Number of cases is 11, Range of values is 0 to 10
 20610                           ; switch strategies available:
 20611                           ; Name         Instructions Cycles
 20612                           ; simple_byte           34    18 (average)
 20613                           ;	Chosen strategy is simple_byte
 20614  006ECC  0A00               	xorlw	0	; case 0
 20615  006ECE  B4D8               	btfsc	status,2,c
 20616  006ED0  D7CF               	goto	l16106
 20617  006ED2  0A01               	xorlw	1	; case 1
 20618  006ED4  B4D8               	btfsc	status,2,c
 20619  006ED6  D7D0               	goto	l16108
 20620  006ED8  0A03               	xorlw	3	; case 2
 20621  006EDA  B4D8               	btfsc	status,2,c
 20622  006EDC  D7D1               	goto	l16110
 20623  006EDE  0A01               	xorlw	1	; case 3
 20624  006EE0  B4D8               	btfsc	status,2,c
 20625  006EE2  D7D2               	goto	l16112
 20626  006EE4  0A07               	xorlw	7	; case 4
 20627  006EE6  B4D8               	btfsc	status,2,c
 20628  006EE8  D7D3               	goto	l16114
 20629  006EEA  0A01               	xorlw	1	; case 5
 20630  006EEC  B4D8               	btfsc	status,2,c
 20631  006EEE  D7D4               	goto	l16116
 20632  006EF0  0A03               	xorlw	3	; case 6
 20633  006EF2  B4D8               	btfsc	status,2,c
 20634  006EF4  D7D5               	goto	l16118
 20635  006EF6  0A01               	xorlw	1	; case 7
 20636  006EF8  B4D8               	btfsc	status,2,c
 20637  006EFA  D7D6               	goto	l16120
 20638  006EFC  0A0F               	xorlw	15	; case 8
 20639  006EFE  B4D8               	btfsc	status,2,c
 20640  006F00  D7D7               	goto	l16122
 20641  006F02  0A01               	xorlw	1	; case 9
 20642  006F04  B4D8               	btfsc	status,2,c
 20643  006F06  D7D8               	goto	l16124
 20644  006F08  0A03               	xorlw	3	; case 10
 20645  006F0A  A4D8               	btfss	status,2,c
 20646  006F0C  0012               	return	
 20647  006F0E  D7D8               	goto	l16126
 20648  006F10                     __end_of_ui_disp_menu_home_test:
 20649                           	opt stack 0
 20650                           tosu	equ	0xFFF
 20651                           tosh	equ	0xFFE
 20652                           tosl	equ	0xFFD
 20653                           pclath	equ	0xFFA
 20654                           tblptru	equ	0xFF8
 20655                           tblptrh	equ	0xFF7
 20656                           tblptrl	equ	0xFF6
 20657                           tablat	equ	0xFF5
 20658                           prodh	equ	0xFF4
 20659                           prodl	equ	0xFF3
 20660                           intcon	equ	0xFF2
 20661                           indf0	equ	0xFEF
 20662                           postinc0	equ	0xFEE
 20663                           fsr0h	equ	0xFEA
 20664                           fsr0l	equ	0xFE9
 20665                           wreg	equ	0xFE8
 20666                           indf1	equ	0xFE7
 20667                           postinc1	equ	0xFE6
 20668                           postdec1	equ	0xFE5
 20669                           plusw1	equ	0xFE3
 20670                           fsr1h	equ	0xFE2
 20671                           fsr1l	equ	0xFE1
 20672                           indf2	equ	0xFDF
 20673                           postinc2	equ	0xFDE
 20674                           postdec2	equ	0xFDD
 20675                           plusw2	equ	0xFDB
 20676                           fsr2h	equ	0xFDA
 20677                           fsr2l	equ	0xFD9
 20678                           status	equ	0xFD8
 20679                           
 20680 ;; *************** function _lcd_disp_rf *****************
 20681 ;; Defined at:
 20682 ;;		line 181 in file "src/driver/lcd.c"
 20683 ;; Parameters:    Size  Location     Type
 20684 ;;  rssi            1    wreg     unsigned char 
 20685 ;; Auto vars:     Size  Location     Type
 20686 ;;  rssi            1   17[BANK0 ] unsigned char 
 20687 ;;  i               1   18[BANK0 ] unsigned char 
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20701 ;;Total ram usage:        2 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:    7
 20704 ;; This function calls:
 20705 ;;		___lbdiv
 20706 ;;		_lcd_disp_rf_bar
 20707 ;; This function is called by:
 20708 ;;		_ui_disp_menu_home_test
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text113
 20713  008246                     __ptext113:
 20714                           	opt stack 0
 20715  008246                     _lcd_disp_rf:
 20716                           	opt stack 20
 20717                           
 20718                           ;incstack = 0
 20719                           ;lcd_disp_rf@rssi stored from wreg
 20720  008246  0100               	movlb	0	; () banked
 20721  008248  6F71               	movwf	lcd_disp_rf@rssi& (0+255),b
 20722                           
 20723                           ;lcd.c: 183: uint8_t i;
 20724                           ;lcd.c: 184: if(rssi>=100)rssi=100;
 20725  00824A  0E63               	movlw	99
 20726  00824C  0100               	movlb	0	; () banked
 20727  00824E  6571               	cpfsgt	lcd_disp_rf@rssi& (0+255),b
 20728  008250  D003               	goto	l15362
 20729                           
 20730                           ; BSR set to: 0
 20731  008252  0E64               	movlw	100
 20732  008254  0100               	movlb	0	; () banked
 20733  008256  6F71               	movwf	lcd_disp_rf@rssi& (0+255),b
 20734  008258                     l15362:
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;lcd.c: 185: rssi/=25;
 20738  008258  0E19               	movlw	25
 20739  00825A  6E20               	movwf	___lbdiv@divisor,c
 20740  00825C  0100               	movlb	0	; () banked
 20741  00825E  5171               	movf	lcd_disp_rf@rssi& (0+255),w,b
 20742  008260  ECCE  F047         	call	___lbdiv
 20743  008264  0100               	movlb	0	; () banked
 20744  008266  6F71               	movwf	lcd_disp_rf@rssi& (0+255),b
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;lcd.c: 186: if(rssi<1)rssi=1;
 20748  008268  0100               	movlb	0	; () banked
 20749  00826A  5171               	movf	lcd_disp_rf@rssi& (0+255),w,b
 20750  00826C  0100               	movlb	0	; () banked
 20751  00826E  A4D8               	btfss	status,2,c
 20752  008270  D003               	goto	l1967
 20753                           
 20754                           ; BSR set to: 0
 20755  008272  0E01               	movlw	1
 20756  008274  0100               	movlb	0	; () banked
 20757  008276  6F71               	movwf	lcd_disp_rf@rssi& (0+255),b
 20758  008278                     l1967:
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;lcd.c: 187: for(i=0;i<rssi;i++){
 20762  008278  0E00               	movlw	0
 20763  00827A  0100               	movlb	0	; () banked
 20764  00827C  6F72               	movwf	lcd_disp_rf@i& (0+255),b
 20765  00827E  D008               	goto	l15372
 20766  008280                     l15368:
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;lcd.c: 188: lcd_disp_rf_bar(i,1);
 20770  008280  0E01               	movlw	1
 20771  008282  6E20               	movwf	lcd_disp_rf_bar@show,c
 20772  008284  0100               	movlb	0	; () banked
 20773  008286  5172               	movf	lcd_disp_rf@i& (0+255),w,b
 20774  008288  EC0F  F03F         	call	_lcd_disp_rf_bar
 20775  00828C  0100               	movlb	0	; () banked
 20776  00828E  2B72               	incf	lcd_disp_rf@i& (0+255),f,b
 20777  008290                     l15372:
 20778                           
 20779                           ; BSR set to: 0
 20780  008290  0100               	movlb	0	; () banked
 20781  008292  5171               	movf	lcd_disp_rf@rssi& (0+255),w,b
 20782  008294  0100               	movlb	0	; () banked
 20783  008296  5D72               	subwf	lcd_disp_rf@i& (0+255),w,b
 20784  008298  A0D8               	btfss	status,0,c
 20785  00829A  D7F2               	goto	l15368
 20786  00829C                     l15374:
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;lcd.c: 189: }
 20790                           ;lcd.c: 190: for(;i<4;i++){
 20791  00829C  0E03               	movlw	3
 20792  00829E  0100               	movlb	0	; () banked
 20793  0082A0  6572               	cpfsgt	lcd_disp_rf@i& (0+255),b
 20794  0082A2  D001               	goto	l15378
 20795  0082A4  0012               	return	
 20796  0082A6                     l15378:
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;lcd.c: 191: lcd_disp_rf_bar(i,0);
 20800  0082A6  0E00               	movlw	0
 20801  0082A8  6E20               	movwf	lcd_disp_rf_bar@show,c
 20802  0082AA  0100               	movlb	0	; () banked
 20803  0082AC  5172               	movf	lcd_disp_rf@i& (0+255),w,b
 20804  0082AE  EC0F  F03F         	call	_lcd_disp_rf_bar
 20805  0082B2  0100               	movlb	0	; () banked
 20806  0082B4  2B72               	incf	lcd_disp_rf@i& (0+255),f,b
 20807  0082B6  D7F2               	goto	l15374
 20808  0082B8                     __end_of_lcd_disp_rf:
 20809                           	opt stack 0
 20810                           tosu	equ	0xFFF
 20811                           tosh	equ	0xFFE
 20812                           tosl	equ	0xFFD
 20813                           pclath	equ	0xFFA
 20814                           tblptru	equ	0xFF8
 20815                           tblptrh	equ	0xFF7
 20816                           tblptrl	equ	0xFF6
 20817                           tablat	equ	0xFF5
 20818                           prodh	equ	0xFF4
 20819                           prodl	equ	0xFF3
 20820                           intcon	equ	0xFF2
 20821                           indf0	equ	0xFEF
 20822                           postinc0	equ	0xFEE
 20823                           fsr0h	equ	0xFEA
 20824                           fsr0l	equ	0xFE9
 20825                           wreg	equ	0xFE8
 20826                           indf1	equ	0xFE7
 20827                           postinc1	equ	0xFE6
 20828                           postdec1	equ	0xFE5
 20829                           plusw1	equ	0xFE3
 20830                           fsr1h	equ	0xFE2
 20831                           fsr1l	equ	0xFE1
 20832                           indf2	equ	0xFDF
 20833                           postinc2	equ	0xFDE
 20834                           postdec2	equ	0xFDD
 20835                           plusw2	equ	0xFDB
 20836                           fsr2h	equ	0xFDA
 20837                           fsr2l	equ	0xFD9
 20838                           status	equ	0xFD8
 20839                           
 20840 ;; *************** function _lcd_disp_rf_bar *****************
 20841 ;; Defined at:
 20842 ;;		line 171 in file "src/driver/lcd.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;  bar             1    wreg     unsigned char 
 20845 ;;  show            1   31[COMRAM] unsigned char 
 20846 ;; Auto vars:     Size  Location     Type
 20847 ;;  bar             1   16[BANK0 ] unsigned char 
 20848 ;; Return value:  Size  Location     Type
 20849 ;;                  1    wreg      void 
 20850 ;; Registers used:
 20851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20852 ;; Tracked objects:
 20853 ;;		On entry : 0/0
 20854 ;;		On exit  : 0/0
 20855 ;;		Unchanged: 0/0
 20856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20860 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20861 ;;Total ram usage:        2 bytes
 20862 ;; Hardware stack levels used:    1
 20863 ;; Hardware stack levels required when called:    6
 20864 ;; This function calls:
 20865 ;;		_lcd_set_com_seg
 20866 ;; This function is called by:
 20867 ;;		_lcd_disp_rf
 20868 ;;		_lcd_disp_rf_off
 20869 ;; This function uses a non-reentrant model
 20870 ;;
 20871                           
 20872                           	psect	text114
 20873  007E1E                     __ptext114:
 20874                           	opt stack 0
 20875  007E1E                     _lcd_disp_rf_bar:
 20876                           	opt stack 20
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;incstack = 0
 20880                           ;lcd_disp_rf_bar@bar stored from wreg
 20881  007E1E  0100               	movlb	0	; () banked
 20882  007E20  6F70               	movwf	lcd_disp_rf_bar@bar& (0+255),b
 20883                           
 20884                           ;lcd.c: 173: if(bar>=4)bar=4;
 20885  007E22  0E03               	movlw	3
 20886  007E24  0100               	movlb	0	; () banked
 20887  007E26  6570               	cpfsgt	lcd_disp_rf_bar@bar& (0+255),b
 20888  007E28  D028               	goto	l14906
 20889                           
 20890                           ; BSR set to: 0
 20891  007E2A  0E04               	movlw	4
 20892  007E2C  0100               	movlb	0	; () banked
 20893  007E2E  6F70               	movwf	lcd_disp_rf_bar@bar& (0+255),b
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;lcd.c: 174: switch(bar){
 20897  007E30  D024               	goto	l14906
 20898  007E32                     l14896:
 20899                           
 20900                           ; BSR set to: 0
 20901  007E32  0E1E               	movlw	30
 20902  007E34  0100               	movlb	0	; () banked
 20903  007E36  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20904  007E38  C020  F069         	movff	lcd_disp_rf_bar@show,lcd_set_com_seg@show
 20905  007E3C  0E00               	movlw	0
 20906  007E3E  EC1C  F033         	call	_lcd_set_com_seg
 20907  007E42  0012               	return	
 20908  007E44                     l14898:
 20909  007E44  0E1E               	movlw	30
 20910  007E46  0100               	movlb	0	; () banked
 20911  007E48  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20912  007E4A  C020  F069         	movff	lcd_disp_rf_bar@show,lcd_set_com_seg@show
 20913  007E4E  0E01               	movlw	1
 20914  007E50  EC1C  F033         	call	_lcd_set_com_seg
 20915  007E54  0012               	return	
 20916  007E56                     l14900:
 20917  007E56  0E1E               	movlw	30
 20918  007E58  0100               	movlb	0	; () banked
 20919  007E5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20920  007E5C  C020  F069         	movff	lcd_disp_rf_bar@show,lcd_set_com_seg@show
 20921  007E60  0E02               	movlw	2
 20922  007E62  EC1C  F033         	call	_lcd_set_com_seg
 20923  007E66  0012               	return	
 20924  007E68                     l14902:
 20925  007E68  0E1E               	movlw	30
 20926  007E6A  0100               	movlb	0	; () banked
 20927  007E6C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20928  007E6E  C020  F069         	movff	lcd_disp_rf_bar@show,lcd_set_com_seg@show
 20929  007E72  0E03               	movlw	3
 20930  007E74  EC1C  F033         	call	_lcd_set_com_seg
 20931                           
 20932                           ;lcd.c: 179: }
 20933  007E78  0012               	return	
 20934  007E7A                     l14906:
 20935  007E7A  0100               	movlb	0	; () banked
 20936  007E7C  5170               	movf	lcd_disp_rf_bar@bar& (0+255),w,b
 20937                           
 20938                           ; Switch size 1, requested type "space"
 20939                           ; Number of cases is 4, Range of values is 0 to 3
 20940                           ; switch strategies available:
 20941                           ; Name         Instructions Cycles
 20942                           ; simple_byte           13     7 (average)
 20943                           ;	Chosen strategy is simple_byte
 20944  007E7E  0A00               	xorlw	0	; case 0
 20945  007E80  B4D8               	btfsc	status,2,c
 20946  007E82  D7D7               	goto	l14896
 20947  007E84  0A01               	xorlw	1	; case 1
 20948  007E86  B4D8               	btfsc	status,2,c
 20949  007E88  D7DD               	goto	l14898
 20950  007E8A  0A03               	xorlw	3	; case 2
 20951  007E8C  B4D8               	btfsc	status,2,c
 20952  007E8E  D7E3               	goto	l14900
 20953  007E90  0A01               	xorlw	1	; case 3
 20954  007E92  A4D8               	btfss	status,2,c
 20955  007E94  0012               	return	
 20956  007E96  D7E8               	goto	l14902
 20957  007E98                     __end_of_lcd_disp_rf_bar:
 20958                           	opt stack 0
 20959                           tosu	equ	0xFFF
 20960                           tosh	equ	0xFFE
 20961                           tosl	equ	0xFFD
 20962                           pclath	equ	0xFFA
 20963                           tblptru	equ	0xFF8
 20964                           tblptrh	equ	0xFF7
 20965                           tblptrl	equ	0xFF6
 20966                           tablat	equ	0xFF5
 20967                           prodh	equ	0xFF4
 20968                           prodl	equ	0xFF3
 20969                           intcon	equ	0xFF2
 20970                           indf0	equ	0xFEF
 20971                           postinc0	equ	0xFEE
 20972                           fsr0h	equ	0xFEA
 20973                           fsr0l	equ	0xFE9
 20974                           wreg	equ	0xFE8
 20975                           indf1	equ	0xFE7
 20976                           postinc1	equ	0xFE6
 20977                           postdec1	equ	0xFE5
 20978                           plusw1	equ	0xFE3
 20979                           fsr1h	equ	0xFE2
 20980                           fsr1l	equ	0xFE1
 20981                           indf2	equ	0xFDF
 20982                           postinc2	equ	0xFDE
 20983                           postdec2	equ	0xFDD
 20984                           plusw2	equ	0xFDB
 20985                           fsr2h	equ	0xFDA
 20986                           fsr2l	equ	0xFD9
 20987                           status	equ	0xFD8
 20988                           
 20989 ;; *************** function _lcd_disp_light *****************
 20990 ;; Defined at:
 20991 ;;		line 210 in file "src/driver/lcd.c"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;  light           1    wreg     unsigned char 
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;  light           1   17[BANK0 ] unsigned char 
 20996 ;;  i               1    0        unsigned char 
 20997 ;; Return value:  Size  Location     Type
 20998 ;;                  1    wreg      void 
 20999 ;; Registers used:
 21000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21001 ;; Tracked objects:
 21002 ;;		On entry : 0/0
 21003 ;;		On exit  : 0/0
 21004 ;;		Unchanged: 0/0
 21005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21010 ;;Total ram usage:        1 bytes
 21011 ;; Hardware stack levels used:    1
 21012 ;; Hardware stack levels required when called:    7
 21013 ;; This function calls:
 21014 ;;		___lbdiv
 21015 ;;		_lcd_disp_light_bar
 21016 ;; This function is called by:
 21017 ;;		_ui_disp_menu_home_test
 21018 ;; This function uses a non-reentrant model
 21019 ;;
 21020                           
 21021                           	psect	text115
 21022  008A78                     __ptext115:
 21023                           	opt stack 0
 21024  008A78                     _lcd_disp_light:
 21025                           	opt stack 20
 21026                           
 21027                           ;incstack = 0
 21028                           ;lcd_disp_light@light stored from wreg
 21029  008A78  0100               	movlb	0	; () banked
 21030  008A7A  6F71               	movwf	lcd_disp_light@light& (0+255),b
 21031                           
 21032                           ;lcd.c: 212: uint8_t i;
 21033                           ;lcd.c: 213: if(light>=100)light=100;
 21034  008A7C  0E63               	movlw	99
 21035  008A7E  0100               	movlb	0	; () banked
 21036  008A80  6571               	cpfsgt	lcd_disp_light@light& (0+255),b
 21037  008A82  D003               	goto	l15388
 21038                           
 21039                           ; BSR set to: 0
 21040  008A84  0E64               	movlw	100
 21041  008A86  0100               	movlb	0	; () banked
 21042  008A88  6F71               	movwf	lcd_disp_light@light& (0+255),b
 21043  008A8A                     l15388:
 21044                           
 21045                           ; BSR set to: 0
 21046                           ;lcd.c: 214: light/=50;
 21047  008A8A  0E32               	movlw	50
 21048  008A8C  6E20               	movwf	___lbdiv@divisor,c
 21049  008A8E  0100               	movlb	0	; () banked
 21050  008A90  5171               	movf	lcd_disp_light@light& (0+255),w,b
 21051  008A92  ECCE  F047         	call	___lbdiv
 21052  008A96  0100               	movlb	0	; () banked
 21053  008A98  6F71               	movwf	lcd_disp_light@light& (0+255),b
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;lcd.c: 215: if(light<1)light=1;
 21057  008A9A  0100               	movlb	0	; () banked
 21058  008A9C  5171               	movf	lcd_disp_light@light& (0+255),w,b
 21059  008A9E  0100               	movlb	0	; () banked
 21060  008AA0  A4D8               	btfss	status,2,c
 21061  008AA2  D003               	goto	l15394
 21062                           
 21063                           ; BSR set to: 0
 21064  008AA4  0E01               	movlw	1
 21065  008AA6  0100               	movlb	0	; () banked
 21066  008AA8  6F71               	movwf	lcd_disp_light@light& (0+255),b
 21067  008AAA                     l15394:
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;lcd.c: 216: if(2==light){
 21071  008AAA  0E02               	movlw	2
 21072  008AAC  0100               	movlb	0	; () banked
 21073  008AAE  1971               	xorwf	lcd_disp_light@light& (0+255),w,b
 21074  008AB0  A4D8               	btfss	status,2,c
 21075  008AB2  D00B               	goto	l15398
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;lcd.c: 217: lcd_disp_light_bar(0,1);
 21079  008AB4  0E01               	movlw	1
 21080  008AB6  6E20               	movwf	lcd_disp_light_bar@show,c
 21081  008AB8  0E00               	movlw	0
 21082  008ABA  EC1C  F048         	call	_lcd_disp_light_bar
 21083                           
 21084                           ;lcd.c: 218: lcd_disp_light_bar(1,1);
 21085  008ABE  0E01               	movlw	1
 21086  008AC0  6E20               	movwf	lcd_disp_light_bar@show,c
 21087  008AC2  0E01               	movlw	1
 21088  008AC4  EC1C  F048         	call	_lcd_disp_light_bar
 21089                           
 21090                           ;lcd.c: 219: }else{
 21091  008AC8  0012               	return	
 21092  008ACA                     l15398:
 21093                           
 21094                           ;lcd.c: 220: lcd_disp_light_bar(0,1);
 21095  008ACA  0E01               	movlw	1
 21096  008ACC  6E20               	movwf	lcd_disp_light_bar@show,c
 21097  008ACE  0E00               	movlw	0
 21098  008AD0  EC1C  F048         	call	_lcd_disp_light_bar
 21099  008AD4  0012               	return	
 21100  008AD6                     __end_of_lcd_disp_light:
 21101                           	opt stack 0
 21102                           tosu	equ	0xFFF
 21103                           tosh	equ	0xFFE
 21104                           tosl	equ	0xFFD
 21105                           pclath	equ	0xFFA
 21106                           tblptru	equ	0xFF8
 21107                           tblptrh	equ	0xFF7
 21108                           tblptrl	equ	0xFF6
 21109                           tablat	equ	0xFF5
 21110                           prodh	equ	0xFF4
 21111                           prodl	equ	0xFF3
 21112                           intcon	equ	0xFF2
 21113                           indf0	equ	0xFEF
 21114                           postinc0	equ	0xFEE
 21115                           fsr0h	equ	0xFEA
 21116                           fsr0l	equ	0xFE9
 21117                           wreg	equ	0xFE8
 21118                           indf1	equ	0xFE7
 21119                           postinc1	equ	0xFE6
 21120                           postdec1	equ	0xFE5
 21121                           plusw1	equ	0xFE3
 21122                           fsr1h	equ	0xFE2
 21123                           fsr1l	equ	0xFE1
 21124                           indf2	equ	0xFDF
 21125                           postinc2	equ	0xFDE
 21126                           postdec2	equ	0xFDD
 21127                           plusw2	equ	0xFDB
 21128                           fsr2h	equ	0xFDA
 21129                           fsr2l	equ	0xFD9
 21130                           status	equ	0xFD8
 21131                           
 21132 ;; *************** function _lcd_disp_light_bar *****************
 21133 ;; Defined at:
 21134 ;;		line 202 in file "src/driver/lcd.c"
 21135 ;; Parameters:    Size  Location     Type
 21136 ;;  bar             1    wreg     unsigned char 
 21137 ;;  show            1   31[COMRAM] unsigned char 
 21138 ;; Auto vars:     Size  Location     Type
 21139 ;;  bar             1   16[BANK0 ] unsigned char 
 21140 ;; Return value:  Size  Location     Type
 21141 ;;                  1    wreg      void 
 21142 ;; Registers used:
 21143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21144 ;; Tracked objects:
 21145 ;;		On entry : 0/0
 21146 ;;		On exit  : 0/0
 21147 ;;		Unchanged: 0/0
 21148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21152 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21153 ;;Total ram usage:        2 bytes
 21154 ;; Hardware stack levels used:    1
 21155 ;; Hardware stack levels required when called:    6
 21156 ;; This function calls:
 21157 ;;		_lcd_set_com_seg
 21158 ;; This function is called by:
 21159 ;;		_lcd_disp_light
 21160 ;;		_lcd_disp_light_off
 21161 ;; This function uses a non-reentrant model
 21162 ;;
 21163                           
 21164                           	psect	text116
 21165  009038                     __ptext116:
 21166                           	opt stack 0
 21167  009038                     _lcd_disp_light_bar:
 21168                           	opt stack 20
 21169                           
 21170                           ;incstack = 0
 21171                           ;lcd_disp_light_bar@bar stored from wreg
 21172  009038  0100               	movlb	0	; () banked
 21173  00903A  6F70               	movwf	lcd_disp_light_bar@bar& (0+255),b
 21174                           
 21175                           ;lcd.c: 204: if(bar>=1)bar=1;
 21176  00903C  0100               	movlb	0	; () banked
 21177  00903E  5170               	movf	lcd_disp_light_bar@bar& (0+255),w,b
 21178  009040  0100               	movlb	0	; () banked
 21179  009042  B4D8               	btfsc	status,2,c
 21180  009044  D016               	goto	l14918
 21181                           
 21182                           ; BSR set to: 0
 21183  009046  0E01               	movlw	1
 21184  009048  0100               	movlb	0	; () banked
 21185  00904A  6F70               	movwf	lcd_disp_light_bar@bar& (0+255),b
 21186                           
 21187                           ; BSR set to: 0
 21188                           ;lcd.c: 205: switch(bar){
 21189  00904C  D012               	goto	l14918
 21190  00904E                     l14912:
 21191                           
 21192                           ; BSR set to: 0
 21193  00904E  0E22               	movlw	34
 21194  009050  0100               	movlb	0	; () banked
 21195  009052  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21196  009054  C020  F069         	movff	lcd_disp_light_bar@show,lcd_set_com_seg@show
 21197  009058  0E03               	movlw	3
 21198  00905A  EC1C  F033         	call	_lcd_set_com_seg
 21199  00905E  0012               	return	
 21200  009060                     l14914:
 21201  009060  0E22               	movlw	34
 21202  009062  0100               	movlb	0	; () banked
 21203  009064  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21204  009066  C020  F069         	movff	lcd_disp_light_bar@show,lcd_set_com_seg@show
 21205  00906A  0E02               	movlw	2
 21206  00906C  EC1C  F033         	call	_lcd_set_com_seg
 21207                           
 21208                           ;lcd.c: 208: }
 21209  009070  0012               	return	
 21210  009072                     l14918:
 21211  009072  0100               	movlb	0	; () banked
 21212  009074  5170               	movf	lcd_disp_light_bar@bar& (0+255),w,b
 21213                           
 21214                           ; Switch size 1, requested type "space"
 21215                           ; Number of cases is 2, Range of values is 0 to 1
 21216                           ; switch strategies available:
 21217                           ; Name         Instructions Cycles
 21218                           ; simple_byte            7     4 (average)
 21219                           ;	Chosen strategy is simple_byte
 21220  009076  0A00               	xorlw	0	; case 0
 21221  009078  B4D8               	btfsc	status,2,c
 21222  00907A  D7E9               	goto	l14912
 21223  00907C  0A01               	xorlw	1	; case 1
 21224  00907E  A4D8               	btfss	status,2,c
 21225  009080  0012               	return	
 21226  009082  D7EE               	goto	l14914
 21227  009084                     __end_of_lcd_disp_light_bar:
 21228                           	opt stack 0
 21229                           tosu	equ	0xFFF
 21230                           tosh	equ	0xFFE
 21231                           tosl	equ	0xFFD
 21232                           pclath	equ	0xFFA
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodh	equ	0xFF4
 21238                           prodl	equ	0xFF3
 21239                           intcon	equ	0xFF2
 21240                           indf0	equ	0xFEF
 21241                           postinc0	equ	0xFEE
 21242                           fsr0h	equ	0xFEA
 21243                           fsr0l	equ	0xFE9
 21244                           wreg	equ	0xFE8
 21245                           indf1	equ	0xFE7
 21246                           postinc1	equ	0xFE6
 21247                           postdec1	equ	0xFE5
 21248                           plusw1	equ	0xFE3
 21249                           fsr1h	equ	0xFE2
 21250                           fsr1l	equ	0xFE1
 21251                           indf2	equ	0xFDF
 21252                           postinc2	equ	0xFDE
 21253                           postdec2	equ	0xFDD
 21254                           plusw2	equ	0xFDB
 21255                           fsr2h	equ	0xFDA
 21256                           fsr2l	equ	0xFD9
 21257                           status	equ	0xFD8
 21258                           
 21259 ;; *************** function _lcd_disp_battary *****************
 21260 ;; Defined at:
 21261 ;;		line 150 in file "src/driver/lcd.c"
 21262 ;; Parameters:    Size  Location     Type
 21263 ;;  level           1    wreg     unsigned char 
 21264 ;; Auto vars:     Size  Location     Type
 21265 ;;  level           1   17[BANK0 ] unsigned char 
 21266 ;;  i               1   18[BANK0 ] unsigned char 
 21267 ;; Return value:  Size  Location     Type
 21268 ;;                  1    wreg      void 
 21269 ;; Registers used:
 21270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21271 ;; Tracked objects:
 21272 ;;		On entry : 0/0
 21273 ;;		On exit  : 0/0
 21274 ;;		Unchanged: 0/0
 21275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21280 ;;Total ram usage:        2 bytes
 21281 ;; Hardware stack levels used:    1
 21282 ;; Hardware stack levels required when called:    7
 21283 ;; This function calls:
 21284 ;;		___lbdiv
 21285 ;;		_lcd_disp_battary_bar
 21286 ;; This function is called by:
 21287 ;;		_ui_disp_menu_home_test
 21288 ;; This function uses a non-reentrant model
 21289 ;;
 21290                           
 21291                           	psect	text117
 21292  0082B8                     __ptext117:
 21293                           	opt stack 0
 21294  0082B8                     _lcd_disp_battary:
 21295                           	opt stack 20
 21296                           
 21297                           ;incstack = 0
 21298                           ;lcd_disp_battary@level stored from wreg
 21299  0082B8  0100               	movlb	0	; () banked
 21300  0082BA  6F71               	movwf	lcd_disp_battary@level& (0+255),b
 21301                           
 21302                           ;lcd.c: 152: uint8_t i;
 21303                           ;lcd.c: 153: if(level>=100)level=100;
 21304  0082BC  0E63               	movlw	99
 21305  0082BE  0100               	movlb	0	; () banked
 21306  0082C0  6571               	cpfsgt	lcd_disp_battary@level& (0+255),b
 21307  0082C2  D003               	goto	l15336
 21308                           
 21309                           ; BSR set to: 0
 21310  0082C4  0E64               	movlw	100
 21311  0082C6  0100               	movlb	0	; () banked
 21312  0082C8  6F71               	movwf	lcd_disp_battary@level& (0+255),b
 21313  0082CA                     l15336:
 21314                           
 21315                           ; BSR set to: 0
 21316                           ;lcd.c: 154: level/=25;
 21317  0082CA  0E19               	movlw	25
 21318  0082CC  6E20               	movwf	___lbdiv@divisor,c
 21319  0082CE  0100               	movlb	0	; () banked
 21320  0082D0  5171               	movf	lcd_disp_battary@level& (0+255),w,b
 21321  0082D2  ECCE  F047         	call	___lbdiv
 21322  0082D6  0100               	movlb	0	; () banked
 21323  0082D8  6F71               	movwf	lcd_disp_battary@level& (0+255),b
 21324                           
 21325                           ; BSR set to: 0
 21326                           ;lcd.c: 155: if(level<1)level=1;
 21327  0082DA  0100               	movlb	0	; () banked
 21328  0082DC  5171               	movf	lcd_disp_battary@level& (0+255),w,b
 21329  0082DE  0100               	movlb	0	; () banked
 21330  0082E0  A4D8               	btfss	status,2,c
 21331  0082E2  D003               	goto	l1942
 21332                           
 21333                           ; BSR set to: 0
 21334  0082E4  0E01               	movlw	1
 21335  0082E6  0100               	movlb	0	; () banked
 21336  0082E8  6F71               	movwf	lcd_disp_battary@level& (0+255),b
 21337  0082EA                     l1942:
 21338                           
 21339                           ; BSR set to: 0
 21340                           ;lcd.c: 156: for(i=0;i<level;i++){
 21341  0082EA  0E00               	movlw	0
 21342  0082EC  0100               	movlb	0	; () banked
 21343  0082EE  6F72               	movwf	lcd_disp_battary@i& (0+255),b
 21344  0082F0  D008               	goto	l15346
 21345  0082F2                     l15342:
 21346                           
 21347                           ; BSR set to: 0
 21348                           ;lcd.c: 157: lcd_disp_battary_bar(i,1);
 21349  0082F2  0E01               	movlw	1
 21350  0082F4  6E20               	movwf	lcd_disp_battary_bar@show,c
 21351  0082F6  0100               	movlb	0	; () banked
 21352  0082F8  5172               	movf	lcd_disp_battary@i& (0+255),w,b
 21353  0082FA  EC4C  F03F         	call	_lcd_disp_battary_bar
 21354  0082FE  0100               	movlb	0	; () banked
 21355  008300  2B72               	incf	lcd_disp_battary@i& (0+255),f,b
 21356  008302                     l15346:
 21357                           
 21358                           ; BSR set to: 0
 21359  008302  0100               	movlb	0	; () banked
 21360  008304  5171               	movf	lcd_disp_battary@level& (0+255),w,b
 21361  008306  0100               	movlb	0	; () banked
 21362  008308  5D72               	subwf	lcd_disp_battary@i& (0+255),w,b
 21363  00830A  A0D8               	btfss	status,0,c
 21364  00830C  D7F2               	goto	l15342
 21365  00830E                     l15348:
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;lcd.c: 158: }
 21369                           ;lcd.c: 159: for(;i<4;i++){
 21370  00830E  0E03               	movlw	3
 21371  008310  0100               	movlb	0	; () banked
 21372  008312  6572               	cpfsgt	lcd_disp_battary@i& (0+255),b
 21373  008314  D001               	goto	l15352
 21374  008316  0012               	return	
 21375  008318                     l15352:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;lcd.c: 160: lcd_disp_battary_bar(i,0);
 21379  008318  0E00               	movlw	0
 21380  00831A  6E20               	movwf	lcd_disp_battary_bar@show,c
 21381  00831C  0100               	movlb	0	; () banked
 21382  00831E  5172               	movf	lcd_disp_battary@i& (0+255),w,b
 21383  008320  EC4C  F03F         	call	_lcd_disp_battary_bar
 21384  008324  0100               	movlb	0	; () banked
 21385  008326  2B72               	incf	lcd_disp_battary@i& (0+255),f,b
 21386  008328  D7F2               	goto	l15348
 21387  00832A                     __end_of_lcd_disp_battary:
 21388                           	opt stack 0
 21389                           tosu	equ	0xFFF
 21390                           tosh	equ	0xFFE
 21391                           tosl	equ	0xFFD
 21392                           pclath	equ	0xFFA
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           indf0	equ	0xFEF
 21401                           postinc0	equ	0xFEE
 21402                           fsr0h	equ	0xFEA
 21403                           fsr0l	equ	0xFE9
 21404                           wreg	equ	0xFE8
 21405                           indf1	equ	0xFE7
 21406                           postinc1	equ	0xFE6
 21407                           postdec1	equ	0xFE5
 21408                           plusw1	equ	0xFE3
 21409                           fsr1h	equ	0xFE2
 21410                           fsr1l	equ	0xFE1
 21411                           indf2	equ	0xFDF
 21412                           postinc2	equ	0xFDE
 21413                           postdec2	equ	0xFDD
 21414                           plusw2	equ	0xFDB
 21415                           fsr2h	equ	0xFDA
 21416                           fsr2l	equ	0xFD9
 21417                           status	equ	0xFD8
 21418                           
 21419 ;; *************** function _lcd_disp_battary_bar *****************
 21420 ;; Defined at:
 21421 ;;		line 140 in file "src/driver/lcd.c"
 21422 ;; Parameters:    Size  Location     Type
 21423 ;;  bar             1    wreg     unsigned char 
 21424 ;;  show            1   31[COMRAM] unsigned char 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  bar             1   16[BANK0 ] unsigned char 
 21427 ;; Return value:  Size  Location     Type
 21428 ;;                  1    wreg      void 
 21429 ;; Registers used:
 21430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21431 ;; Tracked objects:
 21432 ;;		On entry : 0/0
 21433 ;;		On exit  : 0/0
 21434 ;;		Unchanged: 0/0
 21435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21436 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21439 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21440 ;;Total ram usage:        2 bytes
 21441 ;; Hardware stack levels used:    1
 21442 ;; Hardware stack levels required when called:    6
 21443 ;; This function calls:
 21444 ;;		_lcd_set_com_seg
 21445 ;; This function is called by:
 21446 ;;		_lcd_disp_battary
 21447 ;;		_lcd_disp_battary_off
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text118
 21452  007E98                     __ptext118:
 21453                           	opt stack 0
 21454  007E98                     _lcd_disp_battary_bar:
 21455                           	opt stack 20
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;incstack = 0
 21459                           ;lcd_disp_battary_bar@bar stored from wreg
 21460  007E98  0100               	movlb	0	; () banked
 21461  007E9A  6F70               	movwf	lcd_disp_battary_bar@bar& (0+255),b
 21462                           
 21463                           ;lcd.c: 142: if(bar>=4)bar=4;
 21464  007E9C  0E03               	movlw	3
 21465  007E9E  0100               	movlb	0	; () banked
 21466  007EA0  6570               	cpfsgt	lcd_disp_battary_bar@bar& (0+255),b
 21467  007EA2  D028               	goto	l14890
 21468                           
 21469                           ; BSR set to: 0
 21470  007EA4  0E04               	movlw	4
 21471  007EA6  0100               	movlb	0	; () banked
 21472  007EA8  6F70               	movwf	lcd_disp_battary_bar@bar& (0+255),b
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;lcd.c: 143: switch(bar){
 21476  007EAA  D024               	goto	l14890
 21477  007EAC                     l14880:
 21478                           
 21479                           ; BSR set to: 0
 21480  007EAC  0E23               	movlw	35
 21481  007EAE  0100               	movlb	0	; () banked
 21482  007EB0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21483  007EB2  C020  F069         	movff	lcd_disp_battary_bar@show,lcd_set_com_seg@show
 21484  007EB6  0E03               	movlw	3
 21485  007EB8  EC1C  F033         	call	_lcd_set_com_seg
 21486  007EBC  0012               	return	
 21487  007EBE                     l14882:
 21488  007EBE  0E23               	movlw	35
 21489  007EC0  0100               	movlb	0	; () banked
 21490  007EC2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21491  007EC4  C020  F069         	movff	lcd_disp_battary_bar@show,lcd_set_com_seg@show
 21492  007EC8  0E02               	movlw	2
 21493  007ECA  EC1C  F033         	call	_lcd_set_com_seg
 21494  007ECE  0012               	return	
 21495  007ED0                     l14884:
 21496  007ED0  0E23               	movlw	35
 21497  007ED2  0100               	movlb	0	; () banked
 21498  007ED4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21499  007ED6  C020  F069         	movff	lcd_disp_battary_bar@show,lcd_set_com_seg@show
 21500  007EDA  0E01               	movlw	1
 21501  007EDC  EC1C  F033         	call	_lcd_set_com_seg
 21502  007EE0  0012               	return	
 21503  007EE2                     l14886:
 21504  007EE2  0E23               	movlw	35
 21505  007EE4  0100               	movlb	0	; () banked
 21506  007EE6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21507  007EE8  C020  F069         	movff	lcd_disp_battary_bar@show,lcd_set_com_seg@show
 21508  007EEC  0E00               	movlw	0
 21509  007EEE  EC1C  F033         	call	_lcd_set_com_seg
 21510                           
 21511                           ;lcd.c: 148: }
 21512  007EF2  0012               	return	
 21513  007EF4                     l14890:
 21514  007EF4  0100               	movlb	0	; () banked
 21515  007EF6  5170               	movf	lcd_disp_battary_bar@bar& (0+255),w,b
 21516                           
 21517                           ; Switch size 1, requested type "space"
 21518                           ; Number of cases is 4, Range of values is 0 to 3
 21519                           ; switch strategies available:
 21520                           ; Name         Instructions Cycles
 21521                           ; simple_byte           13     7 (average)
 21522                           ;	Chosen strategy is simple_byte
 21523  007EF8  0A00               	xorlw	0	; case 0
 21524  007EFA  B4D8               	btfsc	status,2,c
 21525  007EFC  D7D7               	goto	l14880
 21526  007EFE  0A01               	xorlw	1	; case 1
 21527  007F00  B4D8               	btfsc	status,2,c
 21528  007F02  D7DD               	goto	l14882
 21529  007F04  0A03               	xorlw	3	; case 2
 21530  007F06  B4D8               	btfsc	status,2,c
 21531  007F08  D7E3               	goto	l14884
 21532  007F0A  0A01               	xorlw	1	; case 3
 21533  007F0C  A4D8               	btfss	status,2,c
 21534  007F0E  0012               	return	
 21535  007F10  D7E8               	goto	l14886
 21536  007F12                     __end_of_lcd_disp_battary_bar:
 21537                           	opt stack 0
 21538                           tosu	equ	0xFFF
 21539                           tosh	equ	0xFFE
 21540                           tosl	equ	0xFFD
 21541                           pclath	equ	0xFFA
 21542                           tblptru	equ	0xFF8
 21543                           tblptrh	equ	0xFF7
 21544                           tblptrl	equ	0xFF6
 21545                           tablat	equ	0xFF5
 21546                           prodh	equ	0xFF4
 21547                           prodl	equ	0xFF3
 21548                           intcon	equ	0xFF2
 21549                           indf0	equ	0xFEF
 21550                           postinc0	equ	0xFEE
 21551                           fsr0h	equ	0xFEA
 21552                           fsr0l	equ	0xFE9
 21553                           wreg	equ	0xFE8
 21554                           indf1	equ	0xFE7
 21555                           postinc1	equ	0xFE6
 21556                           postdec1	equ	0xFE5
 21557                           plusw1	equ	0xFE3
 21558                           fsr1h	equ	0xFE2
 21559                           fsr1l	equ	0xFE1
 21560                           indf2	equ	0xFDF
 21561                           postinc2	equ	0xFDE
 21562                           postdec2	equ	0xFDD
 21563                           plusw2	equ	0xFDB
 21564                           fsr2h	equ	0xFDA
 21565                           fsr2l	equ	0xFD9
 21566                           status	equ	0xFD8
 21567                           
 21568 ;; *************** function _ui_disp_menu_epr_ilp_scale_adj *****************
 21569 ;; Defined at:
 21570 ;;		line 718 in file "src/api/ui.c"
 21571 ;; Parameters:    Size  Location     Type
 21572 ;;		None
 21573 ;; Auto vars:     Size  Location     Type
 21574 ;;  buf             6   42[BANK0 ] unsigned char [6]
 21575 ;; Return value:  Size  Location     Type
 21576 ;;                  1    wreg      void 
 21577 ;; Registers used:
 21578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21579 ;; Tracked objects:
 21580 ;;		On entry : 0/0
 21581 ;;		On exit  : 0/0
 21582 ;;		Unchanged: 0/0
 21583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21585 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21587 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21588 ;;Total ram usage:        6 bytes
 21589 ;; Hardware stack levels used:    1
 21590 ;; Hardware stack levels required when called:   10
 21591 ;; This function calls:
 21592 ;;		_lcd_disp_all
 21593 ;;		_lcd_disp_logo
 21594 ;;		_m_mem_cpy
 21595 ;;		_ui_disp_adj_xfloat_pt
 21596 ;; This function is called by:
 21597 ;;		_ui_disp_menu
 21598 ;; This function uses a non-reentrant model
 21599 ;;
 21600                           
 21601                           	psect	text119
 21602  0067C8                     __ptext119:
 21603                           	opt stack 0
 21604  0067C8                     _ui_disp_menu_epr_ilp_scale_adj:
 21605                           	opt stack 18
 21606                           
 21607                           ;ui.c: 720: uint8_t buf[6];
 21608                           ;ui.c: 721: lcd_disp_all(0x00);;
 21609                           
 21610                           ;incstack = 0
 21611  0067C8  0E00               	movlw	0
 21612  0067CA  EC90  F04B         	call	_lcd_disp_all
 21613                           
 21614                           ;ui.c: 722: lcd_disp_logo(1);
 21615  0067CE  0E01               	movlw	1
 21616  0067D0  EC78  F04B         	call	_lcd_disp_logo
 21617                           
 21618                           ;ui.c: 723: switch(subMenu){
 21619  0067D4  D03C               	goto	l16332
 21620  0067D6                     l16322:
 21621  0067D6  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 21622  0067D8  0100               	movlb	0	; () banked
 21623  0067DA  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21624  0067DC  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 21625  0067DE  0100               	movlb	0	; () banked
 21626  0067E0  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21627  0067E2  0EDB               	movlw	low STR_27
 21628  0067E4  0100               	movlb	0	; () banked
 21629  0067E6  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21630  0067E8  0EF3               	movlw	high STR_27
 21631  0067EA  0100               	movlb	0	; () banked
 21632  0067EC  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21633  0067EE  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21634  0067F2  D03B               	goto	l16334
 21635  0067F4                     l16324:
 21636  0067F4  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 21637  0067F6  0100               	movlb	0	; () banked
 21638  0067F8  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21639  0067FA  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 21640  0067FC  0100               	movlb	0	; () banked
 21641  0067FE  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21642  006800  0EAE               	movlw	low STR_28
 21643  006802  0100               	movlb	0	; () banked
 21644  006804  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21645  006806  0EF3               	movlw	high STR_28
 21646  006808  0100               	movlb	0	; () banked
 21647  00680A  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21648  00680C  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21649  006810  D02C               	goto	l16334
 21650  006812                     l16326:
 21651  006812  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 21652  006814  0100               	movlb	0	; () banked
 21653  006816  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21654  006818  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 21655  00681A  0100               	movlb	0	; () banked
 21656  00681C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21657  00681E  0EE0               	movlw	low STR_29
 21658  006820  0100               	movlb	0	; () banked
 21659  006822  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21660  006824  0EF3               	movlw	high STR_29
 21661  006826  0100               	movlb	0	; () banked
 21662  006828  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21663  00682A  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21664  00682E  D01D               	goto	l16334
 21665  006830                     l16328:
 21666  006830  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 21667  006832  0100               	movlb	0	; () banked
 21668  006834  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21669  006836  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 21670  006838  0100               	movlb	0	; () banked
 21671  00683A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21672  00683C  0EB3               	movlw	low STR_30
 21673  00683E  0100               	movlb	0	; () banked
 21674  006840  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21675  006842  0EF3               	movlw	high STR_30
 21676  006844  0100               	movlb	0	; () banked
 21677  006846  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21678  006848  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21679  00684C  D00E               	goto	l16334
 21680  00684E                     l16332:
 21681  00684E  5032               	movf	_subMenu,w,c	;volatile
 21682                           
 21683                           ; Switch size 1, requested type "space"
 21684                           ; Number of cases is 4, Range of values is 0 to 3
 21685                           ; switch strategies available:
 21686                           ; Name         Instructions Cycles
 21687                           ; simple_byte           13     7 (average)
 21688                           ;	Chosen strategy is simple_byte
 21689  006850  0A00               	xorlw	0	; case 0
 21690  006852  B4D8               	btfsc	status,2,c
 21691  006854  D7C0               	goto	l16322
 21692  006856  0A01               	xorlw	1	; case 1
 21693  006858  B4D8               	btfsc	status,2,c
 21694  00685A  D7CC               	goto	l16324
 21695  00685C  0A03               	xorlw	3	; case 2
 21696  00685E  B4D8               	btfsc	status,2,c
 21697  006860  D7D8               	goto	l16326
 21698  006862  0A01               	xorlw	1	; case 3
 21699  006864  A4D8               	btfss	status,2,c
 21700  006866  0012               	return	
 21701  006868  D7E3               	goto	l16328
 21702  00686A                     l16334:
 21703                           
 21704                           ;ui.c: 730: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 21705  00686A  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 21706  00686C  0100               	movlb	0	; () banked
 21707  00686E  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 21708  006870  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 21709  006872  0100               	movlb	0	; () banked
 21710  006874  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 21711  006876  0E35               	movlw	low _m_floatAdj
 21712  006878  0100               	movlb	0	; () banked
 21713  00687A  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 21714  00687C  0E00               	movlw	high _m_floatAdj
 21715  00687E  0100               	movlb	0	; () banked
 21716  006880  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 21717  006882  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 21718  006886  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 21719  00688A  0012               	return		;funcret
 21720  00688C                     __end_of_ui_disp_menu_epr_ilp_scale_adj:
 21721                           	opt stack 0
 21722                           tosu	equ	0xFFF
 21723                           tosh	equ	0xFFE
 21724                           tosl	equ	0xFFD
 21725                           pclath	equ	0xFFA
 21726                           tblptru	equ	0xFF8
 21727                           tblptrh	equ	0xFF7
 21728                           tblptrl	equ	0xFF6
 21729                           tablat	equ	0xFF5
 21730                           prodh	equ	0xFF4
 21731                           prodl	equ	0xFF3
 21732                           intcon	equ	0xFF2
 21733                           indf0	equ	0xFEF
 21734                           postinc0	equ	0xFEE
 21735                           fsr0h	equ	0xFEA
 21736                           fsr0l	equ	0xFE9
 21737                           wreg	equ	0xFE8
 21738                           indf1	equ	0xFE7
 21739                           postinc1	equ	0xFE6
 21740                           postdec1	equ	0xFE5
 21741                           plusw1	equ	0xFE3
 21742                           fsr1h	equ	0xFE2
 21743                           fsr1l	equ	0xFE1
 21744                           indf2	equ	0xFDF
 21745                           postinc2	equ	0xFDE
 21746                           postdec2	equ	0xFDD
 21747                           plusw2	equ	0xFDB
 21748                           fsr2h	equ	0xFDA
 21749                           fsr2l	equ	0xFD9
 21750                           status	equ	0xFD8
 21751                           
 21752 ;; *************** function _ui_disp_menu_epr_calib_adj *****************
 21753 ;; Defined at:
 21754 ;;		line 703 in file "src/api/ui.c"
 21755 ;; Parameters:    Size  Location     Type
 21756 ;;		None
 21757 ;; Auto vars:     Size  Location     Type
 21758 ;;  buf             6   42[BANK0 ] unsigned char [6]
 21759 ;; Return value:  Size  Location     Type
 21760 ;;                  1    wreg      void 
 21761 ;; Registers used:
 21762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21763 ;; Tracked objects:
 21764 ;;		On entry : 0/0
 21765 ;;		On exit  : 0/0
 21766 ;;		Unchanged: 0/0
 21767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21769 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21771 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21772 ;;Total ram usage:        6 bytes
 21773 ;; Hardware stack levels used:    1
 21774 ;; Hardware stack levels required when called:   10
 21775 ;; This function calls:
 21776 ;;		_lcd_disp_all
 21777 ;;		_lcd_disp_logo
 21778 ;;		_m_mem_cpy
 21779 ;;		_ui_disp_adj_xfloat_pt
 21780 ;; This function is called by:
 21781 ;;		_ui_disp_menu
 21782 ;; This function uses a non-reentrant model
 21783 ;;
 21784                           
 21785                           	psect	text120
 21786  00688C                     __ptext120:
 21787                           	opt stack 0
 21788  00688C                     _ui_disp_menu_epr_calib_adj:
 21789                           	opt stack 18
 21790                           
 21791                           ;ui.c: 705: uint8_t buf[6];
 21792                           ;ui.c: 706: lcd_disp_all(0x00);;
 21793                           
 21794                           ;incstack = 0
 21795  00688C  0E00               	movlw	0
 21796  00688E  EC90  F04B         	call	_lcd_disp_all
 21797                           
 21798                           ;ui.c: 707: lcd_disp_logo(1);
 21799  006892  0E01               	movlw	1
 21800  006894  EC78  F04B         	call	_lcd_disp_logo
 21801                           
 21802                           ;ui.c: 708: switch(subMenu){
 21803  006898  D03C               	goto	l16316
 21804  00689A                     l16306:
 21805  00689A  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 21806  00689C  0100               	movlb	0	; () banked
 21807  00689E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21808  0068A0  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 21809  0068A2  0100               	movlb	0	; () banked
 21810  0068A4  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21811  0068A6  0E8B               	movlw	low STR_23
 21812  0068A8  0100               	movlb	0	; () banked
 21813  0068AA  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21814  0068AC  0EF3               	movlw	high STR_23
 21815  0068AE  0100               	movlb	0	; () banked
 21816  0068B0  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21817  0068B2  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21818  0068B6  D03A               	goto	l16318
 21819  0068B8                     l16308:
 21820  0068B8  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 21821  0068BA  0100               	movlb	0	; () banked
 21822  0068BC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21823  0068BE  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 21824  0068C0  0100               	movlb	0	; () banked
 21825  0068C2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21826  0068C4  0E9F               	movlw	low STR_24
 21827  0068C6  0100               	movlb	0	; () banked
 21828  0068C8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21829  0068CA  0EF3               	movlw	high STR_24
 21830  0068CC  0100               	movlb	0	; () banked
 21831  0068CE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21832  0068D0  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21833  0068D4  D02B               	goto	l16318
 21834  0068D6                     l16310:
 21835  0068D6  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 21836  0068D8  0100               	movlb	0	; () banked
 21837  0068DA  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21838  0068DC  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 21839  0068DE  0100               	movlb	0	; () banked
 21840  0068E0  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21841  0068E2  0E90               	movlw	low STR_25
 21842  0068E4  0100               	movlb	0	; () banked
 21843  0068E6  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21844  0068E8  0EF3               	movlw	high STR_25
 21845  0068EA  0100               	movlb	0	; () banked
 21846  0068EC  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21847  0068EE  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21848  0068F2  D01C               	goto	l16318
 21849  0068F4                     l16312:
 21850  0068F4  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 21851  0068F6  0100               	movlb	0	; () banked
 21852  0068F8  6F60               	movwf	m_mem_cpy@d& (0+255),b
 21853  0068FA  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 21854  0068FC  0100               	movlb	0	; () banked
 21855  0068FE  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 21856  006900  0EA4               	movlw	low STR_26
 21857  006902  0100               	movlb	0	; () banked
 21858  006904  6F62               	movwf	m_mem_cpy@s& (0+255),b
 21859  006906  0EF3               	movlw	high STR_26
 21860  006908  0100               	movlb	0	; () banked
 21861  00690A  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 21862  00690C  ECA9  F042         	call	_m_mem_cpy	;wreg free
 21863                           
 21864                           ;ui.c: 714: }
 21865                           
 21866                           ;ui.c: 713: default: break;
 21867  006910  D00D               	goto	l16318
 21868  006912                     l16316:
 21869  006912  5032               	movf	_subMenu,w,c	;volatile
 21870                           
 21871                           ; Switch size 1, requested type "space"
 21872                           ; Number of cases is 4, Range of values is 0 to 3
 21873                           ; switch strategies available:
 21874                           ; Name         Instructions Cycles
 21875                           ; simple_byte           13     7 (average)
 21876                           ;	Chosen strategy is simple_byte
 21877  006914  0A00               	xorlw	0	; case 0
 21878  006916  B4D8               	btfsc	status,2,c
 21879  006918  D7C0               	goto	l16306
 21880  00691A  0A01               	xorlw	1	; case 1
 21881  00691C  B4D8               	btfsc	status,2,c
 21882  00691E  D7CC               	goto	l16308
 21883  006920  0A03               	xorlw	3	; case 2
 21884  006922  B4D8               	btfsc	status,2,c
 21885  006924  D7D8               	goto	l16310
 21886  006926  0A01               	xorlw	1	; case 3
 21887  006928  B4D8               	btfsc	status,2,c
 21888  00692A  D7E4               	goto	l16312
 21889  00692C                     l16318:
 21890                           
 21891                           ;ui.c: 715: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 21892  00692C  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 21893  00692E  0100               	movlb	0	; () banked
 21894  006930  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 21895  006932  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 21896  006934  0100               	movlb	0	; () banked
 21897  006936  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 21898  006938  0E35               	movlw	low _m_floatAdj
 21899  00693A  0100               	movlb	0	; () banked
 21900  00693C  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 21901  00693E  0E00               	movlw	high _m_floatAdj
 21902  006940  0100               	movlb	0	; () banked
 21903  006942  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 21904  006944  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 21905  006948  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 21906  00694C  0012               	return		;funcret
 21907  00694E                     __end_of_ui_disp_menu_epr_calib_adj:
 21908                           	opt stack 0
 21909                           tosu	equ	0xFFF
 21910                           tosh	equ	0xFFE
 21911                           tosl	equ	0xFFD
 21912                           pclath	equ	0xFFA
 21913                           tblptru	equ	0xFF8
 21914                           tblptrh	equ	0xFF7
 21915                           tblptrl	equ	0xFF6
 21916                           tablat	equ	0xFF5
 21917                           prodh	equ	0xFF4
 21918                           prodl	equ	0xFF3
 21919                           intcon	equ	0xFF2
 21920                           indf0	equ	0xFEF
 21921                           postinc0	equ	0xFEE
 21922                           fsr0h	equ	0xFEA
 21923                           fsr0l	equ	0xFE9
 21924                           wreg	equ	0xFE8
 21925                           indf1	equ	0xFE7
 21926                           postinc1	equ	0xFE6
 21927                           postdec1	equ	0xFE5
 21928                           plusw1	equ	0xFE3
 21929                           fsr1h	equ	0xFE2
 21930                           fsr1l	equ	0xFE1
 21931                           indf2	equ	0xFDF
 21932                           postinc2	equ	0xFDE
 21933                           postdec2	equ	0xFDD
 21934                           plusw2	equ	0xFDB
 21935                           fsr2h	equ	0xFDA
 21936                           fsr2l	equ	0xFD9
 21937                           status	equ	0xFD8
 21938                           
 21939 ;; *************** function _ui_disp_menu_density_adj *****************
 21940 ;; Defined at:
 21941 ;;		line 498 in file "src/api/ui.c"
 21942 ;; Parameters:    Size  Location     Type
 21943 ;;		None
 21944 ;; Auto vars:     Size  Location     Type
 21945 ;;		None
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      void 
 21948 ;; Registers used:
 21949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21959 ;;Total ram usage:        0 bytes
 21960 ;; Hardware stack levels used:    1
 21961 ;; Hardware stack levels required when called:   10
 21962 ;; This function calls:
 21963 ;;		_lcd_disp_all
 21964 ;;		_lcd_disp_logo
 21965 ;;		_ui_disp_adj_xfloat_pt
 21966 ;; This function is called by:
 21967 ;;		_ui_disp_menu
 21968 ;; This function uses a non-reentrant model
 21969 ;;
 21970                           
 21971                           	psect	text121
 21972  0097AC                     __ptext121:
 21973                           	opt stack 0
 21974  0097AC                     _ui_disp_menu_density_adj:
 21975                           	opt stack 18
 21976                           
 21977                           ;ui.c: 500: lcd_disp_all(0x00);;
 21978                           
 21979                           ;incstack = 0
 21980  0097AC  0E00               	movlw	0
 21981  0097AE  EC90  F04B         	call	_lcd_disp_all
 21982                           
 21983                           ;ui.c: 501: lcd_disp_logo(1);
 21984  0097B2  0E01               	movlw	1
 21985  0097B4  EC78  F04B         	call	_lcd_disp_logo
 21986                           
 21987                           ;ui.c: 502: ui_disp_adj_xfloat_pt((uint8_t*)"   p",&m_floatAdj,adjLocation);
 21988  0097B8  0EEA               	movlw	low STR_6
 21989  0097BA  0100               	movlb	0	; () banked
 21990  0097BC  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 21991  0097BE  0EF3               	movlw	high STR_6
 21992  0097C0  0100               	movlb	0	; () banked
 21993  0097C2  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 21994  0097C4  0E35               	movlw	low _m_floatAdj
 21995  0097C6  0100               	movlb	0	; () banked
 21996  0097C8  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 21997  0097CA  0E00               	movlw	high _m_floatAdj
 21998  0097CC  0100               	movlb	0	; () banked
 21999  0097CE  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22000  0097D0  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22001  0097D4  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22002  0097D8  0012               	return		;funcret
 22003  0097DA                     __end_of_ui_disp_menu_density_adj:
 22004                           	opt stack 0
 22005                           tosu	equ	0xFFF
 22006                           tosh	equ	0xFFE
 22007                           tosl	equ	0xFFD
 22008                           pclath	equ	0xFFA
 22009                           tblptru	equ	0xFF8
 22010                           tblptrh	equ	0xFF7
 22011                           tblptrl	equ	0xFF6
 22012                           tablat	equ	0xFF5
 22013                           prodh	equ	0xFF4
 22014                           prodl	equ	0xFF3
 22015                           intcon	equ	0xFF2
 22016                           indf0	equ	0xFEF
 22017                           postinc0	equ	0xFEE
 22018                           fsr0h	equ	0xFEA
 22019                           fsr0l	equ	0xFE9
 22020                           wreg	equ	0xFE8
 22021                           indf1	equ	0xFE7
 22022                           postinc1	equ	0xFE6
 22023                           postdec1	equ	0xFE5
 22024                           plusw1	equ	0xFE3
 22025                           fsr1h	equ	0xFE2
 22026                           fsr1l	equ	0xFE1
 22027                           indf2	equ	0xFDF
 22028                           postinc2	equ	0xFDE
 22029                           postdec2	equ	0xFDD
 22030                           plusw2	equ	0xFDB
 22031                           fsr2h	equ	0xFDA
 22032                           fsr2l	equ	0xFD9
 22033                           status	equ	0xFD8
 22034                           
 22035 ;; *************** function _ui_disp_menu_calib_pr_adj *****************
 22036 ;; Defined at:
 22037 ;;		line 587 in file "src/api/ui.c"
 22038 ;; Parameters:    Size  Location     Type
 22039 ;;		None
 22040 ;; Auto vars:     Size  Location     Type
 22041 ;;  buf            10   42[BANK0 ] unsigned char [10]
 22042 ;;  t8              1   52[BANK0 ] unsigned char 
 22043 ;; Return value:  Size  Location     Type
 22044 ;;                  1    wreg      void 
 22045 ;; Registers used:
 22046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22047 ;; Tracked objects:
 22048 ;;		On entry : 0/0
 22049 ;;		On exit  : 0/0
 22050 ;;		Unchanged: 0/0
 22051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22053 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22055 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22056 ;;Total ram usage:       11 bytes
 22057 ;; Hardware stack levels used:    1
 22058 ;; Hardware stack levels required when called:   10
 22059 ;; This function calls:
 22060 ;;		___awmod
 22061 ;;		___lbdiv
 22062 ;;		_lcd_disp_all
 22063 ;;		_lcd_disp_logo
 22064 ;;		_lcd_disp_refresh
 22065 ;;		_lcd_show_string
 22066 ;;		_m_mem_cpy
 22067 ;;		_ui_disp_adj_xfloat_pt
 22068 ;; This function is called by:
 22069 ;;		_ui_disp_menu
 22070 ;; This function uses a non-reentrant model
 22071 ;;
 22072                           
 22073                           	psect	text122
 22074  005FAC                     __ptext122:
 22075                           	opt stack 0
 22076  005FAC                     _ui_disp_menu_calib_pr_adj:
 22077                           	opt stack 18
 22078                           
 22079                           ;ui.c: 589: uint8_t t8;
 22080                           ;ui.c: 590: uint8_t buf[10];
 22081                           ;ui.c: 591: lcd_disp_all(0x00);;
 22082                           
 22083                           ;incstack = 0
 22084  005FAC  0E00               	movlw	0
 22085  005FAE  EC90  F04B         	call	_lcd_disp_all
 22086                           
 22087                           ;ui.c: 592: lcd_disp_logo(1);
 22088  005FB2  0E01               	movlw	1
 22089  005FB4  EC78  F04B         	call	_lcd_disp_logo
 22090                           
 22091                           ;ui.c: 593: buf[0]=' ';
 22092  005FB8  0E20               	movlw	32
 22093  005FBA  0100               	movlb	0	; () banked
 22094  005FBC  6F8A               	movwf	ui_disp_menu_calib_pr_adj@buf& (0+255),b
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;ui.c: 597: buf[1]='p';
 22098  005FBE  0E70               	movlw	112
 22099  005FC0  0100               	movlb	0	; () banked
 22100  005FC2  6F8B               	movwf	(ui_disp_menu_calib_pr_adj@buf+1)& (0+255),b
 22101                           
 22102                           ; BSR set to: 0
 22103                           ;ui.c: 598: t8=calibCol;
 22104  005FC4  C030  F094         	movff	_calibCol,ui_disp_menu_calib_pr_adj@t8	;volatile
 22105                           
 22106                           ; BSR set to: 0
 22107                           ;ui.c: 599: buf[3]='0'+t8%10;
 22108  005FC8  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 22109  005FCC  0100               	movlb	0	; () banked
 22110  005FCE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22111  005FD0  0E00               	movlw	0
 22112  005FD2  0100               	movlb	0	; () banked
 22113  005FD4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22114  005FD6  0E0A               	movlw	10
 22115  005FD8  6F62               	movwf	___awmod@divisor& (0+255),b
 22116  005FDA  EC82  F039         	call	___awmod	;wreg free
 22117  005FDE  0100               	movlb	0	; () banked
 22118  005FE0  5160               	movf	?___awmod& (0+255),w,b
 22119  005FE2  0F30               	addlw	48
 22120  005FE4  0100               	movlb	0	; () banked
 22121  005FE6  6F8D               	movwf	(ui_disp_menu_calib_pr_adj@buf+3)& (0+255),b
 22122                           
 22123                           ; BSR set to: 0
 22124                           ;ui.c: 600: t8/=10;
 22125  005FE8  0E0A               	movlw	10
 22126  005FEA  6E20               	movwf	___lbdiv@divisor,c
 22127  005FEC  0100               	movlb	0	; () banked
 22128  005FEE  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 22129  005FF0  ECCE  F047         	call	___lbdiv
 22130  005FF4  0100               	movlb	0	; () banked
 22131  005FF6  6F94               	movwf	ui_disp_menu_calib_pr_adj@t8& (0+255),b
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;ui.c: 601: buf[2]='0'+t8%10;
 22135  005FF8  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 22136  005FFC  0100               	movlb	0	; () banked
 22137  005FFE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22138  006000  0E00               	movlw	0
 22139  006002  0100               	movlb	0	; () banked
 22140  006004  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22141  006006  0E0A               	movlw	10
 22142  006008  6F62               	movwf	___awmod@divisor& (0+255),b
 22143  00600A  EC82  F039         	call	___awmod	;wreg free
 22144  00600E  0100               	movlb	0	; () banked
 22145  006010  5160               	movf	?___awmod& (0+255),w,b
 22146  006012  0F30               	addlw	48
 22147  006014  0100               	movlb	0	; () banked
 22148  006016  6F8C               	movwf	(ui_disp_menu_calib_pr_adj@buf+2)& (0+255),b
 22149                           
 22150                           ; BSR set to: 0
 22151                           ;ui.c: 602: buf[4]='\0';
 22152  006018  0E00               	movlw	0
 22153  00601A  0100               	movlb	0	; () banked
 22154  00601C  6F8E               	movwf	(ui_disp_menu_calib_pr_adj@buf+4)& (0+255),b
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;ui.c: 603: if(calibCol){
 22158  00601E  5030               	movf	_calibCol,w,c	;volatile
 22159  006020  B4D8               	btfsc	status,2,c
 22160  006022  D011               	goto	l16214
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;ui.c: 604: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22164  006024  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 22165  006026  0100               	movlb	0	; () banked
 22166  006028  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22167  00602A  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 22168  00602C  0100               	movlb	0	; () banked
 22169  00602E  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22170  006030  0E35               	movlw	low _m_floatAdj
 22171  006032  0100               	movlb	0	; () banked
 22172  006034  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22173  006036  0E00               	movlw	high _m_floatAdj
 22174  006038  0100               	movlb	0	; () banked
 22175  00603A  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22176  00603C  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22177  006040  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22178                           
 22179                           ;ui.c: 605: }else{
 22180  006044  0012               	return	
 22181  006046                     l16214:
 22182                           
 22183                           ;ui.c: 606: m_mem_cpy(buf+4,"    ");
 22184  006046  0E8E               	movlw	low (ui_disp_menu_calib_pr_adj@buf+4)
 22185  006048  0100               	movlb	0	; () banked
 22186  00604A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22187  00604C  0E00               	movlw	high (ui_disp_menu_calib_pr_adj@buf+4)
 22188  00604E  0100               	movlb	0	; () banked
 22189  006050  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22190  006052  0E74               	movlw	low (STR_2+4)
 22191  006054  0100               	movlb	0	; () banked
 22192  006056  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22193  006058  0EF3               	movlw	high (STR_2+4)
 22194  00605A  0100               	movlb	0	; () banked
 22195  00605C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22196  00605E  ECA9  F042         	call	_m_mem_cpy	;wreg free
 22197                           
 22198                           ;ui.c: 607: t8=*((uint8_t*)(&adjValue));
 22199  006062  C039  F094         	movff	_adjValue,ui_disp_menu_calib_pr_adj@t8
 22200                           
 22201                           ;ui.c: 608: buf[7]='0'+ t8;
 22202  006066  0100               	movlb	0	; () banked
 22203  006068  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 22204  00606A  0F30               	addlw	48
 22205  00606C  0100               	movlb	0	; () banked
 22206  00606E  6F91               	movwf	(ui_disp_menu_calib_pr_adj@buf+7)& (0+255),b
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;ui.c: 609: buf[8]='\0';
 22210  006070  0E00               	movlw	0
 22211  006072  0100               	movlb	0	; () banked
 22212  006074  6F92               	movwf	(ui_disp_menu_calib_pr_adj@buf+8)& (0+255),b
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;ui.c: 610: lcd_show_string(buf);
 22216  006076  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 22217  006078  0100               	movlb	0	; () banked
 22218  00607A  6F73               	movwf	lcd_show_string@str& (0+255),b
 22219  00607C  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 22220  00607E  0100               	movlb	0	; () banked
 22221  006080  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 22222  006082  EC3C  F042         	call	_lcd_show_string	;wreg free
 22223                           
 22224                           ;ui.c: 611: lcd_disp_refresh();
 22225  006086  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 22226  00608A  0012               	return	
 22227  00608C                     __end_of_ui_disp_menu_calib_pr_adj:
 22228                           	opt stack 0
 22229                           tosu	equ	0xFFF
 22230                           tosh	equ	0xFFE
 22231                           tosl	equ	0xFFD
 22232                           pclath	equ	0xFFA
 22233                           tblptru	equ	0xFF8
 22234                           tblptrh	equ	0xFF7
 22235                           tblptrl	equ	0xFF6
 22236                           tablat	equ	0xFF5
 22237                           prodh	equ	0xFF4
 22238                           prodl	equ	0xFF3
 22239                           intcon	equ	0xFF2
 22240                           indf0	equ	0xFEF
 22241                           postinc0	equ	0xFEE
 22242                           fsr0h	equ	0xFEA
 22243                           fsr0l	equ	0xFE9
 22244                           wreg	equ	0xFE8
 22245                           indf1	equ	0xFE7
 22246                           postinc1	equ	0xFE6
 22247                           postdec1	equ	0xFE5
 22248                           plusw1	equ	0xFE3
 22249                           fsr1h	equ	0xFE2
 22250                           fsr1l	equ	0xFE1
 22251                           indf2	equ	0xFDF
 22252                           postinc2	equ	0xFDE
 22253                           postdec2	equ	0xFDD
 22254                           plusw2	equ	0xFDB
 22255                           fsr2h	equ	0xFDA
 22256                           fsr2l	equ	0xFD9
 22257                           status	equ	0xFD8
 22258                           
 22259 ;; *************** function _ui_disp_menu_calib_diff_adj *****************
 22260 ;; Defined at:
 22261 ;;		line 559 in file "src/api/ui.c"
 22262 ;; Parameters:    Size  Location     Type
 22263 ;;		None
 22264 ;; Auto vars:     Size  Location     Type
 22265 ;;  buf            10   42[BANK0 ] unsigned char [10]
 22266 ;;  t8              1   52[BANK0 ] unsigned char 
 22267 ;; Return value:  Size  Location     Type
 22268 ;;                  1    wreg      void 
 22269 ;; Registers used:
 22270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22271 ;; Tracked objects:
 22272 ;;		On entry : 0/0
 22273 ;;		On exit  : 0/0
 22274 ;;		Unchanged: 0/0
 22275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22277 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22279 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22280 ;;Total ram usage:       11 bytes
 22281 ;; Hardware stack levels used:    1
 22282 ;; Hardware stack levels required when called:   10
 22283 ;; This function calls:
 22284 ;;		___awmod
 22285 ;;		___lbdiv
 22286 ;;		_lcd_disp_all
 22287 ;;		_lcd_disp_logo
 22288 ;;		_lcd_disp_refresh
 22289 ;;		_lcd_show_string
 22290 ;;		_m_mem_cpy
 22291 ;;		_ui_disp_adj_xfloat_pt
 22292 ;; This function is called by:
 22293 ;;		_ui_disp_menu
 22294 ;; This function uses a non-reentrant model
 22295 ;;
 22296                           
 22297                           	psect	text123
 22298  005CD6                     __ptext123:
 22299                           	opt stack 0
 22300  005CD6                     _ui_disp_menu_calib_diff_adj:
 22301                           	opt stack 18
 22302                           
 22303                           ;ui.c: 561: uint8_t t8;
 22304                           ;ui.c: 562: uint8_t buf[10];
 22305                           ;ui.c: 563: lcd_disp_all(0x00);;
 22306                           
 22307                           ;incstack = 0
 22308  005CD6  0E00               	movlw	0
 22309  005CD8  EC90  F04B         	call	_lcd_disp_all
 22310                           
 22311                           ;ui.c: 564: lcd_disp_logo(1);
 22312  005CDC  0E01               	movlw	1
 22313  005CDE  EC78  F04B         	call	_lcd_disp_logo
 22314                           
 22315                           ;ui.c: 565: buf[0]='d';
 22316  005CE2  0E64               	movlw	100
 22317  005CE4  0100               	movlb	0	; () banked
 22318  005CE6  6F8A               	movwf	ui_disp_menu_calib_diff_adj@buf& (0+255),b
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;ui.c: 566: if(calibRow==0)buf[1]='l';
 22322  005CE8  5031               	movf	_calibRow,w,c	;volatile
 22323  005CEA  A4D8               	btfss	status,2,c
 22324  005CEC  D002               	goto	l16160
 22325                           
 22326                           ; BSR set to: 0
 22327  005CEE  0E6C               	movlw	108
 22328  005CF0  D00A               	goto	L22
 22329  005CF2                     l16160:
 22330                           
 22331                           ; BSR set to: 0
 22332                           ;ui.c: 567: else if(calibRow==1)buf[1]='c';
 22333  005CF2  0431               	decf	_calibRow,w,c	;volatile
 22334  005CF4  A4D8               	btfss	status,2,c
 22335  005CF6  D002               	goto	l16164
 22336                           
 22337                           ; BSR set to: 0
 22338  005CF8  0E63               	movlw	99
 22339  005CFA  D005               	goto	L22
 22340  005CFC                     l16164:
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;ui.c: 568: else if(calibRow==2)buf[1]='h';
 22344  005CFC  0E02               	movlw	2
 22345  005CFE  1831               	xorwf	_calibRow,w,c	;volatile
 22346  005D00  A4D8               	btfss	status,2,c
 22347  005D02  D003               	goto	l16168
 22348                           
 22349                           ; BSR set to: 0
 22350  005D04  0E68               	movlw	104
 22351  005D06                     L22:
 22352  005D06  0100               	movlb	0	; () banked
 22353  005D08  6F8B               	movwf	(ui_disp_menu_calib_diff_adj@buf+1)& (0+255),b
 22354  005D0A                     l16168:
 22355                           
 22356                           ; BSR set to: 0
 22357                           ;ui.c: 570: t8=calibCol;
 22358  005D0A  C030  F094         	movff	_calibCol,ui_disp_menu_calib_diff_adj@t8	;volatile
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;ui.c: 571: buf[3]='0'+t8%10;
 22362  005D0E  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 22363  005D12  0100               	movlb	0	; () banked
 22364  005D14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22365  005D16  0E00               	movlw	0
 22366  005D18  0100               	movlb	0	; () banked
 22367  005D1A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22368  005D1C  0E0A               	movlw	10
 22369  005D1E  6F62               	movwf	___awmod@divisor& (0+255),b
 22370  005D20  EC82  F039         	call	___awmod	;wreg free
 22371  005D24  0100               	movlb	0	; () banked
 22372  005D26  5160               	movf	?___awmod& (0+255),w,b
 22373  005D28  0F30               	addlw	48
 22374  005D2A  0100               	movlb	0	; () banked
 22375  005D2C  6F8D               	movwf	(ui_disp_menu_calib_diff_adj@buf+3)& (0+255),b
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;ui.c: 572: t8/=10;
 22379  005D2E  0E0A               	movlw	10
 22380  005D30  6E20               	movwf	___lbdiv@divisor,c
 22381  005D32  0100               	movlb	0	; () banked
 22382  005D34  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 22383  005D36  ECCE  F047         	call	___lbdiv
 22384  005D3A  0100               	movlb	0	; () banked
 22385  005D3C  6F94               	movwf	ui_disp_menu_calib_diff_adj@t8& (0+255),b
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;ui.c: 573: buf[2]='0'+t8%10;
 22389  005D3E  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 22390  005D42  0100               	movlb	0	; () banked
 22391  005D44  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22392  005D46  0E00               	movlw	0
 22393  005D48  0100               	movlb	0	; () banked
 22394  005D4A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22395  005D4C  0E0A               	movlw	10
 22396  005D4E  6F62               	movwf	___awmod@divisor& (0+255),b
 22397  005D50  EC82  F039         	call	___awmod	;wreg free
 22398  005D54  0100               	movlb	0	; () banked
 22399  005D56  5160               	movf	?___awmod& (0+255),w,b
 22400  005D58  0F30               	addlw	48
 22401  005D5A  0100               	movlb	0	; () banked
 22402  005D5C  6F8C               	movwf	(ui_disp_menu_calib_diff_adj@buf+2)& (0+255),b
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;ui.c: 574: buf[4]='\0';
 22406  005D5E  0E00               	movlw	0
 22407  005D60  0100               	movlb	0	; () banked
 22408  005D62  6F8E               	movwf	(ui_disp_menu_calib_diff_adj@buf+4)& (0+255),b
 22409                           
 22410                           ; BSR set to: 0
 22411                           ;ui.c: 575: if(calibCol){
 22412  005D64  5030               	movf	_calibCol,w,c	;volatile
 22413  005D66  B4D8               	btfsc	status,2,c
 22414  005D68  D011               	goto	l16182
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;ui.c: 576: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22418  005D6A  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 22419  005D6C  0100               	movlb	0	; () banked
 22420  005D6E  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22421  005D70  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 22422  005D72  0100               	movlb	0	; () banked
 22423  005D74  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22424  005D76  0E35               	movlw	low _m_floatAdj
 22425  005D78  0100               	movlb	0	; () banked
 22426  005D7A  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22427  005D7C  0E00               	movlw	high _m_floatAdj
 22428  005D7E  0100               	movlb	0	; () banked
 22429  005D80  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22430  005D82  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22431  005D86  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22432                           
 22433                           ;ui.c: 577: }else{
 22434  005D8A  0012               	return	
 22435  005D8C                     l16182:
 22436                           
 22437                           ;ui.c: 578: m_mem_cpy(buf+4,(uint8_t*)"    ");
 22438  005D8C  0E8E               	movlw	low (ui_disp_menu_calib_diff_adj@buf+4)
 22439  005D8E  0100               	movlb	0	; () banked
 22440  005D90  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22441  005D92  0E00               	movlw	high (ui_disp_menu_calib_diff_adj@buf+4)
 22442  005D94  0100               	movlb	0	; () banked
 22443  005D96  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22444  005D98  0E74               	movlw	low (STR_2+4)
 22445  005D9A  0100               	movlb	0	; () banked
 22446  005D9C  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22447  005D9E  0EF3               	movlw	high (STR_2+4)
 22448  005DA0  0100               	movlb	0	; () banked
 22449  005DA2  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22450  005DA4  ECA9  F042         	call	_m_mem_cpy	;wreg free
 22451                           
 22452                           ;ui.c: 579: t8=*((uint8_t*)(&adjValue));
 22453  005DA8  C039  F094         	movff	_adjValue,ui_disp_menu_calib_diff_adj@t8
 22454                           
 22455                           ;ui.c: 580: buf[7]='0'+ t8;;
 22456  005DAC  0100               	movlb	0	; () banked
 22457  005DAE  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 22458  005DB0  0F30               	addlw	48
 22459  005DB2  0100               	movlb	0	; () banked
 22460  005DB4  6F91               	movwf	(ui_disp_menu_calib_diff_adj@buf+7)& (0+255),b
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;ui.c: 581: buf[8]='\0';
 22464  005DB6  0E00               	movlw	0
 22465  005DB8  0100               	movlb	0	; () banked
 22466  005DBA  6F92               	movwf	(ui_disp_menu_calib_diff_adj@buf+8)& (0+255),b
 22467                           
 22468                           ; BSR set to: 0
 22469                           ;ui.c: 582: lcd_show_string(buf);
 22470  005DBC  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 22471  005DBE  0100               	movlb	0	; () banked
 22472  005DC0  6F73               	movwf	lcd_show_string@str& (0+255),b
 22473  005DC2  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 22474  005DC4  0100               	movlb	0	; () banked
 22475  005DC6  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 22476  005DC8  EC3C  F042         	call	_lcd_show_string	;wreg free
 22477                           
 22478                           ;ui.c: 583: lcd_disp_refresh();
 22479  005DCC  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 22480  005DD0  0012               	return	
 22481  005DD2                     __end_of_ui_disp_menu_calib_diff_adj:
 22482                           	opt stack 0
 22483                           tosu	equ	0xFFF
 22484                           tosh	equ	0xFFE
 22485                           tosl	equ	0xFFD
 22486                           pclath	equ	0xFFA
 22487                           tblptru	equ	0xFF8
 22488                           tblptrh	equ	0xFF7
 22489                           tblptrl	equ	0xFF6
 22490                           tablat	equ	0xFF5
 22491                           prodh	equ	0xFF4
 22492                           prodl	equ	0xFF3
 22493                           intcon	equ	0xFF2
 22494                           indf0	equ	0xFEF
 22495                           postinc0	equ	0xFEE
 22496                           fsr0h	equ	0xFEA
 22497                           fsr0l	equ	0xFE9
 22498                           wreg	equ	0xFE8
 22499                           indf1	equ	0xFE7
 22500                           postinc1	equ	0xFE6
 22501                           postdec1	equ	0xFE5
 22502                           plusw1	equ	0xFE3
 22503                           fsr1h	equ	0xFE2
 22504                           fsr1l	equ	0xFE1
 22505                           indf2	equ	0xFDF
 22506                           postinc2	equ	0xFDE
 22507                           postdec2	equ	0xFDD
 22508                           plusw2	equ	0xFDB
 22509                           fsr2h	equ	0xFDA
 22510                           fsr2l	equ	0xFD9
 22511                           status	equ	0xFD8
 22512                           
 22513 ;; *************** function ___lbdiv *****************
 22514 ;; Defined at:
 22515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbdiv.c"
 22516 ;; Parameters:    Size  Location     Type
 22517 ;;  dividend        1    wreg     unsigned char 
 22518 ;;  divisor         1   31[COMRAM] unsigned char 
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;  dividend        1    0[BANK0 ] unsigned char 
 22521 ;;  quotient        1    2[BANK0 ] unsigned char 
 22522 ;;  counter         1    1[BANK0 ] unsigned char 
 22523 ;; Return value:  Size  Location     Type
 22524 ;;                  1    wreg      unsigned char 
 22525 ;; Registers used:
 22526 ;;		wreg, status,2, status,0
 22527 ;; Tracked objects:
 22528 ;;		On entry : 0/0
 22529 ;;		On exit  : 0/0
 22530 ;;		Unchanged: 0/0
 22531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22533 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22535 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22536 ;;Total ram usage:        4 bytes
 22537 ;; Hardware stack levels used:    1
 22538 ;; Hardware stack levels required when called:    4
 22539 ;; This function calls:
 22540 ;;		Nothing
 22541 ;; This function is called by:
 22542 ;;		_ui_disp_menu_calib_diff_adj
 22543 ;;		_ui_disp_menu_calib_pr_adj
 22544 ;;		_lcd_disp_battary
 22545 ;;		_lcd_disp_rf
 22546 ;;		_lcd_disp_light
 22547 ;; This function uses a non-reentrant model
 22548 ;;
 22549                           
 22550                           	psect	text124
 22551  008F9C                     __ptext124:
 22552                           	opt stack 0
 22553  008F9C                     ___lbdiv:
 22554                           	opt stack 22
 22555                           
 22556                           ;incstack = 0
 22557                           ;___lbdiv@dividend stored from wreg
 22558  008F9C  0100               	movlb	0	; () banked
 22559  008F9E  6F60               	movwf	___lbdiv@dividend& (0+255),b
 22560  008FA0  0E00               	movlw	0
 22561  008FA2  0100               	movlb	0	; () banked
 22562  008FA4  6F62               	movwf	___lbdiv@quotient& (0+255),b
 22563                           
 22564                           ; BSR set to: 0
 22565  008FA6  5020               	movf	___lbdiv@divisor,w,c
 22566  008FA8  B4D8               	btfsc	status,2,c
 22567  008FAA  D01C               	goto	l14942
 22568                           
 22569                           ; BSR set to: 0
 22570  008FAC  0E01               	movlw	1
 22571  008FAE  0100               	movlb	0	; () banked
 22572  008FB0  6F61               	movwf	___lbdiv@counter& (0+255),b
 22573  008FB2  D004               	goto	l14930
 22574  008FB4                     l14926:
 22575                           
 22576                           ; BSR set to: 0
 22577  008FB4  90D8               	bcf	status,0,c
 22578  008FB6  3620               	rlcf	___lbdiv@divisor,f,c
 22579                           
 22580                           ; BSR set to: 0
 22581  008FB8  0100               	movlb	0	; () banked
 22582  008FBA  2B61               	incf	___lbdiv@counter& (0+255),f,b
 22583  008FBC                     l14930:
 22584                           
 22585                           ; BSR set to: 0
 22586  008FBC  AE20               	btfss	___lbdiv@divisor,7,c
 22587  008FBE  D7FA               	goto	l14926
 22588  008FC0                     l14932:
 22589                           
 22590                           ; BSR set to: 0
 22591  008FC0  0100               	movlb	0	; () banked
 22592  008FC2  90D8               	bcf	status,0,c
 22593  008FC4  3762               	rlcf	___lbdiv@quotient& (0+255),f,b
 22594  008FC6  5020               	movf	___lbdiv@divisor,w,c
 22595  008FC8  0100               	movlb	0	; () banked
 22596  008FCA  5D60               	subwf	___lbdiv@dividend& (0+255),w,b
 22597  008FCC  A0D8               	btfss	status,0,c
 22598  008FCE  D005               	goto	l14938
 22599                           
 22600                           ; BSR set to: 0
 22601  008FD0  5020               	movf	___lbdiv@divisor,w,c
 22602  008FD2  0100               	movlb	0	; () banked
 22603  008FD4  5F60               	subwf	___lbdiv@dividend& (0+255),f,b
 22604                           
 22605                           ; BSR set to: 0
 22606  008FD6  0100               	movlb	0	; () banked
 22607  008FD8  8162               	bsf	___lbdiv@quotient& (0+255),0,b
 22608  008FDA                     l14938:
 22609                           
 22610                           ; BSR set to: 0
 22611  008FDA  90D8               	bcf	status,0,c
 22612  008FDC  3220               	rrcf	___lbdiv@divisor,f,c
 22613                           
 22614                           ; BSR set to: 0
 22615  008FDE  0100               	movlb	0	; () banked
 22616  008FE0  2F61               	decfsz	___lbdiv@counter& (0+255),f,b
 22617  008FE2  D7EE               	goto	l14932
 22618  008FE4                     l14942:
 22619                           
 22620                           ; BSR set to: 0
 22621  008FE4  0100               	movlb	0	; () banked
 22622  008FE6  5162               	movf	___lbdiv@quotient& (0+255),w,b
 22623  008FE8  0012               	return	
 22624  008FEA                     __end_of___lbdiv:
 22625                           	opt stack 0
 22626                           tosu	equ	0xFFF
 22627                           tosh	equ	0xFFE
 22628                           tosl	equ	0xFFD
 22629                           pclath	equ	0xFFA
 22630                           tblptru	equ	0xFF8
 22631                           tblptrh	equ	0xFF7
 22632                           tblptrl	equ	0xFF6
 22633                           tablat	equ	0xFF5
 22634                           prodh	equ	0xFF4
 22635                           prodl	equ	0xFF3
 22636                           intcon	equ	0xFF2
 22637                           indf0	equ	0xFEF
 22638                           postinc0	equ	0xFEE
 22639                           fsr0h	equ	0xFEA
 22640                           fsr0l	equ	0xFE9
 22641                           wreg	equ	0xFE8
 22642                           indf1	equ	0xFE7
 22643                           postinc1	equ	0xFE6
 22644                           postdec1	equ	0xFE5
 22645                           plusw1	equ	0xFE3
 22646                           fsr1h	equ	0xFE2
 22647                           fsr1l	equ	0xFE1
 22648                           indf2	equ	0xFDF
 22649                           postinc2	equ	0xFDE
 22650                           postdec2	equ	0xFDD
 22651                           plusw2	equ	0xFDB
 22652                           fsr2h	equ	0xFDA
 22653                           fsr2l	equ	0xFD9
 22654                           status	equ	0xFD8
 22655                           
 22656 ;; *************** function _ui_disp_menu_bzero_adj *****************
 22657 ;; Defined at:
 22658 ;;		line 552 in file "src/api/ui.c"
 22659 ;; Parameters:    Size  Location     Type
 22660 ;;		None
 22661 ;; Auto vars:     Size  Location     Type
 22662 ;;		None
 22663 ;; Return value:  Size  Location     Type
 22664 ;;                  1    wreg      void 
 22665 ;; Registers used:
 22666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22667 ;; Tracked objects:
 22668 ;;		On entry : 0/0
 22669 ;;		On exit  : 0/0
 22670 ;;		Unchanged: 0/0
 22671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22676 ;;Total ram usage:        0 bytes
 22677 ;; Hardware stack levels used:    1
 22678 ;; Hardware stack levels required when called:   10
 22679 ;; This function calls:
 22680 ;;		_lcd_disp_all
 22681 ;;		_lcd_disp_logo
 22682 ;;		_ui_disp_adj_xfloat_pt
 22683 ;; This function is called by:
 22684 ;;		_ui_disp_menu
 22685 ;; This function uses a non-reentrant model
 22686 ;;
 22687                           
 22688                           	psect	text125
 22689  0097DA                     __ptext125:
 22690                           	opt stack 0
 22691  0097DA                     _ui_disp_menu_bzero_adj:
 22692                           	opt stack 18
 22693                           
 22694                           ;ui.c: 554: lcd_disp_all(0x00);;
 22695                           
 22696                           ; BSR set to: 0
 22697                           ;incstack = 0
 22698  0097DA  0E00               	movlw	0
 22699  0097DC  EC90  F04B         	call	_lcd_disp_all
 22700                           
 22701                           ;ui.c: 555: lcd_disp_logo(1);
 22702  0097E0  0E01               	movlw	1
 22703  0097E2  EC78  F04B         	call	_lcd_disp_logo
 22704                           
 22705                           ;ui.c: 556: ui_disp_adj_xfloat_pt((uint8_t*)"  hb",&m_floatAdj,adjLocation);
 22706  0097E6  0EB8               	movlw	low STR_12
 22707  0097E8  0100               	movlb	0	; () banked
 22708  0097EA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22709  0097EC  0EF3               	movlw	high STR_12
 22710  0097EE  0100               	movlb	0	; () banked
 22711  0097F0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22712  0097F2  0E35               	movlw	low _m_floatAdj
 22713  0097F4  0100               	movlb	0	; () banked
 22714  0097F6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22715  0097F8  0E00               	movlw	high _m_floatAdj
 22716  0097FA  0100               	movlb	0	; () banked
 22717  0097FC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22718  0097FE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22719  009802  EC7F  F018         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22720  009806  0012               	return		;funcret
 22721  009808                     __end_of_ui_disp_menu_bzero_adj:
 22722                           	opt stack 0
 22723                           tosu	equ	0xFFF
 22724                           tosh	equ	0xFFE
 22725                           tosl	equ	0xFFD
 22726                           pclath	equ	0xFFA
 22727                           tblptru	equ	0xFF8
 22728                           tblptrh	equ	0xFF7
 22729                           tblptrl	equ	0xFF6
 22730                           tablat	equ	0xFF5
 22731                           prodh	equ	0xFF4
 22732                           prodl	equ	0xFF3
 22733                           intcon	equ	0xFF2
 22734                           indf0	equ	0xFEF
 22735                           postinc0	equ	0xFEE
 22736                           fsr0h	equ	0xFEA
 22737                           fsr0l	equ	0xFE9
 22738                           wreg	equ	0xFE8
 22739                           indf1	equ	0xFE7
 22740                           postinc1	equ	0xFE6
 22741                           postdec1	equ	0xFE5
 22742                           plusw1	equ	0xFE3
 22743                           fsr1h	equ	0xFE2
 22744                           fsr1l	equ	0xFE1
 22745                           indf2	equ	0xFDF
 22746                           postinc2	equ	0xFDE
 22747                           postdec2	equ	0xFDD
 22748                           plusw2	equ	0xFDB
 22749                           fsr2h	equ	0xFDA
 22750                           fsr2l	equ	0xFD9
 22751                           status	equ	0xFD8
 22752                           
 22753 ;; *************** function _ui_disp_adj_xfloat_pt *****************
 22754 ;; Defined at:
 22755 ;;		line 204 in file "src/api/ui.c"
 22756 ;; Parameters:    Size  Location     Type
 22757 ;;  str             2   22[BANK0 ] PTR unsigned char 
 22758 ;;		 -> ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui_disp_menu_warn_v_adj@buf(6), ui_dis
      +p_menu_calib_pr_adj@buf(10), 
 22759 ;;		 -> ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), STR_11(5), STR_10(5), 
 22760 ;;		 -> STR_9(5), STR_6(5), 
 22761 ;;  xpf             2   24[BANK0 ] PTR struct .
 22762 ;;		 -> m_floatAdj(4), 
 22763 ;;  loc             1   26[BANK0 ] unsigned char 
 22764 ;; Auto vars:     Size  Location     Type
 22765 ;;  buf            10   29[BANK0 ] unsigned char [10]
 22766 ;;  x               2   39[BANK0 ] unsigned int 
 22767 ;;  t8              1   41[BANK0 ] unsigned char 
 22768 ;; Return value:  Size  Location     Type
 22769 ;;                  1    wreg      void 
 22770 ;; Registers used:
 22771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22777 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22778 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22780 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22781 ;;Total ram usage:       20 bytes
 22782 ;; Hardware stack levels used:    1
 22783 ;; Hardware stack levels required when called:    9
 22784 ;; This function calls:
 22785 ;;		___x_arrange_str
 22786 ;;		_lcd_disp_refresh
 22787 ;;		_lcd_show_dp
 22788 ;;		_lcd_show_string
 22789 ;;		_m_int16_2_str_4
 22790 ;;		_m_mem_cpy
 22791 ;; This function is called by:
 22792 ;;		_ui_disp_menu_density_adj
 22793 ;;		_ui_disp_menu_h_adj
 22794 ;;		_ui_disp_menu_d_adj
 22795 ;;		_ui_disp_menu_bzero_adj
 22796 ;;		_ui_disp_menu_calib_diff_adj
 22797 ;;		_ui_disp_menu_calib_pr_adj
 22798 ;;		_ui_disp_menu_warn_v_adj
 22799 ;;		_ui_disp_menu_epr_calib_adj
 22800 ;;		_ui_disp_menu_epr_ilp_scale_adj
 22801 ;; This function uses a non-reentrant model
 22802 ;;
 22803                           
 22804                           	psect	text126
 22805  0030FE                     __ptext126:
 22806                           	opt stack 0
 22807  0030FE                     _ui_disp_adj_xfloat_pt:
 22808                           	opt stack 18
 22809                           
 22810                           ;ui.c: 207: uint8_t buf[10];
 22811                           ;ui.c: 209: uint16_t x;
 22812                           ;ui.c: 210: uint8_t t8;
 22813                           ;ui.c: 218: x=xpf->stru.significand;
 22814                           
 22815                           ;incstack = 0
 22816  0030FE  C078  FFD9         	movff	ui_disp_adj_xfloat_pt@xpf,fsr2l
 22817  003102  C079  FFDA         	movff	ui_disp_adj_xfloat_pt@xpf+1,fsr2h
 22818  003106  CFDE F087          	movff	postinc2,ui_disp_adj_xfloat_pt@x
 22819  00310A  CFDD F088          	movff	postdec2,ui_disp_adj_xfloat_pt@x+1
 22820                           
 22821                           ;ui.c: 219: m_mem_cpy(buf,str);
 22822  00310E  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 22823  003110  0100               	movlb	0	; () banked
 22824  003112  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22825  003114  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 22826  003116  0100               	movlb	0	; () banked
 22827  003118  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22828  00311A  C076  F062         	movff	ui_disp_adj_xfloat_pt@str,m_mem_cpy@s
 22829  00311E  C077  F063         	movff	ui_disp_adj_xfloat_pt@str+1,m_mem_cpy@s+1
 22830  003122  ECA9  F042         	call	_m_mem_cpy	;wreg free
 22831                           
 22832                           ;ui.c: 220: if(xpf->stru.sign==0){
 22833  003126  0100               	movlb	0	; () banked
 22834  003128  EE20 F003          	lfsr	2,3
 22835  00312C  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 22836  00312E  26D9               	addwf	fsr2l,f,c
 22837  003130  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 22838  003132  22DA               	addwfc	fsr2h,f,c
 22839  003134  50DF               	movf	indf2,w,c
 22840  003136  A4D8               	btfss	status,2,c
 22841  003138  D072               	goto	l14766
 22842                           
 22843                           ; BSR set to: 0
 22844                           ;ui.c: 221: if(x>9999)x=9999;
 22845  00313A  0E10               	movlw	16
 22846  00313C  0100               	movlb	0	; () banked
 22847  00313E  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 22848  003140  0E27               	movlw	39
 22849  003142  0100               	movlb	0	; () banked
 22850  003144  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 22851  003146  A0D8               	btfss	status,0,c
 22852  003148  D005               	goto	l14734
 22853                           
 22854                           ; BSR set to: 0
 22855  00314A  0E27               	movlw	39
 22856  00314C  0100               	movlb	0	; () banked
 22857  00314E  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 22858  003150  0E0F               	movlw	15
 22859  003152  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 22860  003154                     l14734:
 22861                           
 22862                           ; BSR set to: 0
 22863                           ;ui.c: 222: m_int16_2_str_4(buf+4,x);
 22864  003154  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 22865  003156  0100               	movlb	0	; () banked
 22866  003158  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 22867  00315A  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 22868  00315C  0100               	movlb	0	; () banked
 22869  00315E  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 22870  003160  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 22871  003164  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 22872  003168  EC59  F024         	call	_m_int16_2_str_4	;wreg free
 22873                           
 22874                           ;ui.c: 223: __x_arrange_str(buf,8);
 22875  00316C  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 22876  00316E  0100               	movlb	0	; () banked
 22877  003170  6F60               	movwf	___x_arrange_str@str& (0+255),b
 22878  003172  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 22879  003174  0100               	movlb	0	; () banked
 22880  003176  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 22881  003178  0E08               	movlw	8
 22882  00317A  0100               	movlb	0	; () banked
 22883  00317C  6F62               	movwf	___x_arrange_str@len& (0+255),b
 22884  00317E  EC9A  F045         	call	___x_arrange_str	;wreg free
 22885                           
 22886                           ;ui.c: 224: t8=xpf->stru.exponent;
 22887  003182  0100               	movlb	0	; () banked
 22888  003184  EE20 F002          	lfsr	2,2
 22889  003188  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 22890  00318A  26D9               	addwf	fsr2l,f,c
 22891  00318C  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 22892  00318E  22DA               	addwfc	fsr2h,f,c
 22893  003190  50DF               	movf	indf2,w,c
 22894  003192  0100               	movlb	0	; () banked
 22895  003194  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 22896                           
 22897                           ; BSR set to: 0
 22898                           ;ui.c: 225: lcd_show_dp(4+t8,1);
 22899  003196  0E01               	movlw	1
 22900  003198  0100               	movlb	0	; () banked
 22901  00319A  6F70               	movwf	lcd_show_dp@show& (0+255),b
 22902  00319C  0100               	movlb	0	; () banked
 22903  00319E  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 22904  0031A0  0F04               	addlw	4
 22905  0031A2  EC73  F042         	call	_lcd_show_dp
 22906                           
 22907                           ;ui.c: 226: if(loc<4){
 22908  0031A6  0E04               	movlw	4
 22909  0031A8  0100               	movlb	0	; () banked
 22910  0031AA  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 22911  0031AC  D007               	goto	l14752
 22912                           
 22913                           ; BSR set to: 0
 22914                           ;ui.c: 227: loc=3-loc;
 22915  0031AE  0100               	movlb	0	; () banked
 22916  0031B0  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 22917  0031B2  0800               	sublw	0
 22918  0031B4  0F03               	addlw	3
 22919  0031B6  0100               	movlb	0	; () banked
 22920  0031B8  6F7A               	movwf	ui_disp_adj_xfloat_pt@loc& (0+255),b
 22921  0031BA  D078               	goto	l14788
 22922  0031BC                     l14752:
 22923                           
 22924                           ; BSR set to: 0
 22925  0031BC  0E04               	movlw	4
 22926  0031BE  0100               	movlb	0	; () banked
 22927  0031C0  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 22928  0031C2  A4D8               	btfss	status,2,c
 22929  0031C4  D00F               	goto	l828
 22930                           
 22931                           ; BSR set to: 0
 22932                           ;ui.c: 230: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+t8,0);
 22933  0031C6  010F               	movlb	15	; () banked
 22934  0031C8  B75F               	btfsc	95,3,b	;volatile
 22935  0031CA  D0BB               	goto	l14808
 22936                           
 22937                           ; BSR set to: 15
 22938  0031CC  5034               	movf	_lcdTwinkle,w,c
 22939  0031CE  A4D8               	btfss	status,2,c
 22940  0031D0  D0B8               	goto	l14808
 22941                           
 22942                           ; BSR set to: 15
 22943  0031D2  0E00               	movlw	0
 22944  0031D4  0100               	movlb	0	; () banked
 22945  0031D6  6F70               	movwf	lcd_show_dp@show& (0+255),b
 22946  0031D8  0100               	movlb	0	; () banked
 22947  0031DA  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 22948  0031DC  0F04               	addlw	4
 22949  0031DE  EC73  F042         	call	_lcd_show_dp
 22950                           
 22951                           ;ui.c: 231: }else{
 22952  0031E2  D0AF               	goto	l14808
 22953  0031E4                     l828:
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;ui.c: 232: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 22957  0031E4  010F               	movlb	15	; () banked
 22958  0031E6  B75F               	btfsc	95,3,b	;volatile
 22959  0031E8  D0AC               	goto	l14808
 22960                           
 22961                           ; BSR set to: 15
 22962  0031EA  5034               	movf	_lcdTwinkle,w,c
 22963  0031EC  A4D8               	btfss	status,2,c
 22964  0031EE  D0A9               	goto	l14808
 22965                           
 22966                           ; BSR set to: 15
 22967                           ;ui.c: 233: m_mem_cpy(buf+4,(uint8_t*)("    "));
 22968  0031F0  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 22969  0031F2  0100               	movlb	0	; () banked
 22970  0031F4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22971  0031F6  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 22972  0031F8  0100               	movlb	0	; () banked
 22973  0031FA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22974  0031FC  0E74               	movlw	low (STR_2+4)
 22975  0031FE  0100               	movlb	0	; () banked
 22976  003200  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22977  003202  0EF3               	movlw	high (STR_2+4)
 22978  003204  0100               	movlb	0	; () banked
 22979  003206  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22980  003208  ECA9  F042         	call	_m_mem_cpy	;wreg free
 22981                           
 22982                           ;ui.c: 234: lcd_show_dp(4+t8,0);
 22983  00320C  0E00               	movlw	0
 22984  00320E  0100               	movlb	0	; () banked
 22985  003210  6F70               	movwf	lcd_show_dp@show& (0+255),b
 22986  003212  0100               	movlb	0	; () banked
 22987  003214  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 22988  003216  0F04               	addlw	4
 22989  003218  EC73  F042         	call	_lcd_show_dp
 22990                           
 22991                           ;ui.c: 235: }
 22992                           ;ui.c: 236: }
 22993                           ;ui.c: 237: }else{
 22994  00321C  D092               	goto	l14808
 22995  00321E                     l14766:
 22996                           
 22997                           ;ui.c: 238: if(loc==0)return;
 22998  00321E  0100               	movlb	0	; () banked
 22999  003220  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23000  003222  0100               	movlb	0	; () banked
 23001  003224  B4D8               	btfsc	status,2,c
 23002  003226  0012               	return	
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;ui.c: 239: if(x>9999)x=9999;
 23006                           
 23007                           ; BSR set to: 0
 23008                           
 23009                           ; BSR set to: 0
 23010  003228  0E10               	movlw	16
 23011  00322A  0100               	movlb	0	; () banked
 23012  00322C  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 23013  00322E  0E27               	movlw	39
 23014  003230  0100               	movlb	0	; () banked
 23015  003232  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 23016  003234  A0D8               	btfss	status,0,c
 23017  003236  D005               	goto	l14774
 23018                           
 23019                           ; BSR set to: 0
 23020  003238  0E27               	movlw	39
 23021  00323A  0100               	movlb	0	; () banked
 23022  00323C  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 23023  00323E  0E0F               	movlw	15
 23024  003240  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 23025  003242                     l14774:
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;ui.c: 241: m_int16_2_str_4(buf+5,x);
 23029  003242  0E82               	movlw	low (ui_disp_adj_xfloat_pt@buf+5)
 23030  003244  0100               	movlb	0	; () banked
 23031  003246  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 23032  003248  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+5)
 23033  00324A  0100               	movlb	0	; () banked
 23034  00324C  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 23035  00324E  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 23036  003252  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 23037  003256  EC59  F024         	call	_m_int16_2_str_4	;wreg free
 23038                           
 23039                           ;ui.c: 242: buf[4]='-';
 23040  00325A  0E2D               	movlw	45
 23041  00325C  0100               	movlb	0	; () banked
 23042  00325E  6F81               	movwf	(ui_disp_adj_xfloat_pt@buf+4)& (0+255),b
 23043                           
 23044                           ; BSR set to: 0
 23045                           ;ui.c: 243: __x_arrange_str(buf,8);
 23046  003260  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23047  003262  0100               	movlb	0	; () banked
 23048  003264  6F60               	movwf	___x_arrange_str@str& (0+255),b
 23049  003266  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23050  003268  0100               	movlb	0	; () banked
 23051  00326A  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 23052  00326C  0E08               	movlw	8
 23053  00326E  0100               	movlb	0	; () banked
 23054  003270  6F62               	movwf	___x_arrange_str@len& (0+255),b
 23055  003272  EC9A  F045         	call	___x_arrange_str	;wreg free
 23056                           
 23057                           ;ui.c: 244: t8=xpf->stru.exponent;
 23058  003276  0100               	movlb	0	; () banked
 23059  003278  EE20 F002          	lfsr	2,2
 23060  00327C  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 23061  00327E  26D9               	addwf	fsr2l,f,c
 23062  003280  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 23063  003282  22DA               	addwfc	fsr2h,f,c
 23064  003284  50DF               	movf	indf2,w,c
 23065  003286  0100               	movlb	0	; () banked
 23066  003288  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 23067                           
 23068                           ; BSR set to: 0
 23069                           ;ui.c: 245: lcd_show_dp(4+1+t8,1);
 23070  00328A  0E01               	movlw	1
 23071  00328C  0100               	movlb	0	; () banked
 23072  00328E  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23073  003290  0100               	movlb	0	; () banked
 23074  003292  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23075  003294  0F05               	addlw	5
 23076  003296  EC73  F042         	call	_lcd_show_dp
 23077                           
 23078                           ;ui.c: 246: if(loc<4){
 23079  00329A  0E04               	movlw	4
 23080  00329C  0100               	movlb	0	; () banked
 23081  00329E  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 23082  0032A0  D020               	goto	l14794
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;ui.c: 247: loc=3-loc+1;
 23086  0032A2  0100               	movlb	0	; () banked
 23087  0032A4  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23088  0032A6  0800               	sublw	0
 23089  0032A8  0F04               	addlw	4
 23090  0032AA  D785               	goto	L23
 23091  0032AC                     l14788:
 23092                           
 23093                           ; BSR set to: 0
 23094                           ;ui.c: 248: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))buf[4+loc]=' ';
 23095  0032AC  010F               	movlb	15	; () banked
 23096  0032AE  B75F               	btfsc	95,3,b	;volatile
 23097  0032B0  D048               	goto	l14808
 23098                           
 23099                           ; BSR set to: 15
 23100  0032B2  5034               	movf	_lcdTwinkle,w,c
 23101  0032B4  A4D8               	btfss	status,2,c
 23102  0032B6  D045               	goto	l14808
 23103                           
 23104                           ; BSR set to: 15
 23105  0032B8  0100               	movlb	0	; () banked
 23106  0032BA  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23107  0032BC  0100               	movlb	0	; () banked
 23108  0032BE  6F7B               	movwf	??_ui_disp_adj_xfloat_pt& (0+255),b
 23109  0032C0  6B7C               	clrf	(??_ui_disp_adj_xfloat_pt+1)& (0+255),b
 23110  0032C2  0E04               	movlw	4
 23111  0032C4  0100               	movlb	0	; () banked
 23112  0032C6  277B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),f,b
 23113  0032C8  0E00               	movlw	0
 23114  0032CA  237C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),f,b
 23115  0032CC  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23116  0032CE  0100               	movlb	0	; () banked
 23117  0032D0  257B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),w,b
 23118  0032D2  6ED9               	movwf	fsr2l,c
 23119  0032D4  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23120  0032D6  0100               	movlb	0	; () banked
 23121  0032D8  217C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),w,b
 23122  0032DA  6EDA               	movwf	fsr2h,c
 23123  0032DC  0E20               	movlw	32
 23124  0032DE  6EDF               	movwf	indf2,c
 23125                           
 23126                           ; BSR set to: 0
 23127                           ;ui.c: 249: }else if(loc==4){
 23128  0032E0  D030               	goto	l14808
 23129  0032E2                     l14794:
 23130                           
 23131                           ; BSR set to: 0
 23132  0032E2  0E04               	movlw	4
 23133  0032E4  0100               	movlb	0	; () banked
 23134  0032E6  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23135  0032E8  A4D8               	btfss	status,2,c
 23136  0032EA  D00F               	goto	l839
 23137                           
 23138                           ; BSR set to: 0
 23139                           ;ui.c: 250: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+1+t8,0);
 23140  0032EC  010F               	movlb	15	; () banked
 23141  0032EE  B75F               	btfsc	95,3,b	;volatile
 23142  0032F0  D028               	goto	l14808
 23143                           
 23144                           ; BSR set to: 15
 23145  0032F2  5034               	movf	_lcdTwinkle,w,c
 23146  0032F4  A4D8               	btfss	status,2,c
 23147  0032F6  D025               	goto	l14808
 23148                           
 23149                           ; BSR set to: 15
 23150  0032F8  0E00               	movlw	0
 23151  0032FA  0100               	movlb	0	; () banked
 23152  0032FC  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23153  0032FE  0100               	movlb	0	; () banked
 23154  003300  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23155  003302  0F05               	addlw	5
 23156  003304  EC73  F042         	call	_lcd_show_dp
 23157                           
 23158                           ;ui.c: 251: }else{
 23159  003308  D01C               	goto	l14808
 23160  00330A                     l839:
 23161                           
 23162                           ; BSR set to: 0
 23163                           ;ui.c: 252: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 23164  00330A  010F               	movlb	15	; () banked
 23165  00330C  B75F               	btfsc	95,3,b	;volatile
 23166  00330E  D019               	goto	l14808
 23167                           
 23168                           ; BSR set to: 15
 23169  003310  5034               	movf	_lcdTwinkle,w,c
 23170  003312  A4D8               	btfss	status,2,c
 23171  003314  D016               	goto	l14808
 23172                           
 23173                           ; BSR set to: 15
 23174                           ;ui.c: 253: m_mem_cpy(buf+4,(uint8_t*)("    "));
 23175  003316  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 23176  003318  0100               	movlb	0	; () banked
 23177  00331A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23178  00331C  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 23179  00331E  0100               	movlb	0	; () banked
 23180  003320  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23181  003322  0E74               	movlw	low (STR_2+4)
 23182  003324  0100               	movlb	0	; () banked
 23183  003326  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23184  003328  0EF3               	movlw	high (STR_2+4)
 23185  00332A  0100               	movlb	0	; () banked
 23186  00332C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23187  00332E  ECA9  F042         	call	_m_mem_cpy	;wreg free
 23188                           
 23189                           ;ui.c: 254: lcd_show_dp(4+1+t8,0);
 23190  003332  0E00               	movlw	0
 23191  003334  0100               	movlb	0	; () banked
 23192  003336  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23193  003338  0100               	movlb	0	; () banked
 23194  00333A  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23195  00333C  0F05               	addlw	5
 23196  00333E  EC73  F042         	call	_lcd_show_dp
 23197  003342                     l14808:
 23198                           
 23199                           ;ui.c: 255: }
 23200                           ;ui.c: 256: }
 23201                           ;ui.c: 257: }
 23202                           ;ui.c: 258: lcd_show_string(buf);
 23203  003342  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23204  003344  0100               	movlb	0	; () banked
 23205  003346  6F73               	movwf	lcd_show_string@str& (0+255),b
 23206  003348  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23207  00334A  0100               	movlb	0	; () banked
 23208  00334C  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23209  00334E  EC3C  F042         	call	_lcd_show_string	;wreg free
 23210                           
 23211                           ;ui.c: 259: lcd_disp_refresh();
 23212  003352  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 23213  003356  0012               	return		;funcret
 23214  003358                     __end_of_ui_disp_adj_xfloat_pt:
 23215                           	opt stack 0
 23216                           tosu	equ	0xFFF
 23217                           tosh	equ	0xFFE
 23218                           tosl	equ	0xFFD
 23219                           pclath	equ	0xFFA
 23220                           tblptru	equ	0xFF8
 23221                           tblptrh	equ	0xFF7
 23222                           tblptrl	equ	0xFF6
 23223                           tablat	equ	0xFF5
 23224                           prodh	equ	0xFF4
 23225                           prodl	equ	0xFF3
 23226                           intcon	equ	0xFF2
 23227                           indf0	equ	0xFEF
 23228                           postinc0	equ	0xFEE
 23229                           fsr0h	equ	0xFEA
 23230                           fsr0l	equ	0xFE9
 23231                           wreg	equ	0xFE8
 23232                           indf1	equ	0xFE7
 23233                           postinc1	equ	0xFE6
 23234                           postdec1	equ	0xFE5
 23235                           plusw1	equ	0xFE3
 23236                           fsr1h	equ	0xFE2
 23237                           fsr1l	equ	0xFE1
 23238                           indf2	equ	0xFDF
 23239                           postinc2	equ	0xFDE
 23240                           postdec2	equ	0xFDD
 23241                           plusw2	equ	0xFDB
 23242                           fsr2h	equ	0xFDA
 23243                           fsr2l	equ	0xFD9
 23244                           status	equ	0xFD8
 23245                           
 23246 ;; *************** function _ui_disp_menu_bar_full_adj *****************
 23247 ;; Defined at:
 23248 ;;		line 733 in file "src/api/ui.c"
 23249 ;; Parameters:    Size  Location     Type
 23250 ;;		None
 23251 ;; Auto vars:     Size  Location     Type
 23252 ;;		None
 23253 ;; Return value:  Size  Location     Type
 23254 ;;                  1    wreg      void 
 23255 ;; Registers used:
 23256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23257 ;; Tracked objects:
 23258 ;;		On entry : 0/0
 23259 ;;		On exit  : 0/0
 23260 ;;		Unchanged: 0/0
 23261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23266 ;;Total ram usage:        0 bytes
 23267 ;; Hardware stack levels used:    1
 23268 ;; Hardware stack levels required when called:   11
 23269 ;; This function calls:
 23270 ;;		_lcd_disp_all
 23271 ;;		_lcd_disp_logo
 23272 ;;		_ui_disp_adj_xfixed_pt_dp
 23273 ;; This function is called by:
 23274 ;;		_ui_disp_menu
 23275 ;; This function uses a non-reentrant model
 23276 ;;
 23277                           
 23278                           	psect	text127
 23279  0095A0                     __ptext127:
 23280                           	opt stack 0
 23281  0095A0                     _ui_disp_menu_bar_full_adj:
 23282                           	opt stack 17
 23283                           
 23284                           ;ui.c: 735: lcd_disp_all(0x00);;
 23285                           
 23286                           ;incstack = 0
 23287  0095A0  0E00               	movlw	0
 23288  0095A2  EC90  F04B         	call	_lcd_disp_all
 23289                           
 23290                           ;ui.c: 736: lcd_disp_logo(1);
 23291  0095A6  0E01               	movlw	1
 23292  0095A8  EC78  F04B         	call	_lcd_disp_logo
 23293                           
 23294                           ;ui.c: 737: ui_disp_adj_xfixed_pt_dp((uint8_t*)" scl",(int16_t)adjValue,adjLocation,0);
 23295  0095AC  0EE5               	movlw	low STR_31
 23296  0095AE  0100               	movlb	0	; () banked
 23297  0095B0  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 23298  0095B2  0EF3               	movlw	high STR_31
 23299  0095B4  0100               	movlb	0	; () banked
 23300  0095B6  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 23301  0095B8  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 23302  0095BC  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 23303  0095C0  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 23304  0095C4  0E00               	movlw	0
 23305  0095C6  0100               	movlb	0	; () banked
 23306  0095C8  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 23307  0095CA  ECB5  F030         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 23308  0095CE  0012               	return		;funcret
 23309  0095D0                     __end_of_ui_disp_menu_bar_full_adj:
 23310                           	opt stack 0
 23311                           tosu	equ	0xFFF
 23312                           tosh	equ	0xFFE
 23313                           tosl	equ	0xFFD
 23314                           pclath	equ	0xFFA
 23315                           tblptru	equ	0xFF8
 23316                           tblptrh	equ	0xFF7
 23317                           tblptrl	equ	0xFF6
 23318                           tablat	equ	0xFF5
 23319                           prodh	equ	0xFF4
 23320                           prodl	equ	0xFF3
 23321                           intcon	equ	0xFF2
 23322                           indf0	equ	0xFEF
 23323                           postinc0	equ	0xFEE
 23324                           fsr0h	equ	0xFEA
 23325                           fsr0l	equ	0xFE9
 23326                           wreg	equ	0xFE8
 23327                           indf1	equ	0xFE7
 23328                           postinc1	equ	0xFE6
 23329                           postdec1	equ	0xFE5
 23330                           plusw1	equ	0xFE3
 23331                           fsr1h	equ	0xFE2
 23332                           fsr1l	equ	0xFE1
 23333                           indf2	equ	0xFDF
 23334                           postinc2	equ	0xFDE
 23335                           postdec2	equ	0xFDD
 23336                           plusw2	equ	0xFDB
 23337                           fsr2h	equ	0xFDA
 23338                           fsr2l	equ	0xFD9
 23339                           status	equ	0xFD8
 23340                           
 23341 ;; *************** function _ui_disp_adj_xfixed_pt_dp *****************
 23342 ;; Defined at:
 23343 ;;		line 308 in file "src/api/ui.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;  str             2   22[BANK0 ] PTR unsigned char 
 23346 ;;		 -> STR_31(5), ui_disp_menu_poly_c_adj@buf(6), 
 23347 ;;  x               2   24[BANK0 ] unsigned int 
 23348 ;;  loc             1   26[BANK0 ] unsigned char 
 23349 ;;  dploc           1   27[BANK0 ] unsigned char 
 23350 ;; Auto vars:     Size  Location     Type
 23351 ;;  buf            10   30[BANK0 ] unsigned char [10]
 23352 ;; Return value:  Size  Location     Type
 23353 ;;                  1    wreg      void 
 23354 ;; Registers used:
 23355 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23356 ;; Tracked objects:
 23357 ;;		On entry : 0/0
 23358 ;;		On exit  : 0/0
 23359 ;;		Unchanged: 0/0
 23360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23361 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23362 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23364 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23365 ;;Total ram usage:       18 bytes
 23366 ;; Hardware stack levels used:    1
 23367 ;; Hardware stack levels required when called:   10
 23368 ;; This function calls:
 23369 ;;		___x_arrange_str
 23370 ;;		_lcd_disp_refresh
 23371 ;;		_lcd_show_dp
 23372 ;;		_lcd_show_string
 23373 ;;		_m_int16_2_str_4
 23374 ;;		_m_mem_cpy
 23375 ;;		_ui_disp_clear_num_dp
 23376 ;; This function is called by:
 23377 ;;		_ui_disp_menu_poly_c_adj
 23378 ;;		_ui_disp_menu_bar_full_adj
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text128
 23383  00616A                     __ptext128:
 23384                           	opt stack 0
 23385  00616A                     _ui_disp_adj_xfixed_pt_dp:
 23386                           	opt stack 17
 23387                           
 23388                           ;ui.c: 310: uint8_t buf[10];
 23389                           ;ui.c: 311: ui_disp_clear_num_dp();
 23390                           
 23391                           ;incstack = 0
 23392  00616A  EC52  F046         	call	_ui_disp_clear_num_dp	;wreg free
 23393                           
 23394                           ;ui.c: 312: if(x>9999)x=9999;
 23395  00616E  0E10               	movlw	16
 23396  006170  0100               	movlb	0	; () banked
 23397  006172  5D78               	subwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),w,b
 23398  006174  0E27               	movlw	39
 23399  006176  0100               	movlb	0	; () banked
 23400  006178  5979               	subwfb	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),w,b
 23401  00617A  A0D8               	btfss	status,0,c
 23402  00617C  D005               	goto	l15308
 23403                           
 23404                           ; BSR set to: 0
 23405  00617E  0E27               	movlw	39
 23406  006180  0100               	movlb	0	; () banked
 23407  006182  6F79               	movwf	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),b
 23408  006184  0E0F               	movlw	15
 23409  006186  6F78               	movwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),b
 23410  006188                     l15308:
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;ui.c: 313: m_mem_cpy(buf,str);
 23414  006188  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 23415  00618A  0100               	movlb	0	; () banked
 23416  00618C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23417  00618E  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 23418  006190  0100               	movlb	0	; () banked
 23419  006192  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23420  006194  C076  F062         	movff	ui_disp_adj_xfixed_pt_dp@str,m_mem_cpy@s
 23421  006198  C077  F063         	movff	ui_disp_adj_xfixed_pt_dp@str+1,m_mem_cpy@s+1
 23422  00619C  ECA9  F042         	call	_m_mem_cpy	;wreg free
 23423                           
 23424                           ;ui.c: 314: m_int16_2_str_4(buf+4,x);
 23425  0061A0  0E82               	movlw	low (ui_disp_adj_xfixed_pt_dp@buf+4)
 23426  0061A2  0100               	movlb	0	; () banked
 23427  0061A4  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 23428  0061A6  0E00               	movlw	high (ui_disp_adj_xfixed_pt_dp@buf+4)
 23429  0061A8  0100               	movlb	0	; () banked
 23430  0061AA  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 23431  0061AC  C078  F06A         	movff	ui_disp_adj_xfixed_pt_dp@x,m_int16_2_str_4@x
 23432  0061B0  C079  F06B         	movff	ui_disp_adj_xfixed_pt_dp@x+1,m_int16_2_str_4@x+1
 23433  0061B4  EC59  F024         	call	_m_int16_2_str_4	;wreg free
 23434                           
 23435                           ;ui.c: 315: __x_arrange_str(buf,8);
 23436  0061B8  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 23437  0061BA  0100               	movlb	0	; () banked
 23438  0061BC  6F60               	movwf	___x_arrange_str@str& (0+255),b
 23439  0061BE  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 23440  0061C0  0100               	movlb	0	; () banked
 23441  0061C2  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 23442  0061C4  0E08               	movlw	8
 23443  0061C6  0100               	movlb	0	; () banked
 23444  0061C8  6F62               	movwf	___x_arrange_str@len& (0+255),b
 23445  0061CA  EC9A  F045         	call	___x_arrange_str	;wreg free
 23446                           
 23447                           ;ui.c: 316: if(loc>3)loc=3;
 23448  0061CE  0E03               	movlw	3
 23449  0061D0  0100               	movlb	0	; () banked
 23450  0061D2  657A               	cpfsgt	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 23451  0061D4  D003               	goto	l15318
 23452                           
 23453                           ; BSR set to: 0
 23454  0061D6  0E03               	movlw	3
 23455  0061D8  0100               	movlb	0	; () banked
 23456  0061DA  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 23457  0061DC                     l15318:
 23458                           
 23459                           ; BSR set to: 0
 23460                           ;ui.c: 317: loc=3-loc;
 23461  0061DC  0100               	movlb	0	; () banked
 23462  0061DE  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 23463  0061E0  0800               	sublw	0
 23464  0061E2  0F03               	addlw	3
 23465  0061E4  0100               	movlb	0	; () banked
 23466  0061E6  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 23467                           
 23468                           ; BSR set to: 0
 23469                           ;ui.c: 318: if(!(lcdTwinkle>0)){
 23470  0061E8  5034               	movf	_lcdTwinkle,w,c
 23471  0061EA  A4D8               	btfss	status,2,c
 23472  0061EC  D017               	goto	l15326
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;ui.c: 319: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 23476  0061EE  010F               	movlb	15	; () banked
 23477  0061F0  B75F               	btfsc	95,3,b	;volatile
 23478  0061F2  D014               	goto	l15326
 23479                           
 23480                           ; BSR set to: 15
 23481  0061F4  0100               	movlb	0	; () banked
 23482  0061F6  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 23483  0061F8  0100               	movlb	0	; () banked
 23484  0061FA  6F7C               	movwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),b
 23485  0061FC  6B7D               	clrf	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),b
 23486  0061FE  0E04               	movlw	4
 23487  006200  0100               	movlb	0	; () banked
 23488  006202  277C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),f,b
 23489  006204  0E00               	movlw	0
 23490  006206  237D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),f,b
 23491  006208  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 23492  00620A  0100               	movlb	0	; () banked
 23493  00620C  257C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),w,b
 23494  00620E  6ED9               	movwf	fsr2l,c
 23495  006210  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 23496  006212  0100               	movlb	0	; () banked
 23497  006214  217D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),w,b
 23498  006216  6EDA               	movwf	fsr2h,c
 23499  006218  0E20               	movlw	32
 23500  00621A  6EDF               	movwf	indf2,c
 23501  00621C                     l15326:
 23502                           
 23503                           ;ui.c: 320: }
 23504                           ;ui.c: 321: lcd_show_dp(4+dploc,1);
 23505  00621C  0E01               	movlw	1
 23506  00621E  0100               	movlb	0	; () banked
 23507  006220  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23508  006222  0100               	movlb	0	; () banked
 23509  006224  517B               	movf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),w,b
 23510  006226  0F04               	addlw	4
 23511  006228  EC73  F042         	call	_lcd_show_dp
 23512                           
 23513                           ;ui.c: 322: lcd_show_string(buf);
 23514  00622C  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 23515  00622E  0100               	movlb	0	; () banked
 23516  006230  6F73               	movwf	lcd_show_string@str& (0+255),b
 23517  006232  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 23518  006234  0100               	movlb	0	; () banked
 23519  006236  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23520  006238  EC3C  F042         	call	_lcd_show_string	;wreg free
 23521                           
 23522                           ;ui.c: 323: lcd_disp_refresh();
 23523  00623C  EC0B  F045         	call	_lcd_disp_refresh	;wreg free
 23524  006240  0012               	return		;funcret
 23525  006242                     __end_of_ui_disp_adj_xfixed_pt_dp:
 23526                           	opt stack 0
 23527                           tosu	equ	0xFFF
 23528                           tosh	equ	0xFFE
 23529                           tosl	equ	0xFFD
 23530                           pclath	equ	0xFFA
 23531                           tblptru	equ	0xFF8
 23532                           tblptrh	equ	0xFF7
 23533                           tblptrl	equ	0xFF6
 23534                           tablat	equ	0xFF5
 23535                           prodh	equ	0xFF4
 23536                           prodl	equ	0xFF3
 23537                           intcon	equ	0xFF2
 23538                           indf0	equ	0xFEF
 23539                           postinc0	equ	0xFEE
 23540                           fsr0h	equ	0xFEA
 23541                           fsr0l	equ	0xFE9
 23542                           wreg	equ	0xFE8
 23543                           indf1	equ	0xFE7
 23544                           postinc1	equ	0xFE6
 23545                           postdec1	equ	0xFE5
 23546                           plusw1	equ	0xFE3
 23547                           fsr1h	equ	0xFE2
 23548                           fsr1l	equ	0xFE1
 23549                           indf2	equ	0xFDF
 23550                           postinc2	equ	0xFDE
 23551                           postdec2	equ	0xFDD
 23552                           plusw2	equ	0xFDB
 23553                           fsr2h	equ	0xFDA
 23554                           fsr2l	equ	0xFD9
 23555                           status	equ	0xFD8
 23556                           
 23557 ;; *************** function _ui_disp_clear_num_dp *****************
 23558 ;; Defined at:
 23559 ;;		line 193 in file "src/api/ui.c"
 23560 ;; Parameters:    Size  Location     Type
 23561 ;;		None
 23562 ;; Auto vars:     Size  Location     Type
 23563 ;;		None
 23564 ;; Return value:  Size  Location     Type
 23565 ;;                  1    wreg      void 
 23566 ;; Registers used:
 23567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23568 ;; Tracked objects:
 23569 ;;		On entry : 0/0
 23570 ;;		On exit  : 0/0
 23571 ;;		Unchanged: 0/0
 23572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23577 ;;Total ram usage:        0 bytes
 23578 ;; Hardware stack levels used:    1
 23579 ;; Hardware stack levels required when called:    9
 23580 ;; This function calls:
 23581 ;;		_lcd_show_dp
 23582 ;;		_lcd_show_string
 23583 ;; This function is called by:
 23584 ;;		_ui_disp_adj_xfixed_pt
 23585 ;;		_ui_disp_adj_xfixed_pt_dp
 23586 ;; This function uses a non-reentrant model
 23587 ;;
 23588                           
 23589                           	psect	text129
 23590  008CA4                     __ptext129:
 23591                           	opt stack 0
 23592  008CA4                     _ui_disp_clear_num_dp:
 23593                           	opt stack 17
 23594                           
 23595                           ;ui.c: 195: lcd_show_string((uint8_t*)"        ");
 23596                           
 23597                           ;incstack = 0
 23598  008CA4  0E70               	movlw	low STR_2
 23599  008CA6  0100               	movlb	0	; () banked
 23600  008CA8  6F73               	movwf	lcd_show_string@str& (0+255),b
 23601  008CAA  0EF3               	movlw	high STR_2
 23602  008CAC  0100               	movlb	0	; () banked
 23603  008CAE  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23604  008CB0  EC3C  F042         	call	_lcd_show_string	;wreg free
 23605                           
 23606                           ;ui.c: 196: lcd_show_dp(0,0);
 23607  008CB4  0E00               	movlw	0
 23608  008CB6  0100               	movlb	0	; () banked
 23609  008CB8  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23610  008CBA  0E00               	movlw	0
 23611  008CBC  EC73  F042         	call	_lcd_show_dp
 23612                           
 23613                           ;ui.c: 197: lcd_show_dp(1,0);
 23614  008CC0  0E00               	movlw	0
 23615  008CC2  0100               	movlb	0	; () banked
 23616  008CC4  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23617  008CC6  0E01               	movlw	1
 23618  008CC8  EC73  F042         	call	_lcd_show_dp
 23619                           
 23620                           ;ui.c: 198: lcd_show_dp(2,0);
 23621  008CCC  0E00               	movlw	0
 23622  008CCE  0100               	movlb	0	; () banked
 23623  008CD0  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23624  008CD2  0E02               	movlw	2
 23625  008CD4  EC73  F042         	call	_lcd_show_dp
 23626                           
 23627                           ;ui.c: 199: lcd_show_dp(4,0);
 23628  008CD8  0E00               	movlw	0
 23629  008CDA  0100               	movlb	0	; () banked
 23630  008CDC  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23631  008CDE  0E04               	movlw	4
 23632  008CE0  EC73  F042         	call	_lcd_show_dp
 23633                           
 23634                           ;ui.c: 200: lcd_show_dp(5,0);
 23635  008CE4  0E00               	movlw	0
 23636  008CE6  0100               	movlb	0	; () banked
 23637  008CE8  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23638  008CEA  0E05               	movlw	5
 23639  008CEC  EC73  F042         	call	_lcd_show_dp
 23640                           
 23641                           ;ui.c: 201: lcd_show_dp(6,0);
 23642  008CF0  0E00               	movlw	0
 23643  008CF2  0100               	movlb	0	; () banked
 23644  008CF4  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23645  008CF6  0E06               	movlw	6
 23646  008CF8  EC73  F042         	call	_lcd_show_dp
 23647  008CFC  0012               	return		;funcret
 23648  008CFE                     __end_of_ui_disp_clear_num_dp:
 23649                           	opt stack 0
 23650                           tosu	equ	0xFFF
 23651                           tosh	equ	0xFFE
 23652                           tosl	equ	0xFFD
 23653                           pclath	equ	0xFFA
 23654                           tblptru	equ	0xFF8
 23655                           tblptrh	equ	0xFF7
 23656                           tblptrl	equ	0xFF6
 23657                           tablat	equ	0xFF5
 23658                           prodh	equ	0xFF4
 23659                           prodl	equ	0xFF3
 23660                           intcon	equ	0xFF2
 23661                           indf0	equ	0xFEF
 23662                           postinc0	equ	0xFEE
 23663                           fsr0h	equ	0xFEA
 23664                           fsr0l	equ	0xFE9
 23665                           wreg	equ	0xFE8
 23666                           indf1	equ	0xFE7
 23667                           postinc1	equ	0xFE6
 23668                           postdec1	equ	0xFE5
 23669                           plusw1	equ	0xFE3
 23670                           fsr1h	equ	0xFE2
 23671                           fsr1l	equ	0xFE1
 23672                           indf2	equ	0xFDF
 23673                           postinc2	equ	0xFDE
 23674                           postdec2	equ	0xFDD
 23675                           plusw2	equ	0xFDB
 23676                           fsr2h	equ	0xFDA
 23677                           fsr2l	equ	0xFD9
 23678                           status	equ	0xFD8
 23679                           
 23680 ;; *************** function _lcd_show_string *****************
 23681 ;; Defined at:
 23682 ;;		line 562 in file "src/driver/lcd.c"
 23683 ;; Parameters:    Size  Location     Type
 23684 ;;  str             2   19[BANK0 ] PTR unsigned char 
 23685 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_calib_diff_adj@buf(10), ui_d
      +isp_adj_xfixed_pt_dp@buf(10), 
 23686 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
 23687 ;; Auto vars:     Size  Location     Type
 23688 ;;  t8              1   21[BANK0 ] unsigned char 
 23689 ;; Return value:  Size  Location     Type
 23690 ;;                  1    wreg      void 
 23691 ;; Registers used:
 23692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23693 ;; Tracked objects:
 23694 ;;		On entry : 0/0
 23695 ;;		On exit  : 0/0
 23696 ;;		Unchanged: 0/0
 23697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23702 ;;Total ram usage:        3 bytes
 23703 ;; Hardware stack levels used:    1
 23704 ;; Hardware stack levels required when called:    8
 23705 ;; This function calls:
 23706 ;;		_lcd_show_chr
 23707 ;; This function is called by:
 23708 ;;		_ui_disp_clear_num_dp
 23709 ;;		_ui_disp_adj_xfloat_pt
 23710 ;;		_ui_disp_adj_xfixed_pt
 23711 ;;		_ui_disp_adj_xfixed_pt_dp
 23712 ;;		_ui_disp_menu_calib_diff_adj
 23713 ;;		_ui_disp_menu_calib_pr_adj
 23714 ;;		_ui_disp_menu_work_mode_adj
 23715 ;;		_ui_disp_rtc_mm_ss
 23716 ;; This function uses a non-reentrant model
 23717 ;;
 23718                           
 23719                           	psect	text130
 23720  008478                     __ptext130:
 23721                           	opt stack 0
 23722  008478                     _lcd_show_string:
 23723                           	opt stack 19
 23724                           
 23725                           ;lcd.c: 564: uint8_t t8=0;
 23726                           
 23727                           ;incstack = 0
 23728  008478  0E00               	movlw	0
 23729  00847A  0100               	movlb	0	; () banked
 23730  00847C  6F75               	movwf	lcd_show_string@t8& (0+255),b
 23731                           
 23732                           ;lcd.c: 565: while(*str!='\0' && t8<8){
 23733  00847E  D01B               	goto	l14034
 23734  008480                     l14028:
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;lcd.c: 566: lcd_show_chr(t8,*str);
 23738  008480  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 23739  008484  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 23740  008488  6AF8               	clrf	tblptru,c
 23741  00848A  0E0F               	movlw	(high __ramtop+-1)
 23742  00848C  64F7               	cpfsgt	tblptrh,c
 23743  00848E  D003               	bra	u12897
 23744  008490  0008               	tblrd		*
 23745  008492  50F5               	movf	tablat,w,c
 23746  008494  D005               	bra	u12890
 23747  008496                     u12897:
 23748  008496  CFF6 FFE9          	movff	tblptrl,fsr0l
 23749  00849A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23750  00849E  50EF               	movf	indf0,w,c
 23751  0084A0                     u12890:
 23752  0084A0  0100               	movlb	0	; () banked
 23753  0084A2  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 23754  0084A4  0100               	movlb	0	; () banked
 23755  0084A6  5175               	movf	lcd_show_string@t8& (0+255),w,b
 23756  0084A8  ECBC  F03A         	call	_lcd_show_chr
 23757                           
 23758                           ;lcd.c: 567: str++;
 23759  0084AC  0100               	movlb	0	; () banked
 23760  0084AE  4B73               	infsnz	lcd_show_string@str& (0+255),f,b
 23761  0084B0  2B74               	incf	(lcd_show_string@str+1)& (0+255),f,b
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;lcd.c: 568: t8++;
 23765  0084B2  0100               	movlb	0	; () banked
 23766  0084B4  2B75               	incf	lcd_show_string@t8& (0+255),f,b
 23767  0084B6                     l14034:
 23768                           
 23769                           ; BSR set to: 0
 23770  0084B6  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 23771  0084BA  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 23772  0084BE  6AF8               	clrf	tblptru,c
 23773  0084C0  0E0F               	movlw	(high __ramtop+-1)
 23774  0084C2  64F7               	cpfsgt	tblptrh,c
 23775  0084C4  D003               	bra	u12907
 23776  0084C6  0008               	tblrd		*
 23777  0084C8  50F5               	movf	tablat,w,c
 23778  0084CA  D005               	bra	u12900
 23779  0084CC                     u12907:
 23780  0084CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23781  0084D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23782  0084D4  50EF               	movf	indf0,w,c
 23783  0084D6                     u12900:
 23784  0084D6  0900               	iorlw	0
 23785  0084D8  B4D8               	btfsc	status,2,c
 23786  0084DA  0012               	return	
 23787  0084DC  0E07               	movlw	7
 23788  0084DE  0100               	movlb	0	; () banked
 23789  0084E0  6575               	cpfsgt	lcd_show_string@t8& (0+255),b
 23790  0084E2  D7CE               	goto	l14028
 23791  0084E4  0012               	return	
 23792  0084E6                     __end_of_lcd_show_string:
 23793                           	opt stack 0
 23794                           tosu	equ	0xFFF
 23795                           tosh	equ	0xFFE
 23796                           tosl	equ	0xFFD
 23797                           pclath	equ	0xFFA
 23798                           tblptru	equ	0xFF8
 23799                           tblptrh	equ	0xFF7
 23800                           tblptrl	equ	0xFF6
 23801                           tablat	equ	0xFF5
 23802                           prodh	equ	0xFF4
 23803                           prodl	equ	0xFF3
 23804                           intcon	equ	0xFF2
 23805                           indf0	equ	0xFEF
 23806                           postinc0	equ	0xFEE
 23807                           fsr0h	equ	0xFEA
 23808                           fsr0l	equ	0xFE9
 23809                           wreg	equ	0xFE8
 23810                           indf1	equ	0xFE7
 23811                           postinc1	equ	0xFE6
 23812                           postdec1	equ	0xFE5
 23813                           plusw1	equ	0xFE3
 23814                           fsr1h	equ	0xFE2
 23815                           fsr1l	equ	0xFE1
 23816                           indf2	equ	0xFDF
 23817                           postinc2	equ	0xFDE
 23818                           postdec2	equ	0xFDD
 23819                           plusw2	equ	0xFDB
 23820                           fsr2h	equ	0xFDA
 23821                           fsr2l	equ	0xFD9
 23822                           status	equ	0xFD8
 23823                           
 23824 ;; *************** function _lcd_show_chr *****************
 23825 ;; Defined at:
 23826 ;;		line 517 in file "src/driver/lcd.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;  loc             1    wreg     unsigned char 
 23829 ;;  chr             1   16[BANK0 ] unsigned char 
 23830 ;; Auto vars:     Size  Location     Type
 23831 ;;  loc             1   17[BANK0 ] unsigned char 
 23832 ;;  code            1   18[BANK0 ] unsigned char 
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      void 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23837 ;; Tracked objects:
 23838 ;;		On entry : 0/0
 23839 ;;		On exit  : 0/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23842 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23845 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23846 ;;Total ram usage:        3 bytes
 23847 ;; Hardware stack levels used:    1
 23848 ;; Hardware stack levels required when called:    7
 23849 ;; This function calls:
 23850 ;;		_lcd_disp_chr_loc_0
 23851 ;;		_lcd_disp_chr_loc_1
 23852 ;;		_lcd_disp_chr_loc_2
 23853 ;;		_lcd_disp_chr_loc_3
 23854 ;;		_lcd_disp_chr_loc_4
 23855 ;;		_lcd_disp_chr_loc_5
 23856 ;;		_lcd_disp_chr_loc_6
 23857 ;;		_lcd_disp_chr_loc_7
 23858 ;;		_lcd_disp_get_code
 23859 ;; This function is called by:
 23860 ;;		_lcd_show_string_l0
 23861 ;;		_lcd_show_string_l1
 23862 ;;		_lcd_show_string
 23863 ;;		_lcd_show_chr_lc
 23864 ;; This function uses a non-reentrant model
 23865 ;;
 23866                           
 23867                           	psect	text131
 23868  007578                     __ptext131:
 23869                           	opt stack 0
 23870  007578                     _lcd_show_chr:
 23871                           	opt stack 21
 23872                           
 23873                           ;incstack = 0
 23874                           ;lcd_show_chr@loc stored from wreg
 23875  007578  0100               	movlb	0	; () banked
 23876  00757A  6F71               	movwf	lcd_show_chr@loc& (0+255),b
 23877                           
 23878                           ;lcd.c: 519: uint8_t code=lcd_disp_get_code(chr);
 23879  00757C  0100               	movlb	0	; () banked
 23880  00757E  5170               	movf	lcd_show_chr@chr& (0+255),w,b
 23881  007580  EC6B  F045         	call	_lcd_disp_get_code
 23882  007584  0100               	movlb	0	; () banked
 23883  007586  6F72               	movwf	lcd_show_chr@code& (0+255),b
 23884                           
 23885                           ;lcd.c: 520: switch(loc){
 23886  007588  D028               	goto	l13330
 23887  00758A                     l13312:
 23888                           
 23889                           ; BSR set to: 0
 23890  00758A  0100               	movlb	0	; () banked
 23891  00758C  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23892  00758E  EC00  F03D         	call	_lcd_disp_chr_loc_0
 23893  007592  0012               	return	
 23894  007594                     l13314:
 23895  007594  0100               	movlb	0	; () banked
 23896  007596  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23897  007598  ECB8  F03C         	call	_lcd_disp_chr_loc_1
 23898  00759C  0012               	return	
 23899  00759E                     l13316:
 23900  00759E  0100               	movlb	0	; () banked
 23901  0075A0  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23902  0075A2  EC70  F03C         	call	_lcd_disp_chr_loc_2
 23903  0075A6  0012               	return	
 23904  0075A8                     l13318:
 23905  0075A8  0100               	movlb	0	; () banked
 23906  0075AA  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23907  0075AC  EC28  F03C         	call	_lcd_disp_chr_loc_3
 23908  0075B0  0012               	return	
 23909  0075B2                     l13320:
 23910  0075B2  0100               	movlb	0	; () banked
 23911  0075B4  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23912  0075B6  ECE0  F03B         	call	_lcd_disp_chr_loc_4
 23913  0075BA  0012               	return	
 23914  0075BC                     l13322:
 23915  0075BC  0100               	movlb	0	; () banked
 23916  0075BE  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23917  0075C0  EC98  F03B         	call	_lcd_disp_chr_loc_5
 23918  0075C4  0012               	return	
 23919  0075C6                     l13324:
 23920  0075C6  0100               	movlb	0	; () banked
 23921  0075C8  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23922  0075CA  EC50  F03B         	call	_lcd_disp_chr_loc_6
 23923  0075CE  0012               	return	
 23924  0075D0                     l13326:
 23925  0075D0  0100               	movlb	0	; () banked
 23926  0075D2  5172               	movf	lcd_show_chr@code& (0+255),w,b
 23927  0075D4  EC08  F03B         	call	_lcd_disp_chr_loc_7
 23928                           
 23929                           ;lcd.c: 530: }
 23930                           
 23931                           ;lcd.c: 529: default:break;
 23932  0075D8  0012               	return	
 23933  0075DA                     l13330:
 23934  0075DA  0100               	movlb	0	; () banked
 23935  0075DC  5171               	movf	lcd_show_chr@loc& (0+255),w,b
 23936                           
 23937                           ; Switch size 1, requested type "space"
 23938                           ; Number of cases is 8, Range of values is 0 to 7
 23939                           ; switch strategies available:
 23940                           ; Name         Instructions Cycles
 23941                           ; simple_byte           25    13 (average)
 23942                           ;	Chosen strategy is simple_byte
 23943  0075DE  0A00               	xorlw	0	; case 0
 23944  0075E0  B4D8               	btfsc	status,2,c
 23945  0075E2  D7D3               	goto	l13312
 23946  0075E4  0A01               	xorlw	1	; case 1
 23947  0075E6  B4D8               	btfsc	status,2,c
 23948  0075E8  D7D5               	goto	l13314
 23949  0075EA  0A03               	xorlw	3	; case 2
 23950  0075EC  B4D8               	btfsc	status,2,c
 23951  0075EE  D7D7               	goto	l13316
 23952  0075F0  0A01               	xorlw	1	; case 3
 23953  0075F2  B4D8               	btfsc	status,2,c
 23954  0075F4  D7D9               	goto	l13318
 23955  0075F6  0A07               	xorlw	7	; case 4
 23956  0075F8  B4D8               	btfsc	status,2,c
 23957  0075FA  D7DB               	goto	l13320
 23958  0075FC  0A01               	xorlw	1	; case 5
 23959  0075FE  B4D8               	btfsc	status,2,c
 23960  007600  D7DD               	goto	l13322
 23961  007602  0A03               	xorlw	3	; case 6
 23962  007604  B4D8               	btfsc	status,2,c
 23963  007606  D7DF               	goto	l13324
 23964  007608  0A01               	xorlw	1	; case 7
 23965  00760A  A4D8               	btfss	status,2,c
 23966  00760C  0012               	return	
 23967  00760E  D7E0               	goto	l13326
 23968  007610                     __end_of_lcd_show_chr:
 23969                           	opt stack 0
 23970                           tosu	equ	0xFFF
 23971                           tosh	equ	0xFFE
 23972                           tosl	equ	0xFFD
 23973                           pclath	equ	0xFFA
 23974                           tblptru	equ	0xFF8
 23975                           tblptrh	equ	0xFF7
 23976                           tblptrl	equ	0xFF6
 23977                           tablat	equ	0xFF5
 23978                           prodh	equ	0xFF4
 23979                           prodl	equ	0xFF3
 23980                           intcon	equ	0xFF2
 23981                           indf0	equ	0xFEF
 23982                           postinc0	equ	0xFEE
 23983                           fsr0h	equ	0xFEA
 23984                           fsr0l	equ	0xFE9
 23985                           wreg	equ	0xFE8
 23986                           indf1	equ	0xFE7
 23987                           postinc1	equ	0xFE6
 23988                           postdec1	equ	0xFE5
 23989                           plusw1	equ	0xFE3
 23990                           fsr1h	equ	0xFE2
 23991                           fsr1l	equ	0xFE1
 23992                           indf2	equ	0xFDF
 23993                           postinc2	equ	0xFDE
 23994                           postdec2	equ	0xFDD
 23995                           plusw2	equ	0xFDB
 23996                           fsr2h	equ	0xFDA
 23997                           fsr2l	equ	0xFD9
 23998                           status	equ	0xFD8
 23999                           
 24000 ;; *************** function _lcd_disp_get_code *****************
 24001 ;; Defined at:
 24002 ;;		line 479 in file "src/driver/lcd.c"
 24003 ;; Parameters:    Size  Location     Type
 24004 ;;  chr             1    wreg     unsigned char 
 24005 ;; Auto vars:     Size  Location     Type
 24006 ;;  chr             1    0[BANK0 ] unsigned char 
 24007 ;;  i               1    2[BANK0 ] unsigned char 
 24008 ;;  ret             1    1[BANK0 ] unsigned char 
 24009 ;; Return value:  Size  Location     Type
 24010 ;;                  1    wreg      unsigned char 
 24011 ;; Registers used:
 24012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24013 ;; Tracked objects:
 24014 ;;		On entry : 0/0
 24015 ;;		On exit  : 0/0
 24016 ;;		Unchanged: 0/0
 24017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24019 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24021 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24022 ;;Total ram usage:        3 bytes
 24023 ;; Hardware stack levels used:    1
 24024 ;; Hardware stack levels required when called:    4
 24025 ;; This function calls:
 24026 ;;		Nothing
 24027 ;; This function is called by:
 24028 ;;		_lcd_show_chr
 24029 ;; This function uses a non-reentrant model
 24030 ;;
 24031                           
 24032                           	psect	text132
 24033  008AD6                     __ptext132:
 24034                           	opt stack 0
 24035  008AD6                     _lcd_disp_get_code:
 24036                           	opt stack 23
 24037                           
 24038                           ;incstack = 0
 24039                           ;lcd_disp_get_code@chr stored from wreg
 24040  008AD6  0100               	movlb	0	; () banked
 24041  008AD8  6F60               	movwf	lcd_disp_get_code@chr& (0+255),b
 24042                           
 24043                           ;lcd.c: 481: uint8_t i;
 24044                           ;lcd.c: 482: uint8_t ret;
 24045                           ;lcd.c: 483: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
 24046  008ADA  0E00               	movlw	0
 24047  008ADC  0100               	movlb	0	; () banked
 24048  008ADE  6F62               	movwf	lcd_disp_get_code@i& (0+255),b
 24049  008AE0                     l13168:
 24050                           
 24051                           ; BSR set to: 0
 24052  008AE0  0E2A               	movlw	42
 24053  008AE2  0100               	movlb	0	; () banked
 24054  008AE4  6562               	cpfsgt	lcd_disp_get_code@i& (0+255),b
 24055  008AE6  D001               	goto	l13172
 24056  008AE8  D012               	goto	l13180
 24057  008AEA                     l13172:
 24058                           
 24059                           ; BSR set to: 0
 24060                           ;lcd.c: 484: if(chr==LCDDigitalIndexTable[i])break;
 24061  008AEA  0100               	movlb	0	; () banked
 24062  008AEC  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 24063  008AEE  0D01               	mullw	1
 24064  008AF0  0EB1               	movlw	low _LCDDigitalIndexTable
 24065  008AF2  24F3               	addwf	prodl,w,c
 24066  008AF4  6EF6               	movwf	tblptrl,c
 24067  008AF6  0EEE               	movlw	high _LCDDigitalIndexTable
 24068  008AF8  20F4               	addwfc	prodh,w,c
 24069  008AFA  6EF7               	movwf	tblptrh,c
 24070  008AFC                     	if	0	;There are less than 3 active tblptr bytes
 24071  008AFC                     	endif
 24072  008AFC  0008               	tblrd		*
 24073  008AFE  50F5               	movf	tablat,w,c
 24074  008B00  0100               	movlb	0	; () banked
 24075  008B02  1960               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
 24076  008B04  B4D8               	btfsc	status,2,c
 24077  008B06  D003               	goto	l13180
 24078                           
 24079                           ; BSR set to: 0
 24080                           
 24081                           ; BSR set to: 0
 24082                           
 24083                           ; BSR set to: 0
 24084  008B08  0100               	movlb	0	; () banked
 24085  008B0A  2B62               	incf	lcd_disp_get_code@i& (0+255),f,b
 24086  008B0C  D7E9               	goto	l13168
 24087  008B0E                     l13180:
 24088                           
 24089                           ; BSR set to: 0
 24090                           ;lcd.c: 485: }
 24091                           ;lcd.c: 486: if(i<sizeof(LCDDigitalIndexTable)){
 24092  008B0E  0E2B               	movlw	43
 24093  008B10  0100               	movlb	0	; () banked
 24094  008B12  6162               	cpfslt	lcd_disp_get_code@i& (0+255),b
 24095  008B14  D00C               	goto	l13184
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;lcd.c: 487: ret= LCDDigitalTable[i];
 24099  008B16  0100               	movlb	0	; () banked
 24100  008B18  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 24101  008B1A  0D01               	mullw	1
 24102  008B1C  0EDC               	movlw	low _LCDDigitalTable
 24103  008B1E  24F3               	addwf	prodl,w,c
 24104  008B20  6EF6               	movwf	tblptrl,c
 24105  008B22  0EEE               	movlw	high _LCDDigitalTable
 24106  008B24  20F4               	addwfc	prodh,w,c
 24107  008B26  6EF7               	movwf	tblptrh,c
 24108  008B28                     	if	0	;There are less than 3 active tblptr bytes
 24109  008B28                     	endif
 24110  008B28  0008               	tblrd		*
 24111  008B2A  CFF5 F061          	movff	tablat,lcd_disp_get_code@ret
 24112  008B2E                     l13184:
 24113                           
 24114                           ; BSR set to: 0
 24115                           ;lcd.c: 488: }
 24116                           ;lcd.c: 489: return ret;
 24117  008B2E  0100               	movlb	0	; () banked
 24118  008B30  5161               	movf	lcd_disp_get_code@ret& (0+255),w,b
 24119  008B32  0012               	return	
 24120  008B34                     __end_of_lcd_disp_get_code:
 24121                           	opt stack 0
 24122                           tosu	equ	0xFFF
 24123                           tosh	equ	0xFFE
 24124                           tosl	equ	0xFFD
 24125                           pclath	equ	0xFFA
 24126                           tblptru	equ	0xFF8
 24127                           tblptrh	equ	0xFF7
 24128                           tblptrl	equ	0xFF6
 24129                           tablat	equ	0xFF5
 24130                           prodh	equ	0xFF4
 24131                           prodl	equ	0xFF3
 24132                           intcon	equ	0xFF2
 24133                           indf0	equ	0xFEF
 24134                           postinc0	equ	0xFEE
 24135                           fsr0h	equ	0xFEA
 24136                           fsr0l	equ	0xFE9
 24137                           wreg	equ	0xFE8
 24138                           indf1	equ	0xFE7
 24139                           postinc1	equ	0xFE6
 24140                           postdec1	equ	0xFE5
 24141                           plusw1	equ	0xFE3
 24142                           fsr1h	equ	0xFE2
 24143                           fsr1l	equ	0xFE1
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           plusw2	equ	0xFDB
 24148                           fsr2h	equ	0xFDA
 24149                           fsr2l	equ	0xFD9
 24150                           status	equ	0xFD8
 24151                           
 24152 ;; *************** function _lcd_disp_chr_loc_7 *****************
 24153 ;; Defined at:
 24154 ;;		line 357 in file "src/driver/lcd.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  code            1    wreg     unsigned char 
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;  code            1   31[COMRAM] unsigned char 
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      void 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : 0/0
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24172 ;;Total ram usage:        1 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:    6
 24175 ;; This function calls:
 24176 ;;		_lcd_set_com_seg
 24177 ;; This function is called by:
 24178 ;;		_lcd_show_chr
 24179 ;; This function uses a non-reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text133
 24183  007610                     __ptext133:
 24184                           	opt stack 0
 24185  007610                     _lcd_disp_chr_loc_7:
 24186                           	opt stack 21
 24187                           
 24188                           ; BSR set to: 0
 24189                           ;incstack = 0
 24190                           ;lcd_disp_chr_loc_7@code stored from wreg
 24191  007610  6E20               	movwf	lcd_disp_chr_loc_7@code,c
 24192                           
 24193                           ;lcd.c: 359: lcd_set_com_seg(0,19,code&0x08);
 24194  007612  0E13               	movlw	19
 24195  007614  0100               	movlb	0	; () banked
 24196  007616  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24197  007618  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24198  00761A  0B08               	andlw	8
 24199  00761C  0100               	movlb	0	; () banked
 24200  00761E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24201  007620  0E00               	movlw	0
 24202  007622  EC1C  F033         	call	_lcd_set_com_seg
 24203                           
 24204                           ;lcd.c: 360: lcd_set_com_seg(1,19,code&0x10);
 24205  007626  0E13               	movlw	19
 24206  007628  0100               	movlb	0	; () banked
 24207  00762A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24208  00762C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24209  00762E  0B10               	andlw	16
 24210  007630  0100               	movlb	0	; () banked
 24211  007632  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24212  007634  0E01               	movlw	1
 24213  007636  EC1C  F033         	call	_lcd_set_com_seg
 24214                           
 24215                           ;lcd.c: 361: lcd_set_com_seg(2,19,code&0x20);
 24216  00763A  0E13               	movlw	19
 24217  00763C  0100               	movlb	0	; () banked
 24218  00763E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24219  007640  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24220  007642  0B20               	andlw	32
 24221  007644  0100               	movlb	0	; () banked
 24222  007646  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24223  007648  0E02               	movlw	2
 24224  00764A  EC1C  F033         	call	_lcd_set_com_seg
 24225                           
 24226                           ;lcd.c: 362: lcd_set_com_seg(3,19,code&0x01);
 24227  00764E  0E13               	movlw	19
 24228  007650  0100               	movlb	0	; () banked
 24229  007652  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24230  007654  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24231  007656  0B01               	andlw	1
 24232  007658  0100               	movlb	0	; () banked
 24233  00765A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24234  00765C  0E03               	movlw	3
 24235  00765E  EC1C  F033         	call	_lcd_set_com_seg
 24236                           
 24237                           ;lcd.c: 364: lcd_set_com_seg(1,40,code&0x04);
 24238  007662  0E28               	movlw	40
 24239  007664  0100               	movlb	0	; () banked
 24240  007666  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24241  007668  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24242  00766A  0B04               	andlw	4
 24243  00766C  0100               	movlb	0	; () banked
 24244  00766E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24245  007670  0E01               	movlw	1
 24246  007672  EC1C  F033         	call	_lcd_set_com_seg
 24247                           
 24248                           ;lcd.c: 365: lcd_set_com_seg(2,40,code&0x40);
 24249  007676  0E28               	movlw	40
 24250  007678  0100               	movlb	0	; () banked
 24251  00767A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24252  00767C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24253  00767E  0B40               	andlw	64
 24254  007680  0100               	movlb	0	; () banked
 24255  007682  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24256  007684  0E02               	movlw	2
 24257  007686  EC1C  F033         	call	_lcd_set_com_seg
 24258                           
 24259                           ;lcd.c: 366: lcd_set_com_seg(3,40,code&0x02);
 24260  00768A  0E28               	movlw	40
 24261  00768C  0100               	movlb	0	; () banked
 24262  00768E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24263  007690  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 24264  007692  0B02               	andlw	2
 24265  007694  0100               	movlb	0	; () banked
 24266  007696  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24267  007698  0E03               	movlw	3
 24268  00769A  EC1C  F033         	call	_lcd_set_com_seg
 24269  00769E  0012               	return		;funcret
 24270  0076A0                     __end_of_lcd_disp_chr_loc_7:
 24271                           	opt stack 0
 24272                           tosu	equ	0xFFF
 24273                           tosh	equ	0xFFE
 24274                           tosl	equ	0xFFD
 24275                           pclath	equ	0xFFA
 24276                           tblptru	equ	0xFF8
 24277                           tblptrh	equ	0xFF7
 24278                           tblptrl	equ	0xFF6
 24279                           tablat	equ	0xFF5
 24280                           prodh	equ	0xFF4
 24281                           prodl	equ	0xFF3
 24282                           intcon	equ	0xFF2
 24283                           indf0	equ	0xFEF
 24284                           postinc0	equ	0xFEE
 24285                           fsr0h	equ	0xFEA
 24286                           fsr0l	equ	0xFE9
 24287                           wreg	equ	0xFE8
 24288                           indf1	equ	0xFE7
 24289                           postinc1	equ	0xFE6
 24290                           postdec1	equ	0xFE5
 24291                           plusw1	equ	0xFE3
 24292                           fsr1h	equ	0xFE2
 24293                           fsr1l	equ	0xFE1
 24294                           indf2	equ	0xFDF
 24295                           postinc2	equ	0xFDE
 24296                           postdec2	equ	0xFDD
 24297                           plusw2	equ	0xFDB
 24298                           fsr2h	equ	0xFDA
 24299                           fsr2l	equ	0xFD9
 24300                           status	equ	0xFD8
 24301                           
 24302 ;; *************** function _lcd_disp_chr_loc_6 *****************
 24303 ;; Defined at:
 24304 ;;		line 338 in file "src/driver/lcd.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;  code            1    wreg     unsigned char 
 24307 ;; Auto vars:     Size  Location     Type
 24308 ;;  code            1   31[COMRAM] unsigned char 
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1    wreg      void 
 24311 ;; Registers used:
 24312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/0
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24322 ;;Total ram usage:        1 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:    6
 24325 ;; This function calls:
 24326 ;;		_lcd_set_com_seg
 24327 ;; This function is called by:
 24328 ;;		_lcd_show_chr
 24329 ;; This function uses a non-reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text134
 24333  0076A0                     __ptext134:
 24334                           	opt stack 0
 24335  0076A0                     _lcd_disp_chr_loc_6:
 24336                           	opt stack 21
 24337                           
 24338                           ;incstack = 0
 24339                           ;lcd_disp_chr_loc_6@code stored from wreg
 24340  0076A0  6E20               	movwf	lcd_disp_chr_loc_6@code,c
 24341                           
 24342                           ;lcd.c: 340: lcd_set_com_seg(0,14,code&0x08);
 24343  0076A2  0E0E               	movlw	14
 24344  0076A4  0100               	movlb	0	; () banked
 24345  0076A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24346  0076A8  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24347  0076AA  0B08               	andlw	8
 24348  0076AC  0100               	movlb	0	; () banked
 24349  0076AE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24350  0076B0  0E00               	movlw	0
 24351  0076B2  EC1C  F033         	call	_lcd_set_com_seg
 24352                           
 24353                           ;lcd.c: 341: lcd_set_com_seg(1,14,code&0x10);
 24354  0076B6  0E0E               	movlw	14
 24355  0076B8  0100               	movlb	0	; () banked
 24356  0076BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24357  0076BC  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24358  0076BE  0B10               	andlw	16
 24359  0076C0  0100               	movlb	0	; () banked
 24360  0076C2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24361  0076C4  0E01               	movlw	1
 24362  0076C6  EC1C  F033         	call	_lcd_set_com_seg
 24363                           
 24364                           ;lcd.c: 342: lcd_set_com_seg(2,14,code&0x20);
 24365  0076CA  0E0E               	movlw	14
 24366  0076CC  0100               	movlb	0	; () banked
 24367  0076CE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24368  0076D0  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24369  0076D2  0B20               	andlw	32
 24370  0076D4  0100               	movlb	0	; () banked
 24371  0076D6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24372  0076D8  0E02               	movlw	2
 24373  0076DA  EC1C  F033         	call	_lcd_set_com_seg
 24374                           
 24375                           ;lcd.c: 343: lcd_set_com_seg(3,14,code&0x01);
 24376  0076DE  0E0E               	movlw	14
 24377  0076E0  0100               	movlb	0	; () banked
 24378  0076E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24379  0076E4  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24380  0076E6  0B01               	andlw	1
 24381  0076E8  0100               	movlb	0	; () banked
 24382  0076EA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24383  0076EC  0E03               	movlw	3
 24384  0076EE  EC1C  F033         	call	_lcd_set_com_seg
 24385                           
 24386                           ;lcd.c: 345: lcd_set_com_seg(1,15,code&0x04);
 24387  0076F2  0E0F               	movlw	15
 24388  0076F4  0100               	movlb	0	; () banked
 24389  0076F6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24390  0076F8  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24391  0076FA  0B04               	andlw	4
 24392  0076FC  0100               	movlb	0	; () banked
 24393  0076FE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24394  007700  0E01               	movlw	1
 24395  007702  EC1C  F033         	call	_lcd_set_com_seg
 24396                           
 24397                           ;lcd.c: 346: lcd_set_com_seg(2,15,code&0x40);
 24398  007706  0E0F               	movlw	15
 24399  007708  0100               	movlb	0	; () banked
 24400  00770A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24401  00770C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24402  00770E  0B40               	andlw	64
 24403  007710  0100               	movlb	0	; () banked
 24404  007712  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24405  007714  0E02               	movlw	2
 24406  007716  EC1C  F033         	call	_lcd_set_com_seg
 24407                           
 24408                           ;lcd.c: 347: lcd_set_com_seg(3,15,code&0x02);
 24409  00771A  0E0F               	movlw	15
 24410  00771C  0100               	movlb	0	; () banked
 24411  00771E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24412  007720  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 24413  007722  0B02               	andlw	2
 24414  007724  0100               	movlb	0	; () banked
 24415  007726  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24416  007728  0E03               	movlw	3
 24417  00772A  EC1C  F033         	call	_lcd_set_com_seg
 24418  00772E  0012               	return		;funcret
 24419  007730                     __end_of_lcd_disp_chr_loc_6:
 24420                           	opt stack 0
 24421                           tosu	equ	0xFFF
 24422                           tosh	equ	0xFFE
 24423                           tosl	equ	0xFFD
 24424                           pclath	equ	0xFFA
 24425                           tblptru	equ	0xFF8
 24426                           tblptrh	equ	0xFF7
 24427                           tblptrl	equ	0xFF6
 24428                           tablat	equ	0xFF5
 24429                           prodh	equ	0xFF4
 24430                           prodl	equ	0xFF3
 24431                           intcon	equ	0xFF2
 24432                           indf0	equ	0xFEF
 24433                           postinc0	equ	0xFEE
 24434                           fsr0h	equ	0xFEA
 24435                           fsr0l	equ	0xFE9
 24436                           wreg	equ	0xFE8
 24437                           indf1	equ	0xFE7
 24438                           postinc1	equ	0xFE6
 24439                           postdec1	equ	0xFE5
 24440                           plusw1	equ	0xFE3
 24441                           fsr1h	equ	0xFE2
 24442                           fsr1l	equ	0xFE1
 24443                           indf2	equ	0xFDF
 24444                           postinc2	equ	0xFDE
 24445                           postdec2	equ	0xFDD
 24446                           plusw2	equ	0xFDB
 24447                           fsr2h	equ	0xFDA
 24448                           fsr2l	equ	0xFD9
 24449                           status	equ	0xFD8
 24450                           
 24451 ;; *************** function _lcd_disp_chr_loc_5 *****************
 24452 ;; Defined at:
 24453 ;;		line 319 in file "src/driver/lcd.c"
 24454 ;; Parameters:    Size  Location     Type
 24455 ;;  code            1    wreg     unsigned char 
 24456 ;; Auto vars:     Size  Location     Type
 24457 ;;  code            1   31[COMRAM] unsigned char 
 24458 ;; Return value:  Size  Location     Type
 24459 ;;                  1    wreg      void 
 24460 ;; Registers used:
 24461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24462 ;; Tracked objects:
 24463 ;;		On entry : 0/0
 24464 ;;		On exit  : 0/0
 24465 ;;		Unchanged: 0/0
 24466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24471 ;;Total ram usage:        1 bytes
 24472 ;; Hardware stack levels used:    1
 24473 ;; Hardware stack levels required when called:    6
 24474 ;; This function calls:
 24475 ;;		_lcd_set_com_seg
 24476 ;; This function is called by:
 24477 ;;		_lcd_show_chr
 24478 ;; This function uses a non-reentrant model
 24479 ;;
 24480                           
 24481                           	psect	text135
 24482  007730                     __ptext135:
 24483                           	opt stack 0
 24484  007730                     _lcd_disp_chr_loc_5:
 24485                           	opt stack 21
 24486                           
 24487                           ;incstack = 0
 24488                           ;lcd_disp_chr_loc_5@code stored from wreg
 24489  007730  6E20               	movwf	lcd_disp_chr_loc_5@code,c
 24490                           
 24491                           ;lcd.c: 321: lcd_set_com_seg(0,38,code&0x08);
 24492  007732  0E26               	movlw	38
 24493  007734  0100               	movlb	0	; () banked
 24494  007736  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24495  007738  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24496  00773A  0B08               	andlw	8
 24497  00773C  0100               	movlb	0	; () banked
 24498  00773E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24499  007740  0E00               	movlw	0
 24500  007742  EC1C  F033         	call	_lcd_set_com_seg
 24501                           
 24502                           ;lcd.c: 322: lcd_set_com_seg(1,38,code&0x10);
 24503  007746  0E26               	movlw	38
 24504  007748  0100               	movlb	0	; () banked
 24505  00774A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24506  00774C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24507  00774E  0B10               	andlw	16
 24508  007750  0100               	movlb	0	; () banked
 24509  007752  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24510  007754  0E01               	movlw	1
 24511  007756  EC1C  F033         	call	_lcd_set_com_seg
 24512                           
 24513                           ;lcd.c: 323: lcd_set_com_seg(2,38,code&0x20);
 24514  00775A  0E26               	movlw	38
 24515  00775C  0100               	movlb	0	; () banked
 24516  00775E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24517  007760  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24518  007762  0B20               	andlw	32
 24519  007764  0100               	movlb	0	; () banked
 24520  007766  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24521  007768  0E02               	movlw	2
 24522  00776A  EC1C  F033         	call	_lcd_set_com_seg
 24523                           
 24524                           ;lcd.c: 324: lcd_set_com_seg(3,38,code&0x01);
 24525  00776E  0E26               	movlw	38
 24526  007770  0100               	movlb	0	; () banked
 24527  007772  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24528  007774  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24529  007776  0B01               	andlw	1
 24530  007778  0100               	movlb	0	; () banked
 24531  00777A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24532  00777C  0E03               	movlw	3
 24533  00777E  EC1C  F033         	call	_lcd_set_com_seg
 24534                           
 24535                           ;lcd.c: 326: lcd_set_com_seg(1,39,code&0x04);
 24536  007782  0E27               	movlw	39
 24537  007784  0100               	movlb	0	; () banked
 24538  007786  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24539  007788  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24540  00778A  0B04               	andlw	4
 24541  00778C  0100               	movlb	0	; () banked
 24542  00778E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24543  007790  0E01               	movlw	1
 24544  007792  EC1C  F033         	call	_lcd_set_com_seg
 24545                           
 24546                           ;lcd.c: 327: lcd_set_com_seg(2,39,code&0x40);
 24547  007796  0E27               	movlw	39
 24548  007798  0100               	movlb	0	; () banked
 24549  00779A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24550  00779C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24551  00779E  0B40               	andlw	64
 24552  0077A0  0100               	movlb	0	; () banked
 24553  0077A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24554  0077A4  0E02               	movlw	2
 24555  0077A6  EC1C  F033         	call	_lcd_set_com_seg
 24556                           
 24557                           ;lcd.c: 328: lcd_set_com_seg(3,39,code&0x02);
 24558  0077AA  0E27               	movlw	39
 24559  0077AC  0100               	movlb	0	; () banked
 24560  0077AE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24561  0077B0  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 24562  0077B2  0B02               	andlw	2
 24563  0077B4  0100               	movlb	0	; () banked
 24564  0077B6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24565  0077B8  0E03               	movlw	3
 24566  0077BA  EC1C  F033         	call	_lcd_set_com_seg
 24567  0077BE  0012               	return		;funcret
 24568  0077C0                     __end_of_lcd_disp_chr_loc_5:
 24569                           	opt stack 0
 24570                           tosu	equ	0xFFF
 24571                           tosh	equ	0xFFE
 24572                           tosl	equ	0xFFD
 24573                           pclath	equ	0xFFA
 24574                           tblptru	equ	0xFF8
 24575                           tblptrh	equ	0xFF7
 24576                           tblptrl	equ	0xFF6
 24577                           tablat	equ	0xFF5
 24578                           prodh	equ	0xFF4
 24579                           prodl	equ	0xFF3
 24580                           intcon	equ	0xFF2
 24581                           indf0	equ	0xFEF
 24582                           postinc0	equ	0xFEE
 24583                           fsr0h	equ	0xFEA
 24584                           fsr0l	equ	0xFE9
 24585                           wreg	equ	0xFE8
 24586                           indf1	equ	0xFE7
 24587                           postinc1	equ	0xFE6
 24588                           postdec1	equ	0xFE5
 24589                           plusw1	equ	0xFE3
 24590                           fsr1h	equ	0xFE2
 24591                           fsr1l	equ	0xFE1
 24592                           indf2	equ	0xFDF
 24593                           postinc2	equ	0xFDE
 24594                           postdec2	equ	0xFDD
 24595                           plusw2	equ	0xFDB
 24596                           fsr2h	equ	0xFDA
 24597                           fsr2l	equ	0xFD9
 24598                           status	equ	0xFD8
 24599                           
 24600 ;; *************** function _lcd_disp_chr_loc_4 *****************
 24601 ;; Defined at:
 24602 ;;		line 300 in file "src/driver/lcd.c"
 24603 ;; Parameters:    Size  Location     Type
 24604 ;;  code            1    wreg     unsigned char 
 24605 ;; Auto vars:     Size  Location     Type
 24606 ;;  code            1   31[COMRAM] unsigned char 
 24607 ;; Return value:  Size  Location     Type
 24608 ;;                  1    wreg      void 
 24609 ;; Registers used:
 24610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24611 ;; Tracked objects:
 24612 ;;		On entry : 0/0
 24613 ;;		On exit  : 0/0
 24614 ;;		Unchanged: 0/0
 24615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24620 ;;Total ram usage:        1 bytes
 24621 ;; Hardware stack levels used:    1
 24622 ;; Hardware stack levels required when called:    6
 24623 ;; This function calls:
 24624 ;;		_lcd_set_com_seg
 24625 ;; This function is called by:
 24626 ;;		_lcd_show_chr
 24627 ;; This function uses a non-reentrant model
 24628 ;;
 24629                           
 24630                           	psect	text136
 24631  0077C0                     __ptext136:
 24632                           	opt stack 0
 24633  0077C0                     _lcd_disp_chr_loc_4:
 24634                           	opt stack 21
 24635                           
 24636                           ;incstack = 0
 24637                           ;lcd_disp_chr_loc_4@code stored from wreg
 24638  0077C0  6E20               	movwf	lcd_disp_chr_loc_4@code,c
 24639                           
 24640                           ;lcd.c: 302: lcd_set_com_seg(0,36,code&0x08);
 24641  0077C2  0E24               	movlw	36
 24642  0077C4  0100               	movlb	0	; () banked
 24643  0077C6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24644  0077C8  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24645  0077CA  0B08               	andlw	8
 24646  0077CC  0100               	movlb	0	; () banked
 24647  0077CE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24648  0077D0  0E00               	movlw	0
 24649  0077D2  EC1C  F033         	call	_lcd_set_com_seg
 24650                           
 24651                           ;lcd.c: 303: lcd_set_com_seg(1,36,code&0x10);
 24652  0077D6  0E24               	movlw	36
 24653  0077D8  0100               	movlb	0	; () banked
 24654  0077DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24655  0077DC  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24656  0077DE  0B10               	andlw	16
 24657  0077E0  0100               	movlb	0	; () banked
 24658  0077E2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24659  0077E4  0E01               	movlw	1
 24660  0077E6  EC1C  F033         	call	_lcd_set_com_seg
 24661                           
 24662                           ;lcd.c: 304: lcd_set_com_seg(2,36,code&0x20);
 24663  0077EA  0E24               	movlw	36
 24664  0077EC  0100               	movlb	0	; () banked
 24665  0077EE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24666  0077F0  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24667  0077F2  0B20               	andlw	32
 24668  0077F4  0100               	movlb	0	; () banked
 24669  0077F6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24670  0077F8  0E02               	movlw	2
 24671  0077FA  EC1C  F033         	call	_lcd_set_com_seg
 24672                           
 24673                           ;lcd.c: 305: lcd_set_com_seg(3,36,code&0x01);
 24674  0077FE  0E24               	movlw	36
 24675  007800  0100               	movlb	0	; () banked
 24676  007802  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24677  007804  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24678  007806  0B01               	andlw	1
 24679  007808  0100               	movlb	0	; () banked
 24680  00780A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24681  00780C  0E03               	movlw	3
 24682  00780E  EC1C  F033         	call	_lcd_set_com_seg
 24683                           
 24684                           ;lcd.c: 307: lcd_set_com_seg(1,37,code&0x04);
 24685  007812  0E25               	movlw	37
 24686  007814  0100               	movlb	0	; () banked
 24687  007816  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24688  007818  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24689  00781A  0B04               	andlw	4
 24690  00781C  0100               	movlb	0	; () banked
 24691  00781E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24692  007820  0E01               	movlw	1
 24693  007822  EC1C  F033         	call	_lcd_set_com_seg
 24694                           
 24695                           ;lcd.c: 308: lcd_set_com_seg(2,37,code&0x40);
 24696  007826  0E25               	movlw	37
 24697  007828  0100               	movlb	0	; () banked
 24698  00782A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24699  00782C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24700  00782E  0B40               	andlw	64
 24701  007830  0100               	movlb	0	; () banked
 24702  007832  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24703  007834  0E02               	movlw	2
 24704  007836  EC1C  F033         	call	_lcd_set_com_seg
 24705                           
 24706                           ;lcd.c: 309: lcd_set_com_seg(3,37,code&0x02);
 24707  00783A  0E25               	movlw	37
 24708  00783C  0100               	movlb	0	; () banked
 24709  00783E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24710  007840  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 24711  007842  0B02               	andlw	2
 24712  007844  0100               	movlb	0	; () banked
 24713  007846  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24714  007848  0E03               	movlw	3
 24715  00784A  EC1C  F033         	call	_lcd_set_com_seg
 24716  00784E  0012               	return		;funcret
 24717  007850                     __end_of_lcd_disp_chr_loc_4:
 24718                           	opt stack 0
 24719                           tosu	equ	0xFFF
 24720                           tosh	equ	0xFFE
 24721                           tosl	equ	0xFFD
 24722                           pclath	equ	0xFFA
 24723                           tblptru	equ	0xFF8
 24724                           tblptrh	equ	0xFF7
 24725                           tblptrl	equ	0xFF6
 24726                           tablat	equ	0xFF5
 24727                           prodh	equ	0xFF4
 24728                           prodl	equ	0xFF3
 24729                           intcon	equ	0xFF2
 24730                           indf0	equ	0xFEF
 24731                           postinc0	equ	0xFEE
 24732                           fsr0h	equ	0xFEA
 24733                           fsr0l	equ	0xFE9
 24734                           wreg	equ	0xFE8
 24735                           indf1	equ	0xFE7
 24736                           postinc1	equ	0xFE6
 24737                           postdec1	equ	0xFE5
 24738                           plusw1	equ	0xFE3
 24739                           fsr1h	equ	0xFE2
 24740                           fsr1l	equ	0xFE1
 24741                           indf2	equ	0xFDF
 24742                           postinc2	equ	0xFDE
 24743                           postdec2	equ	0xFDD
 24744                           plusw2	equ	0xFDB
 24745                           fsr2h	equ	0xFDA
 24746                           fsr2l	equ	0xFD9
 24747                           status	equ	0xFD8
 24748                           
 24749 ;; *************** function _lcd_disp_chr_loc_3 *****************
 24750 ;; Defined at:
 24751 ;;		line 288 in file "src/driver/lcd.c"
 24752 ;; Parameters:    Size  Location     Type
 24753 ;;  code            1    wreg     unsigned char 
 24754 ;; Auto vars:     Size  Location     Type
 24755 ;;  code            1   31[COMRAM] unsigned char 
 24756 ;; Return value:  Size  Location     Type
 24757 ;;                  1    wreg      void 
 24758 ;; Registers used:
 24759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24760 ;; Tracked objects:
 24761 ;;		On entry : 0/0
 24762 ;;		On exit  : 0/0
 24763 ;;		Unchanged: 0/0
 24764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24769 ;;Total ram usage:        1 bytes
 24770 ;; Hardware stack levels used:    1
 24771 ;; Hardware stack levels required when called:    6
 24772 ;; This function calls:
 24773 ;;		_lcd_set_com_seg
 24774 ;; This function is called by:
 24775 ;;		_lcd_show_chr
 24776 ;; This function uses a non-reentrant model
 24777 ;;
 24778                           
 24779                           	psect	text137
 24780  007850                     __ptext137:
 24781                           	opt stack 0
 24782  007850                     _lcd_disp_chr_loc_3:
 24783                           	opt stack 21
 24784                           
 24785                           ;incstack = 0
 24786                           ;lcd_disp_chr_loc_3@code stored from wreg
 24787  007850  6E20               	movwf	lcd_disp_chr_loc_3@code,c
 24788                           
 24789                           ;lcd.c: 290: lcd_set_com_seg(0,43,code&0x01);
 24790  007852  0E2B               	movlw	43
 24791  007854  0100               	movlb	0	; () banked
 24792  007856  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24793  007858  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24794  00785A  0B01               	andlw	1
 24795  00785C  0100               	movlb	0	; () banked
 24796  00785E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24797  007860  0E00               	movlw	0
 24798  007862  EC1C  F033         	call	_lcd_set_com_seg
 24799                           
 24800                           ;lcd.c: 291: lcd_set_com_seg(1,43,code&0x20);
 24801  007866  0E2B               	movlw	43
 24802  007868  0100               	movlb	0	; () banked
 24803  00786A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24804  00786C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24805  00786E  0B20               	andlw	32
 24806  007870  0100               	movlb	0	; () banked
 24807  007872  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24808  007874  0E01               	movlw	1
 24809  007876  EC1C  F033         	call	_lcd_set_com_seg
 24810                           
 24811                           ;lcd.c: 292: lcd_set_com_seg(2,43,code&0x10);
 24812  00787A  0E2B               	movlw	43
 24813  00787C  0100               	movlb	0	; () banked
 24814  00787E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24815  007880  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24816  007882  0B10               	andlw	16
 24817  007884  0100               	movlb	0	; () banked
 24818  007886  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24819  007888  0E02               	movlw	2
 24820  00788A  EC1C  F033         	call	_lcd_set_com_seg
 24821                           
 24822                           ;lcd.c: 293: lcd_set_com_seg(3,43,code&0x08);
 24823  00788E  0E2B               	movlw	43
 24824  007890  0100               	movlb	0	; () banked
 24825  007892  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24826  007894  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24827  007896  0B08               	andlw	8
 24828  007898  0100               	movlb	0	; () banked
 24829  00789A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24830  00789C  0E03               	movlw	3
 24831  00789E  EC1C  F033         	call	_lcd_set_com_seg
 24832                           
 24833                           ;lcd.c: 295: lcd_set_com_seg(0,42,code&0x02);
 24834  0078A2  0E2A               	movlw	42
 24835  0078A4  0100               	movlb	0	; () banked
 24836  0078A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24837  0078A8  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24838  0078AA  0B02               	andlw	2
 24839  0078AC  0100               	movlb	0	; () banked
 24840  0078AE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24841  0078B0  0E00               	movlw	0
 24842  0078B2  EC1C  F033         	call	_lcd_set_com_seg
 24843                           
 24844                           ;lcd.c: 296: lcd_set_com_seg(1,42,code&0x40);
 24845  0078B6  0E2A               	movlw	42
 24846  0078B8  0100               	movlb	0	; () banked
 24847  0078BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24848  0078BC  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24849  0078BE  0B40               	andlw	64
 24850  0078C0  0100               	movlb	0	; () banked
 24851  0078C2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24852  0078C4  0E01               	movlw	1
 24853  0078C6  EC1C  F033         	call	_lcd_set_com_seg
 24854                           
 24855                           ;lcd.c: 297: lcd_set_com_seg(2,42,code&0x04);
 24856  0078CA  0E2A               	movlw	42
 24857  0078CC  0100               	movlb	0	; () banked
 24858  0078CE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24859  0078D0  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 24860  0078D2  0B04               	andlw	4
 24861  0078D4  0100               	movlb	0	; () banked
 24862  0078D6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24863  0078D8  0E02               	movlw	2
 24864  0078DA  EC1C  F033         	call	_lcd_set_com_seg
 24865  0078DE  0012               	return		;funcret
 24866  0078E0                     __end_of_lcd_disp_chr_loc_3:
 24867                           	opt stack 0
 24868                           tosu	equ	0xFFF
 24869                           tosh	equ	0xFFE
 24870                           tosl	equ	0xFFD
 24871                           pclath	equ	0xFFA
 24872                           tblptru	equ	0xFF8
 24873                           tblptrh	equ	0xFF7
 24874                           tblptrl	equ	0xFF6
 24875                           tablat	equ	0xFF5
 24876                           prodh	equ	0xFF4
 24877                           prodl	equ	0xFF3
 24878                           intcon	equ	0xFF2
 24879                           indf0	equ	0xFEF
 24880                           postinc0	equ	0xFEE
 24881                           fsr0h	equ	0xFEA
 24882                           fsr0l	equ	0xFE9
 24883                           wreg	equ	0xFE8
 24884                           indf1	equ	0xFE7
 24885                           postinc1	equ	0xFE6
 24886                           postdec1	equ	0xFE5
 24887                           plusw1	equ	0xFE3
 24888                           fsr1h	equ	0xFE2
 24889                           fsr1l	equ	0xFE1
 24890                           indf2	equ	0xFDF
 24891                           postinc2	equ	0xFDE
 24892                           postdec2	equ	0xFDD
 24893                           plusw2	equ	0xFDB
 24894                           fsr2h	equ	0xFDA
 24895                           fsr2l	equ	0xFD9
 24896                           status	equ	0xFD8
 24897                           
 24898 ;; *************** function _lcd_disp_chr_loc_2 *****************
 24899 ;; Defined at:
 24900 ;;		line 269 in file "src/driver/lcd.c"
 24901 ;; Parameters:    Size  Location     Type
 24902 ;;  code            1    wreg     unsigned char 
 24903 ;; Auto vars:     Size  Location     Type
 24904 ;;  code            1   31[COMRAM] unsigned char 
 24905 ;; Return value:  Size  Location     Type
 24906 ;;                  1    wreg      void 
 24907 ;; Registers used:
 24908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24909 ;; Tracked objects:
 24910 ;;		On entry : 0/0
 24911 ;;		On exit  : 0/0
 24912 ;;		Unchanged: 0/0
 24913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24918 ;;Total ram usage:        1 bytes
 24919 ;; Hardware stack levels used:    1
 24920 ;; Hardware stack levels required when called:    6
 24921 ;; This function calls:
 24922 ;;		_lcd_set_com_seg
 24923 ;; This function is called by:
 24924 ;;		_lcd_show_chr
 24925 ;; This function uses a non-reentrant model
 24926 ;;
 24927                           
 24928                           	psect	text138
 24929  0078E0                     __ptext138:
 24930                           	opt stack 0
 24931  0078E0                     _lcd_disp_chr_loc_2:
 24932                           	opt stack 21
 24933                           
 24934                           ;incstack = 0
 24935                           ;lcd_disp_chr_loc_2@code stored from wreg
 24936  0078E0  6E20               	movwf	lcd_disp_chr_loc_2@code,c
 24937                           
 24938                           ;lcd.c: 271: lcd_set_com_seg(0,21,code&0x01);
 24939  0078E2  0E15               	movlw	21
 24940  0078E4  0100               	movlb	0	; () banked
 24941  0078E6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24942  0078E8  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24943  0078EA  0B01               	andlw	1
 24944  0078EC  0100               	movlb	0	; () banked
 24945  0078EE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24946  0078F0  0E00               	movlw	0
 24947  0078F2  EC1C  F033         	call	_lcd_set_com_seg
 24948                           
 24949                           ;lcd.c: 272: lcd_set_com_seg(1,21,code&0x20);
 24950  0078F6  0E15               	movlw	21
 24951  0078F8  0100               	movlb	0	; () banked
 24952  0078FA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24953  0078FC  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24954  0078FE  0B20               	andlw	32
 24955  007900  0100               	movlb	0	; () banked
 24956  007902  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24957  007904  0E01               	movlw	1
 24958  007906  EC1C  F033         	call	_lcd_set_com_seg
 24959                           
 24960                           ;lcd.c: 273: lcd_set_com_seg(2,21,code&0x10);
 24961  00790A  0E15               	movlw	21
 24962  00790C  0100               	movlb	0	; () banked
 24963  00790E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24964  007910  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24965  007912  0B10               	andlw	16
 24966  007914  0100               	movlb	0	; () banked
 24967  007916  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24968  007918  0E02               	movlw	2
 24969  00791A  EC1C  F033         	call	_lcd_set_com_seg
 24970                           
 24971                           ;lcd.c: 274: lcd_set_com_seg(3,21,code&0x08);
 24972  00791E  0E15               	movlw	21
 24973  007920  0100               	movlb	0	; () banked
 24974  007922  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24975  007924  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24976  007926  0B08               	andlw	8
 24977  007928  0100               	movlb	0	; () banked
 24978  00792A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24979  00792C  0E03               	movlw	3
 24980  00792E  EC1C  F033         	call	_lcd_set_com_seg
 24981                           
 24982                           ;lcd.c: 276: lcd_set_com_seg(0,20,code&0x02);
 24983  007932  0E14               	movlw	20
 24984  007934  0100               	movlb	0	; () banked
 24985  007936  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24986  007938  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24987  00793A  0B02               	andlw	2
 24988  00793C  0100               	movlb	0	; () banked
 24989  00793E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 24990  007940  0E00               	movlw	0
 24991  007942  EC1C  F033         	call	_lcd_set_com_seg
 24992                           
 24993                           ;lcd.c: 277: lcd_set_com_seg(1,20,code&0x40);
 24994  007946  0E14               	movlw	20
 24995  007948  0100               	movlb	0	; () banked
 24996  00794A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 24997  00794C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 24998  00794E  0B40               	andlw	64
 24999  007950  0100               	movlb	0	; () banked
 25000  007952  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25001  007954  0E01               	movlw	1
 25002  007956  EC1C  F033         	call	_lcd_set_com_seg
 25003                           
 25004                           ;lcd.c: 278: lcd_set_com_seg(2,20,code&0x04);
 25005  00795A  0E14               	movlw	20
 25006  00795C  0100               	movlb	0	; () banked
 25007  00795E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25008  007960  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25009  007962  0B04               	andlw	4
 25010  007964  0100               	movlb	0	; () banked
 25011  007966  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25012  007968  0E02               	movlw	2
 25013  00796A  EC1C  F033         	call	_lcd_set_com_seg
 25014  00796E  0012               	return		;funcret
 25015  007970                     __end_of_lcd_disp_chr_loc_2:
 25016                           	opt stack 0
 25017                           tosu	equ	0xFFF
 25018                           tosh	equ	0xFFE
 25019                           tosl	equ	0xFFD
 25020                           pclath	equ	0xFFA
 25021                           tblptru	equ	0xFF8
 25022                           tblptrh	equ	0xFF7
 25023                           tblptrl	equ	0xFF6
 25024                           tablat	equ	0xFF5
 25025                           prodh	equ	0xFF4
 25026                           prodl	equ	0xFF3
 25027                           intcon	equ	0xFF2
 25028                           indf0	equ	0xFEF
 25029                           postinc0	equ	0xFEE
 25030                           fsr0h	equ	0xFEA
 25031                           fsr0l	equ	0xFE9
 25032                           wreg	equ	0xFE8
 25033                           indf1	equ	0xFE7
 25034                           postinc1	equ	0xFE6
 25035                           postdec1	equ	0xFE5
 25036                           plusw1	equ	0xFE3
 25037                           fsr1h	equ	0xFE2
 25038                           fsr1l	equ	0xFE1
 25039                           indf2	equ	0xFDF
 25040                           postinc2	equ	0xFDE
 25041                           postdec2	equ	0xFDD
 25042                           plusw2	equ	0xFDB
 25043                           fsr2h	equ	0xFDA
 25044                           fsr2l	equ	0xFD9
 25045                           status	equ	0xFD8
 25046                           
 25047 ;; *************** function _lcd_disp_chr_loc_1 *****************
 25048 ;; Defined at:
 25049 ;;		line 250 in file "src/driver/lcd.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;  code            1    wreg     unsigned char 
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;  code            1   31[COMRAM] unsigned char 
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  1    wreg      void 
 25056 ;; Registers used:
 25057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25058 ;; Tracked objects:
 25059 ;;		On entry : 0/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25067 ;;Total ram usage:        1 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; Hardware stack levels required when called:    6
 25070 ;; This function calls:
 25071 ;;		_lcd_set_com_seg
 25072 ;; This function is called by:
 25073 ;;		_lcd_show_chr
 25074 ;; This function uses a non-reentrant model
 25075 ;;
 25076                           
 25077                           	psect	text139
 25078  007970                     __ptext139:
 25079                           	opt stack 0
 25080  007970                     _lcd_disp_chr_loc_1:
 25081                           	opt stack 21
 25082                           
 25083                           ;incstack = 0
 25084                           ;lcd_disp_chr_loc_1@code stored from wreg
 25085  007970  6E20               	movwf	lcd_disp_chr_loc_1@code,c
 25086                           
 25087                           ;lcd.c: 252: lcd_set_com_seg(0,23,code&0x01);
 25088  007972  0E17               	movlw	23
 25089  007974  0100               	movlb	0	; () banked
 25090  007976  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25091  007978  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25092  00797A  0B01               	andlw	1
 25093  00797C  0100               	movlb	0	; () banked
 25094  00797E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25095  007980  0E00               	movlw	0
 25096  007982  EC1C  F033         	call	_lcd_set_com_seg
 25097                           
 25098                           ;lcd.c: 253: lcd_set_com_seg(1,23,code&0x20);
 25099  007986  0E17               	movlw	23
 25100  007988  0100               	movlb	0	; () banked
 25101  00798A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25102  00798C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25103  00798E  0B20               	andlw	32
 25104  007990  0100               	movlb	0	; () banked
 25105  007992  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25106  007994  0E01               	movlw	1
 25107  007996  EC1C  F033         	call	_lcd_set_com_seg
 25108                           
 25109                           ;lcd.c: 254: lcd_set_com_seg(2,23,code&0x10);
 25110  00799A  0E17               	movlw	23
 25111  00799C  0100               	movlb	0	; () banked
 25112  00799E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25113  0079A0  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25114  0079A2  0B10               	andlw	16
 25115  0079A4  0100               	movlb	0	; () banked
 25116  0079A6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25117  0079A8  0E02               	movlw	2
 25118  0079AA  EC1C  F033         	call	_lcd_set_com_seg
 25119                           
 25120                           ;lcd.c: 255: lcd_set_com_seg(3,23,code&0x08);
 25121  0079AE  0E17               	movlw	23
 25122  0079B0  0100               	movlb	0	; () banked
 25123  0079B2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25124  0079B4  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25125  0079B6  0B08               	andlw	8
 25126  0079B8  0100               	movlb	0	; () banked
 25127  0079BA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25128  0079BC  0E03               	movlw	3
 25129  0079BE  EC1C  F033         	call	_lcd_set_com_seg
 25130                           
 25131                           ;lcd.c: 257: lcd_set_com_seg(0,22,code&0x02);
 25132  0079C2  0E16               	movlw	22
 25133  0079C4  0100               	movlb	0	; () banked
 25134  0079C6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25135  0079C8  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25136  0079CA  0B02               	andlw	2
 25137  0079CC  0100               	movlb	0	; () banked
 25138  0079CE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25139  0079D0  0E00               	movlw	0
 25140  0079D2  EC1C  F033         	call	_lcd_set_com_seg
 25141                           
 25142                           ;lcd.c: 258: lcd_set_com_seg(1,22,code&0x40);
 25143  0079D6  0E16               	movlw	22
 25144  0079D8  0100               	movlb	0	; () banked
 25145  0079DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25146  0079DC  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25147  0079DE  0B40               	andlw	64
 25148  0079E0  0100               	movlb	0	; () banked
 25149  0079E2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25150  0079E4  0E01               	movlw	1
 25151  0079E6  EC1C  F033         	call	_lcd_set_com_seg
 25152                           
 25153                           ;lcd.c: 259: lcd_set_com_seg(2,22,code&0x04);
 25154  0079EA  0E16               	movlw	22
 25155  0079EC  0100               	movlb	0	; () banked
 25156  0079EE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25157  0079F0  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 25158  0079F2  0B04               	andlw	4
 25159  0079F4  0100               	movlb	0	; () banked
 25160  0079F6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25161  0079F8  0E02               	movlw	2
 25162  0079FA  EC1C  F033         	call	_lcd_set_com_seg
 25163  0079FE  0012               	return		;funcret
 25164  007A00                     __end_of_lcd_disp_chr_loc_1:
 25165                           	opt stack 0
 25166                           tosu	equ	0xFFF
 25167                           tosh	equ	0xFFE
 25168                           tosl	equ	0xFFD
 25169                           pclath	equ	0xFFA
 25170                           tblptru	equ	0xFF8
 25171                           tblptrh	equ	0xFF7
 25172                           tblptrl	equ	0xFF6
 25173                           tablat	equ	0xFF5
 25174                           prodh	equ	0xFF4
 25175                           prodl	equ	0xFF3
 25176                           intcon	equ	0xFF2
 25177                           indf0	equ	0xFEF
 25178                           postinc0	equ	0xFEE
 25179                           fsr0h	equ	0xFEA
 25180                           fsr0l	equ	0xFE9
 25181                           wreg	equ	0xFE8
 25182                           indf1	equ	0xFE7
 25183                           postinc1	equ	0xFE6
 25184                           postdec1	equ	0xFE5
 25185                           plusw1	equ	0xFE3
 25186                           fsr1h	equ	0xFE2
 25187                           fsr1l	equ	0xFE1
 25188                           indf2	equ	0xFDF
 25189                           postinc2	equ	0xFDE
 25190                           postdec2	equ	0xFDD
 25191                           plusw2	equ	0xFDB
 25192                           fsr2h	equ	0xFDA
 25193                           fsr2l	equ	0xFD9
 25194                           status	equ	0xFD8
 25195                           
 25196 ;; *************** function _lcd_disp_chr_loc_0 *****************
 25197 ;; Defined at:
 25198 ;;		line 230 in file "src/driver/lcd.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;  code            1    wreg     unsigned char 
 25201 ;; Auto vars:     Size  Location     Type
 25202 ;;  code            1   31[COMRAM] unsigned char 
 25203 ;; Return value:  Size  Location     Type
 25204 ;;                  1    wreg      void 
 25205 ;; Registers used:
 25206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25207 ;; Tracked objects:
 25208 ;;		On entry : 0/0
 25209 ;;		On exit  : 0/0
 25210 ;;		Unchanged: 0/0
 25211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25216 ;;Total ram usage:        1 bytes
 25217 ;; Hardware stack levels used:    1
 25218 ;; Hardware stack levels required when called:    6
 25219 ;; This function calls:
 25220 ;;		_lcd_set_com_seg
 25221 ;; This function is called by:
 25222 ;;		_lcd_show_chr
 25223 ;; This function uses a non-reentrant model
 25224 ;;
 25225                           
 25226                           	psect	text140
 25227  007A00                     __ptext140:
 25228                           	opt stack 0
 25229  007A00                     _lcd_disp_chr_loc_0:
 25230                           	opt stack 21
 25231                           
 25232                           ;incstack = 0
 25233                           ;lcd_disp_chr_loc_0@code stored from wreg
 25234  007A00  6E20               	movwf	lcd_disp_chr_loc_0@code,c
 25235                           
 25236                           ;lcd.c: 232: lcd_set_com_seg(0,25,code&0x01);
 25237  007A02  0E19               	movlw	25
 25238  007A04  0100               	movlb	0	; () banked
 25239  007A06  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25240  007A08  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25241  007A0A  0B01               	andlw	1
 25242  007A0C  0100               	movlb	0	; () banked
 25243  007A0E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25244  007A10  0E00               	movlw	0
 25245  007A12  EC1C  F033         	call	_lcd_set_com_seg
 25246                           
 25247                           ;lcd.c: 233: lcd_set_com_seg(1,25,code&0x20);
 25248  007A16  0E19               	movlw	25
 25249  007A18  0100               	movlb	0	; () banked
 25250  007A1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25251  007A1C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25252  007A1E  0B20               	andlw	32
 25253  007A20  0100               	movlb	0	; () banked
 25254  007A22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25255  007A24  0E01               	movlw	1
 25256  007A26  EC1C  F033         	call	_lcd_set_com_seg
 25257                           
 25258                           ;lcd.c: 234: lcd_set_com_seg(2,25,code&0x10);
 25259  007A2A  0E19               	movlw	25
 25260  007A2C  0100               	movlb	0	; () banked
 25261  007A2E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25262  007A30  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25263  007A32  0B10               	andlw	16
 25264  007A34  0100               	movlb	0	; () banked
 25265  007A36  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25266  007A38  0E02               	movlw	2
 25267  007A3A  EC1C  F033         	call	_lcd_set_com_seg
 25268                           
 25269                           ;lcd.c: 235: lcd_set_com_seg(3,25,code&0x08);
 25270  007A3E  0E19               	movlw	25
 25271  007A40  0100               	movlb	0	; () banked
 25272  007A42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25273  007A44  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25274  007A46  0B08               	andlw	8
 25275  007A48  0100               	movlb	0	; () banked
 25276  007A4A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25277  007A4C  0E03               	movlw	3
 25278  007A4E  EC1C  F033         	call	_lcd_set_com_seg
 25279                           
 25280                           ;lcd.c: 237: lcd_set_com_seg(0,24,code&0x02);
 25281  007A52  0E18               	movlw	24
 25282  007A54  0100               	movlb	0	; () banked
 25283  007A56  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25284  007A58  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25285  007A5A  0B02               	andlw	2
 25286  007A5C  0100               	movlb	0	; () banked
 25287  007A5E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25288  007A60  0E00               	movlw	0
 25289  007A62  EC1C  F033         	call	_lcd_set_com_seg
 25290                           
 25291                           ;lcd.c: 238: lcd_set_com_seg(1,24,code&0x40);
 25292  007A66  0E18               	movlw	24
 25293  007A68  0100               	movlb	0	; () banked
 25294  007A6A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25295  007A6C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25296  007A6E  0B40               	andlw	64
 25297  007A70  0100               	movlb	0	; () banked
 25298  007A72  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25299  007A74  0E01               	movlw	1
 25300  007A76  EC1C  F033         	call	_lcd_set_com_seg
 25301                           
 25302                           ;lcd.c: 239: lcd_set_com_seg(2,24,code&0x04);
 25303  007A7A  0E18               	movlw	24
 25304  007A7C  0100               	movlb	0	; () banked
 25305  007A7E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25306  007A80  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 25307  007A82  0B04               	andlw	4
 25308  007A84  0100               	movlb	0	; () banked
 25309  007A86  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25310  007A88  0E02               	movlw	2
 25311  007A8A  EC1C  F033         	call	_lcd_set_com_seg
 25312  007A8E  0012               	return		;funcret
 25313  007A90                     __end_of_lcd_disp_chr_loc_0:
 25314                           	opt stack 0
 25315                           tosu	equ	0xFFF
 25316                           tosh	equ	0xFFE
 25317                           tosl	equ	0xFFD
 25318                           pclath	equ	0xFFA
 25319                           tblptru	equ	0xFF8
 25320                           tblptrh	equ	0xFF7
 25321                           tblptrl	equ	0xFF6
 25322                           tablat	equ	0xFF5
 25323                           prodh	equ	0xFF4
 25324                           prodl	equ	0xFF3
 25325                           intcon	equ	0xFF2
 25326                           indf0	equ	0xFEF
 25327                           postinc0	equ	0xFEE
 25328                           fsr0h	equ	0xFEA
 25329                           fsr0l	equ	0xFE9
 25330                           wreg	equ	0xFE8
 25331                           indf1	equ	0xFE7
 25332                           postinc1	equ	0xFE6
 25333                           postdec1	equ	0xFE5
 25334                           plusw1	equ	0xFE3
 25335                           fsr1h	equ	0xFE2
 25336                           fsr1l	equ	0xFE1
 25337                           indf2	equ	0xFDF
 25338                           postinc2	equ	0xFDE
 25339                           postdec2	equ	0xFDD
 25340                           plusw2	equ	0xFDB
 25341                           fsr2h	equ	0xFDA
 25342                           fsr2l	equ	0xFD9
 25343                           status	equ	0xFD8
 25344                           
 25345 ;; *************** function _lcd_show_dp *****************
 25346 ;; Defined at:
 25347 ;;		line 502 in file "src/driver/lcd.c"
 25348 ;; Parameters:    Size  Location     Type
 25349 ;;  loc             1    wreg     unsigned char 
 25350 ;;  show            1   16[BANK0 ] unsigned char 
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;  loc             1   17[BANK0 ] unsigned char 
 25353 ;; Return value:  Size  Location     Type
 25354 ;;                  1    wreg      void 
 25355 ;; Registers used:
 25356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25357 ;; Tracked objects:
 25358 ;;		On entry : 0/0
 25359 ;;		On exit  : 0/0
 25360 ;;		Unchanged: 0/0
 25361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25366 ;;Total ram usage:        2 bytes
 25367 ;; Hardware stack levels used:    1
 25368 ;; Hardware stack levels required when called:    7
 25369 ;; This function calls:
 25370 ;;		_lcd_disp_dp_loc_0
 25371 ;;		_lcd_disp_dp_loc_1
 25372 ;;		_lcd_disp_dp_loc_2
 25373 ;;		_lcd_disp_dp_loc_4
 25374 ;;		_lcd_disp_dp_loc_5
 25375 ;;		_lcd_disp_dp_loc_6
 25376 ;; This function is called by:
 25377 ;;		_ui_disp_clear_num_dp
 25378 ;;		_ui_disp_adj_xfloat_pt
 25379 ;;		_ui_disp_adj_xfixed_pt_dp
 25380 ;;		_ui_disp_rtc_mm_ss
 25381 ;;		_ui_disp_xfloat_pt
 25382 ;; This function uses a non-reentrant model
 25383 ;;
 25384                           
 25385                           	psect	text141
 25386  0084E6                     __ptext141:
 25387                           	opt stack 0
 25388  0084E6                     _lcd_show_dp:
 25389                           	opt stack 19
 25390                           
 25391                           ;incstack = 0
 25392                           ;lcd_show_dp@loc stored from wreg
 25393  0084E6  0100               	movlb	0	; () banked
 25394  0084E8  6F71               	movwf	lcd_show_dp@loc& (0+255),b
 25395                           
 25396                           ;lcd.c: 504: switch(loc){
 25397  0084EA  D01E               	goto	l14024
 25398  0084EC                     l14010:
 25399  0084EC  0100               	movlb	0	; () banked
 25400  0084EE  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25401  0084F0  EC60  F04B         	call	_lcd_disp_dp_loc_0
 25402  0084F4  0012               	return	
 25403  0084F6                     l14012:
 25404  0084F6  0100               	movlb	0	; () banked
 25405  0084F8  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25406  0084FA  EC48  F04B         	call	_lcd_disp_dp_loc_1
 25407  0084FE  0012               	return	
 25408  008500                     l14014:
 25409  008500  0100               	movlb	0	; () banked
 25410  008502  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25411  008504  EC30  F04B         	call	_lcd_disp_dp_loc_2
 25412  008508  0012               	return	
 25413  00850A                     l14016:
 25414  00850A  0100               	movlb	0	; () banked
 25415  00850C  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25416  00850E  EC18  F04B         	call	_lcd_disp_dp_loc_4
 25417  008512  0012               	return	
 25418  008514                     l14018:
 25419  008514  0100               	movlb	0	; () banked
 25420  008516  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25421  008518  EC00  F04B         	call	_lcd_disp_dp_loc_5
 25422  00851C  0012               	return	
 25423  00851E                     l14020:
 25424  00851E  0100               	movlb	0	; () banked
 25425  008520  5170               	movf	lcd_show_dp@show& (0+255),w,b
 25426  008522  ECE8  F04A         	call	_lcd_disp_dp_loc_6
 25427                           
 25428                           ;lcd.c: 514: }
 25429                           
 25430                           ;lcd.c: 513: default:break;
 25431  008526  0012               	return	
 25432  008528                     l14024:
 25433  008528  0100               	movlb	0	; () banked
 25434  00852A  5171               	movf	lcd_show_dp@loc& (0+255),w,b
 25435                           
 25436                           ; Switch size 1, requested type "space"
 25437                           ; Number of cases is 6, Range of values is 0 to 6
 25438                           ; switch strategies available:
 25439                           ; Name         Instructions Cycles
 25440                           ; simple_byte           19    10 (average)
 25441                           ;	Chosen strategy is simple_byte
 25442  00852C  0A00               	xorlw	0	; case 0
 25443  00852E  B4D8               	btfsc	status,2,c
 25444  008530  D7DD               	goto	l14010
 25445  008532  0A01               	xorlw	1	; case 1
 25446  008534  B4D8               	btfsc	status,2,c
 25447  008536  D7DF               	goto	l14012
 25448  008538  0A03               	xorlw	3	; case 2
 25449  00853A  B4D8               	btfsc	status,2,c
 25450  00853C  D7E1               	goto	l14014
 25451  00853E  0A06               	xorlw	6	; case 4
 25452  008540  B4D8               	btfsc	status,2,c
 25453  008542  D7E3               	goto	l14016
 25454  008544  0A01               	xorlw	1	; case 5
 25455  008546  B4D8               	btfsc	status,2,c
 25456  008548  D7E5               	goto	l14018
 25457  00854A  0A03               	xorlw	3	; case 6
 25458  00854C  A4D8               	btfss	status,2,c
 25459  00854E  0012               	return	
 25460  008550  D7E6               	goto	l14020
 25461  008552                     __end_of_lcd_show_dp:
 25462                           	opt stack 0
 25463                           tosu	equ	0xFFF
 25464                           tosh	equ	0xFFE
 25465                           tosl	equ	0xFFD
 25466                           pclath	equ	0xFFA
 25467                           tblptru	equ	0xFF8
 25468                           tblptrh	equ	0xFF7
 25469                           tblptrl	equ	0xFF6
 25470                           tablat	equ	0xFF5
 25471                           prodh	equ	0xFF4
 25472                           prodl	equ	0xFF3
 25473                           intcon	equ	0xFF2
 25474                           indf0	equ	0xFEF
 25475                           postinc0	equ	0xFEE
 25476                           fsr0h	equ	0xFEA
 25477                           fsr0l	equ	0xFE9
 25478                           wreg	equ	0xFE8
 25479                           indf1	equ	0xFE7
 25480                           postinc1	equ	0xFE6
 25481                           postdec1	equ	0xFE5
 25482                           plusw1	equ	0xFE3
 25483                           fsr1h	equ	0xFE2
 25484                           fsr1l	equ	0xFE1
 25485                           indf2	equ	0xFDF
 25486                           postinc2	equ	0xFDE
 25487                           postdec2	equ	0xFDD
 25488                           plusw2	equ	0xFDB
 25489                           fsr2h	equ	0xFDA
 25490                           fsr2l	equ	0xFD9
 25491                           status	equ	0xFD8
 25492                           
 25493 ;; *************** function _lcd_disp_dp_loc_6 *****************
 25494 ;; Defined at:
 25495 ;;		line 349 in file "src/driver/lcd.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;  dp              1    wreg     unsigned char 
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;  dp              1   31[COMRAM] unsigned char 
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      void 
 25502 ;; Registers used:
 25503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25504 ;; Tracked objects:
 25505 ;;		On entry : 0/0
 25506 ;;		On exit  : 0/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25513 ;;Total ram usage:        1 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:    6
 25516 ;; This function calls:
 25517 ;;		_lcd_set_com_seg
 25518 ;; This function is called by:
 25519 ;;		_lcd_show_dp
 25520 ;;		_lcd_clear_all_dp
 25521 ;; This function uses a non-reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text142
 25525  0095D0                     __ptext142:
 25526                           	opt stack 0
 25527  0095D0                     _lcd_disp_dp_loc_6:
 25528                           	opt stack 19
 25529                           
 25530                           ;incstack = 0
 25531                           ;lcd_disp_dp_loc_6@dp stored from wreg
 25532  0095D0  6E20               	movwf	lcd_disp_dp_loc_6@dp,c
 25533                           
 25534                           ;lcd.c: 351: if(dp)
 25535  0095D2  5020               	movf	lcd_disp_dp_loc_6@dp,w,c
 25536  0095D4  B4D8               	btfsc	status,2,c
 25537  0095D6  D00A               	goto	l13308
 25538                           
 25539                           ;lcd.c: 352: lcd_set_com_seg(0,15,0x80);
 25540  0095D8  0E0F               	movlw	15
 25541  0095DA  0100               	movlb	0	; () banked
 25542  0095DC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25543  0095DE  0E80               	movlw	128
 25544  0095E0  0100               	movlb	0	; () banked
 25545  0095E2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25546  0095E4  0E00               	movlw	0
 25547  0095E6  EC1C  F033         	call	_lcd_set_com_seg
 25548  0095EA  0012               	return	
 25549  0095EC                     l13308:
 25550                           
 25551                           ;lcd.c: 353: else
 25552                           ;lcd.c: 354: lcd_set_com_seg(0,15,0);
 25553  0095EC  0E0F               	movlw	15
 25554  0095EE  0100               	movlb	0	; () banked
 25555  0095F0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25556  0095F2  0E00               	movlw	0
 25557  0095F4  0100               	movlb	0	; () banked
 25558  0095F6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25559  0095F8  0E00               	movlw	0
 25560  0095FA  EC1C  F033         	call	_lcd_set_com_seg
 25561  0095FE  0012               	return	
 25562  009600                     __end_of_lcd_disp_dp_loc_6:
 25563                           	opt stack 0
 25564                           tosu	equ	0xFFF
 25565                           tosh	equ	0xFFE
 25566                           tosl	equ	0xFFD
 25567                           pclath	equ	0xFFA
 25568                           tblptru	equ	0xFF8
 25569                           tblptrh	equ	0xFF7
 25570                           tblptrl	equ	0xFF6
 25571                           tablat	equ	0xFF5
 25572                           prodh	equ	0xFF4
 25573                           prodl	equ	0xFF3
 25574                           intcon	equ	0xFF2
 25575                           indf0	equ	0xFEF
 25576                           postinc0	equ	0xFEE
 25577                           fsr0h	equ	0xFEA
 25578                           fsr0l	equ	0xFE9
 25579                           wreg	equ	0xFE8
 25580                           indf1	equ	0xFE7
 25581                           postinc1	equ	0xFE6
 25582                           postdec1	equ	0xFE5
 25583                           plusw1	equ	0xFE3
 25584                           fsr1h	equ	0xFE2
 25585                           fsr1l	equ	0xFE1
 25586                           indf2	equ	0xFDF
 25587                           postinc2	equ	0xFDE
 25588                           postdec2	equ	0xFDD
 25589                           plusw2	equ	0xFDB
 25590                           fsr2h	equ	0xFDA
 25591                           fsr2l	equ	0xFD9
 25592                           status	equ	0xFD8
 25593                           
 25594 ;; *************** function _lcd_disp_dp_loc_5 *****************
 25595 ;; Defined at:
 25596 ;;		line 330 in file "src/driver/lcd.c"
 25597 ;; Parameters:    Size  Location     Type
 25598 ;;  dp              1    wreg     unsigned char 
 25599 ;; Auto vars:     Size  Location     Type
 25600 ;;  dp              1   31[COMRAM] unsigned char 
 25601 ;; Return value:  Size  Location     Type
 25602 ;;                  1    wreg      void 
 25603 ;; Registers used:
 25604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25605 ;; Tracked objects:
 25606 ;;		On entry : 0/0
 25607 ;;		On exit  : 0/0
 25608 ;;		Unchanged: 0/0
 25609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25614 ;;Total ram usage:        1 bytes
 25615 ;; Hardware stack levels used:    1
 25616 ;; Hardware stack levels required when called:    6
 25617 ;; This function calls:
 25618 ;;		_lcd_set_com_seg
 25619 ;; This function is called by:
 25620 ;;		_lcd_show_dp
 25621 ;;		_lcd_clear_all_dp
 25622 ;; This function uses a non-reentrant model
 25623 ;;
 25624                           
 25625                           	psect	text143
 25626  009600                     __ptext143:
 25627                           	opt stack 0
 25628  009600                     _lcd_disp_dp_loc_5:
 25629                           	opt stack 19
 25630                           
 25631                           ;incstack = 0
 25632                           ;lcd_disp_dp_loc_5@dp stored from wreg
 25633  009600  6E20               	movwf	lcd_disp_dp_loc_5@dp,c
 25634                           
 25635                           ;lcd.c: 332: if(dp)
 25636  009602  5020               	movf	lcd_disp_dp_loc_5@dp,w,c
 25637  009604  B4D8               	btfsc	status,2,c
 25638  009606  D00A               	goto	l13302
 25639                           
 25640                           ;lcd.c: 333: lcd_set_com_seg(0,39,0x80);
 25641  009608  0E27               	movlw	39
 25642  00960A  0100               	movlb	0	; () banked
 25643  00960C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25644  00960E  0E80               	movlw	128
 25645  009610  0100               	movlb	0	; () banked
 25646  009612  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25647  009614  0E00               	movlw	0
 25648  009616  EC1C  F033         	call	_lcd_set_com_seg
 25649  00961A  0012               	return	
 25650  00961C                     l13302:
 25651                           
 25652                           ;lcd.c: 334: else
 25653                           ;lcd.c: 335: lcd_set_com_seg(0,39,0);
 25654  00961C  0E27               	movlw	39
 25655  00961E  0100               	movlb	0	; () banked
 25656  009620  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25657  009622  0E00               	movlw	0
 25658  009624  0100               	movlb	0	; () banked
 25659  009626  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25660  009628  0E00               	movlw	0
 25661  00962A  EC1C  F033         	call	_lcd_set_com_seg
 25662  00962E  0012               	return	
 25663  009630                     __end_of_lcd_disp_dp_loc_5:
 25664                           	opt stack 0
 25665                           tosu	equ	0xFFF
 25666                           tosh	equ	0xFFE
 25667                           tosl	equ	0xFFD
 25668                           pclath	equ	0xFFA
 25669                           tblptru	equ	0xFF8
 25670                           tblptrh	equ	0xFF7
 25671                           tblptrl	equ	0xFF6
 25672                           tablat	equ	0xFF5
 25673                           prodh	equ	0xFF4
 25674                           prodl	equ	0xFF3
 25675                           intcon	equ	0xFF2
 25676                           indf0	equ	0xFEF
 25677                           postinc0	equ	0xFEE
 25678                           fsr0h	equ	0xFEA
 25679                           fsr0l	equ	0xFE9
 25680                           wreg	equ	0xFE8
 25681                           indf1	equ	0xFE7
 25682                           postinc1	equ	0xFE6
 25683                           postdec1	equ	0xFE5
 25684                           plusw1	equ	0xFE3
 25685                           fsr1h	equ	0xFE2
 25686                           fsr1l	equ	0xFE1
 25687                           indf2	equ	0xFDF
 25688                           postinc2	equ	0xFDE
 25689                           postdec2	equ	0xFDD
 25690                           plusw2	equ	0xFDB
 25691                           fsr2h	equ	0xFDA
 25692                           fsr2l	equ	0xFD9
 25693                           status	equ	0xFD8
 25694                           
 25695 ;; *************** function _lcd_disp_dp_loc_4 *****************
 25696 ;; Defined at:
 25697 ;;		line 311 in file "src/driver/lcd.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;  dp              1    wreg     unsigned char 
 25700 ;; Auto vars:     Size  Location     Type
 25701 ;;  dp              1   31[COMRAM] unsigned char 
 25702 ;; Return value:  Size  Location     Type
 25703 ;;                  1    wreg      void 
 25704 ;; Registers used:
 25705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25706 ;; Tracked objects:
 25707 ;;		On entry : 0/0
 25708 ;;		On exit  : 0/0
 25709 ;;		Unchanged: 0/0
 25710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;Total ram usage:        1 bytes
 25716 ;; Hardware stack levels used:    1
 25717 ;; Hardware stack levels required when called:    6
 25718 ;; This function calls:
 25719 ;;		_lcd_set_com_seg
 25720 ;; This function is called by:
 25721 ;;		_lcd_show_dp
 25722 ;;		_lcd_clear_all_dp
 25723 ;; This function uses a non-reentrant model
 25724 ;;
 25725                           
 25726                           	psect	text144
 25727  009630                     __ptext144:
 25728                           	opt stack 0
 25729  009630                     _lcd_disp_dp_loc_4:
 25730                           	opt stack 19
 25731                           
 25732                           ;incstack = 0
 25733                           ;lcd_disp_dp_loc_4@dp stored from wreg
 25734  009630  6E20               	movwf	lcd_disp_dp_loc_4@dp,c
 25735                           
 25736                           ;lcd.c: 313: if(dp)
 25737  009632  5020               	movf	lcd_disp_dp_loc_4@dp,w,c
 25738  009634  B4D8               	btfsc	status,2,c
 25739  009636  D00A               	goto	l13296
 25740                           
 25741                           ;lcd.c: 314: lcd_set_com_seg(0,37,0x80);
 25742  009638  0E25               	movlw	37
 25743  00963A  0100               	movlb	0	; () banked
 25744  00963C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25745  00963E  0E80               	movlw	128
 25746  009640  0100               	movlb	0	; () banked
 25747  009642  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25748  009644  0E00               	movlw	0
 25749  009646  EC1C  F033         	call	_lcd_set_com_seg
 25750  00964A  0012               	return	
 25751  00964C                     l13296:
 25752                           
 25753                           ;lcd.c: 315: else
 25754                           ;lcd.c: 316: lcd_set_com_seg(0,37,0);
 25755  00964C  0E25               	movlw	37
 25756  00964E  0100               	movlb	0	; () banked
 25757  009650  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25758  009652  0E00               	movlw	0
 25759  009654  0100               	movlb	0	; () banked
 25760  009656  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25761  009658  0E00               	movlw	0
 25762  00965A  EC1C  F033         	call	_lcd_set_com_seg
 25763  00965E  0012               	return	
 25764  009660                     __end_of_lcd_disp_dp_loc_4:
 25765                           	opt stack 0
 25766                           tosu	equ	0xFFF
 25767                           tosh	equ	0xFFE
 25768                           tosl	equ	0xFFD
 25769                           pclath	equ	0xFFA
 25770                           tblptru	equ	0xFF8
 25771                           tblptrh	equ	0xFF7
 25772                           tblptrl	equ	0xFF6
 25773                           tablat	equ	0xFF5
 25774                           prodh	equ	0xFF4
 25775                           prodl	equ	0xFF3
 25776                           intcon	equ	0xFF2
 25777                           indf0	equ	0xFEF
 25778                           postinc0	equ	0xFEE
 25779                           fsr0h	equ	0xFEA
 25780                           fsr0l	equ	0xFE9
 25781                           wreg	equ	0xFE8
 25782                           indf1	equ	0xFE7
 25783                           postinc1	equ	0xFE6
 25784                           postdec1	equ	0xFE5
 25785                           plusw1	equ	0xFE3
 25786                           fsr1h	equ	0xFE2
 25787                           fsr1l	equ	0xFE1
 25788                           indf2	equ	0xFDF
 25789                           postinc2	equ	0xFDE
 25790                           postdec2	equ	0xFDD
 25791                           plusw2	equ	0xFDB
 25792                           fsr2h	equ	0xFDA
 25793                           fsr2l	equ	0xFD9
 25794                           status	equ	0xFD8
 25795                           
 25796 ;; *************** function _lcd_disp_dp_loc_2 *****************
 25797 ;; Defined at:
 25798 ;;		line 280 in file "src/driver/lcd.c"
 25799 ;; Parameters:    Size  Location     Type
 25800 ;;  dp              1    wreg     unsigned char 
 25801 ;; Auto vars:     Size  Location     Type
 25802 ;;  dp              1   31[COMRAM] unsigned char 
 25803 ;; Return value:  Size  Location     Type
 25804 ;;                  1    wreg      void 
 25805 ;; Registers used:
 25806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25807 ;; Tracked objects:
 25808 ;;		On entry : 0/0
 25809 ;;		On exit  : 0/0
 25810 ;;		Unchanged: 0/0
 25811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25816 ;;Total ram usage:        1 bytes
 25817 ;; Hardware stack levels used:    1
 25818 ;; Hardware stack levels required when called:    6
 25819 ;; This function calls:
 25820 ;;		_lcd_set_com_seg
 25821 ;; This function is called by:
 25822 ;;		_lcd_show_dp
 25823 ;;		_lcd_clear_all_dp
 25824 ;; This function uses a non-reentrant model
 25825 ;;
 25826                           
 25827                           	psect	text145
 25828  009660                     __ptext145:
 25829                           	opt stack 0
 25830  009660                     _lcd_disp_dp_loc_2:
 25831                           	opt stack 19
 25832                           
 25833                           ;incstack = 0
 25834                           ;lcd_disp_dp_loc_2@dp stored from wreg
 25835  009660  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
 25836                           
 25837                           ;lcd.c: 282: if(dp)
 25838  009662  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
 25839  009664  B4D8               	btfsc	status,2,c
 25840  009666  D00A               	goto	l13290
 25841                           
 25842                           ;lcd.c: 283: lcd_set_com_seg(3,20,0x80);
 25843  009668  0E14               	movlw	20
 25844  00966A  0100               	movlb	0	; () banked
 25845  00966C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25846  00966E  0E80               	movlw	128
 25847  009670  0100               	movlb	0	; () banked
 25848  009672  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25849  009674  0E03               	movlw	3
 25850  009676  EC1C  F033         	call	_lcd_set_com_seg
 25851  00967A  0012               	return	
 25852  00967C                     l13290:
 25853                           
 25854                           ;lcd.c: 284: else
 25855                           ;lcd.c: 285: lcd_set_com_seg(3,20,0);
 25856  00967C  0E14               	movlw	20
 25857  00967E  0100               	movlb	0	; () banked
 25858  009680  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25859  009682  0E00               	movlw	0
 25860  009684  0100               	movlb	0	; () banked
 25861  009686  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25862  009688  0E03               	movlw	3
 25863  00968A  EC1C  F033         	call	_lcd_set_com_seg
 25864  00968E  0012               	return	
 25865  009690                     __end_of_lcd_disp_dp_loc_2:
 25866                           	opt stack 0
 25867                           tosu	equ	0xFFF
 25868                           tosh	equ	0xFFE
 25869                           tosl	equ	0xFFD
 25870                           pclath	equ	0xFFA
 25871                           tblptru	equ	0xFF8
 25872                           tblptrh	equ	0xFF7
 25873                           tblptrl	equ	0xFF6
 25874                           tablat	equ	0xFF5
 25875                           prodh	equ	0xFF4
 25876                           prodl	equ	0xFF3
 25877                           intcon	equ	0xFF2
 25878                           indf0	equ	0xFEF
 25879                           postinc0	equ	0xFEE
 25880                           fsr0h	equ	0xFEA
 25881                           fsr0l	equ	0xFE9
 25882                           wreg	equ	0xFE8
 25883                           indf1	equ	0xFE7
 25884                           postinc1	equ	0xFE6
 25885                           postdec1	equ	0xFE5
 25886                           plusw1	equ	0xFE3
 25887                           fsr1h	equ	0xFE2
 25888                           fsr1l	equ	0xFE1
 25889                           indf2	equ	0xFDF
 25890                           postinc2	equ	0xFDE
 25891                           postdec2	equ	0xFDD
 25892                           plusw2	equ	0xFDB
 25893                           fsr2h	equ	0xFDA
 25894                           fsr2l	equ	0xFD9
 25895                           status	equ	0xFD8
 25896                           
 25897 ;; *************** function _lcd_disp_dp_loc_1 *****************
 25898 ;; Defined at:
 25899 ;;		line 261 in file "src/driver/lcd.c"
 25900 ;; Parameters:    Size  Location     Type
 25901 ;;  dp              1    wreg     unsigned char 
 25902 ;; Auto vars:     Size  Location     Type
 25903 ;;  dp              1   31[COMRAM] unsigned char 
 25904 ;; Return value:  Size  Location     Type
 25905 ;;                  1    wreg      void 
 25906 ;; Registers used:
 25907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25908 ;; Tracked objects:
 25909 ;;		On entry : 0/0
 25910 ;;		On exit  : 0/0
 25911 ;;		Unchanged: 0/0
 25912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25917 ;;Total ram usage:        1 bytes
 25918 ;; Hardware stack levels used:    1
 25919 ;; Hardware stack levels required when called:    6
 25920 ;; This function calls:
 25921 ;;		_lcd_set_com_seg
 25922 ;; This function is called by:
 25923 ;;		_lcd_show_dp
 25924 ;;		_lcd_clear_all_dp
 25925 ;; This function uses a non-reentrant model
 25926 ;;
 25927                           
 25928                           	psect	text146
 25929  009690                     __ptext146:
 25930                           	opt stack 0
 25931  009690                     _lcd_disp_dp_loc_1:
 25932                           	opt stack 19
 25933                           
 25934                           ;incstack = 0
 25935                           ;lcd_disp_dp_loc_1@dp stored from wreg
 25936  009690  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
 25937                           
 25938                           ;lcd.c: 263: if(dp)
 25939  009692  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
 25940  009694  B4D8               	btfsc	status,2,c
 25941  009696  D00A               	goto	l13284
 25942                           
 25943                           ;lcd.c: 264: lcd_set_com_seg(3,22,0x80);
 25944  009698  0E16               	movlw	22
 25945  00969A  0100               	movlb	0	; () banked
 25946  00969C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25947  00969E  0E80               	movlw	128
 25948  0096A0  0100               	movlb	0	; () banked
 25949  0096A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25950  0096A4  0E03               	movlw	3
 25951  0096A6  EC1C  F033         	call	_lcd_set_com_seg
 25952  0096AA  0012               	return	
 25953  0096AC                     l13284:
 25954                           
 25955                           ;lcd.c: 265: else
 25956                           ;lcd.c: 266: lcd_set_com_seg(3,22,0);
 25957  0096AC  0E16               	movlw	22
 25958  0096AE  0100               	movlb	0	; () banked
 25959  0096B0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25960  0096B2  0E00               	movlw	0
 25961  0096B4  0100               	movlb	0	; () banked
 25962  0096B6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25963  0096B8  0E03               	movlw	3
 25964  0096BA  EC1C  F033         	call	_lcd_set_com_seg
 25965  0096BE  0012               	return	
 25966  0096C0                     __end_of_lcd_disp_dp_loc_1:
 25967                           	opt stack 0
 25968                           tosu	equ	0xFFF
 25969                           tosh	equ	0xFFE
 25970                           tosl	equ	0xFFD
 25971                           pclath	equ	0xFFA
 25972                           tblptru	equ	0xFF8
 25973                           tblptrh	equ	0xFF7
 25974                           tblptrl	equ	0xFF6
 25975                           tablat	equ	0xFF5
 25976                           prodh	equ	0xFF4
 25977                           prodl	equ	0xFF3
 25978                           intcon	equ	0xFF2
 25979                           indf0	equ	0xFEF
 25980                           postinc0	equ	0xFEE
 25981                           fsr0h	equ	0xFEA
 25982                           fsr0l	equ	0xFE9
 25983                           wreg	equ	0xFE8
 25984                           indf1	equ	0xFE7
 25985                           postinc1	equ	0xFE6
 25986                           postdec1	equ	0xFE5
 25987                           plusw1	equ	0xFE3
 25988                           fsr1h	equ	0xFE2
 25989                           fsr1l	equ	0xFE1
 25990                           indf2	equ	0xFDF
 25991                           postinc2	equ	0xFDE
 25992                           postdec2	equ	0xFDD
 25993                           plusw2	equ	0xFDB
 25994                           fsr2h	equ	0xFDA
 25995                           fsr2l	equ	0xFD9
 25996                           status	equ	0xFD8
 25997                           
 25998 ;; *************** function _lcd_disp_dp_loc_0 *****************
 25999 ;; Defined at:
 26000 ;;		line 242 in file "src/driver/lcd.c"
 26001 ;; Parameters:    Size  Location     Type
 26002 ;;  dp              1    wreg     unsigned char 
 26003 ;; Auto vars:     Size  Location     Type
 26004 ;;  dp              1   31[COMRAM] unsigned char 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;                  1    wreg      void 
 26007 ;; Registers used:
 26008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26009 ;; Tracked objects:
 26010 ;;		On entry : 0/0
 26011 ;;		On exit  : 0/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;Total ram usage:        1 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:    6
 26021 ;; This function calls:
 26022 ;;		_lcd_set_com_seg
 26023 ;; This function is called by:
 26024 ;;		_lcd_show_dp
 26025 ;;		_lcd_clear_all_dp
 26026 ;; This function uses a non-reentrant model
 26027 ;;
 26028                           
 26029                           	psect	text147
 26030  0096C0                     __ptext147:
 26031                           	opt stack 0
 26032  0096C0                     _lcd_disp_dp_loc_0:
 26033                           	opt stack 19
 26034                           
 26035                           ;incstack = 0
 26036                           ;lcd_disp_dp_loc_0@dp stored from wreg
 26037  0096C0  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
 26038                           
 26039                           ;lcd.c: 244: if(dp)
 26040  0096C2  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
 26041  0096C4  B4D8               	btfsc	status,2,c
 26042  0096C6  D00A               	goto	l13278
 26043                           
 26044                           ;lcd.c: 245: lcd_set_com_seg(3,24,0x80);
 26045  0096C8  0E18               	movlw	24
 26046  0096CA  0100               	movlb	0	; () banked
 26047  0096CC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26048  0096CE  0E80               	movlw	128
 26049  0096D0  0100               	movlb	0	; () banked
 26050  0096D2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26051  0096D4  0E03               	movlw	3
 26052  0096D6  EC1C  F033         	call	_lcd_set_com_seg
 26053  0096DA  0012               	return	
 26054  0096DC                     l13278:
 26055                           
 26056                           ;lcd.c: 246: else
 26057                           ;lcd.c: 247: lcd_set_com_seg(3,24,0);
 26058  0096DC  0E18               	movlw	24
 26059  0096DE  0100               	movlb	0	; () banked
 26060  0096E0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26061  0096E2  0E00               	movlw	0
 26062  0096E4  0100               	movlb	0	; () banked
 26063  0096E6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26064  0096E8  0E03               	movlw	3
 26065  0096EA  EC1C  F033         	call	_lcd_set_com_seg
 26066  0096EE  0012               	return	
 26067  0096F0                     __end_of_lcd_disp_dp_loc_0:
 26068                           	opt stack 0
 26069                           tosu	equ	0xFFF
 26070                           tosh	equ	0xFFE
 26071                           tosl	equ	0xFFD
 26072                           pclath	equ	0xFFA
 26073                           tblptru	equ	0xFF8
 26074                           tblptrh	equ	0xFF7
 26075                           tblptrl	equ	0xFF6
 26076                           tablat	equ	0xFF5
 26077                           prodh	equ	0xFF4
 26078                           prodl	equ	0xFF3
 26079                           intcon	equ	0xFF2
 26080                           indf0	equ	0xFEF
 26081                           postinc0	equ	0xFEE
 26082                           fsr0h	equ	0xFEA
 26083                           fsr0l	equ	0xFE9
 26084                           wreg	equ	0xFE8
 26085                           indf1	equ	0xFE7
 26086                           postinc1	equ	0xFE6
 26087                           postdec1	equ	0xFE5
 26088                           plusw1	equ	0xFE3
 26089                           fsr1h	equ	0xFE2
 26090                           fsr1l	equ	0xFE1
 26091                           indf2	equ	0xFDF
 26092                           postinc2	equ	0xFDE
 26093                           postdec2	equ	0xFDD
 26094                           plusw2	equ	0xFDB
 26095                           fsr2h	equ	0xFDA
 26096                           fsr2l	equ	0xFD9
 26097                           status	equ	0xFD8
 26098                           
 26099 ;; *************** function _m_mem_cpy *****************
 26100 ;; Defined at:
 26101 ;;		line 51 in file "src/depend/m_string.c"
 26102 ;; Parameters:    Size  Location     Type
 26103 ;;  d               2    0[BANK0 ] PTR unsigned char 
 26104 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui
      +_disp_menu_warn_v_adj@buf(6), 
 26105 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_poly_c_adj@buf(6), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_
      +calib_diff_adj@buf(10), 
 26106 ;;		 -> ui_disp_menu_pos_adj@buf(6), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat
      +_pt@buf(10), 
 26107 ;;  s               2    2[BANK0 ] PTR unsigned char 
 26108 ;;		 -> STR_33(9), STR_32(9), STR_31(5), STR_30(5), 
 26109 ;;		 -> STR_29(5), STR_28(5), STR_27(5), ui_disp_menu_epr_ilp_scale_adj@buf(6), 
 26110 ;;		 -> STR_26(5), STR_25(5), STR_24(5), STR_23(5), 
 26111 ;;		 -> ui_disp_menu_epr_calib_adj@buf(6), STR_22(5), ui_disp_menu_warn_v_adj@buf(6), STR_21(5), 
 26112 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
 26113 ;;		 -> STR_16(5), STR_15(5), ui_disp_menu_poly_c_adj@buf(6), STR_14(5), 
 26114 ;;		 -> ui_disp_menu_calib_pr_adj@buf(10), STR_13(5), ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), 
 26115 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
 26116 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
 26117 ;;		 -> STR_3(5), 
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;		None
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  1    wreg      void 
 26122 ;; Registers used:
 26123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26132 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26133 ;;Total ram usage:        4 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:    4
 26136 ;; This function calls:
 26137 ;;		Nothing
 26138 ;; This function is called by:
 26139 ;;		_ui_disp_adj_xfloat_pt
 26140 ;;		_ui_disp_adj_xfixed_pt
 26141 ;;		_ui_disp_adj_xfixed_pt_dp
 26142 ;;		_ui_disp_menu_pos_adj
 26143 ;;		_ui_disp_menu_calib_diff_adj
 26144 ;;		_ui_disp_menu_calib_pr_adj
 26145 ;;		_ui_disp_menu_poly_c_adj
 26146 ;;		_ui_disp_menu_warn_t_adj
 26147 ;;		_ui_disp_menu_warn_v_adj
 26148 ;;		_ui_disp_menu_epr_calib_adj
 26149 ;;		_ui_disp_menu_epr_ilp_scale_adj
 26150 ;;		_ui_disp_menu_work_mode_adj
 26151 ;; This function uses a non-reentrant model
 26152 ;;
 26153                           
 26154                           	psect	text148
 26155  008552                     __ptext148:
 26156                           	opt stack 0
 26157  008552                     _m_mem_cpy:
 26158                           	opt stack 23
 26159                           
 26160                           ;m_string.c: 53: while(*s!='\0')
 26161                           
 26162                           ;incstack = 0
 26163  008552  D01B               	goto	l14046
 26164  008554                     l14040:
 26165                           
 26166                           ;m_string.c: 54: {
 26167                           ;m_string.c: 55: *d++=*s++;
 26168  008554  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 26169  008558  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 26170  00855C  6AF8               	clrf	tblptru,c
 26171  00855E  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 26172  008562  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 26173  008566  0E0F               	movlw	(high __ramtop+-1)
 26174  008568  64F7               	cpfsgt	tblptrh,c
 26175  00856A  D003               	bra	u12937
 26176  00856C  0008               	tblrd		*
 26177  00856E  50F5               	movf	tablat,w,c
 26178  008570  D005               	bra	u12930
 26179  008572                     u12937:
 26180  008572  CFF6 FFE9          	movff	tblptrl,fsr0l
 26181  008576  CFF7 FFEA          	movff	tblptrh,fsr0h
 26182  00857A  50EF               	movf	indf0,w,c
 26183  00857C                     u12930:
 26184  00857C  6EDF               	movwf	indf2,c
 26185  00857E  0100               	movlb	0	; () banked
 26186  008580  4B62               	infsnz	m_mem_cpy@s& (0+255),f,b
 26187  008582  2B63               	incf	(m_mem_cpy@s+1)& (0+255),f,b
 26188                           
 26189                           ; BSR set to: 0
 26190  008584  0100               	movlb	0	; () banked
 26191  008586  4B60               	infsnz	m_mem_cpy@d& (0+255),f,b
 26192  008588  2B61               	incf	(m_mem_cpy@d+1)& (0+255),f,b
 26193  00858A                     l14046:
 26194  00858A  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 26195  00858E  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 26196  008592  6AF8               	clrf	tblptru,c
 26197  008594  0E0F               	movlw	(high __ramtop+-1)
 26198  008596  64F7               	cpfsgt	tblptrh,c
 26199  008598  D003               	bra	u12947
 26200  00859A  0008               	tblrd		*
 26201  00859C  50F5               	movf	tablat,w,c
 26202  00859E  D005               	bra	u12940
 26203  0085A0                     u12947:
 26204  0085A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 26205  0085A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 26206  0085A8  50EF               	movf	indf0,w,c
 26207  0085AA                     u12940:
 26208  0085AA  0900               	iorlw	0
 26209  0085AC  A4D8               	btfss	status,2,c
 26210  0085AE  D7D2               	goto	l14040
 26211                           
 26212                           ;m_string.c: 56: }
 26213                           ;m_string.c: 57: *d='\0';
 26214  0085B0  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 26215  0085B4  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 26216  0085B8  0E00               	movlw	0
 26217  0085BA  6EDF               	movwf	indf2,c
 26218  0085BC  0012               	return		;funcret
 26219  0085BE                     __end_of_m_mem_cpy:
 26220                           	opt stack 0
 26221                           tosu	equ	0xFFF
 26222                           tosh	equ	0xFFE
 26223                           tosl	equ	0xFFD
 26224                           pclath	equ	0xFFA
 26225                           tblptru	equ	0xFF8
 26226                           tblptrh	equ	0xFF7
 26227                           tblptrl	equ	0xFF6
 26228                           tablat	equ	0xFF5
 26229                           prodh	equ	0xFF4
 26230                           prodl	equ	0xFF3
 26231                           intcon	equ	0xFF2
 26232                           indf0	equ	0xFEF
 26233                           postinc0	equ	0xFEE
 26234                           fsr0h	equ	0xFEA
 26235                           fsr0l	equ	0xFE9
 26236                           wreg	equ	0xFE8
 26237                           indf1	equ	0xFE7
 26238                           postinc1	equ	0xFE6
 26239                           postdec1	equ	0xFE5
 26240                           plusw1	equ	0xFE3
 26241                           fsr1h	equ	0xFE2
 26242                           fsr1l	equ	0xFE1
 26243                           indf2	equ	0xFDF
 26244                           postinc2	equ	0xFDE
 26245                           postdec2	equ	0xFDD
 26246                           plusw2	equ	0xFDB
 26247                           fsr2h	equ	0xFDA
 26248                           fsr2l	equ	0xFD9
 26249                           status	equ	0xFD8
 26250                           
 26251 ;; *************** function _m_int16_2_str_4 *****************
 26252 ;; Defined at:
 26253 ;;		line 260 in file "src/depend/m_string.c"
 26254 ;; Parameters:    Size  Location     Type
 26255 ;;  buf             2    8[BANK0 ] PTR unsigned char 
 26256 ;;		 -> ui_disp_xfloat_pt@buf(10), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_p
      +t@buf(10), 
 26257 ;;  x               2   10[BANK0 ] int 
 26258 ;; Auto vars:     Size  Location     Type
 26259 ;;		None
 26260 ;; Return value:  Size  Location     Type
 26261 ;;                  1    wreg      void 
 26262 ;; Registers used:
 26263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26264 ;; Tracked objects:
 26265 ;;		On entry : 0/0
 26266 ;;		On exit  : 0/0
 26267 ;;		Unchanged: 0/0
 26268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26273 ;;Total ram usage:        4 bytes
 26274 ;; Hardware stack levels used:    1
 26275 ;; Hardware stack levels required when called:    5
 26276 ;; This function calls:
 26277 ;;		___awdiv
 26278 ;;		___awmod
 26279 ;; This function is called by:
 26280 ;;		_ui_disp_adj_xfloat_pt
 26281 ;;		_ui_disp_adj_xfixed_pt
 26282 ;;		_ui_disp_adj_xfixed_pt_dp
 26283 ;;		_ui_disp_xfloat_pt
 26284 ;; This function uses a non-reentrant model
 26285 ;;
 26286                           
 26287                           	psect	text149
 26288  0048B2                     __ptext149:
 26289                           	opt stack 0
 26290  0048B2                     _m_int16_2_str_4:
 26291                           	opt stack 21
 26292                           
 26293                           ;m_string.c: 262: if(x>9999)x=9999;
 26294                           
 26295                           ;incstack = 0
 26296  0048B2  0100               	movlb	0	; () banked
 26297  0048B4  BF6B               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
 26298  0048B6  D00D               	goto	l14054
 26299  0048B8  0E10               	movlw	16
 26300  0048BA  0100               	movlb	0	; () banked
 26301  0048BC  5D6A               	subwf	m_int16_2_str_4@x& (0+255),w,b
 26302  0048BE  0E27               	movlw	39
 26303  0048C0  0100               	movlb	0	; () banked
 26304  0048C2  596B               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
 26305  0048C4  A0D8               	btfss	status,0,c
 26306  0048C6  D005               	goto	l14054
 26307                           
 26308                           ; BSR set to: 0
 26309  0048C8  0E27               	movlw	39
 26310  0048CA  0100               	movlb	0	; () banked
 26311  0048CC  6F6B               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
 26312  0048CE  0E0F               	movlw	15
 26313  0048D0  6F6A               	movwf	m_int16_2_str_4@x& (0+255),b
 26314  0048D2                     l14054:
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;m_string.c: 263: buf[3]=HexTable[x%10];
 26318  0048D2  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 26319  0048D6  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 26320  0048DA  0E00               	movlw	0
 26321  0048DC  0100               	movlb	0	; () banked
 26322  0048DE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 26323  0048E0  0E0A               	movlw	10
 26324  0048E2  6F62               	movwf	___awmod@divisor& (0+255),b
 26325  0048E4  EC82  F039         	call	___awmod	;wreg free
 26326  0048E8  0E06               	movlw	low _HexTable
 26327  0048EA  0100               	movlb	0	; () banked
 26328  0048EC  2560               	addwf	?___awmod& (0+255),w,b
 26329  0048EE  6EF6               	movwf	tblptrl,c
 26330  0048F0  0EEF               	movlw	high _HexTable
 26331  0048F2  0100               	movlb	0	; () banked
 26332  0048F4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 26333  0048F6  6EF7               	movwf	tblptrh,c
 26334  0048F8                     	if	0	;There are less than 3 active tblptr bytes
 26335  0048F8                     	endif
 26336  0048F8  0100               	movlb	0	; () banked
 26337  0048FA  EE20 F003          	lfsr	2,3
 26338  0048FE  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 26339  004900  26D9               	addwf	fsr2l,f,c
 26340  004902  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 26341  004904  22DA               	addwfc	fsr2h,f,c
 26342  004906  0008               	tblrd		*
 26343  004908  CFF5 FFDF          	movff	tablat,indf2
 26344                           
 26345                           ; BSR set to: 0
 26346                           ;m_string.c: 264: x/=10;
 26347  00490C  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 26348  004910  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 26349  004914  0E00               	movlw	0
 26350  004916  0100               	movlb	0	; () banked
 26351  004918  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 26352  00491A  0E0A               	movlw	10
 26353  00491C  6F62               	movwf	___awdiv@divisor& (0+255),b
 26354  00491E  EC06  F035         	call	___awdiv	;wreg free
 26355  004922  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 26356  004926  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 26357                           
 26358                           ;m_string.c: 265: buf[2]=HexTable[x%10];
 26359  00492A  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 26360  00492E  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 26361  004932  0E00               	movlw	0
 26362  004934  0100               	movlb	0	; () banked
 26363  004936  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 26364  004938  0E0A               	movlw	10
 26365  00493A  6F62               	movwf	___awmod@divisor& (0+255),b
 26366  00493C  EC82  F039         	call	___awmod	;wreg free
 26367  004940  0E06               	movlw	low _HexTable
 26368  004942  0100               	movlb	0	; () banked
 26369  004944  2560               	addwf	?___awmod& (0+255),w,b
 26370  004946  6EF6               	movwf	tblptrl,c
 26371  004948  0EEF               	movlw	high _HexTable
 26372  00494A  0100               	movlb	0	; () banked
 26373  00494C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 26374  00494E  6EF7               	movwf	tblptrh,c
 26375  004950                     	if	0	;There are less than 3 active tblptr bytes
 26376  004950                     	endif
 26377  004950  0100               	movlb	0	; () banked
 26378  004952  EE20 F002          	lfsr	2,2
 26379  004956  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 26380  004958  26D9               	addwf	fsr2l,f,c
 26381  00495A  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 26382  00495C  22DA               	addwfc	fsr2h,f,c
 26383  00495E  0008               	tblrd		*
 26384  004960  CFF5 FFDF          	movff	tablat,indf2
 26385                           
 26386                           ; BSR set to: 0
 26387                           ;m_string.c: 266: x/=10;
 26388  004964  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 26389  004968  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 26390  00496C  0E00               	movlw	0
 26391  00496E  0100               	movlb	0	; () banked
 26392  004970  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 26393  004972  0E0A               	movlw	10
 26394  004974  6F62               	movwf	___awdiv@divisor& (0+255),b
 26395  004976  EC06  F035         	call	___awdiv	;wreg free
 26396  00497A  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 26397  00497E  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 26398                           
 26399                           ;m_string.c: 267: buf[1]=HexTable[x%10];
 26400  004982  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 26401  004986  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 26402  00498A  0E00               	movlw	0
 26403  00498C  0100               	movlb	0	; () banked
 26404  00498E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 26405  004990  0E0A               	movlw	10
 26406  004992  6F62               	movwf	___awmod@divisor& (0+255),b
 26407  004994  EC82  F039         	call	___awmod	;wreg free
 26408  004998  0E06               	movlw	low _HexTable
 26409  00499A  0100               	movlb	0	; () banked
 26410  00499C  2560               	addwf	?___awmod& (0+255),w,b
 26411  00499E  6EF6               	movwf	tblptrl,c
 26412  0049A0  0EEF               	movlw	high _HexTable
 26413  0049A2  0100               	movlb	0	; () banked
 26414  0049A4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 26415  0049A6  6EF7               	movwf	tblptrh,c
 26416  0049A8                     	if	0	;There are less than 3 active tblptr bytes
 26417  0049A8                     	endif
 26418  0049A8  0100               	movlb	0	; () banked
 26419  0049AA  EE20 F001          	lfsr	2,1
 26420  0049AE  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 26421  0049B0  26D9               	addwf	fsr2l,f,c
 26422  0049B2  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 26423  0049B4  22DA               	addwfc	fsr2h,f,c
 26424  0049B6  0008               	tblrd		*
 26425  0049B8  CFF5 FFDF          	movff	tablat,indf2
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;m_string.c: 268: x/=10;
 26429  0049BC  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 26430  0049C0  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 26431  0049C4  0E00               	movlw	0
 26432  0049C6  0100               	movlb	0	; () banked
 26433  0049C8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 26434  0049CA  0E0A               	movlw	10
 26435  0049CC  6F62               	movwf	___awdiv@divisor& (0+255),b
 26436  0049CE  EC06  F035         	call	___awdiv	;wreg free
 26437  0049D2  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 26438  0049D6  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 26439                           
 26440                           ;m_string.c: 269: buf[0]=HexTable[x%10];
 26441  0049DA  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 26442  0049DE  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 26443  0049E2  0E00               	movlw	0
 26444  0049E4  0100               	movlb	0	; () banked
 26445  0049E6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 26446  0049E8  0E0A               	movlw	10
 26447  0049EA  6F62               	movwf	___awmod@divisor& (0+255),b
 26448  0049EC  EC82  F039         	call	___awmod	;wreg free
 26449  0049F0  0E06               	movlw	low _HexTable
 26450  0049F2  0100               	movlb	0	; () banked
 26451  0049F4  2560               	addwf	?___awmod& (0+255),w,b
 26452  0049F6  6EF6               	movwf	tblptrl,c
 26453  0049F8  0EEF               	movlw	high _HexTable
 26454  0049FA  0100               	movlb	0	; () banked
 26455  0049FC  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 26456  0049FE  6EF7               	movwf	tblptrh,c
 26457  004A00                     	if	0	;There are less than 3 active tblptr bytes
 26458  004A00                     	endif
 26459  004A00  C068  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
 26460  004A04  C069  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
 26461  004A08  0008               	tblrd		*
 26462  004A0A  CFF5 FFDF          	movff	tablat,indf2
 26463                           
 26464                           ; BSR set to: 0
 26465  004A0E  0012               	return		;funcret
 26466  004A10                     __end_of_m_int16_2_str_4:
 26467                           	opt stack 0
 26468                           tosu	equ	0xFFF
 26469                           tosh	equ	0xFFE
 26470                           tosl	equ	0xFFD
 26471                           pclath	equ	0xFFA
 26472                           tblptru	equ	0xFF8
 26473                           tblptrh	equ	0xFF7
 26474                           tblptrl	equ	0xFF6
 26475                           tablat	equ	0xFF5
 26476                           prodh	equ	0xFF4
 26477                           prodl	equ	0xFF3
 26478                           intcon	equ	0xFF2
 26479                           indf0	equ	0xFEF
 26480                           postinc0	equ	0xFEE
 26481                           fsr0h	equ	0xFEA
 26482                           fsr0l	equ	0xFE9
 26483                           wreg	equ	0xFE8
 26484                           indf1	equ	0xFE7
 26485                           postinc1	equ	0xFE6
 26486                           postdec1	equ	0xFE5
 26487                           plusw1	equ	0xFE3
 26488                           fsr1h	equ	0xFE2
 26489                           fsr1l	equ	0xFE1
 26490                           indf2	equ	0xFDF
 26491                           postinc2	equ	0xFDE
 26492                           postdec2	equ	0xFDD
 26493                           plusw2	equ	0xFDB
 26494                           fsr2h	equ	0xFDA
 26495                           fsr2l	equ	0xFD9
 26496                           status	equ	0xFD8
 26497                           
 26498 ;; *************** function ___awmod *****************
 26499 ;; Defined at:
 26500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 26501 ;; Parameters:    Size  Location     Type
 26502 ;;  dividend        2    0[BANK0 ] int 
 26503 ;;  divisor         2    2[BANK0 ] int 
 26504 ;; Auto vars:     Size  Location     Type
 26505 ;;  sign            1    5[BANK0 ] unsigned char 
 26506 ;;  counter         1    4[BANK0 ] unsigned char 
 26507 ;; Return value:  Size  Location     Type
 26508 ;;                  2    0[BANK0 ] int 
 26509 ;; Registers used:
 26510 ;;		wreg, status,2, status,0
 26511 ;; Tracked objects:
 26512 ;;		On entry : 0/0
 26513 ;;		On exit  : 0/0
 26514 ;;		Unchanged: 0/0
 26515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26520 ;;Total ram usage:        6 bytes
 26521 ;; Hardware stack levels used:    1
 26522 ;; Hardware stack levels required when called:    4
 26523 ;; This function calls:
 26524 ;;		Nothing
 26525 ;; This function is called by:
 26526 ;;		_ui_disp_menu_calib_diff_adj
 26527 ;;		_ui_disp_menu_calib_pr_adj
 26528 ;;		_m_int16_2_str_4
 26529 ;; This function uses a non-reentrant model
 26530 ;;
 26531                           
 26532                           	psect	text150
 26533  007304                     __ptext150:
 26534                           	opt stack 0
 26535  007304                     ___awmod:
 26536                           	opt stack 21
 26537                           
 26538                           ; BSR set to: 0
 26539                           ;incstack = 0
 26540  007304  0E00               	movlw	0
 26541  007306  0100               	movlb	0	; () banked
 26542  007308  6F65               	movwf	___awmod@sign& (0+255),b
 26543                           
 26544                           ; BSR set to: 0
 26545  00730A  0100               	movlb	0	; () banked
 26546  00730C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26547  00730E  D008               	goto	l13810
 26548                           
 26549                           ; BSR set to: 0
 26550  007310  0100               	movlb	0	; () banked
 26551  007312  6D60               	negf	___awmod@dividend& (0+255),b
 26552  007314  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 26553  007316  B0D8               	btfsc	status,0,c
 26554  007318  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 26555                           
 26556                           ; BSR set to: 0
 26557  00731A  0E01               	movlw	1
 26558  00731C  0100               	movlb	0	; () banked
 26559  00731E  6F65               	movwf	___awmod@sign& (0+255),b
 26560  007320                     l13810:
 26561                           
 26562                           ; BSR set to: 0
 26563  007320  0100               	movlb	0	; () banked
 26564  007322  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26565  007324  D005               	goto	l13814
 26566                           
 26567                           ; BSR set to: 0
 26568  007326  0100               	movlb	0	; () banked
 26569  007328  6D62               	negf	___awmod@divisor& (0+255),b
 26570  00732A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 26571  00732C  B0D8               	btfsc	status,0,c
 26572  00732E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 26573  007330                     l13814:
 26574                           
 26575                           ; BSR set to: 0
 26576  007330  0100               	movlb	0	; () banked
 26577  007332  5162               	movf	___awmod@divisor& (0+255),w,b
 26578  007334  0100               	movlb	0	; () banked
 26579  007336  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26580  007338  B4D8               	btfsc	status,2,c
 26581  00733A  D026               	goto	l13830
 26582                           
 26583                           ; BSR set to: 0
 26584  00733C  0E01               	movlw	1
 26585  00733E  0100               	movlb	0	; () banked
 26586  007340  6F64               	movwf	___awmod@counter& (0+255),b
 26587  007342  D006               	goto	l13820
 26588  007344                     l13818:
 26589                           
 26590                           ; BSR set to: 0
 26591  007344  0100               	movlb	0	; () banked
 26592  007346  90D8               	bcf	status,0,c
 26593  007348  3762               	rlcf	___awmod@divisor& (0+255),f,b
 26594  00734A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26595  00734C  0100               	movlb	0	; () banked
 26596  00734E  2B64               	incf	___awmod@counter& (0+255),f,b
 26597  007350                     l13820:
 26598                           
 26599                           ; BSR set to: 0
 26600  007350  0100               	movlb	0	; () banked
 26601  007352  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26602  007354  D7F7               	goto	l13818
 26603  007356                     l13822:
 26604                           
 26605                           ; BSR set to: 0
 26606  007356  0100               	movlb	0	; () banked
 26607  007358  5162               	movf	___awmod@divisor& (0+255),w,b
 26608  00735A  0100               	movlb	0	; () banked
 26609  00735C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 26610  00735E  0100               	movlb	0	; () banked
 26611  007360  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 26612  007362  0100               	movlb	0	; () banked
 26613  007364  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26614  007366  A0D8               	btfss	status,0,c
 26615  007368  D008               	goto	l13826
 26616                           
 26617                           ; BSR set to: 0
 26618  00736A  0100               	movlb	0	; () banked
 26619  00736C  5162               	movf	___awmod@divisor& (0+255),w,b
 26620  00736E  0100               	movlb	0	; () banked
 26621  007370  5F60               	subwf	___awmod@dividend& (0+255),f,b
 26622  007372  0100               	movlb	0	; () banked
 26623  007374  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 26624  007376  0100               	movlb	0	; () banked
 26625  007378  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26626  00737A                     l13826:
 26627                           
 26628                           ; BSR set to: 0
 26629  00737A  0100               	movlb	0	; () banked
 26630  00737C  90D8               	bcf	status,0,c
 26631  00737E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26632  007380  3362               	rrcf	___awmod@divisor& (0+255),f,b
 26633                           
 26634                           ; BSR set to: 0
 26635  007382  0100               	movlb	0	; () banked
 26636  007384  2F64               	decfsz	___awmod@counter& (0+255),f,b
 26637  007386  D7E7               	goto	l13822
 26638  007388                     l13830:
 26639                           
 26640                           ; BSR set to: 0
 26641  007388  0100               	movlb	0	; () banked
 26642  00738A  5165               	movf	___awmod@sign& (0+255),w,b
 26643  00738C  0100               	movlb	0	; () banked
 26644  00738E  B4D8               	btfsc	status,2,c
 26645  007390  D005               	goto	l13834
 26646                           
 26647                           ; BSR set to: 0
 26648  007392  0100               	movlb	0	; () banked
 26649  007394  6D60               	negf	___awmod@dividend& (0+255),b
 26650  007396  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 26651  007398  B0D8               	btfsc	status,0,c
 26652  00739A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 26653  00739C                     l13834:
 26654                           
 26655                           ; BSR set to: 0
 26656  00739C  C060  F060         	movff	___awmod@dividend,?___awmod
 26657  0073A0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 26658  0073A4  0012               	return	
 26659  0073A6                     __end_of___awmod:
 26660                           	opt stack 0
 26661                           tosu	equ	0xFFF
 26662                           tosh	equ	0xFFE
 26663                           tosl	equ	0xFFD
 26664                           pclath	equ	0xFFA
 26665                           tblptru	equ	0xFF8
 26666                           tblptrh	equ	0xFF7
 26667                           tblptrl	equ	0xFF6
 26668                           tablat	equ	0xFF5
 26669                           prodh	equ	0xFF4
 26670                           prodl	equ	0xFF3
 26671                           intcon	equ	0xFF2
 26672                           indf0	equ	0xFEF
 26673                           postinc0	equ	0xFEE
 26674                           fsr0h	equ	0xFEA
 26675                           fsr0l	equ	0xFE9
 26676                           wreg	equ	0xFE8
 26677                           indf1	equ	0xFE7
 26678                           postinc1	equ	0xFE6
 26679                           postdec1	equ	0xFE5
 26680                           plusw1	equ	0xFE3
 26681                           fsr1h	equ	0xFE2
 26682                           fsr1l	equ	0xFE1
 26683                           indf2	equ	0xFDF
 26684                           postinc2	equ	0xFDE
 26685                           postdec2	equ	0xFDD
 26686                           plusw2	equ	0xFDB
 26687                           fsr2h	equ	0xFDA
 26688                           fsr2l	equ	0xFD9
 26689                           status	equ	0xFD8
 26690                           
 26691 ;; *************** function _lcd_disp_refresh *****************
 26692 ;; Defined at:
 26693 ;;		line 575 in file "src/driver/lcd.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;		None
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;		None
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1    wreg      void 
 26700 ;; Registers used:
 26701 ;;		None
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26711 ;;Total ram usage:        0 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:    4
 26714 ;; This function calls:
 26715 ;;		Nothing
 26716 ;; This function is called by:
 26717 ;;		_ui_disp_start_cs600
 26718 ;;		_ui_disp_adj_xfloat_pt
 26719 ;;		_ui_disp_adj_xfixed_pt
 26720 ;;		_ui_disp_adj_xfixed_pt_dp
 26721 ;;		_ui_disp_menu_pos_adj
 26722 ;;		_ui_disp_menu_calib_diff_adj
 26723 ;;		_ui_disp_menu_calib_pr_adj
 26724 ;;		_ui_disp_menu_warn_t_adj
 26725 ;;		_ui_disp_menu_work_mode_adj
 26726 ;;		_ui_disp_all_on
 26727 ;;		_ui_disp_all_off
 26728 ;;		_ui_disp_rtc_mm_ss
 26729 ;;		_ui_disp_menu_home
 26730 ;; This function uses a non-reentrant model
 26731 ;;
 26732                           
 26733                           	psect	text151
 26734  008A16                     __ptext151:
 26735                           	opt stack 0
 26736  008A16                     _lcd_disp_refresh:
 26737                           	opt stack 25
 26738                           
 26739                           ;lcd.c: 578: LCDDATA0=pLCD[0];
 26740                           
 26741                           ; BSR set to: 0
 26742                           ;incstack = 0
 26743  008A16  C100  FFBB         	movff	_pLCD,4027	;volatile
 26744                           
 26745                           ;lcd.c: 579: LCDDATA1=pLCD[1];
 26746  008A1A  C101  FFBC         	movff	_pLCD+1,4028	;volatile
 26747                           
 26748                           ;lcd.c: 580: LCDDATA2=pLCD[2];
 26749  008A1E  C102  FFBD         	movff	_pLCD+2,4029	;volatile
 26750                           
 26751                           ;lcd.c: 581: LCDDATA3=pLCD[3];
 26752  008A22  C103  FFBE         	movff	_pLCD+3,4030	;volatile
 26753                           
 26754                           ;lcd.c: 582: LCDDATA4=pLCD[4];
 26755  008A26  C104  FFBF         	movff	_pLCD+4,4031	;volatile
 26756                           
 26757                           ;lcd.c: 583: LCDDATA5=pLCD[5];
 26758  008A2A  C105  FF6B         	movff	_pLCD+5,3947	;volatile
 26759                           
 26760                           ;lcd.c: 584: LCDDATA6=pLCD[6];
 26761  008A2E  C106  FF6C         	movff	_pLCD+6,3948	;volatile
 26762                           
 26763                           ;lcd.c: 585: LCDDATA7=pLCD[7];
 26764  008A32  C107  FF6D         	movff	_pLCD+7,3949	;volatile
 26765                           
 26766                           ;lcd.c: 586: LCDDATA8=pLCD[8];
 26767  008A36  C108  FF6E         	movff	_pLCD+8,3950	;volatile
 26768                           
 26769                           ;lcd.c: 587: LCDDATA9=pLCD[9];
 26770  008A3A  C109  FF6F         	movff	_pLCD+9,3951	;volatile
 26771                           
 26772                           ;lcd.c: 589: LCDDATA10=pLCD[10];
 26773  008A3E  C10A  FF70         	movff	_pLCD+10,3952	;volatile
 26774                           
 26775                           ;lcd.c: 590: LCDDATA11=pLCD[11];
 26776  008A42  C10B  FF71         	movff	_pLCD+11,3953	;volatile
 26777                           
 26778                           ;lcd.c: 591: LCDDATA12=pLCD[12];
 26779  008A46  C10C  FF72         	movff	_pLCD+12,3954	;volatile
 26780                           
 26781                           ;lcd.c: 592: LCDDATA13=pLCD[13];
 26782  008A4A  C10D  FF73         	movff	_pLCD+13,3955	;volatile
 26783                           
 26784                           ;lcd.c: 593: LCDDATA14=pLCD[14];
 26785  008A4E  C10E  FF74         	movff	_pLCD+14,3956	;volatile
 26786                           
 26787                           ;lcd.c: 594: LCDDATA15=pLCD[15];
 26788  008A52  C10F  FF75         	movff	_pLCD+15,3957	;volatile
 26789                           
 26790                           ;lcd.c: 595: LCDDATA16=pLCD[16];
 26791  008A56  C110  FF76         	movff	_pLCD+16,3958	;volatile
 26792                           
 26793                           ;lcd.c: 596: LCDDATA17=pLCD[17];
 26794  008A5A  C111  FF77         	movff	_pLCD+17,3959	;volatile
 26795                           
 26796                           ;lcd.c: 597: LCDDATA18=pLCD[18];
 26797  008A5E  C112  FF78         	movff	_pLCD+18,3960	;volatile
 26798                           
 26799                           ;lcd.c: 598: LCDDATA19=pLCD[19];
 26800  008A62  C113  FF79         	movff	_pLCD+19,3961	;volatile
 26801                           
 26802                           ;lcd.c: 600: LCDDATA20=pLCD[20];
 26803  008A66  C114  FF7A         	movff	_pLCD+20,3962	;volatile
 26804                           
 26805                           ;lcd.c: 601: LCDDATA21=pLCD[21];
 26806  008A6A  C115  FF7B         	movff	_pLCD+21,3963	;volatile
 26807                           
 26808                           ;lcd.c: 602: LCDDATA22=pLCD[22];
 26809  008A6E  C116  FF7C         	movff	_pLCD+22,3964	;volatile
 26810                           
 26811                           ;lcd.c: 603: LCDDATA23=pLCD[23];
 26812  008A72  C117  FF7D         	movff	_pLCD+23,3965	;volatile
 26813  008A76  0012               	return		;funcret
 26814  008A78                     __end_of_lcd_disp_refresh:
 26815                           	opt stack 0
 26816                           tosu	equ	0xFFF
 26817                           tosh	equ	0xFFE
 26818                           tosl	equ	0xFFD
 26819                           pclath	equ	0xFFA
 26820                           tblptru	equ	0xFF8
 26821                           tblptrh	equ	0xFF7
 26822                           tblptrl	equ	0xFF6
 26823                           tablat	equ	0xFF5
 26824                           prodh	equ	0xFF4
 26825                           prodl	equ	0xFF3
 26826                           intcon	equ	0xFF2
 26827                           indf0	equ	0xFEF
 26828                           postinc0	equ	0xFEE
 26829                           fsr0h	equ	0xFEA
 26830                           fsr0l	equ	0xFE9
 26831                           wreg	equ	0xFE8
 26832                           indf1	equ	0xFE7
 26833                           postinc1	equ	0xFE6
 26834                           postdec1	equ	0xFE5
 26835                           plusw1	equ	0xFE3
 26836                           fsr1h	equ	0xFE2
 26837                           fsr1l	equ	0xFE1
 26838                           indf2	equ	0xFDF
 26839                           postinc2	equ	0xFDE
 26840                           postdec2	equ	0xFDD
 26841                           plusw2	equ	0xFDB
 26842                           fsr2h	equ	0xFDA
 26843                           fsr2l	equ	0xFD9
 26844                           status	equ	0xFD8
 26845                           
 26846 ;; *************** function ___x_arrange_str *****************
 26847 ;; Defined at:
 26848 ;;		line 11 in file "src/api/ui.c"
 26849 ;; Parameters:    Size  Location     Type
 26850 ;;  str             2    0[BANK0 ] PTR unsigned char 
 26851 ;;		 -> ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 26852 ;;  len             1    2[BANK0 ] unsigned char 
 26853 ;; Auto vars:     Size  Location     Type
 26854 ;;  i               1   31[COMRAM] unsigned char 
 26855 ;; Return value:  Size  Location     Type
 26856 ;;                  1    wreg      void 
 26857 ;; Registers used:
 26858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26859 ;; Tracked objects:
 26860 ;;		On entry : 0/0
 26861 ;;		On exit  : 0/0
 26862 ;;		Unchanged: 0/0
 26863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26867 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26868 ;;Total ram usage:        4 bytes
 26869 ;; Hardware stack levels used:    1
 26870 ;; Hardware stack levels required when called:    4
 26871 ;; This function calls:
 26872 ;;		Nothing
 26873 ;; This function is called by:
 26874 ;;		_ui_disp_adj_xfloat_pt
 26875 ;;		_ui_disp_adj_xfixed_pt
 26876 ;;		_ui_disp_adj_xfixed_pt_dp
 26877 ;; This function uses a non-reentrant model
 26878 ;;
 26879                           
 26880                           	psect	text152
 26881  008B34                     __ptext152:
 26882                           	opt stack 0
 26883  008B34                     ___x_arrange_str:
 26884                           	opt stack 22
 26885                           
 26886                           ;ui.c: 13: uint8_t i;
 26887                           ;ui.c: 14: for(i=0;i<len;i++){
 26888                           
 26889                           ;incstack = 0
 26890  008B34  0E00               	movlw	0
 26891  008B36  6E20               	movwf	___x_arrange_str@i,c
 26892  008B38  D01A               	goto	l14002
 26893  008B3A                     l13996:
 26894                           
 26895                           ;ui.c: 15: if(str[i]=='\0')str[i]=' ';
 26896  008B3A  5020               	movf	___x_arrange_str@i,w,c
 26897  008B3C  0D01               	mullw	1
 26898  008B3E  50F3               	movf	prodl,w,c
 26899  008B40  0100               	movlb	0	; () banked
 26900  008B42  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 26901  008B44  6ED9               	movwf	fsr2l,c
 26902  008B46  50F4               	movf	prodh,w,c
 26903  008B48  0100               	movlb	0	; () banked
 26904  008B4A  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 26905  008B4C  6EDA               	movwf	fsr2h,c
 26906  008B4E  50DF               	movf	indf2,w,c
 26907  008B50  A4D8               	btfss	status,2,c
 26908  008B52  D00C               	goto	l14000
 26909                           
 26910                           ; BSR set to: 0
 26911  008B54  5020               	movf	___x_arrange_str@i,w,c
 26912  008B56  0D01               	mullw	1
 26913  008B58  50F3               	movf	prodl,w,c
 26914  008B5A  0100               	movlb	0	; () banked
 26915  008B5C  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 26916  008B5E  6ED9               	movwf	fsr2l,c
 26917  008B60  50F4               	movf	prodh,w,c
 26918  008B62  0100               	movlb	0	; () banked
 26919  008B64  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 26920  008B66  6EDA               	movwf	fsr2h,c
 26921  008B68  0E20               	movlw	32
 26922  008B6A  6EDF               	movwf	indf2,c
 26923  008B6C                     l14000:
 26924                           
 26925                           ; BSR set to: 0
 26926  008B6C  2A20               	incf	___x_arrange_str@i,f,c
 26927  008B6E                     l14002:
 26928  008B6E  0100               	movlb	0	; () banked
 26929  008B70  5162               	movf	___x_arrange_str@len& (0+255),w,b
 26930  008B72  5C20               	subwf	___x_arrange_str@i,w,c
 26931  008B74  A0D8               	btfss	status,0,c
 26932  008B76  D7E1               	goto	l13996
 26933                           
 26934                           ; BSR set to: 0
 26935                           ;ui.c: 16: }
 26936                           ;ui.c: 17: str[i]='\0';
 26937                           
 26938                           ; BSR set to: 0
 26939  008B78  5020               	movf	___x_arrange_str@i,w,c
 26940  008B7A  0D01               	mullw	1
 26941  008B7C  50F3               	movf	prodl,w,c
 26942  008B7E  0100               	movlb	0	; () banked
 26943  008B80  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 26944  008B82  6ED9               	movwf	fsr2l,c
 26945  008B84  50F4               	movf	prodh,w,c
 26946  008B86  0100               	movlb	0	; () banked
 26947  008B88  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 26948  008B8A  6EDA               	movwf	fsr2h,c
 26949  008B8C  0E00               	movlw	0
 26950  008B8E  6EDF               	movwf	indf2,c
 26951                           
 26952                           ; BSR set to: 0
 26953  008B90  0012               	return		;funcret
 26954  008B92                     __end_of___x_arrange_str:
 26955                           	opt stack 0
 26956                           tosu	equ	0xFFF
 26957                           tosh	equ	0xFFE
 26958                           tosl	equ	0xFFD
 26959                           pclath	equ	0xFFA
 26960                           tblptru	equ	0xFF8
 26961                           tblptrh	equ	0xFF7
 26962                           tblptrl	equ	0xFF6
 26963                           tablat	equ	0xFF5
 26964                           prodh	equ	0xFF4
 26965                           prodl	equ	0xFF3
 26966                           intcon	equ	0xFF2
 26967                           indf0	equ	0xFEF
 26968                           postinc0	equ	0xFEE
 26969                           fsr0h	equ	0xFEA
 26970                           fsr0l	equ	0xFE9
 26971                           wreg	equ	0xFE8
 26972                           indf1	equ	0xFE7
 26973                           postinc1	equ	0xFE6
 26974                           postdec1	equ	0xFE5
 26975                           plusw1	equ	0xFE3
 26976                           fsr1h	equ	0xFE2
 26977                           fsr1l	equ	0xFE1
 26978                           indf2	equ	0xFDF
 26979                           postinc2	equ	0xFDE
 26980                           postdec2	equ	0xFDD
 26981                           plusw2	equ	0xFDB
 26982                           fsr2h	equ	0xFDA
 26983                           fsr2l	equ	0xFD9
 26984                           status	equ	0xFD8
 26985                           
 26986 ;; *************** function _lcd_disp_logo *****************
 26987 ;; Defined at:
 26988 ;;		line 382 in file "src/driver/lcd.c"
 26989 ;; Parameters:    Size  Location     Type
 26990 ;;  show            1    wreg     unsigned char 
 26991 ;; Auto vars:     Size  Location     Type
 26992 ;;  show            1   31[COMRAM] unsigned char 
 26993 ;; Return value:  Size  Location     Type
 26994 ;;                  1    wreg      void 
 26995 ;; Registers used:
 26996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26997 ;; Tracked objects:
 26998 ;;		On entry : 0/0
 26999 ;;		On exit  : 0/0
 27000 ;;		Unchanged: 0/0
 27001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27006 ;;Total ram usage:        1 bytes
 27007 ;; Hardware stack levels used:    1
 27008 ;; Hardware stack levels required when called:    6
 27009 ;; This function calls:
 27010 ;;		_lcd_set_com_seg
 27011 ;; This function is called by:
 27012 ;;		_ui_disp_start_cs600
 27013 ;;		_ui_disp_menu_psw_adj
 27014 ;;		_ui_disp_menu_density_adj
 27015 ;;		_ui_disp_menu_pos_adj
 27016 ;;		_ui_disp_menu_h_adj
 27017 ;;		_ui_disp_menu_d_adj
 27018 ;;		_ui_disp_menu_bzero_adj
 27019 ;;		_ui_disp_menu_calib_diff_adj
 27020 ;;		_ui_disp_menu_calib_pr_adj
 27021 ;;		_ui_disp_menu_poly_c_adj
 27022 ;;		_ui_disp_menu_warn_t_adj
 27023 ;;		_ui_disp_menu_warn_v_adj
 27024 ;;		_ui_disp_menu_epr_calib_adj
 27025 ;;		_ui_disp_menu_epr_ilp_scale_adj
 27026 ;;		_ui_disp_menu_bar_full_adj
 27027 ;;		_ui_disp_menu_work_mode_adj
 27028 ;;		_ui_disp_menu_home
 27029 ;; This function uses a non-reentrant model
 27030 ;;
 27031                           
 27032                           	psect	text153
 27033  0096F0                     __ptext153:
 27034                           	opt stack 0
 27035  0096F0                     _lcd_disp_logo:
 27036                           	opt stack 23
 27037                           
 27038                           ; BSR set to: 0
 27039                           ;incstack = 0
 27040                           ;lcd_disp_logo@show stored from wreg
 27041  0096F0  6E20               	movwf	lcd_disp_logo@show,c
 27042                           
 27043                           ;lcd.c: 384: if(show)
 27044  0096F2  5020               	movf	lcd_disp_logo@show,w,c
 27045  0096F4  B4D8               	btfsc	status,2,c
 27046  0096F6  D00A               	goto	l14696
 27047                           
 27048                           ;lcd.c: 385: lcd_set_com_seg(2,13,1);
 27049  0096F8  0E0D               	movlw	13
 27050  0096FA  0100               	movlb	0	; () banked
 27051  0096FC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27052  0096FE  0E01               	movlw	1
 27053  009700  0100               	movlb	0	; () banked
 27054  009702  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27055  009704  0E02               	movlw	2
 27056  009706  EC1C  F033         	call	_lcd_set_com_seg
 27057  00970A  0012               	return	
 27058  00970C                     l14696:
 27059                           
 27060                           ;lcd.c: 386: else
 27061                           ;lcd.c: 387: lcd_set_com_seg(2,13,0);
 27062  00970C  0E0D               	movlw	13
 27063  00970E  0100               	movlb	0	; () banked
 27064  009710  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27065  009712  0E00               	movlw	0
 27066  009714  0100               	movlb	0	; () banked
 27067  009716  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27068  009718  0E02               	movlw	2
 27069  00971A  EC1C  F033         	call	_lcd_set_com_seg
 27070  00971E  0012               	return	
 27071  009720                     __end_of_lcd_disp_logo:
 27072                           	opt stack 0
 27073                           tosu	equ	0xFFF
 27074                           tosh	equ	0xFFE
 27075                           tosl	equ	0xFFD
 27076                           pclath	equ	0xFFA
 27077                           tblptru	equ	0xFF8
 27078                           tblptrh	equ	0xFF7
 27079                           tblptrl	equ	0xFF6
 27080                           tablat	equ	0xFF5
 27081                           prodh	equ	0xFF4
 27082                           prodl	equ	0xFF3
 27083                           intcon	equ	0xFF2
 27084                           indf0	equ	0xFEF
 27085                           postinc0	equ	0xFEE
 27086                           fsr0h	equ	0xFEA
 27087                           fsr0l	equ	0xFE9
 27088                           wreg	equ	0xFE8
 27089                           indf1	equ	0xFE7
 27090                           postinc1	equ	0xFE6
 27091                           postdec1	equ	0xFE5
 27092                           plusw1	equ	0xFE3
 27093                           fsr1h	equ	0xFE2
 27094                           fsr1l	equ	0xFE1
 27095                           indf2	equ	0xFDF
 27096                           postinc2	equ	0xFDE
 27097                           postdec2	equ	0xFDD
 27098                           plusw2	equ	0xFDB
 27099                           fsr2h	equ	0xFDA
 27100                           fsr2l	equ	0xFD9
 27101                           status	equ	0xFD8
 27102                           
 27103 ;; *************** function _lcd_set_com_seg *****************
 27104 ;; Defined at:
 27105 ;;		line 33 in file "src/driver/lcd.c"
 27106 ;; Parameters:    Size  Location     Type
 27107 ;;  com             1    wreg     unsigned char 
 27108 ;;  seg             1    8[BANK0 ] unsigned char 
 27109 ;;  show            1    9[BANK0 ] unsigned char 
 27110 ;; Auto vars:     Size  Location     Type
 27111 ;;  com             1   13[BANK0 ] unsigned char 
 27112 ;;  bits            1   15[BANK0 ] unsigned char 
 27113 ;;  offset          1   14[BANK0 ] unsigned char 
 27114 ;; Return value:  Size  Location     Type
 27115 ;;                  1    wreg      void 
 27116 ;; Registers used:
 27117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27118 ;; Tracked objects:
 27119 ;;		On entry : 0/0
 27120 ;;		On exit  : 0/0
 27121 ;;		Unchanged: 0/0
 27122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27124 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27125 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27126 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27127 ;;Total ram usage:        8 bytes
 27128 ;; Hardware stack levels used:    1
 27129 ;; Hardware stack levels required when called:    5
 27130 ;; This function calls:
 27131 ;;		___awdiv
 27132 ;; This function is called by:
 27133 ;;		_lcd_disp_battary_bar
 27134 ;;		_lcd_disp_rf_bar
 27135 ;;		_lcd_disp_light_bar
 27136 ;;		_lcd_disp_chr_loc_0
 27137 ;;		_lcd_disp_dp_loc_0
 27138 ;;		_lcd_disp_chr_loc_1
 27139 ;;		_lcd_disp_dp_loc_1
 27140 ;;		_lcd_disp_chr_loc_2
 27141 ;;		_lcd_disp_dp_loc_2
 27142 ;;		_lcd_disp_chr_loc_3
 27143 ;;		_lcd_disp_chr_loc_4
 27144 ;;		_lcd_disp_dp_loc_4
 27145 ;;		_lcd_disp_chr_loc_5
 27146 ;;		_lcd_disp_dp_loc_5
 27147 ;;		_lcd_disp_chr_loc_6
 27148 ;;		_lcd_disp_dp_loc_6
 27149 ;;		_lcd_disp_chr_loc_7
 27150 ;;		_lcd_disp_logo
 27151 ;;		_lcd_disp_unit_2nd_m
 27152 ;;		_lcd_disp_unit_mpa
 27153 ;;		_lcd_disp_level_bar
 27154 ;;		_lcd_disp_unit_t
 27155 ;;		_lcd_disp_unit_1st_m
 27156 ;;		_lcd_disp_unit_1st_m3
 27157 ;;		_lcd_disp_unit_temperature
 27158 ;;		_lcd_disp_unit_2nd_m3
 27159 ;; This function uses a non-reentrant model
 27160 ;;
 27161                           
 27162                           	psect	text154
 27163  006638                     __ptext154:
 27164                           	opt stack 0
 27165  006638                     _lcd_set_com_seg:
 27166                           	opt stack 21
 27167                           
 27168                           ;incstack = 0
 27169                           ;lcd_set_com_seg@com stored from wreg
 27170  006638  0100               	movlb	0	; () banked
 27171  00663A  6F6D               	movwf	lcd_set_com_seg@com& (0+255),b
 27172                           
 27173                           ;lcd.c: 35: uint8_t offset;
 27174                           ;lcd.c: 36: uint8_t bits;
 27175                           ;lcd.c: 37: if(com>3)return;
 27176  00663C  0E03               	movlw	3
 27177  00663E  0100               	movlb	0	; () banked
 27178  006640  656D               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 27179  006642  D001               	goto	l13126
 27180  006644  0012               	return	
 27181  006646                     l13126:
 27182                           
 27183                           ; BSR set to: 0
 27184                           ;lcd.c: 38: if(seg>47)return;
 27185  006646  0E2F               	movlw	47
 27186  006648  0100               	movlb	0	; () banked
 27187  00664A  6568               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 27188  00664C  D001               	goto	l13130
 27189  00664E  0012               	return	
 27190  006650                     l13130:
 27191                           
 27192                           ; BSR set to: 0
 27193                           ;lcd.c: 39: offset=com*6 + seg/8;
 27194  006650  C068  F060         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 27195  006654  0100               	movlb	0	; () banked
 27196  006656  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 27197  006658  0E00               	movlw	0
 27198  00665A  0100               	movlb	0	; () banked
 27199  00665C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27200  00665E  0E08               	movlw	8
 27201  006660  6F62               	movwf	___awdiv@divisor& (0+255),b
 27202  006662  EC06  F035         	call	___awdiv	;wreg free
 27203  006666  0100               	movlb	0	; () banked
 27204  006668  516D               	movf	lcd_set_com_seg@com& (0+255),w,b
 27205  00666A  0D06               	mullw	6
 27206  00666C  50F3               	movf	prodl,w,c
 27207  00666E  0100               	movlb	0	; () banked
 27208  006670  2560               	addwf	?___awdiv& (0+255),w,b
 27209  006672  0100               	movlb	0	; () banked
 27210  006674  6F6E               	movwf	lcd_set_com_seg@offset& (0+255),b
 27211                           
 27212                           ; BSR set to: 0
 27213                           ;lcd.c: 40: bits=seg%8;
 27214  006676  0100               	movlb	0	; () banked
 27215  006678  5168               	movf	lcd_set_com_seg@seg& (0+255),w,b
 27216  00667A  0B07               	andlw	7
 27217  00667C  0100               	movlb	0	; () banked
 27218  00667E  6F6F               	movwf	lcd_set_com_seg@bits& (0+255),b
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;lcd.c: 41: if(show){
 27222  006680  0100               	movlb	0	; () banked
 27223  006682  5169               	movf	lcd_set_com_seg@show& (0+255),w,b
 27224  006684  0100               	movlb	0	; () banked
 27225  006686  B4D8               	btfsc	status,2,c
 27226  006688  D01B               	goto	l13138
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;lcd.c: 42: pLCD[offset] |= (1<<bits);
 27230  00668A  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 27231  00668E  0E01               	movlw	1
 27232  006690  0100               	movlb	0	; () banked
 27233  006692  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 27234  006694  0100               	movlb	0	; () banked
 27235  006696  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 27236  006698  D003               	goto	u11584
 27237  00669A                     u11585:
 27238  00669A  0100               	movlb	0	; () banked
 27239  00669C  90D8               	bcf	status,0,c
 27240  00669E  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 27241  0066A0                     u11584:
 27242  0066A0  0100               	movlb	0	; () banked
 27243  0066A2  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 27244  0066A4  D7FA               	goto	u11585
 27245  0066A6  0100               	movlb	0	; () banked
 27246  0066A8  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 27247  0066AA  0D01               	mullw	1
 27248  0066AC  0E00               	movlw	low _pLCD
 27249  0066AE  24F3               	addwf	prodl,w,c
 27250  0066B0  6ED9               	movwf	fsr2l,c
 27251  0066B2  0E01               	movlw	high _pLCD
 27252  0066B4  20F4               	addwfc	prodh,w,c
 27253  0066B6  6EDA               	movwf	fsr2h,c
 27254  0066B8  0100               	movlb	0	; () banked
 27255  0066BA  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 27256  0066BC  12DF               	iorwf	indf2,f,c
 27257                           
 27258                           ;lcd.c: 43: }else{
 27259  0066BE  0012               	return	
 27260  0066C0                     l13138:
 27261                           
 27262                           ; BSR set to: 0
 27263                           ;lcd.c: 44: pLCD[offset] &= ~(1<<bits);
 27264  0066C0  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 27265  0066C4  0E01               	movlw	1
 27266  0066C6  0100               	movlb	0	; () banked
 27267  0066C8  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 27268  0066CA  0100               	movlb	0	; () banked
 27269  0066CC  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 27270  0066CE  D003               	goto	u11594
 27271  0066D0                     u11595:
 27272  0066D0  0100               	movlb	0	; () banked
 27273  0066D2  90D8               	bcf	status,0,c
 27274  0066D4  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 27275  0066D6                     u11594:
 27276  0066D6  0100               	movlb	0	; () banked
 27277  0066D8  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 27278  0066DA  D7FA               	goto	u11595
 27279  0066DC  0100               	movlb	0	; () banked
 27280  0066DE  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 27281  0066E0  0AFF               	xorlw	255
 27282  0066E2  0100               	movlb	0	; () banked
 27283  0066E4  6F6C               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 27284  0066E6  0100               	movlb	0	; () banked
 27285  0066E8  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 27286  0066EA  0D01               	mullw	1
 27287  0066EC  0E00               	movlw	low _pLCD
 27288  0066EE  24F3               	addwf	prodl,w,c
 27289  0066F0  6ED9               	movwf	fsr2l,c
 27290  0066F2  0E01               	movlw	high _pLCD
 27291  0066F4  20F4               	addwfc	prodh,w,c
 27292  0066F6  6EDA               	movwf	fsr2h,c
 27293  0066F8  0100               	movlb	0	; () banked
 27294  0066FA  516C               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 27295  0066FC  16DF               	andwf	indf2,f,c
 27296  0066FE  0012               	return	
 27297  006700                     __end_of_lcd_set_com_seg:
 27298                           	opt stack 0
 27299                           tosu	equ	0xFFF
 27300                           tosh	equ	0xFFE
 27301                           tosl	equ	0xFFD
 27302                           pclath	equ	0xFFA
 27303                           tblptru	equ	0xFF8
 27304                           tblptrh	equ	0xFF7
 27305                           tblptrl	equ	0xFF6
 27306                           tablat	equ	0xFF5
 27307                           prodh	equ	0xFF4
 27308                           prodl	equ	0xFF3
 27309                           intcon	equ	0xFF2
 27310                           indf0	equ	0xFEF
 27311                           postinc0	equ	0xFEE
 27312                           fsr0h	equ	0xFEA
 27313                           fsr0l	equ	0xFE9
 27314                           wreg	equ	0xFE8
 27315                           indf1	equ	0xFE7
 27316                           postinc1	equ	0xFE6
 27317                           postdec1	equ	0xFE5
 27318                           plusw1	equ	0xFE3
 27319                           fsr1h	equ	0xFE2
 27320                           fsr1l	equ	0xFE1
 27321                           indf2	equ	0xFDF
 27322                           postinc2	equ	0xFDE
 27323                           postdec2	equ	0xFDD
 27324                           plusw2	equ	0xFDB
 27325                           fsr2h	equ	0xFDA
 27326                           fsr2l	equ	0xFD9
 27327                           status	equ	0xFD8
 27328                           
 27329 ;; *************** function ___awdiv *****************
 27330 ;; Defined at:
 27331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;  dividend        2    0[BANK0 ] int 
 27334 ;;  divisor         2    2[BANK0 ] int 
 27335 ;; Auto vars:     Size  Location     Type
 27336 ;;  quotient        2    6[BANK0 ] int 
 27337 ;;  sign            1    5[BANK0 ] unsigned char 
 27338 ;;  counter         1    4[BANK0 ] unsigned char 
 27339 ;; Return value:  Size  Location     Type
 27340 ;;                  2    0[BANK0 ] int 
 27341 ;; Registers used:
 27342 ;;		wreg, status,2, status,0
 27343 ;; Tracked objects:
 27344 ;;		On entry : 0/0
 27345 ;;		On exit  : 0/0
 27346 ;;		Unchanged: 0/0
 27347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27352 ;;Total ram usage:        8 bytes
 27353 ;; Hardware stack levels used:    1
 27354 ;; Hardware stack levels required when called:    4
 27355 ;; This function calls:
 27356 ;;		Nothing
 27357 ;; This function is called by:
 27358 ;;		_m_int16_2_str_4
 27359 ;;		_lcd_set_com_seg
 27360 ;; This function uses a non-reentrant model
 27361 ;;
 27362                           
 27363                           	psect	text155
 27364  006A0C                     __ptext155:
 27365                           	opt stack 0
 27366  006A0C                     ___awdiv:
 27367                           	opt stack 21
 27368                           
 27369                           ; BSR set to: 0
 27370                           ;incstack = 0
 27371  006A0C  0E00               	movlw	0
 27372  006A0E  0100               	movlb	0	; () banked
 27373  006A10  6F65               	movwf	___awdiv@sign& (0+255),b
 27374                           
 27375                           ; BSR set to: 0
 27376  006A12  0100               	movlb	0	; () banked
 27377  006A14  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27378  006A16  D008               	goto	l13080
 27379                           
 27380                           ; BSR set to: 0
 27381  006A18  0100               	movlb	0	; () banked
 27382  006A1A  6D62               	negf	___awdiv@divisor& (0+255),b
 27383  006A1C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 27384  006A1E  B0D8               	btfsc	status,0,c
 27385  006A20  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 27386                           
 27387                           ; BSR set to: 0
 27388  006A22  0E01               	movlw	1
 27389  006A24  0100               	movlb	0	; () banked
 27390  006A26  6F65               	movwf	___awdiv@sign& (0+255),b
 27391  006A28                     l13080:
 27392                           
 27393                           ; BSR set to: 0
 27394  006A28  0100               	movlb	0	; () banked
 27395  006A2A  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 27396  006A2C  D008               	goto	l13086
 27397                           
 27398                           ; BSR set to: 0
 27399  006A2E  0100               	movlb	0	; () banked
 27400  006A30  6D60               	negf	___awdiv@dividend& (0+255),b
 27401  006A32  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 27402  006A34  B0D8               	btfsc	status,0,c
 27403  006A36  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 27404                           
 27405                           ; BSR set to: 0
 27406  006A38  0E01               	movlw	1
 27407  006A3A  0100               	movlb	0	; () banked
 27408  006A3C  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 27409  006A3E                     l13086:
 27410                           
 27411                           ; BSR set to: 0
 27412  006A3E  0E00               	movlw	0
 27413  006A40  0100               	movlb	0	; () banked
 27414  006A42  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 27415  006A44  0E00               	movlw	0
 27416  006A46  6F66               	movwf	___awdiv@quotient& (0+255),b
 27417                           
 27418                           ; BSR set to: 0
 27419  006A48  0100               	movlb	0	; () banked
 27420  006A4A  5162               	movf	___awdiv@divisor& (0+255),w,b
 27421  006A4C  0100               	movlb	0	; () banked
 27422  006A4E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 27423  006A50  B4D8               	btfsc	status,2,c
 27424  006A52  D02C               	goto	l13108
 27425                           
 27426                           ; BSR set to: 0
 27427  006A54  0E01               	movlw	1
 27428  006A56  0100               	movlb	0	; () banked
 27429  006A58  6F64               	movwf	___awdiv@counter& (0+255),b
 27430  006A5A  D006               	goto	l13094
 27431  006A5C                     l13092:
 27432                           
 27433                           ; BSR set to: 0
 27434  006A5C  0100               	movlb	0	; () banked
 27435  006A5E  90D8               	bcf	status,0,c
 27436  006A60  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 27437  006A62  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 27438  006A64  0100               	movlb	0	; () banked
 27439  006A66  2B64               	incf	___awdiv@counter& (0+255),f,b
 27440  006A68                     l13094:
 27441                           
 27442                           ; BSR set to: 0
 27443  006A68  0100               	movlb	0	; () banked
 27444  006A6A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27445  006A6C  D7F7               	goto	l13092
 27446  006A6E                     l13096:
 27447                           
 27448                           ; BSR set to: 0
 27449  006A6E  0100               	movlb	0	; () banked
 27450  006A70  90D8               	bcf	status,0,c
 27451  006A72  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 27452  006A74  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 27453                           
 27454                           ; BSR set to: 0
 27455  006A76  0100               	movlb	0	; () banked
 27456  006A78  5162               	movf	___awdiv@divisor& (0+255),w,b
 27457  006A7A  0100               	movlb	0	; () banked
 27458  006A7C  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 27459  006A7E  0100               	movlb	0	; () banked
 27460  006A80  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27461  006A82  0100               	movlb	0	; () banked
 27462  006A84  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 27463  006A86  A0D8               	btfss	status,0,c
 27464  006A88  D00A               	goto	l13104
 27465                           
 27466                           ; BSR set to: 0
 27467  006A8A  0100               	movlb	0	; () banked
 27468  006A8C  5162               	movf	___awdiv@divisor& (0+255),w,b
 27469  006A8E  0100               	movlb	0	; () banked
 27470  006A90  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 27471  006A92  0100               	movlb	0	; () banked
 27472  006A94  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27473  006A96  0100               	movlb	0	; () banked
 27474  006A98  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 27475                           
 27476                           ; BSR set to: 0
 27477  006A9A  0100               	movlb	0	; () banked
 27478  006A9C  8166               	bsf	___awdiv@quotient& (0+255),0,b
 27479  006A9E                     l13104:
 27480                           
 27481                           ; BSR set to: 0
 27482  006A9E  0100               	movlb	0	; () banked
 27483  006AA0  90D8               	bcf	status,0,c
 27484  006AA2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 27485  006AA4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 27486                           
 27487                           ; BSR set to: 0
 27488  006AA6  0100               	movlb	0	; () banked
 27489  006AA8  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 27490  006AAA  D7E1               	goto	l13096
 27491  006AAC                     l13108:
 27492                           
 27493                           ; BSR set to: 0
 27494  006AAC  0100               	movlb	0	; () banked
 27495  006AAE  5165               	movf	___awdiv@sign& (0+255),w,b
 27496  006AB0  0100               	movlb	0	; () banked
 27497  006AB2  B4D8               	btfsc	status,2,c
 27498  006AB4  D005               	goto	l13112
 27499                           
 27500                           ; BSR set to: 0
 27501  006AB6  0100               	movlb	0	; () banked
 27502  006AB8  6D66               	negf	___awdiv@quotient& (0+255),b
 27503  006ABA  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 27504  006ABC  B0D8               	btfsc	status,0,c
 27505  006ABE  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 27506  006AC0                     l13112:
 27507                           
 27508                           ; BSR set to: 0
 27509  006AC0  C066  F060         	movff	___awdiv@quotient,?___awdiv
 27510  006AC4  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 27511  006AC8  0012               	return	
 27512  006ACA                     __end_of___awdiv:
 27513                           	opt stack 0
 27514                           tosu	equ	0xFFF
 27515                           tosh	equ	0xFFE
 27516                           tosl	equ	0xFFD
 27517                           pclath	equ	0xFFA
 27518                           tblptru	equ	0xFF8
 27519                           tblptrh	equ	0xFF7
 27520                           tblptrl	equ	0xFF6
 27521                           tablat	equ	0xFF5
 27522                           prodh	equ	0xFF4
 27523                           prodl	equ	0xFF3
 27524                           intcon	equ	0xFF2
 27525                           indf0	equ	0xFEF
 27526                           postinc0	equ	0xFEE
 27527                           fsr0h	equ	0xFEA
 27528                           fsr0l	equ	0xFE9
 27529                           wreg	equ	0xFE8
 27530                           indf1	equ	0xFE7
 27531                           postinc1	equ	0xFE6
 27532                           postdec1	equ	0xFE5
 27533                           plusw1	equ	0xFE3
 27534                           fsr1h	equ	0xFE2
 27535                           fsr1l	equ	0xFE1
 27536                           indf2	equ	0xFDF
 27537                           postinc2	equ	0xFDE
 27538                           postdec2	equ	0xFDD
 27539                           plusw2	equ	0xFDB
 27540                           fsr2h	equ	0xFDA
 27541                           fsr2l	equ	0xFD9
 27542                           status	equ	0xFD8
 27543                           
 27544 ;; *************** function _lcd_disp_all *****************
 27545 ;; Defined at:
 27546 ;;		line 606 in file "src/driver/lcd.c"
 27547 ;; Parameters:    Size  Location     Type
 27548 ;;  x               1    wreg     unsigned char 
 27549 ;; Auto vars:     Size  Location     Type
 27550 ;;  x               1    0[BANK0 ] unsigned char 
 27551 ;;  i               1    1[BANK0 ] unsigned char 
 27552 ;; Return value:  Size  Location     Type
 27553 ;;                  1    wreg      void 
 27554 ;; Registers used:
 27555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27556 ;; Tracked objects:
 27557 ;;		On entry : 0/0
 27558 ;;		On exit  : 0/0
 27559 ;;		Unchanged: 0/0
 27560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27562 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27565 ;;Total ram usage:        2 bytes
 27566 ;; Hardware stack levels used:    1
 27567 ;; Hardware stack levels required when called:    4
 27568 ;; This function calls:
 27569 ;;		Nothing
 27570 ;; This function is called by:
 27571 ;;		_ui_disp_start_cs600
 27572 ;;		_ui_disp_menu_psw_adj
 27573 ;;		_ui_disp_menu_home_test
 27574 ;;		_ui_disp_menu_density_adj
 27575 ;;		_ui_disp_menu_pos_adj
 27576 ;;		_ui_disp_menu_h_adj
 27577 ;;		_ui_disp_menu_d_adj
 27578 ;;		_ui_disp_menu_bzero_adj
 27579 ;;		_ui_disp_menu_calib_diff_adj
 27580 ;;		_ui_disp_menu_calib_pr_adj
 27581 ;;		_ui_disp_menu_poly_c_adj
 27582 ;;		_ui_disp_menu_warn_t_adj
 27583 ;;		_ui_disp_menu_warn_v_adj
 27584 ;;		_ui_disp_menu_epr_calib_adj
 27585 ;;		_ui_disp_menu_epr_ilp_scale_adj
 27586 ;;		_ui_disp_menu_bar_full_adj
 27587 ;;		_ui_disp_menu_work_mode_adj
 27588 ;;		_lcd_config
 27589 ;;		_ui_disp_all_on
 27590 ;;		_ui_disp_all_off
 27591 ;;		_ui_disp_menu_home
 27592 ;; This function uses a non-reentrant model
 27593 ;;
 27594                           
 27595                           	psect	text156
 27596  009720                     __ptext156:
 27597                           	opt stack 0
 27598  009720                     _lcd_disp_all:
 27599                           	opt stack 25
 27600                           
 27601                           ; BSR set to: 0
 27602                           ;incstack = 0
 27603                           ;lcd_disp_all@x stored from wreg
 27604  009720  0100               	movlb	0	; () banked
 27605  009722  6F60               	movwf	lcd_disp_all@x& (0+255),b
 27606                           
 27607                           ;lcd.c: 608: uint8_t i;
 27608                           ;lcd.c: 609: for(i=0;i<24;i++)
 27609  009724  0E00               	movlw	0
 27610  009726  0100               	movlb	0	; () banked
 27611  009728  6F61               	movwf	lcd_disp_all@i& (0+255),b
 27612  00972A                     l14670:
 27613                           
 27614                           ; BSR set to: 0
 27615  00972A  0E17               	movlw	23
 27616  00972C  0100               	movlb	0	; () banked
 27617  00972E  6561               	cpfsgt	lcd_disp_all@i& (0+255),b
 27618  009730  D001               	goto	l14674
 27619  009732  0012               	return	
 27620  009734                     l14674:
 27621                           
 27622                           ; BSR set to: 0
 27623                           ;lcd.c: 610: {
 27624                           ;lcd.c: 611: pLCD[i]=x;
 27625  009734  0100               	movlb	0	; () banked
 27626  009736  5161               	movf	lcd_disp_all@i& (0+255),w,b
 27627  009738  0D01               	mullw	1
 27628  00973A  0E00               	movlw	low _pLCD
 27629  00973C  24F3               	addwf	prodl,w,c
 27630  00973E  6ED9               	movwf	fsr2l,c
 27631  009740  0E01               	movlw	high _pLCD
 27632  009742  20F4               	addwfc	prodh,w,c
 27633  009744  6EDA               	movwf	fsr2h,c
 27634  009746  C060  FFDF         	movff	lcd_disp_all@x,indf2
 27635                           
 27636                           ; BSR set to: 0
 27637  00974A  0100               	movlb	0	; () banked
 27638  00974C  2B61               	incf	lcd_disp_all@i& (0+255),f,b
 27639  00974E  D7ED               	goto	l14670
 27640  009750                     __end_of_lcd_disp_all:
 27641                           	opt stack 0
 27642                           tosu	equ	0xFFF
 27643                           tosh	equ	0xFFE
 27644                           tosl	equ	0xFFD
 27645                           pclath	equ	0xFFA
 27646                           tblptru	equ	0xFF8
 27647                           tblptrh	equ	0xFF7
 27648                           tblptrl	equ	0xFF6
 27649                           tablat	equ	0xFF5
 27650                           prodh	equ	0xFF4
 27651                           prodl	equ	0xFF3
 27652                           intcon	equ	0xFF2
 27653                           indf0	equ	0xFEF
 27654                           postinc0	equ	0xFEE
 27655                           fsr0h	equ	0xFEA
 27656                           fsr0l	equ	0xFE9
 27657                           wreg	equ	0xFE8
 27658                           indf1	equ	0xFE7
 27659                           postinc1	equ	0xFE6
 27660                           postdec1	equ	0xFE5
 27661                           plusw1	equ	0xFE3
 27662                           fsr1h	equ	0xFE2
 27663                           fsr1l	equ	0xFE1
 27664                           indf2	equ	0xFDF
 27665                           postinc2	equ	0xFDE
 27666                           postdec2	equ	0xFDD
 27667                           plusw2	equ	0xFDB
 27668                           fsr2h	equ	0xFDA
 27669                           fsr2l	equ	0xFD9
 27670                           status	equ	0xFD8
 27671                           
 27672 ;; *************** function _sample_function_enable_fi_in_rtc *****************
 27673 ;; Defined at:
 27674 ;;		line 162 in file "src/api/sample.c"
 27675 ;; Parameters:    Size  Location     Type
 27676 ;;		None
 27677 ;; Auto vars:     Size  Location     Type
 27678 ;;  ret             1  134[BANK0 ] unsigned char 
 27679 ;; Return value:  Size  Location     Type
 27680 ;;                  1    wreg      void 
 27681 ;; Registers used:
 27682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27683 ;; Tracked objects:
 27684 ;;		On entry : 0/0
 27685 ;;		On exit  : 0/0
 27686 ;;		Unchanged: 0/0
 27687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27691 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27692 ;;Total ram usage:        1 bytes
 27693 ;; Hardware stack levels used:    1
 27694 ;; Hardware stack levels required when called:    9
 27695 ;; This function calls:
 27696 ;;		_sample_all_power_off
 27697 ;;		_sample_all_power_on
 27698 ;;		_sample_call_cal_diff_pr
 27699 ;;		_sample_call_cal_in_soc
 27700 ;;		_sample_call_cal_pr
 27701 ;;		_sample_variable_init
 27702 ;; This function is called by:
 27703 ;;		_event_process_rtc
 27704 ;; This function uses a non-reentrant model
 27705 ;;
 27706                           
 27707                           	psect	text157
 27708  006312                     __ptext157:
 27709                           	opt stack 0
 27710  006312                     _sample_function_enable_fi_in_rtc:
 27711                           	opt stack 20
 27712                           
 27713                           ;sample.c: 164: uint8_t ret=0;
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;incstack = 0
 27717  006312  0E00               	movlw	0
 27718  006314  0100               	movlb	0	; () banked
 27719  006316  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 27720                           
 27721                           ; BSR set to: 0
 27722                           ;sample.c: 166: if(dwm==WORK_MODE){
 27723  006318  0100               	movlb	0	; () banked
 27724  00631A  05FD               	decf	_dwm& (0+255),w,b	;volatile
 27725  00631C  A4D8               	btfss	status,2,c
 27726  00631E  D057               	goto	l16998
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;sample.c: 167: if(sensorSimpleEn){
 27730  006320  0100               	movlb	0	; () banked
 27731  006322  51F1               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 27732  006324  B4D8               	btfsc	status,2,c
 27733  006326  D015               	goto	l16966
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;sample.c: 168: if(diffPrChipSampleFinish && PrChipSampleFinish && inSocAdcSampleFinish)
      +                          {
 27737  006328  0100               	movlb	0	; () banked
 27738  00632A  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 27739  00632C  B4D8               	btfsc	status,2,c
 27740  00632E  0012               	return	
 27741                           
 27742                           ; BSR set to: 0
 27743  006330  0100               	movlb	0	; () banked
 27744  006332  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 27745  006334  B4D8               	btfsc	status,2,c
 27746  006336  0012               	return	
 27747                           
 27748                           ; BSR set to: 0
 27749  006338  0100               	movlb	0	; () banked
 27750  00633A  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 27751  00633C  B4D8               	btfsc	status,2,c
 27752  00633E  0012               	return	
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;sample.c: 170: sensorSimpleEn=0;
 27756  006340  0E00               	movlw	0
 27757  006342  0100               	movlb	0	; () banked
 27758  006344  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;sample.c: 171: sample_all_power_off();
 27762  006346  EC2C  F04E         	call	_sample_all_power_off	;wreg free
 27763                           
 27764                           ;sample.c: 172: sensorSimpleTsLong=0;
 27765  00634A  0E00               	movlw	0
 27766  00634C  0100               	movlb	0	; () banked
 27767  00634E  6FF0               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 27768                           
 27769                           ; BSR set to: 0
 27770                           ;sample.c: 173: }
 27771                           ;sample.c: 174: }else{
 27772  006350  0012               	return	
 27773  006352                     l16966:
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;sample.c: 175: if(diffPrChipSampleFinish || PrChipSampleFinish || inSocAdcSampleFinish)
      +                          {
 27777  006352  0100               	movlb	0	; () banked
 27778  006354  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 27779  006356  A4D8               	btfss	status,2,c
 27780  006358  D008               	goto	l16972
 27781                           
 27782                           ; BSR set to: 0
 27783  00635A  0100               	movlb	0	; () banked
 27784  00635C  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 27785  00635E  A4D8               	btfss	status,2,c
 27786  006360  D004               	goto	l16972
 27787                           
 27788                           ; BSR set to: 0
 27789  006362  0100               	movlb	0	; () banked
 27790  006364  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 27791  006366  B4D8               	btfsc	status,2,c
 27792  006368  D023               	goto	l16988
 27793  00636A                     l16972:
 27794                           
 27795                           ; BSR set to: 0
 27796                           ;sample.c: 177: if(diffPrChipSampleFinish)ret=sample_call_cal_diff_pr();
 27797  00636A  0100               	movlb	0	; () banked
 27798  00636C  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 27799  00636E  B4D8               	btfsc	status,2,c
 27800  006370  D004               	goto	l16976
 27801                           
 27802                           ; BSR set to: 0
 27803  006372  EC3D  F04D         	call	_sample_call_cal_diff_pr	;wreg free
 27804  006376  0100               	movlb	0	; () banked
 27805  006378  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 27806  00637A                     l16976:
 27807                           
 27808                           ; BSR set to: 0
 27809                           ;sample.c: 178: if(!ret && PrChipSampleFinish)ret=sample_call_cal_pr();
 27810  00637A  0100               	movlb	0	; () banked
 27811  00637C  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 27812  00637E  0100               	movlb	0	; () banked
 27813  006380  A4D8               	btfss	status,2,c
 27814  006382  D008               	goto	l16982
 27815                           
 27816                           ; BSR set to: 0
 27817  006384  0100               	movlb	0	; () banked
 27818  006386  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 27819  006388  B4D8               	btfsc	status,2,c
 27820  00638A  D004               	goto	l16982
 27821                           
 27822                           ; BSR set to: 0
 27823  00638C  EC2E  F04D         	call	_sample_call_cal_pr	;wreg free
 27824  006390  0100               	movlb	0	; () banked
 27825  006392  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 27826  006394                     l16982:
 27827                           
 27828                           ; BSR set to: 0
 27829                           ;sample.c: 179: if(!ret && inSocAdcSampleFinish)ret=sample_call_cal_in_soc();
 27830  006394  0100               	movlb	0	; () banked
 27831  006396  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 27832  006398  0100               	movlb	0	; () banked
 27833  00639A  A4D8               	btfss	status,2,c
 27834  00639C  0012               	return	
 27835                           
 27836                           ; BSR set to: 0
 27837  00639E  0100               	movlb	0	; () banked
 27838  0063A0  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 27839  0063A2  B4D8               	btfsc	status,2,c
 27840  0063A4  0012               	return	
 27841                           
 27842                           ; BSR set to: 0
 27843  0063A6  ECEC  F04C         	call	_sample_call_cal_in_soc	;wreg free
 27844  0063AA  0100               	movlb	0	; () banked
 27845  0063AC  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 27846                           
 27847                           ; BSR set to: 0
 27848                           ;sample.c: 180: }else if(sensorSimpleTsLong>=100*2){
 27849  0063AE  0012               	return	
 27850  0063B0                     l16988:
 27851                           
 27852                           ; BSR set to: 0
 27853  0063B0  0EC7               	movlw	199
 27854  0063B2  0100               	movlb	0	; () banked
 27855  0063B4  65F0               	cpfsgt	_sensorSimpleTsLong& (0+255),b	;volatile
 27856  0063B6  D008               	goto	l16996
 27857                           
 27858                           ; BSR set to: 0
 27859                           ;sample.c: 182: sensorSimpleEn=1;
 27860  0063B8  0E01               	movlw	1
 27861  0063BA  0100               	movlb	0	; () banked
 27862  0063BC  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 27863                           
 27864                           ; BSR set to: 0
 27865                           ;sample.c: 183: sample_all_power_on();
 27866  0063BE  EC09  F04E         	call	_sample_all_power_on	;wreg free
 27867                           
 27868                           ;sample.c: 184: sample_variable_init();
 27869  0063C2  EC04  F047         	call	_sample_variable_init	;wreg free
 27870                           
 27871                           ;sample.c: 185: }else{
 27872  0063C6  0012               	return	
 27873  0063C8                     l16996:
 27874                           
 27875                           ;sample.c: 187: sensorSimpleTsLong++;
 27876  0063C8  0100               	movlb	0	; () banked
 27877  0063CA  2BF0               	incf	_sensorSimpleTsLong& (0+255),f,b	;volatile
 27878                           
 27879                           ; BSR set to: 0
 27880                           ;sample.c: 188: }
 27881                           ;sample.c: 189: }
 27882                           ;sample.c: 190: }else{
 27883                           
 27884                           ; BSR set to: 0
 27885                           
 27886                           ; BSR set to: 0
 27887  0063CC  0012               	return	
 27888  0063CE                     l16998:
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;sample.c: 191: sensorSimpleEn=1;
 27892  0063CE  0E01               	movlw	1
 27893  0063D0  0100               	movlb	0	; () banked
 27894  0063D2  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 27895                           
 27896                           ; BSR set to: 0
 27897                           ;sample.c: 192: sample_all_power_on();
 27898  0063D4  EC09  F04E         	call	_sample_all_power_on	;wreg free
 27899                           
 27900                           ;sample.c: 193: sensorSimpleTsLong=0;
 27901  0063D8  0E00               	movlw	0
 27902  0063DA  0100               	movlb	0	; () banked
 27903  0063DC  6FF0               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 27904  0063DE  0012               	return	
 27905  0063E0                     __end_of_sample_function_enable_fi_in_rtc:
 27906                           	opt stack 0
 27907                           tosu	equ	0xFFF
 27908                           tosh	equ	0xFFE
 27909                           tosl	equ	0xFFD
 27910                           pclath	equ	0xFFA
 27911                           tblptru	equ	0xFF8
 27912                           tblptrh	equ	0xFF7
 27913                           tblptrl	equ	0xFF6
 27914                           tablat	equ	0xFF5
 27915                           prodh	equ	0xFF4
 27916                           prodl	equ	0xFF3
 27917                           intcon	equ	0xFF2
 27918                           indf0	equ	0xFEF
 27919                           postinc0	equ	0xFEE
 27920                           fsr0h	equ	0xFEA
 27921                           fsr0l	equ	0xFE9
 27922                           wreg	equ	0xFE8
 27923                           indf1	equ	0xFE7
 27924                           postinc1	equ	0xFE6
 27925                           postdec1	equ	0xFE5
 27926                           plusw1	equ	0xFE3
 27927                           fsr1h	equ	0xFE2
 27928                           fsr1l	equ	0xFE1
 27929                           indf2	equ	0xFDF
 27930                           postinc2	equ	0xFDE
 27931                           postdec2	equ	0xFDD
 27932                           plusw2	equ	0xFDB
 27933                           fsr2h	equ	0xFDA
 27934                           fsr2l	equ	0xFD9
 27935                           status	equ	0xFD8
 27936                           
 27937 ;; *************** function _sample_variable_init *****************
 27938 ;; Defined at:
 27939 ;;		line 104 in file "src/api/sample.c"
 27940 ;; Parameters:    Size  Location     Type
 27941 ;;		None
 27942 ;; Auto vars:     Size  Location     Type
 27943 ;;		None
 27944 ;; Return value:  Size  Location     Type
 27945 ;;                  1    wreg      void 
 27946 ;; Registers used:
 27947 ;;		wreg, status,2
 27948 ;; Tracked objects:
 27949 ;;		On entry : 0/0
 27950 ;;		On exit  : 0/0
 27951 ;;		Unchanged: 0/0
 27952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27957 ;;Total ram usage:        0 bytes
 27958 ;; Hardware stack levels used:    1
 27959 ;; Hardware stack levels required when called:    4
 27960 ;; This function calls:
 27961 ;;		Nothing
 27962 ;; This function is called by:
 27963 ;;		_sample_function_enable_fi_in_rtc
 27964 ;; This function uses a non-reentrant model
 27965 ;;
 27966                           
 27967                           	psect	text158
 27968  008E08                     __ptext158:
 27969                           	opt stack 0
 27970  008E08                     _sample_variable_init:
 27971                           	opt stack 24
 27972                           
 27973                           ;sample.c: 106: diffPrChipSampleTimer=0;
 27974                           
 27975                           ;incstack = 0
 27976  008E08  0E00               	movlw	0
 27977  008E0A  0101               	movlb	1	; () banked
 27978  008E0C  6F65               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 27979  008E0E  0E00               	movlw	0
 27980  008E10  6F64               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 27981                           
 27982                           ;sample.c: 107: diffPrChipSampleCount=0;
 27983  008E12  0E00               	movlw	0
 27984  008E14  0100               	movlb	0	; () banked
 27985  008E16  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 27986                           
 27987                           ;sample.c: 108: diffPrChipSampCh=0;
 27988  008E18  0E00               	movlw	0
 27989  008E1A  0100               	movlb	0	; () banked
 27990  008E1C  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 27991                           
 27992                           ;sample.c: 110: PrChipSampleTimer=0;
 27993  008E1E  0E00               	movlw	0
 27994  008E20  0101               	movlb	1	; () banked
 27995  008E22  6F63               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 27996  008E24  0E00               	movlw	0
 27997  008E26  6F62               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 27998                           
 27999                           ;sample.c: 111: prChipSampleCh=0;
 28000  008E28  0E00               	movlw	0
 28001  008E2A  0100               	movlb	0	; () banked
 28002  008E2C  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 28003                           
 28004                           ;sample.c: 112: prChipSampleCount=0;
 28005  008E2E  0E00               	movlw	0
 28006  008E30  0100               	movlb	0	; () banked
 28007  008E32  6FF6               	movwf	_prChipSampleCount& (0+255),b	;volatile
 28008                           
 28009                           ;sample.c: 114: inSocAdcSampleTimer=0;
 28010  008E34  0E00               	movlw	0
 28011  008E36  0101               	movlb	1	; () banked
 28012  008E38  6F61               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 28013  008E3A  0E00               	movlw	0
 28014  008E3C  6F60               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 28015                           
 28016                           ;sample.c: 115: inSocAdcSampleCount=0;
 28017  008E3E  0E00               	movlw	0
 28018  008E40  0100               	movlb	0	; () banked
 28019  008E42  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 28020                           
 28021                           ;sample.c: 116: inSocAdcSampleCh=0;
 28022  008E44  0E00               	movlw	0
 28023  008E46  0100               	movlb	0	; () banked
 28024  008E48  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 28025                           
 28026                           ;sample.c: 118: diffPrChipSampleFinish=0;
 28027  008E4A  0E00               	movlw	0
 28028  008E4C  0100               	movlb	0	; () banked
 28029  008E4E  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 28030                           
 28031                           ;sample.c: 119: PrChipSampleFinish=0;
 28032  008E50  0E00               	movlw	0
 28033  008E52  0100               	movlb	0	; () banked
 28034  008E54  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 28035                           
 28036                           ;sample.c: 120: inSocAdcSampleFinish=0;
 28037  008E56  0E00               	movlw	0
 28038  008E58  0100               	movlb	0	; () banked
 28039  008E5A  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 28040                           
 28041                           ; BSR set to: 0
 28042  008E5C  0012               	return		;funcret
 28043  008E5E                     __end_of_sample_variable_init:
 28044                           	opt stack 0
 28045                           tosu	equ	0xFFF
 28046                           tosh	equ	0xFFE
 28047                           tosl	equ	0xFFD
 28048                           pclath	equ	0xFFA
 28049                           tblptru	equ	0xFF8
 28050                           tblptrh	equ	0xFF7
 28051                           tblptrl	equ	0xFF6
 28052                           tablat	equ	0xFF5
 28053                           prodh	equ	0xFF4
 28054                           prodl	equ	0xFF3
 28055                           intcon	equ	0xFF2
 28056                           indf0	equ	0xFEF
 28057                           postinc0	equ	0xFEE
 28058                           fsr0h	equ	0xFEA
 28059                           fsr0l	equ	0xFE9
 28060                           wreg	equ	0xFE8
 28061                           indf1	equ	0xFE7
 28062                           postinc1	equ	0xFE6
 28063                           postdec1	equ	0xFE5
 28064                           plusw1	equ	0xFE3
 28065                           fsr1h	equ	0xFE2
 28066                           fsr1l	equ	0xFE1
 28067                           indf2	equ	0xFDF
 28068                           postinc2	equ	0xFDE
 28069                           postdec2	equ	0xFDD
 28070                           plusw2	equ	0xFDB
 28071                           fsr2h	equ	0xFDA
 28072                           fsr2l	equ	0xFD9
 28073                           status	equ	0xFD8
 28074                           
 28075 ;; *************** function _sample_call_cal_pr *****************
 28076 ;; Defined at:
 28077 ;;		line 131 in file "src/api/sample.c"
 28078 ;; Parameters:    Size  Location     Type
 28079 ;;		None
 28080 ;; Auto vars:     Size  Location     Type
 28081 ;;		None
 28082 ;; Return value:  Size  Location     Type
 28083 ;;                  1    wreg      unsigned char 
 28084 ;; Registers used:
 28085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28086 ;; Tracked objects:
 28087 ;;		On entry : 0/0
 28088 ;;		On exit  : 0/0
 28089 ;;		Unchanged: 0/0
 28090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28095 ;;Total ram usage:        0 bytes
 28096 ;; Hardware stack levels used:    1
 28097 ;; Hardware stack levels required when called:    7
 28098 ;; This function calls:
 28099 ;;		_cal_press
 28100 ;;		_cal_pt100_temperature_ex
 28101 ;; This function is called by:
 28102 ;;		_sample_call_in_ticker
 28103 ;;		_sample_function_enable_fi_in_rtc
 28104 ;; This function uses a non-reentrant model
 28105 ;;
 28106                           
 28107                           	psect	text159
 28108  009A5C                     __ptext159:
 28109                           	opt stack 0
 28110  009A5C                     _sample_call_cal_pr:
 28111                           	opt stack 21
 28112                           
 28113                           ;sample.c: 133: if(!PrChipSampleFinish)return 0;
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;incstack = 0
 28117  009A5C  0100               	movlb	0	; () banked
 28118  009A5E  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 28119  009A60  A4D8               	btfss	status,2,c
 28120  009A62  D002               	goto	l16376
 28121                           
 28122                           ; BSR set to: 0
 28123  009A64  0E00               	movlw	0
 28124                           
 28125                           ; BSR set to: 0
 28126  009A66  0012               	return	
 28127  009A68                     l16376:
 28128                           
 28129                           ; BSR set to: 0
 28130                           ;sample.c: 134: cal_press();
 28131  009A68  EC93  F03E         	call	_cal_press	;wreg free
 28132                           
 28133                           ;sample.c: 135: cal_pt100_temperature_ex();
 28134  009A6C  ECF5  F04D         	call	_cal_pt100_temperature_ex	;wreg free
 28135                           
 28136                           ;sample.c: 136: PrChipSampleFinish=0;
 28137  009A70  0E00               	movlw	0
 28138  009A72  0100               	movlb	0	; () banked
 28139  009A74  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 28140                           
 28141                           ; BSR set to: 0
 28142                           ;sample.c: 137: return 1;
 28143  009A76  0E01               	movlw	1
 28144  009A78  0012               	return	
 28145  009A7A                     __end_of_sample_call_cal_pr:
 28146                           	opt stack 0
 28147                           tosu	equ	0xFFF
 28148                           tosh	equ	0xFFE
 28149                           tosl	equ	0xFFD
 28150                           pclath	equ	0xFFA
 28151                           tblptru	equ	0xFF8
 28152                           tblptrh	equ	0xFF7
 28153                           tblptrl	equ	0xFF6
 28154                           tablat	equ	0xFF5
 28155                           prodh	equ	0xFF4
 28156                           prodl	equ	0xFF3
 28157                           intcon	equ	0xFF2
 28158                           indf0	equ	0xFEF
 28159                           postinc0	equ	0xFEE
 28160                           fsr0h	equ	0xFEA
 28161                           fsr0l	equ	0xFE9
 28162                           wreg	equ	0xFE8
 28163                           indf1	equ	0xFE7
 28164                           postinc1	equ	0xFE6
 28165                           postdec1	equ	0xFE5
 28166                           plusw1	equ	0xFE3
 28167                           fsr1h	equ	0xFE2
 28168                           fsr1l	equ	0xFE1
 28169                           indf2	equ	0xFDF
 28170                           postinc2	equ	0xFDE
 28171                           postdec2	equ	0xFDD
 28172                           plusw2	equ	0xFDB
 28173                           fsr2h	equ	0xFDA
 28174                           fsr2l	equ	0xFD9
 28175                           status	equ	0xFD8
 28176                           
 28177 ;; *************** function _cal_pt100_temperature_ex *****************
 28178 ;; Defined at:
 28179 ;;		line 617 in file "src/api/data.c"
 28180 ;; Parameters:    Size  Location     Type
 28181 ;;		None
 28182 ;; Auto vars:     Size  Location     Type
 28183 ;;		None
 28184 ;; Return value:  Size  Location     Type
 28185 ;;                  1    wreg      void 
 28186 ;; Registers used:
 28187 ;;		wreg, status,2
 28188 ;; Tracked objects:
 28189 ;;		On entry : 0/0
 28190 ;;		On exit  : 0/0
 28191 ;;		Unchanged: 0/0
 28192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28197 ;;Total ram usage:        0 bytes
 28198 ;; Hardware stack levels used:    1
 28199 ;; Hardware stack levels required when called:    4
 28200 ;; This function calls:
 28201 ;;		Nothing
 28202 ;; This function is called by:
 28203 ;;		_sample_call_cal_pr
 28204 ;; This function uses a non-reentrant model
 28205 ;;
 28206                           
 28207                           	psect	text160
 28208  009BEA                     __ptext160:
 28209                           	opt stack 0
 28210  009BEA                     _cal_pt100_temperature_ex:
 28211                           	opt stack 23
 28212                           
 28213                           ;data.c: 638: rtTemperatureEx= 0;
 28214                           
 28215                           ; BSR set to: 0
 28216                           ;incstack = 0
 28217  009BEA  0E00               	movlw	0
 28218  009BEC  0101               	movlb	1	; () banked
 28219  009BEE  6F46               	movwf	_rtTemperatureEx& (0+255),b	;volatile
 28220  009BF0  0E00               	movlw	0
 28221  009BF2  6F47               	movwf	(_rtTemperatureEx+1)& (0+255),b	;volatile
 28222  009BF4  0E00               	movlw	0
 28223  009BF6  6F48               	movwf	(_rtTemperatureEx+2)& (0+255),b	;volatile
 28224  009BF8  0E00               	movlw	0
 28225  009BFA  6F49               	movwf	(_rtTemperatureEx+3)& (0+255),b	;volatile
 28226                           
 28227                           ; BSR set to: 1
 28228  009BFC  0012               	return		;funcret
 28229  009BFE                     __end_of_cal_pt100_temperature_ex:
 28230                           	opt stack 0
 28231                           tosu	equ	0xFFF
 28232                           tosh	equ	0xFFE
 28233                           tosl	equ	0xFFD
 28234                           pclath	equ	0xFFA
 28235                           tblptru	equ	0xFF8
 28236                           tblptrh	equ	0xFF7
 28237                           tblptrl	equ	0xFF6
 28238                           tablat	equ	0xFF5
 28239                           prodh	equ	0xFF4
 28240                           prodl	equ	0xFF3
 28241                           intcon	equ	0xFF2
 28242                           indf0	equ	0xFEF
 28243                           postinc0	equ	0xFEE
 28244                           fsr0h	equ	0xFEA
 28245                           fsr0l	equ	0xFE9
 28246                           wreg	equ	0xFE8
 28247                           indf1	equ	0xFE7
 28248                           postinc1	equ	0xFE6
 28249                           postdec1	equ	0xFE5
 28250                           plusw1	equ	0xFE3
 28251                           fsr1h	equ	0xFE2
 28252                           fsr1l	equ	0xFE1
 28253                           indf2	equ	0xFDF
 28254                           postinc2	equ	0xFDE
 28255                           postdec2	equ	0xFDD
 28256                           plusw2	equ	0xFDB
 28257                           fsr2h	equ	0xFDA
 28258                           fsr2l	equ	0xFD9
 28259                           status	equ	0xFD8
 28260                           
 28261 ;; *************** function _cal_press *****************
 28262 ;; Defined at:
 28263 ;;		line 571 in file "src/api/data.c"
 28264 ;; Parameters:    Size  Location     Type
 28265 ;;		None
 28266 ;; Auto vars:     Size  Location     Type
 28267 ;;  xin             8   61[BANK0 ] struct .
 28268 ;;  tabrow          2   59[BANK0 ] PTR struct .
 28269 ;;		 -> prCalibTabDef.prCalibRow(156), prCalibTabDef(162), 
 28270 ;;  ret             1   58[BANK0 ] unsigned char 
 28271 ;; Return value:  Size  Location     Type
 28272 ;;                  1    wreg      unsigned char 
 28273 ;; Registers used:
 28274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28275 ;; Tracked objects:
 28276 ;;		On entry : 0/0
 28277 ;;		On exit  : 0/0
 28278 ;;		Unchanged: 0/0
 28279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28281 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28283 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28284 ;;Total ram usage:       11 bytes
 28285 ;; Hardware stack levels used:    1
 28286 ;; Hardware stack levels required when called:    6
 28287 ;; This function calls:
 28288 ;;		_m_interp1_cal_p_v
 28289 ;; This function is called by:
 28290 ;;		_sample_call_cal_pr
 28291 ;; This function uses a non-reentrant model
 28292 ;;
 28293                           
 28294                           	psect	text161
 28295  007D26                     __ptext161:
 28296                           	opt stack 0
 28297  007D26                     _cal_press:
 28298                           	opt stack 21
 28299                           
 28300                           ;data.c: 573: uint8_t ret;
 28301                           ;data.c: 574: st_prData xin={0};
 28302                           
 28303                           ; BSR set to: 1
 28304                           ;incstack = 0
 28305  007D26  EE21  F023         	lfsr	2,cal_press@F7863
 28306  007D2A  EE10  F09D         	lfsr	1,cal_press@xin
 28307  007D2E  0E07               	movlw	7
 28308  007D30                     u14211:
 28309  007D30  CFDB FFE3          	movff	plusw2,plusw1
 28310  007D34  06E8               	decf	wreg,f,c
 28311  007D36  E2FC               	bc	u14211
 28312                           
 28313                           ;data.c: 575: xin.pValue=0;
 28314  007D38  0E00               	movlw	0
 28315  007D3A  0100               	movlb	0	; () banked
 28316  007D3C  6F9D               	movwf	cal_press@xin& (0+255),b
 28317  007D3E  0E00               	movlw	0
 28318  007D40  6F9E               	movwf	(cal_press@xin+1)& (0+255),b
 28319  007D42  0E00               	movlw	0
 28320  007D44  6F9F               	movwf	(cal_press@xin+2)& (0+255),b
 28321  007D46  0E00               	movlw	0
 28322  007D48  6FA0               	movwf	(cal_press@xin+3)& (0+255),b
 28323                           
 28324                           ; BSR set to: 0
 28325                           ;data.c: 576: xin.pAdcValue=adc_pressure;
 28326  007D4A  C16E  F0A1         	movff	_adc_pressure,cal_press@xin+4	;volatile
 28327  007D4E  C16F  F0A2         	movff	_adc_pressure+1,cal_press@xin+5	;volatile
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;data.c: 577: xin.tAdcValue=0;
 28331  007D52  0E00               	movlw	0
 28332  007D54  0100               	movlb	0	; () banked
 28333  007D56  6FA4               	movwf	(cal_press@xin+7)& (0+255),b
 28334  007D58  0E00               	movlw	0
 28335  007D5A  6FA3               	movwf	(cal_press@xin+6)& (0+255),b
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;data.c: 578: st_prCalibRowDef* tabrow;
 28339                           ;data.c: 579: tabrow= &prCalibTabDef.prCalibRow[0];
 28340  007D5C  0E04               	movlw	low (_prCalibTabDef+4)
 28341  007D5E  0100               	movlb	0	; () banked
 28342  007D60  6F9B               	movwf	cal_press@tabrow& (0+255),b
 28343  007D62  0E04               	movlw	high (_prCalibTabDef+4)
 28344  007D64  0100               	movlb	0	; () banked
 28345  007D66  6F9C               	movwf	(cal_press@tabrow+1)& (0+255),b
 28346                           
 28347                           ; BSR set to: 0
 28348                           ;data.c: 580: ret=m_interp1_cal_p_v(tabrow,&xin,(0));
 28349  007D68  C09B  F07A         	movff	cal_press@tabrow,m_interp1_cal_p_v@tabrow
 28350  007D6C  C09C  F07B         	movff	cal_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 28351  007D70  0E9D               	movlw	low cal_press@xin
 28352  007D72  0100               	movlb	0	; () banked
 28353  007D74  6F7C               	movwf	m_interp1_cal_p_v@xin& (0+255),b
 28354  007D76  0E00               	movlw	high cal_press@xin
 28355  007D78  0100               	movlb	0	; () banked
 28356  007D7A  6F7D               	movwf	(m_interp1_cal_p_v@xin+1)& (0+255),b
 28357  007D7C  0E00               	movlw	0
 28358  007D7E  0100               	movlb	0	; () banked
 28359  007D80  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 28360  007D82  0E00               	movlw	0
 28361  007D84  0100               	movlb	0	; () banked
 28362  007D86  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 28363  007D88  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 28364  007D8C  0100               	movlb	0	; () banked
 28365  007D8E  6F9A               	movwf	cal_press@ret& (0+255),b
 28366                           
 28367                           ; BSR set to: 0
 28368                           ;data.c: 581: rtPressure=xin.pValue;
 28369  007D90  C09D  F14A         	movff	cal_press@xin,_rtPressure	;volatile
 28370  007D94  C09E  F14B         	movff	cal_press@xin+1,_rtPressure+1	;volatile
 28371  007D98  C09F  F14C         	movff	cal_press@xin+2,_rtPressure+2	;volatile
 28372  007D9C  C0A0  F14D         	movff	cal_press@xin+3,_rtPressure+3	;volatile
 28373  007DA0  0012               	return	
 28374  007DA2                     __end_of_cal_press:
 28375                           	opt stack 0
 28376                           tosu	equ	0xFFF
 28377                           tosh	equ	0xFFE
 28378                           tosl	equ	0xFFD
 28379                           pclath	equ	0xFFA
 28380                           tblptru	equ	0xFF8
 28381                           tblptrh	equ	0xFF7
 28382                           tblptrl	equ	0xFF6
 28383                           tablat	equ	0xFF5
 28384                           prodh	equ	0xFF4
 28385                           prodl	equ	0xFF3
 28386                           intcon	equ	0xFF2
 28387                           indf0	equ	0xFEF
 28388                           postinc0	equ	0xFEE
 28389                           fsr0h	equ	0xFEA
 28390                           fsr0l	equ	0xFE9
 28391                           wreg	equ	0xFE8
 28392                           indf1	equ	0xFE7
 28393                           postinc1	equ	0xFE6
 28394                           postdec1	equ	0xFE5
 28395                           plusw1	equ	0xFE3
 28396                           fsr1h	equ	0xFE2
 28397                           fsr1l	equ	0xFE1
 28398                           indf2	equ	0xFDF
 28399                           postinc2	equ	0xFDE
 28400                           postdec2	equ	0xFDD
 28401                           plusw2	equ	0xFDB
 28402                           fsr2h	equ	0xFDA
 28403                           fsr2l	equ	0xFD9
 28404                           status	equ	0xFD8
 28405                           
 28406 ;; *************** function _sample_call_cal_in_soc *****************
 28407 ;; Defined at:
 28408 ;;		line 139 in file "src/api/sample.c"
 28409 ;; Parameters:    Size  Location     Type
 28410 ;;		None
 28411 ;; Auto vars:     Size  Location     Type
 28412 ;;		None
 28413 ;; Return value:  Size  Location     Type
 28414 ;;                  1    wreg      unsigned char 
 28415 ;; Registers used:
 28416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28417 ;; Tracked objects:
 28418 ;;		On entry : 0/0
 28419 ;;		On exit  : 0/0
 28420 ;;		Unchanged: 0/0
 28421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28426 ;;Total ram usage:        0 bytes
 28427 ;; Hardware stack levels used:    1
 28428 ;; Hardware stack levels required when called:    5
 28429 ;; This function calls:
 28430 ;;		_cal_additional_pressute
 28431 ;; This function is called by:
 28432 ;;		_sample_call_in_ticker
 28433 ;;		_sample_function_enable_fi_in_rtc
 28434 ;; This function uses a non-reentrant model
 28435 ;;
 28436                           
 28437                           	psect	text162
 28438  0099D8                     __ptext162:
 28439                           	opt stack 0
 28440  0099D8                     _sample_call_cal_in_soc:
 28441                           	opt stack 23
 28442                           
 28443                           ;sample.c: 141: if(!inSocAdcSampleFinish)return 0;
 28444                           
 28445                           ; BSR set to: 0
 28446                           ;incstack = 0
 28447  0099D8  0100               	movlb	0	; () banked
 28448  0099DA  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28449  0099DC  A4D8               	btfss	status,2,c
 28450  0099DE  D002               	goto	l11494
 28451                           
 28452                           ; BSR set to: 0
 28453  0099E0  0E00               	movlw	0
 28454                           
 28455                           ; BSR set to: 0
 28456  0099E2  0012               	return	
 28457  0099E4                     l11494:
 28458                           
 28459                           ; BSR set to: 0
 28460                           ;sample.c: 142: cal_additional_pressute(0);
 28461  0099E4  0E00               	movlw	0
 28462  0099E6  EC68  F04D         	call	_cal_additional_pressute
 28463                           
 28464                           ;sample.c: 143: cal_additional_pressute(1);
 28465  0099EA  0E01               	movlw	1
 28466  0099EC  EC68  F04D         	call	_cal_additional_pressute
 28467                           
 28468                           ;sample.c: 144: inSocAdcSampleFinish=0;
 28469  0099F0  0E00               	movlw	0
 28470  0099F2  0100               	movlb	0	; () banked
 28471  0099F4  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 28472                           
 28473                           ; BSR set to: 0
 28474                           ;sample.c: 145: return 1;
 28475  0099F6  0E01               	movlw	1
 28476  0099F8  0012               	return	
 28477  0099FA                     __end_of_sample_call_cal_in_soc:
 28478                           	opt stack 0
 28479                           tosu	equ	0xFFF
 28480                           tosh	equ	0xFFE
 28481                           tosl	equ	0xFFD
 28482                           pclath	equ	0xFFA
 28483                           tblptru	equ	0xFF8
 28484                           tblptrh	equ	0xFF7
 28485                           tblptrl	equ	0xFF6
 28486                           tablat	equ	0xFF5
 28487                           prodh	equ	0xFF4
 28488                           prodl	equ	0xFF3
 28489                           intcon	equ	0xFF2
 28490                           indf0	equ	0xFEF
 28491                           postinc0	equ	0xFEE
 28492                           fsr0h	equ	0xFEA
 28493                           fsr0l	equ	0xFE9
 28494                           wreg	equ	0xFE8
 28495                           indf1	equ	0xFE7
 28496                           postinc1	equ	0xFE6
 28497                           postdec1	equ	0xFE5
 28498                           plusw1	equ	0xFE3
 28499                           fsr1h	equ	0xFE2
 28500                           fsr1l	equ	0xFE1
 28501                           indf2	equ	0xFDF
 28502                           postinc2	equ	0xFDE
 28503                           postdec2	equ	0xFDD
 28504                           plusw2	equ	0xFDB
 28505                           fsr2h	equ	0xFDA
 28506                           fsr2l	equ	0xFD9
 28507                           status	equ	0xFD8
 28508                           
 28509 ;; *************** function _cal_additional_pressute *****************
 28510 ;; Defined at:
 28511 ;;		line 641 in file "src/api/data.c"
 28512 ;; Parameters:    Size  Location     Type
 28513 ;;  index           1    wreg     unsigned char 
 28514 ;; Auto vars:     Size  Location     Type
 28515 ;;  index           1   31[COMRAM] unsigned char 
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  1    wreg      void 
 28518 ;; Registers used:
 28519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28520 ;; Tracked objects:
 28521 ;;		On entry : 0/0
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28529 ;;Total ram usage:        1 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; Hardware stack levels required when called:    4
 28532 ;; This function calls:
 28533 ;;		Nothing
 28534 ;; This function is called by:
 28535 ;;		_sample_call_cal_in_soc
 28536 ;; This function uses a non-reentrant model
 28537 ;;
 28538                           
 28539                           	psect	text163
 28540  009AD0                     __ptext163:
 28541                           	opt stack 0
 28542  009AD0                     _cal_additional_pressute:
 28543                           	opt stack 23
 28544                           
 28545                           ; BSR set to: 0
 28546                           ;incstack = 0
 28547                           ;cal_additional_pressute@index stored from wreg
 28548  009AD0  6E20               	movwf	cal_additional_pressute@index,c
 28549                           
 28550                           ;data.c: 656: rtExPressure[index]=0;
 28551  009AD2  5020               	movf	cal_additional_pressute@index,w,c
 28552  009AD4  0D04               	mullw	4
 28553  009AD6  0E2B               	movlw	low _rtExPressure
 28554  009AD8  24F3               	addwf	prodl,w,c
 28555  009ADA  6ED9               	movwf	fsr2l,c
 28556  009ADC  0E01               	movlw	high _rtExPressure
 28557  009ADE  20F4               	addwfc	prodh,w,c
 28558  009AE0  6EDA               	movwf	fsr2h,c
 28559  009AE2  6ADE               	clrf	postinc2,c
 28560  009AE4  6ADE               	clrf	postinc2,c
 28561  009AE6  6ADE               	clrf	postinc2,c
 28562  009AE8  6ADD               	clrf	postdec2,c
 28563  009AEA  0012               	return		;funcret
 28564  009AEC                     __end_of_cal_additional_pressute:
 28565                           	opt stack 0
 28566                           tosu	equ	0xFFF
 28567                           tosh	equ	0xFFE
 28568                           tosl	equ	0xFFD
 28569                           pclath	equ	0xFFA
 28570                           tblptru	equ	0xFF8
 28571                           tblptrh	equ	0xFF7
 28572                           tblptrl	equ	0xFF6
 28573                           tablat	equ	0xFF5
 28574                           prodh	equ	0xFF4
 28575                           prodl	equ	0xFF3
 28576                           intcon	equ	0xFF2
 28577                           indf0	equ	0xFEF
 28578                           postinc0	equ	0xFEE
 28579                           fsr0h	equ	0xFEA
 28580                           fsr0l	equ	0xFE9
 28581                           wreg	equ	0xFE8
 28582                           indf1	equ	0xFE7
 28583                           postinc1	equ	0xFE6
 28584                           postdec1	equ	0xFE5
 28585                           plusw1	equ	0xFE3
 28586                           fsr1h	equ	0xFE2
 28587                           fsr1l	equ	0xFE1
 28588                           indf2	equ	0xFDF
 28589                           postinc2	equ	0xFDE
 28590                           postdec2	equ	0xFDD
 28591                           plusw2	equ	0xFDB
 28592                           fsr2h	equ	0xFDA
 28593                           fsr2l	equ	0xFD9
 28594                           status	equ	0xFD8
 28595                           
 28596 ;; *************** function _sample_call_cal_diff_pr *****************
 28597 ;; Defined at:
 28598 ;;		line 123 in file "src/api/sample.c"
 28599 ;; Parameters:    Size  Location     Type
 28600 ;;		None
 28601 ;; Auto vars:     Size  Location     Type
 28602 ;;		None
 28603 ;; Return value:  Size  Location     Type
 28604 ;;                  1    wreg      unsigned char 
 28605 ;; Registers used:
 28606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28607 ;; Tracked objects:
 28608 ;;		On entry : 0/0
 28609 ;;		On exit  : 0/0
 28610 ;;		Unchanged: 0/0
 28611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28616 ;;Total ram usage:        0 bytes
 28617 ;; Hardware stack levels used:    1
 28618 ;; Hardware stack levels required when called:    8
 28619 ;; This function calls:
 28620 ;;		_cal_diff_press
 28621 ;;		_cal_pt100_temperature_in
 28622 ;; This function is called by:
 28623 ;;		_sample_call_in_ticker
 28624 ;;		_sample_function_enable_fi_in_rtc
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text164
 28629  009A7A                     __ptext164:
 28630                           	opt stack 0
 28631  009A7A                     _sample_call_cal_diff_pr:
 28632                           	opt stack 20
 28633                           
 28634                           ;sample.c: 125: if(!diffPrChipSampleFinish)return 0;
 28635                           
 28636                           ;incstack = 0
 28637  009A7A  0100               	movlb	0	; () banked
 28638  009A7C  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28639  009A7E  A4D8               	btfss	status,2,c
 28640  009A80  D002               	goto	l16360
 28641                           
 28642                           ; BSR set to: 0
 28643  009A82  0E00               	movlw	0
 28644                           
 28645                           ; BSR set to: 0
 28646  009A84  0012               	return	
 28647  009A86                     l16360:
 28648                           
 28649                           ; BSR set to: 0
 28650                           ;sample.c: 126: cal_diff_press();
 28651  009A86  ECAB  F028         	call	_cal_diff_press	;wreg free
 28652                           
 28653                           ;sample.c: 127: cal_pt100_temperature_in();
 28654  009A8A  ECFF  F04D         	call	_cal_pt100_temperature_in	;wreg free
 28655                           
 28656                           ;sample.c: 128: diffPrChipSampleFinish=0;
 28657  009A8E  0E00               	movlw	0
 28658  009A90  0100               	movlb	0	; () banked
 28659  009A92  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 28660                           
 28661                           ; BSR set to: 0
 28662                           ;sample.c: 129: return 1;
 28663  009A94  0E01               	movlw	1
 28664  009A96  0012               	return	
 28665  009A98                     __end_of_sample_call_cal_diff_pr:
 28666                           	opt stack 0
 28667                           tosu	equ	0xFFF
 28668                           tosh	equ	0xFFE
 28669                           tosl	equ	0xFFD
 28670                           pclath	equ	0xFFA
 28671                           tblptru	equ	0xFF8
 28672                           tblptrh	equ	0xFF7
 28673                           tblptrl	equ	0xFF6
 28674                           tablat	equ	0xFF5
 28675                           prodh	equ	0xFF4
 28676                           prodl	equ	0xFF3
 28677                           intcon	equ	0xFF2
 28678                           indf0	equ	0xFEF
 28679                           postinc0	equ	0xFEE
 28680                           fsr0h	equ	0xFEA
 28681                           fsr0l	equ	0xFE9
 28682                           wreg	equ	0xFE8
 28683                           indf1	equ	0xFE7
 28684                           postinc1	equ	0xFE6
 28685                           postdec1	equ	0xFE5
 28686                           plusw1	equ	0xFE3
 28687                           fsr1h	equ	0xFE2
 28688                           fsr1l	equ	0xFE1
 28689                           indf2	equ	0xFDF
 28690                           postinc2	equ	0xFDE
 28691                           postdec2	equ	0xFDD
 28692                           plusw2	equ	0xFDB
 28693                           fsr2h	equ	0xFDA
 28694                           fsr2l	equ	0xFD9
 28695                           status	equ	0xFD8
 28696                           
 28697 ;; *************** function _cal_pt100_temperature_in *****************
 28698 ;; Defined at:
 28699 ;;		line 593 in file "src/api/data.c"
 28700 ;; Parameters:    Size  Location     Type
 28701 ;;		None
 28702 ;; Auto vars:     Size  Location     Type
 28703 ;;		None
 28704 ;; Return value:  Size  Location     Type
 28705 ;;                  1    wreg      void 
 28706 ;; Registers used:
 28707 ;;		wreg, status,2
 28708 ;; Tracked objects:
 28709 ;;		On entry : 0/0
 28710 ;;		On exit  : 0/0
 28711 ;;		Unchanged: 0/0
 28712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28717 ;;Total ram usage:        0 bytes
 28718 ;; Hardware stack levels used:    1
 28719 ;; Hardware stack levels required when called:    4
 28720 ;; This function calls:
 28721 ;;		Nothing
 28722 ;; This function is called by:
 28723 ;;		_sample_call_cal_diff_pr
 28724 ;; This function uses a non-reentrant model
 28725 ;;
 28726                           
 28727                           	psect	text165
 28728  009BFE                     __ptext165:
 28729                           	opt stack 0
 28730  009BFE                     _cal_pt100_temperature_in:
 28731                           	opt stack 23
 28732                           
 28733                           ;data.c: 614: rtTemperatureIn= 0;
 28734                           
 28735                           ; BSR set to: 0
 28736                           ;incstack = 0
 28737  009BFE  0E00               	movlw	0
 28738  009C00  0101               	movlb	1	; () banked
 28739  009C02  6F4E               	movwf	_rtTemperatureIn& (0+255),b	;volatile
 28740  009C04  0E00               	movlw	0
 28741  009C06  6F4F               	movwf	(_rtTemperatureIn+1)& (0+255),b	;volatile
 28742  009C08  0E00               	movlw	0
 28743  009C0A  6F50               	movwf	(_rtTemperatureIn+2)& (0+255),b	;volatile
 28744  009C0C  0E00               	movlw	0
 28745  009C0E  6F51               	movwf	(_rtTemperatureIn+3)& (0+255),b	;volatile
 28746                           
 28747                           ; BSR set to: 1
 28748  009C10  0012               	return		;funcret
 28749  009C12                     __end_of_cal_pt100_temperature_in:
 28750                           	opt stack 0
 28751                           tosu	equ	0xFFF
 28752                           tosh	equ	0xFFE
 28753                           tosl	equ	0xFFD
 28754                           pclath	equ	0xFFA
 28755                           tblptru	equ	0xFF8
 28756                           tblptrh	equ	0xFF7
 28757                           tblptrl	equ	0xFF6
 28758                           tablat	equ	0xFF5
 28759                           prodh	equ	0xFF4
 28760                           prodl	equ	0xFF3
 28761                           intcon	equ	0xFF2
 28762                           indf0	equ	0xFEF
 28763                           postinc0	equ	0xFEE
 28764                           fsr0h	equ	0xFEA
 28765                           fsr0l	equ	0xFE9
 28766                           wreg	equ	0xFE8
 28767                           indf1	equ	0xFE7
 28768                           postinc1	equ	0xFE6
 28769                           postdec1	equ	0xFE5
 28770                           plusw1	equ	0xFE3
 28771                           fsr1h	equ	0xFE2
 28772                           fsr1l	equ	0xFE1
 28773                           indf2	equ	0xFDF
 28774                           postinc2	equ	0xFDE
 28775                           postdec2	equ	0xFDD
 28776                           plusw2	equ	0xFDB
 28777                           fsr2h	equ	0xFDA
 28778                           fsr2l	equ	0xFD9
 28779                           status	equ	0xFD8
 28780                           
 28781 ;; *************** function _cal_diff_press *****************
 28782 ;; Defined at:
 28783 ;;		line 535 in file "src/api/data.c"
 28784 ;; Parameters:    Size  Location     Type
 28785 ;;		None
 28786 ;; Auto vars:     Size  Location     Type
 28787 ;;  xin             2   26[BANK3 ] PTR struct .
 28788 ;;		 -> x_prDiffData(8), 
 28789 ;;  tabrow          2   24[BANK3 ] PTR struct .
 28790 ;;		 -> diff_prCalibTabDef.prCalibRow(156), diff_prCalibTabDef(162), 
 28791 ;;  i               1   28[BANK3 ] unsigned char 
 28792 ;; Return value:  Size  Location     Type
 28793 ;;                  1    wreg      unsigned char 
 28794 ;; Registers used:
 28795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28796 ;; Tracked objects:
 28797 ;;		On entry : 0/0
 28798 ;;		On exit  : 0/0
 28799 ;;		Unchanged: 0/0
 28800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28802 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28804 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28805 ;;Total ram usage:        5 bytes
 28806 ;; Hardware stack levels used:    1
 28807 ;; Hardware stack levels required when called:    7
 28808 ;; This function calls:
 28809 ;;		_cal_diff_hight_level
 28810 ;;		_cal_diff_hight_to_vol_h
 28811 ;;		_cal_diff_hight_to_vol_v
 28812 ;;		_cal_diff_p_to_h
 28813 ;;		_m_interp1_cal_p_t
 28814 ;;		_m_interp1_cal_p_v
 28815 ;;		_m_mem_set
 28816 ;; This function is called by:
 28817 ;;		_sample_call_cal_diff_pr
 28818 ;; This function uses a non-reentrant model
 28819 ;;
 28820                           
 28821                           	psect	text166
 28822  005156                     __ptext166:
 28823                           	opt stack 0
 28824  005156                     _cal_diff_press:
 28825                           	opt stack 20
 28826                           
 28827                           ;data.c: 537: st_prData* xin= &x_prDiffData;
 28828                           
 28829                           ; BSR set to: 1
 28830                           ;incstack = 0
 28831  005156  0EE8               	movlw	low _x_prDiffData
 28832  005158  0103               	movlb	3	; () banked
 28833  00515A  6FE4               	movwf	cal_diff_press@xin& (0+255),b
 28834  00515C  0E01               	movlw	high _x_prDiffData
 28835  00515E  0103               	movlb	3	; () banked
 28836  005160  6FE5               	movwf	(cal_diff_press@xin+1)& (0+255),b
 28837                           
 28838                           ; BSR set to: 3
 28839                           ;data.c: 539: m_mem_set((uint8_t*)tmpx,0,sizeof(tmpx));
 28840  005162  0EB2               	movlw	low _tmpx
 28841  005164  0100               	movlb	0	; () banked
 28842  005166  6F60               	movwf	m_mem_set@buf& (0+255),b
 28843  005168  0E03               	movlw	high _tmpx
 28844  00516A  0100               	movlb	0	; () banked
 28845  00516C  6F61               	movwf	(m_mem_set@buf+1)& (0+255),b
 28846  00516E  0E00               	movlw	0
 28847  005170  0100               	movlb	0	; () banked
 28848  005172  6F62               	movwf	m_mem_set@x& (0+255),b
 28849  005174  0E18               	movlw	24
 28850  005176  0100               	movlb	0	; () banked
 28851  005178  6F63               	movwf	m_mem_set@len& (0+255),b
 28852  00517A  ECFD  F04C         	call	_m_mem_set	;wreg free
 28853                           
 28854                           ;data.c: 540: uint8_t i=0;
 28855  00517E  0E00               	movlw	0
 28856  005180  0103               	movlb	3	; () banked
 28857  005182  6FE6               	movwf	cal_diff_press@i& (0+255),b
 28858                           
 28859                           ; BSR set to: 3
 28860                           ;data.c: 541: st_prCalibRowDef* tabrow;
 28861                           ;data.c: 542: for(i=0;i<diff_prCalibTabDef.rowCount;i++){
 28862  005184  0E00               	movlw	0
 28863  005186  0103               	movlb	3	; () banked
 28864  005188  6FE6               	movwf	cal_diff_press@i& (0+255),b
 28865  00518A  D022               	goto	l14976
 28866  00518C                     l14970:
 28867                           
 28868                           ; BSR set to: 3
 28869                           ;data.c: 543: tabrow = &(diff_prCalibTabDef.prCalibRow[i]);
 28870  00518C  0103               	movlb	3	; () banked
 28871  00518E  51E6               	movf	cal_diff_press@i& (0+255),w,b
 28872  005190  0D34               	mullw	52
 28873  005192  0E14               	movlw	low (_diff_prCalibTabDef+4)
 28874  005194  24F3               	addwf	prodl,w,c
 28875  005196  0103               	movlb	3	; () banked
 28876  005198  6FE2               	movwf	cal_diff_press@tabrow& (0+255),b
 28877  00519A  0E03               	movlw	high (_diff_prCalibTabDef+4)
 28878  00519C  20F4               	addwfc	prodh,w,c
 28879  00519E  0103               	movlb	3	; () banked
 28880  0051A0  6FE3               	movwf	(cal_diff_press@tabrow+1)& (0+255),b
 28881                           
 28882                           ; BSR set to: 3
 28883                           ;data.c: 544: m_interp1_cal_p_v(tabrow,xin,&tmpx[i]);
 28884  0051A2  C3E2  F07A         	movff	cal_diff_press@tabrow,m_interp1_cal_p_v@tabrow
 28885  0051A6  C3E3  F07B         	movff	cal_diff_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 28886  0051AA  C3E4  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_v@xin
 28887  0051AE  C3E5  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_v@xin+1
 28888  0051B2  0103               	movlb	3	; () banked
 28889  0051B4  51E6               	movf	cal_diff_press@i& (0+255),w,b
 28890  0051B6  0D08               	mullw	8
 28891  0051B8  0EB2               	movlw	low _tmpx
 28892  0051BA  24F3               	addwf	prodl,w,c
 28893  0051BC  0100               	movlb	0	; () banked
 28894  0051BE  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 28895  0051C0  0E03               	movlw	high _tmpx
 28896  0051C2  20F4               	addwfc	prodh,w,c
 28897  0051C4  0100               	movlb	0	; () banked
 28898  0051C6  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 28899  0051C8  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 28900  0051CC  0103               	movlb	3	; () banked
 28901  0051CE  2BE6               	incf	cal_diff_press@i& (0+255),f,b
 28902  0051D0                     l14976:
 28903                           
 28904                           ; BSR set to: 3
 28905  0051D0  0103               	movlb	3	; () banked
 28906  0051D2  5110               	movf	_diff_prCalibTabDef& (0+255),w,b
 28907  0051D4  0103               	movlb	3	; () banked
 28908  0051D6  5DE6               	subwf	cal_diff_press@i& (0+255),w,b
 28909  0051D8  A0D8               	btfss	status,0,c
 28910  0051DA  D7D8               	goto	l14970
 28911                           
 28912                           ; BSR set to: 3
 28913                           ;data.c: 545: }
 28914                           ;data.c: 546: m_interp1_cal_p_t(&tmpx[0],xin,i);
 28915                           
 28916                           ; BSR set to: 3
 28917  0051DC  0EB2               	movlw	low _tmpx
 28918  0051DE  0100               	movlb	0	; () banked
 28919  0051E0  6F7A               	movwf	m_interp1_cal_p_t@tmpx& (0+255),b
 28920  0051E2  0E03               	movlw	high _tmpx
 28921  0051E4  0100               	movlb	0	; () banked
 28922  0051E6  6F7B               	movwf	(m_interp1_cal_p_t@tmpx+1)& (0+255),b
 28923  0051E8  C3E4  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_t@xin
 28924  0051EC  C3E5  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_t@xin+1
 28925  0051F0  C3E6  F07E         	movff	cal_diff_press@i,m_interp1_cal_p_t@tmpxLen
 28926  0051F4  ECF2  F00A         	call	_m_interp1_cal_p_t	;wreg free
 28927                           
 28928                           ;data.c: 548: rtDiffPressure=xin->pValue;
 28929  0051F8  C3E4  FFD9         	movff	cal_diff_press@xin,fsr2l
 28930  0051FC  C3E5  FFDA         	movff	cal_diff_press@xin+1,fsr2h
 28931  005200  CFDE F15A          	movff	postinc2,_rtDiffPressure	;volatile
 28932  005204  CFDE F15B          	movff	postinc2,_rtDiffPressure+1	;volatile
 28933  005208  CFDE F15C          	movff	postinc2,_rtDiffPressure+2	;volatile
 28934  00520C  CFDE F15D          	movff	postinc2,_rtDiffPressure+3	;volatile
 28935                           
 28936                           ;data.c: 550: cal_diff_p_to_h(xin);
 28937  005210  C3E4  F0C2         	movff	cal_diff_press@xin,cal_diff_p_to_h@xin
 28938  005214  C3E5  F0C3         	movff	cal_diff_press@xin+1,cal_diff_p_to_h@xin+1
 28939  005218  EC5E  F02B         	call	_cal_diff_p_to_h	;wreg free
 28940                           
 28941                           ;data.c: 551: rtLevel=cal_diff_hight_level();
 28942  00521C  ECE6  F015         	call	_cal_diff_hight_level	;wreg free
 28943  005220  0100               	movlb	0	; () banked
 28944  005222  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 28945                           
 28946                           ; BSR set to: 0
 28947                           ;data.c: 552: if(stSysData.pos==HOTIZONTAL){
 28948  005224  0102               	movlb	2	; () banked
 28949  005226  5104               	movf	(_stSysData+4)& (0+255),w,b
 28950  005228  A4D8               	btfss	status,2,c
 28951  00522A  D013               	goto	l14990
 28952                           
 28953                           ; BSR set to: 2
 28954                           ;data.c: 553: rtVolume=cal_diff_hight_to_vol_h(rtHight);
 28955  00522C  C0E8  F3CA         	movff	_rtHight,cal_diff_hight_to_vol_h@h	;volatile
 28956  005230  C0E9  F3CB         	movff	_rtHight+1,cal_diff_hight_to_vol_h@h+1	;volatile
 28957  005234  C0EA  F3CC         	movff	_rtHight+2,cal_diff_hight_to_vol_h@h+2	;volatile
 28958  005238  C0EB  F3CD         	movff	_rtHight+3,cal_diff_hight_to_vol_h@h+3	;volatile
 28959  00523C  EC43  F017         	call	_cal_diff_hight_to_vol_h	;wreg free
 28960  005240  C3CA  F152         	movff	?_cal_diff_hight_to_vol_h,_rtVolume	;volatile
 28961  005244  C3CB  F153         	movff	?_cal_diff_hight_to_vol_h+1,_rtVolume+1	;volatile
 28962  005248  C3CC  F154         	movff	?_cal_diff_hight_to_vol_h+2,_rtVolume+2	;volatile
 28963  00524C  C3CD  F155         	movff	?_cal_diff_hight_to_vol_h+3,_rtVolume+3	;volatile
 28964                           
 28965                           ;data.c: 554: }else{
 28966  005250  0012               	return	
 28967  005252                     l14990:
 28968                           
 28969                           ;data.c: 555: rtVolume=cal_diff_hight_to_vol_v(rtHight);
 28970  005252  C0E8  F3CA         	movff	_rtHight,cal_diff_hight_to_vol_v@h	;volatile
 28971  005256  C0E9  F3CB         	movff	_rtHight+1,cal_diff_hight_to_vol_v@h+1	;volatile
 28972  00525A  C0EA  F3CC         	movff	_rtHight+2,cal_diff_hight_to_vol_v@h+2	;volatile
 28973  00525E  C0EB  F3CD         	movff	_rtHight+3,cal_diff_hight_to_vol_v@h+3	;volatile
 28974  005262  EC6E  F000         	call	_cal_diff_hight_to_vol_v	;wreg free
 28975  005266  C3CA  F152         	movff	?_cal_diff_hight_to_vol_v,_rtVolume	;volatile
 28976  00526A  C3CB  F153         	movff	?_cal_diff_hight_to_vol_v+1,_rtVolume+1	;volatile
 28977  00526E  C3CC  F154         	movff	?_cal_diff_hight_to_vol_v+2,_rtVolume+2	;volatile
 28978  005272  C3CD  F155         	movff	?_cal_diff_hight_to_vol_v+3,_rtVolume+3	;volatile
 28979  005276  0012               	return	
 28980  005278                     __end_of_cal_diff_press:
 28981                           	opt stack 0
 28982                           tosu	equ	0xFFF
 28983                           tosh	equ	0xFFE
 28984                           tosl	equ	0xFFD
 28985                           pclath	equ	0xFFA
 28986                           tblptru	equ	0xFF8
 28987                           tblptrh	equ	0xFF7
 28988                           tblptrl	equ	0xFF6
 28989                           tablat	equ	0xFF5
 28990                           prodh	equ	0xFF4
 28991                           prodl	equ	0xFF3
 28992                           intcon	equ	0xFF2
 28993                           indf0	equ	0xFEF
 28994                           postinc0	equ	0xFEE
 28995                           fsr0h	equ	0xFEA
 28996                           fsr0l	equ	0xFE9
 28997                           wreg	equ	0xFE8
 28998                           indf1	equ	0xFE7
 28999                           postinc1	equ	0xFE6
 29000                           postdec1	equ	0xFE5
 29001                           plusw1	equ	0xFE3
 29002                           fsr1h	equ	0xFE2
 29003                           fsr1l	equ	0xFE1
 29004                           indf2	equ	0xFDF
 29005                           postinc2	equ	0xFDE
 29006                           postdec2	equ	0xFDD
 29007                           plusw2	equ	0xFDB
 29008                           fsr2h	equ	0xFDA
 29009                           fsr2l	equ	0xFD9
 29010                           status	equ	0xFD8
 29011                           
 29012 ;; *************** function _m_mem_set *****************
 29013 ;; Defined at:
 29014 ;;		line 32 in file "src/depend/m_string.c"
 29015 ;; Parameters:    Size  Location     Type
 29016 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 29017 ;;		 -> tmpx(24), 
 29018 ;;  x               1    2[BANK0 ] unsigned char 
 29019 ;;  len             1    3[BANK0 ] unsigned char 
 29020 ;; Auto vars:     Size  Location     Type
 29021 ;;		None
 29022 ;; Return value:  Size  Location     Type
 29023 ;;                  1    wreg      void 
 29024 ;; Registers used:
 29025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29026 ;; Tracked objects:
 29027 ;;		On entry : 0/0
 29028 ;;		On exit  : 0/0
 29029 ;;		Unchanged: 0/0
 29030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29034 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29035 ;;Total ram usage:        4 bytes
 29036 ;; Hardware stack levels used:    1
 29037 ;; Hardware stack levels required when called:    4
 29038 ;; This function calls:
 29039 ;;		Nothing
 29040 ;; This function is called by:
 29041 ;;		_cal_diff_press
 29042 ;; This function uses a non-reentrant model
 29043 ;;
 29044                           
 29045                           	psect	text167
 29046  0099FA                     __ptext167:
 29047                           	opt stack 0
 29048  0099FA                     _m_mem_set:
 29049                           	opt stack 22
 29050                           
 29051                           ;m_string.c: 34: while(len--)
 29052                           
 29053                           ;incstack = 0
 29054  0099FA  D009               	goto	l14610
 29055  0099FC                     l14606:
 29056                           
 29057                           ;m_string.c: 35: {
 29058                           ;m_string.c: 36: *buf++=x;
 29059  0099FC  C060  FFD9         	movff	m_mem_set@buf,fsr2l
 29060  009A00  C061  FFDA         	movff	m_mem_set@buf+1,fsr2h
 29061  009A04  C062  FFDF         	movff	m_mem_set@x,indf2
 29062  009A08  0100               	movlb	0	; () banked
 29063  009A0A  4B60               	infsnz	m_mem_set@buf& (0+255),f,b
 29064  009A0C  2B61               	incf	(m_mem_set@buf+1)& (0+255),f,b
 29065  009A0E                     l14610:
 29066  009A0E  0100               	movlb	0	; () banked
 29067  009A10  0763               	decf	m_mem_set@len& (0+255),f,b
 29068  009A12  0100               	movlb	0	; () banked
 29069  009A14  2963               	incf	m_mem_set@len& (0+255),w,b
 29070  009A16  B4D8               	btfsc	status,2,c
 29071  009A18  0012               	return	
 29072  009A1A  D7F0               	goto	l14606
 29073  009A1C                     __end_of_m_mem_set:
 29074                           	opt stack 0
 29075                           tosu	equ	0xFFF
 29076                           tosh	equ	0xFFE
 29077                           tosl	equ	0xFFD
 29078                           pclath	equ	0xFFA
 29079                           tblptru	equ	0xFF8
 29080                           tblptrh	equ	0xFF7
 29081                           tblptrl	equ	0xFF6
 29082                           tablat	equ	0xFF5
 29083                           prodh	equ	0xFF4
 29084                           prodl	equ	0xFF3
 29085                           intcon	equ	0xFF2
 29086                           indf0	equ	0xFEF
 29087                           postinc0	equ	0xFEE
 29088                           fsr0h	equ	0xFEA
 29089                           fsr0l	equ	0xFE9
 29090                           wreg	equ	0xFE8
 29091                           indf1	equ	0xFE7
 29092                           postinc1	equ	0xFE6
 29093                           postdec1	equ	0xFE5
 29094                           plusw1	equ	0xFE3
 29095                           fsr1h	equ	0xFE2
 29096                           fsr1l	equ	0xFE1
 29097                           indf2	equ	0xFDF
 29098                           postinc2	equ	0xFDE
 29099                           postdec2	equ	0xFDD
 29100                           plusw2	equ	0xFDB
 29101                           fsr2h	equ	0xFDA
 29102                           fsr2l	equ	0xFD9
 29103                           status	equ	0xFD8
 29104                           
 29105 ;; *************** function _m_interp1_cal_p_v *****************
 29106 ;; Defined at:
 29107 ;;		line 339 in file "src/api/data.c"
 29108 ;; Parameters:    Size  Location     Type
 29109 ;;  tabrow          2   26[BANK0 ] PTR struct .
 29110 ;;		 -> prCalibTabDef.prCalibRow(156), diff_prCalibTabDef.prCalibRow(156), prCalibTabDef(162), diff_prCalibTabDef(162), 
 29111 ;;  xin             2   28[BANK0 ] PTR struct .
 29112 ;;		 -> cal_press@xin(8), x_prDiffData(8), 
 29113 ;;  xout            2   30[BANK0 ] PTR struct .
 29114 ;;		 -> tmpx(24), NULL(0), 
 29115 ;; Auto vars:     Size  Location     Type
 29116 ;;  pr              4   53[BANK0 ] long 
 29117 ;;  x               4   47[BANK0 ] long 
 29118 ;;  y               4   43[BANK0 ] long 
 29119 ;;  t16             2   51[BANK0 ] int 
 29120 ;;  i               1   57[BANK0 ] unsigned char 
 29121 ;; Return value:  Size  Location     Type
 29122 ;;                  1    wreg      unsigned char 
 29123 ;; Registers used:
 29124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29125 ;; Tracked objects:
 29126 ;;		On entry : 0/0
 29127 ;;		On exit  : 0/0
 29128 ;;		Unchanged: 0/0
 29129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29130 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29131 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29132 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29133 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29134 ;;Total ram usage:       32 bytes
 29135 ;; Hardware stack levels used:    1
 29136 ;; Hardware stack levels required when called:    5
 29137 ;; This function calls:
 29138 ;;		___aldiv
 29139 ;;		___lmul
 29140 ;; This function is called by:
 29141 ;;		_cal_diff_press
 29142 ;;		_cal_press
 29143 ;; This function uses a non-reentrant model
 29144 ;;
 29145                           
 29146                           	psect	text168
 29147  000784                     __ptext168:
 29148                           	opt stack 0
 29149  000784                     _m_interp1_cal_p_v:
 29150                           	opt stack 21
 29151                           
 29152                           ;data.c: 341: uint8_t i;
 29153                           ;data.c: 342: int32_t x,y,pr;
 29154                           ;data.c: 343: int16_t t16;
 29155                           ;data.c: 344: t16=xin->pAdcValue;
 29156                           
 29157                           ; BSR set to: 0
 29158                           ;incstack = 0
 29159  000784  0100               	movlb	0	; () banked
 29160  000786  EE20 F004          	lfsr	2,4
 29161  00078A  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 29162  00078C  26D9               	addwf	fsr2l,f,c
 29163  00078E  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 29164  000790  22DA               	addwfc	fsr2h,f,c
 29165  000792  CFDE F093          	movff	postinc2,m_interp1_cal_p_v@t16
 29166  000796  CFDD F094          	movff	postdec2,m_interp1_cal_p_v@t16+1
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;data.c: 345: for(i=0;i< (tabrow->pCount) - 2 ;i++){
 29170  00079A  0E00               	movlw	0
 29171  00079C  0100               	movlb	0	; () banked
 29172  00079E  6F99               	movwf	m_interp1_cal_p_v@i& (0+255),b
 29173  0007A0  D0BE               	goto	l14434
 29174  0007A2                     l14422:
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;data.c: 347: if(tabrow->prCalibPoint[i].pAdcValue < tabrow->prCalibPoint[i+1].pAdcValue
      +                          ){
 29178  0007A2  0100               	movlb	0	; () banked
 29179  0007A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29180  0007A6  0100               	movlb	0	; () banked
 29181  0007A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29182  0007AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29183  0007AC  0100               	movlb	0	; () banked
 29184  0007AE  90D8               	bcf	status,0,c
 29185  0007B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29186  0007B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29187  0007B4  0100               	movlb	0	; () banked
 29188  0007B6  90D8               	bcf	status,0,c
 29189  0007B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29190  0007BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29191  0007BC  0100               	movlb	0	; () banked
 29192  0007BE  90D8               	bcf	status,0,c
 29193  0007C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29194  0007C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29195  0007C4  0E0C               	movlw	12
 29196  0007C6  0100               	movlb	0	; () banked
 29197  0007C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29198  0007CA  0E00               	movlw	0
 29199  0007CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29200  0007CE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 29201  0007D2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 29202  0007D6  0100               	movlb	0	; () banked
 29203  0007D8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29204  0007DA  0100               	movlb	0	; () banked
 29205  0007DC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29206  0007DE  0100               	movlb	0	; () banked
 29207  0007E0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29208  0007E2  0100               	movlb	0	; () banked
 29209  0007E4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29210  0007E6  0E04               	movlw	4
 29211  0007E8  0100               	movlb	0	; () banked
 29212  0007EA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29213  0007EC  6ED9               	movwf	fsr2l,c
 29214  0007EE  0E00               	movlw	0
 29215  0007F0  0100               	movlb	0	; () banked
 29216  0007F2  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29217  0007F4  6EDA               	movwf	fsr2h,c
 29218  0007F6  0100               	movlb	0	; () banked
 29219  0007F8  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29220  0007FA  0D08               	mullw	8
 29221  0007FC  0E04               	movlw	4
 29222  0007FE  26F3               	addwf	prodl,f,c
 29223  000800  0E00               	movlw	0
 29224  000802  22F4               	addwfc	prodh,f,c
 29225  000804  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 29226  000808  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 29227  00080C  50F3               	movf	prodl,w,c
 29228  00080E  0100               	movlb	0	; () banked
 29229  000810  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 29230  000812  50F4               	movf	prodh,w,c
 29231  000814  0100               	movlb	0	; () banked
 29232  000816  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 29233  000818  0E04               	movlw	4
 29234  00081A  0100               	movlb	0	; () banked
 29235  00081C  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 29236  00081E  6EE1               	movwf	fsr1l,c
 29237  000820  0E00               	movlw	0
 29238  000822  0100               	movlb	0	; () banked
 29239  000824  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 29240  000826  6EE2               	movwf	fsr1h,c
 29241  000828  50DE               	movf	postinc2,w,c
 29242  00082A  5CE6               	subwf	postinc1,w,c
 29243  00082C  50E6               	movf	postinc1,w,c
 29244  00082E  0A80               	xorlw	128
 29245  000830  0100               	movlb	0	; () banked
 29246  000832  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 29247  000834  50DE               	movf	postinc2,w,c
 29248  000836  0A80               	xorlw	128
 29249  000838  0100               	movlb	0	; () banked
 29250  00083A  598A               	subwfb	(??_m_interp1_cal_p_v+10)& (0+255),w,b
 29251  00083C  B0D8               	btfsc	status,0,c
 29252  00083E  D039               	goto	l14428
 29253                           
 29254                           ; BSR set to: 0
 29255                           ;data.c: 348: if(t16 <= tabrow->prCalibPoint[i+1].pAdcValue)break;
 29256  000840  0100               	movlb	0	; () banked
 29257  000842  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29258  000844  0100               	movlb	0	; () banked
 29259  000846  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29260  000848  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29261  00084A  0100               	movlb	0	; () banked
 29262  00084C  90D8               	bcf	status,0,c
 29263  00084E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29264  000850  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29265  000852  0100               	movlb	0	; () banked
 29266  000854  90D8               	bcf	status,0,c
 29267  000856  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29268  000858  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29269  00085A  0100               	movlb	0	; () banked
 29270  00085C  90D8               	bcf	status,0,c
 29271  00085E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29272  000860  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29273  000862  0E0C               	movlw	12
 29274  000864  0100               	movlb	0	; () banked
 29275  000866  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29276  000868  0E00               	movlw	0
 29277  00086A  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29278  00086C  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 29279  000870  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 29280  000874  0100               	movlb	0	; () banked
 29281  000876  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29282  000878  0100               	movlb	0	; () banked
 29283  00087A  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29284  00087C  0100               	movlb	0	; () banked
 29285  00087E  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29286  000880  0100               	movlb	0	; () banked
 29287  000882  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29288  000884  0E04               	movlw	4
 29289  000886  0100               	movlb	0	; () banked
 29290  000888  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29291  00088A  6ED9               	movwf	fsr2l,c
 29292  00088C  0E00               	movlw	0
 29293  00088E  0100               	movlb	0	; () banked
 29294  000890  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29295  000892  6EDA               	movwf	fsr2h,c
 29296  000894  0100               	movlb	0	; () banked
 29297  000896  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 29298  000898  5CDE               	subwf	postinc2,w,c
 29299  00089A  50DE               	movf	postinc2,w,c
 29300  00089C  0A80               	xorlw	128
 29301  00089E  0100               	movlb	0	; () banked
 29302  0008A0  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 29303  0008A2  0100               	movlb	0	; () banked
 29304  0008A4  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 29305  0008A6  0A80               	xorlw	128
 29306  0008A8  0100               	movlb	0	; () banked
 29307  0008AA  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 29308  0008AC  B0D8               	btfsc	status,0,c
 29309  0008AE  D062               	goto	l14436
 29310  0008B0  D034               	goto	l14432
 29311  0008B2                     l14428:
 29312                           
 29313                           ; BSR set to: 0
 29314                           ;data.c: 350: if(t16 >= tabrow->prCalibPoint[i+1].pAdcValue)break;
 29315  0008B2  0100               	movlb	0	; () banked
 29316  0008B4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29317  0008B6  0100               	movlb	0	; () banked
 29318  0008B8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29319  0008BA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29320  0008BC  0100               	movlb	0	; () banked
 29321  0008BE  90D8               	bcf	status,0,c
 29322  0008C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29323  0008C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29324  0008C4  0100               	movlb	0	; () banked
 29325  0008C6  90D8               	bcf	status,0,c
 29326  0008C8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29327  0008CA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29328  0008CC  0100               	movlb	0	; () banked
 29329  0008CE  90D8               	bcf	status,0,c
 29330  0008D0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29331  0008D2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29332  0008D4  0E0C               	movlw	12
 29333  0008D6  0100               	movlb	0	; () banked
 29334  0008D8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29335  0008DA  0E00               	movlw	0
 29336  0008DC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29337  0008DE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 29338  0008E2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 29339  0008E6  0100               	movlb	0	; () banked
 29340  0008E8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29341  0008EA  0100               	movlb	0	; () banked
 29342  0008EC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29343  0008EE  0100               	movlb	0	; () banked
 29344  0008F0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29345  0008F2  0100               	movlb	0	; () banked
 29346  0008F4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29347  0008F6  0E04               	movlw	4
 29348  0008F8  0100               	movlb	0	; () banked
 29349  0008FA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29350  0008FC  6ED9               	movwf	fsr2l,c
 29351  0008FE  0E00               	movlw	0
 29352  000900  0100               	movlb	0	; () banked
 29353  000902  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29354  000904  6EDA               	movwf	fsr2h,c
 29355  000906  50DE               	movf	postinc2,w,c
 29356  000908  0100               	movlb	0	; () banked
 29357  00090A  5D93               	subwf	m_interp1_cal_p_v@t16& (0+255),w,b
 29358  00090C  0100               	movlb	0	; () banked
 29359  00090E  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 29360  000910  0A80               	xorlw	128
 29361  000912  0100               	movlb	0	; () banked
 29362  000914  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 29363  000916  50DE               	movf	postinc2,w,c
 29364  000918  D7C6               	goto	L24
 29365  00091A                     l14432:
 29366                           
 29367                           ; BSR set to: 0
 29368  00091A  0100               	movlb	0	; () banked
 29369  00091C  2B99               	incf	m_interp1_cal_p_v@i& (0+255),f,b
 29370  00091E                     l14434:
 29371                           
 29372                           ; BSR set to: 0
 29373  00091E  0EFE               	movlw	254
 29374  000920  0100               	movlb	0	; () banked
 29375  000922  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29376  000924  0EFF               	movlw	255
 29377  000926  0100               	movlb	0	; () banked
 29378  000928  6F81               	movwf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29379  00092A  C07A  FFD9         	movff	m_interp1_cal_p_v@tabrow,fsr2l
 29380  00092E  C07B  FFDA         	movff	m_interp1_cal_p_v@tabrow+1,fsr2h
 29381  000932  50DF               	movf	indf2,w,c
 29382  000934  0100               	movlb	0	; () banked
 29383  000936  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 29384  000938  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 29385  00093A  0100               	movlb	0	; () banked
 29386  00093C  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29387  00093E  0100               	movlb	0	; () banked
 29388  000940  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29389  000942  0100               	movlb	0	; () banked
 29390  000944  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29391  000946  0100               	movlb	0	; () banked
 29392  000948  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29393  00094A  0100               	movlb	0	; () banked
 29394  00094C  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29395  00094E  0100               	movlb	0	; () banked
 29396  000950  6F84               	movwf	(??_m_interp1_cal_p_v+4)& (0+255),b
 29397  000952  6B85               	clrf	(??_m_interp1_cal_p_v+5)& (0+255),b
 29398  000954  0100               	movlb	0	; () banked
 29399  000956  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29400  000958  0100               	movlb	0	; () banked
 29401  00095A  5D84               	subwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 29402  00095C  0100               	movlb	0	; () banked
 29403  00095E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 29404  000960  0A80               	xorlw	128
 29405  000962  0100               	movlb	0	; () banked
 29406  000964  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 29407  000966  0100               	movlb	0	; () banked
 29408  000968  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29409  00096A  0A80               	xorlw	128
 29410  00096C  0100               	movlb	0	; () banked
 29411  00096E  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 29412  000970  A0D8               	btfss	status,0,c
 29413  000972  D717               	goto	l14422
 29414  000974                     l14436:
 29415                           
 29416                           ; BSR set to: 0
 29417                           ;data.c: 351: }
 29418                           ;data.c: 352: }
 29419                           ;data.c: 353: pr=tabrow->prCalibPoint[i].pValue;
 29420  000974  0100               	movlb	0	; () banked
 29421  000976  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29422  000978  0D08               	mullw	8
 29423  00097A  0E04               	movlw	4
 29424  00097C  26F3               	addwf	prodl,f,c
 29425  00097E  0E00               	movlw	0
 29426  000980  22F4               	addwfc	prodh,f,c
 29427  000982  50F3               	movf	prodl,w,c
 29428  000984  0100               	movlb	0	; () banked
 29429  000986  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 29430  000988  6ED9               	movwf	fsr2l,c
 29431  00098A  50F4               	movf	prodh,w,c
 29432  00098C  0100               	movlb	0	; () banked
 29433  00098E  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 29434  000990  6EDA               	movwf	fsr2h,c
 29435  000992  CFDE F095          	movff	postinc2,m_interp1_cal_p_v@pr
 29436  000996  CFDE F096          	movff	postinc2,m_interp1_cal_p_v@pr+1
 29437  00099A  CFDE F097          	movff	postinc2,m_interp1_cal_p_v@pr+2
 29438  00099E  CFDE F098          	movff	postinc2,m_interp1_cal_p_v@pr+3
 29439                           
 29440                           ;data.c: 355: y = tabrow->prCalibPoint[i+1].pValue - tabrow->prCalibPoint[i].pValue ;
 29441  0009A2  0100               	movlb	0	; () banked
 29442  0009A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29443  0009A6  0100               	movlb	0	; () banked
 29444  0009A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29445  0009AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29446  0009AC  0100               	movlb	0	; () banked
 29447  0009AE  90D8               	bcf	status,0,c
 29448  0009B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29449  0009B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29450  0009B4  0100               	movlb	0	; () banked
 29451  0009B6  90D8               	bcf	status,0,c
 29452  0009B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29453  0009BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29454  0009BC  0100               	movlb	0	; () banked
 29455  0009BE  90D8               	bcf	status,0,c
 29456  0009C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29457  0009C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29458  0009C4  0E0C               	movlw	12
 29459  0009C6  0100               	movlb	0	; () banked
 29460  0009C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29461  0009CA  0E00               	movlw	0
 29462  0009CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29463  0009CE  0100               	movlb	0	; () banked
 29464  0009D0  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29465  0009D2  0100               	movlb	0	; () banked
 29466  0009D4  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 29467  0009D6  6ED9               	movwf	fsr2l,c
 29468  0009D8  0100               	movlb	0	; () banked
 29469  0009DA  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29470  0009DC  0100               	movlb	0	; () banked
 29471  0009DE  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 29472  0009E0  6EDA               	movwf	fsr2h,c
 29473  0009E2  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 29474  0009E6  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 29475  0009EA  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 29476  0009EE  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_v+5
 29477  0009F2  0100               	movlb	0	; () banked
 29478  0009F4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29479  0009F6  0D08               	mullw	8
 29480  0009F8  0E04               	movlw	4
 29481  0009FA  26F3               	addwf	prodl,f,c
 29482  0009FC  0E00               	movlw	0
 29483  0009FE  22F4               	addwfc	prodh,f,c
 29484  000A00  50F3               	movf	prodl,w,c
 29485  000A02  0100               	movlb	0	; () banked
 29486  000A04  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 29487  000A06  6ED9               	movwf	fsr2l,c
 29488  000A08  50F4               	movf	prodh,w,c
 29489  000A0A  0100               	movlb	0	; () banked
 29490  000A0C  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 29491  000A0E  6EDA               	movwf	fsr2h,c
 29492  000A10  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_v+6
 29493  000A14  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_v+7
 29494  000A18  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 29495  000A1C  CFDE F089          	movff	postinc2,??_m_interp1_cal_p_v+9
 29496  000A20  0100               	movlb	0	; () banked
 29497  000A22  1F86               	comf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 29498  000A24  1F87               	comf	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 29499  000A26  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 29500  000A28  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 29501  000A2A  2B86               	incf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 29502  000A2C  0E00               	movlw	0
 29503  000A2E  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 29504  000A30  2388               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 29505  000A32  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 29506  000A34  0100               	movlb	0	; () banked
 29507  000A36  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29508  000A38  0100               	movlb	0	; () banked
 29509  000A3A  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 29510  000A3C  0100               	movlb	0	; () banked
 29511  000A3E  6F8B               	movwf	m_interp1_cal_p_v@y& (0+255),b
 29512  000A40  0100               	movlb	0	; () banked
 29513  000A42  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29514  000A44  0100               	movlb	0	; () banked
 29515  000A46  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 29516  000A48  0100               	movlb	0	; () banked
 29517  000A4A  6F8C               	movwf	(m_interp1_cal_p_v@y+1)& (0+255),b
 29518  000A4C  0100               	movlb	0	; () banked
 29519  000A4E  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 29520  000A50  0100               	movlb	0	; () banked
 29521  000A52  2188               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 29522  000A54  0100               	movlb	0	; () banked
 29523  000A56  6F8D               	movwf	(m_interp1_cal_p_v@y+2)& (0+255),b
 29524  000A58  0100               	movlb	0	; () banked
 29525  000A5A  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 29526  000A5C  0100               	movlb	0	; () banked
 29527  000A5E  2189               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),w,b
 29528  000A60  0100               	movlb	0	; () banked
 29529  000A62  6F8E               	movwf	(m_interp1_cal_p_v@y+3)& (0+255),b
 29530                           
 29531                           ;data.c: 356: x = (int32_t)(tabrow->prCalibPoint[i+1].pAdcValue - tabrow->prCalibPoint[i
      +                          ].pAdcValue);
 29532  000A64  0100               	movlb	0	; () banked
 29533  000A66  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29534  000A68  0100               	movlb	0	; () banked
 29535  000A6A  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 29536  000A6C  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 29537  000A6E  0100               	movlb	0	; () banked
 29538  000A70  90D8               	bcf	status,0,c
 29539  000A72  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29540  000A74  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29541  000A76  0100               	movlb	0	; () banked
 29542  000A78  90D8               	bcf	status,0,c
 29543  000A7A  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29544  000A7C  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29545  000A7E  0100               	movlb	0	; () banked
 29546  000A80  90D8               	bcf	status,0,c
 29547  000A82  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 29548  000A84  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29549  000A86  0E0C               	movlw	12
 29550  000A88  0100               	movlb	0	; () banked
 29551  000A8A  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29552  000A8C  0E00               	movlw	0
 29553  000A8E  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29554  000A90  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 29555  000A94  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 29556  000A98  0100               	movlb	0	; () banked
 29557  000A9A  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 29558  000A9C  0100               	movlb	0	; () banked
 29559  000A9E  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29560  000AA0  0100               	movlb	0	; () banked
 29561  000AA2  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29562  000AA4  0100               	movlb	0	; () banked
 29563  000AA6  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29564  000AA8  0E04               	movlw	4
 29565  000AAA  0100               	movlb	0	; () banked
 29566  000AAC  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 29567  000AAE  6ED9               	movwf	fsr2l,c
 29568  000AB0  0E00               	movlw	0
 29569  000AB2  0100               	movlb	0	; () banked
 29570  000AB4  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 29571  000AB6  6EDA               	movwf	fsr2h,c
 29572  000AB8  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 29573  000ABC  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 29574  000AC0  0100               	movlb	0	; () banked
 29575  000AC2  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29576  000AC4  0D08               	mullw	8
 29577  000AC6  0E04               	movlw	4
 29578  000AC8  26F3               	addwf	prodl,f,c
 29579  000ACA  0E00               	movlw	0
 29580  000ACC  22F4               	addwfc	prodh,f,c
 29581  000ACE  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 29582  000AD2  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 29583  000AD6  50F3               	movf	prodl,w,c
 29584  000AD8  0100               	movlb	0	; () banked
 29585  000ADA  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 29586  000ADC  50F4               	movf	prodh,w,c
 29587  000ADE  0100               	movlb	0	; () banked
 29588  000AE0  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 29589  000AE2  0E04               	movlw	4
 29590  000AE4  0100               	movlb	0	; () banked
 29591  000AE6  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 29592  000AE8  6ED9               	movwf	fsr2l,c
 29593  000AEA  0E00               	movlw	0
 29594  000AEC  0100               	movlb	0	; () banked
 29595  000AEE  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 29596  000AF0  6EDA               	movwf	fsr2h,c
 29597  000AF2  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 29598  000AF6  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 29599  000AFA  0100               	movlb	0	; () banked
 29600  000AFC  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 29601  000AFE  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 29602  000B00  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 29603  000B02  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 29604  000B04  0100               	movlb	0	; () banked
 29605  000B06  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 29606  000B08  0100               	movlb	0	; () banked
 29607  000B0A  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 29608  000B0C  0100               	movlb	0	; () banked
 29609  000B0E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 29610  000B10  0100               	movlb	0	; () banked
 29611  000B12  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 29612  000B14  C088  F08F         	movff	??_m_interp1_cal_p_v+8,m_interp1_cal_p_v@x
 29613  000B18  C089  F090         	movff	??_m_interp1_cal_p_v+9,m_interp1_cal_p_v@x+1
 29614  000B1C  0100               	movlb	0	; () banked
 29615  000B1E  0E00               	movlw	0
 29616  000B20  BF90               	btfsc	(m_interp1_cal_p_v@x+1)& (0+255),7,b
 29617  000B22  0EFF               	movlw	-1
 29618  000B24  6F91               	movwf	(m_interp1_cal_p_v@x+2)& (0+255),b
 29619  000B26  6F92               	movwf	(m_interp1_cal_p_v@x+3)& (0+255),b
 29620                           
 29621                           ; BSR set to: 0
 29622                           ;data.c: 357: if(x != 0){
 29623  000B28  0100               	movlb	0	; () banked
 29624  000B2A  518F               	movf	m_interp1_cal_p_v@x& (0+255),w,b
 29625  000B2C  0100               	movlb	0	; () banked
 29626  000B2E  1190               	iorwf	(m_interp1_cal_p_v@x+1)& (0+255),w,b
 29627  000B30  0100               	movlb	0	; () banked
 29628  000B32  1191               	iorwf	(m_interp1_cal_p_v@x+2)& (0+255),w,b
 29629  000B34  0100               	movlb	0	; () banked
 29630  000B36  1192               	iorwf	(m_interp1_cal_p_v@x+3)& (0+255),w,b
 29631  000B38  B4D8               	btfsc	status,2,c
 29632  000B3A  D068               	goto	l14442
 29633                           
 29634                           ; BSR set to: 0
 29635                           ;data.c: 359: pr = pr + y*((int32_t)(t16 - tabrow->prCalibPoint[i].pAdcValue))/x;
 29636  000B3C  0100               	movlb	0	; () banked
 29637  000B3E  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29638  000B40  0D08               	mullw	8
 29639  000B42  0E04               	movlw	4
 29640  000B44  26F3               	addwf	prodl,f,c
 29641  000B46  0E00               	movlw	0
 29642  000B48  22F4               	addwfc	prodh,f,c
 29643  000B4A  C07A  F080         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v
 29644  000B4E  C07B  F081         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+1
 29645  000B52  50F3               	movf	prodl,w,c
 29646  000B54  0100               	movlb	0	; () banked
 29647  000B56  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 29648  000B58  50F4               	movf	prodh,w,c
 29649  000B5A  0100               	movlb	0	; () banked
 29650  000B5C  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 29651  000B5E  0E04               	movlw	4
 29652  000B60  0100               	movlb	0	; () banked
 29653  000B62  2580               	addwf	??_m_interp1_cal_p_v& (0+255),w,b
 29654  000B64  6ED9               	movwf	fsr2l,c
 29655  000B66  0E00               	movlw	0
 29656  000B68  0100               	movlb	0	; () banked
 29657  000B6A  2181               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 29658  000B6C  6EDA               	movwf	fsr2h,c
 29659  000B6E  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 29660  000B72  CFDD F083          	movff	postdec2,??_m_interp1_cal_p_v+3
 29661  000B76  0100               	movlb	0	; () banked
 29662  000B78  1F82               	comf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29663  000B7A  1F83               	comf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29664  000B7C  4B82               	infsnz	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29665  000B7E  2B83               	incf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29666  000B80  0100               	movlb	0	; () banked
 29667  000B82  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 29668  000B84  0100               	movlb	0	; () banked
 29669  000B86  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 29670  000B88  0100               	movlb	0	; () banked
 29671  000B8A  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 29672  000B8C  0100               	movlb	0	; () banked
 29673  000B8E  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 29674  000B90  C082  F060         	movff	??_m_interp1_cal_p_v+2,___lmul@multiplier
 29675  000B94  C083  F061         	movff	??_m_interp1_cal_p_v+3,___lmul@multiplier+1
 29676  000B98  0100               	movlb	0	; () banked
 29677  000B9A  0E00               	movlw	0
 29678  000B9C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 29679  000B9E  0EFF               	movlw	-1
 29680  000BA0  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 29681  000BA2  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 29682  000BA4  C08B  F064         	movff	m_interp1_cal_p_v@y,___lmul@multiplicand
 29683  000BA8  C08C  F065         	movff	m_interp1_cal_p_v@y+1,___lmul@multiplicand+1
 29684  000BAC  C08D  F066         	movff	m_interp1_cal_p_v@y+2,___lmul@multiplicand+2
 29685  000BB0  C08E  F067         	movff	m_interp1_cal_p_v@y+3,___lmul@multiplicand+3
 29686  000BB4  EC3C  F040         	call	___lmul	;wreg free
 29687  000BB8  C060  F06C         	movff	?___lmul,___aldiv@dividend
 29688  000BBC  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 29689  000BC0  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 29690  000BC4  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 29691  000BC8  C08F  F070         	movff	m_interp1_cal_p_v@x,___aldiv@divisor
 29692  000BCC  C090  F071         	movff	m_interp1_cal_p_v@x+1,___aldiv@divisor+1
 29693  000BD0  C091  F072         	movff	m_interp1_cal_p_v@x+2,___aldiv@divisor+2
 29694  000BD4  C092  F073         	movff	m_interp1_cal_p_v@x+3,___aldiv@divisor+3
 29695  000BD8  EC3C  F029         	call	___aldiv	;wreg free
 29696  000BDC  0100               	movlb	0	; () banked
 29697  000BDE  5195               	movf	m_interp1_cal_p_v@pr& (0+255),w,b
 29698  000BE0  0100               	movlb	0	; () banked
 29699  000BE2  256C               	addwf	?___aldiv& (0+255),w,b
 29700  000BE4  0100               	movlb	0	; () banked
 29701  000BE6  6F95               	movwf	m_interp1_cal_p_v@pr& (0+255),b
 29702  000BE8  0100               	movlb	0	; () banked
 29703  000BEA  5196               	movf	(m_interp1_cal_p_v@pr+1)& (0+255),w,b
 29704  000BEC  0100               	movlb	0	; () banked
 29705  000BEE  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 29706  000BF0  0100               	movlb	0	; () banked
 29707  000BF2  6F96               	movwf	(m_interp1_cal_p_v@pr+1)& (0+255),b
 29708  000BF4  0100               	movlb	0	; () banked
 29709  000BF6  5197               	movf	(m_interp1_cal_p_v@pr+2)& (0+255),w,b
 29710  000BF8  0100               	movlb	0	; () banked
 29711  000BFA  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 29712  000BFC  0100               	movlb	0	; () banked
 29713  000BFE  6F97               	movwf	(m_interp1_cal_p_v@pr+2)& (0+255),b
 29714  000C00  0100               	movlb	0	; () banked
 29715  000C02  5198               	movf	(m_interp1_cal_p_v@pr+3)& (0+255),w,b
 29716  000C04  0100               	movlb	0	; () banked
 29717  000C06  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 29718  000C08  0100               	movlb	0	; () banked
 29719  000C0A  6F98               	movwf	(m_interp1_cal_p_v@pr+3)& (0+255),b
 29720  000C0C                     l14442:
 29721                           
 29722                           ; BSR set to: 0
 29723                           ;data.c: 360: }
 29724                           ;data.c: 361: xin->pValue=pr;
 29725  000C0C  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 29726  000C10  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 29727  000C14  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 29728  000C18  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 29729  000C1C  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 29730  000C20  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 29731                           
 29732                           ; BSR set to: 0
 29733                           ;data.c: 362: if(xout){
 29734  000C24  0100               	movlb	0	; () banked
 29735  000C26  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 29736  000C28  0100               	movlb	0	; () banked
 29737  000C2A  117F               	iorwf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 29738  000C2C  B4D8               	btfsc	status,2,c
 29739  000C2E  D030               	goto	l14452
 29740                           
 29741                           ; BSR set to: 0
 29742                           ;data.c: 363: xout->pValue = pr;
 29743  000C30  C07E  FFD9         	movff	m_interp1_cal_p_v@xout,fsr2l
 29744  000C34  C07F  FFDA         	movff	m_interp1_cal_p_v@xout+1,fsr2h
 29745  000C38  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 29746  000C3C  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 29747  000C40  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 29748  000C44  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;data.c: 364: xout->pAdcValue = xin->pAdcValue;
 29752  000C48  0100               	movlb	0	; () banked
 29753  000C4A  EE20 F004          	lfsr	2,4
 29754  000C4E  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 29755  000C50  26D9               	addwf	fsr2l,f,c
 29756  000C52  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 29757  000C54  22DA               	addwfc	fsr2h,f,c
 29758  000C56  0100               	movlb	0	; () banked
 29759  000C58  EE10 F004          	lfsr	1,4
 29760  000C5C  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 29761  000C5E  26E1               	addwf	fsr1l,f,c
 29762  000C60  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 29763  000C62  22E2               	addwfc	fsr1h,f,c
 29764  000C64  CFDE FFE6          	movff	postinc2,postinc1
 29765  000C68  CFDD FFE5          	movff	postdec2,postdec1
 29766                           
 29767                           ; BSR set to: 0
 29768                           ;data.c: 365: xout->tAdcValue = tabrow->prCalibPoint[0].tAdcValue;
 29769  000C6C  0100               	movlb	0	; () banked
 29770  000C6E  EE20 F00A          	lfsr	2,10
 29771  000C72  517A               	movf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 29772  000C74  26D9               	addwf	fsr2l,f,c
 29773  000C76  517B               	movf	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 29774  000C78  22DA               	addwfc	fsr2h,f,c
 29775  000C7A  0100               	movlb	0	; () banked
 29776  000C7C  EE10 F006          	lfsr	1,6
 29777  000C80  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 29778  000C82  26E1               	addwf	fsr1l,f,c
 29779  000C84  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 29780  000C86  22E2               	addwfc	fsr1h,f,c
 29781  000C88  CFDE FFE6          	movff	postinc2,postinc1
 29782  000C8C  CFDD FFE5          	movff	postdec2,postdec1
 29783  000C90                     l14452:
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;data.c: 366: }
 29787                           ;data.c: 367: return i;
 29788  000C90  0100               	movlb	0	; () banked
 29789  000C92  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 29790  000C94  0012               	return	
 29791  000C96                     __end_of_m_interp1_cal_p_v:
 29792                           	opt stack 0
 29793                           tosu	equ	0xFFF
 29794                           tosh	equ	0xFFE
 29795                           tosl	equ	0xFFD
 29796                           pclath	equ	0xFFA
 29797                           tblptru	equ	0xFF8
 29798                           tblptrh	equ	0xFF7
 29799                           tblptrl	equ	0xFF6
 29800                           tablat	equ	0xFF5
 29801                           prodh	equ	0xFF4
 29802                           prodl	equ	0xFF3
 29803                           intcon	equ	0xFF2
 29804                           indf0	equ	0xFEF
 29805                           postinc0	equ	0xFEE
 29806                           fsr0h	equ	0xFEA
 29807                           fsr0l	equ	0xFE9
 29808                           wreg	equ	0xFE8
 29809                           indf1	equ	0xFE7
 29810                           postinc1	equ	0xFE6
 29811                           postdec1	equ	0xFE5
 29812                           plusw1	equ	0xFE3
 29813                           fsr1h	equ	0xFE2
 29814                           fsr1l	equ	0xFE1
 29815                           indf2	equ	0xFDF
 29816                           postinc2	equ	0xFDE
 29817                           postdec2	equ	0xFDD
 29818                           plusw2	equ	0xFDB
 29819                           fsr2h	equ	0xFDA
 29820                           fsr2l	equ	0xFD9
 29821                           status	equ	0xFD8
 29822                           
 29823 ;; *************** function _m_interp1_cal_p_t *****************
 29824 ;; Defined at:
 29825 ;;		line 393 in file "src/api/data.c"
 29826 ;; Parameters:    Size  Location     Type
 29827 ;;  tmpx            2   26[BANK0 ] PTR struct .
 29828 ;;		 -> tmpx(24), 
 29829 ;;  xin             2   28[BANK0 ] PTR struct .
 29830 ;;		 -> x_prDiffData(8), 
 29831 ;;  tmpxLen         1   30[BANK0 ] unsigned char 
 29832 ;; Auto vars:     Size  Location     Type
 29833 ;;  pr              4   50[BANK0 ] long 
 29834 ;;  x               4   46[BANK0 ] long 
 29835 ;;  y               4   42[BANK0 ] long 
 29836 ;;  t16             2   54[BANK0 ] int 
 29837 ;;  i               1   56[BANK0 ] unsigned char 
 29838 ;; Return value:  Size  Location     Type
 29839 ;;                  1    wreg      unsigned char 
 29840 ;; Registers used:
 29841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29842 ;; Tracked objects:
 29843 ;;		On entry : 0/0
 29844 ;;		On exit  : 0/0
 29845 ;;		Unchanged: 0/0
 29846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29847 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29848 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29849 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29850 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29851 ;;Total ram usage:       31 bytes
 29852 ;; Hardware stack levels used:    1
 29853 ;; Hardware stack levels required when called:    5
 29854 ;; This function calls:
 29855 ;;		___aldiv
 29856 ;;		___lmul
 29857 ;; This function is called by:
 29858 ;;		_cal_diff_press
 29859 ;; This function uses a non-reentrant model
 29860 ;;
 29861                           
 29862                           	psect	text169
 29863  0015E4                     __ptext169:
 29864                           	opt stack 0
 29865  0015E4                     _m_interp1_cal_p_t:
 29866                           	opt stack 21
 29867                           
 29868                           ;data.c: 395: uint8_t i;
 29869                           ;data.c: 396: int16_t t16;
 29870                           ;data.c: 397: int32_t x,y,pr;
 29871                           ;data.c: 398: t16=xin->tAdcValue;
 29872                           
 29873                           ; BSR set to: 0
 29874                           ;incstack = 0
 29875  0015E4  0100               	movlb	0	; () banked
 29876  0015E6  EE20 F006          	lfsr	2,6
 29877  0015EA  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 29878  0015EC  26D9               	addwf	fsr2l,f,c
 29879  0015EE  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 29880  0015F0  22DA               	addwfc	fsr2h,f,c
 29881  0015F2  CFDE F096          	movff	postinc2,m_interp1_cal_p_t@t16
 29882  0015F6  CFDD F097          	movff	postdec2,m_interp1_cal_p_t@t16+1
 29883                           
 29884                           ; BSR set to: 0
 29885                           ;data.c: 399: for(i=0;i<tmpxLen-2;i++){
 29886  0015FA  0E00               	movlw	0
 29887  0015FC  0100               	movlb	0	; () banked
 29888  0015FE  6F98               	movwf	m_interp1_cal_p_t@i& (0+255),b
 29889  001600  D0BA               	goto	l14472
 29890  001602                     l14460:
 29891                           
 29892                           ; BSR set to: 0
 29893                           ;data.c: 400: if(tmpx[i].tAdcValue < tmpx[i+1].tAdcValue){
 29894  001602  0100               	movlb	0	; () banked
 29895  001604  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 29896  001606  0100               	movlb	0	; () banked
 29897  001608  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 29898  00160A  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 29899  00160C  0100               	movlb	0	; () banked
 29900  00160E  90D8               	bcf	status,0,c
 29901  001610  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29902  001612  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29903  001614  0100               	movlb	0	; () banked
 29904  001616  90D8               	bcf	status,0,c
 29905  001618  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29906  00161A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29907  00161C  0100               	movlb	0	; () banked
 29908  00161E  90D8               	bcf	status,0,c
 29909  001620  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29910  001622  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29911  001624  0E08               	movlw	8
 29912  001626  0100               	movlb	0	; () banked
 29913  001628  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 29914  00162A  0E00               	movlw	0
 29915  00162C  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29916  00162E  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 29917  001632  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 29918  001636  0100               	movlb	0	; () banked
 29919  001638  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 29920  00163A  0100               	movlb	0	; () banked
 29921  00163C  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 29922  00163E  0100               	movlb	0	; () banked
 29923  001640  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 29924  001642  0100               	movlb	0	; () banked
 29925  001644  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 29926  001646  0E06               	movlw	6
 29927  001648  0100               	movlb	0	; () banked
 29928  00164A  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 29929  00164C  6ED9               	movwf	fsr2l,c
 29930  00164E  0E00               	movlw	0
 29931  001650  0100               	movlb	0	; () banked
 29932  001652  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 29933  001654  6EDA               	movwf	fsr2h,c
 29934  001656  0100               	movlb	0	; () banked
 29935  001658  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 29936  00165A  0D08               	mullw	8
 29937  00165C  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 29938  001660  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 29939  001664  50F3               	movf	prodl,w,c
 29940  001666  0100               	movlb	0	; () banked
 29941  001668  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 29942  00166A  50F4               	movf	prodh,w,c
 29943  00166C  0100               	movlb	0	; () banked
 29944  00166E  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 29945  001670  0E06               	movlw	6
 29946  001672  0100               	movlb	0	; () banked
 29947  001674  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 29948  001676  6EE1               	movwf	fsr1l,c
 29949  001678  0E00               	movlw	0
 29950  00167A  0100               	movlb	0	; () banked
 29951  00167C  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 29952  00167E  6EE2               	movwf	fsr1h,c
 29953  001680  50DE               	movf	postinc2,w,c
 29954  001682  5CE6               	subwf	postinc1,w,c
 29955  001684  50E6               	movf	postinc1,w,c
 29956  001686  0A80               	xorlw	128
 29957  001688  0100               	movlb	0	; () banked
 29958  00168A  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 29959  00168C  50DE               	movf	postinc2,w,c
 29960  00168E  0A80               	xorlw	128
 29961  001690  0100               	movlb	0	; () banked
 29962  001692  5989               	subwfb	(??_m_interp1_cal_p_t+10)& (0+255),w,b
 29963  001694  B0D8               	btfsc	status,0,c
 29964  001696  D039               	goto	l14466
 29965                           
 29966                           ; BSR set to: 0
 29967                           ;data.c: 401: if(t16 <= tmpx[i+1].tAdcValue)break;
 29968  001698  0100               	movlb	0	; () banked
 29969  00169A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 29970  00169C  0100               	movlb	0	; () banked
 29971  00169E  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 29972  0016A0  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 29973  0016A2  0100               	movlb	0	; () banked
 29974  0016A4  90D8               	bcf	status,0,c
 29975  0016A6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29976  0016A8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29977  0016AA  0100               	movlb	0	; () banked
 29978  0016AC  90D8               	bcf	status,0,c
 29979  0016AE  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29980  0016B0  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29981  0016B2  0100               	movlb	0	; () banked
 29982  0016B4  90D8               	bcf	status,0,c
 29983  0016B6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 29984  0016B8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29985  0016BA  0E08               	movlw	8
 29986  0016BC  0100               	movlb	0	; () banked
 29987  0016BE  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 29988  0016C0  0E00               	movlw	0
 29989  0016C2  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 29990  0016C4  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 29991  0016C8  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 29992  0016CC  0100               	movlb	0	; () banked
 29993  0016CE  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 29994  0016D0  0100               	movlb	0	; () banked
 29995  0016D2  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 29996  0016D4  0100               	movlb	0	; () banked
 29997  0016D6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 29998  0016D8  0100               	movlb	0	; () banked
 29999  0016DA  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30000  0016DC  0E06               	movlw	6
 30001  0016DE  0100               	movlb	0	; () banked
 30002  0016E0  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30003  0016E2  6ED9               	movwf	fsr2l,c
 30004  0016E4  0E00               	movlw	0
 30005  0016E6  0100               	movlb	0	; () banked
 30006  0016E8  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30007  0016EA  6EDA               	movwf	fsr2h,c
 30008  0016EC  0100               	movlb	0	; () banked
 30009  0016EE  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 30010  0016F0  5CDE               	subwf	postinc2,w,c
 30011  0016F2  50DE               	movf	postinc2,w,c
 30012  0016F4  0A80               	xorlw	128
 30013  0016F6  0100               	movlb	0	; () banked
 30014  0016F8  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 30015  0016FA  0100               	movlb	0	; () banked
 30016  0016FC  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 30017  0016FE  0A80               	xorlw	128
 30018  001700  0100               	movlb	0	; () banked
 30019  001702  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30020  001704  B0D8               	btfsc	status,0,c
 30021  001706  D05F               	goto	l14474
 30022  001708  D034               	goto	l14470
 30023  00170A                     l14466:
 30024                           
 30025                           ; BSR set to: 0
 30026                           ;data.c: 403: if(t16 >= tmpx[i+1].tAdcValue)break;
 30027  00170A  0100               	movlb	0	; () banked
 30028  00170C  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30029  00170E  0100               	movlb	0	; () banked
 30030  001710  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30031  001712  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30032  001714  0100               	movlb	0	; () banked
 30033  001716  90D8               	bcf	status,0,c
 30034  001718  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30035  00171A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30036  00171C  0100               	movlb	0	; () banked
 30037  00171E  90D8               	bcf	status,0,c
 30038  001720  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30039  001722  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30040  001724  0100               	movlb	0	; () banked
 30041  001726  90D8               	bcf	status,0,c
 30042  001728  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30043  00172A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30044  00172C  0E08               	movlw	8
 30045  00172E  0100               	movlb	0	; () banked
 30046  001730  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30047  001732  0E00               	movlw	0
 30048  001734  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30049  001736  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 30050  00173A  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 30051  00173E  0100               	movlb	0	; () banked
 30052  001740  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30053  001742  0100               	movlb	0	; () banked
 30054  001744  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30055  001746  0100               	movlb	0	; () banked
 30056  001748  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30057  00174A  0100               	movlb	0	; () banked
 30058  00174C  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30059  00174E  0E06               	movlw	6
 30060  001750  0100               	movlb	0	; () banked
 30061  001752  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30062  001754  6ED9               	movwf	fsr2l,c
 30063  001756  0E00               	movlw	0
 30064  001758  0100               	movlb	0	; () banked
 30065  00175A  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30066  00175C  6EDA               	movwf	fsr2h,c
 30067  00175E  50DE               	movf	postinc2,w,c
 30068  001760  0100               	movlb	0	; () banked
 30069  001762  5D96               	subwf	m_interp1_cal_p_t@t16& (0+255),w,b
 30070  001764  0100               	movlb	0	; () banked
 30071  001766  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 30072  001768  0A80               	xorlw	128
 30073  00176A  0100               	movlb	0	; () banked
 30074  00176C  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 30075  00176E  50DE               	movf	postinc2,w,c
 30076  001770  D7C6               	goto	L25
 30077  001772                     l14470:
 30078                           
 30079                           ; BSR set to: 0
 30080  001772  0100               	movlb	0	; () banked
 30081  001774  2B98               	incf	m_interp1_cal_p_t@i& (0+255),f,b
 30082  001776                     l14472:
 30083                           
 30084                           ; BSR set to: 0
 30085  001776  0EFE               	movlw	254
 30086  001778  0100               	movlb	0	; () banked
 30087  00177A  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30088  00177C  0EFF               	movlw	255
 30089  00177E  0100               	movlb	0	; () banked
 30090  001780  6F80               	movwf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30091  001782  0100               	movlb	0	; () banked
 30092  001784  517E               	movf	m_interp1_cal_p_t@tmpxLen& (0+255),w,b
 30093  001786  0100               	movlb	0	; () banked
 30094  001788  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 30095  00178A  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 30096  00178C  0100               	movlb	0	; () banked
 30097  00178E  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30098  001790  0100               	movlb	0	; () banked
 30099  001792  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30100  001794  0100               	movlb	0	; () banked
 30101  001796  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30102  001798  0100               	movlb	0	; () banked
 30103  00179A  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30104  00179C  0100               	movlb	0	; () banked
 30105  00179E  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30106  0017A0  0100               	movlb	0	; () banked
 30107  0017A2  6F83               	movwf	(??_m_interp1_cal_p_t+4)& (0+255),b
 30108  0017A4  6B84               	clrf	(??_m_interp1_cal_p_t+5)& (0+255),b
 30109  0017A6  0100               	movlb	0	; () banked
 30110  0017A8  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30111  0017AA  0100               	movlb	0	; () banked
 30112  0017AC  5D83               	subwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 30113  0017AE  0100               	movlb	0	; () banked
 30114  0017B0  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 30115  0017B2  0A80               	xorlw	128
 30116  0017B4  0100               	movlb	0	; () banked
 30117  0017B6  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 30118  0017B8  0100               	movlb	0	; () banked
 30119  0017BA  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30120  0017BC  0A80               	xorlw	128
 30121  0017BE  0100               	movlb	0	; () banked
 30122  0017C0  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30123  0017C2  A0D8               	btfss	status,0,c
 30124  0017C4  D71E               	goto	l14460
 30125  0017C6                     l14474:
 30126                           
 30127                           ; BSR set to: 0
 30128                           ;data.c: 404: }
 30129                           ;data.c: 405: }
 30130                           ;data.c: 406: pr=tmpx[i].pValue;
 30131  0017C6  0100               	movlb	0	; () banked
 30132  0017C8  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30133  0017CA  0D08               	mullw	8
 30134  0017CC  50F3               	movf	prodl,w,c
 30135  0017CE  0100               	movlb	0	; () banked
 30136  0017D0  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 30137  0017D2  6ED9               	movwf	fsr2l,c
 30138  0017D4  50F4               	movf	prodh,w,c
 30139  0017D6  0100               	movlb	0	; () banked
 30140  0017D8  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 30141  0017DA  6EDA               	movwf	fsr2h,c
 30142  0017DC  CFDE F092          	movff	postinc2,m_interp1_cal_p_t@pr
 30143  0017E0  CFDE F093          	movff	postinc2,m_interp1_cal_p_t@pr+1
 30144  0017E4  CFDE F094          	movff	postinc2,m_interp1_cal_p_t@pr+2
 30145  0017E8  CFDE F095          	movff	postinc2,m_interp1_cal_p_t@pr+3
 30146                           
 30147                           ;data.c: 407: y=(tmpx[i+1].pValue-tmpx[i].pValue);
 30148  0017EC  0100               	movlb	0	; () banked
 30149  0017EE  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30150  0017F0  0100               	movlb	0	; () banked
 30151  0017F2  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30152  0017F4  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30153  0017F6  0100               	movlb	0	; () banked
 30154  0017F8  90D8               	bcf	status,0,c
 30155  0017FA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30156  0017FC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30157  0017FE  0100               	movlb	0	; () banked
 30158  001800  90D8               	bcf	status,0,c
 30159  001802  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30160  001804  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30161  001806  0100               	movlb	0	; () banked
 30162  001808  90D8               	bcf	status,0,c
 30163  00180A  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30164  00180C  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30165  00180E  0E08               	movlw	8
 30166  001810  0100               	movlb	0	; () banked
 30167  001812  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30168  001814  0E00               	movlw	0
 30169  001816  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30170  001818  0100               	movlb	0	; () banked
 30171  00181A  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30172  00181C  0100               	movlb	0	; () banked
 30173  00181E  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 30174  001820  6ED9               	movwf	fsr2l,c
 30175  001822  0100               	movlb	0	; () banked
 30176  001824  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30177  001826  0100               	movlb	0	; () banked
 30178  001828  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 30179  00182A  6EDA               	movwf	fsr2h,c
 30180  00182C  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 30181  001830  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 30182  001834  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 30183  001838  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_t+5
 30184  00183C  0100               	movlb	0	; () banked
 30185  00183E  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30186  001840  0D08               	mullw	8
 30187  001842  50F3               	movf	prodl,w,c
 30188  001844  0100               	movlb	0	; () banked
 30189  001846  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 30190  001848  6ED9               	movwf	fsr2l,c
 30191  00184A  50F4               	movf	prodh,w,c
 30192  00184C  0100               	movlb	0	; () banked
 30193  00184E  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 30194  001850  6EDA               	movwf	fsr2h,c
 30195  001852  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_t+6
 30196  001856  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_t+7
 30197  00185A  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 30198  00185E  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_t+9
 30199  001862  0100               	movlb	0	; () banked
 30200  001864  1F85               	comf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 30201  001866  1F86               	comf	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 30202  001868  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 30203  00186A  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 30204  00186C  2B85               	incf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 30205  00186E  0E00               	movlw	0
 30206  001870  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 30207  001872  2387               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 30208  001874  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 30209  001876  0100               	movlb	0	; () banked
 30210  001878  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30211  00187A  0100               	movlb	0	; () banked
 30212  00187C  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30213  00187E  0100               	movlb	0	; () banked
 30214  001880  6F8A               	movwf	m_interp1_cal_p_t@y& (0+255),b
 30215  001882  0100               	movlb	0	; () banked
 30216  001884  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30217  001886  0100               	movlb	0	; () banked
 30218  001888  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 30219  00188A  0100               	movlb	0	; () banked
 30220  00188C  6F8B               	movwf	(m_interp1_cal_p_t@y+1)& (0+255),b
 30221  00188E  0100               	movlb	0	; () banked
 30222  001890  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 30223  001892  0100               	movlb	0	; () banked
 30224  001894  2187               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 30225  001896  0100               	movlb	0	; () banked
 30226  001898  6F8C               	movwf	(m_interp1_cal_p_t@y+2)& (0+255),b
 30227  00189A  0100               	movlb	0	; () banked
 30228  00189C  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 30229  00189E  0100               	movlb	0	; () banked
 30230  0018A0  2188               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),w,b
 30231  0018A2  0100               	movlb	0	; () banked
 30232  0018A4  6F8D               	movwf	(m_interp1_cal_p_t@y+3)& (0+255),b
 30233                           
 30234                           ;data.c: 408: x=(int32_t)(tmpx[i+1].tAdcValue-tmpx[i].tAdcValue);
 30235  0018A6  0100               	movlb	0	; () banked
 30236  0018A8  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30237  0018AA  0100               	movlb	0	; () banked
 30238  0018AC  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30239  0018AE  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30240  0018B0  0100               	movlb	0	; () banked
 30241  0018B2  90D8               	bcf	status,0,c
 30242  0018B4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30243  0018B6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30244  0018B8  0100               	movlb	0	; () banked
 30245  0018BA  90D8               	bcf	status,0,c
 30246  0018BC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30247  0018BE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30248  0018C0  0100               	movlb	0	; () banked
 30249  0018C2  90D8               	bcf	status,0,c
 30250  0018C4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30251  0018C6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30252  0018C8  0E08               	movlw	8
 30253  0018CA  0100               	movlb	0	; () banked
 30254  0018CC  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30255  0018CE  0E00               	movlw	0
 30256  0018D0  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30257  0018D2  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 30258  0018D6  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 30259  0018DA  0100               	movlb	0	; () banked
 30260  0018DC  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30261  0018DE  0100               	movlb	0	; () banked
 30262  0018E0  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30263  0018E2  0100               	movlb	0	; () banked
 30264  0018E4  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30265  0018E6  0100               	movlb	0	; () banked
 30266  0018E8  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30267  0018EA  0E06               	movlw	6
 30268  0018EC  0100               	movlb	0	; () banked
 30269  0018EE  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30270  0018F0  6ED9               	movwf	fsr2l,c
 30271  0018F2  0E00               	movlw	0
 30272  0018F4  0100               	movlb	0	; () banked
 30273  0018F6  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30274  0018F8  6EDA               	movwf	fsr2h,c
 30275  0018FA  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 30276  0018FE  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 30277  001902  0100               	movlb	0	; () banked
 30278  001904  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30279  001906  0D08               	mullw	8
 30280  001908  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 30281  00190C  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 30282  001910  50F3               	movf	prodl,w,c
 30283  001912  0100               	movlb	0	; () banked
 30284  001914  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 30285  001916  50F4               	movf	prodh,w,c
 30286  001918  0100               	movlb	0	; () banked
 30287  00191A  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 30288  00191C  0E06               	movlw	6
 30289  00191E  0100               	movlb	0	; () banked
 30290  001920  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30291  001922  6ED9               	movwf	fsr2l,c
 30292  001924  0E00               	movlw	0
 30293  001926  0100               	movlb	0	; () banked
 30294  001928  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 30295  00192A  6EDA               	movwf	fsr2h,c
 30296  00192C  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 30297  001930  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 30298  001934  0100               	movlb	0	; () banked
 30299  001936  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 30300  001938  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 30301  00193A  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 30302  00193C  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 30303  00193E  0100               	movlb	0	; () banked
 30304  001940  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 30305  001942  0100               	movlb	0	; () banked
 30306  001944  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 30307  001946  0100               	movlb	0	; () banked
 30308  001948  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 30309  00194A  0100               	movlb	0	; () banked
 30310  00194C  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 30311  00194E  C087  F08E         	movff	??_m_interp1_cal_p_t+8,m_interp1_cal_p_t@x
 30312  001952  C088  F08F         	movff	??_m_interp1_cal_p_t+9,m_interp1_cal_p_t@x+1
 30313  001956  0100               	movlb	0	; () banked
 30314  001958  0E00               	movlw	0
 30315  00195A  BF8F               	btfsc	(m_interp1_cal_p_t@x+1)& (0+255),7,b
 30316  00195C  0EFF               	movlw	-1
 30317  00195E  6F90               	movwf	(m_interp1_cal_p_t@x+2)& (0+255),b
 30318  001960  6F91               	movwf	(m_interp1_cal_p_t@x+3)& (0+255),b
 30319                           
 30320                           ; BSR set to: 0
 30321                           ;data.c: 409: if(x!=0){
 30322  001962  0100               	movlb	0	; () banked
 30323  001964  518E               	movf	m_interp1_cal_p_t@x& (0+255),w,b
 30324  001966  0100               	movlb	0	; () banked
 30325  001968  118F               	iorwf	(m_interp1_cal_p_t@x+1)& (0+255),w,b
 30326  00196A  0100               	movlb	0	; () banked
 30327  00196C  1190               	iorwf	(m_interp1_cal_p_t@x+2)& (0+255),w,b
 30328  00196E  0100               	movlb	0	; () banked
 30329  001970  1191               	iorwf	(m_interp1_cal_p_t@x+3)& (0+255),w,b
 30330  001972  B4D8               	btfsc	status,2,c
 30331  001974  D064               	goto	l14480
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;data.c: 411: pr = pr + y*((int32_t)(t16 - tmpx[i].tAdcValue))/x;
 30335  001976  0100               	movlb	0	; () banked
 30336  001978  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30337  00197A  0D08               	mullw	8
 30338  00197C  C07A  F07F         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t
 30339  001980  C07B  F080         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+1
 30340  001984  50F3               	movf	prodl,w,c
 30341  001986  0100               	movlb	0	; () banked
 30342  001988  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30343  00198A  50F4               	movf	prodh,w,c
 30344  00198C  0100               	movlb	0	; () banked
 30345  00198E  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30346  001990  0E06               	movlw	6
 30347  001992  0100               	movlb	0	; () banked
 30348  001994  257F               	addwf	??_m_interp1_cal_p_t& (0+255),w,b
 30349  001996  6ED9               	movwf	fsr2l,c
 30350  001998  0E00               	movlw	0
 30351  00199A  0100               	movlb	0	; () banked
 30352  00199C  2180               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30353  00199E  6EDA               	movwf	fsr2h,c
 30354  0019A0  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 30355  0019A4  CFDD F082          	movff	postdec2,??_m_interp1_cal_p_t+3
 30356  0019A8  0100               	movlb	0	; () banked
 30357  0019AA  1F81               	comf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30358  0019AC  1F82               	comf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30359  0019AE  4B81               	infsnz	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30360  0019B0  2B82               	incf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30361  0019B2  0100               	movlb	0	; () banked
 30362  0019B4  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 30363  0019B6  0100               	movlb	0	; () banked
 30364  0019B8  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30365  0019BA  0100               	movlb	0	; () banked
 30366  0019BC  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 30367  0019BE  0100               	movlb	0	; () banked
 30368  0019C0  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30369  0019C2  C081  F060         	movff	??_m_interp1_cal_p_t+2,___lmul@multiplier
 30370  0019C6  C082  F061         	movff	??_m_interp1_cal_p_t+3,___lmul@multiplier+1
 30371  0019CA  0100               	movlb	0	; () banked
 30372  0019CC  0E00               	movlw	0
 30373  0019CE  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 30374  0019D0  0EFF               	movlw	-1
 30375  0019D2  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 30376  0019D4  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 30377  0019D6  C08A  F064         	movff	m_interp1_cal_p_t@y,___lmul@multiplicand
 30378  0019DA  C08B  F065         	movff	m_interp1_cal_p_t@y+1,___lmul@multiplicand+1
 30379  0019DE  C08C  F066         	movff	m_interp1_cal_p_t@y+2,___lmul@multiplicand+2
 30380  0019E2  C08D  F067         	movff	m_interp1_cal_p_t@y+3,___lmul@multiplicand+3
 30381  0019E6  EC3C  F040         	call	___lmul	;wreg free
 30382  0019EA  C060  F06C         	movff	?___lmul,___aldiv@dividend
 30383  0019EE  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 30384  0019F2  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 30385  0019F6  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 30386  0019FA  C08E  F070         	movff	m_interp1_cal_p_t@x,___aldiv@divisor
 30387  0019FE  C08F  F071         	movff	m_interp1_cal_p_t@x+1,___aldiv@divisor+1
 30388  001A02  C090  F072         	movff	m_interp1_cal_p_t@x+2,___aldiv@divisor+2
 30389  001A06  C091  F073         	movff	m_interp1_cal_p_t@x+3,___aldiv@divisor+3
 30390  001A0A  EC3C  F029         	call	___aldiv	;wreg free
 30391  001A0E  0100               	movlb	0	; () banked
 30392  001A10  5192               	movf	m_interp1_cal_p_t@pr& (0+255),w,b
 30393  001A12  0100               	movlb	0	; () banked
 30394  001A14  256C               	addwf	?___aldiv& (0+255),w,b
 30395  001A16  0100               	movlb	0	; () banked
 30396  001A18  6F92               	movwf	m_interp1_cal_p_t@pr& (0+255),b
 30397  001A1A  0100               	movlb	0	; () banked
 30398  001A1C  5193               	movf	(m_interp1_cal_p_t@pr+1)& (0+255),w,b
 30399  001A1E  0100               	movlb	0	; () banked
 30400  001A20  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 30401  001A22  0100               	movlb	0	; () banked
 30402  001A24  6F93               	movwf	(m_interp1_cal_p_t@pr+1)& (0+255),b
 30403  001A26  0100               	movlb	0	; () banked
 30404  001A28  5194               	movf	(m_interp1_cal_p_t@pr+2)& (0+255),w,b
 30405  001A2A  0100               	movlb	0	; () banked
 30406  001A2C  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 30407  001A2E  0100               	movlb	0	; () banked
 30408  001A30  6F94               	movwf	(m_interp1_cal_p_t@pr+2)& (0+255),b
 30409  001A32  0100               	movlb	0	; () banked
 30410  001A34  5195               	movf	(m_interp1_cal_p_t@pr+3)& (0+255),w,b
 30411  001A36  0100               	movlb	0	; () banked
 30412  001A38  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 30413  001A3A  0100               	movlb	0	; () banked
 30414  001A3C  6F95               	movwf	(m_interp1_cal_p_t@pr+3)& (0+255),b
 30415  001A3E                     l14480:
 30416                           
 30417                           ; BSR set to: 0
 30418                           ;data.c: 412: }
 30419                           ;data.c: 413: xin->pValue=pr;
 30420  001A3E  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 30421  001A42  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 30422  001A46  C092  FFDE         	movff	m_interp1_cal_p_t@pr,postinc2
 30423  001A4A  C093  FFDE         	movff	m_interp1_cal_p_t@pr+1,postinc2
 30424  001A4E  C094  FFDE         	movff	m_interp1_cal_p_t@pr+2,postinc2
 30425  001A52  C095  FFDE         	movff	m_interp1_cal_p_t@pr+3,postinc2
 30426  001A56  0012               	return	
 30427  001A58                     __end_of_m_interp1_cal_p_t:
 30428                           	opt stack 0
 30429                           tosu	equ	0xFFF
 30430                           tosh	equ	0xFFE
 30431                           tosl	equ	0xFFD
 30432                           pclath	equ	0xFFA
 30433                           tblptru	equ	0xFF8
 30434                           tblptrh	equ	0xFF7
 30435                           tblptrl	equ	0xFF6
 30436                           tablat	equ	0xFF5
 30437                           prodh	equ	0xFF4
 30438                           prodl	equ	0xFF3
 30439                           intcon	equ	0xFF2
 30440                           indf0	equ	0xFEF
 30441                           postinc0	equ	0xFEE
 30442                           fsr0h	equ	0xFEA
 30443                           fsr0l	equ	0xFE9
 30444                           wreg	equ	0xFE8
 30445                           indf1	equ	0xFE7
 30446                           postinc1	equ	0xFE6
 30447                           postdec1	equ	0xFE5
 30448                           plusw1	equ	0xFE3
 30449                           fsr1h	equ	0xFE2
 30450                           fsr1l	equ	0xFE1
 30451                           indf2	equ	0xFDF
 30452                           postinc2	equ	0xFDE
 30453                           postdec2	equ	0xFDD
 30454                           plusw2	equ	0xFDB
 30455                           fsr2h	equ	0xFDA
 30456                           fsr2l	equ	0xFD9
 30457                           status	equ	0xFD8
 30458                           
 30459 ;; *************** function ___lmul *****************
 30460 ;; Defined at:
 30461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 30462 ;; Parameters:    Size  Location     Type
 30463 ;;  multiplier      4    0[BANK0 ] unsigned long 
 30464 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 30465 ;; Auto vars:     Size  Location     Type
 30466 ;;  product         4    8[BANK0 ] unsigned long 
 30467 ;; Return value:  Size  Location     Type
 30468 ;;                  4    0[BANK0 ] unsigned long 
 30469 ;; Registers used:
 30470 ;;		wreg, status,2, status,0
 30471 ;; Tracked objects:
 30472 ;;		On entry : 0/0
 30473 ;;		On exit  : 0/0
 30474 ;;		Unchanged: 0/0
 30475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30477 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30479 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30480 ;;Total ram usage:       12 bytes
 30481 ;; Hardware stack levels used:    1
 30482 ;; Hardware stack levels required when called:    4
 30483 ;; This function calls:
 30484 ;;		Nothing
 30485 ;; This function is called by:
 30486 ;;		_m_interp1_cal_p_v
 30487 ;;		_m_interp1_cal_p_t
 30488 ;;		___mflot32_2_int32
 30489 ;;		_cal_pt100_temperature
 30490 ;;		_m_math_pow
 30491 ;; This function uses a non-reentrant model
 30492 ;;
 30493                           
 30494                           	psect	text170
 30495  008078                     __ptext170:
 30496                           	opt stack 0
 30497  008078                     ___lmul:
 30498                           	opt stack 22
 30499                           
 30500                           ; BSR set to: 0
 30501                           ;incstack = 0
 30502  008078  0E00               	movlw	0
 30503  00807A  0100               	movlb	0	; () banked
 30504  00807C  6F68               	movwf	___lmul@product& (0+255),b
 30505  00807E  0E00               	movlw	0
 30506  008080  6F69               	movwf	(___lmul@product+1)& (0+255),b
 30507  008082  0E00               	movlw	0
 30508  008084  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 30509  008086  0E00               	movlw	0
 30510  008088  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 30511  00808A                     l14164:
 30512                           
 30513                           ; BSR set to: 0
 30514  00808A  0100               	movlb	0	; () banked
 30515  00808C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 30516  00808E  D010               	goto	l14168
 30517                           
 30518                           ; BSR set to: 0
 30519  008090  0100               	movlb	0	; () banked
 30520  008092  5164               	movf	___lmul@multiplicand& (0+255),w,b
 30521  008094  0100               	movlb	0	; () banked
 30522  008096  2768               	addwf	___lmul@product& (0+255),f,b
 30523  008098  0100               	movlb	0	; () banked
 30524  00809A  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30525  00809C  0100               	movlb	0	; () banked
 30526  00809E  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 30527  0080A0  0100               	movlb	0	; () banked
 30528  0080A2  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30529  0080A4  0100               	movlb	0	; () banked
 30530  0080A6  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 30531  0080A8  0100               	movlb	0	; () banked
 30532  0080AA  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30533  0080AC  0100               	movlb	0	; () banked
 30534  0080AE  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 30535  0080B0                     l14168:
 30536                           
 30537                           ; BSR set to: 0
 30538  0080B0  0100               	movlb	0	; () banked
 30539  0080B2  90D8               	bcf	status,0,c
 30540  0080B4  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 30541  0080B6  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30542  0080B8  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30543  0080BA  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30544                           
 30545                           ; BSR set to: 0
 30546  0080BC  0100               	movlb	0	; () banked
 30547  0080BE  90D8               	bcf	status,0,c
 30548  0080C0  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30549  0080C2  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30550  0080C4  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30551  0080C6  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 30552  0080C8  0100               	movlb	0	; () banked
 30553  0080CA  5160               	movf	___lmul@multiplier& (0+255),w,b
 30554  0080CC  0100               	movlb	0	; () banked
 30555  0080CE  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30556  0080D0  0100               	movlb	0	; () banked
 30557  0080D2  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30558  0080D4  0100               	movlb	0	; () banked
 30559  0080D6  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30560  0080D8  A4D8               	btfss	status,2,c
 30561  0080DA  D7D7               	goto	l14164
 30562                           
 30563                           ; BSR set to: 0
 30564  0080DC  C068  F060         	movff	___lmul@product,?___lmul
 30565  0080E0  C069  F061         	movff	___lmul@product+1,?___lmul+1
 30566  0080E4  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 30567  0080E8  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 30568                           
 30569                           ; BSR set to: 0
 30570  0080EC  0012               	return		;funcret
 30571  0080EE                     __end_of___lmul:
 30572                           	opt stack 0
 30573                           tosu	equ	0xFFF
 30574                           tosh	equ	0xFFE
 30575                           tosl	equ	0xFFD
 30576                           pclath	equ	0xFFA
 30577                           tblptru	equ	0xFF8
 30578                           tblptrh	equ	0xFF7
 30579                           tblptrl	equ	0xFF6
 30580                           tablat	equ	0xFF5
 30581                           prodh	equ	0xFF4
 30582                           prodl	equ	0xFF3
 30583                           intcon	equ	0xFF2
 30584                           indf0	equ	0xFEF
 30585                           postinc0	equ	0xFEE
 30586                           fsr0h	equ	0xFEA
 30587                           fsr0l	equ	0xFE9
 30588                           wreg	equ	0xFE8
 30589                           indf1	equ	0xFE7
 30590                           postinc1	equ	0xFE6
 30591                           postdec1	equ	0xFE5
 30592                           plusw1	equ	0xFE3
 30593                           fsr1h	equ	0xFE2
 30594                           fsr1l	equ	0xFE1
 30595                           indf2	equ	0xFDF
 30596                           postinc2	equ	0xFDE
 30597                           postdec2	equ	0xFDD
 30598                           plusw2	equ	0xFDB
 30599                           fsr2h	equ	0xFDA
 30600                           fsr2l	equ	0xFD9
 30601                           status	equ	0xFD8
 30602                           
 30603 ;; *************** function ___aldiv *****************
 30604 ;; Defined at:
 30605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 30606 ;; Parameters:    Size  Location     Type
 30607 ;;  dividend        4   12[BANK0 ] long 
 30608 ;;  divisor         4   16[BANK0 ] long 
 30609 ;; Auto vars:     Size  Location     Type
 30610 ;;  quotient        4   22[BANK0 ] long 
 30611 ;;  sign            1   21[BANK0 ] unsigned char 
 30612 ;;  counter         1   20[BANK0 ] unsigned char 
 30613 ;; Return value:  Size  Location     Type
 30614 ;;                  4   12[BANK0 ] long 
 30615 ;; Registers used:
 30616 ;;		wreg, status,2, status,0
 30617 ;; Tracked objects:
 30618 ;;		On entry : 0/0
 30619 ;;		On exit  : 0/0
 30620 ;;		Unchanged: 0/0
 30621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30623 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30625 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30626 ;;Total ram usage:       14 bytes
 30627 ;; Hardware stack levels used:    1
 30628 ;; Hardware stack levels required when called:    4
 30629 ;; This function calls:
 30630 ;;		Nothing
 30631 ;; This function is called by:
 30632 ;;		_m_interp1_cal_p_v
 30633 ;;		_m_interp1_cal_p_t
 30634 ;;		___x_sample_fliter
 30635 ;;		___x_sample_fifo
 30636 ;;		_cal_pt100_temperature
 30637 ;;		_m_int_2_str
 30638 ;; This function uses a non-reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text171
 30642  005278                     __ptext171:
 30643                           	opt stack 0
 30644  005278                     ___aldiv:
 30645                           	opt stack 22
 30646                           
 30647                           ; BSR set to: 0
 30648                           ;incstack = 0
 30649  005278  0E00               	movlw	0
 30650  00527A  0100               	movlb	0	; () banked
 30651  00527C  6F75               	movwf	___aldiv@sign& (0+255),b
 30652                           
 30653                           ; BSR set to: 0
 30654  00527E  0100               	movlb	0	; () banked
 30655  005280  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30656  005282  D00C               	goto	l14180
 30657                           
 30658                           ; BSR set to: 0
 30659  005284  0100               	movlb	0	; () banked
 30660  005286  1F73               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30661  005288  1F72               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30662  00528A  1F71               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30663  00528C  6D70               	negf	___aldiv@divisor& (0+255),b
 30664  00528E  0E00               	movlw	0
 30665  005290  2371               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30666  005292  2372               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30667  005294  2373               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30668                           
 30669                           ; BSR set to: 0
 30670  005296  0E01               	movlw	1
 30671  005298  0100               	movlb	0	; () banked
 30672  00529A  6F75               	movwf	___aldiv@sign& (0+255),b
 30673  00529C                     l14180:
 30674                           
 30675                           ; BSR set to: 0
 30676  00529C  0100               	movlb	0	; () banked
 30677  00529E  AF6F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30678  0052A0  D00C               	goto	l14186
 30679                           
 30680                           ; BSR set to: 0
 30681  0052A2  0100               	movlb	0	; () banked
 30682  0052A4  1F6F               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30683  0052A6  1F6E               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30684  0052A8  1F6D               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30685  0052AA  6D6C               	negf	___aldiv@dividend& (0+255),b
 30686  0052AC  0E00               	movlw	0
 30687  0052AE  236D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30688  0052B0  236E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30689  0052B2  236F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30690                           
 30691                           ; BSR set to: 0
 30692  0052B4  0E01               	movlw	1
 30693  0052B6  0100               	movlb	0	; () banked
 30694  0052B8  1B75               	xorwf	___aldiv@sign& (0+255),f,b
 30695  0052BA                     l14186:
 30696                           
 30697                           ; BSR set to: 0
 30698  0052BA  0E00               	movlw	0
 30699  0052BC  0100               	movlb	0	; () banked
 30700  0052BE  6F76               	movwf	___aldiv@quotient& (0+255),b
 30701  0052C0  0E00               	movlw	0
 30702  0052C2  6F77               	movwf	(___aldiv@quotient+1)& (0+255),b
 30703  0052C4  0E00               	movlw	0
 30704  0052C6  6F78               	movwf	(___aldiv@quotient+2)& (0+255),b
 30705  0052C8  0E00               	movlw	0
 30706  0052CA  6F79               	movwf	(___aldiv@quotient+3)& (0+255),b
 30707                           
 30708                           ; BSR set to: 0
 30709  0052CC  0100               	movlb	0	; () banked
 30710  0052CE  5170               	movf	___aldiv@divisor& (0+255),w,b
 30711  0052D0  0100               	movlb	0	; () banked
 30712  0052D2  1171               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30713  0052D4  0100               	movlb	0	; () banked
 30714  0052D6  1172               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30715  0052D8  0100               	movlb	0	; () banked
 30716  0052DA  1173               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30717  0052DC  B4D8               	btfsc	status,2,c
 30718  0052DE  D042               	goto	l14208
 30719                           
 30720                           ; BSR set to: 0
 30721  0052E0  0E01               	movlw	1
 30722  0052E2  0100               	movlb	0	; () banked
 30723  0052E4  6F74               	movwf	___aldiv@counter& (0+255),b
 30724  0052E6  D008               	goto	l14194
 30725  0052E8                     l14192:
 30726                           
 30727                           ; BSR set to: 0
 30728  0052E8  0100               	movlb	0	; () banked
 30729  0052EA  90D8               	bcf	status,0,c
 30730  0052EC  3770               	rlcf	___aldiv@divisor& (0+255),f,b
 30731  0052EE  3771               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30732  0052F0  3772               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30733  0052F2  3773               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30734  0052F4  0100               	movlb	0	; () banked
 30735  0052F6  2B74               	incf	___aldiv@counter& (0+255),f,b
 30736  0052F8                     l14194:
 30737                           
 30738                           ; BSR set to: 0
 30739  0052F8  0100               	movlb	0	; () banked
 30740  0052FA  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30741  0052FC  D7F5               	goto	l14192
 30742  0052FE                     l14196:
 30743                           
 30744                           ; BSR set to: 0
 30745  0052FE  0100               	movlb	0	; () banked
 30746  005300  90D8               	bcf	status,0,c
 30747  005302  3776               	rlcf	___aldiv@quotient& (0+255),f,b
 30748  005304  3777               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30749  005306  3778               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30750  005308  3779               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30751                           
 30752                           ; BSR set to: 0
 30753  00530A  0100               	movlb	0	; () banked
 30754  00530C  5170               	movf	___aldiv@divisor& (0+255),w,b
 30755  00530E  0100               	movlb	0	; () banked
 30756  005310  5D6C               	subwf	___aldiv@dividend& (0+255),w,b
 30757  005312  0100               	movlb	0	; () banked
 30758  005314  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30759  005316  0100               	movlb	0	; () banked
 30760  005318  596D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30761  00531A  0100               	movlb	0	; () banked
 30762  00531C  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30763  00531E  0100               	movlb	0	; () banked
 30764  005320  596E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30765  005322  0100               	movlb	0	; () banked
 30766  005324  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30767  005326  0100               	movlb	0	; () banked
 30768  005328  596F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30769  00532A  A0D8               	btfss	status,0,c
 30770  00532C  D012               	goto	l14204
 30771                           
 30772                           ; BSR set to: 0
 30773  00532E  0100               	movlb	0	; () banked
 30774  005330  5170               	movf	___aldiv@divisor& (0+255),w,b
 30775  005332  0100               	movlb	0	; () banked
 30776  005334  5F6C               	subwf	___aldiv@dividend& (0+255),f,b
 30777  005336  0100               	movlb	0	; () banked
 30778  005338  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30779  00533A  0100               	movlb	0	; () banked
 30780  00533C  5B6D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30781  00533E  0100               	movlb	0	; () banked
 30782  005340  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30783  005342  0100               	movlb	0	; () banked
 30784  005344  5B6E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30785  005346  0100               	movlb	0	; () banked
 30786  005348  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30787  00534A  0100               	movlb	0	; () banked
 30788  00534C  5B6F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30789                           
 30790                           ; BSR set to: 0
 30791  00534E  0100               	movlb	0	; () banked
 30792  005350  8176               	bsf	___aldiv@quotient& (0+255),0,b
 30793  005352                     l14204:
 30794                           
 30795                           ; BSR set to: 0
 30796  005352  0100               	movlb	0	; () banked
 30797  005354  90D8               	bcf	status,0,c
 30798  005356  3373               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30799  005358  3372               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30800  00535A  3371               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30801  00535C  3370               	rrcf	___aldiv@divisor& (0+255),f,b
 30802                           
 30803                           ; BSR set to: 0
 30804  00535E  0100               	movlb	0	; () banked
 30805  005360  2F74               	decfsz	___aldiv@counter& (0+255),f,b
 30806  005362  D7CD               	goto	l14196
 30807  005364                     l14208:
 30808                           
 30809                           ; BSR set to: 0
 30810  005364  0100               	movlb	0	; () banked
 30811  005366  5175               	movf	___aldiv@sign& (0+255),w,b
 30812  005368  0100               	movlb	0	; () banked
 30813  00536A  B4D8               	btfsc	status,2,c
 30814  00536C  D009               	goto	l14212
 30815                           
 30816                           ; BSR set to: 0
 30817  00536E  0100               	movlb	0	; () banked
 30818  005370  1F79               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30819  005372  1F78               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30820  005374  1F77               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30821  005376  6D76               	negf	___aldiv@quotient& (0+255),b
 30822  005378  0E00               	movlw	0
 30823  00537A  2377               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30824  00537C  2378               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30825  00537E  2379               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30826  005380                     l14212:
 30827                           
 30828                           ; BSR set to: 0
 30829  005380  C076  F06C         	movff	___aldiv@quotient,?___aldiv
 30830  005384  C077  F06D         	movff	___aldiv@quotient+1,?___aldiv+1
 30831  005388  C078  F06E         	movff	___aldiv@quotient+2,?___aldiv+2
 30832  00538C  C079  F06F         	movff	___aldiv@quotient+3,?___aldiv+3
 30833  005390  0012               	return	
 30834  005392                     __end_of___aldiv:
 30835                           	opt stack 0
 30836                           tosu	equ	0xFFF
 30837                           tosh	equ	0xFFE
 30838                           tosl	equ	0xFFD
 30839                           pclath	equ	0xFFA
 30840                           tblptru	equ	0xFF8
 30841                           tblptrh	equ	0xFF7
 30842                           tblptrl	equ	0xFF6
 30843                           tablat	equ	0xFF5
 30844                           prodh	equ	0xFF4
 30845                           prodl	equ	0xFF3
 30846                           intcon	equ	0xFF2
 30847                           indf0	equ	0xFEF
 30848                           postinc0	equ	0xFEE
 30849                           fsr0h	equ	0xFEA
 30850                           fsr0l	equ	0xFE9
 30851                           wreg	equ	0xFE8
 30852                           indf1	equ	0xFE7
 30853                           postinc1	equ	0xFE6
 30854                           postdec1	equ	0xFE5
 30855                           plusw1	equ	0xFE3
 30856                           fsr1h	equ	0xFE2
 30857                           fsr1l	equ	0xFE1
 30858                           indf2	equ	0xFDF
 30859                           postinc2	equ	0xFDE
 30860                           postdec2	equ	0xFDD
 30861                           plusw2	equ	0xFDB
 30862                           fsr2h	equ	0xFDA
 30863                           fsr2l	equ	0xFD9
 30864                           status	equ	0xFD8
 30865                           
 30866 ;; *************** function _cal_diff_p_to_h *****************
 30867 ;; Defined at:
 30868 ;;		line 521 in file "src/api/data.c"
 30869 ;; Parameters:    Size  Location     Type
 30870 ;;  xin             2   98[BANK0 ] PTR struct .
 30871 ;;		 -> x_prDiffData(8), 
 30872 ;; Auto vars:     Size  Location     Type
 30873 ;;  f1              4  104[BANK0 ] float 
 30874 ;;  f2              4  100[BANK0 ] float 
 30875 ;; Return value:  Size  Location     Type
 30876 ;;                  4   98[BANK0 ] long 
 30877 ;; Registers used:
 30878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30879 ;; Tracked objects:
 30880 ;;		On entry : 0/0
 30881 ;;		On exit  : 0/0
 30882 ;;		Unchanged: 0/0
 30883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30885 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30887 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30888 ;;Total ram usage:       10 bytes
 30889 ;; Hardware stack levels used:    1
 30890 ;; Hardware stack levels required when called:    5
 30891 ;; This function calls:
 30892 ;;		___fldiv
 30893 ;;		___flmul
 30894 ;;		___fltol
 30895 ;;		___xxtofl
 30896 ;; This function is called by:
 30897 ;;		_cal_diff_press
 30898 ;; This function uses a non-reentrant model
 30899 ;;
 30900                           
 30901                           	psect	text172
 30902  0056BC                     __ptext172:
 30903                           	opt stack 0
 30904  0056BC                     _cal_diff_p_to_h:
 30905                           	opt stack 21
 30906                           
 30907                           ;data.c: 523: float f1,f2;
 30908                           ;data.c: 525: f1=(float)(xin->pValue);
 30909                           
 30910                           ; BSR set to: 0
 30911                           ;incstack = 0
 30912  0056BC  C0C2  FFD9         	movff	cal_diff_p_to_h@xin,fsr2l
 30913  0056C0  C0C3  FFDA         	movff	cal_diff_p_to_h@xin+1,fsr2h
 30914  0056C4  CFDE F060          	movff	postinc2,___xxtofl@val
 30915  0056C8  CFDE F061          	movff	postinc2,___xxtofl@val+1
 30916  0056CC  CFDE F062          	movff	postinc2,___xxtofl@val+2
 30917  0056D0  CFDE F063          	movff	postinc2,___xxtofl@val+3
 30918  0056D4  0E01               	movlw	1
 30919  0056D6  EC86  F01C         	call	___xxtofl
 30920  0056DA  C060  F0C8         	movff	?___xxtofl,cal_diff_p_to_h@f1
 30921  0056DE  C061  F0C9         	movff	?___xxtofl+1,cal_diff_p_to_h@f1+1
 30922  0056E2  C062  F0CA         	movff	?___xxtofl+2,cal_diff_p_to_h@f1+2
 30923  0056E6  C063  F0CB         	movff	?___xxtofl+3,cal_diff_p_to_h@f1+3
 30924                           
 30925                           ;data.c: 526: f2=(float)(stSysData.density);
 30926  0056EA  C206  F060         	movff	_stSysData+6,___xxtofl@val
 30927  0056EE  C207  F061         	movff	_stSysData+7,___xxtofl@val+1
 30928  0056F2  0100               	movlb	0	; () banked
 30929  0056F4  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 30930  0056F6  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 30931  0056F8  0E00               	movlw	0
 30932  0056FA  EC86  F01C         	call	___xxtofl
 30933  0056FE  C060  F0C4         	movff	?___xxtofl,cal_diff_p_to_h@f2
 30934  005702  C061  F0C5         	movff	?___xxtofl+1,cal_diff_p_to_h@f2+1
 30935  005706  C062  F0C6         	movff	?___xxtofl+2,cal_diff_p_to_h@f2+2
 30936  00570A  C063  F0C7         	movff	?___xxtofl+3,cal_diff_p_to_h@f2+3
 30937                           
 30938                           ;data.c: 527: f1=f1/(f2*9.8f);
 30939  00570E  C0C8  F087         	movff	cal_diff_p_to_h@f1,___fldiv@b
 30940  005712  C0C9  F088         	movff	cal_diff_p_to_h@f1+1,___fldiv@b+1
 30941  005716  C0CA  F089         	movff	cal_diff_p_to_h@f1+2,___fldiv@b+2
 30942  00571A  C0CB  F08A         	movff	cal_diff_p_to_h@f1+3,___fldiv@b+3
 30943  00571E  0ECD               	movlw	205
 30944  005720  0100               	movlb	0	; () banked
 30945  005722  6F72               	movwf	___flmul@a& (0+255),b
 30946  005724  0ECC               	movlw	204
 30947  005726  6F73               	movwf	(___flmul@a+1)& (0+255),b
 30948  005728  0E1C               	movlw	28
 30949  00572A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 30950  00572C  0E41               	movlw	65
 30951  00572E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 30952  005730  C0C4  F06E         	movff	cal_diff_p_to_h@f2,___flmul@b
 30953  005734  C0C5  F06F         	movff	cal_diff_p_to_h@f2+1,___flmul@b+1
 30954  005738  C0C6  F070         	movff	cal_diff_p_to_h@f2+2,___flmul@b+2
 30955  00573C  C0C7  F071         	movff	cal_diff_p_to_h@f2+3,___flmul@b+3
 30956  005740  EC9F  F008         	call	___flmul	;wreg free
 30957  005744  C06E  F08B         	movff	?___flmul,___fldiv@a
 30958  005748  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
 30959  00574C  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
 30960  005750  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
 30961  005754  EC40  F00F         	call	___fldiv	;wreg free
 30962  005758  C087  F0C8         	movff	?___fldiv,cal_diff_p_to_h@f1
 30963  00575C  C088  F0C9         	movff	?___fldiv+1,cal_diff_p_to_h@f1+1
 30964  005760  C089  F0CA         	movff	?___fldiv+2,cal_diff_p_to_h@f1+2
 30965  005764  C08A  F0CB         	movff	?___fldiv+3,cal_diff_p_to_h@f1+3
 30966                           
 30967                           ;data.c: 528: f1*=1000;
 30968  005768  C0C8  F06E         	movff	cal_diff_p_to_h@f1,___flmul@b
 30969  00576C  C0C9  F06F         	movff	cal_diff_p_to_h@f1+1,___flmul@b+1
 30970  005770  C0CA  F070         	movff	cal_diff_p_to_h@f1+2,___flmul@b+2
 30971  005774  C0CB  F071         	movff	cal_diff_p_to_h@f1+3,___flmul@b+3
 30972  005778  0E00               	movlw	0
 30973  00577A  0100               	movlb	0	; () banked
 30974  00577C  6F72               	movwf	___flmul@a& (0+255),b
 30975  00577E  0E00               	movlw	0
 30976  005780  6F73               	movwf	(___flmul@a+1)& (0+255),b
 30977  005782  0E7A               	movlw	122
 30978  005784  6F74               	movwf	(___flmul@a+2)& (0+255),b
 30979  005786  0E44               	movlw	68
 30980  005788  6F75               	movwf	(___flmul@a+3)& (0+255),b
 30981  00578A  EC9F  F008         	call	___flmul	;wreg free
 30982  00578E  C06E  F0C8         	movff	?___flmul,cal_diff_p_to_h@f1
 30983  005792  C06F  F0C9         	movff	?___flmul+1,cal_diff_p_to_h@f1+1
 30984  005796  C070  F0CA         	movff	?___flmul+2,cal_diff_p_to_h@f1+2
 30985  00579A  C071  F0CB         	movff	?___flmul+3,cal_diff_p_to_h@f1+3
 30986                           
 30987                           ;data.c: 529: rtHight=(int32_t)f1;
 30988  00579E  C0C8  F0B8         	movff	cal_diff_p_to_h@f1,___fltol@f1
 30989  0057A2  C0C9  F0B9         	movff	cal_diff_p_to_h@f1+1,___fltol@f1+1
 30990  0057A6  C0CA  F0BA         	movff	cal_diff_p_to_h@f1+2,___fltol@f1+2
 30991  0057AA  C0CB  F0BB         	movff	cal_diff_p_to_h@f1+3,___fltol@f1+3
 30992  0057AE  EC54  F02A         	call	___fltol	;wreg free
 30993  0057B2  C0B8  F0E8         	movff	?___fltol,_rtHight	;volatile
 30994  0057B6  C0B9  F0E9         	movff	?___fltol+1,_rtHight+1	;volatile
 30995  0057BA  C0BA  F0EA         	movff	?___fltol+2,_rtHight+2	;volatile
 30996  0057BE  C0BB  F0EB         	movff	?___fltol+3,_rtHight+3	;volatile
 30997  0057C2  0012               	return	
 30998  0057C4                     __end_of_cal_diff_p_to_h:
 30999                           	opt stack 0
 31000                           tosu	equ	0xFFF
 31001                           tosh	equ	0xFFE
 31002                           tosl	equ	0xFFD
 31003                           pclath	equ	0xFFA
 31004                           tblptru	equ	0xFF8
 31005                           tblptrh	equ	0xFF7
 31006                           tblptrl	equ	0xFF6
 31007                           tablat	equ	0xFF5
 31008                           prodh	equ	0xFF4
 31009                           prodl	equ	0xFF3
 31010                           intcon	equ	0xFF2
 31011                           indf0	equ	0xFEF
 31012                           postinc0	equ	0xFEE
 31013                           fsr0h	equ	0xFEA
 31014                           fsr0l	equ	0xFE9
 31015                           wreg	equ	0xFE8
 31016                           indf1	equ	0xFE7
 31017                           postinc1	equ	0xFE6
 31018                           postdec1	equ	0xFE5
 31019                           plusw1	equ	0xFE3
 31020                           fsr1h	equ	0xFE2
 31021                           fsr1l	equ	0xFE1
 31022                           indf2	equ	0xFDF
 31023                           postinc2	equ	0xFDE
 31024                           postdec2	equ	0xFDD
 31025                           plusw2	equ	0xFDB
 31026                           fsr2h	equ	0xFDA
 31027                           fsr2l	equ	0xFD9
 31028                           status	equ	0xFD8
 31029                           
 31030 ;; *************** function _cal_diff_hight_to_vol_v *****************
 31031 ;; Defined at:
 31032 ;;		line 490 in file "src/api/data.c"
 31033 ;; Parameters:    Size  Location     Type
 31034 ;;  h               4    0[BANK3 ] long 
 31035 ;; Auto vars:     Size  Location     Type
 31036 ;;  f1              4   20[BANK3 ] float 
 31037 ;;  D               4   16[BANK3 ] float 
 31038 ;;  v2              4   12[BANK3 ] float 
 31039 ;;  v1              4    8[BANK3 ] float 
 31040 ;; Return value:  Size  Location     Type
 31041 ;;                  4    0[BANK3 ] long 
 31042 ;; Registers used:
 31043 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31044 ;; Tracked objects:
 31045 ;;		On entry : 0/0
 31046 ;;		On exit  : 0/0
 31047 ;;		Unchanged: 0/0
 31048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31049 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31050 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31052 ;;      Totals:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31053 ;;Total ram usage:       24 bytes
 31054 ;; Hardware stack levels used:    1
 31055 ;; Hardware stack levels required when called:    6
 31056 ;; This function calls:
 31057 ;;		___fladd
 31058 ;;		___fldiv
 31059 ;;		___flge
 31060 ;;		___flmul
 31061 ;;		___flneg
 31062 ;;		___fltol
 31063 ;;		___xxtofl
 31064 ;;		_m_interp1_float_fast
 31065 ;; This function is called by:
 31066 ;;		_cal_diff_press
 31067 ;; This function uses a non-reentrant model
 31068 ;;
 31069                           
 31070                           	psect	text173
 31071  0000DC                     __ptext173:
 31072                           	opt stack 0
 31073  0000DC                     _cal_diff_hight_to_vol_v:
 31074                           	opt stack 20
 31075                           
 31076                           ;data.c: 492: float v1,v2;
 31077                           ;data.c: 493: float f1,D;
 31078                           ;data.c: 494: v1=(float)(stSysData.V1);
 31079                           
 31080                           ;incstack = 0
 31081  0000DC  C210  F060         	movff	_stSysData+16,___xxtofl@val
 31082  0000E0  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 31083  0000E4  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 31084  0000E8  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 31085  0000EC  0E01               	movlw	1
 31086  0000EE  EC86  F01C         	call	___xxtofl
 31087  0000F2  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v1
 31088  0000F6  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v1+1
 31089  0000FA  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v1+2
 31090  0000FE  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v1+3
 31091                           
 31092                           ;data.c: 495: v2=(float)(stSysData.V2);
 31093  000102  C214  F060         	movff	_stSysData+20,___xxtofl@val
 31094  000106  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 31095  00010A  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 31096  00010E  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 31097  000112  0E01               	movlw	1
 31098  000114  EC86  F01C         	call	___xxtofl
 31099  000118  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 31100  00011C  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 31101  000120  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 31102  000124  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 31103                           
 31104                           ;data.c: 497: f1=(float)h;
 31105  000128  C3CA  F060         	movff	cal_diff_hight_to_vol_v@h,___xxtofl@val
 31106  00012C  C3CB  F061         	movff	cal_diff_hight_to_vol_v@h+1,___xxtofl@val+1
 31107  000130  C3CC  F062         	movff	cal_diff_hight_to_vol_v@h+2,___xxtofl@val+2
 31108  000134  C3CD  F063         	movff	cal_diff_hight_to_vol_v@h+3,___xxtofl@val+3
 31109  000138  0E01               	movlw	1
 31110  00013A  EC86  F01C         	call	___xxtofl
 31111  00013E  C060  F3DE         	movff	?___xxtofl,cal_diff_hight_to_vol_v@f1
 31112  000142  C061  F3DF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@f1+1
 31113  000146  C062  F3E0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@f1+2
 31114  00014A  C063  F3E1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@f1+3
 31115                           
 31116                           ;data.c: 498: D=(float)(stSysData.d);
 31117  00014E  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 31118  000152  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 31119  000156  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 31120  00015A  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 31121  00015E  0E00               	movlw	0
 31122  000160  EC86  F01C         	call	___xxtofl
 31123  000164  C060  F3DA         	movff	?___xxtofl,cal_diff_hight_to_vol_v@D
 31124  000168  C061  F3DB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@D+1
 31125  00016C  C062  F3DC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@D+2
 31126  000170  C063  F3DD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@D+3
 31127                           
 31128                           ;data.c: 499: if(f1<D/4){
 31129  000174  C3DE  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 31130  000178  C3DF  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 31131  00017C  C3E0  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 31132  000180  C3E1  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 31133  000184  0E00               	movlw	0
 31134  000186  0100               	movlb	0	; () banked
 31135  000188  6F8B               	movwf	___fldiv@a& (0+255),b
 31136  00018A  0E00               	movlw	0
 31137  00018C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31138  00018E  0E80               	movlw	128
 31139  000190  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31140  000192  0E40               	movlw	64
 31141  000194  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31142  000196  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31143  00019A  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31144  00019E  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31145  0001A2  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31146  0001A6  EC40  F00F         	call	___fldiv	;wreg free
 31147  0001AA  C087  F0BC         	movff	?___fldiv,___flge@ff2
 31148  0001AE  C088  F0BD         	movff	?___fldiv+1,___flge@ff2+1
 31149  0001B2  C089  F0BE         	movff	?___fldiv+2,___flge@ff2+2
 31150  0001B6  C08A  F0BF         	movff	?___fldiv+3,___flge@ff2+3
 31151  0001BA  EC09  F020         	call	___flge	;wreg free
 31152  0001BE  0100               	movlb	0	; () banked
 31153  0001C0  B0D8               	btfsc	status,0,c
 31154  0001C2  D070               	goto	l14566
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;data.c: 500: f1=2*f1/D;
 31158  0001C4  0E00               	movlw	0
 31159  0001C6  0100               	movlb	0	; () banked
 31160  0001C8  6F72               	movwf	___flmul@a& (0+255),b
 31161  0001CA  0E00               	movlw	0
 31162  0001CC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31163  0001CE  0E00               	movlw	0
 31164  0001D0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31165  0001D2  0E40               	movlw	64
 31166  0001D4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31167  0001D6  C3DE  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 31168  0001DA  C3DF  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 31169  0001DE  C3E0  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 31170  0001E2  C3E1  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 31171  0001E6  EC9F  F008         	call	___flmul	;wreg free
 31172  0001EA  C06E  F087         	movff	?___flmul,___fldiv@b
 31173  0001EE  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 31174  0001F2  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 31175  0001F6  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 31176  0001FA  C3DA  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 31177  0001FE  C3DB  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 31178  000202  C3DC  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 31179  000206  C3DD  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 31180  00020A  EC40  F00F         	call	___fldiv	;wreg free
 31181  00020E  C087  F3DE         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 31182  000212  C088  F3DF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 31183  000216  C089  F3E0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 31184  00021A  C08A  F3E1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 31185                           
 31186                           ;data.c: 501: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 31187  00021E  0E17               	movlw	low _hKel
 31188  000220  0100               	movlb	0	; () banked
 31189  000222  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 31190  000224  0EEF               	movlw	high _hKel
 31191  000226  0100               	movlb	0	; () banked
 31192  000228  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 31193  00022A  C3DE  F0C6         	movff	cal_diff_hight_to_vol_v@f1,m_interp1_float_fast@in
 31194  00022E  C3DF  F0C7         	movff	cal_diff_hight_to_vol_v@f1+1,m_interp1_float_fast@in+1
 31195  000232  C3E0  F0C8         	movff	cal_diff_hight_to_vol_v@f1+2,m_interp1_float_fast@in+2
 31196  000236  C3E1  F0C9         	movff	cal_diff_hight_to_vol_v@f1+3,m_interp1_float_fast@in+3
 31197  00023A  0E00               	movlw	0
 31198  00023C  0100               	movlb	0	; () banked
 31199  00023E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 31200  000240  0E65               	movlw	101
 31201  000242  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 31202  000244  EC2C  F00D         	call	_m_interp1_float_fast	;wreg free
 31203  000248  C0C4  F3DE         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_v@f1
 31204  00024C  C0C5  F3DF         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_v@f1+1
 31205  000250  C0C6  F3E0         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_v@f1+2
 31206  000254  C0C7  F3E1         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_v@f1+3
 31207                           
 31208                           ;data.c: 502: v2=(float)(stSysData.V2);
 31209  000258  C214  F060         	movff	_stSysData+20,___xxtofl@val
 31210  00025C  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 31211  000260  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 31212  000264  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 31213  000268  0E01               	movlw	1
 31214  00026A  EC86  F01C         	call	___xxtofl
 31215  00026E  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 31216  000272  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 31217  000276  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 31218  00027A  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 31219                           
 31220                           ;data.c: 503: return (int32_t)v2;
 31221  00027E  C3D6  F0B8         	movff	cal_diff_hight_to_vol_v@v2,___fltol@f1
 31222  000282  C3D7  F0B9         	movff	cal_diff_hight_to_vol_v@v2+1,___fltol@f1+1
 31223  000286  C3D8  F0BA         	movff	cal_diff_hight_to_vol_v@v2+2,___fltol@f1+2
 31224  00028A  C3D9  F0BB         	movff	cal_diff_hight_to_vol_v@v2+3,___fltol@f1+3
 31225  00028E  EC54  F02A         	call	___fltol	;wreg free
 31226  000292  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 31227  000296  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 31228  00029A  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 31229  00029E  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 31230                           
 31231                           ;data.c: 504: }else if(f1<D/4+stSysData.h){
 31232  0002A2  0012               	return	
 31233  0002A4                     l14566:
 31234  0002A4  C3DE  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 31235  0002A8  C3DF  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 31236  0002AC  C3E0  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 31237  0002B0  C3E1  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 31238  0002B4  C208  F060         	movff	_stSysData+8,___xxtofl@val
 31239  0002B8  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 31240  0002BC  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 31241  0002C0  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 31242  0002C4  0E01               	movlw	1
 31243  0002C6  EC86  F01C         	call	___xxtofl
 31244  0002CA  C060  F0A8         	movff	?___xxtofl,___fladd@a
 31245  0002CE  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 31246  0002D2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 31247  0002D6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 31248  0002DA  0E00               	movlw	0
 31249  0002DC  0100               	movlb	0	; () banked
 31250  0002DE  6F8B               	movwf	___fldiv@a& (0+255),b
 31251  0002E0  0E00               	movlw	0
 31252  0002E2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31253  0002E4  0E80               	movlw	128
 31254  0002E6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31255  0002E8  0E40               	movlw	64
 31256  0002EA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31257  0002EC  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31258  0002F0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31259  0002F4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31260  0002F8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31261  0002FC  EC40  F00F         	call	___fldiv	;wreg free
 31262  000300  C087  F0A4         	movff	?___fldiv,___fladd@b
 31263  000304  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 31264  000308  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 31265  00030C  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 31266  000310  EC4B  F006         	call	___fladd	;wreg free
 31267  000314  C0A4  F0BC         	movff	?___fladd,___flge@ff2
 31268  000318  C0A5  F0BD         	movff	?___fladd+1,___flge@ff2+1
 31269  00031C  C0A6  F0BE         	movff	?___fladd+2,___flge@ff2+2
 31270  000320  C0A7  F0BF         	movff	?___fladd+3,___flge@ff2+3
 31271  000324  EC09  F020         	call	___flge	;wreg free
 31272  000328  0100               	movlb	0	; () banked
 31273  00032A  B0D8               	btfsc	status,0,c
 31274  00032C  D0AE               	goto	l14580
 31275                           
 31276                           ; BSR set to: 0
 31277                           ;data.c: 505: f1=f1-D/4;
 31278  00032E  0E00               	movlw	0
 31279  000330  0100               	movlb	0	; () banked
 31280  000332  6F8B               	movwf	___fldiv@a& (0+255),b
 31281  000334  0E00               	movlw	0
 31282  000336  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31283  000338  0E80               	movlw	128
 31284  00033A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31285  00033C  0E40               	movlw	64
 31286  00033E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31287  000340  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31288  000344  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31289  000348  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31290  00034C  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31291  000350  EC40  F00F         	call	___fldiv	;wreg free
 31292  000354  C087  F0A0         	movff	?___fldiv,___flneg@f1
 31293  000358  C088  F0A1         	movff	?___fldiv+1,___flneg@f1+1
 31294  00035C  C089  F0A2         	movff	?___fldiv+2,___flneg@f1+2
 31295  000360  C08A  F0A3         	movff	?___fldiv+3,___flneg@f1+3
 31296  000364  ECDE  F049         	call	___flneg	;wreg free
 31297  000368  C0A0  F0A4         	movff	?___flneg,___fladd@b
 31298  00036C  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 31299  000370  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 31300  000374  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 31301  000378  C3DE  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 31302  00037C  C3DF  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 31303  000380  C3E0  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 31304  000384  C3E1  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 31305  000388  EC4B  F006         	call	___fladd	;wreg free
 31306  00038C  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 31307  000390  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 31308  000394  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 31309  000398  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 31310                           
 31311                           ;data.c: 506: v2=v2*(f1/stSysData.h);
 31312  00039C  C208  F060         	movff	_stSysData+8,___xxtofl@val
 31313  0003A0  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 31314  0003A4  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 31315  0003A8  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 31316  0003AC  0E01               	movlw	1
 31317  0003AE  EC86  F01C         	call	___xxtofl
 31318  0003B2  C060  F08B         	movff	?___xxtofl,___fldiv@a
 31319  0003B6  C061  F08C         	movff	?___xxtofl+1,___fldiv@a+1
 31320  0003BA  C062  F08D         	movff	?___xxtofl+2,___fldiv@a+2
 31321  0003BE  C063  F08E         	movff	?___xxtofl+3,___fldiv@a+3
 31322  0003C2  C3DE  F087         	movff	cal_diff_hight_to_vol_v@f1,___fldiv@b
 31323  0003C6  C3DF  F088         	movff	cal_diff_hight_to_vol_v@f1+1,___fldiv@b+1
 31324  0003CA  C3E0  F089         	movff	cal_diff_hight_to_vol_v@f1+2,___fldiv@b+2
 31325  0003CE  C3E1  F08A         	movff	cal_diff_hight_to_vol_v@f1+3,___fldiv@b+3
 31326  0003D2  EC40  F00F         	call	___fldiv	;wreg free
 31327  0003D6  C087  F06E         	movff	?___fldiv,___flmul@b
 31328  0003DA  C088  F06F         	movff	?___fldiv+1,___flmul@b+1
 31329  0003DE  C089  F070         	movff	?___fldiv+2,___flmul@b+2
 31330  0003E2  C08A  F071         	movff	?___fldiv+3,___flmul@b+3
 31331  0003E6  C3D6  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 31332  0003EA  C3D7  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 31333  0003EE  C3D8  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 31334  0003F2  C3D9  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 31335  0003F6  EC9F  F008         	call	___flmul	;wreg free
 31336  0003FA  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 31337  0003FE  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 31338  000402  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 31339  000406  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 31340                           
 31341                           ;data.c: 507: v1=v1/2;
 31342  00040A  C3D2  F087         	movff	cal_diff_hight_to_vol_v@v1,___fldiv@b
 31343  00040E  C3D3  F088         	movff	cal_diff_hight_to_vol_v@v1+1,___fldiv@b+1
 31344  000412  C3D4  F089         	movff	cal_diff_hight_to_vol_v@v1+2,___fldiv@b+2
 31345  000416  C3D5  F08A         	movff	cal_diff_hight_to_vol_v@v1+3,___fldiv@b+3
 31346  00041A  0E00               	movlw	0
 31347  00041C  0100               	movlb	0	; () banked
 31348  00041E  6F8B               	movwf	___fldiv@a& (0+255),b
 31349  000420  0E00               	movlw	0
 31350  000422  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31351  000424  0E00               	movlw	0
 31352  000426  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31353  000428  0E40               	movlw	64
 31354  00042A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31355  00042C  EC40  F00F         	call	___fldiv	;wreg free
 31356  000430  C087  F3D2         	movff	?___fldiv,cal_diff_hight_to_vol_v@v1
 31357  000434  C088  F3D3         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@v1+1
 31358  000438  C089  F3D4         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@v1+2
 31359  00043C  C08A  F3D5         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@v1+3
 31360                           
 31361                           ;data.c: 508: return (int32_t)(v1+v2);
 31362  000440  C3D6  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 31363  000444  C3D7  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 31364  000448  C3D8  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 31365  00044C  C3D9  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 31366  000450  C3D2  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 31367  000454  C3D3  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 31368  000458  C3D4  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 31369  00045C  C3D5  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 31370  000460  EC4B  F006         	call	___fladd	;wreg free
 31371  000464  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 31372  000468  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 31373  00046C  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 31374  000470  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 31375  000474  EC54  F02A         	call	___fltol	;wreg free
 31376  000478  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 31377  00047C  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 31378  000480  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 31379  000484  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 31380                           
 31381                           ;data.c: 509: }else{
 31382  000488  0012               	return	
 31383  00048A                     l14580:
 31384                           
 31385                           ;data.c: 510: if(f1>(float)(stSysData.h)+D/2)f1=(float)(stSysData.h)+D/2;
 31386  00048A  0E00               	movlw	0
 31387  00048C  0100               	movlb	0	; () banked
 31388  00048E  6F8B               	movwf	___fldiv@a& (0+255),b
 31389  000490  0E00               	movlw	0
 31390  000492  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31391  000494  0E00               	movlw	0
 31392  000496  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31393  000498  0E40               	movlw	64
 31394  00049A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31395  00049C  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31396  0004A0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31397  0004A4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31398  0004A8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31399  0004AC  EC40  F00F         	call	___fldiv	;wreg free
 31400  0004B0  C087  F0A8         	movff	?___fldiv,___fladd@a
 31401  0004B4  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 31402  0004B8  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 31403  0004BC  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 31404  0004C0  C208  F060         	movff	_stSysData+8,___xxtofl@val
 31405  0004C4  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 31406  0004C8  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 31407  0004CC  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 31408  0004D0  0E01               	movlw	1
 31409  0004D2  EC86  F01C         	call	___xxtofl
 31410  0004D6  C060  F0A4         	movff	?___xxtofl,___fladd@b
 31411  0004DA  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 31412  0004DE  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 31413  0004E2  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 31414  0004E6  EC4B  F006         	call	___fladd	;wreg free
 31415  0004EA  C0A4  F0B8         	movff	?___fladd,___flge@ff1
 31416  0004EE  C0A5  F0B9         	movff	?___fladd+1,___flge@ff1+1
 31417  0004F2  C0A6  F0BA         	movff	?___fladd+2,___flge@ff1+2
 31418  0004F6  C0A7  F0BB         	movff	?___fladd+3,___flge@ff1+3
 31419  0004FA  C3DE  F0BC         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff2
 31420  0004FE  C3DF  F0BD         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff2+1
 31421  000502  C3E0  F0BE         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff2+2
 31422  000506  C3E1  F0BF         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff2+3
 31423  00050A  EC09  F020         	call	___flge	;wreg free
 31424  00050E  0100               	movlb	0	; () banked
 31425  000510  B0D8               	btfsc	status,0,c
 31426  000512  D038               	goto	l176
 31427                           
 31428                           ; BSR set to: 0
 31429  000514  C208  F060         	movff	_stSysData+8,___xxtofl@val
 31430  000518  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 31431  00051C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 31432  000520  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 31433  000524  0E01               	movlw	1
 31434  000526  EC86  F01C         	call	___xxtofl
 31435  00052A  C060  F0A4         	movff	?___xxtofl,___fladd@b
 31436  00052E  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 31437  000532  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 31438  000536  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 31439  00053A  0E00               	movlw	0
 31440  00053C  0100               	movlb	0	; () banked
 31441  00053E  6F8B               	movwf	___fldiv@a& (0+255),b
 31442  000540  0E00               	movlw	0
 31443  000542  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31444  000544  0E00               	movlw	0
 31445  000546  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31446  000548  0E40               	movlw	64
 31447  00054A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31448  00054C  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31449  000550  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31450  000554  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31451  000558  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31452  00055C  EC40  F00F         	call	___fldiv	;wreg free
 31453  000560  C087  F0A8         	movff	?___fldiv,___fladd@a
 31454  000564  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 31455  000568  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 31456  00056C  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 31457  000570  EC4B  F006         	call	___fladd	;wreg free
 31458  000574  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 31459  000578  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 31460  00057C  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 31461  000580  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 31462  000584                     l176:
 31463                           
 31464                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 31465  000584  C208  F060         	movff	_stSysData+8,___xxtofl@val
 31466  000588  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 31467  00058C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 31468  000590  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 31469  000594  0E01               	movlw	1
 31470  000596  EC86  F01C         	call	___xxtofl
 31471  00059A  C060  F0A8         	movff	?___xxtofl,___fladd@a
 31472  00059E  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 31473  0005A2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 31474  0005A6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 31475  0005AA  0E00               	movlw	0
 31476  0005AC  0100               	movlb	0	; () banked
 31477  0005AE  6F8B               	movwf	___fldiv@a& (0+255),b
 31478  0005B0  0E00               	movlw	0
 31479  0005B2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 31480  0005B4  0E80               	movlw	128
 31481  0005B6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 31482  0005B8  0E40               	movlw	64
 31483  0005BA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 31484  0005BC  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 31485  0005C0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 31486  0005C4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 31487  0005C8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 31488  0005CC  EC40  F00F         	call	___fldiv	;wreg free
 31489  0005D0  C087  F0A4         	movff	?___fldiv,___fladd@b
 31490  0005D4  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 31491  0005D8  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 31492  0005DC  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 31493  0005E0  EC4B  F006         	call	___fladd	;wreg free
 31494  0005E4  C0A4  F0A0         	movff	?___fladd,___flneg@f1
 31495  0005E8  C0A5  F0A1         	movff	?___fladd+1,___flneg@f1+1
 31496  0005EC  C0A6  F0A2         	movff	?___fladd+2,___flneg@f1+2
 31497  0005F0  C0A7  F0A3         	movff	?___fladd+3,___flneg@f1+3
 31498  0005F4  ECDE  F049         	call	___flneg	;wreg free
 31499  0005F8  C0A0  F3CE         	movff	?___flneg,_cal_diff_hight_to_vol_v$5840
 31500  0005FC  C0A1  F3CF         	movff	?___flneg+1,_cal_diff_hight_to_vol_v$5840+1
 31501  000600  C0A2  F3D0         	movff	?___flneg+2,_cal_diff_hight_to_vol_v$5840+2
 31502  000604  C0A3  F3D1         	movff	?___flneg+3,_cal_diff_hight_to_vol_v$5840+3
 31503                           
 31504                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 31505  000608  C3CE  F0A4         	movff	_cal_diff_hight_to_vol_v$5840,___fladd@b
 31506  00060C  C3CF  F0A5         	movff	_cal_diff_hight_to_vol_v$5840+1,___fladd@b+1
 31507  000610  C3D0  F0A6         	movff	_cal_diff_hight_to_vol_v$5840+2,___fladd@b+2
 31508  000614  C3D1  F0A7         	movff	_cal_diff_hight_to_vol_v$5840+3,___fladd@b+3
 31509  000618  C3DE  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 31510  00061C  C3DF  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 31511  000620  C3E0  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 31512  000624  C3E1  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 31513  000628  EC4B  F006         	call	___fladd	;wreg free
 31514  00062C  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 31515  000630  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 31516  000634  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 31517  000638  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 31518                           
 31519                           ;data.c: 513: f1=2*f1/D;
 31520  00063C  0E00               	movlw	0
 31521  00063E  0100               	movlb	0	; () banked
 31522  000640  6F72               	movwf	___flmul@a& (0+255),b
 31523  000642  0E00               	movlw	0
 31524  000644  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31525  000646  0E00               	movlw	0
 31526  000648  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31527  00064A  0E40               	movlw	64
 31528  00064C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31529  00064E  C3DE  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 31530  000652  C3DF  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 31531  000656  C3E0  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 31532  00065A  C3E1  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 31533  00065E  EC9F  F008         	call	___flmul	;wreg free
 31534  000662  C06E  F087         	movff	?___flmul,___fldiv@b
 31535  000666  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 31536  00066A  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 31537  00066E  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 31538  000672  C3DA  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 31539  000676  C3DB  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 31540  00067A  C3DC  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 31541  00067E  C3DD  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 31542  000682  EC40  F00F         	call	___fldiv	;wreg free
 31543  000686  C087  F3DE         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 31544  00068A  C088  F3DF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 31545  00068E  C089  F3E0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 31546  000692  C08A  F3E1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 31547                           
 31548                           ;data.c: 514: f1=0.5-f1;
 31549  000696  C3DE  F0A0         	movff	cal_diff_hight_to_vol_v@f1,___flneg@f1
 31550  00069A  C3DF  F0A1         	movff	cal_diff_hight_to_vol_v@f1+1,___flneg@f1+1
 31551  00069E  C3E0  F0A2         	movff	cal_diff_hight_to_vol_v@f1+2,___flneg@f1+2
 31552  0006A2  C3E1  F0A3         	movff	cal_diff_hight_to_vol_v@f1+3,___flneg@f1+3
 31553  0006A6  ECDE  F049         	call	___flneg	;wreg free
 31554  0006AA  C0A0  F0A4         	movff	?___flneg,___fladd@b
 31555  0006AE  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 31556  0006B2  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 31557  0006B6  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 31558  0006BA  0E00               	movlw	0
 31559  0006BC  0100               	movlb	0	; () banked
 31560  0006BE  6FA8               	movwf	___fladd@a& (0+255),b
 31561  0006C0  0E00               	movlw	0
 31562  0006C2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 31563  0006C4  0E00               	movlw	0
 31564  0006C6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 31565  0006C8  0E3F               	movlw	63
 31566  0006CA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 31567  0006CC  EC4B  F006         	call	___fladd	;wreg free
 31568  0006D0  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 31569  0006D4  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 31570  0006D8  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 31571  0006DC  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 31572                           
 31573                           ;data.c: 515: v2=v2*(0.5+f1);
 31574  0006E0  0E00               	movlw	0
 31575  0006E2  0100               	movlb	0	; () banked
 31576  0006E4  6FA8               	movwf	___fladd@a& (0+255),b
 31577  0006E6  0E00               	movlw	0
 31578  0006E8  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 31579  0006EA  0E00               	movlw	0
 31580  0006EC  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 31581  0006EE  0E3F               	movlw	63
 31582  0006F0  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 31583  0006F2  C3DE  F0A4         	movff	cal_diff_hight_to_vol_v@f1,___fladd@b
 31584  0006F6  C3DF  F0A5         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@b+1
 31585  0006FA  C3E0  F0A6         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@b+2
 31586  0006FE  C3E1  F0A7         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@b+3
 31587  000702  EC4B  F006         	call	___fladd	;wreg free
 31588  000706  C0A4  F06E         	movff	?___fladd,___flmul@b
 31589  00070A  C0A5  F06F         	movff	?___fladd+1,___flmul@b+1
 31590  00070E  C0A6  F070         	movff	?___fladd+2,___flmul@b+2
 31591  000712  C0A7  F071         	movff	?___fladd+3,___flmul@b+3
 31592  000716  C3D6  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 31593  00071A  C3D7  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 31594  00071E  C3D8  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 31595  000722  C3D9  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 31596  000726  EC9F  F008         	call	___flmul	;wreg free
 31597  00072A  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 31598  00072E  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 31599  000732  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 31600  000736  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 31601                           
 31602                           ;data.c: 516: return (int32_t)(v1+v2);
 31603  00073A  C3D6  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 31604  00073E  C3D7  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 31605  000742  C3D8  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 31606  000746  C3D9  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 31607  00074A  C3D2  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 31608  00074E  C3D3  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 31609  000752  C3D4  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 31610  000756  C3D5  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 31611  00075A  EC4B  F006         	call	___fladd	;wreg free
 31612  00075E  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 31613  000762  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 31614  000766  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 31615  00076A  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 31616  00076E  EC54  F02A         	call	___fltol	;wreg free
 31617  000772  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 31618  000776  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 31619  00077A  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 31620  00077E  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 31621  000782  0012               	return	
 31622  000784                     __end_of_cal_diff_hight_to_vol_v:
 31623                           	opt stack 0
 31624                           tosu	equ	0xFFF
 31625                           tosh	equ	0xFFE
 31626                           tosl	equ	0xFFD
 31627                           pclath	equ	0xFFA
 31628                           tblptru	equ	0xFF8
 31629                           tblptrh	equ	0xFF7
 31630                           tblptrl	equ	0xFF6
 31631                           tablat	equ	0xFF5
 31632                           prodh	equ	0xFF4
 31633                           prodl	equ	0xFF3
 31634                           intcon	equ	0xFF2
 31635                           indf0	equ	0xFEF
 31636                           postinc0	equ	0xFEE
 31637                           fsr0h	equ	0xFEA
 31638                           fsr0l	equ	0xFE9
 31639                           wreg	equ	0xFE8
 31640                           indf1	equ	0xFE7
 31641                           postinc1	equ	0xFE6
 31642                           postdec1	equ	0xFE5
 31643                           plusw1	equ	0xFE3
 31644                           fsr1h	equ	0xFE2
 31645                           fsr1l	equ	0xFE1
 31646                           indf2	equ	0xFDF
 31647                           postinc2	equ	0xFDE
 31648                           postdec2	equ	0xFDD
 31649                           plusw2	equ	0xFDB
 31650                           fsr2h	equ	0xFDA
 31651                           fsr2l	equ	0xFD9
 31652                           status	equ	0xFD8
 31653                           
 31654 ;; *************** function _cal_diff_hight_to_vol_h *****************
 31655 ;; Defined at:
 31656 ;;		line 446 in file "src/api/data.c"
 31657 ;; Parameters:    Size  Location     Type
 31658 ;;  h               4    0[BANK3 ] long 
 31659 ;; Auto vars:     Size  Location     Type
 31660 ;;  f1              4   16[BANK3 ] float 
 31661 ;;  v1              4   12[BANK3 ] float 
 31662 ;;  f2              4    8[BANK3 ] float 
 31663 ;;  v2              4    4[BANK3 ] float 
 31664 ;; Return value:  Size  Location     Type
 31665 ;;                  4    0[BANK3 ] long 
 31666 ;; Registers used:
 31667 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31668 ;; Tracked objects:
 31669 ;;		On entry : 0/0
 31670 ;;		On exit  : 0/0
 31671 ;;		Unchanged: 0/0
 31672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31673 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31674 ;;      Locals:         0       0       0       0      16       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31676 ;;      Totals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31677 ;;Total ram usage:       20 bytes
 31678 ;; Hardware stack levels used:    1
 31679 ;; Hardware stack levels required when called:    6
 31680 ;; This function calls:
 31681 ;;		___fladd
 31682 ;;		___fldiv
 31683 ;;		___flge
 31684 ;;		___flmul
 31685 ;;		___fltol
 31686 ;;		___xxtofl
 31687 ;;		_m_interp1_float_fast
 31688 ;; This function is called by:
 31689 ;;		_cal_diff_press
 31690 ;; This function uses a non-reentrant model
 31691 ;;
 31692                           
 31693                           	psect	text174
 31694  002E86                     __ptext174:
 31695                           	opt stack 0
 31696  002E86                     _cal_diff_hight_to_vol_h:
 31697                           	opt stack 20
 31698                           
 31699                           ;data.c: 448: float v1,v2;
 31700                           ;data.c: 449: float f1,f2;
 31701                           ;data.c: 450: f1=(float)h;
 31702                           
 31703                           ;incstack = 0
 31704  002E86  C3CA  F060         	movff	cal_diff_hight_to_vol_h@h,___xxtofl@val
 31705  002E8A  C3CB  F061         	movff	cal_diff_hight_to_vol_h@h+1,___xxtofl@val+1
 31706  002E8E  C3CC  F062         	movff	cal_diff_hight_to_vol_h@h+2,___xxtofl@val+2
 31707  002E92  C3CD  F063         	movff	cal_diff_hight_to_vol_h@h+3,___xxtofl@val+3
 31708  002E96  0E01               	movlw	1
 31709  002E98  EC86  F01C         	call	___xxtofl
 31710  002E9C  C060  F3DA         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f1
 31711  002EA0  C061  F3DB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f1+1
 31712  002EA4  C062  F3DC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f1+2
 31713  002EA8  C063  F3DD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f1+3
 31714                           
 31715                           ;data.c: 451: if(f1<0.0)f1=0.0;
 31716  002EAC  0103               	movlb	3	; () banked
 31717  002EAE  AFDD               	btfss	(cal_diff_hight_to_vol_h@f1+3)& (0+255),7,b
 31718  002EB0  D009               	goto	l14490
 31719                           
 31720                           ; BSR set to: 3
 31721  002EB2  0E00               	movlw	0
 31722  002EB4  0103               	movlb	3	; () banked
 31723  002EB6  6FDA               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 31724  002EB8  0E00               	movlw	0
 31725  002EBA  6FDB               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 31726  002EBC  0E00               	movlw	0
 31727  002EBE  6FDC               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 31728  002EC0  0E00               	movlw	0
 31729  002EC2  6FDD               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 31730  002EC4                     l14490:
 31731                           
 31732                           ; BSR set to: 3
 31733                           ;data.c: 452: f2=(float)(stSysData.d);
 31734  002EC4  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 31735  002EC8  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 31736  002ECC  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 31737  002ED0  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 31738  002ED4  0E00               	movlw	0
 31739  002ED6  EC86  F01C         	call	___xxtofl
 31740  002EDA  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f2
 31741  002EDE  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f2+1
 31742  002EE2  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f2+2
 31743  002EE6  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f2+3
 31744                           
 31745                           ;data.c: 453: f1=f1/f2;
 31746  002EEA  C3DA  F087         	movff	cal_diff_hight_to_vol_h@f1,___fldiv@b
 31747  002EEE  C3DB  F088         	movff	cal_diff_hight_to_vol_h@f1+1,___fldiv@b+1
 31748  002EF2  C3DC  F089         	movff	cal_diff_hight_to_vol_h@f1+2,___fldiv@b+2
 31749  002EF6  C3DD  F08A         	movff	cal_diff_hight_to_vol_h@f1+3,___fldiv@b+3
 31750  002EFA  C3D2  F08B         	movff	cal_diff_hight_to_vol_h@f2,___fldiv@a
 31751  002EFE  C3D3  F08C         	movff	cal_diff_hight_to_vol_h@f2+1,___fldiv@a+1
 31752  002F02  C3D4  F08D         	movff	cal_diff_hight_to_vol_h@f2+2,___fldiv@a+2
 31753  002F06  C3D5  F08E         	movff	cal_diff_hight_to_vol_h@f2+3,___fldiv@a+3
 31754  002F0A  EC40  F00F         	call	___fldiv	;wreg free
 31755  002F0E  C087  F3DA         	movff	?___fldiv,cal_diff_hight_to_vol_h@f1
 31756  002F12  C088  F3DB         	movff	?___fldiv+1,cal_diff_hight_to_vol_h@f1+1
 31757  002F16  C089  F3DC         	movff	?___fldiv+2,cal_diff_hight_to_vol_h@f1+2
 31758  002F1A  C08A  F3DD         	movff	?___fldiv+3,cal_diff_hight_to_vol_h@f1+3
 31759                           
 31760                           ;data.c: 454: if(f1>1.0)f1=1.0;
 31761  002F1E  0E00               	movlw	0
 31762  002F20  0100               	movlb	0	; () banked
 31763  002F22  6FB8               	movwf	___flge@ff1& (0+255),b
 31764  002F24  0E00               	movlw	0
 31765  002F26  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 31766  002F28  0E80               	movlw	128
 31767  002F2A  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 31768  002F2C  0E3F               	movlw	63
 31769  002F2E  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 31770  002F30  C3DA  F0BC         	movff	cal_diff_hight_to_vol_h@f1,___flge@ff2
 31771  002F34  C3DB  F0BD         	movff	cal_diff_hight_to_vol_h@f1+1,___flge@ff2+1
 31772  002F38  C3DC  F0BE         	movff	cal_diff_hight_to_vol_h@f1+2,___flge@ff2+2
 31773  002F3C  C3DD  F0BF         	movff	cal_diff_hight_to_vol_h@f1+3,___flge@ff2+3
 31774  002F40  EC09  F020         	call	___flge	;wreg free
 31775  002F44  0100               	movlb	0	; () banked
 31776  002F46  B0D8               	btfsc	status,0,c
 31777  002F48  D009               	goto	l14498
 31778                           
 31779                           ; BSR set to: 0
 31780  002F4A  0E00               	movlw	0
 31781  002F4C  0103               	movlb	3	; () banked
 31782  002F4E  6FDA               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 31783  002F50  0E00               	movlw	0
 31784  002F52  6FDB               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 31785  002F54  0E80               	movlw	128
 31786  002F56  6FDC               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 31787  002F58  0E3F               	movlw	63
 31788  002F5A  6FDD               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 31789  002F5C                     l14498:
 31790                           
 31791                           ;data.c: 456: f2=f1;
 31792  002F5C  C3DA  F3D2         	movff	cal_diff_hight_to_vol_h@f1,cal_diff_hight_to_vol_h@f2
 31793  002F60  C3DB  F3D3         	movff	cal_diff_hight_to_vol_h@f1+1,cal_diff_hight_to_vol_h@f2+1
 31794  002F64  C3DC  F3D4         	movff	cal_diff_hight_to_vol_h@f1+2,cal_diff_hight_to_vol_h@f2+2
 31795  002F68  C3DD  F3D5         	movff	cal_diff_hight_to_vol_h@f1+3,cal_diff_hight_to_vol_h@f2+3
 31796                           
 31797                           ;data.c: 457: f1=m_interp1_float_fast((float*)hKcy,f1,sizeof(hKcy)/sizeof(hKcy[0]));
 31798  002F6C  0EAB               	movlw	low _hKcy
 31799  002F6E  0100               	movlb	0	; () banked
 31800  002F70  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 31801  002F72  0EF0               	movlw	high _hKcy
 31802  002F74  0100               	movlb	0	; () banked
 31803  002F76  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 31804  002F78  C3DA  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 31805  002F7C  C3DB  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 31806  002F80  C3DC  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 31807  002F84  C3DD  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 31808  002F88  0E00               	movlw	0
 31809  002F8A  0100               	movlb	0	; () banked
 31810  002F8C  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 31811  002F8E  0E65               	movlw	101
 31812  002F90  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 31813  002F92  EC2C  F00D         	call	_m_interp1_float_fast	;wreg free
 31814  002F96  C0C4  F3DA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 31815  002F9A  C0C5  F3DB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 31816  002F9E  C0C6  F3DC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 31817  002FA2  C0C7  F3DD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 31818                           
 31819                           ;data.c: 458: v1=(float)(stSysData.V1);
 31820  002FA6  C210  F060         	movff	_stSysData+16,___xxtofl@val
 31821  002FAA  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 31822  002FAE  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 31823  002FB2  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 31824  002FB6  0E01               	movlw	1
 31825  002FB8  EC86  F01C         	call	___xxtofl
 31826  002FBC  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v1
 31827  002FC0  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v1+1
 31828  002FC4  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v1+2
 31829  002FC8  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v1+3
 31830                           
 31831                           ;data.c: 459: v1=v1*f1;
 31832  002FCC  C3D6  F06E         	movff	cal_diff_hight_to_vol_h@v1,___flmul@b
 31833  002FD0  C3D7  F06F         	movff	cal_diff_hight_to_vol_h@v1+1,___flmul@b+1
 31834  002FD4  C3D8  F070         	movff	cal_diff_hight_to_vol_h@v1+2,___flmul@b+2
 31835  002FD8  C3D9  F071         	movff	cal_diff_hight_to_vol_h@v1+3,___flmul@b+3
 31836  002FDC  C3DA  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 31837  002FE0  C3DB  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 31838  002FE4  C3DC  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 31839  002FE8  C3DD  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 31840  002FEC  EC9F  F008         	call	___flmul	;wreg free
 31841  002FF0  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_h@v1
 31842  002FF4  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v1+1
 31843  002FF8  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v1+2
 31844  002FFC  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v1+3
 31845                           
 31846                           ;data.c: 461: f1=f2;
 31847  003000  C3D2  F3DA         	movff	cal_diff_hight_to_vol_h@f2,cal_diff_hight_to_vol_h@f1
 31848  003004  C3D3  F3DB         	movff	cal_diff_hight_to_vol_h@f2+1,cal_diff_hight_to_vol_h@f1+1
 31849  003008  C3D4  F3DC         	movff	cal_diff_hight_to_vol_h@f2+2,cal_diff_hight_to_vol_h@f1+2
 31850  00300C  C3D5  F3DD         	movff	cal_diff_hight_to_vol_h@f2+3,cal_diff_hight_to_vol_h@f1+3
 31851                           
 31852                           ;data.c: 462: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 31853  003010  0E17               	movlw	low _hKel
 31854  003012  0100               	movlb	0	; () banked
 31855  003014  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 31856  003016  0EEF               	movlw	high _hKel
 31857  003018  0100               	movlb	0	; () banked
 31858  00301A  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 31859  00301C  C3DA  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 31860  003020  C3DB  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 31861  003024  C3DC  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 31862  003028  C3DD  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 31863  00302C  0E00               	movlw	0
 31864  00302E  0100               	movlb	0	; () banked
 31865  003030  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 31866  003032  0E65               	movlw	101
 31867  003034  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 31868  003036  EC2C  F00D         	call	_m_interp1_float_fast	;wreg free
 31869  00303A  C0C4  F3DA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 31870  00303E  C0C5  F3DB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 31871  003042  C0C6  F3DC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 31872  003046  C0C7  F3DD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 31873                           
 31874                           ;data.c: 463: v2=(float)(stSysData.V2);
 31875  00304A  C214  F060         	movff	_stSysData+20,___xxtofl@val
 31876  00304E  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 31877  003052  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 31878  003056  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 31879  00305A  0E01               	movlw	1
 31880  00305C  EC86  F01C         	call	___xxtofl
 31881  003060  C060  F3CE         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v2
 31882  003064  C061  F3CF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v2+1
 31883  003068  C062  F3D0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v2+2
 31884  00306C  C063  F3D1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v2+3
 31885                           
 31886                           ;data.c: 464: v2=v2*f1;
 31887  003070  C3CE  F06E         	movff	cal_diff_hight_to_vol_h@v2,___flmul@b
 31888  003074  C3CF  F06F         	movff	cal_diff_hight_to_vol_h@v2+1,___flmul@b+1
 31889  003078  C3D0  F070         	movff	cal_diff_hight_to_vol_h@v2+2,___flmul@b+2
 31890  00307C  C3D1  F071         	movff	cal_diff_hight_to_vol_h@v2+3,___flmul@b+3
 31891  003080  C3DA  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 31892  003084  C3DB  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 31893  003088  C3DC  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 31894  00308C  C3DD  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 31895  003090  EC9F  F008         	call	___flmul	;wreg free
 31896  003094  C06E  F3CE         	movff	?___flmul,cal_diff_hight_to_vol_h@v2
 31897  003098  C06F  F3CF         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v2+1
 31898  00309C  C070  F3D0         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v2+2
 31899  0030A0  C071  F3D1         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v2+3
 31900                           
 31901                           ;data.c: 466: v1=v1+v2;
 31902  0030A4  C3D6  F0A4         	movff	cal_diff_hight_to_vol_h@v1,___fladd@b
 31903  0030A8  C3D7  F0A5         	movff	cal_diff_hight_to_vol_h@v1+1,___fladd@b+1
 31904  0030AC  C3D8  F0A6         	movff	cal_diff_hight_to_vol_h@v1+2,___fladd@b+2
 31905  0030B0  C3D9  F0A7         	movff	cal_diff_hight_to_vol_h@v1+3,___fladd@b+3
 31906  0030B4  C3CE  F0A8         	movff	cal_diff_hight_to_vol_h@v2,___fladd@a
 31907  0030B8  C3CF  F0A9         	movff	cal_diff_hight_to_vol_h@v2+1,___fladd@a+1
 31908  0030BC  C3D0  F0AA         	movff	cal_diff_hight_to_vol_h@v2+2,___fladd@a+2
 31909  0030C0  C3D1  F0AB         	movff	cal_diff_hight_to_vol_h@v2+3,___fladd@a+3
 31910  0030C4  EC4B  F006         	call	___fladd	;wreg free
 31911  0030C8  C0A4  F3D6         	movff	?___fladd,cal_diff_hight_to_vol_h@v1
 31912  0030CC  C0A5  F3D7         	movff	?___fladd+1,cal_diff_hight_to_vol_h@v1+1
 31913  0030D0  C0A6  F3D8         	movff	?___fladd+2,cal_diff_hight_to_vol_h@v1+2
 31914  0030D4  C0A7  F3D9         	movff	?___fladd+3,cal_diff_hight_to_vol_h@v1+3
 31915                           
 31916                           ;data.c: 467: return (int32_t)v1;
 31917  0030D8  C3D6  F0B8         	movff	cal_diff_hight_to_vol_h@v1,___fltol@f1
 31918  0030DC  C3D7  F0B9         	movff	cal_diff_hight_to_vol_h@v1+1,___fltol@f1+1
 31919  0030E0  C3D8  F0BA         	movff	cal_diff_hight_to_vol_h@v1+2,___fltol@f1+2
 31920  0030E4  C3D9  F0BB         	movff	cal_diff_hight_to_vol_h@v1+3,___fltol@f1+3
 31921  0030E8  EC54  F02A         	call	___fltol	;wreg free
 31922  0030EC  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_h
 31923  0030F0  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_h+1
 31924  0030F4  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_h+2
 31925  0030F8  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_h+3
 31926  0030FC  0012               	return	
 31927  0030FE                     __end_of_cal_diff_hight_to_vol_h:
 31928                           	opt stack 0
 31929                           tosu	equ	0xFFF
 31930                           tosh	equ	0xFFE
 31931                           tosl	equ	0xFFD
 31932                           pclath	equ	0xFFA
 31933                           tblptru	equ	0xFF8
 31934                           tblptrh	equ	0xFF7
 31935                           tblptrl	equ	0xFF6
 31936                           tablat	equ	0xFF5
 31937                           prodh	equ	0xFF4
 31938                           prodl	equ	0xFF3
 31939                           intcon	equ	0xFF2
 31940                           indf0	equ	0xFEF
 31941                           postinc0	equ	0xFEE
 31942                           fsr0h	equ	0xFEA
 31943                           fsr0l	equ	0xFE9
 31944                           wreg	equ	0xFE8
 31945                           indf1	equ	0xFE7
 31946                           postinc1	equ	0xFE6
 31947                           postdec1	equ	0xFE5
 31948                           plusw1	equ	0xFE3
 31949                           fsr1h	equ	0xFE2
 31950                           fsr1l	equ	0xFE1
 31951                           indf2	equ	0xFDF
 31952                           postinc2	equ	0xFDE
 31953                           postdec2	equ	0xFDD
 31954                           plusw2	equ	0xFDB
 31955                           fsr2h	equ	0xFDA
 31956                           fsr2l	equ	0xFD9
 31957                           status	equ	0xFD8
 31958                           
 31959 ;; *************** function _m_interp1_float_fast *****************
 31960 ;; Defined at:
 31961 ;;		line 417 in file "src/api/data.c"
 31962 ;; Parameters:    Size  Location     Type
 31963 ;;  tab             2  100[BANK0 ] PTR float 
 31964 ;;		 -> hKel(404), hKcy(404), 
 31965 ;;  in              4  102[BANK0 ] float 
 31966 ;;  len             2  106[BANK0 ] int 
 31967 ;; Auto vars:     Size  Location     Type
 31968 ;;  f               4  128[BANK0 ] float 
 31969 ;;  y               4  120[BANK0 ] float 
 31970 ;;  x               4  116[BANK0 ] float 
 31971 ;;  i               2  132[BANK0 ] unsigned int 
 31972 ;; Return value:  Size  Location     Type
 31973 ;;                  4  100[BANK0 ] float 
 31974 ;; Registers used:
 31975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31976 ;; Tracked objects:
 31977 ;;		On entry : 0/0
 31978 ;;		On exit  : 0/0
 31979 ;;		Unchanged: 0/0
 31980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31981 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31982 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31983 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31984 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31985 ;;Total ram usage:       34 bytes
 31986 ;; Hardware stack levels used:    1
 31987 ;; Hardware stack levels required when called:    5
 31988 ;; This function calls:
 31989 ;;		___fladd
 31990 ;;		___fldiv
 31991 ;;		___flge
 31992 ;;		___flmul
 31993 ;;		___flneg
 31994 ;;		___xxtofl
 31995 ;; This function is called by:
 31996 ;;		_cal_diff_hight_to_vol_h
 31997 ;;		_cal_diff_hight_to_vol_v
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text175
 32002  001A58                     __ptext175:
 32003                           	opt stack 0
 32004  001A58                     _m_interp1_float_fast:
 32005                           	opt stack 20
 32006                           
 32007                           ;data.c: 419: uint16_t i;
 32008                           ;data.c: 420: float f,x,y;
 32009                           ;data.c: 421: for(i=0;i<len-1;i++){
 32010                           
 32011                           ;incstack = 0
 32012  001A58  0E00               	movlw	0
 32013  001A5A  0100               	movlb	0	; () banked
 32014  001A5C  6FE5               	movwf	(m_interp1_float_fast@i+1)& (0+255),b
 32015  001A5E  0E00               	movlw	0
 32016  001A60  6FE4               	movwf	m_interp1_float_fast@i& (0+255),b
 32017  001A62  D0D0               	goto	l13952
 32018  001A64                     l13940:
 32019                           
 32020                           ; BSR set to: 0
 32021                           ;data.c: 422: if(tab[i]<tab[i+1]){
 32022  001A64  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 32023  001A68  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 32024  001A6C  0100               	movlb	0	; () banked
 32025  001A6E  90D8               	bcf	status,0,c
 32026  001A70  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32027  001A72  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32028  001A74  0100               	movlb	0	; () banked
 32029  001A76  90D8               	bcf	status,0,c
 32030  001A78  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32031  001A7A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32032  001A7C  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 32033  001A80  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 32034  001A84  0100               	movlb	0	; () banked
 32035  001A86  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32036  001A88  0100               	movlb	0	; () banked
 32037  001A8A  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32038  001A8C  0100               	movlb	0	; () banked
 32039  001A8E  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32040  001A90  0100               	movlb	0	; () banked
 32041  001A92  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32042  001A94  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 32043  001A98  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 32044  001A9C                     	if	0	;tblptru may be non-zero
 32045  001A9C                     	endif
 32046  001A9C                     	if	0	;tblptru may be non-zero
 32047  001A9C                     	endif
 32048  001A9C  0009               	tblrd		*+
 32049  001A9E  CFF5 F0B8          	movff	tablat,___flge@ff1
 32050  001AA2  0009               	tblrd		*+
 32051  001AA4  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 32052  001AA8  0009               	tblrd		*+
 32053  001AAA  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 32054  001AAE  000A               	tblrd		*-
 32055  001AB0  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 32056  001AB4  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 32057  001AB8  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 32058  001ABC  0100               	movlb	0	; () banked
 32059  001ABE  90D8               	bcf	status,0,c
 32060  001AC0  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32061  001AC2  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 32062  001AC4  0100               	movlb	0	; () banked
 32063  001AC6  90D8               	bcf	status,0,c
 32064  001AC8  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32065  001ACA  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 32066  001ACC  0E04               	movlw	4
 32067  001ACE  0100               	movlb	0	; () banked
 32068  001AD0  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32069  001AD2  0E00               	movlw	0
 32070  001AD4  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 32071  001AD6  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 32072  001ADA  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 32073  001ADE  0100               	movlb	0	; () banked
 32074  001AE0  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 32075  001AE2  0100               	movlb	0	; () banked
 32076  001AE4  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 32077  001AE6  0100               	movlb	0	; () banked
 32078  001AE8  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 32079  001AEA  0100               	movlb	0	; () banked
 32080  001AEC  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 32081  001AEE  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 32082  001AF2  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 32083  001AF6                     	if	0	;tblptru may be non-zero
 32084  001AF6                     	endif
 32085  001AF6                     	if	0	;tblptru may be non-zero
 32086  001AF6                     	endif
 32087  001AF6  0009               	tblrd		*+
 32088  001AF8  CFF5 F0BC          	movff	tablat,___flge@ff2
 32089  001AFC  0009               	tblrd		*+
 32090  001AFE  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 32091  001B02  0009               	tblrd		*+
 32092  001B04  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 32093  001B08  000A               	tblrd		*-
 32094  001B0A  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 32095  001B0E  EC09  F020         	call	___flge	;wreg free
 32096  001B12  0100               	movlb	0	; () banked
 32097  001B14  B0D8               	btfsc	status,0,c
 32098  001B16  D03B               	goto	l13946
 32099                           
 32100                           ; BSR set to: 0
 32101                           ;data.c: 423: if(in<=tab[i+1])break;
 32102  001B18  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 32103  001B1C  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 32104  001B20  0100               	movlb	0	; () banked
 32105  001B22  90D8               	bcf	status,0,c
 32106  001B24  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32107  001B26  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32108  001B28  0100               	movlb	0	; () banked
 32109  001B2A  90D8               	bcf	status,0,c
 32110  001B2C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32111  001B2E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32112  001B30  0E04               	movlw	4
 32113  001B32  0100               	movlb	0	; () banked
 32114  001B34  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 32115  001B36  0E00               	movlw	0
 32116  001B38  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 32117  001B3A  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 32118  001B3E  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 32119  001B42  0100               	movlb	0	; () banked
 32120  001B44  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32121  001B46  0100               	movlb	0	; () banked
 32122  001B48  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32123  001B4A  0100               	movlb	0	; () banked
 32124  001B4C  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32125  001B4E  0100               	movlb	0	; () banked
 32126  001B50  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32127  001B52  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 32128  001B56  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 32129  001B5A                     	if	0	;tblptru may be non-zero
 32130  001B5A                     	endif
 32131  001B5A                     	if	0	;tblptru may be non-zero
 32132  001B5A                     	endif
 32133  001B5A  0009               	tblrd		*+
 32134  001B5C  CFF5 F0B8          	movff	tablat,___flge@ff1
 32135  001B60  0009               	tblrd		*+
 32136  001B62  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 32137  001B66  0009               	tblrd		*+
 32138  001B68  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 32139  001B6C  000A               	tblrd		*-
 32140  001B6E  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 32141  001B72  C0C6  F0BC         	movff	m_interp1_float_fast@in,___flge@ff2
 32142  001B76  C0C7  F0BD         	movff	m_interp1_float_fast@in+1,___flge@ff2+1
 32143  001B7A  C0C8  F0BE         	movff	m_interp1_float_fast@in+2,___flge@ff2+2
 32144  001B7E  C0C9  F0BF         	movff	m_interp1_float_fast@in+3,___flge@ff2+3
 32145  001B82  EC09  F020         	call	___flge	;wreg free
 32146  001B86  0100               	movlb	0	; () banked
 32147  001B88  B0D8               	btfsc	status,0,c
 32148  001B8A  D058               	goto	l13954
 32149  001B8C  D038               	goto	l13950
 32150  001B8E                     l13946:
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;data.c: 425: if(in>=tab[i+1])break;
 32154  001B8E  C0C6  F0B8         	movff	m_interp1_float_fast@in,___flge@ff1
 32155  001B92  C0C7  F0B9         	movff	m_interp1_float_fast@in+1,___flge@ff1+1
 32156  001B96  C0C8  F0BA         	movff	m_interp1_float_fast@in+2,___flge@ff1+2
 32157  001B9A  C0C9  F0BB         	movff	m_interp1_float_fast@in+3,___flge@ff1+3
 32158  001B9E  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 32159  001BA2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 32160  001BA6  0100               	movlb	0	; () banked
 32161  001BA8  90D8               	bcf	status,0,c
 32162  001BAA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32163  001BAC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32164  001BAE  0100               	movlb	0	; () banked
 32165  001BB0  90D8               	bcf	status,0,c
 32166  001BB2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32167  001BB4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32168  001BB6  0E04               	movlw	4
 32169  001BB8  0100               	movlb	0	; () banked
 32170  001BBA  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 32171  001BBC  0E00               	movlw	0
 32172  001BBE  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 32173  001BC0  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 32174  001BC4  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 32175  001BC8  0100               	movlb	0	; () banked
 32176  001BCA  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32177  001BCC  0100               	movlb	0	; () banked
 32178  001BCE  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32179  001BD0  0100               	movlb	0	; () banked
 32180  001BD2  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32181  001BD4  0100               	movlb	0	; () banked
 32182  001BD6  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32183  001BD8  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 32184  001BDC  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 32185  001BE0                     	if	0	;tblptru may be non-zero
 32186  001BE0                     	endif
 32187  001BE0                     	if	0	;tblptru may be non-zero
 32188  001BE0                     	endif
 32189  001BE0  0009               	tblrd		*+
 32190  001BE2  CFF5 F0BC          	movff	tablat,___flge@ff2
 32191  001BE6  0009               	tblrd		*+
 32192  001BE8  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 32193  001BEC  0009               	tblrd		*+
 32194  001BEE  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 32195  001BF2  000A               	tblrd		*-
 32196  001BF4  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 32197  001BF8  EC09  F020         	call	___flge	;wreg free
 32198  001BFC  D7C4               	goto	L26
 32199  001BFE                     l13950:
 32200                           
 32201                           ; BSR set to: 0
 32202  001BFE  0100               	movlb	0	; () banked
 32203  001C00  4BE4               	infsnz	m_interp1_float_fast@i& (0+255),f,b
 32204  001C02  2BE5               	incf	(m_interp1_float_fast@i+1)& (0+255),f,b
 32205  001C04                     l13952:
 32206                           
 32207                           ; BSR set to: 0
 32208  001C04  0EFF               	movlw	255
 32209  001C06  0100               	movlb	0	; () banked
 32210  001C08  6FCC               	movwf	??_m_interp1_float_fast& (0+255),b
 32211  001C0A  0EFF               	movlw	255
 32212  001C0C  0100               	movlb	0	; () banked
 32213  001C0E  6FCD               	movwf	(??_m_interp1_float_fast+1)& (0+255),b
 32214  001C10  C0CA  F0CE         	movff	m_interp1_float_fast@len,??_m_interp1_float_fast+2
 32215  001C14  C0CB  F0CF         	movff	m_interp1_float_fast@len+1,??_m_interp1_float_fast+3
 32216  001C18  0100               	movlb	0	; () banked
 32217  001C1A  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32218  001C1C  0100               	movlb	0	; () banked
 32219  001C1E  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32220  001C20  0100               	movlb	0	; () banked
 32221  001C22  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32222  001C24  0100               	movlb	0	; () banked
 32223  001C26  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32224  001C28  0100               	movlb	0	; () banked
 32225  001C2A  51CE               	movf	(??_m_interp1_float_fast+2)& (0+255),w,b
 32226  001C2C  0100               	movlb	0	; () banked
 32227  001C2E  5DE4               	subwf	m_interp1_float_fast@i& (0+255),w,b
 32228  001C30  0100               	movlb	0	; () banked
 32229  001C32  51CF               	movf	(??_m_interp1_float_fast+3)& (0+255),w,b
 32230  001C34  0100               	movlb	0	; () banked
 32231  001C36  59E5               	subwfb	(m_interp1_float_fast@i+1)& (0+255),w,b
 32232  001C38  A0D8               	btfss	status,0,c
 32233  001C3A  D714               	goto	l13940
 32234  001C3C                     l13954:
 32235                           
 32236                           ; BSR set to: 0
 32237                           ;data.c: 426: }
 32238                           ;data.c: 427: }
 32239                           ;data.c: 428: f=tab[i];
 32240  001C3C  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 32241  001C40  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 32242  001C44  0100               	movlb	0	; () banked
 32243  001C46  90D8               	bcf	status,0,c
 32244  001C48  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32245  001C4A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32246  001C4C  0100               	movlb	0	; () banked
 32247  001C4E  90D8               	bcf	status,0,c
 32248  001C50  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32249  001C52  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32250  001C54  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 32251  001C58  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 32252  001C5C  0100               	movlb	0	; () banked
 32253  001C5E  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32254  001C60  0100               	movlb	0	; () banked
 32255  001C62  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32256  001C64  0100               	movlb	0	; () banked
 32257  001C66  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32258  001C68  0100               	movlb	0	; () banked
 32259  001C6A  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32260  001C6C  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 32261  001C70  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 32262  001C74                     	if	0	;tblptru may be non-zero
 32263  001C74                     	endif
 32264  001C74                     	if	0	;tblptru may be non-zero
 32265  001C74                     	endif
 32266  001C74  0009               	tblrd		*+
 32267  001C76  CFF5 F0E0          	movff	tablat,m_interp1_float_fast@f
 32268  001C7A  0009               	tblrd		*+
 32269  001C7C  CFF5 F0E1          	movff	tablat,m_interp1_float_fast@f+1
 32270  001C80  0009               	tblrd		*+
 32271  001C82  CFF5 F0E2          	movff	tablat,m_interp1_float_fast@f+2
 32272  001C86  000A               	tblrd		*-
 32273  001C88  CFF5 F0E3          	movff	tablat,m_interp1_float_fast@f+3
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;data.c: 429: x=0.01f;
 32277  001C8C  0E0A               	movlw	10
 32278  001C8E  0100               	movlb	0	; () banked
 32279  001C90  6FD4               	movwf	m_interp1_float_fast@x& (0+255),b
 32280  001C92  0ED7               	movlw	215
 32281  001C94  6FD5               	movwf	(m_interp1_float_fast@x+1)& (0+255),b
 32282  001C96  0E23               	movlw	35
 32283  001C98  6FD6               	movwf	(m_interp1_float_fast@x+2)& (0+255),b
 32284  001C9A  0E3C               	movlw	60
 32285  001C9C  6FD7               	movwf	(m_interp1_float_fast@x+3)& (0+255),b
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;data.c: 430: y=tab[i+1]-tab[i];
 32289  001C9E  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 32290  001CA2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 32291  001CA6  0100               	movlb	0	; () banked
 32292  001CA8  90D8               	bcf	status,0,c
 32293  001CAA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32294  001CAC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32295  001CAE  0100               	movlb	0	; () banked
 32296  001CB0  90D8               	bcf	status,0,c
 32297  001CB2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 32298  001CB4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 32299  001CB6  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 32300  001CBA  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 32301  001CBE  0100               	movlb	0	; () banked
 32302  001CC0  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 32303  001CC2  0100               	movlb	0	; () banked
 32304  001CC4  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 32305  001CC6  0100               	movlb	0	; () banked
 32306  001CC8  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 32307  001CCA  0100               	movlb	0	; () banked
 32308  001CCC  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 32309  001CCE  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 32310  001CD2  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 32311  001CD6                     	if	0	;tblptru may be non-zero
 32312  001CD6                     	endif
 32313  001CD6                     	if	0	;tblptru may be non-zero
 32314  001CD6                     	endif
 32315  001CD6  0009               	tblrd		*+
 32316  001CD8  CFF5 F0A0          	movff	tablat,___flneg@f1
 32317  001CDC  0009               	tblrd		*+
 32318  001CDE  CFF5 F0A1          	movff	tablat,___flneg@f1+1
 32319  001CE2  0009               	tblrd		*+
 32320  001CE4  CFF5 F0A2          	movff	tablat,___flneg@f1+2
 32321  001CE8  000A               	tblrd		*-
 32322  001CEA  CFF5 F0A3          	movff	tablat,___flneg@f1+3
 32323  001CEE  ECDE  F049         	call	___flneg	;wreg free
 32324  001CF2  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32325  001CF6  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32326  001CFA  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32327  001CFE  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32328  001D02  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 32329  001D06  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 32330  001D0A  0100               	movlb	0	; () banked
 32331  001D0C  90D8               	bcf	status,0,c
 32332  001D0E  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32333  001D10  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 32334  001D12  0100               	movlb	0	; () banked
 32335  001D14  90D8               	bcf	status,0,c
 32336  001D16  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32337  001D18  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 32338  001D1A  0E04               	movlw	4
 32339  001D1C  0100               	movlb	0	; () banked
 32340  001D1E  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 32341  001D20  0E00               	movlw	0
 32342  001D22  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 32343  001D24  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 32344  001D28  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 32345  001D2C  0100               	movlb	0	; () banked
 32346  001D2E  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 32347  001D30  0100               	movlb	0	; () banked
 32348  001D32  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 32349  001D34  0100               	movlb	0	; () banked
 32350  001D36  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 32351  001D38  0100               	movlb	0	; () banked
 32352  001D3A  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 32353  001D3C  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 32354  001D40  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 32355  001D44                     	if	0	;tblptru may be non-zero
 32356  001D44                     	endif
 32357  001D44                     	if	0	;tblptru may be non-zero
 32358  001D44                     	endif
 32359  001D44  0009               	tblrd		*+
 32360  001D46  CFF5 F0A8          	movff	tablat,___fladd@a
 32361  001D4A  0009               	tblrd		*+
 32362  001D4C  CFF5 F0A9          	movff	tablat,___fladd@a+1
 32363  001D50  0009               	tblrd		*+
 32364  001D52  CFF5 F0AA          	movff	tablat,___fladd@a+2
 32365  001D56  000A               	tblrd		*-
 32366  001D58  CFF5 F0AB          	movff	tablat,___fladd@a+3
 32367  001D5C  EC4B  F006         	call	___fladd	;wreg free
 32368  001D60  C0A4  F0D8         	movff	?___fladd,m_interp1_float_fast@y
 32369  001D64  C0A5  F0D9         	movff	?___fladd+1,m_interp1_float_fast@y+1
 32370  001D68  C0A6  F0DA         	movff	?___fladd+2,m_interp1_float_fast@y+2
 32371  001D6C  C0A7  F0DB         	movff	?___fladd+3,m_interp1_float_fast@y+3
 32372                           
 32373                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 32374  001D70  C0C6  F0A8         	movff	m_interp1_float_fast@in,___fladd@a
 32375  001D74  C0C7  F0A9         	movff	m_interp1_float_fast@in+1,___fladd@a+1
 32376  001D78  C0C8  F0AA         	movff	m_interp1_float_fast@in+2,___fladd@a+2
 32377  001D7C  C0C9  F0AB         	movff	m_interp1_float_fast@in+3,___fladd@a+3
 32378  001D80  0E0A               	movlw	10
 32379  001D82  0100               	movlb	0	; () banked
 32380  001D84  6F72               	movwf	___flmul@a& (0+255),b
 32381  001D86  0ED7               	movlw	215
 32382  001D88  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32383  001D8A  0E23               	movlw	35
 32384  001D8C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32385  001D8E  0E3C               	movlw	60
 32386  001D90  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32387  001D92  C0E4  F060         	movff	m_interp1_float_fast@i,___xxtofl@val
 32388  001D96  C0E5  F061         	movff	m_interp1_float_fast@i+1,___xxtofl@val+1
 32389  001D9A  0100               	movlb	0	; () banked
 32390  001D9C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 32391  001D9E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 32392  001DA0  0E00               	movlw	0
 32393  001DA2  EC86  F01C         	call	___xxtofl
 32394  001DA6  C060  F06E         	movff	?___xxtofl,___flmul@b
 32395  001DAA  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 32396  001DAE  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 32397  001DB2  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 32398  001DB6  EC9F  F008         	call	___flmul	;wreg free
 32399  001DBA  C06E  F0A0         	movff	?___flmul,___flneg@f1
 32400  001DBE  C06F  F0A1         	movff	?___flmul+1,___flneg@f1+1
 32401  001DC2  C070  F0A2         	movff	?___flmul+2,___flneg@f1+2
 32402  001DC6  C071  F0A3         	movff	?___flmul+3,___flneg@f1+3
 32403  001DCA  ECDE  F049         	call	___flneg	;wreg free
 32404  001DCE  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32405  001DD2  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32406  001DD6  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32407  001DDA  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32408  001DDE  EC4B  F006         	call	___fladd	;wreg free
 32409  001DE2  C0A4  F0DC         	movff	?___fladd,_m_interp1_float_fast$5837
 32410  001DE6  C0A5  F0DD         	movff	?___fladd+1,_m_interp1_float_fast$5837+1
 32411  001DEA  C0A6  F0DE         	movff	?___fladd+2,_m_interp1_float_fast$5837+2
 32412  001DEE  C0A7  F0DF         	movff	?___fladd+3,_m_interp1_float_fast$5837+3
 32413                           
 32414                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 32415  001DF2  C0D4  F08B         	movff	m_interp1_float_fast@x,___fldiv@a
 32416  001DF6  C0D5  F08C         	movff	m_interp1_float_fast@x+1,___fldiv@a+1
 32417  001DFA  C0D6  F08D         	movff	m_interp1_float_fast@x+2,___fldiv@a+2
 32418  001DFE  C0D7  F08E         	movff	m_interp1_float_fast@x+3,___fldiv@a+3
 32419  001E02  C0D8  F087         	movff	m_interp1_float_fast@y,___fldiv@b
 32420  001E06  C0D9  F088         	movff	m_interp1_float_fast@y+1,___fldiv@b+1
 32421  001E0A  C0DA  F089         	movff	m_interp1_float_fast@y+2,___fldiv@b+2
 32422  001E0E  C0DB  F08A         	movff	m_interp1_float_fast@y+3,___fldiv@b+3
 32423  001E12  EC40  F00F         	call	___fldiv	;wreg free
 32424  001E16  C087  F072         	movff	?___fldiv,___flmul@a
 32425  001E1A  C088  F073         	movff	?___fldiv+1,___flmul@a+1
 32426  001E1E  C089  F074         	movff	?___fldiv+2,___flmul@a+2
 32427  001E22  C08A  F075         	movff	?___fldiv+3,___flmul@a+3
 32428  001E26  C0DC  F06E         	movff	_m_interp1_float_fast$5837,___flmul@b
 32429  001E2A  C0DD  F06F         	movff	_m_interp1_float_fast$5837+1,___flmul@b+1
 32430  001E2E  C0DE  F070         	movff	_m_interp1_float_fast$5837+2,___flmul@b+2
 32431  001E32  C0DF  F071         	movff	_m_interp1_float_fast$5837+3,___flmul@b+3
 32432  001E36  EC9F  F008         	call	___flmul	;wreg free
 32433  001E3A  C06E  F0A4         	movff	?___flmul,___fladd@b
 32434  001E3E  C06F  F0A5         	movff	?___flmul+1,___fladd@b+1
 32435  001E42  C070  F0A6         	movff	?___flmul+2,___fladd@b+2
 32436  001E46  C071  F0A7         	movff	?___flmul+3,___fladd@b+3
 32437  001E4A  C0E0  F0A8         	movff	m_interp1_float_fast@f,___fladd@a
 32438  001E4E  C0E1  F0A9         	movff	m_interp1_float_fast@f+1,___fladd@a+1
 32439  001E52  C0E2  F0AA         	movff	m_interp1_float_fast@f+2,___fladd@a+2
 32440  001E56  C0E3  F0AB         	movff	m_interp1_float_fast@f+3,___fladd@a+3
 32441  001E5A  EC4B  F006         	call	___fladd	;wreg free
 32442  001E5E  C0A4  F0E0         	movff	?___fladd,m_interp1_float_fast@f
 32443  001E62  C0A5  F0E1         	movff	?___fladd+1,m_interp1_float_fast@f+1
 32444  001E66  C0A6  F0E2         	movff	?___fladd+2,m_interp1_float_fast@f+2
 32445  001E6A  C0A7  F0E3         	movff	?___fladd+3,m_interp1_float_fast@f+3
 32446                           
 32447                           ;data.c: 432: return f;
 32448  001E6E  C0E0  F0C4         	movff	m_interp1_float_fast@f,?_m_interp1_float_fast
 32449  001E72  C0E1  F0C5         	movff	m_interp1_float_fast@f+1,?_m_interp1_float_fast+1
 32450  001E76  C0E2  F0C6         	movff	m_interp1_float_fast@f+2,?_m_interp1_float_fast+2
 32451  001E7A  C0E3  F0C7         	movff	m_interp1_float_fast@f+3,?_m_interp1_float_fast+3
 32452  001E7E  0012               	return	
 32453  001E80                     __end_of_m_interp1_float_fast:
 32454                           	opt stack 0
 32455                           tosu	equ	0xFFF
 32456                           tosh	equ	0xFFE
 32457                           tosl	equ	0xFFD
 32458                           pclath	equ	0xFFA
 32459                           tblptru	equ	0xFF8
 32460                           tblptrh	equ	0xFF7
 32461                           tblptrl	equ	0xFF6
 32462                           tablat	equ	0xFF5
 32463                           prodh	equ	0xFF4
 32464                           prodl	equ	0xFF3
 32465                           intcon	equ	0xFF2
 32466                           indf0	equ	0xFEF
 32467                           postinc0	equ	0xFEE
 32468                           fsr0h	equ	0xFEA
 32469                           fsr0l	equ	0xFE9
 32470                           wreg	equ	0xFE8
 32471                           indf1	equ	0xFE7
 32472                           postinc1	equ	0xFE6
 32473                           postdec1	equ	0xFE5
 32474                           plusw1	equ	0xFE3
 32475                           fsr1h	equ	0xFE2
 32476                           fsr1l	equ	0xFE1
 32477                           indf2	equ	0xFDF
 32478                           postinc2	equ	0xFDE
 32479                           postdec2	equ	0xFDD
 32480                           plusw2	equ	0xFDB
 32481                           fsr2h	equ	0xFDA
 32482                           fsr2l	equ	0xFD9
 32483                           status	equ	0xFD8
 32484                           
 32485 ;; *************** function ___flneg *****************
 32486 ;; Defined at:
 32487 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flneg.c"
 32488 ;; Parameters:    Size  Location     Type
 32489 ;;  f1              4   64[BANK0 ] float 
 32490 ;; Auto vars:     Size  Location     Type
 32491 ;;		None
 32492 ;; Return value:  Size  Location     Type
 32493 ;;                  4   64[BANK0 ] float 
 32494 ;; Registers used:
 32495 ;;		wreg, status,2, status,0
 32496 ;; Tracked objects:
 32497 ;;		On entry : 0/0
 32498 ;;		On exit  : 0/0
 32499 ;;		Unchanged: 0/0
 32500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32504 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32505 ;;Total ram usage:        4 bytes
 32506 ;; Hardware stack levels used:    1
 32507 ;; Hardware stack levels required when called:    4
 32508 ;; This function calls:
 32509 ;;		Nothing
 32510 ;; This function is called by:
 32511 ;;		_m_interp1_float_fast
 32512 ;;		_cal_diff_hight_to_vol_v
 32513 ;; This function uses a non-reentrant model
 32514 ;;
 32515                           
 32516                           	psect	text176
 32517  0093BC                     __ptext176:
 32518                           	opt stack 0
 32519  0093BC                     ___flneg:
 32520                           	opt stack 20
 32521                           
 32522                           ;incstack = 0
 32523  0093BC  0100               	movlb	0	; () banked
 32524  0093BE  51A0               	movf	___flneg@f1& (0+255),w,b
 32525  0093C0  0100               	movlb	0	; () banked
 32526  0093C2  11A1               	iorwf	(___flneg@f1+1)& (0+255),w,b
 32527  0093C4  0100               	movlb	0	; () banked
 32528  0093C6  11A2               	iorwf	(___flneg@f1+2)& (0+255),w,b
 32529  0093C8  0100               	movlb	0	; () banked
 32530  0093CA  11A3               	iorwf	(___flneg@f1+3)& (0+255),w,b
 32531  0093CC  B4D8               	btfsc	status,2,c
 32532  0093CE  D009               	goto	l13864
 32533                           
 32534                           ; BSR set to: 0
 32535  0093D0  0E00               	movlw	0
 32536  0093D2  0100               	movlb	0	; () banked
 32537  0093D4  1BA0               	xorwf	___flneg@f1& (0+255),f,b
 32538  0093D6  0E00               	movlw	0
 32539  0093D8  1BA1               	xorwf	(___flneg@f1+1)& (0+255),f,b
 32540  0093DA  0E00               	movlw	0
 32541  0093DC  1BA2               	xorwf	(___flneg@f1+2)& (0+255),f,b
 32542  0093DE  0E80               	movlw	128
 32543  0093E0  1BA3               	xorwf	(___flneg@f1+3)& (0+255),f,b
 32544  0093E2                     l13864:
 32545                           
 32546                           ; BSR set to: 0
 32547  0093E2  C0A0  F0A0         	movff	___flneg@f1,?___flneg
 32548  0093E6  C0A1  F0A1         	movff	___flneg@f1+1,?___flneg+1
 32549  0093EA  C0A2  F0A2         	movff	___flneg@f1+2,?___flneg+2
 32550  0093EE  C0A3  F0A3         	movff	___flneg@f1+3,?___flneg+3
 32551  0093F2  0012               	return	
 32552  0093F4                     __end_of___flneg:
 32553                           	opt stack 0
 32554                           tosu	equ	0xFFF
 32555                           tosh	equ	0xFFE
 32556                           tosl	equ	0xFFD
 32557                           pclath	equ	0xFFA
 32558                           tblptru	equ	0xFF8
 32559                           tblptrh	equ	0xFF7
 32560                           tblptrl	equ	0xFF6
 32561                           tablat	equ	0xFF5
 32562                           prodh	equ	0xFF4
 32563                           prodl	equ	0xFF3
 32564                           intcon	equ	0xFF2
 32565                           indf0	equ	0xFEF
 32566                           postinc0	equ	0xFEE
 32567                           fsr0h	equ	0xFEA
 32568                           fsr0l	equ	0xFE9
 32569                           wreg	equ	0xFE8
 32570                           indf1	equ	0xFE7
 32571                           postinc1	equ	0xFE6
 32572                           postdec1	equ	0xFE5
 32573                           plusw1	equ	0xFE3
 32574                           fsr1h	equ	0xFE2
 32575                           fsr1l	equ	0xFE1
 32576                           indf2	equ	0xFDF
 32577                           postinc2	equ	0xFDE
 32578                           postdec2	equ	0xFDD
 32579                           plusw2	equ	0xFDB
 32580                           fsr2h	equ	0xFDA
 32581                           fsr2l	equ	0xFD9
 32582                           status	equ	0xFD8
 32583                           
 32584 ;; *************** function _cal_diff_hight_level *****************
 32585 ;; Defined at:
 32586 ;;		line 470 in file "src/api/data.c"
 32587 ;; Parameters:    Size  Location     Type
 32588 ;;		None
 32589 ;; Auto vars:     Size  Location     Type
 32590 ;;  f1              4  112[BANK0 ] float 
 32591 ;;  f2              4  108[BANK0 ] float 
 32592 ;; Return value:  Size  Location     Type
 32593 ;;                  1    wreg      unsigned char 
 32594 ;; Registers used:
 32595 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32596 ;; Tracked objects:
 32597 ;;		On entry : 0/0
 32598 ;;		On exit  : 0/0
 32599 ;;		Unchanged: 0/0
 32600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32602 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32604 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32605 ;;Total ram usage:       16 bytes
 32606 ;; Hardware stack levels used:    1
 32607 ;; Hardware stack levels required when called:    5
 32608 ;; This function calls:
 32609 ;;		___fladd
 32610 ;;		___fldiv
 32611 ;;		___flge
 32612 ;;		___flmul
 32613 ;;		___fltol
 32614 ;;		___xxtofl
 32615 ;; This function is called by:
 32616 ;;		_cal_diff_press
 32617 ;; This function uses a non-reentrant model
 32618 ;;
 32619                           
 32620                           	psect	text177
 32621  002BCC                     __ptext177:
 32622                           	opt stack 0
 32623  002BCC                     _cal_diff_hight_level:
 32624                           	opt stack 21
 32625                           
 32626                           ;data.c: 472: float f1,f2;
 32627                           ;data.c: 473: if(stSysData.pos==HOTIZONTAL){
 32628                           
 32629                           ; BSR set to: 0
 32630                           ;incstack = 0
 32631  002BCC  0102               	movlb	2	; () banked
 32632  002BCE  5104               	movf	(_stSysData+4)& (0+255),w,b
 32633  002BD0  A4D8               	btfss	status,2,c
 32634  002BD2  D014               	goto	l14524
 32635                           
 32636                           ; BSR set to: 2
 32637                           ;data.c: 474: f1=(float)stSysData.d;
 32638  002BD4  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32639  002BD8  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32640  002BDC  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32641  002BE0  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32642  002BE4  0E00               	movlw	0
 32643  002BE6  EC86  F01C         	call	___xxtofl
 32644  002BEA  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 32645  002BEE  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 32646  002BF2  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 32647  002BF6  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 32648                           
 32649                           ;data.c: 475: }else{
 32650  002BFA  D077               	goto	l14526
 32651  002BFC                     l14524:
 32652                           
 32653                           ;data.c: 476: f1=(float)stSysData.h;
 32654  002BFC  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32655  002C00  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32656  002C04  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32657  002C08  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32658  002C0C  0E01               	movlw	1
 32659  002C0E  EC86  F01C         	call	___xxtofl
 32660  002C12  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 32661  002C16  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 32662  002C1A  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 32663  002C1E  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 32664                           
 32665                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 32666  002C22  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32667  002C26  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32668  002C2A  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32669  002C2E  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32670  002C32  0E00               	movlw	0
 32671  002C34  EC86  F01C         	call	___xxtofl
 32672  002C38  C060  F0A8         	movff	?___xxtofl,___fladd@a
 32673  002C3C  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 32674  002C40  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 32675  002C44  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 32676  002C48  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32677  002C4C  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32678  002C50  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32679  002C54  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32680  002C58  0E00               	movlw	0
 32681  002C5A  EC86  F01C         	call	___xxtofl
 32682  002C5E  C060  F0A4         	movff	?___xxtofl,___fladd@b
 32683  002C62  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 32684  002C66  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 32685  002C6A  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 32686  002C6E  EC4B  F006         	call	___fladd	;wreg free
 32687  002C72  C0A4  F0C4         	movff	?___fladd,_cal_diff_hight_level$5838
 32688  002C76  C0A5  F0C5         	movff	?___fladd+1,_cal_diff_hight_level$5838+1
 32689  002C7A  C0A6  F0C6         	movff	?___fladd+2,_cal_diff_hight_level$5838+2
 32690  002C7E  C0A7  F0C7         	movff	?___fladd+3,_cal_diff_hight_level$5838+3
 32691                           
 32692                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 32693  002C82  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 32694  002C86  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 32695  002C8A  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 32696  002C8E  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 32697  002C92  C0C4  F0A4         	movff	_cal_diff_hight_level$5838,___fladd@b
 32698  002C96  C0C5  F0A5         	movff	_cal_diff_hight_level$5838+1,___fladd@b+1
 32699  002C9A  C0C6  F0A6         	movff	_cal_diff_hight_level$5838+2,___fladd@b+2
 32700  002C9E  C0C7  F0A7         	movff	_cal_diff_hight_level$5838+3,___fladd@b+3
 32701  002CA2  EC4B  F006         	call	___fladd	;wreg free
 32702  002CA6  C0A4  F0C8         	movff	?___fladd,_cal_diff_hight_level$5839
 32703  002CAA  C0A5  F0C9         	movff	?___fladd+1,_cal_diff_hight_level$5839+1
 32704  002CAE  C0A6  F0CA         	movff	?___fladd+2,_cal_diff_hight_level$5839+2
 32705  002CB2  C0A7  F0CB         	movff	?___fladd+3,_cal_diff_hight_level$5839+3
 32706                           
 32707                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 32708  002CB6  C0C8  F0A4         	movff	_cal_diff_hight_level$5839,___fladd@b
 32709  002CBA  C0C9  F0A5         	movff	_cal_diff_hight_level$5839+1,___fladd@b+1
 32710  002CBE  C0CA  F0A6         	movff	_cal_diff_hight_level$5839+2,___fladd@b+2
 32711  002CC2  C0CB  F0A7         	movff	_cal_diff_hight_level$5839+3,___fladd@b+3
 32712  002CC6  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 32713  002CCA  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 32714  002CCE  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 32715  002CD2  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 32716  002CD6  EC4B  F006         	call	___fladd	;wreg free
 32717  002CDA  C0A4  F0D0         	movff	?___fladd,cal_diff_hight_level@f1
 32718  002CDE  C0A5  F0D1         	movff	?___fladd+1,cal_diff_hight_level@f1+1
 32719  002CE2  C0A6  F0D2         	movff	?___fladd+2,cal_diff_hight_level@f1+2
 32720  002CE6  C0A7  F0D3         	movff	?___fladd+3,cal_diff_hight_level@f1+3
 32721  002CEA                     l14526:
 32722                           
 32723                           ;data.c: 478: }
 32724                           ;data.c: 479: f1=f1*(stSysData.maxValueForlevelBar)/100;
 32725  002CEA  C0D0  F072         	movff	cal_diff_hight_level@f1,___flmul@a
 32726  002CEE  C0D1  F073         	movff	cal_diff_hight_level@f1+1,___flmul@a+1
 32727  002CF2  C0D2  F074         	movff	cal_diff_hight_level@f1+2,___flmul@a+2
 32728  002CF6  C0D3  F075         	movff	cal_diff_hight_level@f1+3,___flmul@a+3
 32729  002CFA  0102               	movlb	2	; () banked
 32730  002CFC  5105               	movf	(_stSysData+5)& (0+255),w,b
 32731  002CFE  0100               	movlb	0	; () banked
 32732  002D00  6F60               	movwf	___xxtofl@val& (0+255),b
 32733  002D02  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 32734  002D04  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 32735  002D06  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 32736  002D08  0E00               	movlw	0
 32737  002D0A  EC86  F01C         	call	___xxtofl
 32738  002D0E  C060  F06E         	movff	?___xxtofl,___flmul@b
 32739  002D12  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 32740  002D16  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 32741  002D1A  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 32742  002D1E  EC9F  F008         	call	___flmul	;wreg free
 32743  002D22  C06E  F087         	movff	?___flmul,___fldiv@b
 32744  002D26  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 32745  002D2A  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 32746  002D2E  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 32747  002D32  0E00               	movlw	0
 32748  002D34  0100               	movlb	0	; () banked
 32749  002D36  6F8B               	movwf	___fldiv@a& (0+255),b
 32750  002D38  0E00               	movlw	0
 32751  002D3A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32752  002D3C  0EC8               	movlw	200
 32753  002D3E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32754  002D40  0E42               	movlw	66
 32755  002D42  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32756  002D44  EC40  F00F         	call	___fldiv	;wreg free
 32757  002D48  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 32758  002D4C  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 32759  002D50  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 32760  002D54  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 32761                           
 32762                           ;data.c: 480: if(f1==0)f1=1;
 32763  002D58  0100               	movlb	0	; () banked
 32764  002D5A  51D0               	movf	cal_diff_hight_level@f1& (0+255),w,b
 32765  002D5C  0100               	movlb	0	; () banked
 32766  002D5E  11D1               	iorwf	(cal_diff_hight_level@f1+1)& (0+255),w,b
 32767  002D60  0100               	movlb	0	; () banked
 32768  002D62  11D2               	iorwf	(cal_diff_hight_level@f1+2)& (0+255),w,b
 32769  002D64  0100               	movlb	0	; () banked
 32770  002D66  11D3               	iorwf	(cal_diff_hight_level@f1+3)& (0+255),w,b
 32771  002D68  A4D8               	btfss	status,2,c
 32772  002D6A  D009               	goto	l14532
 32773                           
 32774                           ; BSR set to: 0
 32775  002D6C  0E00               	movlw	0
 32776  002D6E  0100               	movlb	0	; () banked
 32777  002D70  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 32778  002D72  0E00               	movlw	0
 32779  002D74  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 32780  002D76  0E80               	movlw	128
 32781  002D78  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 32782  002D7A  0E3F               	movlw	63
 32783  002D7C  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 32784  002D7E                     l14532:
 32785                           
 32786                           ; BSR set to: 0
 32787                           ;data.c: 481: f2=(float)rtHight;
 32788  002D7E  C0E8  F060         	movff	_rtHight,___xxtofl@val	;volatile
 32789  002D82  C0E9  F061         	movff	_rtHight+1,___xxtofl@val+1	;volatile
 32790  002D86  C0EA  F062         	movff	_rtHight+2,___xxtofl@val+2	;volatile
 32791  002D8A  C0EB  F063         	movff	_rtHight+3,___xxtofl@val+3	;volatile
 32792  002D8E  0E01               	movlw	1
 32793  002D90  EC86  F01C         	call	___xxtofl
 32794  002D94  C060  F0CC         	movff	?___xxtofl,cal_diff_hight_level@f2
 32795  002D98  C061  F0CD         	movff	?___xxtofl+1,cal_diff_hight_level@f2+1
 32796  002D9C  C062  F0CE         	movff	?___xxtofl+2,cal_diff_hight_level@f2+2
 32797  002DA0  C063  F0CF         	movff	?___xxtofl+3,cal_diff_hight_level@f2+3
 32798                           
 32799                           ;data.c: 482: if(f2<0.0)f2=0.0;
 32800  002DA4  0100               	movlb	0	; () banked
 32801  002DA6  AFCF               	btfss	(cal_diff_hight_level@f2+3)& (0+255),7,b
 32802  002DA8  D009               	goto	l14538
 32803                           
 32804                           ; BSR set to: 0
 32805  002DAA  0E00               	movlw	0
 32806  002DAC  0100               	movlb	0	; () banked
 32807  002DAE  6FCC               	movwf	cal_diff_hight_level@f2& (0+255),b
 32808  002DB0  0E00               	movlw	0
 32809  002DB2  6FCD               	movwf	(cal_diff_hight_level@f2+1)& (0+255),b
 32810  002DB4  0E00               	movlw	0
 32811  002DB6  6FCE               	movwf	(cal_diff_hight_level@f2+2)& (0+255),b
 32812  002DB8  0E00               	movlw	0
 32813  002DBA  6FCF               	movwf	(cal_diff_hight_level@f2+3)& (0+255),b
 32814  002DBC                     l14538:
 32815                           
 32816                           ; BSR set to: 0
 32817                           ;data.c: 483: f1=f2/f1;
 32818  002DBC  C0CC  F087         	movff	cal_diff_hight_level@f2,___fldiv@b
 32819  002DC0  C0CD  F088         	movff	cal_diff_hight_level@f2+1,___fldiv@b+1
 32820  002DC4  C0CE  F089         	movff	cal_diff_hight_level@f2+2,___fldiv@b+2
 32821  002DC8  C0CF  F08A         	movff	cal_diff_hight_level@f2+3,___fldiv@b+3
 32822  002DCC  C0D0  F08B         	movff	cal_diff_hight_level@f1,___fldiv@a
 32823  002DD0  C0D1  F08C         	movff	cal_diff_hight_level@f1+1,___fldiv@a+1
 32824  002DD4  C0D2  F08D         	movff	cal_diff_hight_level@f1+2,___fldiv@a+2
 32825  002DD8  C0D3  F08E         	movff	cal_diff_hight_level@f1+3,___fldiv@a+3
 32826  002DDC  EC40  F00F         	call	___fldiv	;wreg free
 32827  002DE0  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 32828  002DE4  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 32829  002DE8  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 32830  002DEC  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 32831                           
 32832                           ;data.c: 484: f1*=100;
 32833  002DF0  C0D0  F06E         	movff	cal_diff_hight_level@f1,___flmul@b
 32834  002DF4  C0D1  F06F         	movff	cal_diff_hight_level@f1+1,___flmul@b+1
 32835  002DF8  C0D2  F070         	movff	cal_diff_hight_level@f1+2,___flmul@b+2
 32836  002DFC  C0D3  F071         	movff	cal_diff_hight_level@f1+3,___flmul@b+3
 32837  002E00  0E00               	movlw	0
 32838  002E02  0100               	movlb	0	; () banked
 32839  002E04  6F72               	movwf	___flmul@a& (0+255),b
 32840  002E06  0E00               	movlw	0
 32841  002E08  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32842  002E0A  0EC8               	movlw	200
 32843  002E0C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32844  002E0E  0E42               	movlw	66
 32845  002E10  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32846  002E12  EC9F  F008         	call	___flmul	;wreg free
 32847  002E16  C06E  F0D0         	movff	?___flmul,cal_diff_hight_level@f1
 32848  002E1A  C06F  F0D1         	movff	?___flmul+1,cal_diff_hight_level@f1+1
 32849  002E1E  C070  F0D2         	movff	?___flmul+2,cal_diff_hight_level@f1+2
 32850  002E22  C071  F0D3         	movff	?___flmul+3,cal_diff_hight_level@f1+3
 32851                           
 32852                           ;data.c: 485: if(f1>100)f1=100;
 32853  002E26  0E00               	movlw	0
 32854  002E28  0100               	movlb	0	; () banked
 32855  002E2A  6FB8               	movwf	___flge@ff1& (0+255),b
 32856  002E2C  0E00               	movlw	0
 32857  002E2E  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 32858  002E30  0EC8               	movlw	200
 32859  002E32  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 32860  002E34  0E42               	movlw	66
 32861  002E36  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 32862  002E38  C0D0  F0BC         	movff	cal_diff_hight_level@f1,___flge@ff2
 32863  002E3C  C0D1  F0BD         	movff	cal_diff_hight_level@f1+1,___flge@ff2+1
 32864  002E40  C0D2  F0BE         	movff	cal_diff_hight_level@f1+2,___flge@ff2+2
 32865  002E44  C0D3  F0BF         	movff	cal_diff_hight_level@f1+3,___flge@ff2+3
 32866  002E48  EC09  F020         	call	___flge	;wreg free
 32867  002E4C  0100               	movlb	0	; () banked
 32868  002E4E  B0D8               	btfsc	status,0,c
 32869  002E50  D009               	goto	l14546
 32870                           
 32871                           ; BSR set to: 0
 32872  002E52  0E00               	movlw	0
 32873  002E54  0100               	movlb	0	; () banked
 32874  002E56  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 32875  002E58  0E00               	movlw	0
 32876  002E5A  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 32877  002E5C  0EC8               	movlw	200
 32878  002E5E  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 32879  002E60  0E42               	movlw	66
 32880  002E62  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 32881  002E64                     l14546:
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;data.c: 486: rtLevel=(uint8_t)f1;
 32885  002E64  C0D0  F0B8         	movff	cal_diff_hight_level@f1,___fltol@f1
 32886  002E68  C0D1  F0B9         	movff	cal_diff_hight_level@f1+1,___fltol@f1+1
 32887  002E6C  C0D2  F0BA         	movff	cal_diff_hight_level@f1+2,___fltol@f1+2
 32888  002E70  C0D3  F0BB         	movff	cal_diff_hight_level@f1+3,___fltol@f1+3
 32889  002E74  EC54  F02A         	call	___fltol	;wreg free
 32890  002E78  0100               	movlb	0	; () banked
 32891  002E7A  51B8               	movf	?___fltol& (0+255),w,b
 32892  002E7C  0100               	movlb	0	; () banked
 32893  002E7E  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 32894                           
 32895                           ; BSR set to: 0
 32896                           ;data.c: 487: return rtLevel;
 32897  002E80  0100               	movlb	0	; () banked
 32898  002E82  51FE               	movf	_rtLevel& (0+255),w,b	;volatile
 32899  002E84  0012               	return	
 32900  002E86                     __end_of_cal_diff_hight_level:
 32901                           	opt stack 0
 32902                           tosu	equ	0xFFF
 32903                           tosh	equ	0xFFE
 32904                           tosl	equ	0xFFD
 32905                           pclath	equ	0xFFA
 32906                           tblptru	equ	0xFF8
 32907                           tblptrh	equ	0xFF7
 32908                           tblptrl	equ	0xFF6
 32909                           tablat	equ	0xFF5
 32910                           prodh	equ	0xFF4
 32911                           prodl	equ	0xFF3
 32912                           intcon	equ	0xFF2
 32913                           indf0	equ	0xFEF
 32914                           postinc0	equ	0xFEE
 32915                           fsr0h	equ	0xFEA
 32916                           fsr0l	equ	0xFE9
 32917                           wreg	equ	0xFE8
 32918                           indf1	equ	0xFE7
 32919                           postinc1	equ	0xFE6
 32920                           postdec1	equ	0xFE5
 32921                           plusw1	equ	0xFE3
 32922                           fsr1h	equ	0xFE2
 32923                           fsr1l	equ	0xFE1
 32924                           indf2	equ	0xFDF
 32925                           postinc2	equ	0xFDE
 32926                           postdec2	equ	0xFDD
 32927                           plusw2	equ	0xFDB
 32928                           fsr2h	equ	0xFDA
 32929                           fsr2l	equ	0xFD9
 32930                           status	equ	0xFD8
 32931                           
 32932 ;; *************** function ___flge *****************
 32933 ;; Defined at:
 32934 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flge.c"
 32935 ;; Parameters:    Size  Location     Type
 32936 ;;  ff1             4   88[BANK0 ] unsigned char 
 32937 ;;  ff2             4   92[BANK0 ] unsigned char 
 32938 ;; Auto vars:     Size  Location     Type
 32939 ;;		None
 32940 ;; Return value:  Size  Location     Type
 32941 ;;		None               void
 32942 ;; Registers used:
 32943 ;;		wreg, status,2, status,0
 32944 ;; Tracked objects:
 32945 ;;		On entry : 0/0
 32946 ;;		On exit  : 0/0
 32947 ;;		Unchanged: 0/0
 32948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32949 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32952 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32953 ;;Total ram usage:       12 bytes
 32954 ;; Hardware stack levels used:    1
 32955 ;; Hardware stack levels required when called:    4
 32956 ;; This function calls:
 32957 ;;		Nothing
 32958 ;; This function is called by:
 32959 ;;		_m_interp1_float_fast
 32960 ;;		_cal_diff_hight_to_vol_h
 32961 ;;		_cal_diff_hight_level
 32962 ;;		_cal_diff_hight_to_vol_v
 32963 ;; This function uses a non-reentrant model
 32964 ;;
 32965                           
 32966                           	psect	text178
 32967  004012                     __ptext178:
 32968                           	opt stack 0
 32969  004012                     ___flge:
 32970                           	opt stack 20
 32971                           
 32972                           ; BSR set to: 0
 32973                           ;incstack = 0
 32974  004012  0E00               	movlw	0
 32975  004014  0100               	movlb	0	; () banked
 32976  004016  15B8               	andwf	___flge@ff1& (0+255),w,b
 32977  004018  0100               	movlb	0	; () banked
 32978  00401A  6FC0               	movwf	??___flge& (0+255),b
 32979  00401C  0E00               	movlw	0
 32980  00401E  0100               	movlb	0	; () banked
 32981  004020  15B9               	andwf	(___flge@ff1+1)& (0+255),w,b
 32982  004022  0100               	movlb	0	; () banked
 32983  004024  6FC1               	movwf	(??___flge+1)& (0+255),b
 32984  004026  0E80               	movlw	128
 32985  004028  0100               	movlb	0	; () banked
 32986  00402A  15BA               	andwf	(___flge@ff1+2)& (0+255),w,b
 32987  00402C  0100               	movlb	0	; () banked
 32988  00402E  6FC2               	movwf	(??___flge+2)& (0+255),b
 32989  004030  0E7F               	movlw	127
 32990  004032  0100               	movlb	0	; () banked
 32991  004034  15BB               	andwf	(___flge@ff1+3)& (0+255),w,b
 32992  004036  0100               	movlb	0	; () banked
 32993  004038  6FC3               	movwf	(??___flge+3)& (0+255),b
 32994  00403A  0100               	movlb	0	; () banked
 32995  00403C  51C0               	movf	??___flge& (0+255),w,b
 32996  00403E  0100               	movlb	0	; () banked
 32997  004040  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 32998  004042  0100               	movlb	0	; () banked
 32999  004044  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 33000  004046  0100               	movlb	0	; () banked
 33001  004048  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 33002  00404A  A4D8               	btfss	status,2,c
 33003  00404C  D009               	goto	l13842
 33004                           
 33005                           ; BSR set to: 0
 33006  00404E  0E00               	movlw	0
 33007  004050  0100               	movlb	0	; () banked
 33008  004052  6FB8               	movwf	___flge@ff1& (0+255),b
 33009  004054  0E00               	movlw	0
 33010  004056  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 33011  004058  0E00               	movlw	0
 33012  00405A  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 33013  00405C  0E00               	movlw	0
 33014  00405E  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 33015  004060                     l13842:
 33016                           
 33017                           ; BSR set to: 0
 33018  004060  0E00               	movlw	0
 33019  004062  0100               	movlb	0	; () banked
 33020  004064  15BC               	andwf	___flge@ff2& (0+255),w,b
 33021  004066  0100               	movlb	0	; () banked
 33022  004068  6FC0               	movwf	??___flge& (0+255),b
 33023  00406A  0E00               	movlw	0
 33024  00406C  0100               	movlb	0	; () banked
 33025  00406E  15BD               	andwf	(___flge@ff2+1)& (0+255),w,b
 33026  004070  0100               	movlb	0	; () banked
 33027  004072  6FC1               	movwf	(??___flge+1)& (0+255),b
 33028  004074  0E80               	movlw	128
 33029  004076  0100               	movlb	0	; () banked
 33030  004078  15BE               	andwf	(___flge@ff2+2)& (0+255),w,b
 33031  00407A  0100               	movlb	0	; () banked
 33032  00407C  6FC2               	movwf	(??___flge+2)& (0+255),b
 33033  00407E  0E7F               	movlw	127
 33034  004080  0100               	movlb	0	; () banked
 33035  004082  15BF               	andwf	(___flge@ff2+3)& (0+255),w,b
 33036  004084  0100               	movlb	0	; () banked
 33037  004086  6FC3               	movwf	(??___flge+3)& (0+255),b
 33038  004088  0100               	movlb	0	; () banked
 33039  00408A  51C0               	movf	??___flge& (0+255),w,b
 33040  00408C  0100               	movlb	0	; () banked
 33041  00408E  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 33042  004090  0100               	movlb	0	; () banked
 33043  004092  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 33044  004094  0100               	movlb	0	; () banked
 33045  004096  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 33046  004098  A4D8               	btfss	status,2,c
 33047  00409A  D009               	goto	l13846
 33048                           
 33049                           ; BSR set to: 0
 33050  00409C  0E00               	movlw	0
 33051  00409E  0100               	movlb	0	; () banked
 33052  0040A0  6FBC               	movwf	___flge@ff2& (0+255),b
 33053  0040A2  0E00               	movlw	0
 33054  0040A4  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 33055  0040A6  0E00               	movlw	0
 33056  0040A8  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 33057  0040AA  0E00               	movlw	0
 33058  0040AC  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 33059  0040AE                     l13846:
 33060                           
 33061                           ; BSR set to: 0
 33062  0040AE  0100               	movlb	0	; () banked
 33063  0040B0  AFBB               	btfss	(___flge@ff1+3)& (0+255),7,b
 33064  0040B2  D026               	goto	l13850
 33065                           
 33066                           ; BSR set to: 0
 33067  0040B4  C0B8  F0C0         	movff	___flge@ff1,??___flge
 33068  0040B8  C0B9  F0C1         	movff	___flge@ff1+1,??___flge+1
 33069  0040BC  C0BA  F0C2         	movff	___flge@ff1+2,??___flge+2
 33070  0040C0  C0BB  F0C3         	movff	___flge@ff1+3,??___flge+3
 33071  0040C4  0100               	movlb	0	; () banked
 33072  0040C6  1FC0               	comf	??___flge& (0+255),f,b
 33073  0040C8  1FC1               	comf	(??___flge+1)& (0+255),f,b
 33074  0040CA  1FC2               	comf	(??___flge+2)& (0+255),f,b
 33075  0040CC  1FC3               	comf	(??___flge+3)& (0+255),f,b
 33076  0040CE  2BC0               	incf	??___flge& (0+255),f,b
 33077  0040D0  0E00               	movlw	0
 33078  0040D2  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 33079  0040D4  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 33080  0040D6  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 33081  0040D8  0E00               	movlw	0
 33082  0040DA  0100               	movlb	0	; () banked
 33083  0040DC  25C0               	addwf	??___flge& (0+255),w,b
 33084  0040DE  0100               	movlb	0	; () banked
 33085  0040E0  6FB8               	movwf	___flge@ff1& (0+255),b
 33086  0040E2  0E00               	movlw	0
 33087  0040E4  0100               	movlb	0	; () banked
 33088  0040E6  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 33089  0040E8  0100               	movlb	0	; () banked
 33090  0040EA  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 33091  0040EC  0E00               	movlw	0
 33092  0040EE  0100               	movlb	0	; () banked
 33093  0040F0  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 33094  0040F2  0100               	movlb	0	; () banked
 33095  0040F4  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 33096  0040F6  0E80               	movlw	128
 33097  0040F8  0100               	movlb	0	; () banked
 33098  0040FA  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 33099  0040FC  0100               	movlb	0	; () banked
 33100  0040FE  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 33101  004100                     l13850:
 33102                           
 33103                           ; BSR set to: 0
 33104  004100  0100               	movlb	0	; () banked
 33105  004102  AFBF               	btfss	(___flge@ff2+3)& (0+255),7,b
 33106  004104  D026               	goto	l2621
 33107                           
 33108                           ; BSR set to: 0
 33109  004106  C0BC  F0C0         	movff	___flge@ff2,??___flge
 33110  00410A  C0BD  F0C1         	movff	___flge@ff2+1,??___flge+1
 33111  00410E  C0BE  F0C2         	movff	___flge@ff2+2,??___flge+2
 33112  004112  C0BF  F0C3         	movff	___flge@ff2+3,??___flge+3
 33113  004116  0100               	movlb	0	; () banked
 33114  004118  1FC0               	comf	??___flge& (0+255),f,b
 33115  00411A  1FC1               	comf	(??___flge+1)& (0+255),f,b
 33116  00411C  1FC2               	comf	(??___flge+2)& (0+255),f,b
 33117  00411E  1FC3               	comf	(??___flge+3)& (0+255),f,b
 33118  004120  2BC0               	incf	??___flge& (0+255),f,b
 33119  004122  0E00               	movlw	0
 33120  004124  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 33121  004126  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 33122  004128  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 33123  00412A  0E00               	movlw	0
 33124  00412C  0100               	movlb	0	; () banked
 33125  00412E  25C0               	addwf	??___flge& (0+255),w,b
 33126  004130  0100               	movlb	0	; () banked
 33127  004132  6FBC               	movwf	___flge@ff2& (0+255),b
 33128  004134  0E00               	movlw	0
 33129  004136  0100               	movlb	0	; () banked
 33130  004138  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 33131  00413A  0100               	movlb	0	; () banked
 33132  00413C  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 33133  00413E  0E00               	movlw	0
 33134  004140  0100               	movlb	0	; () banked
 33135  004142  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 33136  004144  0100               	movlb	0	; () banked
 33137  004146  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 33138  004148  0E80               	movlw	128
 33139  00414A  0100               	movlb	0	; () banked
 33140  00414C  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 33141  00414E  0100               	movlb	0	; () banked
 33142  004150  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 33143  004152                     l2621:
 33144                           
 33145                           ; BSR set to: 0
 33146  004152  0E00               	movlw	0
 33147  004154  0100               	movlb	0	; () banked
 33148  004156  1BB8               	xorwf	___flge@ff1& (0+255),f,b
 33149  004158  0E00               	movlw	0
 33150  00415A  1BB9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 33151  00415C  0E00               	movlw	0
 33152  00415E  1BBA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 33153  004160  0E80               	movlw	128
 33154  004162  1BBB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 33155  004164  0E00               	movlw	0
 33156  004166  0100               	movlb	0	; () banked
 33157  004168  1BBC               	xorwf	___flge@ff2& (0+255),f,b
 33158  00416A  0E00               	movlw	0
 33159  00416C  1BBD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 33160  00416E  0E00               	movlw	0
 33161  004170  1BBE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 33162  004172  0E80               	movlw	128
 33163  004174  1BBF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 33164  004176  0100               	movlb	0	; () banked
 33165  004178  51BC               	movf	___flge@ff2& (0+255),w,b
 33166  00417A  0100               	movlb	0	; () banked
 33167  00417C  5DB8               	subwf	___flge@ff1& (0+255),w,b
 33168  00417E  0100               	movlb	0	; () banked
 33169  004180  51BD               	movf	(___flge@ff2+1)& (0+255),w,b
 33170  004182  0100               	movlb	0	; () banked
 33171  004184  59B9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 33172  004186  0100               	movlb	0	; () banked
 33173  004188  51BE               	movf	(___flge@ff2+2)& (0+255),w,b
 33174  00418A  0100               	movlb	0	; () banked
 33175  00418C  59BA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 33176  00418E  0100               	movlb	0	; () banked
 33177  004190  51BF               	movf	(___flge@ff2+3)& (0+255),w,b
 33178  004192  0100               	movlb	0	; () banked
 33179  004194  59BB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 33180  004196  B0D8               	btfsc	status,0,c
 33181  004198  D002               	goto	l13856
 33182                           
 33183                           ; BSR set to: 0
 33184  00419A  90D8               	bcf	status,0,c
 33185  00419C  0012               	return	
 33186  00419E                     l13856:
 33187                           
 33188                           ; BSR set to: 0
 33189  00419E  80D8               	bsf	status,0,c
 33190                           
 33191                           ; BSR set to: 0
 33192  0041A0  0012               	return	
 33193  0041A2                     __end_of___flge:
 33194                           	opt stack 0
 33195                           tosu	equ	0xFFF
 33196                           tosh	equ	0xFFE
 33197                           tosl	equ	0xFFD
 33198                           pclath	equ	0xFFA
 33199                           tblptru	equ	0xFF8
 33200                           tblptrh	equ	0xFF7
 33201                           tblptrl	equ	0xFF6
 33202                           tablat	equ	0xFF5
 33203                           prodh	equ	0xFF4
 33204                           prodl	equ	0xFF3
 33205                           intcon	equ	0xFF2
 33206                           indf0	equ	0xFEF
 33207                           postinc0	equ	0xFEE
 33208                           fsr0h	equ	0xFEA
 33209                           fsr0l	equ	0xFE9
 33210                           wreg	equ	0xFE8
 33211                           indf1	equ	0xFE7
 33212                           postinc1	equ	0xFE6
 33213                           postdec1	equ	0xFE5
 33214                           plusw1	equ	0xFE3
 33215                           fsr1h	equ	0xFE2
 33216                           fsr1l	equ	0xFE1
 33217                           indf2	equ	0xFDF
 33218                           postinc2	equ	0xFDE
 33219                           postdec2	equ	0xFDD
 33220                           plusw2	equ	0xFDB
 33221                           fsr2h	equ	0xFDA
 33222                           fsr2l	equ	0xFD9
 33223                           status	equ	0xFD8
 33224                           
 33225 ;; *************** function ___fladd *****************
 33226 ;; Defined at:
 33227 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 33228 ;; Parameters:    Size  Location     Type
 33229 ;;  b               4   68[BANK0 ] unsigned char 
 33230 ;;  a               4   72[BANK0 ] unsigned char 
 33231 ;; Auto vars:     Size  Location     Type
 33232 ;;  grs             1   87[BANK0 ] unsigned char 
 33233 ;;  bexp            1   86[BANK0 ] unsigned char 
 33234 ;;  aexp            1   85[BANK0 ] unsigned char 
 33235 ;;  signs           1   84[BANK0 ] unsigned char 
 33236 ;; Return value:  Size  Location     Type
 33237 ;;                  4   68[BANK0 ] unsigned char 
 33238 ;; Registers used:
 33239 ;;		wreg, status,2, status,0
 33240 ;; Tracked objects:
 33241 ;;		On entry : 0/0
 33242 ;;		On exit  : 0/0
 33243 ;;		Unchanged: 0/0
 33244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33245 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33246 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33247 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33248 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33249 ;;Total ram usage:       20 bytes
 33250 ;; Hardware stack levels used:    1
 33251 ;; Hardware stack levels required when called:    4
 33252 ;; This function calls:
 33253 ;;		Nothing
 33254 ;; This function is called by:
 33255 ;;		_m_interp1_float_fast
 33256 ;;		_cal_diff_hight_to_vol_h
 33257 ;;		_cal_diff_hight_level
 33258 ;;		_cal_diff_hight_to_vol_v
 33259 ;; This function uses a non-reentrant model
 33260 ;;
 33261                           
 33262                           	psect	text179
 33263  000C96                     __ptext179:
 33264                           	opt stack 0
 33265  000C96                     ___fladd:
 33266                           	opt stack 20
 33267                           
 33268                           ; BSR set to: 0
 33269                           ;incstack = 0
 33270  000C96  0100               	movlb	0	; () banked
 33271  000C98  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 33272  000C9A  0B80               	andlw	128
 33273  000C9C  0100               	movlb	0	; () banked
 33274  000C9E  6FB4               	movwf	___fladd@signs& (0+255),b
 33275  000CA0  0100               	movlb	0	; () banked
 33276  000CA2  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 33277  000CA4  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 33278  000CA6  0100               	movlb	0	; () banked
 33279  000CA8  6FB6               	movwf	___fladd@bexp& (0+255),b
 33280                           
 33281                           ; BSR set to: 0
 33282  000CAA  0100               	movlb	0	; () banked
 33283  000CAC  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 33284  000CAE  D002               	goto	l13340
 33285                           
 33286                           ; BSR set to: 0
 33287  000CB0  0100               	movlb	0	; () banked
 33288  000CB2  81B6               	bsf	___fladd@bexp& (0+255),0,b
 33289  000CB4                     l13340:
 33290                           
 33291                           ; BSR set to: 0
 33292  000CB4  0100               	movlb	0	; () banked
 33293  000CB6  51B6               	movf	___fladd@bexp& (0+255),w,b
 33294  000CB8  0100               	movlb	0	; () banked
 33295  000CBA  B4D8               	btfsc	status,2,c
 33296  000CBC  D012               	goto	l13350
 33297                           
 33298                           ; BSR set to: 0
 33299  000CBE  0100               	movlb	0	; () banked
 33300  000CC0  29B6               	incf	___fladd@bexp& (0+255),w,b
 33301  000CC2  A4D8               	btfss	status,2,c
 33302  000CC4  D009               	goto	l13346
 33303                           
 33304                           ; BSR set to: 0
 33305  000CC6  0E00               	movlw	0
 33306  000CC8  0100               	movlb	0	; () banked
 33307  000CCA  6FA4               	movwf	___fladd@b& (0+255),b
 33308  000CCC  0E00               	movlw	0
 33309  000CCE  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 33310  000CD0  0E00               	movlw	0
 33311  000CD2  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 33312  000CD4  0E00               	movlw	0
 33313  000CD6  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 33314  000CD8                     l13346:
 33315                           
 33316                           ; BSR set to: 0
 33317  000CD8  0100               	movlb	0	; () banked
 33318  000CDA  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 33319                           
 33320                           ; BSR set to: 0
 33321  000CDC  0E00               	movlw	0
 33322  000CDE  0100               	movlb	0	; () banked
 33323  000CE0  D008               	goto	L27
 33324  000CE2                     l13350:
 33325                           
 33326                           ; BSR set to: 0
 33327  000CE2  0E00               	movlw	0
 33328  000CE4  0100               	movlb	0	; () banked
 33329  000CE6  6FA4               	movwf	___fladd@b& (0+255),b
 33330  000CE8  0E00               	movlw	0
 33331  000CEA  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 33332  000CEC  0E00               	movlw	0
 33333  000CEE  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 33334  000CF0  0E00               	movlw	0
 33335  000CF2                     L27:
 33336  000CF2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 33337                           
 33338                           ; BSR set to: 0
 33339                           
 33340                           ; BSR set to: 0
 33341  000CF4  0100               	movlb	0	; () banked
 33342  000CF6  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33343  000CF8  0B80               	andlw	128
 33344  000CFA  0100               	movlb	0	; () banked
 33345  000CFC  6FB5               	movwf	___fladd@aexp& (0+255),b
 33346                           
 33347                           ; BSR set to: 0
 33348  000CFE  0100               	movlb	0	; () banked
 33349  000D00  51B4               	movf	___fladd@signs& (0+255),w,b
 33350  000D02  0100               	movlb	0	; () banked
 33351  000D04  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 33352  000D06  B4D8               	btfsc	status,2,c
 33353  000D08  D002               	goto	l13358
 33354                           
 33355                           ; BSR set to: 0
 33356  000D0A  0100               	movlb	0	; () banked
 33357  000D0C  8DB4               	bsf	___fladd@signs& (0+255),6,b
 33358  000D0E                     l13358:
 33359                           
 33360                           ; BSR set to: 0
 33361  000D0E  0100               	movlb	0	; () banked
 33362  000D10  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33363  000D12  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 33364  000D14  0100               	movlb	0	; () banked
 33365  000D16  6FB5               	movwf	___fladd@aexp& (0+255),b
 33366                           
 33367                           ; BSR set to: 0
 33368  000D18  0100               	movlb	0	; () banked
 33369  000D1A  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 33370  000D1C  D002               	goto	l13364
 33371                           
 33372                           ; BSR set to: 0
 33373  000D1E  0100               	movlb	0	; () banked
 33374  000D20  81B5               	bsf	___fladd@aexp& (0+255),0,b
 33375  000D22                     l13364:
 33376                           
 33377                           ; BSR set to: 0
 33378  000D22  0100               	movlb	0	; () banked
 33379  000D24  51B5               	movf	___fladd@aexp& (0+255),w,b
 33380  000D26  0100               	movlb	0	; () banked
 33381  000D28  B4D8               	btfsc	status,2,c
 33382  000D2A  D012               	goto	l13374
 33383                           
 33384                           ; BSR set to: 0
 33385  000D2C  0100               	movlb	0	; () banked
 33386  000D2E  29B5               	incf	___fladd@aexp& (0+255),w,b
 33387  000D30  A4D8               	btfss	status,2,c
 33388  000D32  D009               	goto	l13370
 33389                           
 33390                           ; BSR set to: 0
 33391  000D34  0E00               	movlw	0
 33392  000D36  0100               	movlb	0	; () banked
 33393  000D38  6FA8               	movwf	___fladd@a& (0+255),b
 33394  000D3A  0E00               	movlw	0
 33395  000D3C  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 33396  000D3E  0E00               	movlw	0
 33397  000D40  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 33398  000D42  0E00               	movlw	0
 33399  000D44  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 33400  000D46                     l13370:
 33401                           
 33402                           ; BSR set to: 0
 33403  000D46  0100               	movlb	0	; () banked
 33404  000D48  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 33405                           
 33406                           ; BSR set to: 0
 33407  000D4A  0E00               	movlw	0
 33408  000D4C  0100               	movlb	0	; () banked
 33409  000D4E  D008               	goto	L28
 33410  000D50                     l13374:
 33411                           
 33412                           ; BSR set to: 0
 33413  000D50  0E00               	movlw	0
 33414  000D52  0100               	movlb	0	; () banked
 33415  000D54  6FA8               	movwf	___fladd@a& (0+255),b
 33416  000D56  0E00               	movlw	0
 33417  000D58  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 33418  000D5A  0E00               	movlw	0
 33419  000D5C  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 33420  000D5E  0E00               	movlw	0
 33421  000D60                     L28:
 33422  000D60  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 33423                           
 33424                           ; BSR set to: 0
 33425                           
 33426                           ; BSR set to: 0
 33427  000D62  0100               	movlb	0	; () banked
 33428  000D64  51B6               	movf	___fladd@bexp& (0+255),w,b
 33429  000D66  0100               	movlb	0	; () banked
 33430  000D68  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 33431  000D6A  B0D8               	btfsc	status,0,c
 33432  000D6C  D024               	goto	l13412
 33433                           
 33434                           ; BSR set to: 0
 33435  000D6E  0100               	movlb	0	; () banked
 33436  000D70  ADB4               	btfss	___fladd@signs& (0+255),6,b
 33437  000D72  D003               	goto	l13382
 33438                           
 33439                           ; BSR set to: 0
 33440  000D74  0E80               	movlw	128
 33441  000D76  0100               	movlb	0	; () banked
 33442  000D78  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 33443  000D7A                     l13382:
 33444                           
 33445                           ; BSR set to: 0
 33446  000D7A  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 33447                           
 33448                           ; BSR set to: 0
 33449  000D7E  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 33450                           
 33451                           ; BSR set to: 0
 33452  000D82  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 33453                           
 33454                           ; BSR set to: 0
 33455  000D86  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 33456                           
 33457                           ; BSR set to: 0
 33458  000D8A  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 33459                           
 33460                           ; BSR set to: 0
 33461  000D8E  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 33462                           
 33463                           ; BSR set to: 0
 33464  000D92  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 33465                           
 33466                           ; BSR set to: 0
 33467  000D96  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 33468                           
 33469                           ; BSR set to: 0
 33470  000D9A  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 33471                           
 33472                           ; BSR set to: 0
 33473  000D9E  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 33474                           
 33475                           ; BSR set to: 0
 33476  000DA2  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 33477                           
 33478                           ; BSR set to: 0
 33479  000DA6  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 33480                           
 33481                           ; BSR set to: 0
 33482  000DAA  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 33483                           
 33484                           ; BSR set to: 0
 33485  000DAE  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 33486                           
 33487                           ; BSR set to: 0
 33488  000DB2  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 33489  000DB6                     l13412:
 33490                           
 33491                           ; BSR set to: 0
 33492  000DB6  0E00               	movlw	0
 33493  000DB8  0100               	movlb	0	; () banked
 33494  000DBA  6FB7               	movwf	___fladd@grs& (0+255),b
 33495                           
 33496                           ; BSR set to: 0
 33497  000DBC  0100               	movlb	0	; () banked
 33498  000DBE  51B6               	movf	___fladd@bexp& (0+255),w,b
 33499  000DC0  0100               	movlb	0	; () banked
 33500  000DC2  6FAC               	movwf	??___fladd& (0+255),b
 33501  000DC4  6BAD               	clrf	(??___fladd+1)& (0+255),b
 33502  000DC6  0100               	movlb	0	; () banked
 33503  000DC8  1FAC               	comf	??___fladd& (0+255),f,b
 33504  000DCA  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 33505  000DCC  4BAC               	infsnz	??___fladd& (0+255),f,b
 33506  000DCE  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 33507  000DD0  0100               	movlb	0	; () banked
 33508  000DD2  51B5               	movf	___fladd@aexp& (0+255),w,b
 33509  000DD4  0100               	movlb	0	; () banked
 33510  000DD6  6FAE               	movwf	(??___fladd+2)& (0+255),b
 33511  000DD8  6BAF               	clrf	(??___fladd+3)& (0+255),b
 33512  000DDA  0100               	movlb	0	; () banked
 33513  000DDC  51AC               	movf	??___fladd& (0+255),w,b
 33514  000DDE  0100               	movlb	0	; () banked
 33515  000DE0  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 33516  000DE2  0100               	movlb	0	; () banked
 33517  000DE4  51AD               	movf	(??___fladd+1)& (0+255),w,b
 33518  000DE6  0100               	movlb	0	; () banked
 33519  000DE8  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 33520  000DEA  0100               	movlb	0	; () banked
 33521  000DEC  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 33522  000DEE  D03D               	goto	l2859
 33523  000DF0  0100               	movlb	0	; () banked
 33524  000DF2  51AF               	movf	(??___fladd+3)& (0+255),w,b
 33525  000DF4  E105               	bnz	u11860
 33526  000DF6  0E1A               	movlw	26
 33527  000DF8  0100               	movlb	0	; () banked
 33528  000DFA  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 33529  000DFC  A0D8               	btfss	status,0,c
 33530  000DFE  D035               	goto	l2859
 33531  000E00                     u11860:
 33532                           
 33533                           ; BSR set to: 0
 33534  000E00  0100               	movlb	0	; () banked
 33535  000E02  51A4               	movf	___fladd@b& (0+255),w,b
 33536  000E04  0100               	movlb	0	; () banked
 33537  000E06  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 33538  000E08  0100               	movlb	0	; () banked
 33539  000E0A  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 33540  000E0C  0100               	movlb	0	; () banked
 33541  000E0E  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 33542  000E10  B4D8               	btfsc	status,2,c
 33543  000E12  D002               	goto	u11870
 33544  000E14  0E01               	movlw	1
 33545  000E16  D001               	goto	u11880
 33546  000E18                     u11870:
 33547  000E18  0E00               	movlw	0
 33548  000E1A                     u11880:
 33549  000E1A  0100               	movlb	0	; () banked
 33550  000E1C  6FB7               	movwf	___fladd@grs& (0+255),b
 33551                           
 33552                           ; BSR set to: 0
 33553  000E1E  0E00               	movlw	0
 33554  000E20  0100               	movlb	0	; () banked
 33555  000E22  6FA4               	movwf	___fladd@b& (0+255),b
 33556  000E24  0E00               	movlw	0
 33557  000E26  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 33558  000E28  0E00               	movlw	0
 33559  000E2A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 33560  000E2C  0E00               	movlw	0
 33561  000E2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 33562                           
 33563                           ; BSR set to: 0
 33564  000E30  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 33565  000E34  D020               	goto	l2858
 33566  000E36                     l2860:
 33567                           
 33568                           ; BSR set to: 0
 33569  000E36  0100               	movlb	0	; () banked
 33570  000E38  A1B7               	btfss	___fladd@grs& (0+255),0,b
 33571  000E3A  D007               	goto	l13424
 33572                           
 33573                           ; BSR set to: 0
 33574  000E3C  0100               	movlb	0	; () banked
 33575  000E3E  90D8               	bcf	status,0,c
 33576  000E40  31B7               	rrcf	___fladd@grs& (0+255),w,b
 33577  000E42  0901               	iorlw	1
 33578  000E44  0100               	movlb	0	; () banked
 33579  000E46  6FB7               	movwf	___fladd@grs& (0+255),b
 33580  000E48  D003               	goto	l13426
 33581  000E4A                     l13424:
 33582                           
 33583                           ; BSR set to: 0
 33584  000E4A  0100               	movlb	0	; () banked
 33585  000E4C  90D8               	bcf	status,0,c
 33586  000E4E  33B7               	rrcf	___fladd@grs& (0+255),f,b
 33587  000E50                     l13426:
 33588                           
 33589                           ; BSR set to: 0
 33590  000E50  0100               	movlb	0	; () banked
 33591  000E52  A1A4               	btfss	___fladd@b& (0+255),0,b
 33592  000E54  D002               	goto	l13430
 33593                           
 33594                           ; BSR set to: 0
 33595  000E56  0100               	movlb	0	; () banked
 33596  000E58  8FB7               	bsf	___fladd@grs& (0+255),7,b
 33597  000E5A                     l13430:
 33598                           
 33599                           ; BSR set to: 0
 33600  000E5A  0100               	movlb	0	; () banked
 33601  000E5C  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 33602  000E5E  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 33603  000E60  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 33604  000E62  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 33605  000E64  33A4               	rrcf	___fladd@b& (0+255),f,b
 33606                           
 33607                           ; BSR set to: 0
 33608  000E66  0100               	movlb	0	; () banked
 33609  000E68  2BB6               	incf	___fladd@bexp& (0+255),f,b
 33610  000E6A                     l2859:
 33611                           
 33612                           ; BSR set to: 0
 33613  000E6A  0100               	movlb	0	; () banked
 33614  000E6C  51B5               	movf	___fladd@aexp& (0+255),w,b
 33615  000E6E  0100               	movlb	0	; () banked
 33616  000E70  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 33617  000E72  A0D8               	btfss	status,0,c
 33618  000E74  D7E0               	goto	l2860
 33619  000E76                     l2858:
 33620                           
 33621                           ; BSR set to: 0
 33622  000E76  0100               	movlb	0	; () banked
 33623  000E78  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 33624  000E7A  D03F               	goto	l13458
 33625                           
 33626                           ; BSR set to: 0
 33627  000E7C  0100               	movlb	0	; () banked
 33628  000E7E  51B6               	movf	___fladd@bexp& (0+255),w,b
 33629  000E80  0100               	movlb	0	; () banked
 33630  000E82  A4D8               	btfss	status,2,c
 33631  000E84  D00A               	goto	l13440
 33632                           
 33633                           ; BSR set to: 0
 33634  000E86  0E00               	movlw	0
 33635  000E88  0100               	movlb	0	; () banked
 33636  000E8A  6FA4               	movwf	?___fladd& (0+255),b
 33637  000E8C  0E00               	movlw	0
 33638  000E8E  6FA5               	movwf	(?___fladd+1)& (0+255),b
 33639  000E90  0E00               	movlw	0
 33640  000E92  6FA6               	movwf	(?___fladd+2)& (0+255),b
 33641  000E94  0E00               	movlw	0
 33642  000E96  6FA7               	movwf	(?___fladd+3)& (0+255),b
 33643                           
 33644                           ; BSR set to: 0
 33645  000E98  0012               	return	
 33646  000E9A                     l13440:
 33647                           
 33648                           ; BSR set to: 0
 33649  000E9A  0100               	movlb	0	; () banked
 33650  000E9C  51A8               	movf	___fladd@a& (0+255),w,b
 33651  000E9E  0100               	movlb	0	; () banked
 33652  000EA0  27A4               	addwf	___fladd@b& (0+255),f,b
 33653  000EA2  0100               	movlb	0	; () banked
 33654  000EA4  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 33655  000EA6  0100               	movlb	0	; () banked
 33656  000EA8  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 33657  000EAA  0100               	movlb	0	; () banked
 33658  000EAC  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 33659  000EAE  0100               	movlb	0	; () banked
 33660  000EB0  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 33661  000EB2  0100               	movlb	0	; () banked
 33662  000EB4  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33663  000EB6  0100               	movlb	0	; () banked
 33664  000EB8  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 33665                           
 33666                           ; BSR set to: 0
 33667  000EBA  0100               	movlb	0	; () banked
 33668  000EBC  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 33669  000EBE  D0CC               	goto	l13494
 33670                           
 33671                           ; BSR set to: 0
 33672  000EC0  0100               	movlb	0	; () banked
 33673  000EC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
 33674  000EC4  D009               	goto	l13448
 33675                           
 33676                           ; BSR set to: 0
 33677  000EC6  0100               	movlb	0	; () banked
 33678  000EC8  90D8               	bcf	status,0,c
 33679  000ECA  33B7               	rrcf	___fladd@grs& (0+255),f,b
 33680  000ECC  0100               	movlb	0	; () banked
 33681  000ECE  51B7               	movf	___fladd@grs& (0+255),w,b
 33682  000ED0  0901               	iorlw	1
 33683  000ED2  0100               	movlb	0	; () banked
 33684  000ED4  6FB7               	movwf	___fladd@grs& (0+255),b
 33685  000ED6  D003               	goto	l13450
 33686  000ED8                     l13448:
 33687                           
 33688                           ; BSR set to: 0
 33689  000ED8  0100               	movlb	0	; () banked
 33690  000EDA  90D8               	bcf	status,0,c
 33691  000EDC  33B7               	rrcf	___fladd@grs& (0+255),f,b
 33692  000EDE                     l13450:
 33693                           
 33694                           ; BSR set to: 0
 33695  000EDE  0100               	movlb	0	; () banked
 33696  000EE0  A1A4               	btfss	___fladd@b& (0+255),0,b
 33697  000EE2  D002               	goto	l13454
 33698                           
 33699                           ; BSR set to: 0
 33700  000EE4  0100               	movlb	0	; () banked
 33701  000EE6  8FB7               	bsf	___fladd@grs& (0+255),7,b
 33702  000EE8                     l13454:
 33703                           
 33704                           ; BSR set to: 0
 33705  000EE8  0100               	movlb	0	; () banked
 33706  000EEA  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 33707  000EEC  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 33708  000EEE  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 33709  000EF0  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 33710  000EF2  33A4               	rrcf	___fladd@b& (0+255),f,b
 33711                           
 33712                           ; BSR set to: 0
 33713  000EF4  0100               	movlb	0	; () banked
 33714  000EF6  2BB6               	incf	___fladd@bexp& (0+255),f,b
 33715                           
 33716                           ; BSR set to: 0
 33717  000EF8  D0AF               	goto	l13494
 33718  000EFA                     l13458:
 33719                           
 33720                           ; BSR set to: 0
 33721  000EFA  0100               	movlb	0	; () banked
 33722  000EFC  51A8               	movf	___fladd@a& (0+255),w,b
 33723  000EFE  0100               	movlb	0	; () banked
 33724  000F00  5DA4               	subwf	___fladd@b& (0+255),w,b
 33725  000F02  0100               	movlb	0	; () banked
 33726  000F04  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 33727  000F06  0100               	movlb	0	; () banked
 33728  000F08  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 33729  000F0A  0100               	movlb	0	; () banked
 33730  000F0C  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 33731  000F0E  0100               	movlb	0	; () banked
 33732  000F10  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 33733  000F12  0100               	movlb	0	; () banked
 33734  000F14  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 33735  000F16  0A80               	xorlw	128
 33736  000F18  0100               	movlb	0	; () banked
 33737  000F1A  6FAC               	movwf	??___fladd& (0+255),b
 33738  000F1C  0100               	movlb	0	; () banked
 33739  000F1E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33740  000F20  0A80               	xorlw	128
 33741  000F22  0100               	movlb	0	; () banked
 33742  000F24  59AC               	subwfb	??___fladd& (0+255),w,b
 33743  000F26  B0D8               	btfsc	status,0,c
 33744  000F28  D050               	goto	l13468
 33745                           
 33746                           ; BSR set to: 0
 33747  000F2A  C0A4  F0AC         	movff	___fladd@b,??___fladd
 33748  000F2E  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 33749  000F32  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 33750  000F36  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 33751  000F3A  0100               	movlb	0	; () banked
 33752  000F3C  1FAC               	comf	??___fladd& (0+255),f,b
 33753  000F3E  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 33754  000F40  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 33755  000F42  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 33756  000F44  2BAC               	incf	??___fladd& (0+255),f,b
 33757  000F46  0E00               	movlw	0
 33758  000F48  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 33759  000F4A  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 33760  000F4C  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 33761  000F4E  0100               	movlb	0	; () banked
 33762  000F50  51A8               	movf	___fladd@a& (0+255),w,b
 33763  000F52  0100               	movlb	0	; () banked
 33764  000F54  25AC               	addwf	??___fladd& (0+255),w,b
 33765  000F56  0100               	movlb	0	; () banked
 33766  000F58  6FB0               	movwf	(??___fladd+4)& (0+255),b
 33767  000F5A  0100               	movlb	0	; () banked
 33768  000F5C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 33769  000F5E  0100               	movlb	0	; () banked
 33770  000F60  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 33771  000F62  0100               	movlb	0	; () banked
 33772  000F64  6FB1               	movwf	(??___fladd+5)& (0+255),b
 33773  000F66  0100               	movlb	0	; () banked
 33774  000F68  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 33775  000F6A  0100               	movlb	0	; () banked
 33776  000F6C  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 33777  000F6E  0100               	movlb	0	; () banked
 33778  000F70  6FB2               	movwf	(??___fladd+6)& (0+255),b
 33779  000F72  0100               	movlb	0	; () banked
 33780  000F74  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33781  000F76  0100               	movlb	0	; () banked
 33782  000F78  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 33783  000F7A  0100               	movlb	0	; () banked
 33784  000F7C  6FB3               	movwf	(??___fladd+7)& (0+255),b
 33785  000F7E  0EFF               	movlw	255
 33786  000F80  0100               	movlb	0	; () banked
 33787  000F82  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 33788  000F84  0100               	movlb	0	; () banked
 33789  000F86  6FA4               	movwf	___fladd@b& (0+255),b
 33790  000F88  0EFF               	movlw	255
 33791  000F8A  0100               	movlb	0	; () banked
 33792  000F8C  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 33793  000F8E  0100               	movlb	0	; () banked
 33794  000F90  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 33795  000F92  0EFF               	movlw	255
 33796  000F94  0100               	movlb	0	; () banked
 33797  000F96  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 33798  000F98  0100               	movlb	0	; () banked
 33799  000F9A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 33800  000F9C  0EFF               	movlw	255
 33801  000F9E  0100               	movlb	0	; () banked
 33802  000FA0  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 33803  000FA2  0100               	movlb	0	; () banked
 33804  000FA4  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 33805  000FA6  0E80               	movlw	128
 33806  000FA8  0100               	movlb	0	; () banked
 33807  000FAA  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 33808                           
 33809                           ; BSR set to: 0
 33810  000FAC  0100               	movlb	0	; () banked
 33811  000FAE  6DB7               	negf	___fladd@grs& (0+255),b
 33812                           
 33813                           ; BSR set to: 0
 33814  000FB0  0100               	movlb	0	; () banked
 33815  000FB2  51B7               	movf	___fladd@grs& (0+255),w,b
 33816  000FB4  0100               	movlb	0	; () banked
 33817  000FB6  A4D8               	btfss	status,2,c
 33818  000FB8  D018               	goto	l2875
 33819                           
 33820                           ; BSR set to: 0
 33821  000FBA  0E01               	movlw	1
 33822  000FBC  0100               	movlb	0	; () banked
 33823  000FBE  27A4               	addwf	___fladd@b& (0+255),f,b
 33824  000FC0  0E00               	movlw	0
 33825  000FC2  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 33826  000FC4  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 33827  000FC6  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 33828                           
 33829                           ; BSR set to: 0
 33830  000FC8  D010               	goto	l2875
 33831  000FCA                     l13468:
 33832                           
 33833                           ; BSR set to: 0
 33834  000FCA  0100               	movlb	0	; () banked
 33835  000FCC  51A8               	movf	___fladd@a& (0+255),w,b
 33836  000FCE  0100               	movlb	0	; () banked
 33837  000FD0  5FA4               	subwf	___fladd@b& (0+255),f,b
 33838  000FD2  0100               	movlb	0	; () banked
 33839  000FD4  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 33840  000FD6  0100               	movlb	0	; () banked
 33841  000FD8  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 33842  000FDA  0100               	movlb	0	; () banked
 33843  000FDC  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 33844  000FDE  0100               	movlb	0	; () banked
 33845  000FE0  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 33846  000FE2  0100               	movlb	0	; () banked
 33847  000FE4  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 33848  000FE6  0100               	movlb	0	; () banked
 33849  000FE8  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 33850  000FEA                     l2875:
 33851                           
 33852                           ; BSR set to: 0
 33853  000FEA  0100               	movlb	0	; () banked
 33854  000FEC  51A4               	movf	___fladd@b& (0+255),w,b
 33855  000FEE  0100               	movlb	0	; () banked
 33856  000FF0  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 33857  000FF2  0100               	movlb	0	; () banked
 33858  000FF4  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 33859  000FF6  0100               	movlb	0	; () banked
 33860  000FF8  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 33861  000FFA  A4D8               	btfss	status,2,c
 33862  000FFC  D02A               	goto	l13492
 33863                           
 33864                           ; BSR set to: 0
 33865  000FFE  0100               	movlb	0	; () banked
 33866  001000  51B7               	movf	___fladd@grs& (0+255),w,b
 33867  001002  0100               	movlb	0	; () banked
 33868  001004  A4D8               	btfss	status,2,c
 33869  001006  D025               	goto	l13492
 33870                           
 33871                           ; BSR set to: 0
 33872  001008  0E00               	movlw	0
 33873  00100A  0100               	movlb	0	; () banked
 33874  00100C  6FA4               	movwf	?___fladd& (0+255),b
 33875  00100E  0E00               	movlw	0
 33876  001010  6FA5               	movwf	(?___fladd+1)& (0+255),b
 33877  001012  0E00               	movlw	0
 33878  001014  6FA6               	movwf	(?___fladd+2)& (0+255),b
 33879  001016  0E00               	movlw	0
 33880  001018  6FA7               	movwf	(?___fladd+3)& (0+255),b
 33881                           
 33882                           ; BSR set to: 0
 33883  00101A  0012               	return	
 33884  00101C                     l13476:
 33885                           
 33886                           ; BSR set to: 0
 33887  00101C  0100               	movlb	0	; () banked
 33888  00101E  90D8               	bcf	status,0,c
 33889  001020  37A4               	rlcf	___fladd@b& (0+255),f,b
 33890  001022  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 33891  001024  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 33892  001026  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 33893                           
 33894                           ; BSR set to: 0
 33895  001028  0100               	movlb	0	; () banked
 33896  00102A  AFB7               	btfss	___fladd@grs& (0+255),7,b
 33897  00102C  D002               	goto	l13482
 33898                           
 33899                           ; BSR set to: 0
 33900  00102E  0100               	movlb	0	; () banked
 33901  001030  81A4               	bsf	___fladd@b& (0+255),0,b
 33902  001032                     l13482:
 33903                           
 33904                           ; BSR set to: 0
 33905  001032  0100               	movlb	0	; () banked
 33906  001034  A1B7               	btfss	___fladd@grs& (0+255),0,b
 33907  001036  D003               	goto	l13486
 33908                           
 33909                           ; BSR set to: 0
 33910  001038  80D8               	bsf	status,0,c
 33911  00103A  0100               	movlb	0	; () banked
 33912  00103C  D002               	goto	L29
 33913  00103E                     l13486:
 33914                           
 33915                           ; BSR set to: 0
 33916  00103E  0100               	movlb	0	; () banked
 33917  001040  90D8               	bcf	status,0,c
 33918  001042                     L29:
 33919  001042  37B7               	rlcf	___fladd@grs& (0+255),f,b
 33920                           
 33921                           ; BSR set to: 0
 33922                           
 33923                           ; BSR set to: 0
 33924  001044  0100               	movlb	0	; () banked
 33925  001046  51B6               	movf	___fladd@bexp& (0+255),w,b
 33926  001048  0100               	movlb	0	; () banked
 33927  00104A  B4D8               	btfsc	status,2,c
 33928  00104C  D002               	goto	l13492
 33929                           
 33930                           ; BSR set to: 0
 33931  00104E  0100               	movlb	0	; () banked
 33932  001050  07B6               	decf	___fladd@bexp& (0+255),f,b
 33933  001052                     l13492:
 33934                           
 33935                           ; BSR set to: 0
 33936  001052  0100               	movlb	0	; () banked
 33937  001054  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 33938  001056  D7E2               	goto	l13476
 33939  001058                     l13494:
 33940                           
 33941                           ; BSR set to: 0
 33942  001058  0E00               	movlw	0
 33943  00105A  0100               	movlb	0	; () banked
 33944  00105C  6FB5               	movwf	___fladd@aexp& (0+255),b
 33945                           
 33946                           ; BSR set to: 0
 33947  00105E  0100               	movlb	0	; () banked
 33948  001060  AFB7               	btfss	___fladd@grs& (0+255),7,b
 33949  001062  D00D               	goto	l2884
 33950                           
 33951                           ; BSR set to: 0
 33952  001064  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 33953  001068  0E7F               	movlw	127
 33954  00106A  0100               	movlb	0	; () banked
 33955  00106C  17AC               	andwf	??___fladd& (0+255),f,b
 33956  00106E  A4D8               	btfss	status,2,c
 33957  001070  D003               	goto	l13502
 33958                           
 33959                           ; BSR set to: 0
 33960                           
 33961                           ; BSR set to: 0
 33962  001072  0100               	movlb	0	; () banked
 33963  001074  A1A4               	btfss	___fladd@b& (0+255),0,b
 33964  001076  D003               	goto	l2884
 33965  001078                     l13502:
 33966                           
 33967                           ; BSR set to: 0
 33968  001078  0E01               	movlw	1
 33969  00107A  0100               	movlb	0	; () banked
 33970  00107C  6FB5               	movwf	___fladd@aexp& (0+255),b
 33971  00107E                     l2884:
 33972                           
 33973                           ; BSR set to: 0
 33974  00107E  0100               	movlb	0	; () banked
 33975  001080  51B5               	movf	___fladd@aexp& (0+255),w,b
 33976  001082  0100               	movlb	0	; () banked
 33977  001084  B4D8               	btfsc	status,2,c
 33978  001086  D026               	goto	l13512
 33979                           
 33980                           ; BSR set to: 0
 33981  001088  0E01               	movlw	1
 33982  00108A  0100               	movlb	0	; () banked
 33983  00108C  27A4               	addwf	___fladd@b& (0+255),f,b
 33984  00108E  0E00               	movlw	0
 33985  001090  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 33986  001092  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 33987  001094  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 33988                           
 33989                           ; BSR set to: 0
 33990  001096  0100               	movlb	0	; () banked
 33991  001098  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 33992  00109A  D01C               	goto	l13512
 33993                           
 33994                           ; BSR set to: 0
 33995  00109C  C0A4  F0AC         	movff	___fladd@b,??___fladd
 33996  0010A0  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 33997  0010A4  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 33998  0010A8  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 33999  0010AC  0100               	movlb	0	; () banked
 34000  0010AE  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 34001  0010B0  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 34002  0010B2  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 34003  0010B4  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 34004  0010B6  33AC               	rrcf	??___fladd& (0+255),f,b
 34005  0010B8  C0AC  F0A4         	movff	??___fladd,___fladd@b
 34006  0010BC  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 34007  0010C0  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 34008  0010C4  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 34009  0010C8  0100               	movlb	0	; () banked
 34010  0010CA  29B6               	incf	___fladd@bexp& (0+255),w,b
 34011  0010CC  B4D8               	btfsc	status,2,c
 34012  0010CE  D002               	goto	l13512
 34013                           
 34014                           ; BSR set to: 0
 34015  0010D0  0100               	movlb	0	; () banked
 34016  0010D2  2BB6               	incf	___fladd@bexp& (0+255),f,b
 34017  0010D4                     l13512:
 34018                           
 34019                           ; BSR set to: 0
 34020  0010D4  0100               	movlb	0	; () banked
 34021  0010D6  29B6               	incf	___fladd@bexp& (0+255),w,b
 34022  0010D8  B4D8               	btfsc	status,2,c
 34023  0010DA  D005               	goto	l13516
 34024                           
 34025                           ; BSR set to: 0
 34026  0010DC  0100               	movlb	0	; () banked
 34027  0010DE  51B6               	movf	___fladd@bexp& (0+255),w,b
 34028  0010E0  0100               	movlb	0	; () banked
 34029  0010E2  A4D8               	btfss	status,2,c
 34030  0010E4  D011               	goto	l13520
 34031  0010E6                     l13516:
 34032                           
 34033                           ; BSR set to: 0
 34034  0010E6  0E00               	movlw	0
 34035  0010E8  0100               	movlb	0	; () banked
 34036  0010EA  6FA4               	movwf	___fladd@b& (0+255),b
 34037  0010EC  0E00               	movlw	0
 34038  0010EE  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34039  0010F0  0E00               	movlw	0
 34040  0010F2  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34041  0010F4  0E00               	movlw	0
 34042  0010F6  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34043  0010F8  0100               	movlb	0	; () banked
 34044  0010FA  51B6               	movf	___fladd@bexp& (0+255),w,b
 34045  0010FC  0100               	movlb	0	; () banked
 34046  0010FE  A4D8               	btfss	status,2,c
 34047  001100  D003               	goto	l13520
 34048                           
 34049                           ; BSR set to: 0
 34050  001102  0E00               	movlw	0
 34051  001104  0100               	movlb	0	; () banked
 34052  001106  6FB4               	movwf	___fladd@signs& (0+255),b
 34053  001108                     l13520:
 34054                           
 34055                           ; BSR set to: 0
 34056  001108  0100               	movlb	0	; () banked
 34057  00110A  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 34058  00110C  D003               	goto	l13524
 34059                           
 34060                           ; BSR set to: 0
 34061  00110E  0100               	movlb	0	; () banked
 34062  001110  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 34063  001112  D002               	goto	l13526
 34064  001114                     l13524:
 34065                           
 34066                           ; BSR set to: 0
 34067  001114  0100               	movlb	0	; () banked
 34068  001116  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 34069  001118                     l13526:
 34070                           
 34071                           ; BSR set to: 0
 34072  001118  0100               	movlb	0	; () banked
 34073  00111A  90D8               	bcf	status,0,c
 34074  00111C  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 34075  00111E  0100               	movlb	0	; () banked
 34076  001120  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34077                           
 34078                           ; BSR set to: 0
 34079  001122  0100               	movlb	0	; () banked
 34080  001124  AFB4               	btfss	___fladd@signs& (0+255),7,b
 34081  001126  D002               	goto	l13532
 34082                           
 34083                           ; BSR set to: 0
 34084  001128  0100               	movlb	0	; () banked
 34085  00112A  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 34086  00112C                     l13532:
 34087                           
 34088                           ; BSR set to: 0
 34089  00112C  C0A4  F0A4         	movff	___fladd@b,?___fladd
 34090  001130  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 34091  001134  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 34092  001138  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 34093  00113C  0012               	return	
 34094  00113E                     __end_of___fladd:
 34095                           	opt stack 0
 34096                           tosu	equ	0xFFF
 34097                           tosh	equ	0xFFE
 34098                           tosl	equ	0xFFD
 34099                           pclath	equ	0xFFA
 34100                           tblptru	equ	0xFF8
 34101                           tblptrh	equ	0xFF7
 34102                           tblptrl	equ	0xFF6
 34103                           tablat	equ	0xFF5
 34104                           prodh	equ	0xFF4
 34105                           prodl	equ	0xFF3
 34106                           intcon	equ	0xFF2
 34107                           indf0	equ	0xFEF
 34108                           postinc0	equ	0xFEE
 34109                           fsr0h	equ	0xFEA
 34110                           fsr0l	equ	0xFE9
 34111                           wreg	equ	0xFE8
 34112                           indf1	equ	0xFE7
 34113                           postinc1	equ	0xFE6
 34114                           postdec1	equ	0xFE5
 34115                           plusw1	equ	0xFE3
 34116                           fsr1h	equ	0xFE2
 34117                           fsr1l	equ	0xFE1
 34118                           indf2	equ	0xFDF
 34119                           postinc2	equ	0xFDE
 34120                           postdec2	equ	0xFDD
 34121                           plusw2	equ	0xFDB
 34122                           fsr2h	equ	0xFDA
 34123                           fsr2l	equ	0xFD9
 34124                           status	equ	0xFD8
 34125                           
 34126 ;; *************** function _sample_all_power_on *****************
 34127 ;; Defined at:
 34128 ;;		line 88 in file "src/api/sample.c"
 34129 ;; Parameters:    Size  Location     Type
 34130 ;;		None
 34131 ;; Auto vars:     Size  Location     Type
 34132 ;;		None
 34133 ;; Return value:  Size  Location     Type
 34134 ;;                  1    wreg      void 
 34135 ;; Registers used:
 34136 ;;		wreg, status,2, status,0
 34137 ;; Tracked objects:
 34138 ;;		On entry : 0/0
 34139 ;;		On exit  : 0/0
 34140 ;;		Unchanged: 0/0
 34141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34146 ;;Total ram usage:        0 bytes
 34147 ;; Hardware stack levels used:    1
 34148 ;; Hardware stack levels required when called:    4
 34149 ;; This function calls:
 34150 ;;		Nothing
 34151 ;; This function is called by:
 34152 ;;		_sample_function_enable_fi_in_rtc
 34153 ;; This function uses a non-reentrant model
 34154 ;;
 34155                           
 34156                           	psect	text180
 34157  009C12                     __ptext180:
 34158                           	opt stack 0
 34159  009C12                     _sample_all_power_on:
 34160                           	opt stack 24
 34161                           
 34162                           ;sample.c: 90: if(!sensorPowerOn){
 34163                           
 34164                           ; BSR set to: 0
 34165                           ;incstack = 0
 34166  009C12  502F               	movf	_sensorPowerOn,w,c	;volatile
 34167  009C14  A4D8               	btfss	status,2,c
 34168  009C16  0012               	return	
 34169                           
 34170                           ;sample.c: 91: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(
      +                          0);;
 34171  009C18  9893               	bcf	3987,4,c	;volatile
 34172  009C1A  888A               	bsf	3978,4,c	;volatile
 34173                           
 34174                           ;sample.c: 92: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while(
      +                          0);;
 34175  009C1C  9A94               	bcf	3988,5,c	;volatile
 34176  009C1E  8A8B               	bsf	3979,5,c	;volatile
 34177                           
 34178                           ;sample.c: 93: sensorPowerOn=1;
 34179  009C20  0E01               	movlw	1
 34180  009C22  6E2F               	movwf	_sensorPowerOn,c	;volatile
 34181  009C24  0012               	return	
 34182  009C26                     __end_of_sample_all_power_on:
 34183                           	opt stack 0
 34184                           tosu	equ	0xFFF
 34185                           tosh	equ	0xFFE
 34186                           tosl	equ	0xFFD
 34187                           pclath	equ	0xFFA
 34188                           tblptru	equ	0xFF8
 34189                           tblptrh	equ	0xFF7
 34190                           tblptrl	equ	0xFF6
 34191                           tablat	equ	0xFF5
 34192                           prodh	equ	0xFF4
 34193                           prodl	equ	0xFF3
 34194                           intcon	equ	0xFF2
 34195                           indf0	equ	0xFEF
 34196                           postinc0	equ	0xFEE
 34197                           fsr0h	equ	0xFEA
 34198                           fsr0l	equ	0xFE9
 34199                           wreg	equ	0xFE8
 34200                           indf1	equ	0xFE7
 34201                           postinc1	equ	0xFE6
 34202                           postdec1	equ	0xFE5
 34203                           plusw1	equ	0xFE3
 34204                           fsr1h	equ	0xFE2
 34205                           fsr1l	equ	0xFE1
 34206                           indf2	equ	0xFDF
 34207                           postinc2	equ	0xFDE
 34208                           postdec2	equ	0xFDD
 34209                           plusw2	equ	0xFDB
 34210                           fsr2h	equ	0xFDA
 34211                           fsr2l	equ	0xFD9
 34212                           status	equ	0xFD8
 34213                           
 34214 ;; *************** function _sample_all_power_off *****************
 34215 ;; Defined at:
 34216 ;;		line 97 in file "src/api/sample.c"
 34217 ;; Parameters:    Size  Location     Type
 34218 ;;		None
 34219 ;; Auto vars:     Size  Location     Type
 34220 ;;		None
 34221 ;; Return value:  Size  Location     Type
 34222 ;;                  1    wreg      void 
 34223 ;; Registers used:
 34224 ;;		wreg, status,2, status,0
 34225 ;; Tracked objects:
 34226 ;;		On entry : 0/0
 34227 ;;		On exit  : 0/0
 34228 ;;		Unchanged: 0/0
 34229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34234 ;;Total ram usage:        0 bytes
 34235 ;; Hardware stack levels used:    1
 34236 ;; Hardware stack levels required when called:    4
 34237 ;; This function calls:
 34238 ;;		Nothing
 34239 ;; This function is called by:
 34240 ;;		_sample_function_enable_fi_in_rtc
 34241 ;; This function uses a non-reentrant model
 34242 ;;
 34243                           
 34244                           	psect	text181
 34245  009C58                     __ptext181:
 34246                           	opt stack 0
 34247  009C58                     _sample_all_power_off:
 34248                           	opt stack 24
 34249                           
 34250                           ;incstack = 0
 34251                           ;sample.c: 99: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB &= ~(1<<4);}while(0);; }while
      +                          (0);;
 34252  009C58  9893               	bcf	3987,4,c	;volatile
 34253  009C5A  988A               	bcf	3978,4,c	;volatile
 34254                           
 34255                           ;sample.c: 100: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 34256  009C5C  9A94               	bcf	3988,5,c	;volatile
 34257  009C5E  9A8B               	bcf	3979,5,c	;volatile
 34258                           
 34259                           ;sample.c: 101: sensorPowerOn=0;
 34260  009C60  0E00               	movlw	0
 34261  009C62  6E2F               	movwf	_sensorPowerOn,c	;volatile
 34262  009C64  0012               	return		;funcret
 34263  009C66                     __end_of_sample_all_power_off:
 34264                           	opt stack 0
 34265                           tosu	equ	0xFFF
 34266                           tosh	equ	0xFFE
 34267                           tosl	equ	0xFFD
 34268                           pclath	equ	0xFFA
 34269                           tblptru	equ	0xFF8
 34270                           tblptrh	equ	0xFF7
 34271                           tblptrl	equ	0xFF6
 34272                           tablat	equ	0xFF5
 34273                           prodh	equ	0xFF4
 34274                           prodl	equ	0xFF3
 34275                           intcon	equ	0xFF2
 34276                           indf0	equ	0xFEF
 34277                           postinc0	equ	0xFEE
 34278                           fsr0h	equ	0xFEA
 34279                           fsr0l	equ	0xFE9
 34280                           wreg	equ	0xFE8
 34281                           indf1	equ	0xFE7
 34282                           postinc1	equ	0xFE6
 34283                           postdec1	equ	0xFE5
 34284                           plusw1	equ	0xFE3
 34285                           fsr1h	equ	0xFE2
 34286                           fsr1l	equ	0xFE1
 34287                           indf2	equ	0xFDF
 34288                           postinc2	equ	0xFDE
 34289                           postdec2	equ	0xFDD
 34290                           plusw2	equ	0xFDB
 34291                           fsr2h	equ	0xFDA
 34292                           fsr2l	equ	0xFD9
 34293                           status	equ	0xFD8
 34294                           
 34295 ;; *************** function _data_init_all *****************
 34296 ;; Defined at:
 34297 ;;		line 438 in file "src/api/data.c"
 34298 ;; Parameters:    Size  Location     Type
 34299 ;;		None
 34300 ;; Auto vars:     Size  Location     Type
 34301 ;;		None
 34302 ;; Return value:  Size  Location     Type
 34303 ;;                  1    wreg      void 
 34304 ;; Registers used:
 34305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34306 ;; Tracked objects:
 34307 ;;		On entry : 0/0
 34308 ;;		On exit  : 0/0
 34309 ;;		Unchanged: 0/0
 34310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34315 ;;Total ram usage:        0 bytes
 34316 ;; Hardware stack levels used:    1
 34317 ;; Hardware stack levels required when called:   10
 34318 ;; This function calls:
 34319 ;;		_calib_data_init_diff_pr
 34320 ;;		_calib_data_init_pr
 34321 ;;		_data_sys_init
 34322 ;; This function is called by:
 34323 ;;		_main
 34324 ;; This function uses a non-reentrant model
 34325 ;;
 34326                           
 34327                           	psect	text182
 34328  009C66                     __ptext182:
 34329                           	opt stack 0
 34330  009C66                     _data_init_all:
 34331                           	opt stack 20
 34332                           
 34333                           ;data.c: 440: data_sys_init();
 34334                           
 34335                           ;incstack = 0
 34336  009C66  ECD1  F020         	call	_data_sys_init	;wreg free
 34337                           
 34338                           ;data.c: 441: calib_data_init_diff_pr();
 34339  009C6A  EC16  F028         	call	_calib_data_init_diff_pr	;wreg free
 34340                           
 34341                           ;data.c: 442: calib_data_init_pr();
 34342  009C6E  EC81  F027         	call	_calib_data_init_pr	;wreg free
 34343  009C72  0012               	return		;funcret
 34344  009C74                     __end_of_data_init_all:
 34345                           	opt stack 0
 34346                           tosu	equ	0xFFF
 34347                           tosh	equ	0xFFE
 34348                           tosl	equ	0xFFD
 34349                           pclath	equ	0xFFA
 34350                           tblptru	equ	0xFF8
 34351                           tblptrh	equ	0xFF7
 34352                           tblptrl	equ	0xFF6
 34353                           tablat	equ	0xFF5
 34354                           prodh	equ	0xFF4
 34355                           prodl	equ	0xFF3
 34356                           intcon	equ	0xFF2
 34357                           indf0	equ	0xFEF
 34358                           postinc0	equ	0xFEE
 34359                           fsr0h	equ	0xFEA
 34360                           fsr0l	equ	0xFE9
 34361                           wreg	equ	0xFE8
 34362                           indf1	equ	0xFE7
 34363                           postinc1	equ	0xFE6
 34364                           postdec1	equ	0xFE5
 34365                           plusw1	equ	0xFE3
 34366                           fsr1h	equ	0xFE2
 34367                           fsr1l	equ	0xFE1
 34368                           indf2	equ	0xFDF
 34369                           postinc2	equ	0xFDE
 34370                           postdec2	equ	0xFDD
 34371                           plusw2	equ	0xFDB
 34372                           fsr2h	equ	0xFDA
 34373                           fsr2l	equ	0xFD9
 34374                           status	equ	0xFD8
 34375                           
 34376 ;; *************** function _data_sys_init *****************
 34377 ;; Defined at:
 34378 ;;		line 163 in file "src/api/data.c"
 34379 ;; Parameters:    Size  Location     Type
 34380 ;;		None
 34381 ;; Auto vars:     Size  Location     Type
 34382 ;;  buf             2  131[BANK0 ] PTR unsigned char 
 34383 ;;		 -> stSysData(240), 
 34384 ;;  stp             2  129[BANK0 ] PTR struct .
 34385 ;;		 -> stSysData(240), 
 34386 ;;  t16             2  126[BANK0 ] unsigned int 
 34387 ;;  ret             1  128[BANK0 ] unsigned char 
 34388 ;; Return value:  Size  Location     Type
 34389 ;;                  1    wreg      unsigned char 
 34390 ;; Registers used:
 34391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34392 ;; Tracked objects:
 34393 ;;		On entry : 0/0
 34394 ;;		On exit  : 0/0
 34395 ;;		Unchanged: 0/0
 34396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34398 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34400 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34401 ;;Total ram usage:        7 bytes
 34402 ;; Hardware stack levels used:    1
 34403 ;; Hardware stack levels required when called:    7
 34404 ;; This function calls:
 34405 ;;		_crc_append
 34406 ;;		_crc_verify
 34407 ;;		_data_sys_cal_v1
 34408 ;;		_data_sys_cal_v2
 34409 ;;		_m_flash_read
 34410 ;;		_m_flash_write
 34411 ;;		_m_mem_cpy_len
 34412 ;; This function is called by:
 34413 ;;		_data_init_all
 34414 ;; This function uses a non-reentrant model
 34415 ;;
 34416                           
 34417                           	psect	text183
 34418  0041A2                     __ptext183:
 34419                           	opt stack 0
 34420  0041A2                     _data_sys_init:
 34421                           	opt stack 22
 34422                           
 34423                           ;data.c: 165: uint8_t ret;
 34424                           ;data.c: 166: uint16_t t16;
 34425                           ;data.c: 167: t16=sizeof(st_sysDataDef);
 34426                           
 34427                           ;incstack = 0
 34428  0041A2  0E00               	movlw	0
 34429  0041A4  0100               	movlb	0	; () banked
 34430  0041A6  6FDF               	movwf	(data_sys_init@t16+1)& (0+255),b
 34431  0041A8  0EF0               	movlw	240
 34432  0041AA  6FDE               	movwf	data_sys_init@t16& (0+255),b
 34433                           
 34434                           ; BSR set to: 0
 34435                           ;data.c: 168: uint8_t* buf=(uint8_t*)(&stSysData);
 34436  0041AC  0E00               	movlw	low _stSysData
 34437  0041AE  0100               	movlb	0	; () banked
 34438  0041B0  6FE3               	movwf	data_sys_init@buf& (0+255),b
 34439  0041B2  0E02               	movlw	high _stSysData
 34440  0041B4  0100               	movlb	0	; () banked
 34441  0041B6  6FE4               	movwf	(data_sys_init@buf+1)& (0+255),b
 34442                           
 34443                           ; BSR set to: 0
 34444                           ;data.c: 169: st_sysDataDef* stp=(st_sysDataDef*)buf;
 34445  0041B8  C0E3  F0E1         	movff	data_sys_init@buf,data_sys_init@stp
 34446  0041BC  C0E4  F0E2         	movff	data_sys_init@buf+1,data_sys_init@stp+1
 34447                           
 34448                           ; BSR set to: 0
 34449                           ;data.c: 171: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 34450  0041C0  0E00               	movlw	0
 34451  0041C2  0100               	movlb	0	; () banked
 34452  0041C4  6F60               	movwf	m_flash_read@addr& (0+255),b
 34453  0041C6  0EF4               	movlw	244
 34454  0041C8  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 34455  0041CA  0E00               	movlw	0
 34456  0041CC  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 34457  0041CE  0E00               	movlw	0
 34458  0041D0  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 34459  0041D2  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 34460  0041D6  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 34461  0041DA  0E00               	movlw	0
 34462  0041DC  0100               	movlb	0	; () banked
 34463  0041DE  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 34464  0041E0  0EF0               	movlw	240
 34465  0041E2  6F66               	movwf	m_flash_read@len& (0+255),b
 34466  0041E4  EC54  F03E         	call	_m_flash_read	;wreg free
 34467                           
 34468                           ;data.c: 172: ret=crc_verify(buf,sizeof(st_sysDataDef));
 34469  0041E8  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 34470  0041EC  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 34471  0041F0  0E00               	movlw	0
 34472  0041F2  0100               	movlb	0	; () banked
 34473  0041F4  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 34474  0041F6  0EF0               	movlw	240
 34475  0041F8  6F6E               	movwf	crc_verify@n& (0+255),b
 34476  0041FA  EC8F  F03D         	call	_crc_verify	;wreg free
 34477  0041FE  0100               	movlb	0	; () banked
 34478  004200  6FE0               	movwf	data_sys_init@ret& (0+255),b
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;data.c: 173: if(!ret){
 34482  004202  0100               	movlb	0	; () banked
 34483  004204  51E0               	movf	data_sys_init@ret& (0+255),w,b
 34484  004206  0100               	movlb	0	; () banked
 34485  004208  A4D8               	btfss	status,2,c
 34486  00420A  0012               	return	
 34487                           
 34488                           ; BSR set to: 0
 34489                           ;data.c: 174: m_mem_cpy_len(buf,(uint8_t*)(&defultSystemData),sizeof(st_sysDataDef));
 34490  00420C  C0E3  F060         	movff	data_sys_init@buf,m_mem_cpy_len@d
 34491  004210  C0E4  F061         	movff	data_sys_init@buf+1,m_mem_cpy_len@d+1
 34492  004214  0E3F               	movlw	low _defultSystemData
 34493  004216  0100               	movlb	0	; () banked
 34494  004218  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 34495  00421A  0EF2               	movlw	high _defultSystemData
 34496  00421C  0100               	movlb	0	; () banked
 34497  00421E  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 34498  004220  0E00               	movlw	0
 34499  004222  0100               	movlb	0	; () banked
 34500  004224  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 34501  004226  0EF0               	movlw	240
 34502  004228  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 34503  00422A  ECF5  F047         	call	_m_mem_cpy_len	;wreg free
 34504                           
 34505                           ;data.c: 175: stp->V1=data_sys_cal_v1(stp);
 34506  00422E  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v1@stp
 34507  004232  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v1@stp+1
 34508  004236  ECAC  F019         	call	_data_sys_cal_v1	;wreg free
 34509  00423A  0100               	movlb	0	; () banked
 34510  00423C  EE20 F010          	lfsr	2,16
 34511  004240  51E1               	movf	data_sys_init@stp& (0+255),w,b
 34512  004242  26D9               	addwf	fsr2l,f,c
 34513  004244  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 34514  004246  22DA               	addwfc	fsr2h,f,c
 34515  004248  0100               	movlb	0	; () banked
 34516  00424A  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 34517  00424E  0100               	movlb	0	; () banked
 34518  004250  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 34519  004254  0100               	movlb	0	; () banked
 34520  004256  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 34521  00425A  0100               	movlb	0	; () banked
 34522  00425C  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 34523                           
 34524                           ; BSR set to: 0
 34525                           ;data.c: 176: stp->V2=data_sys_cal_v2(stp);
 34526  004260  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v2@stp
 34527  004264  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v2@stp+1
 34528  004268  ECA7  F023         	call	_data_sys_cal_v2	;wreg free
 34529  00426C  0100               	movlb	0	; () banked
 34530  00426E  EE20 F014          	lfsr	2,20
 34531  004272  51E1               	movf	data_sys_init@stp& (0+255),w,b
 34532  004274  26D9               	addwf	fsr2l,f,c
 34533  004276  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 34534  004278  22DA               	addwfc	fsr2h,f,c
 34535  00427A  0100               	movlb	0	; () banked
 34536  00427C  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 34537  004280  0100               	movlb	0	; () banked
 34538  004282  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 34539  004286  0100               	movlb	0	; () banked
 34540  004288  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 34541  00428C  0100               	movlb	0	; () banked
 34542  00428E  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 34543                           
 34544                           ; BSR set to: 0
 34545                           ;data.c: 177: crc_append(buf,sizeof(st_sysDataDef)-2);
 34546  004292  C0E3  F06C         	movff	data_sys_init@buf,crc_append@message
 34547  004296  C0E4  F06D         	movff	data_sys_init@buf+1,crc_append@message+1
 34548  00429A  0E00               	movlw	0
 34549  00429C  0100               	movlb	0	; () banked
 34550  00429E  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 34551  0042A0  0EEE               	movlw	238
 34552  0042A2  6F6E               	movwf	crc_append@n& (0+255),b
 34553  0042A4  EC14  F044         	call	_crc_append	;wreg free
 34554                           
 34555                           ;data.c: 178: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 34556  0042A8  0E00               	movlw	0
 34557  0042AA  0100               	movlb	0	; () banked
 34558  0042AC  6F6E               	movwf	m_flash_write@addr& (0+255),b
 34559  0042AE  0EF4               	movlw	244
 34560  0042B0  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 34561  0042B2  0E00               	movlw	0
 34562  0042B4  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 34563  0042B6  0E00               	movlw	0
 34564  0042B8  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 34565  0042BA  C0E3  F072         	movff	data_sys_init@buf,m_flash_write@buf
 34566  0042BE  C0E4  F073         	movff	data_sys_init@buf+1,m_flash_write@buf+1
 34567  0042C2  0E00               	movlw	0
 34568  0042C4  0100               	movlb	0	; () banked
 34569  0042C6  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 34570  0042C8  0EF0               	movlw	240
 34571  0042CA  6F74               	movwf	m_flash_write@len& (0+255),b
 34572  0042CC  ECB6  F025         	call	_m_flash_write	;wreg free
 34573                           
 34574                           ;data.c: 179: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 34575  0042D0  0E00               	movlw	0
 34576  0042D2  0100               	movlb	0	; () banked
 34577  0042D4  6F60               	movwf	m_flash_read@addr& (0+255),b
 34578  0042D6  0EF4               	movlw	244
 34579  0042D8  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 34580  0042DA  0E00               	movlw	0
 34581  0042DC  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 34582  0042DE  0E00               	movlw	0
 34583  0042E0  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 34584  0042E2  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 34585  0042E6  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 34586  0042EA  0E00               	movlw	0
 34587  0042EC  0100               	movlb	0	; () banked
 34588  0042EE  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 34589  0042F0  0EF0               	movlw	240
 34590  0042F2  6F66               	movwf	m_flash_read@len& (0+255),b
 34591  0042F4  EC54  F03E         	call	_m_flash_read	;wreg free
 34592                           
 34593                           ;data.c: 180: ret=crc_verify(buf,sizeof(st_sysDataDef));
 34594  0042F8  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 34595  0042FC  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 34596  004300  0E00               	movlw	0
 34597  004302  0100               	movlb	0	; () banked
 34598  004304  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 34599  004306  0EF0               	movlw	240
 34600  004308  6F6E               	movwf	crc_verify@n& (0+255),b
 34601  00430A  EC8F  F03D         	call	_crc_verify	;wreg free
 34602  00430E  0100               	movlb	0	; () banked
 34603  004310  6FE0               	movwf	data_sys_init@ret& (0+255),b
 34604                           
 34605                           ; BSR set to: 0
 34606  004312  0012               	return	
 34607  004314                     __end_of_data_sys_init:
 34608                           	opt stack 0
 34609                           tosu	equ	0xFFF
 34610                           tosh	equ	0xFFE
 34611                           tosl	equ	0xFFD
 34612                           pclath	equ	0xFFA
 34613                           tblptru	equ	0xFF8
 34614                           tblptrh	equ	0xFF7
 34615                           tblptrl	equ	0xFF6
 34616                           tablat	equ	0xFF5
 34617                           prodh	equ	0xFF4
 34618                           prodl	equ	0xFF3
 34619                           intcon	equ	0xFF2
 34620                           indf0	equ	0xFEF
 34621                           postinc0	equ	0xFEE
 34622                           fsr0h	equ	0xFEA
 34623                           fsr0l	equ	0xFE9
 34624                           wreg	equ	0xFE8
 34625                           indf1	equ	0xFE7
 34626                           postinc1	equ	0xFE6
 34627                           postdec1	equ	0xFE5
 34628                           plusw1	equ	0xFE3
 34629                           fsr1h	equ	0xFE2
 34630                           fsr1l	equ	0xFE1
 34631                           indf2	equ	0xFDF
 34632                           postinc2	equ	0xFDE
 34633                           postdec2	equ	0xFDD
 34634                           plusw2	equ	0xFDB
 34635                           fsr2h	equ	0xFDA
 34636                           fsr2l	equ	0xFD9
 34637                           status	equ	0xFD8
 34638                           
 34639 ;; *************** function _m_flash_write *****************
 34640 ;; Defined at:
 34641 ;;		line 63 in file "src/driver/m_flash.c"
 34642 ;; Parameters:    Size  Location     Type
 34643 ;;  addr            4   14[BANK0 ] unsigned long 
 34644 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 34645 ;;		 -> m_flash_test@tmp(16), stSysData(240), 
 34646 ;;  len             2   20[BANK0 ] unsigned int 
 34647 ;; Auto vars:     Size  Location     Type
 34648 ;;  pageAddr        4   26[BANK0 ] unsigned long 
 34649 ;;  t16             2   33[BANK0 ] unsigned int 
 34650 ;;  tmpBuf          2   31[BANK0 ] PTR unsigned char 
 34651 ;;		 -> globleBuffer(256), 
 34652 ;;  j               1   30[BANK0 ] unsigned char 
 34653 ;;  i               1   25[BANK0 ] unsigned char 
 34654 ;;  writeTimes      1   24[BANK0 ] unsigned char 
 34655 ;; Return value:  Size  Location     Type
 34656 ;;                  2   14[BANK0 ] unsigned int 
 34657 ;; Registers used:
 34658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34659 ;; Tracked objects:
 34660 ;;		On entry : 0/0
 34661 ;;		On exit  : 0/0
 34662 ;;		Unchanged: 0/0
 34663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34664 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34665 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34667 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34668 ;;Total ram usage:       21 bytes
 34669 ;; Hardware stack levels used:    1
 34670 ;; Hardware stack levels required when called:    6
 34671 ;; This function calls:
 34672 ;;		_m_flash_erase
 34673 ;;		_m_flash_read
 34674 ;;		_m_flash_unlock
 34675 ;;		_m_mem_cpy_len
 34676 ;; This function is called by:
 34677 ;;		_data_sys_init
 34678 ;;		___sys_data_save_write_flash
 34679 ;;		_data_sys_save
 34680 ;;		_m_flash_test
 34681 ;; This function uses a non-reentrant model
 34682 ;;
 34683                           
 34684                           	psect	text184
 34685  004B6C                     __ptext184:
 34686                           	opt stack 0
 34687  004B6C                     _m_flash_write:
 34688                           	opt stack 20
 34689                           
 34690                           ;m_flash.c: 65: uint8_t i,j,writeTimes;
 34691                           ;m_flash.c: 66: uint32_t pageAddr;
 34692                           ;m_flash.c: 67: uint16_t t16;
 34693                           ;m_flash.c: 68: uint8_t* tmpBuf=globleBuffer;
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;incstack = 0
 34697  004B6C  0E00               	movlw	low _globleBuffer
 34698  004B6E  0100               	movlb	0	; () banked
 34699  004B70  6F7F               	movwf	m_flash_write@tmpBuf& (0+255),b
 34700  004B72  0E05               	movlw	high _globleBuffer
 34701  004B74  0100               	movlb	0	; () banked
 34702  004B76  6F80               	movwf	(m_flash_write@tmpBuf+1)& (0+255),b
 34703                           
 34704                           ;m_flash.c: 70: t16=addr & ((1024)-1);
 34705  004B78  0EFF               	movlw	255
 34706  004B7A  0100               	movlb	0	; () banked
 34707  004B7C  156E               	andwf	m_flash_write@addr& (0+255),w,b
 34708  004B7E  0100               	movlb	0	; () banked
 34709  004B80  6F81               	movwf	m_flash_write@t16& (0+255),b
 34710  004B82  0E03               	movlw	3
 34711  004B84  0100               	movlb	0	; () banked
 34712  004B86  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 34713  004B88  0100               	movlb	0	; () banked
 34714  004B8A  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 34715                           
 34716                           ;m_flash.c: 71: if(t16+len>(64)*4)return 0;
 34717  004B8C  0100               	movlb	0	; () banked
 34718  004B8E  5174               	movf	m_flash_write@len& (0+255),w,b
 34719  004B90  0100               	movlb	0	; () banked
 34720  004B92  2581               	addwf	m_flash_write@t16& (0+255),w,b
 34721  004B94  0100               	movlb	0	; () banked
 34722  004B96  6F76               	movwf	??_m_flash_write& (0+255),b
 34723  004B98  0100               	movlb	0	; () banked
 34724  004B9A  5175               	movf	(m_flash_write@len+1)& (0+255),w,b
 34725  004B9C  0100               	movlb	0	; () banked
 34726  004B9E  2182               	addwfc	(m_flash_write@t16+1)& (0+255),w,b
 34727  004BA0  0100               	movlb	0	; () banked
 34728  004BA2  6F77               	movwf	(??_m_flash_write+1)& (0+255),b
 34729  004BA4  0100               	movlb	0	; () banked
 34730  004BA6  0576               	decf	??_m_flash_write& (0+255),w,b
 34731  004BA8  0E01               	movlw	1
 34732  004BAA  0100               	movlb	0	; () banked
 34733  004BAC  5977               	subwfb	(??_m_flash_write+1)& (0+255),w,b
 34734  004BAE  B0D8               	btfsc	status,0,c
 34735  004BB0  0012               	return	
 34736                           
 34737                           ; BSR set to: 0
 34738                           ;m_flash.c: 73: pageAddr=addr & ~((1024)-1);
 34739                           
 34740                           ; BSR set to: 0
 34741                           
 34742                           ; BSR set to: 0
 34743                           ;	Return value of _m_flash_write is never used
 34744  004BB2  0E00               	movlw	0
 34745  004BB4  0100               	movlb	0	; () banked
 34746  004BB6  156E               	andwf	m_flash_write@addr& (0+255),w,b
 34747  004BB8  0100               	movlb	0	; () banked
 34748  004BBA  6F7A               	movwf	m_flash_write@pageAddr& (0+255),b
 34749  004BBC  0EFC               	movlw	252
 34750  004BBE  0100               	movlb	0	; () banked
 34751  004BC0  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 34752  004BC2  0100               	movlb	0	; () banked
 34753  004BC4  6F7B               	movwf	(m_flash_write@pageAddr+1)& (0+255),b
 34754  004BC6  0EFF               	movlw	255
 34755  004BC8  0100               	movlb	0	; () banked
 34756  004BCA  1570               	andwf	(m_flash_write@addr+2)& (0+255),w,b
 34757  004BCC  0100               	movlb	0	; () banked
 34758  004BCE  6F7C               	movwf	(m_flash_write@pageAddr+2)& (0+255),b
 34759  004BD0  0EFF               	movlw	255
 34760  004BD2  0100               	movlb	0	; () banked
 34761  004BD4  1571               	andwf	(m_flash_write@addr+3)& (0+255),w,b
 34762  004BD6  0100               	movlb	0	; () banked
 34763  004BD8  6F7D               	movwf	(m_flash_write@pageAddr+3)& (0+255),b
 34764                           
 34765                           ; BSR set to: 0
 34766                           ;m_flash.c: 74: m_flash_read(pageAddr,tmpBuf,(64)*4);
 34767  004BDA  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_read@addr
 34768  004BDE  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_read@addr+1
 34769  004BE2  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_read@addr+2
 34770  004BE6  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_read@addr+3
 34771  004BEA  C07F  F064         	movff	m_flash_write@tmpBuf,m_flash_read@buf
 34772  004BEE  C080  F065         	movff	m_flash_write@tmpBuf+1,m_flash_read@buf+1
 34773  004BF2  0E01               	movlw	1
 34774  004BF4  0100               	movlb	0	; () banked
 34775  004BF6  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 34776  004BF8  0E00               	movlw	0
 34777  004BFA  6F66               	movwf	m_flash_read@len& (0+255),b
 34778  004BFC  EC54  F03E         	call	_m_flash_read	;wreg free
 34779                           
 34780                           ;m_flash.c: 75: m_mem_cpy_len(tmpBuf+t16,buf,len);
 34781  004C00  0100               	movlb	0	; () banked
 34782  004C02  5181               	movf	m_flash_write@t16& (0+255),w,b
 34783  004C04  0100               	movlb	0	; () banked
 34784  004C06  257F               	addwf	m_flash_write@tmpBuf& (0+255),w,b
 34785  004C08  0100               	movlb	0	; () banked
 34786  004C0A  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 34787  004C0C  0100               	movlb	0	; () banked
 34788  004C0E  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 34789  004C10  0100               	movlb	0	; () banked
 34790  004C12  2180               	addwfc	(m_flash_write@tmpBuf+1)& (0+255),w,b
 34791  004C14  0100               	movlb	0	; () banked
 34792  004C16  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 34793  004C18  C072  F062         	movff	m_flash_write@buf,m_mem_cpy_len@s
 34794  004C1C  C073  F063         	movff	m_flash_write@buf+1,m_mem_cpy_len@s+1
 34795  004C20  C074  F064         	movff	m_flash_write@len,m_mem_cpy_len@len
 34796  004C24  C075  F065         	movff	m_flash_write@len+1,m_mem_cpy_len@len+1
 34797  004C28  ECF5  F047         	call	_m_mem_cpy_len	;wreg free
 34798                           
 34799                           ;m_flash.c: 77: m_flash_erase(pageAddr);
 34800  004C2C  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_erase@addr
 34801  004C30  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_erase@addr+1
 34802  004C34  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_erase@addr+2
 34803  004C38  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_erase@addr+3
 34804  004C3C  EC7F  F046         	call	_m_flash_erase	;wreg free
 34805                           
 34806                           ;m_flash.c: 79: writeTimes=(64)*4/(64);
 34807  004C40  0E04               	movlw	4
 34808  004C42  0100               	movlb	0	; () banked
 34809  004C44  6F78               	movwf	m_flash_write@writeTimes& (0+255),b
 34810                           
 34811                           ; BSR set to: 0
 34812                           ;m_flash.c: 80: t16=(uint16_t)(tmpBuf);
 34813  004C46  C07F  F081         	movff	m_flash_write@tmpBuf,m_flash_write@t16
 34814  004C4A  C080  F082         	movff	m_flash_write@tmpBuf+1,m_flash_write@t16+1
 34815                           
 34816                           ; BSR set to: 0
 34817                           ;m_flash.c: 82: FSR0L=(uint8_t)(t16&0x00ff);
 34818  004C4E  C081  FFE9         	movff	m_flash_write@t16,fsr0l	;volatile
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;m_flash.c: 83: t16>>=8;
 34822  004C52  0100               	movlb	0	; () banked
 34823  004C54  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 34824  004C56  6F81               	movwf	m_flash_write@t16& (0+255),b
 34825  004C58  6B82               	clrf	(m_flash_write@t16+1)& (0+255),b
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;m_flash.c: 84: FSR0H=(uint8_t)(t16&0x00ff);
 34829  004C5A  C081  FFEA         	movff	m_flash_write@t16,fsr0h	;volatile
 34830                           
 34831                           ; BSR set to: 0
 34832                           ;m_flash.c: 86: for(i=0;i<writeTimes;i++){
 34833  004C5E  0E00               	movlw	0
 34834  004C60  0100               	movlb	0	; () banked
 34835  004C62  6F79               	movwf	m_flash_write@i& (0+255),b
 34836  004C64  D017               	goto	l14416
 34837  004C66                     l14400:
 34838                           
 34839                           ; BSR set to: 0
 34840                           ;m_flash.c: 87: for(j=0;j<(64);j++){
 34841  004C66  0E00               	movlw	0
 34842  004C68  0100               	movlb	0	; () banked
 34843  004C6A  6F7E               	movwf	m_flash_write@j& (0+255),b
 34844  004C6C                     l14402:
 34845                           
 34846                           ; BSR set to: 0
 34847  004C6C  0E3F               	movlw	63
 34848  004C6E  0100               	movlb	0	; () banked
 34849  004C70  657E               	cpfsgt	m_flash_write@j& (0+255),b
 34850  004C72  D001               	goto	l2233
 34851  004C74  D007               	goto	l2234
 34852  004C76                     l2233:
 34853                           
 34854                           ; BSR set to: 0
 34855  004C76  CFEE FFE8          	movff	postinc0,wreg	;# 
 34856  004C7A  6EF5               	movwf	tablat,c	;# 
 34857  004C7C  000D               	tblwt		*+	;# 
 34858  004C7E  0100               	movlb	0	; () banked
 34859  004C80  2B7E               	incf	m_flash_write@j& (0+255),f,b
 34860  004C82  D7F4               	goto	l14402
 34861  004C84                     l2234:
 34862                           
 34863                           ; BSR set to: 0
 34864  004C84  000A               	tblrd		*-	;# 
 34865                           
 34866                           ;m_flash.c: 93: EECON1bits.WREN=1;
 34867  004C86  84A6               	bsf	4006,2,c	;volatile
 34868                           
 34869                           ;m_flash.c: 94: m_flash_unlock();
 34870  004C88  EC76  F04D         	call	_m_flash_unlock	;wreg free
 34871                           
 34872                           ;m_flash.c: 95: EECON1bits.WREN=0;
 34873  004C8C  94A6               	bcf	4006,2,c	;volatile
 34874  004C8E  000D               	tblwt		*+	;# 
 34875  004C90  0100               	movlb	0	; () banked
 34876  004C92  2B79               	incf	m_flash_write@i& (0+255),f,b
 34877  004C94                     l14416:
 34878                           
 34879                           ; BSR set to: 0
 34880  004C94  0100               	movlb	0	; () banked
 34881  004C96  5178               	movf	m_flash_write@writeTimes& (0+255),w,b
 34882  004C98  0100               	movlb	0	; () banked
 34883  004C9A  5D79               	subwf	m_flash_write@i& (0+255),w,b
 34884  004C9C  B0D8               	btfsc	status,0,c
 34885  004C9E  0012               	return	
 34886  004CA0  D7E2               	goto	l14400
 34887  004CA2                     __end_of_m_flash_write:
 34888                           	opt stack 0
 34889                           tosu	equ	0xFFF
 34890                           tosh	equ	0xFFE
 34891                           tosl	equ	0xFFD
 34892                           pclath	equ	0xFFA
 34893                           tblptru	equ	0xFF8
 34894                           tblptrh	equ	0xFF7
 34895                           tblptrl	equ	0xFF6
 34896                           tablat	equ	0xFF5
 34897                           prodh	equ	0xFF4
 34898                           prodl	equ	0xFF3
 34899                           intcon	equ	0xFF2
 34900                           indf0	equ	0xFEF
 34901                           postinc0	equ	0xFEE
 34902                           fsr0h	equ	0xFEA
 34903                           fsr0l	equ	0xFE9
 34904                           wreg	equ	0xFE8
 34905                           indf1	equ	0xFE7
 34906                           postinc1	equ	0xFE6
 34907                           postdec1	equ	0xFE5
 34908                           plusw1	equ	0xFE3
 34909                           fsr1h	equ	0xFE2
 34910                           fsr1l	equ	0xFE1
 34911                           indf2	equ	0xFDF
 34912                           postinc2	equ	0xFDE
 34913                           postdec2	equ	0xFDD
 34914                           plusw2	equ	0xFDB
 34915                           fsr2h	equ	0xFDA
 34916                           fsr2l	equ	0xFD9
 34917                           status	equ	0xFD8
 34918                           
 34919 ;; *************** function _m_flash_read *****************
 34920 ;; Defined at:
 34921 ;;		line 46 in file "src/driver/m_flash.c"
 34922 ;; Parameters:    Size  Location     Type
 34923 ;;  addr            4    0[BANK0 ] unsigned long 
 34924 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 34925 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), stSysData(240), 
 34926 ;;  len             2    6[BANK0 ] unsigned int 
 34927 ;; Auto vars:     Size  Location     Type
 34928 ;;  t32             4   10[BANK0 ] unsigned long 
 34929 ;;  i               2    8[BANK0 ] unsigned int 
 34930 ;; Return value:  Size  Location     Type
 34931 ;;                  2    0[BANK0 ] unsigned int 
 34932 ;; Registers used:
 34933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34934 ;; Tracked objects:
 34935 ;;		On entry : 0/0
 34936 ;;		On exit  : 0/0
 34937 ;;		Unchanged: 0/0
 34938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34940 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34942 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34943 ;;Total ram usage:       14 bytes
 34944 ;; Hardware stack levels used:    1
 34945 ;; Hardware stack levels required when called:    4
 34946 ;; This function calls:
 34947 ;;		Nothing
 34948 ;; This function is called by:
 34949 ;;		_data_sys_init
 34950 ;;		___sys_data_save_write_flash
 34951 ;;		_m_flash_write
 34952 ;;		_data_sys_save
 34953 ;;		_m_flash_test
 34954 ;; This function uses a non-reentrant model
 34955 ;;
 34956                           
 34957                           	psect	text185
 34958  007CA8                     __ptext185:
 34959                           	opt stack 0
 34960  007CA8                     _m_flash_read:
 34961                           	opt stack 21
 34962                           
 34963                           ;m_flash.c: 48: uint16_t i;
 34964                           ;m_flash.c: 49: uint32_t t32=addr;
 34965                           
 34966                           ; BSR set to: 0
 34967                           ;incstack = 0
 34968  007CA8  C060  F06A         	movff	m_flash_read@addr,m_flash_read@t32
 34969  007CAC  C061  F06B         	movff	m_flash_read@addr+1,m_flash_read@t32+1
 34970  007CB0  C062  F06C         	movff	m_flash_read@addr+2,m_flash_read@t32+2
 34971  007CB4  C063  F06D         	movff	m_flash_read@addr+3,m_flash_read@t32+3
 34972                           
 34973                           ;m_flash.c: 51: TBLPTRL=(uint8_t)(t32 & 0xfful);
 34974  007CB8  C06A  FFF6         	movff	m_flash_read@t32,tblptrl	;volatile
 34975                           
 34976                           ;m_flash.c: 52: t32>>=8;
 34977  007CBC  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 34978  007CC0  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 34979  007CC4  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 34980  007CC8  0100               	movlb	0	; () banked
 34981  007CCA  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 34982                           
 34983                           ; BSR set to: 0
 34984                           ;m_flash.c: 53: TBLPTRH=(uint8_t)(t32 & 0xfful);
 34985  007CCC  C06A  FFF7         	movff	m_flash_read@t32,tblptrh	;volatile
 34986                           
 34987                           ;m_flash.c: 54: t32>>=8;
 34988  007CD0  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 34989  007CD4  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 34990  007CD8  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 34991  007CDC  0100               	movlb	0	; () banked
 34992  007CDE  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 34993                           
 34994                           ; BSR set to: 0
 34995                           ;m_flash.c: 55: TBLPTRU=(uint8_t)(t32 & 0xfful);
 34996  007CE0  C06A  FFF8         	movff	m_flash_read@t32,tblptru	;volatile
 34997                           
 34998                           ; BSR set to: 0
 34999                           ;m_flash.c: 57: for(i=0;i<len;i++){
 35000  007CE4  0E00               	movlw	0
 35001  007CE6  0100               	movlb	0	; () banked
 35002  007CE8  6F69               	movwf	(m_flash_read@i+1)& (0+255),b
 35003  007CEA  0E00               	movlw	0
 35004  007CEC  6F68               	movwf	m_flash_read@i& (0+255),b
 35005  007CEE  D010               	goto	l13924
 35006  007CF0                     l2224:
 35007                           
 35008                           ; BSR set to: 0
 35009  007CF0  0009               	tblrd		*+	;# 
 35010                           
 35011                           ;m_flash.c: 59: buf[i]=TABLAT;
 35012  007CF2  0100               	movlb	0	; () banked
 35013  007CF4  5168               	movf	m_flash_read@i& (0+255),w,b
 35014  007CF6  0100               	movlb	0	; () banked
 35015  007CF8  2564               	addwf	m_flash_read@buf& (0+255),w,b
 35016  007CFA  6ED9               	movwf	fsr2l,c
 35017  007CFC  0100               	movlb	0	; () banked
 35018  007CFE  5169               	movf	(m_flash_read@i+1)& (0+255),w,b
 35019  007D00  0100               	movlb	0	; () banked
 35020  007D02  2165               	addwfc	(m_flash_read@buf+1)& (0+255),w,b
 35021  007D04  6EDA               	movwf	fsr2h,c
 35022  007D06  CFF5 FFDF          	movff	tablat,indf2	;volatile
 35023                           
 35024                           ; BSR set to: 0
 35025  007D0A  0100               	movlb	0	; () banked
 35026  007D0C  4B68               	infsnz	m_flash_read@i& (0+255),f,b
 35027  007D0E  2B69               	incf	(m_flash_read@i+1)& (0+255),f,b
 35028  007D10                     l13924:
 35029                           
 35030                           ; BSR set to: 0
 35031  007D10  0100               	movlb	0	; () banked
 35032  007D12  5166               	movf	m_flash_read@len& (0+255),w,b
 35033  007D14  0100               	movlb	0	; () banked
 35034  007D16  5D68               	subwf	m_flash_read@i& (0+255),w,b
 35035  007D18  0100               	movlb	0	; () banked
 35036  007D1A  5167               	movf	(m_flash_read@len+1)& (0+255),w,b
 35037  007D1C  0100               	movlb	0	; () banked
 35038  007D1E  5969               	subwfb	(m_flash_read@i+1)& (0+255),w,b
 35039  007D20  B0D8               	btfsc	status,0,c
 35040  007D22  0012               	return	
 35041  007D24  D7E5               	goto	l2224
 35042  007D26                     __end_of_m_flash_read:
 35043                           	opt stack 0
 35044                           tosu	equ	0xFFF
 35045                           tosh	equ	0xFFE
 35046                           tosl	equ	0xFFD
 35047                           pclath	equ	0xFFA
 35048                           tblptru	equ	0xFF8
 35049                           tblptrh	equ	0xFF7
 35050                           tblptrl	equ	0xFF6
 35051                           tablat	equ	0xFF5
 35052                           prodh	equ	0xFF4
 35053                           prodl	equ	0xFF3
 35054                           intcon	equ	0xFF2
 35055                           indf0	equ	0xFEF
 35056                           postinc0	equ	0xFEE
 35057                           fsr0h	equ	0xFEA
 35058                           fsr0l	equ	0xFE9
 35059                           wreg	equ	0xFE8
 35060                           indf1	equ	0xFE7
 35061                           postinc1	equ	0xFE6
 35062                           postdec1	equ	0xFE5
 35063                           plusw1	equ	0xFE3
 35064                           fsr1h	equ	0xFE2
 35065                           fsr1l	equ	0xFE1
 35066                           indf2	equ	0xFDF
 35067                           postinc2	equ	0xFDE
 35068                           postdec2	equ	0xFDD
 35069                           plusw2	equ	0xFDB
 35070                           fsr2h	equ	0xFDA
 35071                           fsr2l	equ	0xFD9
 35072                           status	equ	0xFD8
 35073                           
 35074 ;; *************** function _m_flash_erase *****************
 35075 ;; Defined at:
 35076 ;;		line 30 in file "src/driver/m_flash.c"
 35077 ;; Parameters:    Size  Location     Type
 35078 ;;  addr            4    0[BANK0 ] unsigned long 
 35079 ;; Auto vars:     Size  Location     Type
 35080 ;;  t32             4    4[BANK0 ] unsigned long 
 35081 ;; Return value:  Size  Location     Type
 35082 ;;                  1    wreg      void 
 35083 ;; Registers used:
 35084 ;;		wreg, status,2, status,0, cstack
 35085 ;; Tracked objects:
 35086 ;;		On entry : 0/0
 35087 ;;		On exit  : 0/0
 35088 ;;		Unchanged: 0/0
 35089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35091 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35094 ;;Total ram usage:        8 bytes
 35095 ;; Hardware stack levels used:    1
 35096 ;; Hardware stack levels required when called:    5
 35097 ;; This function calls:
 35098 ;;		_m_flash_unlock
 35099 ;; This function is called by:
 35100 ;;		_m_flash_write
 35101 ;; This function uses a non-reentrant model
 35102 ;;
 35103                           
 35104                           	psect	text186
 35105  008CFE                     __ptext186:
 35106                           	opt stack 0
 35107  008CFE                     _m_flash_erase:
 35108                           	opt stack 20
 35109                           
 35110                           ;m_flash.c: 32: uint32_t t32=addr;
 35111                           
 35112                           ; BSR set to: 0
 35113                           ;incstack = 0
 35114  008CFE  C060  F064         	movff	m_flash_erase@addr,m_flash_erase@t32
 35115  008D02  C061  F065         	movff	m_flash_erase@addr+1,m_flash_erase@t32+1
 35116  008D06  C062  F066         	movff	m_flash_erase@addr+2,m_flash_erase@t32+2
 35117  008D0A  C063  F067         	movff	m_flash_erase@addr+3,m_flash_erase@t32+3
 35118                           
 35119                           ;m_flash.c: 33: t32 &= (~0x3fful);
 35120  008D0E  0E00               	movlw	0
 35121  008D10  0100               	movlb	0	; () banked
 35122  008D12  1764               	andwf	m_flash_erase@t32& (0+255),f,b
 35123  008D14  0EFC               	movlw	252
 35124  008D16  1765               	andwf	(m_flash_erase@t32+1)& (0+255),f,b
 35125  008D18  0EFF               	movlw	255
 35126  008D1A  1766               	andwf	(m_flash_erase@t32+2)& (0+255),f,b
 35127  008D1C  0EFF               	movlw	255
 35128  008D1E  1767               	andwf	(m_flash_erase@t32+3)& (0+255),f,b
 35129                           
 35130                           ; BSR set to: 0
 35131                           ;m_flash.c: 36: TBLPTRL=(uint8_t)(t32 & 0xfful);
 35132  008D20  C064  FFF6         	movff	m_flash_erase@t32,tblptrl	;volatile
 35133                           
 35134                           ; BSR set to: 0
 35135                           ;m_flash.c: 37: t32>>=8;
 35136  008D24  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 35137  008D28  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 35138  008D2C  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 35139  008D30  0100               	movlb	0	; () banked
 35140  008D32  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 35141                           
 35142                           ; BSR set to: 0
 35143                           ;m_flash.c: 38: TBLPTRH=(uint8_t)(t32 & 0xfful);
 35144  008D34  C064  FFF7         	movff	m_flash_erase@t32,tblptrh	;volatile
 35145                           
 35146                           ; BSR set to: 0
 35147                           ;m_flash.c: 39: t32>>=8;
 35148  008D38  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 35149  008D3C  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 35150  008D40  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 35151  008D44  0100               	movlb	0	; () banked
 35152  008D46  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 35153                           
 35154                           ; BSR set to: 0
 35155                           ;m_flash.c: 40: TBLPTRU=(uint8_t)(t32 & 0xfful);
 35156  008D48  C064  FFF8         	movff	m_flash_erase@t32,tblptru	;volatile
 35157                           
 35158                           ; BSR set to: 0
 35159                           ;m_flash.c: 41: EECON1bits.WREN=1;
 35160  008D4C  84A6               	bsf	4006,2,c	;volatile
 35161                           
 35162                           ; BSR set to: 0
 35163                           ;m_flash.c: 42: EECON1bits.FREE=1;
 35164  008D4E  88A6               	bsf	4006,4,c	;volatile
 35165                           
 35166                           ; BSR set to: 0
 35167                           ;m_flash.c: 43: m_flash_unlock();
 35168  008D50  EC76  F04D         	call	_m_flash_unlock	;wreg free
 35169                           
 35170                           ;m_flash.c: 44: EECON1bits.WREN=0;
 35171  008D54  94A6               	bcf	4006,2,c	;volatile
 35172  008D56  0012               	return		;funcret
 35173  008D58                     __end_of_m_flash_erase:
 35174                           	opt stack 0
 35175                           tosu	equ	0xFFF
 35176                           tosh	equ	0xFFE
 35177                           tosl	equ	0xFFD
 35178                           pclath	equ	0xFFA
 35179                           tblptru	equ	0xFF8
 35180                           tblptrh	equ	0xFF7
 35181                           tblptrl	equ	0xFF6
 35182                           tablat	equ	0xFF5
 35183                           prodh	equ	0xFF4
 35184                           prodl	equ	0xFF3
 35185                           intcon	equ	0xFF2
 35186                           indf0	equ	0xFEF
 35187                           postinc0	equ	0xFEE
 35188                           fsr0h	equ	0xFEA
 35189                           fsr0l	equ	0xFE9
 35190                           wreg	equ	0xFE8
 35191                           indf1	equ	0xFE7
 35192                           postinc1	equ	0xFE6
 35193                           postdec1	equ	0xFE5
 35194                           plusw1	equ	0xFE3
 35195                           fsr1h	equ	0xFE2
 35196                           fsr1l	equ	0xFE1
 35197                           indf2	equ	0xFDF
 35198                           postinc2	equ	0xFDE
 35199                           postdec2	equ	0xFDD
 35200                           plusw2	equ	0xFDB
 35201                           fsr2h	equ	0xFDA
 35202                           fsr2l	equ	0xFD9
 35203                           status	equ	0xFD8
 35204                           
 35205 ;; *************** function _m_flash_unlock *****************
 35206 ;; Defined at:
 35207 ;;		line 9 in file "src/driver/m_flash.c"
 35208 ;; Parameters:    Size  Location     Type
 35209 ;;		None
 35210 ;; Auto vars:     Size  Location     Type
 35211 ;;  oldGIE          1   31[COMRAM] volatile unsigned char 
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      void 
 35214 ;; Registers used:
 35215 ;;		None
 35216 ;; Tracked objects:
 35217 ;;		On entry : 0/0
 35218 ;;		On exit  : 0/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35225 ;;Total ram usage:        1 bytes
 35226 ;; Hardware stack levels used:    1
 35227 ;; Hardware stack levels required when called:    4
 35228 ;; This function calls:
 35229 ;;		Nothing
 35230 ;; This function is called by:
 35231 ;;		_m_flash_erase
 35232 ;;		_m_flash_write
 35233 ;; This function uses a non-reentrant model
 35234 ;;
 35235                           
 35236                           	psect	text187
 35237  009AEC                     __ptext187:
 35238                           	opt stack 0
 35239  009AEC                     _m_flash_unlock:
 35240                           	opt stack 21
 35241                           
 35242                           ;m_flash.c: 11: volatile unsigned char oldGIE;
 35243                           ;m_flash.c: 14: oldGIE=INTCON;
 35244                           
 35245                           ;incstack = 0
 35246  009AEC  CFF2 F020          	movff	intcon,m_flash_unlock@oldGIE	;volatile
 35247                           
 35248                           ;m_flash.c: 15: INTCONbits.GIE = 0;
 35249  009AF0  9EF2               	bcf	intcon,7,c	;volatile
 35250                           
 35251                           ;m_flash.c: 16: __nop();
 35252  009AF2  F000               	nop	
 35253  009AF4  0E55               	movlw	85	;# 
 35254  009AF6  6EA7               	movwf	4007,c	;# 
 35255  009AF8  0EAA               	movlw	170	;# 
 35256  009AFA  6EA7               	movwf	4007,c	;# 
 35257                           
 35258                           ;m_flash.c: 22: EECON1bits.WR=1;
 35259  009AFC  82A6               	bsf	4006,1,c	;volatile
 35260                           
 35261                           ;m_flash.c: 23: __nop();
 35262  009AFE  F000               	nop	
 35263                           
 35264                           ;m_flash.c: 27: INTCON=oldGIE;
 35265  009B00  C020  FFF2         	movff	m_flash_unlock@oldGIE,intcon	;volatile
 35266                           
 35267                           ;m_flash.c: 28: return;
 35268  009B04  0012               	return		;funcret
 35269  009B06                     __end_of_m_flash_unlock:
 35270                           	opt stack 0
 35271                           tosu	equ	0xFFF
 35272                           tosh	equ	0xFFE
 35273                           tosl	equ	0xFFD
 35274                           pclath	equ	0xFFA
 35275                           tblptru	equ	0xFF8
 35276                           tblptrh	equ	0xFF7
 35277                           tblptrl	equ	0xFF6
 35278                           tablat	equ	0xFF5
 35279                           prodh	equ	0xFF4
 35280                           prodl	equ	0xFF3
 35281                           intcon	equ	0xFF2
 35282                           indf0	equ	0xFEF
 35283                           postinc0	equ	0xFEE
 35284                           fsr0h	equ	0xFEA
 35285                           fsr0l	equ	0xFE9
 35286                           wreg	equ	0xFE8
 35287                           indf1	equ	0xFE7
 35288                           postinc1	equ	0xFE6
 35289                           postdec1	equ	0xFE5
 35290                           plusw1	equ	0xFE3
 35291                           fsr1h	equ	0xFE2
 35292                           fsr1l	equ	0xFE1
 35293                           indf2	equ	0xFDF
 35294                           postinc2	equ	0xFDE
 35295                           postdec2	equ	0xFDD
 35296                           plusw2	equ	0xFDB
 35297                           fsr2h	equ	0xFDA
 35298                           fsr2l	equ	0xFD9
 35299                           status	equ	0xFD8
 35300                           
 35301 ;; *************** function _data_sys_cal_v2 *****************
 35302 ;; Defined at:
 35303 ;;		line 153 in file "src/api/data.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;  stp             2   98[BANK0 ] PTR struct .
 35306 ;;		 -> stSysData(240), 
 35307 ;; Auto vars:     Size  Location     Type
 35308 ;;  d               4  114[BANK0 ] float 
 35309 ;;  f               4  110[BANK0 ] float 
 35310 ;; Return value:  Size  Location     Type
 35311 ;;                  4   98[BANK0 ] unsigned long 
 35312 ;; Registers used:
 35313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35314 ;; Tracked objects:
 35315 ;;		On entry : 0/0
 35316 ;;		On exit  : 0/0
 35317 ;;		Unchanged: 0/0
 35318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35320 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35322 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35323 ;;Total ram usage:       20 bytes
 35324 ;; Hardware stack levels used:    1
 35325 ;; Hardware stack levels required when called:    5
 35326 ;; This function calls:
 35327 ;;		___fldiv
 35328 ;;		___flmul
 35329 ;;		___fltol
 35330 ;;		___xxtofl
 35331 ;; This function is called by:
 35332 ;;		_data_sys_init
 35333 ;;		___sys_data_save_write_flash
 35334 ;; This function uses a non-reentrant model
 35335 ;;
 35336                           
 35337                           	psect	text188
 35338  00474E                     __ptext188:
 35339                           	opt stack 0
 35340  00474E                     _data_sys_cal_v2:
 35341                           	opt stack 21
 35342                           
 35343                           ;data.c: 155: float d,f;
 35344                           ;data.c: 156: d=(float)(stp->d);
 35345                           
 35346                           ;incstack = 0
 35347  00474E  0100               	movlb	0	; () banked
 35348  004750  EE20 F00C          	lfsr	2,12
 35349  004754  51C2               	movf	data_sys_cal_v2@stp& (0+255),w,b
 35350  004756  26D9               	addwf	fsr2l,f,c
 35351  004758  51C3               	movf	(data_sys_cal_v2@stp+1)& (0+255),w,b
 35352  00475A  22DA               	addwfc	fsr2h,f,c
 35353  00475C  CFDE F060          	movff	postinc2,___xxtofl@val
 35354  004760  CFDE F061          	movff	postinc2,___xxtofl@val+1
 35355  004764  CFDE F062          	movff	postinc2,___xxtofl@val+2
 35356  004768  CFDE F063          	movff	postinc2,___xxtofl@val+3
 35357  00476C  0E00               	movlw	0
 35358  00476E  EC86  F01C         	call	___xxtofl
 35359  004772  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v2@d
 35360  004776  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v2@d+1
 35361  00477A  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v2@d+2
 35362  00477E  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v2@d+3
 35363                           
 35364                           ;data.c: 157: d=d/1000;
 35365  004782  C0D2  F087         	movff	data_sys_cal_v2@d,___fldiv@b
 35366  004786  C0D3  F088         	movff	data_sys_cal_v2@d+1,___fldiv@b+1
 35367  00478A  C0D4  F089         	movff	data_sys_cal_v2@d+2,___fldiv@b+2
 35368  00478E  C0D5  F08A         	movff	data_sys_cal_v2@d+3,___fldiv@b+3
 35369  004792  0E00               	movlw	0
 35370  004794  0100               	movlb	0	; () banked
 35371  004796  6F8B               	movwf	___fldiv@a& (0+255),b
 35372  004798  0E00               	movlw	0
 35373  00479A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 35374  00479C  0E7A               	movlw	122
 35375  00479E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 35376  0047A0  0E44               	movlw	68
 35377  0047A2  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 35378  0047A4  EC40  F00F         	call	___fldiv	;wreg free
 35379  0047A8  C087  F0D2         	movff	?___fldiv,data_sys_cal_v2@d
 35380  0047AC  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v2@d+1
 35381  0047B0  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v2@d+2
 35382  0047B4  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v2@d+3
 35383                           
 35384                           ;data.c: 158: f=0.2618f*d*d*d;
 35385  0047B8  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 35386  0047BC  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 35387  0047C0  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 35388  0047C4  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 35389  0047C8  C0D2  F06E         	movff	data_sys_cal_v2@d,___flmul@b
 35390  0047CC  C0D3  F06F         	movff	data_sys_cal_v2@d+1,___flmul@b+1
 35391  0047D0  C0D4  F070         	movff	data_sys_cal_v2@d+2,___flmul@b+2
 35392  0047D4  C0D5  F071         	movff	data_sys_cal_v2@d+3,___flmul@b+3
 35393  0047D8  EC9F  F008         	call	___flmul	;wreg free
 35394  0047DC  C06E  F0C6         	movff	?___flmul,_data_sys_cal_v2$5835
 35395  0047E0  C06F  F0C7         	movff	?___flmul+1,_data_sys_cal_v2$5835+1
 35396  0047E4  C070  F0C8         	movff	?___flmul+2,_data_sys_cal_v2$5835+2
 35397  0047E8  C071  F0C9         	movff	?___flmul+3,_data_sys_cal_v2$5835+3
 35398                           
 35399                           ;data.c: 158: f=0.2618f*d*d*d;
 35400  0047EC  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 35401  0047F0  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 35402  0047F4  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 35403  0047F8  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 35404  0047FC  C0C6  F06E         	movff	_data_sys_cal_v2$5835,___flmul@b
 35405  004800  C0C7  F06F         	movff	_data_sys_cal_v2$5835+1,___flmul@b+1
 35406  004804  C0C8  F070         	movff	_data_sys_cal_v2$5835+2,___flmul@b+2
 35407  004808  C0C9  F071         	movff	_data_sys_cal_v2$5835+3,___flmul@b+3
 35408  00480C  EC9F  F008         	call	___flmul	;wreg free
 35409  004810  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v2$5836
 35410  004814  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v2$5836+1
 35411  004818  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v2$5836+2
 35412  00481C  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v2$5836+3
 35413                           
 35414                           ;data.c: 158: f=0.2618f*d*d*d;
 35415  004820  C0CA  F06E         	movff	_data_sys_cal_v2$5836,___flmul@b
 35416  004824  C0CB  F06F         	movff	_data_sys_cal_v2$5836+1,___flmul@b+1
 35417  004828  C0CC  F070         	movff	_data_sys_cal_v2$5836+2,___flmul@b+2
 35418  00482C  C0CD  F071         	movff	_data_sys_cal_v2$5836+3,___flmul@b+3
 35419  004830  0EA6               	movlw	166
 35420  004832  0100               	movlb	0	; () banked
 35421  004834  6F72               	movwf	___flmul@a& (0+255),b
 35422  004836  0E0A               	movlw	10
 35423  004838  6F73               	movwf	(___flmul@a+1)& (0+255),b
 35424  00483A  0E86               	movlw	134
 35425  00483C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 35426  00483E  0E3E               	movlw	62
 35427  004840  6F75               	movwf	(___flmul@a+3)& (0+255),b
 35428  004842  EC9F  F008         	call	___flmul	;wreg free
 35429  004846  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 35430  00484A  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 35431  00484E  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 35432  004852  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 35433                           
 35434                           ;data.c: 159: f*=1000;
 35435  004856  C0CE  F06E         	movff	data_sys_cal_v2@f,___flmul@b
 35436  00485A  C0CF  F06F         	movff	data_sys_cal_v2@f+1,___flmul@b+1
 35437  00485E  C0D0  F070         	movff	data_sys_cal_v2@f+2,___flmul@b+2
 35438  004862  C0D1  F071         	movff	data_sys_cal_v2@f+3,___flmul@b+3
 35439  004866  0E00               	movlw	0
 35440  004868  0100               	movlb	0	; () banked
 35441  00486A  6F72               	movwf	___flmul@a& (0+255),b
 35442  00486C  0E00               	movlw	0
 35443  00486E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 35444  004870  0E7A               	movlw	122
 35445  004872  6F74               	movwf	(___flmul@a+2)& (0+255),b
 35446  004874  0E44               	movlw	68
 35447  004876  6F75               	movwf	(___flmul@a+3)& (0+255),b
 35448  004878  EC9F  F008         	call	___flmul	;wreg free
 35449  00487C  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 35450  004880  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 35451  004884  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 35452  004888  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 35453                           
 35454                           ;data.c: 160: return (uint32_t)f;
 35455  00488C  C0CE  F0B8         	movff	data_sys_cal_v2@f,___fltol@f1
 35456  004890  C0CF  F0B9         	movff	data_sys_cal_v2@f+1,___fltol@f1+1
 35457  004894  C0D0  F0BA         	movff	data_sys_cal_v2@f+2,___fltol@f1+2
 35458  004898  C0D1  F0BB         	movff	data_sys_cal_v2@f+3,___fltol@f1+3
 35459  00489C  EC54  F02A         	call	___fltol	;wreg free
 35460  0048A0  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v2
 35461  0048A4  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v2+1
 35462  0048A8  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v2+2
 35463  0048AC  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v2+3
 35464  0048B0  0012               	return	
 35465  0048B2                     __end_of_data_sys_cal_v2:
 35466                           	opt stack 0
 35467                           tosu	equ	0xFFF
 35468                           tosh	equ	0xFFE
 35469                           tosl	equ	0xFFD
 35470                           pclath	equ	0xFFA
 35471                           tblptru	equ	0xFF8
 35472                           tblptrh	equ	0xFF7
 35473                           tblptrl	equ	0xFF6
 35474                           tablat	equ	0xFF5
 35475                           prodh	equ	0xFF4
 35476                           prodl	equ	0xFF3
 35477                           intcon	equ	0xFF2
 35478                           indf0	equ	0xFEF
 35479                           postinc0	equ	0xFEE
 35480                           fsr0h	equ	0xFEA
 35481                           fsr0l	equ	0xFE9
 35482                           wreg	equ	0xFE8
 35483                           indf1	equ	0xFE7
 35484                           postinc1	equ	0xFE6
 35485                           postdec1	equ	0xFE5
 35486                           plusw1	equ	0xFE3
 35487                           fsr1h	equ	0xFE2
 35488                           fsr1l	equ	0xFE1
 35489                           indf2	equ	0xFDF
 35490                           postinc2	equ	0xFDE
 35491                           postdec2	equ	0xFDD
 35492                           plusw2	equ	0xFDB
 35493                           fsr2h	equ	0xFDA
 35494                           fsr2l	equ	0xFD9
 35495                           status	equ	0xFD8
 35496                           
 35497 ;; *************** function _data_sys_cal_v1 *****************
 35498 ;; Defined at:
 35499 ;;		line 141 in file "src/api/data.c"
 35500 ;; Parameters:    Size  Location     Type
 35501 ;;  stp             2   98[BANK0 ] PTR struct .
 35502 ;;		 -> stSysData(240), 
 35503 ;; Auto vars:     Size  Location     Type
 35504 ;;  r               4  122[BANK0 ] float 
 35505 ;;  f               4  118[BANK0 ] float 
 35506 ;;  h               4  114[BANK0 ] float 
 35507 ;; Return value:  Size  Location     Type
 35508 ;;                  4   98[BANK0 ] unsigned long 
 35509 ;; Registers used:
 35510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35511 ;; Tracked objects:
 35512 ;;		On entry : 0/0
 35513 ;;		On exit  : 0/0
 35514 ;;		Unchanged: 0/0
 35515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35517 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35519 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35520 ;;Total ram usage:       28 bytes
 35521 ;; Hardware stack levels used:    1
 35522 ;; Hardware stack levels required when called:    5
 35523 ;; This function calls:
 35524 ;;		___fldiv
 35525 ;;		___flmul
 35526 ;;		___fltol
 35527 ;;		___xxtofl
 35528 ;; This function is called by:
 35529 ;;		_data_sys_init
 35530 ;;		___sys_data_save_write_flash
 35531 ;; This function uses a non-reentrant model
 35532 ;;
 35533                           
 35534                           	psect	text189
 35535  003358                     __ptext189:
 35536                           	opt stack 0
 35537  003358                     _data_sys_cal_v1:
 35538                           	opt stack 21
 35539                           
 35540                           ;data.c: 143: float r,h,f;
 35541                           ;data.c: 144: r=(float)(stp->d);
 35542                           
 35543                           ;incstack = 0
 35544  003358  0100               	movlb	0	; () banked
 35545  00335A  EE20 F00C          	lfsr	2,12
 35546  00335E  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 35547  003360  26D9               	addwf	fsr2l,f,c
 35548  003362  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 35549  003364  22DA               	addwfc	fsr2h,f,c
 35550  003366  CFDE F060          	movff	postinc2,___xxtofl@val
 35551  00336A  CFDE F061          	movff	postinc2,___xxtofl@val+1
 35552  00336E  CFDE F062          	movff	postinc2,___xxtofl@val+2
 35553  003372  CFDE F063          	movff	postinc2,___xxtofl@val+3
 35554  003376  0E00               	movlw	0
 35555  003378  EC86  F01C         	call	___xxtofl
 35556  00337C  C060  F0DA         	movff	?___xxtofl,data_sys_cal_v1@r
 35557  003380  C061  F0DB         	movff	?___xxtofl+1,data_sys_cal_v1@r+1
 35558  003384  C062  F0DC         	movff	?___xxtofl+2,data_sys_cal_v1@r+2
 35559  003388  C063  F0DD         	movff	?___xxtofl+3,data_sys_cal_v1@r+3
 35560                           
 35561                           ;data.c: 145: h=(float)(stp->h);
 35562  00338C  0100               	movlb	0	; () banked
 35563  00338E  EE20 F008          	lfsr	2,8
 35564  003392  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 35565  003394  26D9               	addwf	fsr2l,f,c
 35566  003396  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 35567  003398  22DA               	addwfc	fsr2h,f,c
 35568  00339A  CFDE F060          	movff	postinc2,___xxtofl@val
 35569  00339E  CFDE F061          	movff	postinc2,___xxtofl@val+1
 35570  0033A2  CFDE F062          	movff	postinc2,___xxtofl@val+2
 35571  0033A6  CFDE F063          	movff	postinc2,___xxtofl@val+3
 35572  0033AA  0E01               	movlw	1
 35573  0033AC  EC86  F01C         	call	___xxtofl
 35574  0033B0  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v1@h
 35575  0033B4  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v1@h+1
 35576  0033B8  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v1@h+2
 35577  0033BC  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v1@h+3
 35578                           
 35579                           ;data.c: 146: r=r/1000/2;
 35580  0033C0  0E00               	movlw	0
 35581  0033C2  0100               	movlb	0	; () banked
 35582  0033C4  6F8B               	movwf	___fldiv@a& (0+255),b
 35583  0033C6  0E00               	movlw	0
 35584  0033C8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 35585  0033CA  0E7A               	movlw	122
 35586  0033CC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 35587  0033CE  0E44               	movlw	68
 35588  0033D0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 35589  0033D2  C0DA  F087         	movff	data_sys_cal_v1@r,___fldiv@b
 35590  0033D6  C0DB  F088         	movff	data_sys_cal_v1@r+1,___fldiv@b+1
 35591  0033DA  C0DC  F089         	movff	data_sys_cal_v1@r+2,___fldiv@b+2
 35592  0033DE  C0DD  F08A         	movff	data_sys_cal_v1@r+3,___fldiv@b+3
 35593  0033E2  EC40  F00F         	call	___fldiv	;wreg free
 35594  0033E6  C087  F0C6         	movff	?___fldiv,_data_sys_cal_v1$5832
 35595  0033EA  C088  F0C7         	movff	?___fldiv+1,_data_sys_cal_v1$5832+1
 35596  0033EE  C089  F0C8         	movff	?___fldiv+2,_data_sys_cal_v1$5832+2
 35597  0033F2  C08A  F0C9         	movff	?___fldiv+3,_data_sys_cal_v1$5832+3
 35598                           
 35599                           ;data.c: 146: r=r/1000/2;
 35600  0033F6  C0C6  F087         	movff	_data_sys_cal_v1$5832,___fldiv@b
 35601  0033FA  C0C7  F088         	movff	_data_sys_cal_v1$5832+1,___fldiv@b+1
 35602  0033FE  C0C8  F089         	movff	_data_sys_cal_v1$5832+2,___fldiv@b+2
 35603  003402  C0C9  F08A         	movff	_data_sys_cal_v1$5832+3,___fldiv@b+3
 35604  003406  0E00               	movlw	0
 35605  003408  0100               	movlb	0	; () banked
 35606  00340A  6F8B               	movwf	___fldiv@a& (0+255),b
 35607  00340C  0E00               	movlw	0
 35608  00340E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 35609  003410  0E00               	movlw	0
 35610  003412  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 35611  003414  0E40               	movlw	64
 35612  003416  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 35613  003418  EC40  F00F         	call	___fldiv	;wreg free
 35614  00341C  C087  F0DA         	movff	?___fldiv,data_sys_cal_v1@r
 35615  003420  C088  F0DB         	movff	?___fldiv+1,data_sys_cal_v1@r+1
 35616  003424  C089  F0DC         	movff	?___fldiv+2,data_sys_cal_v1@r+2
 35617  003428  C08A  F0DD         	movff	?___fldiv+3,data_sys_cal_v1@r+3
 35618                           
 35619                           ;data.c: 147: h=h/1000;
 35620  00342C  C0D2  F087         	movff	data_sys_cal_v1@h,___fldiv@b
 35621  003430  C0D3  F088         	movff	data_sys_cal_v1@h+1,___fldiv@b+1
 35622  003434  C0D4  F089         	movff	data_sys_cal_v1@h+2,___fldiv@b+2
 35623  003438  C0D5  F08A         	movff	data_sys_cal_v1@h+3,___fldiv@b+3
 35624  00343C  0E00               	movlw	0
 35625  00343E  0100               	movlb	0	; () banked
 35626  003440  6F8B               	movwf	___fldiv@a& (0+255),b
 35627  003442  0E00               	movlw	0
 35628  003444  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 35629  003446  0E7A               	movlw	122
 35630  003448  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 35631  00344A  0E44               	movlw	68
 35632  00344C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 35633  00344E  EC40  F00F         	call	___fldiv	;wreg free
 35634  003452  C087  F0D2         	movff	?___fldiv,data_sys_cal_v1@h
 35635  003456  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v1@h+1
 35636  00345A  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v1@h+2
 35637  00345E  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v1@h+3
 35638                           
 35639                           ;data.c: 148: f=h*(r*r)*3.1416f;
 35640  003462  C0DA  F072         	movff	data_sys_cal_v1@r,___flmul@a
 35641  003466  C0DB  F073         	movff	data_sys_cal_v1@r+1,___flmul@a+1
 35642  00346A  C0DC  F074         	movff	data_sys_cal_v1@r+2,___flmul@a+2
 35643  00346E  C0DD  F075         	movff	data_sys_cal_v1@r+3,___flmul@a+3
 35644  003472  C0DA  F06E         	movff	data_sys_cal_v1@r,___flmul@b
 35645  003476  C0DB  F06F         	movff	data_sys_cal_v1@r+1,___flmul@b+1
 35646  00347A  C0DC  F070         	movff	data_sys_cal_v1@r+2,___flmul@b+2
 35647  00347E  C0DD  F071         	movff	data_sys_cal_v1@r+3,___flmul@b+3
 35648  003482  EC9F  F008         	call	___flmul	;wreg free
 35649  003486  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v1$5833
 35650  00348A  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v1$5833+1
 35651  00348E  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v1$5833+2
 35652  003492  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v1$5833+3
 35653                           
 35654                           ;data.c: 148: f=h*(r*r)*3.1416f;
 35655  003496  C0D2  F072         	movff	data_sys_cal_v1@h,___flmul@a
 35656  00349A  C0D3  F073         	movff	data_sys_cal_v1@h+1,___flmul@a+1
 35657  00349E  C0D4  F074         	movff	data_sys_cal_v1@h+2,___flmul@a+2
 35658  0034A2  C0D5  F075         	movff	data_sys_cal_v1@h+3,___flmul@a+3
 35659  0034A6  C0CA  F06E         	movff	_data_sys_cal_v1$5833,___flmul@b
 35660  0034AA  C0CB  F06F         	movff	_data_sys_cal_v1$5833+1,___flmul@b+1
 35661  0034AE  C0CC  F070         	movff	_data_sys_cal_v1$5833+2,___flmul@b+2
 35662  0034B2  C0CD  F071         	movff	_data_sys_cal_v1$5833+3,___flmul@b+3
 35663  0034B6  EC9F  F008         	call	___flmul	;wreg free
 35664  0034BA  C06E  F0CE         	movff	?___flmul,_data_sys_cal_v1$5834
 35665  0034BE  C06F  F0CF         	movff	?___flmul+1,_data_sys_cal_v1$5834+1
 35666  0034C2  C070  F0D0         	movff	?___flmul+2,_data_sys_cal_v1$5834+2
 35667  0034C6  C071  F0D1         	movff	?___flmul+3,_data_sys_cal_v1$5834+3
 35668                           
 35669                           ;data.c: 148: f=h*(r*r)*3.1416f;
 35670  0034CA  C0CE  F06E         	movff	_data_sys_cal_v1$5834,___flmul@b
 35671  0034CE  C0CF  F06F         	movff	_data_sys_cal_v1$5834+1,___flmul@b+1
 35672  0034D2  C0D0  F070         	movff	_data_sys_cal_v1$5834+2,___flmul@b+2
 35673  0034D6  C0D1  F071         	movff	_data_sys_cal_v1$5834+3,___flmul@b+3
 35674  0034DA  0EF9               	movlw	249
 35675  0034DC  0100               	movlb	0	; () banked
 35676  0034DE  6F72               	movwf	___flmul@a& (0+255),b
 35677  0034E0  0E0F               	movlw	15
 35678  0034E2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 35679  0034E4  0E49               	movlw	73
 35680  0034E6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 35681  0034E8  0E40               	movlw	64
 35682  0034EA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 35683  0034EC  EC9F  F008         	call	___flmul	;wreg free
 35684  0034F0  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 35685  0034F4  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 35686  0034F8  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 35687  0034FC  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 35688                           
 35689                           ;data.c: 149: f*=1000;
 35690  003500  C0D6  F06E         	movff	data_sys_cal_v1@f,___flmul@b
 35691  003504  C0D7  F06F         	movff	data_sys_cal_v1@f+1,___flmul@b+1
 35692  003508  C0D8  F070         	movff	data_sys_cal_v1@f+2,___flmul@b+2
 35693  00350C  C0D9  F071         	movff	data_sys_cal_v1@f+3,___flmul@b+3
 35694  003510  0E00               	movlw	0
 35695  003512  0100               	movlb	0	; () banked
 35696  003514  6F72               	movwf	___flmul@a& (0+255),b
 35697  003516  0E00               	movlw	0
 35698  003518  6F73               	movwf	(___flmul@a+1)& (0+255),b
 35699  00351A  0E7A               	movlw	122
 35700  00351C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 35701  00351E  0E44               	movlw	68
 35702  003520  6F75               	movwf	(___flmul@a+3)& (0+255),b
 35703  003522  EC9F  F008         	call	___flmul	;wreg free
 35704  003526  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 35705  00352A  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 35706  00352E  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 35707  003532  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 35708                           
 35709                           ;data.c: 150: return (uint32_t)f;
 35710  003536  C0D6  F0B8         	movff	data_sys_cal_v1@f,___fltol@f1
 35711  00353A  C0D7  F0B9         	movff	data_sys_cal_v1@f+1,___fltol@f1+1
 35712  00353E  C0D8  F0BA         	movff	data_sys_cal_v1@f+2,___fltol@f1+2
 35713  003542  C0D9  F0BB         	movff	data_sys_cal_v1@f+3,___fltol@f1+3
 35714  003546  EC54  F02A         	call	___fltol	;wreg free
 35715  00354A  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v1
 35716  00354E  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v1+1
 35717  003552  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v1+2
 35718  003556  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v1+3
 35719  00355A  0012               	return	
 35720  00355C                     __end_of_data_sys_cal_v1:
 35721                           	opt stack 0
 35722                           tosu	equ	0xFFF
 35723                           tosh	equ	0xFFE
 35724                           tosl	equ	0xFFD
 35725                           pclath	equ	0xFFA
 35726                           tblptru	equ	0xFF8
 35727                           tblptrh	equ	0xFF7
 35728                           tblptrl	equ	0xFF6
 35729                           tablat	equ	0xFF5
 35730                           prodh	equ	0xFF4
 35731                           prodl	equ	0xFF3
 35732                           intcon	equ	0xFF2
 35733                           indf0	equ	0xFEF
 35734                           postinc0	equ	0xFEE
 35735                           fsr0h	equ	0xFEA
 35736                           fsr0l	equ	0xFE9
 35737                           wreg	equ	0xFE8
 35738                           indf1	equ	0xFE7
 35739                           postinc1	equ	0xFE6
 35740                           postdec1	equ	0xFE5
 35741                           plusw1	equ	0xFE3
 35742                           fsr1h	equ	0xFE2
 35743                           fsr1l	equ	0xFE1
 35744                           indf2	equ	0xFDF
 35745                           postinc2	equ	0xFDE
 35746                           postdec2	equ	0xFDD
 35747                           plusw2	equ	0xFDB
 35748                           fsr2h	equ	0xFDA
 35749                           fsr2l	equ	0xFD9
 35750                           status	equ	0xFD8
 35751                           
 35752 ;; *************** function ___xxtofl *****************
 35753 ;; Defined at:
 35754 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 35755 ;; Parameters:    Size  Location     Type
 35756 ;;  sign            1    wreg     unsigned char 
 35757 ;;  val             4    0[BANK0 ] long 
 35758 ;; Auto vars:     Size  Location     Type
 35759 ;;  sign            1    8[BANK0 ] unsigned char 
 35760 ;;  arg             4   10[BANK0 ] unsigned long 
 35761 ;;  exp             1    9[BANK0 ] unsigned char 
 35762 ;; Return value:  Size  Location     Type
 35763 ;;                  4    0[BANK0 ] unsigned char 
 35764 ;; Registers used:
 35765 ;;		wreg, status,2, status,0
 35766 ;; Tracked objects:
 35767 ;;		On entry : 0/0
 35768 ;;		On exit  : 0/0
 35769 ;;		Unchanged: 0/0
 35770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35772 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35774 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35775 ;;Total ram usage:       14 bytes
 35776 ;; Hardware stack levels used:    1
 35777 ;; Hardware stack levels required when called:    4
 35778 ;; This function calls:
 35779 ;;		Nothing
 35780 ;; This function is called by:
 35781 ;;		_data_sys_cal_v1
 35782 ;;		_data_sys_cal_v2
 35783 ;;		_m_interp1_float_fast
 35784 ;;		_cal_diff_hight_to_vol_h
 35785 ;;		_cal_diff_hight_level
 35786 ;;		_cal_diff_hight_to_vol_v
 35787 ;;		_cal_diff_p_to_h
 35788 ;; This function uses a non-reentrant model
 35789 ;;
 35790                           
 35791                           	psect	text190
 35792  00390C                     __ptext190:
 35793                           	opt stack 0
 35794  00390C                     ___xxtofl:
 35795                           	opt stack 21
 35796                           
 35797                           ;incstack = 0
 35798                           ;___xxtofl@sign stored from wreg
 35799  00390C  0100               	movlb	0	; () banked
 35800  00390E  6F68               	movwf	___xxtofl@sign& (0+255),b
 35801  003910  0100               	movlb	0	; () banked
 35802  003912  5168               	movf	___xxtofl@sign& (0+255),w,b
 35803  003914  0100               	movlb	0	; () banked
 35804  003916  B4D8               	btfsc	status,2,c
 35805  003918  D01E               	goto	l2966
 35806                           
 35807                           ; BSR set to: 0
 35808  00391A  0100               	movlb	0	; () banked
 35809  00391C  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 35810  00391E  D01B               	goto	l2966
 35811                           
 35812                           ; BSR set to: 0
 35813  003920  C060  F064         	movff	___xxtofl@val,??___xxtofl
 35814  003924  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 35815  003928  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 35816  00392C  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 35817  003930  0100               	movlb	0	; () banked
 35818  003932  1F64               	comf	??___xxtofl& (0+255),f,b
 35819  003934  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 35820  003936  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 35821  003938  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 35822  00393A  2B64               	incf	??___xxtofl& (0+255),f,b
 35823  00393C  0E00               	movlw	0
 35824  00393E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 35825  003940  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 35826  003942  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 35827  003944  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 35828  003948  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 35829  00394C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 35830  003950  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 35831  003954  D008               	goto	l13874
 35832  003956                     l2966:
 35833                           
 35834                           ; BSR set to: 0
 35835  003956  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 35836  00395A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 35837  00395E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 35838  003962  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 35839  003966                     l13874:
 35840                           
 35841                           ; BSR set to: 0
 35842  003966  0100               	movlb	0	; () banked
 35843  003968  5160               	movf	___xxtofl@val& (0+255),w,b
 35844  00396A  0100               	movlb	0	; () banked
 35845  00396C  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 35846  00396E  0100               	movlb	0	; () banked
 35847  003970  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 35848  003972  0100               	movlb	0	; () banked
 35849  003974  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 35850  003976  A4D8               	btfss	status,2,c
 35851  003978  D00A               	goto	l13880
 35852                           
 35853                           ; BSR set to: 0
 35854  00397A  0E00               	movlw	0
 35855  00397C  0100               	movlb	0	; () banked
 35856  00397E  6F60               	movwf	?___xxtofl& (0+255),b
 35857  003980  0E00               	movlw	0
 35858  003982  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 35859  003984  0E00               	movlw	0
 35860  003986  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 35861  003988  0E00               	movlw	0
 35862  00398A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 35863                           
 35864                           ; BSR set to: 0
 35865  00398C  0012               	return	
 35866  00398E                     l13880:
 35867                           
 35868                           ; BSR set to: 0
 35869  00398E  0E96               	movlw	150
 35870  003990  0100               	movlb	0	; () banked
 35871  003992  6F69               	movwf	___xxtofl@exp& (0+255),b
 35872  003994  D008               	goto	l13884
 35873  003996                     l13882:
 35874                           
 35875                           ; BSR set to: 0
 35876  003996  0100               	movlb	0	; () banked
 35877  003998  2B69               	incf	___xxtofl@exp& (0+255),f,b
 35878  00399A  0100               	movlb	0	; () banked
 35879  00399C  90D8               	bcf	status,0,c
 35880  00399E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 35881  0039A0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 35882  0039A2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 35883  0039A4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 35884  0039A6                     l13884:
 35885                           
 35886                           ; BSR set to: 0
 35887  0039A6  0E00               	movlw	0
 35888  0039A8  0100               	movlb	0	; () banked
 35889  0039AA  156A               	andwf	___xxtofl@arg& (0+255),w,b
 35890  0039AC  0100               	movlb	0	; () banked
 35891  0039AE  6F64               	movwf	??___xxtofl& (0+255),b
 35892  0039B0  0E00               	movlw	0
 35893  0039B2  0100               	movlb	0	; () banked
 35894  0039B4  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 35895  0039B6  0100               	movlb	0	; () banked
 35896  0039B8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 35897  0039BA  0E00               	movlw	0
 35898  0039BC  0100               	movlb	0	; () banked
 35899  0039BE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 35900  0039C0  0100               	movlb	0	; () banked
 35901  0039C2  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 35902  0039C4  0EFE               	movlw	254
 35903  0039C6  0100               	movlb	0	; () banked
 35904  0039C8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 35905  0039CA  0100               	movlb	0	; () banked
 35906  0039CC  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 35907  0039CE  0100               	movlb	0	; () banked
 35908  0039D0  5164               	movf	??___xxtofl& (0+255),w,b
 35909  0039D2  0100               	movlb	0	; () banked
 35910  0039D4  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 35911  0039D6  0100               	movlb	0	; () banked
 35912  0039D8  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 35913  0039DA  0100               	movlb	0	; () banked
 35914  0039DC  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 35915  0039DE  B4D8               	btfsc	status,2,c
 35916  0039E0  D010               	goto	l2973
 35917  0039E2  D7D9               	goto	l13882
 35918  0039E4                     l13886:
 35919                           
 35920                           ; BSR set to: 0
 35921  0039E4  0100               	movlb	0	; () banked
 35922  0039E6  2B69               	incf	___xxtofl@exp& (0+255),f,b
 35923                           
 35924                           ; BSR set to: 0
 35925  0039E8  0E01               	movlw	1
 35926  0039EA  0100               	movlb	0	; () banked
 35927  0039EC  276A               	addwf	___xxtofl@arg& (0+255),f,b
 35928  0039EE  0E00               	movlw	0
 35929  0039F0  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 35930  0039F2  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 35931  0039F4  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 35932                           
 35933                           ; BSR set to: 0
 35934  0039F6  0100               	movlb	0	; () banked
 35935  0039F8  90D8               	bcf	status,0,c
 35936  0039FA  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 35937  0039FC  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 35938  0039FE  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 35939  003A00  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 35940  003A02                     l2973:
 35941                           
 35942                           ; BSR set to: 0
 35943  003A02  0E00               	movlw	0
 35944  003A04  0100               	movlb	0	; () banked
 35945  003A06  156A               	andwf	___xxtofl@arg& (0+255),w,b
 35946  003A08  0100               	movlb	0	; () banked
 35947  003A0A  6F64               	movwf	??___xxtofl& (0+255),b
 35948  003A0C  0E00               	movlw	0
 35949  003A0E  0100               	movlb	0	; () banked
 35950  003A10  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 35951  003A12  0100               	movlb	0	; () banked
 35952  003A14  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 35953  003A16  0E00               	movlw	0
 35954  003A18  0100               	movlb	0	; () banked
 35955  003A1A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 35956  003A1C  0100               	movlb	0	; () banked
 35957  003A1E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 35958  003A20  0EFF               	movlw	255
 35959  003A22  0100               	movlb	0	; () banked
 35960  003A24  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 35961  003A26  0100               	movlb	0	; () banked
 35962  003A28  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 35963  003A2A  0100               	movlb	0	; () banked
 35964  003A2C  5164               	movf	??___xxtofl& (0+255),w,b
 35965  003A2E  0100               	movlb	0	; () banked
 35966  003A30  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 35967  003A32  0100               	movlb	0	; () banked
 35968  003A34  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 35969  003A36  0100               	movlb	0	; () banked
 35970  003A38  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 35971  003A3A  B4D8               	btfsc	status,2,c
 35972  003A3C  D009               	goto	l13894
 35973  003A3E  D7D2               	goto	l13886
 35974  003A40                     l13892:
 35975                           
 35976                           ; BSR set to: 0
 35977  003A40  0100               	movlb	0	; () banked
 35978  003A42  0769               	decf	___xxtofl@exp& (0+255),f,b
 35979  003A44  0100               	movlb	0	; () banked
 35980  003A46  90D8               	bcf	status,0,c
 35981  003A48  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 35982  003A4A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 35983  003A4C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 35984  003A4E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 35985  003A50                     l13894:
 35986                           
 35987                           ; BSR set to: 0
 35988  003A50  0100               	movlb	0	; () banked
 35989  003A52  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 35990  003A54  D004               	goto	l2980
 35991                           
 35992                           ; BSR set to: 0
 35993  003A56  0E02               	movlw	2
 35994  003A58  0100               	movlb	0	; () banked
 35995  003A5A  6169               	cpfslt	___xxtofl@exp& (0+255),b
 35996  003A5C  D7F1               	goto	l13892
 35997  003A5E                     l2980:
 35998                           
 35999                           ; BSR set to: 0
 36000  003A5E  0100               	movlb	0	; () banked
 36001  003A60  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 36002  003A62  D009               	goto	l2981
 36003                           
 36004                           ; BSR set to: 0
 36005  003A64  0EFF               	movlw	255
 36006  003A66  0100               	movlb	0	; () banked
 36007  003A68  176A               	andwf	___xxtofl@arg& (0+255),f,b
 36008  003A6A  0EFF               	movlw	255
 36009  003A6C  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 36010  003A6E  0E7F               	movlw	127
 36011  003A70  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 36012  003A72  0EFF               	movlw	255
 36013  003A74  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 36014  003A76                     l2981:
 36015                           
 36016                           ; BSR set to: 0
 36017  003A76  0100               	movlb	0	; () banked
 36018  003A78  90D8               	bcf	status,0,c
 36019  003A7A  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 36020  003A7C  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 36021  003A80  0100               	movlb	0	; () banked
 36022  003A82  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 36023  003A84  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 36024  003A86  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 36025  003A88  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 36026  003A8C  0100               	movlb	0	; () banked
 36027  003A8E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 36028  003A90  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 36029  003A92  6B64               	clrf	??___xxtofl& (0+255),b
 36030  003A94  0100               	movlb	0	; () banked
 36031  003A96  5164               	movf	??___xxtofl& (0+255),w,b
 36032  003A98  0100               	movlb	0	; () banked
 36033  003A9A  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 36034  003A9C  0100               	movlb	0	; () banked
 36035  003A9E  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 36036  003AA0  0100               	movlb	0	; () banked
 36037  003AA2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 36038  003AA4  0100               	movlb	0	; () banked
 36039  003AA6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 36040  003AA8  0100               	movlb	0	; () banked
 36041  003AAA  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 36042  003AAC  0100               	movlb	0	; () banked
 36043  003AAE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 36044  003AB0  0100               	movlb	0	; () banked
 36045  003AB2  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 36046                           
 36047                           ; BSR set to: 0
 36048  003AB4  0100               	movlb	0	; () banked
 36049  003AB6  5168               	movf	___xxtofl@sign& (0+255),w,b
 36050  003AB8  0100               	movlb	0	; () banked
 36051  003ABA  B4D8               	btfsc	status,2,c
 36052  003ABC  D005               	goto	l13906
 36053                           
 36054                           ; BSR set to: 0
 36055  003ABE  0100               	movlb	0	; () banked
 36056  003AC0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 36057  003AC2  D002               	goto	l13906
 36058                           
 36059                           ; BSR set to: 0
 36060  003AC4  0100               	movlb	0	; () banked
 36061  003AC6  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 36062  003AC8                     l13906:
 36063                           
 36064                           ; BSR set to: 0
 36065  003AC8  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 36066  003ACC  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 36067  003AD0  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 36068  003AD4  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 36069  003AD8  0012               	return	
 36070  003ADA                     __end_of___xxtofl:
 36071                           	opt stack 0
 36072                           tosu	equ	0xFFF
 36073                           tosh	equ	0xFFE
 36074                           tosl	equ	0xFFD
 36075                           pclath	equ	0xFFA
 36076                           tblptru	equ	0xFF8
 36077                           tblptrh	equ	0xFF7
 36078                           tblptrl	equ	0xFF6
 36079                           tablat	equ	0xFF5
 36080                           prodh	equ	0xFF4
 36081                           prodl	equ	0xFF3
 36082                           intcon	equ	0xFF2
 36083                           indf0	equ	0xFEF
 36084                           postinc0	equ	0xFEE
 36085                           fsr0h	equ	0xFEA
 36086                           fsr0l	equ	0xFE9
 36087                           wreg	equ	0xFE8
 36088                           indf1	equ	0xFE7
 36089                           postinc1	equ	0xFE6
 36090                           postdec1	equ	0xFE5
 36091                           plusw1	equ	0xFE3
 36092                           fsr1h	equ	0xFE2
 36093                           fsr1l	equ	0xFE1
 36094                           indf2	equ	0xFDF
 36095                           postinc2	equ	0xFDE
 36096                           postdec2	equ	0xFDD
 36097                           plusw2	equ	0xFDB
 36098                           fsr2h	equ	0xFDA
 36099                           fsr2l	equ	0xFD9
 36100                           status	equ	0xFD8
 36101                           
 36102 ;; *************** function ___fltol *****************
 36103 ;; Defined at:
 36104 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 36105 ;; Parameters:    Size  Location     Type
 36106 ;;  f1              4   88[BANK0 ] unsigned char 
 36107 ;; Auto vars:     Size  Location     Type
 36108 ;;  exp1            1   97[BANK0 ] unsigned char 
 36109 ;;  sign1           1   96[BANK0 ] unsigned char 
 36110 ;; Return value:  Size  Location     Type
 36111 ;;                  4   88[BANK0 ] long 
 36112 ;; Registers used:
 36113 ;;		wreg, status,2, status,0
 36114 ;; Tracked objects:
 36115 ;;		On entry : 0/0
 36116 ;;		On exit  : 0/0
 36117 ;;		Unchanged: 0/0
 36118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36123 ;;Total ram usage:       10 bytes
 36124 ;; Hardware stack levels used:    1
 36125 ;; Hardware stack levels required when called:    4
 36126 ;; This function calls:
 36127 ;;		Nothing
 36128 ;; This function is called by:
 36129 ;;		_data_sys_cal_v1
 36130 ;;		_data_sys_cal_v2
 36131 ;;		_cal_diff_hight_to_vol_h
 36132 ;;		_cal_diff_hight_level
 36133 ;;		_cal_diff_hight_to_vol_v
 36134 ;;		_cal_diff_p_to_h
 36135 ;; This function uses a non-reentrant model
 36136 ;;
 36137                           
 36138                           	psect	text191
 36139  0054A8                     __ptext191:
 36140                           	opt stack 0
 36141  0054A8                     ___fltol:
 36142                           	opt stack 21
 36143                           
 36144                           ; BSR set to: 0
 36145                           ;incstack = 0
 36146  0054A8  0100               	movlb	0	; () banked
 36147  0054AA  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 36148  0054AC  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 36149  0054AE  0100               	movlb	0	; () banked
 36150  0054B0  6FC1               	movwf	___fltol@exp1& (0+255),b
 36151  0054B2  0100               	movlb	0	; () banked
 36152  0054B4  51C1               	movf	___fltol@exp1& (0+255),w,b
 36153  0054B6  A4D8               	btfss	status,2,c
 36154  0054B8  D00A               	goto	l14222
 36155                           
 36156                           ; BSR set to: 0
 36157  0054BA  0E00               	movlw	0
 36158  0054BC  0100               	movlb	0	; () banked
 36159  0054BE  6FB8               	movwf	?___fltol& (0+255),b
 36160  0054C0  0E00               	movlw	0
 36161  0054C2  6FB9               	movwf	(?___fltol+1)& (0+255),b
 36162  0054C4  0E00               	movlw	0
 36163  0054C6  6FBA               	movwf	(?___fltol+2)& (0+255),b
 36164  0054C8  0E00               	movlw	0
 36165  0054CA  6FBB               	movwf	(?___fltol+3)& (0+255),b
 36166                           
 36167                           ; BSR set to: 0
 36168  0054CC  0012               	return	
 36169  0054CE                     l14222:
 36170                           
 36171                           ; BSR set to: 0
 36172  0054CE  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 36173  0054D2  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 36174  0054D6  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 36175  0054DA  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 36176  0054DE  0E20               	movlw	32
 36177  0054E0  D006               	goto	u13100
 36178  0054E2                     u13105:
 36179  0054E2  0100               	movlb	0	; () banked
 36180  0054E4  90D8               	bcf	status,0,c
 36181  0054E6  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 36182  0054E8  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 36183  0054EA  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 36184  0054EC  33BC               	rrcf	??___fltol& (0+255),f,b
 36185  0054EE                     u13100:
 36186  0054EE  2EE8               	decfsz	wreg,f,c
 36187  0054F0  D7F8               	goto	u13105
 36188  0054F2  0100               	movlb	0	; () banked
 36189  0054F4  51BC               	movf	??___fltol& (0+255),w,b
 36190  0054F6  0100               	movlb	0	; () banked
 36191  0054F8  6FC0               	movwf	___fltol@sign1& (0+255),b
 36192                           
 36193                           ; BSR set to: 0
 36194  0054FA  0100               	movlb	0	; () banked
 36195  0054FC  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 36196                           
 36197                           ; BSR set to: 0
 36198  0054FE  0EFF               	movlw	255
 36199  005500  0100               	movlb	0	; () banked
 36200  005502  17B8               	andwf	___fltol@f1& (0+255),f,b
 36201  005504  0EFF               	movlw	255
 36202  005506  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 36203  005508  0EFF               	movlw	255
 36204  00550A  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 36205  00550C  0E00               	movlw	0
 36206  00550E  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 36207                           
 36208                           ; BSR set to: 0
 36209  005510  0E96               	movlw	150
 36210  005512  0100               	movlb	0	; () banked
 36211  005514  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 36212                           
 36213                           ; BSR set to: 0
 36214  005516  0100               	movlb	0	; () banked
 36215  005518  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 36216  00551A  D01A               	goto	l14242
 36217                           
 36218                           ; BSR set to: 0
 36219  00551C  0100               	movlb	0	; () banked
 36220  00551E  51C1               	movf	___fltol@exp1& (0+255),w,b
 36221  005520  0A80               	xorlw	128
 36222  005522  0F97               	addlw	151
 36223  005524  B0D8               	btfsc	status,0,c
 36224  005526  D00A               	goto	l14238
 36225                           
 36226                           ; BSR set to: 0
 36227  005528  0E00               	movlw	0
 36228  00552A  0100               	movlb	0	; () banked
 36229  00552C  6FB8               	movwf	?___fltol& (0+255),b
 36230  00552E  0E00               	movlw	0
 36231  005530  6FB9               	movwf	(?___fltol+1)& (0+255),b
 36232  005532  0E00               	movlw	0
 36233  005534  6FBA               	movwf	(?___fltol+2)& (0+255),b
 36234  005536  0E00               	movlw	0
 36235  005538  6FBB               	movwf	(?___fltol+3)& (0+255),b
 36236                           
 36237                           ; BSR set to: 0
 36238  00553A  0012               	return	
 36239  00553C                     l14238:
 36240                           
 36241                           ; BSR set to: 0
 36242  00553C  0100               	movlb	0	; () banked
 36243  00553E  90D8               	bcf	status,0,c
 36244  005540  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 36245  005542  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 36246  005544  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 36247  005546  33B8               	rrcf	___fltol@f1& (0+255),f,b
 36248                           
 36249                           ; BSR set to: 0
 36250  005548  0100               	movlb	0	; () banked
 36251  00554A  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 36252  00554C  D7F7               	goto	l14238
 36253                           
 36254                           ; BSR set to: 0
 36255  00554E  D01B               	goto	l14252
 36256  005550                     l14242:
 36257                           
 36258                           ; BSR set to: 0
 36259  005550  0E1F               	movlw	31
 36260  005552  0100               	movlb	0	; () banked
 36261  005554  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 36262  005556  D012               	goto	l14250
 36263                           
 36264                           ; BSR set to: 0
 36265  005558  0E00               	movlw	0
 36266  00555A  0100               	movlb	0	; () banked
 36267  00555C  6FB8               	movwf	?___fltol& (0+255),b
 36268  00555E  0E00               	movlw	0
 36269  005560  6FB9               	movwf	(?___fltol+1)& (0+255),b
 36270  005562  0E00               	movlw	0
 36271  005564  6FBA               	movwf	(?___fltol+2)& (0+255),b
 36272  005566  0E00               	movlw	0
 36273  005568  6FBB               	movwf	(?___fltol+3)& (0+255),b
 36274                           
 36275                           ; BSR set to: 0
 36276  00556A  0012               	return	
 36277  00556C                     l14248:
 36278                           
 36279                           ; BSR set to: 0
 36280  00556C  0100               	movlb	0	; () banked
 36281  00556E  90D8               	bcf	status,0,c
 36282  005570  37B8               	rlcf	___fltol@f1& (0+255),f,b
 36283  005572  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 36284  005574  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 36285  005576  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 36286  005578  0100               	movlb	0	; () banked
 36287  00557A  07C1               	decf	___fltol@exp1& (0+255),f,b
 36288  00557C                     l14250:
 36289                           
 36290                           ; BSR set to: 0
 36291  00557C  0100               	movlb	0	; () banked
 36292  00557E  51C1               	movf	___fltol@exp1& (0+255),w,b
 36293  005580  0100               	movlb	0	; () banked
 36294  005582  A4D8               	btfss	status,2,c
 36295  005584  D7F3               	goto	l14248
 36296  005586                     l14252:
 36297                           
 36298                           ; BSR set to: 0
 36299  005586  0100               	movlb	0	; () banked
 36300  005588  51C0               	movf	___fltol@sign1& (0+255),w,b
 36301  00558A  0100               	movlb	0	; () banked
 36302  00558C  B4D8               	btfsc	status,2,c
 36303  00558E  D009               	goto	l14256
 36304                           
 36305                           ; BSR set to: 0
 36306  005590  0100               	movlb	0	; () banked
 36307  005592  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 36308  005594  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 36309  005596  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 36310  005598  6DB8               	negf	___fltol@f1& (0+255),b
 36311  00559A  0E00               	movlw	0
 36312  00559C  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 36313  00559E  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 36314  0055A0  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 36315  0055A2                     l14256:
 36316                           
 36317                           ; BSR set to: 0
 36318  0055A2  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 36319  0055A6  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 36320  0055AA  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 36321  0055AE  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 36322  0055B2  0012               	return	
 36323  0055B4                     __end_of___fltol:
 36324                           	opt stack 0
 36325                           tosu	equ	0xFFF
 36326                           tosh	equ	0xFFE
 36327                           tosl	equ	0xFFD
 36328                           pclath	equ	0xFFA
 36329                           tblptru	equ	0xFF8
 36330                           tblptrh	equ	0xFF7
 36331                           tblptrl	equ	0xFF6
 36332                           tablat	equ	0xFF5
 36333                           prodh	equ	0xFF4
 36334                           prodl	equ	0xFF3
 36335                           intcon	equ	0xFF2
 36336                           indf0	equ	0xFEF
 36337                           postinc0	equ	0xFEE
 36338                           fsr0h	equ	0xFEA
 36339                           fsr0l	equ	0xFE9
 36340                           wreg	equ	0xFE8
 36341                           indf1	equ	0xFE7
 36342                           postinc1	equ	0xFE6
 36343                           postdec1	equ	0xFE5
 36344                           plusw1	equ	0xFE3
 36345                           fsr1h	equ	0xFE2
 36346                           fsr1l	equ	0xFE1
 36347                           indf2	equ	0xFDF
 36348                           postinc2	equ	0xFDE
 36349                           postdec2	equ	0xFDD
 36350                           plusw2	equ	0xFDB
 36351                           fsr2h	equ	0xFDA
 36352                           fsr2l	equ	0xFD9
 36353                           status	equ	0xFD8
 36354                           
 36355 ;; *************** function ___flmul *****************
 36356 ;; Defined at:
 36357 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 36358 ;; Parameters:    Size  Location     Type
 36359 ;;  b               4   14[BANK0 ] long 
 36360 ;;  a               4   18[BANK0 ] long 
 36361 ;; Auto vars:     Size  Location     Type
 36362 ;;  prod            4   33[BANK0 ] struct .
 36363 ;;  grs             4   28[BANK0 ] unsigned long 
 36364 ;;  temp            2   37[BANK0 ] struct .
 36365 ;;  bexp            1   32[BANK0 ] unsigned char 
 36366 ;;  aexp            1   27[BANK0 ] unsigned char 
 36367 ;;  sign            1   26[BANK0 ] unsigned char 
 36368 ;; Return value:  Size  Location     Type
 36369 ;;                  4   14[BANK0 ] unsigned char 
 36370 ;; Registers used:
 36371 ;;		wreg, status,2, status,0, prodl, prodh
 36372 ;; Tracked objects:
 36373 ;;		On entry : 0/0
 36374 ;;		On exit  : 0/0
 36375 ;;		Unchanged: 0/0
 36376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36378 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36380 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36381 ;;Total ram usage:       25 bytes
 36382 ;; Hardware stack levels used:    1
 36383 ;; Hardware stack levels required when called:    4
 36384 ;; This function calls:
 36385 ;;		Nothing
 36386 ;; This function is called by:
 36387 ;;		_data_sys_cal_v1
 36388 ;;		_data_sys_cal_v2
 36389 ;;		_m_interp1_float_fast
 36390 ;;		_cal_diff_hight_to_vol_h
 36391 ;;		_cal_diff_hight_level
 36392 ;;		_cal_diff_hight_to_vol_v
 36393 ;;		_cal_diff_p_to_h
 36394 ;; This function uses a non-reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text192
 36398  00113E                     __ptext192:
 36399                           	opt stack 0
 36400  00113E                     ___flmul:
 36401                           	opt stack 21
 36402                           
 36403                           ; BSR set to: 0
 36404                           ;incstack = 0
 36405  00113E  0100               	movlb	0	; () banked
 36406  001140  5171               	movf	(___flmul@b+3)& (0+255),w,b
 36407  001142  0B80               	andlw	128
 36408  001144  0100               	movlb	0	; () banked
 36409  001146  6F7A               	movwf	___flmul@sign& (0+255),b
 36410  001148  0100               	movlb	0	; () banked
 36411  00114A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 36412  00114C  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 36413  00114E  0100               	movlb	0	; () banked
 36414  001150  6F80               	movwf	___flmul@bexp& (0+255),b
 36415                           
 36416                           ; BSR set to: 0
 36417  001152  0100               	movlb	0	; () banked
 36418  001154  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 36419  001156  D002               	goto	l13678
 36420                           
 36421                           ; BSR set to: 0
 36422  001158  0100               	movlb	0	; () banked
 36423  00115A  8180               	bsf	___flmul@bexp& (0+255),0,b
 36424  00115C                     l13678:
 36425                           
 36426                           ; BSR set to: 0
 36427  00115C  0100               	movlb	0	; () banked
 36428  00115E  5180               	movf	___flmul@bexp& (0+255),w,b
 36429  001160  0100               	movlb	0	; () banked
 36430  001162  B4D8               	btfsc	status,2,c
 36431  001164  D010               	goto	l13686
 36432                           
 36433                           ; BSR set to: 0
 36434  001166  0100               	movlb	0	; () banked
 36435  001168  2980               	incf	___flmul@bexp& (0+255),w,b
 36436  00116A  A4D8               	btfss	status,2,c
 36437  00116C  D009               	goto	l13684
 36438                           
 36439                           ; BSR set to: 0
 36440  00116E  0E00               	movlw	0
 36441  001170  0100               	movlb	0	; () banked
 36442  001172  6F6E               	movwf	___flmul@b& (0+255),b
 36443  001174  0E00               	movlw	0
 36444  001176  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 36445  001178  0E00               	movlw	0
 36446  00117A  6F70               	movwf	(___flmul@b+2)& (0+255),b
 36447  00117C  0E00               	movlw	0
 36448  00117E  6F71               	movwf	(___flmul@b+3)& (0+255),b
 36449  001180                     l13684:
 36450                           
 36451                           ; BSR set to: 0
 36452  001180  0100               	movlb	0	; () banked
 36453  001182  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 36454  001184  D009               	goto	l13688
 36455  001186                     l13686:
 36456                           
 36457                           ; BSR set to: 0
 36458  001186  0E00               	movlw	0
 36459  001188  0100               	movlb	0	; () banked
 36460  00118A  6F6E               	movwf	___flmul@b& (0+255),b
 36461  00118C  0E00               	movlw	0
 36462  00118E  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 36463  001190  0E00               	movlw	0
 36464  001192  6F70               	movwf	(___flmul@b+2)& (0+255),b
 36465  001194  0E00               	movlw	0
 36466  001196  6F71               	movwf	(___flmul@b+3)& (0+255),b
 36467  001198                     l13688:
 36468                           
 36469                           ; BSR set to: 0
 36470  001198  0100               	movlb	0	; () banked
 36471  00119A  5175               	movf	(___flmul@a+3)& (0+255),w,b
 36472  00119C  0B80               	andlw	128
 36473  00119E  0100               	movlb	0	; () banked
 36474  0011A0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 36475                           
 36476                           ; BSR set to: 0
 36477  0011A2  0100               	movlb	0	; () banked
 36478  0011A4  5175               	movf	(___flmul@a+3)& (0+255),w,b
 36479  0011A6  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 36480  0011A8  0100               	movlb	0	; () banked
 36481  0011AA  6F7B               	movwf	___flmul@aexp& (0+255),b
 36482                           
 36483                           ; BSR set to: 0
 36484  0011AC  0100               	movlb	0	; () banked
 36485  0011AE  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 36486  0011B0  D002               	goto	l13696
 36487                           
 36488                           ; BSR set to: 0
 36489  0011B2  0100               	movlb	0	; () banked
 36490  0011B4  817B               	bsf	___flmul@aexp& (0+255),0,b
 36491  0011B6                     l13696:
 36492                           
 36493                           ; BSR set to: 0
 36494  0011B6  0100               	movlb	0	; () banked
 36495  0011B8  517B               	movf	___flmul@aexp& (0+255),w,b
 36496  0011BA  0100               	movlb	0	; () banked
 36497  0011BC  B4D8               	btfsc	status,2,c
 36498  0011BE  D010               	goto	l13704
 36499                           
 36500                           ; BSR set to: 0
 36501  0011C0  0100               	movlb	0	; () banked
 36502  0011C2  297B               	incf	___flmul@aexp& (0+255),w,b
 36503  0011C4  A4D8               	btfss	status,2,c
 36504  0011C6  D009               	goto	l13702
 36505                           
 36506                           ; BSR set to: 0
 36507  0011C8  0E00               	movlw	0
 36508  0011CA  0100               	movlb	0	; () banked
 36509  0011CC  6F72               	movwf	___flmul@a& (0+255),b
 36510  0011CE  0E00               	movlw	0
 36511  0011D0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36512  0011D2  0E00               	movlw	0
 36513  0011D4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36514  0011D6  0E00               	movlw	0
 36515  0011D8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36516  0011DA                     l13702:
 36517                           
 36518                           ; BSR set to: 0
 36519  0011DA  0100               	movlb	0	; () banked
 36520  0011DC  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 36521  0011DE  D009               	goto	l2944
 36522  0011E0                     l13704:
 36523                           
 36524                           ; BSR set to: 0
 36525  0011E0  0E00               	movlw	0
 36526  0011E2  0100               	movlb	0	; () banked
 36527  0011E4  6F72               	movwf	___flmul@a& (0+255),b
 36528  0011E6  0E00               	movlw	0
 36529  0011E8  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36530  0011EA  0E00               	movlw	0
 36531  0011EC  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36532  0011EE  0E00               	movlw	0
 36533  0011F0  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36534  0011F2                     l2944:
 36535                           
 36536                           ; BSR set to: 0
 36537  0011F2  0100               	movlb	0	; () banked
 36538  0011F4  517B               	movf	___flmul@aexp& (0+255),w,b
 36539  0011F6  0100               	movlb	0	; () banked
 36540  0011F8  B4D8               	btfsc	status,2,c
 36541  0011FA  D005               	goto	l13708
 36542                           
 36543                           ; BSR set to: 0
 36544  0011FC  0100               	movlb	0	; () banked
 36545  0011FE  5180               	movf	___flmul@bexp& (0+255),w,b
 36546  001200  0100               	movlb	0	; () banked
 36547  001202  A4D8               	btfss	status,2,c
 36548  001204  D00A               	goto	l13712
 36549  001206                     l13708:
 36550                           
 36551                           ; BSR set to: 0
 36552  001206  0E00               	movlw	0
 36553  001208  0100               	movlb	0	; () banked
 36554  00120A  6F6E               	movwf	?___flmul& (0+255),b
 36555  00120C  0E00               	movlw	0
 36556  00120E  6F6F               	movwf	(?___flmul+1)& (0+255),b
 36557  001210  0E00               	movlw	0
 36558  001212  6F70               	movwf	(?___flmul+2)& (0+255),b
 36559  001214  0E00               	movlw	0
 36560  001216  6F71               	movwf	(?___flmul+3)& (0+255),b
 36561                           
 36562                           ; BSR set to: 0
 36563  001218  0012               	return	
 36564  00121A                     l13712:
 36565                           
 36566                           ; BSR set to: 0
 36567  00121A  0100               	movlb	0	; () banked
 36568  00121C  5174               	movf	(___flmul@a+2)& (0+255),w,b
 36569  00121E  0100               	movlb	0	; () banked
 36570  001220  036E               	mulwf	___flmul@b& (0+255),b
 36571  001222  CFF3 F085          	movff	prodl,___flmul@temp
 36572  001226  CFF4 F086          	movff	prodh,___flmul@temp+1
 36573                           
 36574                           ; BSR set to: 0
 36575  00122A  0100               	movlb	0	; () banked
 36576  00122C  5185               	movf	___flmul@temp& (0+255),w,b
 36577  00122E  0100               	movlb	0	; () banked
 36578  001230  6F7C               	movwf	___flmul@grs& (0+255),b
 36579  001232  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 36580  001234  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 36581  001236  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 36582                           
 36583                           ; BSR set to: 0
 36584  001238  0100               	movlb	0	; () banked
 36585  00123A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36586  00123C  0100               	movlb	0	; () banked
 36587  00123E  6F81               	movwf	___flmul@prod& (0+255),b
 36588  001240  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 36589  001242  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 36590  001244  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 36591  001246  0100               	movlb	0	; () banked
 36592  001248  5173               	movf	(___flmul@a+1)& (0+255),w,b
 36593  00124A  0100               	movlb	0	; () banked
 36594  00124C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 36595  00124E  CFF3 F085          	movff	prodl,___flmul@temp
 36596  001252  CFF4 F086          	movff	prodh,___flmul@temp+1
 36597                           
 36598                           ; BSR set to: 0
 36599  001256  0100               	movlb	0	; () banked
 36600  001258  5185               	movf	___flmul@temp& (0+255),w,b
 36601  00125A  0100               	movlb	0	; () banked
 36602  00125C  277C               	addwf	___flmul@grs& (0+255),f,b
 36603  00125E  0E00               	movlw	0
 36604  001260  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 36605  001262  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 36606  001264  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 36607                           
 36608                           ; BSR set to: 0
 36609  001266  0100               	movlb	0	; () banked
 36610  001268  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36611  00126A  0100               	movlb	0	; () banked
 36612  00126C  2781               	addwf	___flmul@prod& (0+255),f,b
 36613  00126E  0E00               	movlw	0
 36614  001270  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36615  001272  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36616  001274  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36617  001276  0100               	movlb	0	; () banked
 36618  001278  5172               	movf	___flmul@a& (0+255),w,b
 36619  00127A  0100               	movlb	0	; () banked
 36620  00127C  0370               	mulwf	(___flmul@b+2)& (0+255),b
 36621  00127E  CFF3 F085          	movff	prodl,___flmul@temp
 36622  001282  CFF4 F086          	movff	prodh,___flmul@temp+1
 36623                           
 36624                           ; BSR set to: 0
 36625  001286  0100               	movlb	0	; () banked
 36626  001288  5185               	movf	___flmul@temp& (0+255),w,b
 36627  00128A  0100               	movlb	0	; () banked
 36628  00128C  277C               	addwf	___flmul@grs& (0+255),f,b
 36629  00128E  0E00               	movlw	0
 36630  001290  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 36631  001292  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 36632  001294  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 36633                           
 36634                           ; BSR set to: 0
 36635  001296  0100               	movlb	0	; () banked
 36636  001298  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36637  00129A  0100               	movlb	0	; () banked
 36638  00129C  2781               	addwf	___flmul@prod& (0+255),f,b
 36639  00129E  0E00               	movlw	0
 36640  0012A0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36641  0012A2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36642  0012A4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36643                           
 36644                           ; BSR set to: 0
 36645  0012A6  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 36646  0012AA  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 36647  0012AE  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 36648  0012B2  0100               	movlb	0	; () banked
 36649  0012B4  6B7C               	clrf	___flmul@grs& (0+255),b
 36650                           
 36651                           ; BSR set to: 0
 36652  0012B6  0100               	movlb	0	; () banked
 36653  0012B8  5172               	movf	___flmul@a& (0+255),w,b
 36654  0012BA  0100               	movlb	0	; () banked
 36655  0012BC  036F               	mulwf	(___flmul@b+1)& (0+255),b
 36656  0012BE  CFF3 F085          	movff	prodl,___flmul@temp
 36657  0012C2  CFF4 F086          	movff	prodh,___flmul@temp+1
 36658                           
 36659                           ; BSR set to: 0
 36660  0012C6  0100               	movlb	0	; () banked
 36661  0012C8  5185               	movf	___flmul@temp& (0+255),w,b
 36662  0012CA  0100               	movlb	0	; () banked
 36663  0012CC  277C               	addwf	___flmul@grs& (0+255),f,b
 36664  0012CE  0100               	movlb	0	; () banked
 36665  0012D0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36666  0012D2  0100               	movlb	0	; () banked
 36667  0012D4  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 36668  0012D6  0E00               	movlw	0
 36669  0012D8  0100               	movlb	0	; () banked
 36670  0012DA  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 36671  0012DC  0E00               	movlw	0
 36672  0012DE  0100               	movlb	0	; () banked
 36673  0012E0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 36674                           
 36675                           ; BSR set to: 0
 36676  0012E2  0100               	movlb	0	; () banked
 36677  0012E4  5173               	movf	(___flmul@a+1)& (0+255),w,b
 36678  0012E6  0100               	movlb	0	; () banked
 36679  0012E8  036E               	mulwf	___flmul@b& (0+255),b
 36680  0012EA  CFF3 F085          	movff	prodl,___flmul@temp
 36681  0012EE  CFF4 F086          	movff	prodh,___flmul@temp+1
 36682                           
 36683                           ; BSR set to: 0
 36684  0012F2  0100               	movlb	0	; () banked
 36685  0012F4  5185               	movf	___flmul@temp& (0+255),w,b
 36686  0012F6  0100               	movlb	0	; () banked
 36687  0012F8  277C               	addwf	___flmul@grs& (0+255),f,b
 36688  0012FA  0100               	movlb	0	; () banked
 36689  0012FC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36690  0012FE  0100               	movlb	0	; () banked
 36691  001300  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 36692  001302  0E00               	movlw	0
 36693  001304  0100               	movlb	0	; () banked
 36694  001306  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 36695  001308  0E00               	movlw	0
 36696  00130A  0100               	movlb	0	; () banked
 36697  00130C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 36698                           
 36699                           ; BSR set to: 0
 36700  00130E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 36701  001312  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 36702  001316  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 36703  00131A  0100               	movlb	0	; () banked
 36704  00131C  6B7C               	clrf	___flmul@grs& (0+255),b
 36705  00131E  0100               	movlb	0	; () banked
 36706  001320  5172               	movf	___flmul@a& (0+255),w,b
 36707  001322  0100               	movlb	0	; () banked
 36708  001324  036E               	mulwf	___flmul@b& (0+255),b
 36709  001326  CFF3 F085          	movff	prodl,___flmul@temp
 36710  00132A  CFF4 F086          	movff	prodh,___flmul@temp+1
 36711                           
 36712                           ; BSR set to: 0
 36713  00132E  0100               	movlb	0	; () banked
 36714  001330  5185               	movf	___flmul@temp& (0+255),w,b
 36715  001332  0100               	movlb	0	; () banked
 36716  001334  277C               	addwf	___flmul@grs& (0+255),f,b
 36717  001336  0100               	movlb	0	; () banked
 36718  001338  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36719  00133A  0100               	movlb	0	; () banked
 36720  00133C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 36721  00133E  0E00               	movlw	0
 36722  001340  0100               	movlb	0	; () banked
 36723  001342  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 36724  001344  0E00               	movlw	0
 36725  001346  0100               	movlb	0	; () banked
 36726  001348  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 36727                           
 36728                           ; BSR set to: 0
 36729  00134A  0100               	movlb	0	; () banked
 36730  00134C  5174               	movf	(___flmul@a+2)& (0+255),w,b
 36731  00134E  0100               	movlb	0	; () banked
 36732  001350  036F               	mulwf	(___flmul@b+1)& (0+255),b
 36733  001352  CFF3 F085          	movff	prodl,___flmul@temp
 36734  001356  CFF4 F086          	movff	prodh,___flmul@temp+1
 36735  00135A  0100               	movlb	0	; () banked
 36736  00135C  5185               	movf	___flmul@temp& (0+255),w,b
 36737  00135E  0100               	movlb	0	; () banked
 36738  001360  2781               	addwf	___flmul@prod& (0+255),f,b
 36739  001362  0100               	movlb	0	; () banked
 36740  001364  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36741  001366  0100               	movlb	0	; () banked
 36742  001368  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36743  00136A  0E00               	movlw	0
 36744  00136C  0100               	movlb	0	; () banked
 36745  00136E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36746  001370  0E00               	movlw	0
 36747  001372  0100               	movlb	0	; () banked
 36748  001374  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36749                           
 36750                           ; BSR set to: 0
 36751  001376  0100               	movlb	0	; () banked
 36752  001378  5173               	movf	(___flmul@a+1)& (0+255),w,b
 36753  00137A  0100               	movlb	0	; () banked
 36754  00137C  0370               	mulwf	(___flmul@b+2)& (0+255),b
 36755  00137E  CFF3 F085          	movff	prodl,___flmul@temp
 36756  001382  CFF4 F086          	movff	prodh,___flmul@temp+1
 36757                           
 36758                           ; BSR set to: 0
 36759  001386  0100               	movlb	0	; () banked
 36760  001388  5185               	movf	___flmul@temp& (0+255),w,b
 36761  00138A  0100               	movlb	0	; () banked
 36762  00138C  2781               	addwf	___flmul@prod& (0+255),f,b
 36763  00138E  0100               	movlb	0	; () banked
 36764  001390  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36765  001392  0100               	movlb	0	; () banked
 36766  001394  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36767  001396  0E00               	movlw	0
 36768  001398  0100               	movlb	0	; () banked
 36769  00139A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36770  00139C  0E00               	movlw	0
 36771  00139E  0100               	movlb	0	; () banked
 36772  0013A0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36773  0013A2  0100               	movlb	0	; () banked
 36774  0013A4  5174               	movf	(___flmul@a+2)& (0+255),w,b
 36775  0013A6  0100               	movlb	0	; () banked
 36776  0013A8  0370               	mulwf	(___flmul@b+2)& (0+255),b
 36777  0013AA  CFF3 F085          	movff	prodl,___flmul@temp
 36778  0013AE  CFF4 F086          	movff	prodh,___flmul@temp+1
 36779                           
 36780                           ; BSR set to: 0
 36781  0013B2  0100               	movlb	0	; () banked
 36782  0013B4  5185               	movf	___flmul@temp& (0+255),w,b
 36783  0013B6  0100               	movlb	0	; () banked
 36784  0013B8  6F76               	movwf	??___flmul& (0+255),b
 36785  0013BA  0100               	movlb	0	; () banked
 36786  0013BC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 36787  0013BE  0100               	movlb	0	; () banked
 36788  0013C0  6F77               	movwf	(??___flmul+1)& (0+255),b
 36789  0013C2  0100               	movlb	0	; () banked
 36790  0013C4  6B78               	clrf	(??___flmul+2)& (0+255),b
 36791  0013C6  0100               	movlb	0	; () banked
 36792  0013C8  6B79               	clrf	(??___flmul+3)& (0+255),b
 36793  0013CA  C078  F079         	movff	??___flmul+2,??___flmul+3
 36794  0013CE  C077  F078         	movff	??___flmul+1,??___flmul+2
 36795  0013D2  C076  F077         	movff	??___flmul,??___flmul+1
 36796  0013D6  0100               	movlb	0	; () banked
 36797  0013D8  6B76               	clrf	??___flmul& (0+255),b
 36798  0013DA  0100               	movlb	0	; () banked
 36799  0013DC  5176               	movf	??___flmul& (0+255),w,b
 36800  0013DE  0100               	movlb	0	; () banked
 36801  0013E0  2781               	addwf	___flmul@prod& (0+255),f,b
 36802  0013E2  0100               	movlb	0	; () banked
 36803  0013E4  5177               	movf	(??___flmul+1)& (0+255),w,b
 36804  0013E6  0100               	movlb	0	; () banked
 36805  0013E8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36806  0013EA  0100               	movlb	0	; () banked
 36807  0013EC  5178               	movf	(??___flmul+2)& (0+255),w,b
 36808  0013EE  0100               	movlb	0	; () banked
 36809  0013F0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36810  0013F2  0100               	movlb	0	; () banked
 36811  0013F4  5179               	movf	(??___flmul+3)& (0+255),w,b
 36812  0013F6  0100               	movlb	0	; () banked
 36813  0013F8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36814                           
 36815                           ; BSR set to: 0
 36816  0013FA  C07C  F076         	movff	___flmul@grs,??___flmul
 36817  0013FE  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 36818  001402  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 36819  001406  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 36820  00140A  0E19               	movlw	25
 36821  00140C  D006               	goto	u12470
 36822  00140E                     u12475:
 36823  00140E  0100               	movlb	0	; () banked
 36824  001410  90D8               	bcf	status,0,c
 36825  001412  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 36826  001414  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 36827  001416  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 36828  001418  3376               	rrcf	??___flmul& (0+255),f,b
 36829  00141A                     u12470:
 36830  00141A  2EE8               	decfsz	wreg,f,c
 36831  00141C  D7F8               	goto	u12475
 36832  00141E  0100               	movlb	0	; () banked
 36833  001420  5176               	movf	??___flmul& (0+255),w,b
 36834  001422  0100               	movlb	0	; () banked
 36835  001424  2781               	addwf	___flmul@prod& (0+255),f,b
 36836  001426  0100               	movlb	0	; () banked
 36837  001428  5177               	movf	(??___flmul+1)& (0+255),w,b
 36838  00142A  0100               	movlb	0	; () banked
 36839  00142C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36840  00142E  0100               	movlb	0	; () banked
 36841  001430  5178               	movf	(??___flmul+2)& (0+255),w,b
 36842  001432  0100               	movlb	0	; () banked
 36843  001434  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36844  001436  0100               	movlb	0	; () banked
 36845  001438  5179               	movf	(??___flmul+3)& (0+255),w,b
 36846  00143A  0100               	movlb	0	; () banked
 36847  00143C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36848                           
 36849                           ; BSR set to: 0
 36850  00143E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 36851  001442  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 36852  001446  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 36853  00144A  0100               	movlb	0	; () banked
 36854  00144C  6B7C               	clrf	___flmul@grs& (0+255),b
 36855                           
 36856                           ; BSR set to: 0
 36857  00144E  0100               	movlb	0	; () banked
 36858  001450  517B               	movf	___flmul@aexp& (0+255),w,b
 36859  001452  C080  F076         	movff	___flmul@bexp,??___flmul
 36860  001456  0100               	movlb	0	; () banked
 36861  001458  6B77               	clrf	(??___flmul+1)& (0+255),b
 36862  00145A  0100               	movlb	0	; () banked
 36863  00145C  2776               	addwf	??___flmul& (0+255),f,b
 36864  00145E  0E00               	movlw	0
 36865  001460  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 36866  001462  0E82               	movlw	130
 36867  001464  0100               	movlb	0	; () banked
 36868  001466  2576               	addwf	??___flmul& (0+255),w,b
 36869  001468  0100               	movlb	0	; () banked
 36870  00146A  6F85               	movwf	___flmul@temp& (0+255),b
 36871  00146C  0EFF               	movlw	255
 36872  00146E  0100               	movlb	0	; () banked
 36873  001470  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 36874  001472  0100               	movlb	0	; () banked
 36875  001474  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 36876  001476  D015               	goto	l13760
 36877  001478                     l13754:
 36878                           
 36879                           ; BSR set to: 0
 36880  001478  0100               	movlb	0	; () banked
 36881  00147A  90D8               	bcf	status,0,c
 36882  00147C  3781               	rlcf	___flmul@prod& (0+255),f,b
 36883  00147E  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 36884  001480  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 36885  001482  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 36886                           
 36887                           ; BSR set to: 0
 36888  001484  0100               	movlb	0	; () banked
 36889  001486  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 36890  001488  D002               	goto	l2951
 36891                           
 36892                           ; BSR set to: 0
 36893  00148A  0100               	movlb	0	; () banked
 36894  00148C  8181               	bsf	___flmul@prod& (0+255),0,b
 36895  00148E                     l2951:
 36896                           
 36897                           ; BSR set to: 0
 36898  00148E  0100               	movlb	0	; () banked
 36899  001490  90D8               	bcf	status,0,c
 36900  001492  377C               	rlcf	___flmul@grs& (0+255),f,b
 36901  001494  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 36902  001496  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 36903  001498  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 36904  00149A  0100               	movlb	0	; () banked
 36905  00149C  0785               	decf	___flmul@temp& (0+255),f,b
 36906  00149E  A0D8               	btfss	status,0,c
 36907  0014A0  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 36908  0014A2                     l13760:
 36909                           
 36910                           ; BSR set to: 0
 36911  0014A2  0100               	movlb	0	; () banked
 36912  0014A4  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 36913  0014A6  D7E8               	goto	l13754
 36914                           
 36915                           ; BSR set to: 0
 36916                           
 36917                           ; BSR set to: 0
 36918  0014A8  0E00               	movlw	0
 36919  0014AA  0100               	movlb	0	; () banked
 36920  0014AC  6F7B               	movwf	___flmul@aexp& (0+255),b
 36921                           
 36922                           ; BSR set to: 0
 36923  0014AE  0100               	movlb	0	; () banked
 36924  0014B0  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 36925  0014B2  D024               	goto	l2953
 36926                           
 36927                           ; BSR set to: 0
 36928  0014B4  0EFF               	movlw	255
 36929  0014B6  0100               	movlb	0	; () banked
 36930  0014B8  157C               	andwf	___flmul@grs& (0+255),w,b
 36931  0014BA  0100               	movlb	0	; () banked
 36932  0014BC  6F76               	movwf	??___flmul& (0+255),b
 36933  0014BE  0EFF               	movlw	255
 36934  0014C0  0100               	movlb	0	; () banked
 36935  0014C2  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 36936  0014C4  0100               	movlb	0	; () banked
 36937  0014C6  6F77               	movwf	(??___flmul+1)& (0+255),b
 36938  0014C8  0EFF               	movlw	255
 36939  0014CA  0100               	movlb	0	; () banked
 36940  0014CC  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 36941  0014CE  0100               	movlb	0	; () banked
 36942  0014D0  6F78               	movwf	(??___flmul+2)& (0+255),b
 36943  0014D2  0E7F               	movlw	127
 36944  0014D4  0100               	movlb	0	; () banked
 36945  0014D6  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 36946  0014D8  0100               	movlb	0	; () banked
 36947  0014DA  6F79               	movwf	(??___flmul+3)& (0+255),b
 36948  0014DC  0100               	movlb	0	; () banked
 36949  0014DE  5176               	movf	??___flmul& (0+255),w,b
 36950  0014E0  0100               	movlb	0	; () banked
 36951  0014E2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 36952  0014E4  0100               	movlb	0	; () banked
 36953  0014E6  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 36954  0014E8  0100               	movlb	0	; () banked
 36955  0014EA  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 36956  0014EC  A4D8               	btfss	status,2,c
 36957  0014EE  D003               	goto	l13770
 36958                           
 36959                           ; BSR set to: 0
 36960                           
 36961                           ; BSR set to: 0
 36962  0014F0  0100               	movlb	0	; () banked
 36963  0014F2  A181               	btfss	___flmul@prod& (0+255),0,b
 36964  0014F4  D003               	goto	l2953
 36965  0014F6                     l13770:
 36966                           
 36967                           ; BSR set to: 0
 36968  0014F6  0E01               	movlw	1
 36969  0014F8  0100               	movlb	0	; () banked
 36970  0014FA  6F7B               	movwf	___flmul@aexp& (0+255),b
 36971  0014FC                     l2953:
 36972                           
 36973                           ; BSR set to: 0
 36974  0014FC  0100               	movlb	0	; () banked
 36975  0014FE  517B               	movf	___flmul@aexp& (0+255),w,b
 36976  001500  0100               	movlb	0	; () banked
 36977  001502  B4D8               	btfsc	status,2,c
 36978  001504  D023               	goto	l13780
 36979                           
 36980                           ; BSR set to: 0
 36981  001506  0E01               	movlw	1
 36982  001508  0100               	movlb	0	; () banked
 36983  00150A  2781               	addwf	___flmul@prod& (0+255),f,b
 36984  00150C  0E00               	movlw	0
 36985  00150E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 36986  001510  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 36987  001512  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 36988                           
 36989                           ; BSR set to: 0
 36990  001514  0100               	movlb	0	; () banked
 36991  001516  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 36992  001518  D019               	goto	l13780
 36993                           
 36994                           ; BSR set to: 0
 36995  00151A  C081  F076         	movff	___flmul@prod,??___flmul
 36996  00151E  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 36997  001522  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 36998  001526  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 36999  00152A  0100               	movlb	0	; () banked
 37000  00152C  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 37001  00152E  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 37002  001530  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 37003  001532  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 37004  001534  3376               	rrcf	??___flmul& (0+255),f,b
 37005  001536  C076  F081         	movff	??___flmul,___flmul@prod
 37006  00153A  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 37007  00153E  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 37008  001542  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 37009                           
 37010                           ; BSR set to: 0
 37011  001546  0100               	movlb	0	; () banked
 37012  001548  4B85               	infsnz	___flmul@temp& (0+255),f,b
 37013  00154A  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 37014  00154C                     l13780:
 37015                           
 37016                           ; BSR set to: 0
 37017  00154C  0100               	movlb	0	; () banked
 37018  00154E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 37019  001550  D010               	goto	l13784
 37020  001552  0100               	movlb	0	; () banked
 37021  001554  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37022  001556  E104               	bnz	u12550
 37023  001558  0100               	movlb	0	; () banked
 37024  00155A  2985               	incf	___flmul@temp& (0+255),w,b
 37025  00155C  A0D8               	btfss	status,0,c
 37026  00155E  D009               	goto	l13784
 37027  001560                     u12550:
 37028                           
 37029                           ; BSR set to: 0
 37030  001560  0E00               	movlw	0
 37031  001562  0100               	movlb	0	; () banked
 37032  001564  6F81               	movwf	___flmul@prod& (0+255),b
 37033  001566  0E00               	movlw	0
 37034  001568  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 37035  00156A  0E80               	movlw	128
 37036  00156C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 37037  00156E  0E7F               	movlw	127
 37038  001570  D02B               	goto	L30
 37039  001572                     l13784:
 37040                           
 37041                           ; BSR set to: 0
 37042  001572  0100               	movlb	0	; () banked
 37043  001574  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 37044  001576  D007               	goto	l13786
 37045  001578  0100               	movlb	0	; () banked
 37046  00157A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37047  00157C  E111               	bnz	l2961
 37048  00157E  0100               	movlb	0	; () banked
 37049  001580  0585               	decf	___flmul@temp& (0+255),w,b
 37050  001582  B0D8               	btfsc	status,0,c
 37051  001584  D00D               	goto	l2961
 37052  001586                     l13786:
 37053                           
 37054                           ; BSR set to: 0
 37055  001586  0E00               	movlw	0
 37056  001588  0100               	movlb	0	; () banked
 37057  00158A  6F81               	movwf	___flmul@prod& (0+255),b
 37058  00158C  0E00               	movlw	0
 37059  00158E  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 37060  001590  0E00               	movlw	0
 37061  001592  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 37062  001594  0E00               	movlw	0
 37063  001596  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 37064  001598  0E00               	movlw	0
 37065  00159A  0100               	movlb	0	; () banked
 37066  00159C  6F7A               	movwf	___flmul@sign& (0+255),b
 37067  00159E  D015               	goto	l13796
 37068  0015A0                     l2961:
 37069                           
 37070                           ; BSR set to: 0
 37071  0015A0  C085  F080         	movff	___flmul@temp,___flmul@bexp
 37072                           
 37073                           ; BSR set to: 0
 37074  0015A4  0EFF               	movlw	255
 37075  0015A6  0100               	movlb	0	; () banked
 37076  0015A8  1781               	andwf	___flmul@prod& (0+255),f,b
 37077  0015AA  0EFF               	movlw	255
 37078  0015AC  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 37079  0015AE  0E7F               	movlw	127
 37080  0015B0  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 37081  0015B2  0E00               	movlw	0
 37082  0015B4  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 37083                           
 37084                           ; BSR set to: 0
 37085  0015B6  0100               	movlb	0	; () banked
 37086  0015B8  A180               	btfss	___flmul@bexp& (0+255),0,b
 37087  0015BA  D002               	goto	l13794
 37088                           
 37089                           ; BSR set to: 0
 37090  0015BC  0100               	movlb	0	; () banked
 37091  0015BE  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 37092  0015C0                     l13794:
 37093                           
 37094                           ; BSR set to: 0
 37095  0015C0  0100               	movlb	0	; () banked
 37096  0015C2  90D8               	bcf	status,0,c
 37097  0015C4  3180               	rrcf	___flmul@bexp& (0+255),w,b
 37098  0015C6  0100               	movlb	0	; () banked
 37099  0015C8                     L30:
 37100  0015C8  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 37101  0015CA                     l13796:
 37102                           
 37103                           ; BSR set to: 0
 37104  0015CA  0100               	movlb	0	; () banked
 37105  0015CC  517A               	movf	___flmul@sign& (0+255),w,b
 37106  0015CE  0100               	movlb	0	; () banked
 37107  0015D0  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 37108                           
 37109                           ; BSR set to: 0
 37110  0015D2  C081  F06E         	movff	___flmul@prod,?___flmul
 37111  0015D6  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 37112  0015DA  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 37113  0015DE  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 37114  0015E2  0012               	return	
 37115  0015E4                     __end_of___flmul:
 37116                           	opt stack 0
 37117                           tosu	equ	0xFFF
 37118                           tosh	equ	0xFFE
 37119                           tosl	equ	0xFFD
 37120                           pclath	equ	0xFFA
 37121                           tblptru	equ	0xFF8
 37122                           tblptrh	equ	0xFF7
 37123                           tblptrl	equ	0xFF6
 37124                           tablat	equ	0xFF5
 37125                           prodh	equ	0xFF4
 37126                           prodl	equ	0xFF3
 37127                           intcon	equ	0xFF2
 37128                           indf0	equ	0xFEF
 37129                           postinc0	equ	0xFEE
 37130                           fsr0h	equ	0xFEA
 37131                           fsr0l	equ	0xFE9
 37132                           wreg	equ	0xFE8
 37133                           indf1	equ	0xFE7
 37134                           postinc1	equ	0xFE6
 37135                           postdec1	equ	0xFE5
 37136                           plusw1	equ	0xFE3
 37137                           fsr1h	equ	0xFE2
 37138                           fsr1l	equ	0xFE1
 37139                           indf2	equ	0xFDF
 37140                           postinc2	equ	0xFDE
 37141                           postdec2	equ	0xFDD
 37142                           plusw2	equ	0xFDB
 37143                           fsr2h	equ	0xFDA
 37144                           fsr2l	equ	0xFD9
 37145                           status	equ	0xFD8
 37146                           
 37147 ;; *************** function ___fldiv *****************
 37148 ;; Defined at:
 37149 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 37150 ;; Parameters:    Size  Location     Type
 37151 ;;  b               4   39[BANK0 ] unsigned char 
 37152 ;;  a               4   43[BANK0 ] unsigned char 
 37153 ;; Auto vars:     Size  Location     Type
 37154 ;;  grs             4   58[BANK0 ] unsigned long 
 37155 ;;  rem             4   52[BANK0 ] unsigned long 
 37156 ;;  new_exp         2   56[BANK0 ] int 
 37157 ;;  aexp            1   63[BANK0 ] unsigned char 
 37158 ;;  bexp            1   62[BANK0 ] unsigned char 
 37159 ;;  sign            1   51[BANK0 ] unsigned char 
 37160 ;; Return value:  Size  Location     Type
 37161 ;;                  4   39[BANK0 ] unsigned char 
 37162 ;; Registers used:
 37163 ;;		wreg, status,2, status,0
 37164 ;; Tracked objects:
 37165 ;;		On entry : 0/0
 37166 ;;		On exit  : 0/0
 37167 ;;		Unchanged: 0/0
 37168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37169 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37170 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37172 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37173 ;;Total ram usage:       25 bytes
 37174 ;; Hardware stack levels used:    1
 37175 ;; Hardware stack levels required when called:    4
 37176 ;; This function calls:
 37177 ;;		Nothing
 37178 ;; This function is called by:
 37179 ;;		_data_sys_cal_v1
 37180 ;;		_data_sys_cal_v2
 37181 ;;		_m_interp1_float_fast
 37182 ;;		_cal_diff_hight_to_vol_h
 37183 ;;		_cal_diff_hight_level
 37184 ;;		_cal_diff_hight_to_vol_v
 37185 ;;		_cal_diff_p_to_h
 37186 ;; This function uses a non-reentrant model
 37187 ;;
 37188                           
 37189                           	psect	text193
 37190  001E80                     __ptext193:
 37191                           	opt stack 0
 37192  001E80                     ___fldiv:
 37193                           	opt stack 21
 37194                           
 37195                           ; BSR set to: 0
 37196                           ;incstack = 0
 37197  001E80  0100               	movlb	0	; () banked
 37198  001E82  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 37199  001E84  0B80               	andlw	128
 37200  001E86  0100               	movlb	0	; () banked
 37201  001E88  6F93               	movwf	___fldiv@sign& (0+255),b
 37202  001E8A  0100               	movlb	0	; () banked
 37203  001E8C  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 37204  001E8E  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 37205  001E90  0100               	movlb	0	; () banked
 37206  001E92  6F9E               	movwf	___fldiv@bexp& (0+255),b
 37207                           
 37208                           ; BSR set to: 0
 37209  001E94  0100               	movlb	0	; () banked
 37210  001E96  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 37211  001E98  D002               	goto	l13542
 37212                           
 37213                           ; BSR set to: 0
 37214  001E9A  0100               	movlb	0	; () banked
 37215  001E9C  819E               	bsf	___fldiv@bexp& (0+255),0,b
 37216  001E9E                     l13542:
 37217                           
 37218                           ; BSR set to: 0
 37219  001E9E  0100               	movlb	0	; () banked
 37220  001EA0  519E               	movf	___fldiv@bexp& (0+255),w,b
 37221  001EA2  0100               	movlb	0	; () banked
 37222  001EA4  B4D8               	btfsc	status,2,c
 37223  001EA6  D012               	goto	l13552
 37224                           
 37225                           ; BSR set to: 0
 37226  001EA8  0100               	movlb	0	; () banked
 37227  001EAA  299E               	incf	___fldiv@bexp& (0+255),w,b
 37228  001EAC  A4D8               	btfss	status,2,c
 37229  001EAE  D009               	goto	l13548
 37230                           
 37231                           ; BSR set to: 0
 37232  001EB0  0E00               	movlw	0
 37233  001EB2  0100               	movlb	0	; () banked
 37234  001EB4  6F87               	movwf	___fldiv@b& (0+255),b
 37235  001EB6  0E00               	movlw	0
 37236  001EB8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37237  001EBA  0E00               	movlw	0
 37238  001EBC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37239  001EBE  0E00               	movlw	0
 37240  001EC0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37241  001EC2                     l13548:
 37242                           
 37243                           ; BSR set to: 0
 37244  001EC2  0100               	movlb	0	; () banked
 37245  001EC4  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 37246                           
 37247                           ; BSR set to: 0
 37248  001EC6  0E00               	movlw	0
 37249  001EC8  0100               	movlb	0	; () banked
 37250  001ECA  D008               	goto	L31
 37251  001ECC                     l13552:
 37252                           
 37253                           ; BSR set to: 0
 37254  001ECC  0E00               	movlw	0
 37255  001ECE  0100               	movlb	0	; () banked
 37256  001ED0  6F87               	movwf	___fldiv@b& (0+255),b
 37257  001ED2  0E00               	movlw	0
 37258  001ED4  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37259  001ED6  0E00               	movlw	0
 37260  001ED8  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37261  001EDA  0E00               	movlw	0
 37262  001EDC                     L31:
 37263  001EDC  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37264                           
 37265                           ; BSR set to: 0
 37266                           
 37267                           ; BSR set to: 0
 37268  001EDE  0100               	movlb	0	; () banked
 37269  001EE0  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 37270  001EE2  0B80               	andlw	128
 37271  001EE4  0100               	movlb	0	; () banked
 37272  001EE6  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 37273                           
 37274                           ; BSR set to: 0
 37275  001EE8  0100               	movlb	0	; () banked
 37276  001EEA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 37277  001EEC  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 37278  001EEE  0100               	movlb	0	; () banked
 37279  001EF0  6F9F               	movwf	___fldiv@aexp& (0+255),b
 37280                           
 37281                           ; BSR set to: 0
 37282  001EF2  0100               	movlb	0	; () banked
 37283  001EF4  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 37284  001EF6  D002               	goto	l13562
 37285                           
 37286                           ; BSR set to: 0
 37287  001EF8  0100               	movlb	0	; () banked
 37288  001EFA  819F               	bsf	___fldiv@aexp& (0+255),0,b
 37289  001EFC                     l13562:
 37290                           
 37291                           ; BSR set to: 0
 37292  001EFC  0100               	movlb	0	; () banked
 37293  001EFE  519F               	movf	___fldiv@aexp& (0+255),w,b
 37294  001F00  0100               	movlb	0	; () banked
 37295  001F02  B4D8               	btfsc	status,2,c
 37296  001F04  D012               	goto	l13572
 37297                           
 37298                           ; BSR set to: 0
 37299  001F06  0100               	movlb	0	; () banked
 37300  001F08  299F               	incf	___fldiv@aexp& (0+255),w,b
 37301  001F0A  A4D8               	btfss	status,2,c
 37302  001F0C  D009               	goto	l13568
 37303                           
 37304                           ; BSR set to: 0
 37305  001F0E  0E00               	movlw	0
 37306  001F10  0100               	movlb	0	; () banked
 37307  001F12  6F8B               	movwf	___fldiv@a& (0+255),b
 37308  001F14  0E00               	movlw	0
 37309  001F16  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 37310  001F18  0E00               	movlw	0
 37311  001F1A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 37312  001F1C  0E00               	movlw	0
 37313  001F1E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 37314  001F20                     l13568:
 37315                           
 37316                           ; BSR set to: 0
 37317  001F20  0100               	movlb	0	; () banked
 37318  001F22  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 37319                           
 37320                           ; BSR set to: 0
 37321  001F24  0E00               	movlw	0
 37322  001F26  0100               	movlb	0	; () banked
 37323  001F28  D008               	goto	L32
 37324  001F2A                     l13572:
 37325                           
 37326                           ; BSR set to: 0
 37327  001F2A  0E00               	movlw	0
 37328  001F2C  0100               	movlb	0	; () banked
 37329  001F2E  6F8B               	movwf	___fldiv@a& (0+255),b
 37330  001F30  0E00               	movlw	0
 37331  001F32  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 37332  001F34  0E00               	movlw	0
 37333  001F36  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 37334  001F38  0E00               	movlw	0
 37335  001F3A                     L32:
 37336  001F3A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 37337                           
 37338                           ; BSR set to: 0
 37339                           
 37340                           ; BSR set to: 0
 37341  001F3C  0100               	movlb	0	; () banked
 37342  001F3E  518B               	movf	___fldiv@a& (0+255),w,b
 37343  001F40  0100               	movlb	0	; () banked
 37344  001F42  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 37345  001F44  0100               	movlb	0	; () banked
 37346  001F46  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 37347  001F48  0100               	movlb	0	; () banked
 37348  001F4A  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 37349  001F4C  A4D8               	btfss	status,2,c
 37350  001F4E  D017               	goto	l13584
 37351                           
 37352                           ; BSR set to: 0
 37353  001F50  0E00               	movlw	0
 37354  001F52  0100               	movlb	0	; () banked
 37355  001F54  6F87               	movwf	___fldiv@b& (0+255),b
 37356  001F56  0E00               	movlw	0
 37357  001F58  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37358  001F5A  0E00               	movlw	0
 37359  001F5C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37360  001F5E  0E00               	movlw	0
 37361  001F60  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37362                           
 37363                           ; BSR set to: 0
 37364  001F62  0100               	movlb	0	; () banked
 37365  001F64  0E80               	movlw	128
 37366  001F66  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 37367  001F68  0E7F               	movlw	127
 37368  001F6A  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 37369                           
 37370                           ; BSR set to: 0
 37371  001F6C  C087  F087         	movff	___fldiv@b,?___fldiv
 37372  001F70  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 37373  001F74  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 37374  001F78  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 37375                           
 37376                           ; BSR set to: 0
 37377  001F7C  0012               	return	
 37378  001F7E                     l13584:
 37379                           
 37380                           ; BSR set to: 0
 37381  001F7E  0100               	movlb	0	; () banked
 37382  001F80  519E               	movf	___fldiv@bexp& (0+255),w,b
 37383  001F82  0100               	movlb	0	; () banked
 37384  001F84  A4D8               	btfss	status,2,c
 37385  001F86  D012               	goto	l13592
 37386                           
 37387                           ; BSR set to: 0
 37388  001F88  0E00               	movlw	0
 37389  001F8A  0100               	movlb	0	; () banked
 37390  001F8C  6F87               	movwf	___fldiv@b& (0+255),b
 37391  001F8E  0E00               	movlw	0
 37392  001F90  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37393  001F92  0E00               	movlw	0
 37394  001F94  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37395  001F96  0E00               	movlw	0
 37396  001F98  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37397                           
 37398                           ; BSR set to: 0
 37399  001F9A  C087  F087         	movff	___fldiv@b,?___fldiv
 37400  001F9E  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 37401  001FA2  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 37402  001FA6  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 37403                           
 37404                           ; BSR set to: 0
 37405  001FAA  0012               	return	
 37406  001FAC                     l13592:
 37407                           
 37408                           ; BSR set to: 0
 37409  001FAC  0100               	movlb	0	; () banked
 37410  001FAE  519F               	movf	___fldiv@aexp& (0+255),w,b
 37411  001FB0  0100               	movlb	0	; () banked
 37412  001FB2  6F8F               	movwf	??___fldiv& (0+255),b
 37413  001FB4  6B90               	clrf	(??___fldiv+1)& (0+255),b
 37414  001FB6  0100               	movlb	0	; () banked
 37415  001FB8  1F8F               	comf	??___fldiv& (0+255),f,b
 37416  001FBA  1F90               	comf	(??___fldiv+1)& (0+255),f,b
 37417  001FBC  4B8F               	infsnz	??___fldiv& (0+255),f,b
 37418  001FBE  2B90               	incf	(??___fldiv+1)& (0+255),f,b
 37419  001FC0  0100               	movlb	0	; () banked
 37420  001FC2  519E               	movf	___fldiv@bexp& (0+255),w,b
 37421  001FC4  0100               	movlb	0	; () banked
 37422  001FC6  6F91               	movwf	(??___fldiv+2)& (0+255),b
 37423  001FC8  6B92               	clrf	(??___fldiv+3)& (0+255),b
 37424  001FCA  0100               	movlb	0	; () banked
 37425  001FCC  518F               	movf	??___fldiv& (0+255),w,b
 37426  001FCE  0100               	movlb	0	; () banked
 37427  001FD0  2791               	addwf	(??___fldiv+2)& (0+255),f,b
 37428  001FD2  0100               	movlb	0	; () banked
 37429  001FD4  5190               	movf	(??___fldiv+1)& (0+255),w,b
 37430  001FD6  0100               	movlb	0	; () banked
 37431  001FD8  2392               	addwfc	(??___fldiv+3)& (0+255),f,b
 37432  001FDA  0E7F               	movlw	127
 37433  001FDC  0100               	movlb	0	; () banked
 37434  001FDE  2591               	addwf	(??___fldiv+2)& (0+255),w,b
 37435  001FE0  0100               	movlb	0	; () banked
 37436  001FE2  6F98               	movwf	___fldiv@new_exp& (0+255),b
 37437  001FE4  0E00               	movlw	0
 37438  001FE6  0100               	movlb	0	; () banked
 37439  001FE8  2192               	addwfc	(??___fldiv+3)& (0+255),w,b
 37440  001FEA  0100               	movlb	0	; () banked
 37441  001FEC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 37442                           
 37443                           ; BSR set to: 0
 37444  001FEE  C087  F094         	movff	___fldiv@b,___fldiv@rem
 37445  001FF2  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 37446  001FF6  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 37447  001FFA  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 37448                           
 37449                           ; BSR set to: 0
 37450  001FFE  0E00               	movlw	0
 37451  002000  0100               	movlb	0	; () banked
 37452  002002  6F87               	movwf	___fldiv@b& (0+255),b
 37453  002004  0E00               	movlw	0
 37454  002006  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37455  002008  0E00               	movlw	0
 37456  00200A  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37457  00200C  0E00               	movlw	0
 37458  00200E  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37459                           
 37460                           ; BSR set to: 0
 37461  002010  0E00               	movlw	0
 37462  002012  0100               	movlb	0	; () banked
 37463  002014  6F9A               	movwf	___fldiv@grs& (0+255),b
 37464  002016  0E00               	movlw	0
 37465  002018  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 37466  00201A  0E00               	movlw	0
 37467  00201C  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 37468  00201E  0E00               	movlw	0
 37469  002020  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 37470                           
 37471                           ; BSR set to: 0
 37472  002022  0E00               	movlw	0
 37473  002024  0100               	movlb	0	; () banked
 37474  002026  6F9F               	movwf	___fldiv@aexp& (0+255),b
 37475  002028  D042               	goto	l2914
 37476  00202A                     l13602:
 37477                           
 37478                           ; BSR set to: 0
 37479  00202A  0100               	movlb	0	; () banked
 37480  00202C  519F               	movf	___fldiv@aexp& (0+255),w,b
 37481  00202E  0100               	movlb	0	; () banked
 37482  002030  B4D8               	btfsc	status,2,c
 37483  002032  D017               	goto	l13610
 37484                           
 37485                           ; BSR set to: 0
 37486  002034  0100               	movlb	0	; () banked
 37487  002036  90D8               	bcf	status,0,c
 37488  002038  3794               	rlcf	___fldiv@rem& (0+255),f,b
 37489  00203A  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 37490  00203C  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 37491  00203E  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 37492  002040  0100               	movlb	0	; () banked
 37493  002042  90D8               	bcf	status,0,c
 37494  002044  3787               	rlcf	___fldiv@b& (0+255),f,b
 37495  002046  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 37496  002048  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 37497  00204A  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 37498                           
 37499                           ; BSR set to: 0
 37500  00204C  0100               	movlb	0	; () banked
 37501  00204E  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 37502  002050  D002               	goto	l2917
 37503                           
 37504                           ; BSR set to: 0
 37505  002052  0100               	movlb	0	; () banked
 37506  002054  8187               	bsf	___fldiv@b& (0+255),0,b
 37507  002056                     l2917:
 37508                           
 37509                           ; BSR set to: 0
 37510  002056  0100               	movlb	0	; () banked
 37511  002058  90D8               	bcf	status,0,c
 37512  00205A  379A               	rlcf	___fldiv@grs& (0+255),f,b
 37513  00205C  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 37514  00205E  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 37515  002060  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 37516  002062                     l13610:
 37517                           
 37518                           ; BSR set to: 0
 37519  002062  0100               	movlb	0	; () banked
 37520  002064  518B               	movf	___fldiv@a& (0+255),w,b
 37521  002066  0100               	movlb	0	; () banked
 37522  002068  5D94               	subwf	___fldiv@rem& (0+255),w,b
 37523  00206A  0100               	movlb	0	; () banked
 37524  00206C  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 37525  00206E  0100               	movlb	0	; () banked
 37526  002070  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 37527  002072  0100               	movlb	0	; () banked
 37528  002074  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 37529  002076  0100               	movlb	0	; () banked
 37530  002078  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 37531  00207A  0100               	movlb	0	; () banked
 37532  00207C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 37533  00207E  0100               	movlb	0	; () banked
 37534  002080  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 37535  002082  A0D8               	btfss	status,0,c
 37536  002084  D012               	goto	l13616
 37537                           
 37538                           ; BSR set to: 0
 37539  002086  0100               	movlb	0	; () banked
 37540  002088  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 37541                           
 37542                           ; BSR set to: 0
 37543  00208A  0100               	movlb	0	; () banked
 37544  00208C  518B               	movf	___fldiv@a& (0+255),w,b
 37545  00208E  0100               	movlb	0	; () banked
 37546  002090  5F94               	subwf	___fldiv@rem& (0+255),f,b
 37547  002092  0100               	movlb	0	; () banked
 37548  002094  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 37549  002096  0100               	movlb	0	; () banked
 37550  002098  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 37551  00209A  0100               	movlb	0	; () banked
 37552  00209C  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 37553  00209E  0100               	movlb	0	; () banked
 37554  0020A0  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 37555  0020A2  0100               	movlb	0	; () banked
 37556  0020A4  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 37557  0020A6  0100               	movlb	0	; () banked
 37558  0020A8  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 37559  0020AA                     l13616:
 37560                           
 37561                           ; BSR set to: 0
 37562  0020AA  0100               	movlb	0	; () banked
 37563  0020AC  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 37564  0020AE                     l2914:
 37565                           
 37566                           ; BSR set to: 0
 37567  0020AE  0E19               	movlw	25
 37568  0020B0  0100               	movlb	0	; () banked
 37569  0020B2  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 37570  0020B4  D7BA               	goto	l13602
 37571                           
 37572                           ; BSR set to: 0
 37573                           
 37574                           ; BSR set to: 0
 37575  0020B6  0100               	movlb	0	; () banked
 37576  0020B8  5194               	movf	___fldiv@rem& (0+255),w,b
 37577  0020BA  0100               	movlb	0	; () banked
 37578  0020BC  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 37579  0020BE  0100               	movlb	0	; () banked
 37580  0020C0  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 37581  0020C2  0100               	movlb	0	; () banked
 37582  0020C4  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 37583  0020C6  B4D8               	btfsc	status,2,c
 37584  0020C8  D018               	goto	l13628
 37585                           
 37586                           ; BSR set to: 0
 37587  0020CA  0100               	movlb	0	; () banked
 37588  0020CC  819A               	bsf	___fldiv@grs& (0+255),0,b
 37589                           
 37590                           ; BSR set to: 0
 37591  0020CE  D015               	goto	l13628
 37592  0020D0                     l13622:
 37593                           
 37594                           ; BSR set to: 0
 37595  0020D0  0100               	movlb	0	; () banked
 37596  0020D2  90D8               	bcf	status,0,c
 37597  0020D4  3787               	rlcf	___fldiv@b& (0+255),f,b
 37598  0020D6  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 37599  0020D8  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 37600  0020DA  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 37601                           
 37602                           ; BSR set to: 0
 37603  0020DC  0100               	movlb	0	; () banked
 37604  0020DE  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 37605  0020E0  D002               	goto	l2923
 37606                           
 37607                           ; BSR set to: 0
 37608  0020E2  0100               	movlb	0	; () banked
 37609  0020E4  8187               	bsf	___fldiv@b& (0+255),0,b
 37610  0020E6                     l2923:
 37611                           
 37612                           ; BSR set to: 0
 37613  0020E6  0100               	movlb	0	; () banked
 37614  0020E8  90D8               	bcf	status,0,c
 37615  0020EA  379A               	rlcf	___fldiv@grs& (0+255),f,b
 37616  0020EC  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 37617  0020EE  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 37618  0020F0  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 37619  0020F2  0100               	movlb	0	; () banked
 37620  0020F4  0798               	decf	___fldiv@new_exp& (0+255),f,b
 37621  0020F6  A0D8               	btfss	status,0,c
 37622  0020F8  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 37623  0020FA                     l13628:
 37624                           
 37625                           ; BSR set to: 0
 37626  0020FA  0100               	movlb	0	; () banked
 37627  0020FC  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 37628  0020FE  D7E8               	goto	l13622
 37629                           
 37630                           ; BSR set to: 0
 37631                           
 37632                           ; BSR set to: 0
 37633  002100  0E00               	movlw	0
 37634  002102  0100               	movlb	0	; () banked
 37635  002104  6F9F               	movwf	___fldiv@aexp& (0+255),b
 37636                           
 37637                           ; BSR set to: 0
 37638  002106  0100               	movlb	0	; () banked
 37639  002108  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 37640  00210A  D024               	goto	l2925
 37641                           
 37642                           ; BSR set to: 0
 37643  00210C  0EFF               	movlw	255
 37644  00210E  0100               	movlb	0	; () banked
 37645  002110  159A               	andwf	___fldiv@grs& (0+255),w,b
 37646  002112  0100               	movlb	0	; () banked
 37647  002114  6F8F               	movwf	??___fldiv& (0+255),b
 37648  002116  0EFF               	movlw	255
 37649  002118  0100               	movlb	0	; () banked
 37650  00211A  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 37651  00211C  0100               	movlb	0	; () banked
 37652  00211E  6F90               	movwf	(??___fldiv+1)& (0+255),b
 37653  002120  0EFF               	movlw	255
 37654  002122  0100               	movlb	0	; () banked
 37655  002124  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 37656  002126  0100               	movlb	0	; () banked
 37657  002128  6F91               	movwf	(??___fldiv+2)& (0+255),b
 37658  00212A  0E7F               	movlw	127
 37659  00212C  0100               	movlb	0	; () banked
 37660  00212E  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 37661  002130  0100               	movlb	0	; () banked
 37662  002132  6F92               	movwf	(??___fldiv+3)& (0+255),b
 37663  002134  0100               	movlb	0	; () banked
 37664  002136  518F               	movf	??___fldiv& (0+255),w,b
 37665  002138  0100               	movlb	0	; () banked
 37666  00213A  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 37667  00213C  0100               	movlb	0	; () banked
 37668  00213E  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 37669  002140  0100               	movlb	0	; () banked
 37670  002142  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 37671  002144  A4D8               	btfss	status,2,c
 37672  002146  D003               	goto	l13638
 37673                           
 37674                           ; BSR set to: 0
 37675                           
 37676                           ; BSR set to: 0
 37677  002148  0100               	movlb	0	; () banked
 37678  00214A  A187               	btfss	___fldiv@b& (0+255),0,b
 37679  00214C  D003               	goto	l2925
 37680  00214E                     l13638:
 37681                           
 37682                           ; BSR set to: 0
 37683  00214E  0E01               	movlw	1
 37684  002150  0100               	movlb	0	; () banked
 37685  002152  6F9F               	movwf	___fldiv@aexp& (0+255),b
 37686  002154                     l2925:
 37687                           
 37688                           ; BSR set to: 0
 37689  002154  0100               	movlb	0	; () banked
 37690  002156  519F               	movf	___fldiv@aexp& (0+255),w,b
 37691  002158  0100               	movlb	0	; () banked
 37692  00215A  B4D8               	btfsc	status,2,c
 37693  00215C  D023               	goto	l13648
 37694                           
 37695                           ; BSR set to: 0
 37696  00215E  0E01               	movlw	1
 37697  002160  0100               	movlb	0	; () banked
 37698  002162  2787               	addwf	___fldiv@b& (0+255),f,b
 37699  002164  0E00               	movlw	0
 37700  002166  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 37701  002168  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 37702  00216A  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 37703                           
 37704                           ; BSR set to: 0
 37705  00216C  0100               	movlb	0	; () banked
 37706  00216E  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 37707  002170  D019               	goto	l13648
 37708                           
 37709                           ; BSR set to: 0
 37710  002172  C087  F08F         	movff	___fldiv@b,??___fldiv
 37711  002176  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 37712  00217A  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 37713  00217E  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 37714  002182  0100               	movlb	0	; () banked
 37715  002184  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 37716  002186  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 37717  002188  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 37718  00218A  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 37719  00218C  338F               	rrcf	??___fldiv& (0+255),f,b
 37720  00218E  C08F  F087         	movff	??___fldiv,___fldiv@b
 37721  002192  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 37722  002196  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 37723  00219A  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 37724                           
 37725                           ; BSR set to: 0
 37726  00219E  0100               	movlb	0	; () banked
 37727  0021A0  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 37728  0021A2  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 37729  0021A4                     l13648:
 37730                           
 37731                           ; BSR set to: 0
 37732  0021A4  0100               	movlb	0	; () banked
 37733  0021A6  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 37734  0021A8  D014               	goto	l13652
 37735  0021AA  0100               	movlb	0	; () banked
 37736  0021AC  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 37737  0021AE  E104               	bnz	u12360
 37738  0021B0  0100               	movlb	0	; () banked
 37739  0021B2  2998               	incf	___fldiv@new_exp& (0+255),w,b
 37740  0021B4  A0D8               	btfss	status,0,c
 37741  0021B6  D00D               	goto	l13652
 37742  0021B8                     u12360:
 37743                           
 37744                           ; BSR set to: 0
 37745  0021B8  0E00               	movlw	0
 37746  0021BA  0100               	movlb	0	; () banked
 37747  0021BC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 37748  0021BE  6998               	setf	___fldiv@new_exp& (0+255),b
 37749  0021C0  0E00               	movlw	0
 37750  0021C2  0100               	movlb	0	; () banked
 37751  0021C4  6F87               	movwf	___fldiv@b& (0+255),b
 37752  0021C6  0E00               	movlw	0
 37753  0021C8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37754  0021CA  0E00               	movlw	0
 37755  0021CC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37756  0021CE  0E00               	movlw	0
 37757  0021D0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37758  0021D2                     l13652:
 37759                           
 37760                           ; BSR set to: 0
 37761  0021D2  0100               	movlb	0	; () banked
 37762  0021D4  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 37763  0021D6  D007               	goto	l13654
 37764  0021D8  0100               	movlb	0	; () banked
 37765  0021DA  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 37766  0021DC  E115               	bnz	l13656
 37767  0021DE  0100               	movlb	0	; () banked
 37768  0021E0  0598               	decf	___fldiv@new_exp& (0+255),w,b
 37769  0021E2  B0D8               	btfsc	status,0,c
 37770  0021E4  D011               	goto	l13656
 37771  0021E6                     l13654:
 37772                           
 37773                           ; BSR set to: 0
 37774  0021E6  0E00               	movlw	0
 37775  0021E8  0100               	movlb	0	; () banked
 37776  0021EA  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 37777  0021EC  0E00               	movlw	0
 37778  0021EE  6F98               	movwf	___fldiv@new_exp& (0+255),b
 37779  0021F0  0E00               	movlw	0
 37780  0021F2  0100               	movlb	0	; () banked
 37781  0021F4  6F87               	movwf	___fldiv@b& (0+255),b
 37782  0021F6  0E00               	movlw	0
 37783  0021F8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 37784  0021FA  0E00               	movlw	0
 37785  0021FC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 37786  0021FE  0E00               	movlw	0
 37787  002200  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37788  002202  0E00               	movlw	0
 37789  002204  0100               	movlb	0	; () banked
 37790  002206  6F93               	movwf	___fldiv@sign& (0+255),b
 37791  002208                     l13656:
 37792                           
 37793                           ; BSR set to: 0
 37794  002208  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 37795                           
 37796                           ; BSR set to: 0
 37797  00220C  0100               	movlb	0	; () banked
 37798  00220E  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 37799  002210  D003               	goto	l13662
 37800                           
 37801                           ; BSR set to: 0
 37802  002212  0100               	movlb	0	; () banked
 37803  002214  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 37804  002216  D002               	goto	l13664
 37805  002218                     l13662:
 37806                           
 37807                           ; BSR set to: 0
 37808  002218  0100               	movlb	0	; () banked
 37809  00221A  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 37810  00221C                     l13664:
 37811                           
 37812                           ; BSR set to: 0
 37813  00221C  0100               	movlb	0	; () banked
 37814  00221E  90D8               	bcf	status,0,c
 37815  002220  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 37816  002222  0100               	movlb	0	; () banked
 37817  002224  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 37818                           
 37819                           ; BSR set to: 0
 37820  002226  0100               	movlb	0	; () banked
 37821  002228  5193               	movf	___fldiv@sign& (0+255),w,b
 37822  00222A  0100               	movlb	0	; () banked
 37823  00222C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 37824                           
 37825                           ; BSR set to: 0
 37826  00222E  C087  F087         	movff	___fldiv@b,?___fldiv
 37827  002232  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 37828  002236  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 37829  00223A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 37830  00223E  0012               	return	
 37831  002240                     __end_of___fldiv:
 37832                           	opt stack 0
 37833                           tosu	equ	0xFFF
 37834                           tosh	equ	0xFFE
 37835                           tosl	equ	0xFFD
 37836                           pclath	equ	0xFFA
 37837                           tblptru	equ	0xFF8
 37838                           tblptrh	equ	0xFF7
 37839                           tblptrl	equ	0xFF6
 37840                           tablat	equ	0xFF5
 37841                           prodh	equ	0xFF4
 37842                           prodl	equ	0xFF3
 37843                           intcon	equ	0xFF2
 37844                           indf0	equ	0xFEF
 37845                           postinc0	equ	0xFEE
 37846                           fsr0h	equ	0xFEA
 37847                           fsr0l	equ	0xFE9
 37848                           wreg	equ	0xFE8
 37849                           indf1	equ	0xFE7
 37850                           postinc1	equ	0xFE6
 37851                           postdec1	equ	0xFE5
 37852                           plusw1	equ	0xFE3
 37853                           fsr1h	equ	0xFE2
 37854                           fsr1l	equ	0xFE1
 37855                           indf2	equ	0xFDF
 37856                           postinc2	equ	0xFDE
 37857                           postdec2	equ	0xFDD
 37858                           plusw2	equ	0xFDB
 37859                           fsr2h	equ	0xFDA
 37860                           fsr2l	equ	0xFD9
 37861                           status	equ	0xFD8
 37862                           
 37863 ;; *************** function _calib_data_init_pr *****************
 37864 ;; Defined at:
 37865 ;;		line 283 in file "src/api/data.c"
 37866 ;; Parameters:    Size  Location     Type
 37867 ;;		None
 37868 ;; Auto vars:     Size  Location     Type
 37869 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 37870 ;;		 -> prCalibTabDef(162), 
 37871 ;;  t16             2   23[BANK0 ] unsigned int 
 37872 ;;  ret             1   22[BANK0 ] unsigned char 
 37873 ;; Return value:  Size  Location     Type
 37874 ;;                  1    wreg      unsigned char 
 37875 ;; Registers used:
 37876 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37877 ;; Tracked objects:
 37878 ;;		On entry : 0/0
 37879 ;;		On exit  : 0/0
 37880 ;;		Unchanged: 0/0
 37881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37883 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37885 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37886 ;;Total ram usage:        5 bytes
 37887 ;; Hardware stack levels used:    1
 37888 ;; Hardware stack levels required when called:    9
 37889 ;; This function calls:
 37890 ;;		_at24c02_init
 37891 ;;		_at24c02_read_n_byte
 37892 ;;		_at24c02_write_n_byte
 37893 ;;		_calib_data_set_default_pr
 37894 ;;		_crc_append
 37895 ;;		_crc_verify
 37896 ;; This function is called by:
 37897 ;;		_data_init_all
 37898 ;; This function uses a non-reentrant model
 37899 ;;
 37900                           
 37901                           	psect	text194
 37902  004F02                     __ptext194:
 37903                           	opt stack 0
 37904  004F02                     _calib_data_init_pr:
 37905                           	opt stack 20
 37906                           
 37907                           ;data.c: 285: uint8_t ret=0;
 37908                           
 37909                           ; BSR set to: 0
 37910                           ;incstack = 0
 37911  004F02  0E00               	movlw	0
 37912  004F04  0100               	movlb	0	; () banked
 37913  004F06  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 37914                           
 37915                           ; BSR set to: 0
 37916                           ;data.c: 286: uint16_t t16;
 37917                           ;data.c: 287: uint8_t* buf=(uint8_t*)(&prCalibTabDef);
 37918  004F08  0E00               	movlw	low _prCalibTabDef
 37919  004F0A  0100               	movlb	0	; () banked
 37920  004F0C  6F79               	movwf	calib_data_init_pr@buf& (0+255),b
 37921  004F0E  0E04               	movlw	high _prCalibTabDef
 37922  004F10  0100               	movlb	0	; () banked
 37923  004F12  6F7A               	movwf	(calib_data_init_pr@buf+1)& (0+255),b
 37924                           
 37925                           ; BSR set to: 0
 37926                           ;data.c: 289: p_prEepromObj=&at24c02Ch0;
 37927  004F14  0E82               	movlw	low _at24c02Ch0
 37928  004F16  6E27               	movwf	_p_prEepromObj,c
 37929  004F18  0E01               	movlw	high _at24c02Ch0
 37930  004F1A  6E28               	movwf	_p_prEepromObj+1,c
 37931                           
 37932                           ; BSR set to: 0
 37933                           ;data.c: 290: at24c02_init(p_prEepromObj,0xaa);
 37934  004F1C  C027  F060         	movff	_p_prEepromObj,at24c02_init@pAt24c02
 37935  004F20  C028  F061         	movff	_p_prEepromObj+1,at24c02_init@pAt24c02+1
 37936  004F24  0EAA               	movlw	170
 37937  004F26  0100               	movlb	0	; () banked
 37938  004F28  6F62               	movwf	at24c02_init@slv& (0+255),b
 37939  004F2A  ECD1  F03E         	call	_at24c02_init	;wreg free
 37940                           
 37941                           ;data.c: 291: t16=sizeof(prCalibTabDef);
 37942  004F2E  0E00               	movlw	0
 37943  004F30  0100               	movlb	0	; () banked
 37944  004F32  6F78               	movwf	(calib_data_init_pr@t16+1)& (0+255),b
 37945  004F34  0EA2               	movlw	162
 37946  004F36  6F77               	movwf	calib_data_init_pr@t16& (0+255),b
 37947                           
 37948                           ; BSR set to: 0
 37949                           ;data.c: 292: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 37950  004F38  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 37951  004F3C  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 37952  004F40  0E00               	movlw	0
 37953  004F42  0100               	movlb	0	; () banked
 37954  004F44  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 37955  004F46  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 37956  004F4A  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 37957  004F4E  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 37958  004F52  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 37959  004F56  EC2D  F01F         	call	_at24c02_read_n_byte	;wreg free
 37960                           
 37961                           ;data.c: 293: ret=crc_verify(buf,t16);
 37962  004F5A  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 37963  004F5E  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 37964  004F62  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 37965  004F66  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 37966  004F6A  EC8F  F03D         	call	_crc_verify	;wreg free
 37967  004F6E  0100               	movlb	0	; () banked
 37968  004F70  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 37969                           
 37970                           ; BSR set to: 0
 37971                           ;data.c: 294: if(!ret){
 37972  004F72  0100               	movlb	0	; () banked
 37973  004F74  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 37974  004F76  0100               	movlb	0	; () banked
 37975  004F78  A4D8               	btfss	status,2,c
 37976  004F7A  0012               	return	
 37977                           
 37978                           ; BSR set to: 0
 37979                           ;data.c: 295: calib_data_set_default_pr();
 37980  004F7C  EC6D  F01D         	call	_calib_data_set_default_pr	;wreg free
 37981                           
 37982                           ;data.c: 296: crc_append(buf,t16-2);
 37983  004F80  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 37984  004F84  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 37985  004F88  0EFE               	movlw	254
 37986  004F8A  0100               	movlb	0	; () banked
 37987  004F8C  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 37988  004F8E  0100               	movlb	0	; () banked
 37989  004F90  6F6E               	movwf	crc_append@n& (0+255),b
 37990  004F92  0EFF               	movlw	255
 37991  004F94  0100               	movlb	0	; () banked
 37992  004F96  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 37993  004F98  0100               	movlb	0	; () banked
 37994  004F9A  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 37995  004F9C  EC14  F044         	call	_crc_append	;wreg free
 37996                           
 37997                           ;data.c: 297: at24c02_write_n_byte(p_prEepromObj,0,buf,t16);
 37998  004FA0  C027  F066         	movff	_p_prEepromObj,at24c02_write_n_byte@pAt24c02
 37999  004FA4  C028  F067         	movff	_p_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 38000  004FA8  0E00               	movlw	0
 38001  004FAA  0100               	movlb	0	; () banked
 38002  004FAC  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 38003  004FAE  C079  F069         	movff	calib_data_init_pr@buf,at24c02_write_n_byte@buf
 38004  004FB2  C07A  F06A         	movff	calib_data_init_pr@buf+1,at24c02_write_n_byte@buf+1
 38005  004FB6  C077  F06B         	movff	calib_data_init_pr@t16,at24c02_write_n_byte@len
 38006  004FBA  C078  F06C         	movff	calib_data_init_pr@t16+1,at24c02_write_n_byte@len+1
 38007  004FBE  ECC9  F029         	call	_at24c02_write_n_byte	;wreg free
 38008                           
 38009                           ;data.c: 298: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 38010  004FC2  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 38011  004FC6  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 38012  004FCA  0E00               	movlw	0
 38013  004FCC  0100               	movlb	0	; () banked
 38014  004FCE  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 38015  004FD0  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 38016  004FD4  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 38017  004FD8  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 38018  004FDC  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 38019  004FE0  EC2D  F01F         	call	_at24c02_read_n_byte	;wreg free
 38020                           
 38021                           ;data.c: 299: ret=crc_verify(buf,t16);
 38022  004FE4  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 38023  004FE8  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 38024  004FEC  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 38025  004FF0  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 38026  004FF4  EC8F  F03D         	call	_crc_verify	;wreg free
 38027  004FF8  0100               	movlb	0	; () banked
 38028  004FFA  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 38029                           
 38030                           ; BSR set to: 0
 38031                           ;data.c: 300: if(!ret){
 38032  004FFC  0100               	movlb	0	; () banked
 38033  004FFE  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 38034  005000  0100               	movlb	0	; () banked
 38035  005002  A4D8               	btfss	status,2,c
 38036  005004  0012               	return	
 38037                           
 38038                           ; BSR set to: 0
 38039                           ;data.c: 301: calib_data_set_default_pr();
 38040  005006  EC6D  F01D         	call	_calib_data_set_default_pr	;wreg free
 38041                           
 38042                           ;data.c: 302: crc_append(buf,t16-2);
 38043  00500A  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 38044  00500E  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 38045  005012  0EFE               	movlw	254
 38046  005014  0100               	movlb	0	; () banked
 38047  005016  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 38048  005018  0100               	movlb	0	; () banked
 38049  00501A  6F6E               	movwf	crc_append@n& (0+255),b
 38050  00501C  0EFF               	movlw	255
 38051  00501E  0100               	movlb	0	; () banked
 38052  005020  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 38053  005022  0100               	movlb	0	; () banked
 38054  005024  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 38055  005026  EC14  F044         	call	_crc_append	;wreg free
 38056  00502A  0012               	return	
 38057  00502C                     __end_of_calib_data_init_pr:
 38058                           	opt stack 0
 38059                           tosu	equ	0xFFF
 38060                           tosh	equ	0xFFE
 38061                           tosl	equ	0xFFD
 38062                           pclath	equ	0xFFA
 38063                           tblptru	equ	0xFF8
 38064                           tblptrh	equ	0xFF7
 38065                           tblptrl	equ	0xFF6
 38066                           tablat	equ	0xFF5
 38067                           prodh	equ	0xFF4
 38068                           prodl	equ	0xFF3
 38069                           intcon	equ	0xFF2
 38070                           indf0	equ	0xFEF
 38071                           postinc0	equ	0xFEE
 38072                           fsr0h	equ	0xFEA
 38073                           fsr0l	equ	0xFE9
 38074                           wreg	equ	0xFE8
 38075                           indf1	equ	0xFE7
 38076                           postinc1	equ	0xFE6
 38077                           postdec1	equ	0xFE5
 38078                           plusw1	equ	0xFE3
 38079                           fsr1h	equ	0xFE2
 38080                           fsr1l	equ	0xFE1
 38081                           indf2	equ	0xFDF
 38082                           postinc2	equ	0xFDE
 38083                           postdec2	equ	0xFDD
 38084                           plusw2	equ	0xFDB
 38085                           fsr2h	equ	0xFDA
 38086                           fsr2l	equ	0xFD9
 38087                           status	equ	0xFD8
 38088                           
 38089 ;; *************** function _calib_data_set_default_pr *****************
 38090 ;; Defined at:
 38091 ;;		line 242 in file "src/api/data.c"
 38092 ;; Parameters:    Size  Location     Type
 38093 ;;		None
 38094 ;; Auto vars:     Size  Location     Type
 38095 ;;  j               1   15[BANK0 ] unsigned char 
 38096 ;;  i               1   14[BANK0 ] unsigned char 
 38097 ;; Return value:  Size  Location     Type
 38098 ;;                  1    wreg      void 
 38099 ;; Registers used:
 38100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38101 ;; Tracked objects:
 38102 ;;		On entry : 0/0
 38103 ;;		On exit  : 0/0
 38104 ;;		Unchanged: 0/0
 38105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38108 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38109 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38110 ;;Total ram usage:        8 bytes
 38111 ;; Hardware stack levels used:    1
 38112 ;; Hardware stack levels required when called:    5
 38113 ;; This function calls:
 38114 ;;		___wmul
 38115 ;; This function is called by:
 38116 ;;		_calib_data_init_pr
 38117 ;; This function uses a non-reentrant model
 38118 ;;
 38119                           
 38120                           	psect	text195
 38121  003ADA                     __ptext195:
 38122                           	opt stack 0
 38123  003ADA                     _calib_data_set_default_pr:
 38124                           	opt stack 23
 38125                           
 38126                           ;data.c: 244: uint8_t i,j;
 38127                           ;data.c: 245: prCalibTabDef.rowCount=1;
 38128                           
 38129                           ;incstack = 0
 38130  003ADA  0E01               	movlw	1
 38131  003ADC  0104               	movlb	4	; () banked
 38132  003ADE  6F00               	movwf	_prCalibTabDef& (0+255),b
 38133                           
 38134                           ;data.c: 246: for(i=0;i<1;i++){
 38135  003AE0  0E00               	movlw	0
 38136  003AE2  0100               	movlb	0	; () banked
 38137  003AE4  6F6E               	movwf	calib_data_set_default_pr@i& (0+255),b
 38138  003AE6  0100               	movlb	0	; () banked
 38139  003AE8  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 38140  003AEA  0100               	movlb	0	; () banked
 38141  003AEC  A4D8               	btfss	status,2,c
 38142  003AEE  0012               	return	
 38143                           
 38144                           ; BSR set to: 0
 38145                           ;data.c: 247: prCalibTabDef.prCalibRow[i].pCount=6;
 38146                           
 38147                           ; BSR set to: 0
 38148                           
 38149                           ; BSR set to: 0
 38150  003AF0  0100               	movlb	0	; () banked
 38151  003AF2  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 38152  003AF4  0D34               	mullw	52
 38153  003AF6  0E04               	movlw	low (_prCalibTabDef+4)
 38154  003AF8  24F3               	addwf	prodl,w,c
 38155  003AFA  6ED9               	movwf	fsr2l,c
 38156  003AFC  0E04               	movlw	high (_prCalibTabDef+4)
 38157  003AFE  20F4               	addwfc	prodh,w,c
 38158  003B00  6EDA               	movwf	fsr2h,c
 38159  003B02  0E06               	movlw	6
 38160  003B04  6EDF               	movwf	indf2,c
 38161                           
 38162                           ; BSR set to: 0
 38163                           ;data.c: 248: for(j=0;j<6;j++){
 38164  003B06  0E00               	movlw	0
 38165  003B08  0100               	movlb	0	; () banked
 38166  003B0A  6F6F               	movwf	calib_data_set_default_pr@j& (0+255),b
 38167  003B0C                     l15554:
 38168                           
 38169                           ; BSR set to: 0
 38170  003B0C  0E05               	movlw	5
 38171  003B0E  0100               	movlb	0	; () banked
 38172  003B10  656F               	cpfsgt	calib_data_set_default_pr@j& (0+255),b
 38173  003B12  D001               	goto	l15558
 38174  003B14  D0C1               	goto	l15566
 38175  003B16                     l15558:
 38176                           
 38177                           ; BSR set to: 0
 38178                           ;data.c: 249: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 38179  003B16  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 38180  003B1A  0100               	movlb	0	; () banked
 38181  003B1C  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 38182  003B1E  0E17               	movlw	23
 38183  003B20  0100               	movlb	0	; () banked
 38184  003B22  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 38185  003B24  0E70               	movlw	112
 38186  003B26  6F64               	movwf	___wmul@multiplicand& (0+255),b
 38187  003B28  EC68  F04A         	call	___wmul	;wreg free
 38188  003B2C  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 38189  003B30  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 38190  003B34  C06E  F062         	movff	calib_data_set_default_pr@i,___wmul@multiplier
 38191  003B38  0100               	movlb	0	; () banked
 38192  003B3A  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 38193  003B3C  0E01               	movlw	1
 38194  003B3E  0100               	movlb	0	; () banked
 38195  003B40  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 38196  003B42  0EF4               	movlw	244
 38197  003B44  6F64               	movwf	___wmul@multiplicand& (0+255),b
 38198  003B46  EC68  F04A         	call	___wmul	;wreg free
 38199  003B4A  0100               	movlb	0	; () banked
 38200  003B4C  5162               	movf	?___wmul& (0+255),w,b
 38201  003B4E  0100               	movlb	0	; () banked
 38202  003B50  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 38203  003B52  0100               	movlb	0	; () banked
 38204  003B54  5163               	movf	(?___wmul+1)& (0+255),w,b
 38205  003B56  0100               	movlb	0	; () banked
 38206  003B58  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 38207  003B5A  0100               	movlb	0	; () banked
 38208  003B5C  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 38209  003B5E  0D08               	mullw	8
 38210  003B60  0E04               	movlw	4
 38211  003B62  26F3               	addwf	prodl,f,c
 38212  003B64  0E00               	movlw	0
 38213  003B66  22F4               	addwfc	prodh,f,c
 38214  003B68  0E00               	movlw	low _prCalibTabDef
 38215  003B6A  0100               	movlb	0	; () banked
 38216  003B6C  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 38217  003B6E  0E04               	movlw	high _prCalibTabDef
 38218  003B70  0100               	movlb	0	; () banked
 38219  003B72  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 38220  003B74  0E04               	movlw	4
 38221  003B76  0100               	movlb	0	; () banked
 38222  003B78  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 38223  003B7A  0E00               	movlw	0
 38224  003B7C  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 38225  003B7E  50F3               	movf	prodl,w,c
 38226  003B80  0100               	movlb	0	; () banked
 38227  003B82  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 38228  003B84  50F4               	movf	prodh,w,c
 38229  003B86  0100               	movlb	0	; () banked
 38230  003B88  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 38231  003B8A  0100               	movlb	0	; () banked
 38232  003B8C  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 38233  003B8E  0D34               	mullw	52
 38234  003B90  50F3               	movf	prodl,w,c
 38235  003B92  0100               	movlb	0	; () banked
 38236  003B94  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 38237  003B96  50F4               	movf	prodh,w,c
 38238  003B98  0100               	movlb	0	; () banked
 38239  003B9A  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 38240  003B9C  0E04               	movlw	4
 38241  003B9E  0100               	movlb	0	; () banked
 38242  003BA0  256A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),w,b
 38243  003BA2  6ED9               	movwf	fsr2l,c
 38244  003BA4  0E00               	movlw	0
 38245  003BA6  0100               	movlb	0	; () banked
 38246  003BA8  216B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),w,b
 38247  003BAA  6EDA               	movwf	fsr2h,c
 38248  003BAC  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 38249  003BB0  C069  FFDD         	movff	??_calib_data_set_default_pr+1,postdec2
 38250                           
 38251                           ;data.c: 250: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 38252  003BB4  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 38253  003BB8  0100               	movlb	0	; () banked
 38254  003BBA  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 38255  003BBC  0E17               	movlw	23
 38256  003BBE  0100               	movlb	0	; () banked
 38257  003BC0  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 38258  003BC2  0E70               	movlw	112
 38259  003BC4  6F64               	movwf	___wmul@multiplicand& (0+255),b
 38260  003BC6  EC68  F04A         	call	___wmul	;wreg free
 38261  003BCA  0100               	movlb	0	; () banked
 38262  003BCC  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 38263  003BD0  0100               	movlb	0	; () banked
 38264  003BD2  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 38265  003BD6  0E00               	movlw	0
 38266  003BD8  0100               	movlb	0	; () banked
 38267  003BDA  BF69               	btfsc	(??_calib_data_set_default_pr+1)& (0+255),7,b
 38268  003BDC  0EFF               	movlw	255
 38269  003BDE  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 38270  003BE0  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 38271  003BE2  0100               	movlb	0	; () banked
 38272  003BE4  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 38273  003BE6  0D08               	mullw	8
 38274  003BE8  0E04               	movlw	4
 38275  003BEA  26F3               	addwf	prodl,f,c
 38276  003BEC  0E00               	movlw	0
 38277  003BEE  22F4               	addwfc	prodh,f,c
 38278  003BF0  0E00               	movlw	low _prCalibTabDef
 38279  003BF2  0100               	movlb	0	; () banked
 38280  003BF4  6F6C               	movwf	(??_calib_data_set_default_pr+4)& (0+255),b
 38281  003BF6  0E04               	movlw	high _prCalibTabDef
 38282  003BF8  0100               	movlb	0	; () banked
 38283  003BFA  6F6D               	movwf	(??_calib_data_set_default_pr+5)& (0+255),b
 38284  003BFC  0E04               	movlw	4
 38285  003BFE  0100               	movlb	0	; () banked
 38286  003C00  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 38287  003C02  0E00               	movlw	0
 38288  003C04  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 38289  003C06  50F3               	movf	prodl,w,c
 38290  003C08  0100               	movlb	0	; () banked
 38291  003C0A  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 38292  003C0C  50F4               	movf	prodh,w,c
 38293  003C0E  0100               	movlb	0	; () banked
 38294  003C10  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 38295  003C12  0100               	movlb	0	; () banked
 38296  003C14  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 38297  003C16  0D34               	mullw	52
 38298  003C18  50F3               	movf	prodl,w,c
 38299  003C1A  0100               	movlb	0	; () banked
 38300  003C1C  256C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),w,b
 38301  003C1E  6ED9               	movwf	fsr2l,c
 38302  003C20  50F4               	movf	prodh,w,c
 38303  003C22  0100               	movlb	0	; () banked
 38304  003C24  216D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),w,b
 38305  003C26  6EDA               	movwf	fsr2h,c
 38306  003C28  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 38307  003C2C  C069  FFDE         	movff	??_calib_data_set_default_pr+1,postinc2
 38308  003C30  C06A  FFDE         	movff	??_calib_data_set_default_pr+2,postinc2
 38309  003C34  C06B  FFDE         	movff	??_calib_data_set_default_pr+3,postinc2
 38310                           
 38311                           ; BSR set to: 0
 38312                           ;data.c: 251: prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=0;
 38313  003C38  0100               	movlb	0	; () banked
 38314  003C3A  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 38315  003C3C  0D08               	mullw	8
 38316  003C3E  0E04               	movlw	4
 38317  003C40  26F3               	addwf	prodl,f,c
 38318  003C42  0E00               	movlw	0
 38319  003C44  22F4               	addwfc	prodh,f,c
 38320  003C46  0E00               	movlw	low _prCalibTabDef
 38321  003C48  0100               	movlb	0	; () banked
 38322  003C4A  6F68               	movwf	??_calib_data_set_default_pr& (0+255),b
 38323  003C4C  0E04               	movlw	high _prCalibTabDef
 38324  003C4E  0100               	movlb	0	; () banked
 38325  003C50  6F69               	movwf	(??_calib_data_set_default_pr+1)& (0+255),b
 38326  003C52  0E04               	movlw	4
 38327  003C54  0100               	movlb	0	; () banked
 38328  003C56  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 38329  003C58  0E00               	movlw	0
 38330  003C5A  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 38331  003C5C  50F3               	movf	prodl,w,c
 38332  003C5E  0100               	movlb	0	; () banked
 38333  003C60  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 38334  003C62  50F4               	movf	prodh,w,c
 38335  003C64  0100               	movlb	0	; () banked
 38336  003C66  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 38337  003C68  0100               	movlb	0	; () banked
 38338  003C6A  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 38339  003C6C  0D34               	mullw	52
 38340  003C6E  50F3               	movf	prodl,w,c
 38341  003C70  0100               	movlb	0	; () banked
 38342  003C72  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 38343  003C74  50F4               	movf	prodh,w,c
 38344  003C76  0100               	movlb	0	; () banked
 38345  003C78  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 38346  003C7A  0E06               	movlw	6
 38347  003C7C  0100               	movlb	0	; () banked
 38348  003C7E  2568               	addwf	??_calib_data_set_default_pr& (0+255),w,b
 38349  003C80  6ED9               	movwf	fsr2l,c
 38350  003C82  0E00               	movlw	0
 38351  003C84  0100               	movlb	0	; () banked
 38352  003C86  2169               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),w,b
 38353  003C88  6EDA               	movwf	fsr2h,c
 38354  003C8A  0E00               	movlw	0
 38355  003C8C  6EDE               	movwf	postinc2,c
 38356  003C8E  0E00               	movlw	0
 38357  003C90  6EDD               	movwf	postdec2,c
 38358                           
 38359                           ; BSR set to: 0
 38360  003C92  0100               	movlb	0	; () banked
 38361  003C94  2B6F               	incf	calib_data_set_default_pr@j& (0+255),f,b
 38362  003C96  D73A               	goto	l15554
 38363  003C98                     l15566:
 38364                           
 38365                           ; BSR set to: 0
 38366  003C98  0100               	movlb	0	; () banked
 38367  003C9A  2B6E               	incf	calib_data_set_default_pr@i& (0+255),f,b
 38368  003C9C  D724               	goto	L33
 38369  003C9E                     __end_of_calib_data_set_default_pr:
 38370                           	opt stack 0
 38371                           tosu	equ	0xFFF
 38372                           tosh	equ	0xFFE
 38373                           tosl	equ	0xFFD
 38374                           pclath	equ	0xFFA
 38375                           tblptru	equ	0xFF8
 38376                           tblptrh	equ	0xFF7
 38377                           tblptrl	equ	0xFF6
 38378                           tablat	equ	0xFF5
 38379                           prodh	equ	0xFF4
 38380                           prodl	equ	0xFF3
 38381                           intcon	equ	0xFF2
 38382                           indf0	equ	0xFEF
 38383                           postinc0	equ	0xFEE
 38384                           fsr0h	equ	0xFEA
 38385                           fsr0l	equ	0xFE9
 38386                           wreg	equ	0xFE8
 38387                           indf1	equ	0xFE7
 38388                           postinc1	equ	0xFE6
 38389                           postdec1	equ	0xFE5
 38390                           plusw1	equ	0xFE3
 38391                           fsr1h	equ	0xFE2
 38392                           fsr1l	equ	0xFE1
 38393                           indf2	equ	0xFDF
 38394                           postinc2	equ	0xFDE
 38395                           postdec2	equ	0xFDD
 38396                           plusw2	equ	0xFDB
 38397                           fsr2h	equ	0xFDA
 38398                           fsr2l	equ	0xFD9
 38399                           status	equ	0xFD8
 38400                           
 38401 ;; *************** function _calib_data_init_diff_pr *****************
 38402 ;; Defined at:
 38403 ;;		line 257 in file "src/api/data.c"
 38404 ;; Parameters:    Size  Location     Type
 38405 ;;		None
 38406 ;; Auto vars:     Size  Location     Type
 38407 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 38408 ;;		 -> diff_prCalibTabDef(162), 
 38409 ;;  t16             2   23[BANK0 ] unsigned int 
 38410 ;;  ret             1   22[BANK0 ] unsigned char 
 38411 ;; Return value:  Size  Location     Type
 38412 ;;                  1    wreg      unsigned char 
 38413 ;; Registers used:
 38414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38415 ;; Tracked objects:
 38416 ;;		On entry : 0/0
 38417 ;;		On exit  : 0/0
 38418 ;;		Unchanged: 0/0
 38419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38421 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38423 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38424 ;;Total ram usage:        5 bytes
 38425 ;; Hardware stack levels used:    1
 38426 ;; Hardware stack levels required when called:    9
 38427 ;; This function calls:
 38428 ;;		_at24c02_init
 38429 ;;		_at24c02_read_n_byte
 38430 ;;		_at24c02_write_n_byte
 38431 ;;		_calib_data_set_default_diff_pr
 38432 ;;		_crc_append
 38433 ;;		_crc_verify
 38434 ;; This function is called by:
 38435 ;;		_data_init_all
 38436 ;; This function uses a non-reentrant model
 38437 ;;
 38438                           
 38439                           	psect	text196
 38440  00502C                     __ptext196:
 38441                           	opt stack 0
 38442  00502C                     _calib_data_init_diff_pr:
 38443                           	opt stack 20
 38444                           
 38445                           ;data.c: 259: uint8_t ret=0;
 38446                           
 38447                           ; BSR set to: 0
 38448                           ;incstack = 0
 38449  00502C  0E00               	movlw	0
 38450  00502E  0100               	movlb	0	; () banked
 38451  005030  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 38452                           
 38453                           ; BSR set to: 0
 38454                           ;data.c: 260: uint16_t t16;
 38455                           ;data.c: 261: uint8_t* buf=(uint8_t*)(&diff_prCalibTabDef);
 38456  005032  0E10               	movlw	low _diff_prCalibTabDef
 38457  005034  0100               	movlb	0	; () banked
 38458  005036  6F79               	movwf	calib_data_init_diff_pr@buf& (0+255),b
 38459  005038  0E03               	movlw	high _diff_prCalibTabDef
 38460  00503A  0100               	movlb	0	; () banked
 38461  00503C  6F7A               	movwf	(calib_data_init_diff_pr@buf+1)& (0+255),b
 38462                           
 38463                           ; BSR set to: 0
 38464                           ;data.c: 263: pdiff_prEepromObj= &at24c02Ch1;
 38465  00503E  0E8D               	movlw	low _at24c02Ch1
 38466  005040  6E29               	movwf	_pdiff_prEepromObj,c
 38467  005042  0E01               	movlw	high _at24c02Ch1
 38468  005044  6E2A               	movwf	_pdiff_prEepromObj+1,c
 38469                           
 38470                           ; BSR set to: 0
 38471                           ;data.c: 264: at24c02_init(pdiff_prEepromObj,0xaa);
 38472  005046  C029  F060         	movff	_pdiff_prEepromObj,at24c02_init@pAt24c02
 38473  00504A  C02A  F061         	movff	_pdiff_prEepromObj+1,at24c02_init@pAt24c02+1
 38474  00504E  0EAA               	movlw	170
 38475  005050  0100               	movlb	0	; () banked
 38476  005052  6F62               	movwf	at24c02_init@slv& (0+255),b
 38477  005054  ECD1  F03E         	call	_at24c02_init	;wreg free
 38478                           
 38479                           ;data.c: 265: t16=sizeof(diff_prCalibTabDef);
 38480  005058  0E00               	movlw	0
 38481  00505A  0100               	movlb	0	; () banked
 38482  00505C  6F78               	movwf	(calib_data_init_diff_pr@t16+1)& (0+255),b
 38483  00505E  0EA2               	movlw	162
 38484  005060  6F77               	movwf	calib_data_init_diff_pr@t16& (0+255),b
 38485                           
 38486                           ; BSR set to: 0
 38487                           ;data.c: 266: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 38488  005062  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 38489  005066  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 38490  00506A  0E00               	movlw	0
 38491  00506C  0100               	movlb	0	; () banked
 38492  00506E  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 38493  005070  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 38494  005074  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 38495  005078  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 38496  00507C  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 38497  005080  EC2D  F01F         	call	_at24c02_read_n_byte	;wreg free
 38498                           
 38499                           ;data.c: 267: ret=crc_verify(buf,t16);
 38500  005084  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 38501  005088  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 38502  00508C  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 38503  005090  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 38504  005094  EC8F  F03D         	call	_crc_verify	;wreg free
 38505  005098  0100               	movlb	0	; () banked
 38506  00509A  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 38507                           
 38508                           ; BSR set to: 0
 38509                           ;data.c: 268: if(!ret){
 38510  00509C  0100               	movlb	0	; () banked
 38511  00509E  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 38512  0050A0  0100               	movlb	0	; () banked
 38513  0050A2  A4D8               	btfss	status,2,c
 38514  0050A4  0012               	return	
 38515                           
 38516                           ; BSR set to: 0
 38517                           ;data.c: 269: calib_data_set_default_diff_pr();
 38518  0050A6  ECAE  F01A         	call	_calib_data_set_default_diff_pr	;wreg free
 38519                           
 38520                           ;data.c: 270: crc_append(buf,t16-2);
 38521  0050AA  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 38522  0050AE  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 38523  0050B2  0EFE               	movlw	254
 38524  0050B4  0100               	movlb	0	; () banked
 38525  0050B6  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 38526  0050B8  0100               	movlb	0	; () banked
 38527  0050BA  6F6E               	movwf	crc_append@n& (0+255),b
 38528  0050BC  0EFF               	movlw	255
 38529  0050BE  0100               	movlb	0	; () banked
 38530  0050C0  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 38531  0050C2  0100               	movlb	0	; () banked
 38532  0050C4  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 38533  0050C6  EC14  F044         	call	_crc_append	;wreg free
 38534                           
 38535                           ;data.c: 271: at24c02_write_n_byte(pdiff_prEepromObj,0,buf,t16);
 38536  0050CA  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 38537  0050CE  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 38538  0050D2  0E00               	movlw	0
 38539  0050D4  0100               	movlb	0	; () banked
 38540  0050D6  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 38541  0050D8  C079  F069         	movff	calib_data_init_diff_pr@buf,at24c02_write_n_byte@buf
 38542  0050DC  C07A  F06A         	movff	calib_data_init_diff_pr@buf+1,at24c02_write_n_byte@buf+1
 38543  0050E0  C077  F06B         	movff	calib_data_init_diff_pr@t16,at24c02_write_n_byte@len
 38544  0050E4  C078  F06C         	movff	calib_data_init_diff_pr@t16+1,at24c02_write_n_byte@len+1
 38545  0050E8  ECC9  F029         	call	_at24c02_write_n_byte	;wreg free
 38546                           
 38547                           ;data.c: 272: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 38548  0050EC  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 38549  0050F0  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 38550  0050F4  0E00               	movlw	0
 38551  0050F6  0100               	movlb	0	; () banked
 38552  0050F8  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 38553  0050FA  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 38554  0050FE  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 38555  005102  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 38556  005106  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 38557  00510A  EC2D  F01F         	call	_at24c02_read_n_byte	;wreg free
 38558                           
 38559                           ;data.c: 273: ret=crc_verify(buf,t16);
 38560  00510E  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 38561  005112  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 38562  005116  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 38563  00511A  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 38564  00511E  EC8F  F03D         	call	_crc_verify	;wreg free
 38565  005122  0100               	movlb	0	; () banked
 38566  005124  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 38567                           
 38568                           ; BSR set to: 0
 38569                           ;data.c: 274: if(!ret){
 38570  005126  0100               	movlb	0	; () banked
 38571  005128  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 38572  00512A  0100               	movlb	0	; () banked
 38573  00512C  A4D8               	btfss	status,2,c
 38574  00512E  0012               	return	
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;data.c: 275: calib_data_set_default_diff_pr();
 38578  005130  ECAE  F01A         	call	_calib_data_set_default_diff_pr	;wreg free
 38579                           
 38580                           ;data.c: 276: crc_append(buf,t16-2);
 38581  005134  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 38582  005138  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 38583  00513C  0EFE               	movlw	254
 38584  00513E  0100               	movlb	0	; () banked
 38585  005140  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 38586  005142  0100               	movlb	0	; () banked
 38587  005144  6F6E               	movwf	crc_append@n& (0+255),b
 38588  005146  0EFF               	movlw	255
 38589  005148  0100               	movlb	0	; () banked
 38590  00514A  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 38591  00514C  0100               	movlb	0	; () banked
 38592  00514E  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 38593  005150  EC14  F044         	call	_crc_append	;wreg free
 38594  005154  0012               	return	
 38595  005156                     __end_of_calib_data_init_diff_pr:
 38596                           	opt stack 0
 38597                           tosu	equ	0xFFF
 38598                           tosh	equ	0xFFE
 38599                           tosl	equ	0xFFD
 38600                           pclath	equ	0xFFA
 38601                           tblptru	equ	0xFF8
 38602                           tblptrh	equ	0xFF7
 38603                           tblptrl	equ	0xFF6
 38604                           tablat	equ	0xFF5
 38605                           prodh	equ	0xFF4
 38606                           prodl	equ	0xFF3
 38607                           intcon	equ	0xFF2
 38608                           indf0	equ	0xFEF
 38609                           postinc0	equ	0xFEE
 38610                           fsr0h	equ	0xFEA
 38611                           fsr0l	equ	0xFE9
 38612                           wreg	equ	0xFE8
 38613                           indf1	equ	0xFE7
 38614                           postinc1	equ	0xFE6
 38615                           postdec1	equ	0xFE5
 38616                           plusw1	equ	0xFE3
 38617                           fsr1h	equ	0xFE2
 38618                           fsr1l	equ	0xFE1
 38619                           indf2	equ	0xFDF
 38620                           postinc2	equ	0xFDE
 38621                           postdec2	equ	0xFDD
 38622                           plusw2	equ	0xFDB
 38623                           fsr2h	equ	0xFDA
 38624                           fsr2l	equ	0xFD9
 38625                           status	equ	0xFD8
 38626                           
 38627 ;; *************** function _crc_verify *****************
 38628 ;; Defined at:
 38629 ;;		line 76 in file "src/depend/crc16.c"
 38630 ;; Parameters:    Size  Location     Type
 38631 ;;  message         2   12[BANK0 ] PTR unsigned char 
 38632 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 38633 ;;  n               2   14[BANK0 ] unsigned int 
 38634 ;; Auto vars:     Size  Location     Type
 38635 ;;  expected        2   20[BANK0 ] unsigned int 
 38636 ;;  crccal          2   18[BANK0 ] unsigned int 
 38637 ;; Return value:  Size  Location     Type
 38638 ;;                  1    wreg      unsigned char 
 38639 ;; Registers used:
 38640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38641 ;; Tracked objects:
 38642 ;;		On entry : 0/0
 38643 ;;		On exit  : 0/0
 38644 ;;		Unchanged: 0/0
 38645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38647 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38649 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38650 ;;Total ram usage:       10 bytes
 38651 ;; Hardware stack levels used:    1
 38652 ;; Hardware stack levels required when called:    5
 38653 ;; This function calls:
 38654 ;;		_crc_sum
 38655 ;;		_m_mem_cpy_len
 38656 ;; This function is called by:
 38657 ;;		_data_sys_init
 38658 ;;		_calib_data_init_diff_pr
 38659 ;;		_calib_data_init_pr
 38660 ;;		___sys_data_save_write_flash
 38661 ;;		_data_sys_save
 38662 ;; This function uses a non-reentrant model
 38663 ;;
 38664                           
 38665                           	psect	text197
 38666  007B1E                     __ptext197:
 38667                           	opt stack 0
 38668  007B1E                     _crc_verify:
 38669                           	opt stack 21
 38670                           
 38671                           ;crc16.c: 78: uint16_t expected,crccal;
 38672                           ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 38673                           
 38674                           ;incstack = 0
 38675  007B1E  0E74               	movlw	low crc_verify@expected
 38676  007B20  0100               	movlb	0	; () banked
 38677  007B22  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 38678  007B24  0E00               	movlw	high crc_verify@expected
 38679  007B26  0100               	movlb	0	; () banked
 38680  007B28  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 38681  007B2A  0100               	movlb	0	; () banked
 38682  007B2C  516E               	movf	crc_verify@n& (0+255),w,b
 38683  007B2E  0100               	movlb	0	; () banked
 38684  007B30  256C               	addwf	crc_verify@message& (0+255),w,b
 38685  007B32  0100               	movlb	0	; () banked
 38686  007B34  6F70               	movwf	??_crc_verify& (0+255),b
 38687  007B36  0100               	movlb	0	; () banked
 38688  007B38  516F               	movf	(crc_verify@n+1)& (0+255),w,b
 38689  007B3A  0100               	movlb	0	; () banked
 38690  007B3C  216D               	addwfc	(crc_verify@message+1)& (0+255),w,b
 38691  007B3E  0100               	movlb	0	; () banked
 38692  007B40  6F71               	movwf	(??_crc_verify+1)& (0+255),b
 38693  007B42  0EFE               	movlw	254
 38694  007B44  0100               	movlb	0	; () banked
 38695  007B46  2570               	addwf	??_crc_verify& (0+255),w,b
 38696  007B48  0100               	movlb	0	; () banked
 38697  007B4A  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 38698  007B4C  0EFF               	movlw	255
 38699  007B4E  0100               	movlb	0	; () banked
 38700  007B50  2171               	addwfc	(??_crc_verify+1)& (0+255),w,b
 38701  007B52  0100               	movlb	0	; () banked
 38702  007B54  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 38703  007B56  0E00               	movlw	0
 38704  007B58  0100               	movlb	0	; () banked
 38705  007B5A  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 38706  007B5C  0E02               	movlw	2
 38707  007B5E  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 38708  007B60  ECF5  F047         	call	_m_mem_cpy_len	;wreg free
 38709                           
 38710                           ;crc16.c: 82: crccal=crc_sum(message,n - 2);
 38711  007B64  C06C  F060         	movff	crc_verify@message,crc_sum@puchMsg
 38712  007B68  C06D  F061         	movff	crc_verify@message+1,crc_sum@puchMsg+1
 38713  007B6C  0EFE               	movlw	254
 38714  007B6E  0100               	movlb	0	; () banked
 38715  007B70  256E               	addwf	crc_verify@n& (0+255),w,b
 38716  007B72  0100               	movlb	0	; () banked
 38717  007B74  6F62               	movwf	crc_sum@usDataLen& (0+255),b
 38718  007B76  0EFF               	movlw	255
 38719  007B78  0100               	movlb	0	; () banked
 38720  007B7A  216F               	addwfc	(crc_verify@n+1)& (0+255),w,b
 38721  007B7C  0100               	movlb	0	; () banked
 38722  007B7E  6F63               	movwf	(crc_sum@usDataLen+1)& (0+255),b
 38723  007B80  ECD3  F039         	call	_crc_sum	;wreg free
 38724  007B84  C060  F072         	movff	?_crc_sum,crc_verify@crccal
 38725  007B88  C061  F073         	movff	?_crc_sum+1,crc_verify@crccal+1
 38726                           
 38727                           ;crc16.c: 83: if(expected!=crccal)return 0;
 38728  007B8C  0100               	movlb	0	; () banked
 38729  007B8E  5172               	movf	crc_verify@crccal& (0+255),w,b
 38730  007B90  0100               	movlb	0	; () banked
 38731  007B92  1974               	xorwf	crc_verify@expected& (0+255),w,b
 38732  007B94  E106               	bnz	u13250
 38733  007B96  0100               	movlb	0	; () banked
 38734  007B98  5173               	movf	(crc_verify@crccal+1)& (0+255),w,b
 38735  007B9A  0100               	movlb	0	; () banked
 38736  007B9C  1975               	xorwf	(crc_verify@expected+1)& (0+255),w,b
 38737  007B9E  B4D8               	btfsc	status,2,c
 38738  007BA0  D002               	goto	l14366
 38739  007BA2                     u13250:
 38740                           
 38741                           ; BSR set to: 0
 38742  007BA2  0E00               	movlw	0
 38743                           
 38744                           ; BSR set to: 0
 38745  007BA4  0012               	return	
 38746  007BA6                     l14366:
 38747                           
 38748                           ; BSR set to: 0
 38749                           ;crc16.c: 84: return 1;
 38750  007BA6  0E01               	movlw	1
 38751  007BA8  0012               	return	
 38752  007BAA                     __end_of_crc_verify:
 38753                           	opt stack 0
 38754                           tosu	equ	0xFFF
 38755                           tosh	equ	0xFFE
 38756                           tosl	equ	0xFFD
 38757                           pclath	equ	0xFFA
 38758                           tblptru	equ	0xFF8
 38759                           tblptrh	equ	0xFF7
 38760                           tblptrl	equ	0xFF6
 38761                           tablat	equ	0xFF5
 38762                           prodh	equ	0xFF4
 38763                           prodl	equ	0xFF3
 38764                           intcon	equ	0xFF2
 38765                           indf0	equ	0xFEF
 38766                           postinc0	equ	0xFEE
 38767                           fsr0h	equ	0xFEA
 38768                           fsr0l	equ	0xFE9
 38769                           wreg	equ	0xFE8
 38770                           indf1	equ	0xFE7
 38771                           postinc1	equ	0xFE6
 38772                           postdec1	equ	0xFE5
 38773                           plusw1	equ	0xFE3
 38774                           fsr1h	equ	0xFE2
 38775                           fsr1l	equ	0xFE1
 38776                           indf2	equ	0xFDF
 38777                           postinc2	equ	0xFDE
 38778                           postdec2	equ	0xFDD
 38779                           plusw2	equ	0xFDB
 38780                           fsr2h	equ	0xFDA
 38781                           fsr2l	equ	0xFD9
 38782                           status	equ	0xFD8
 38783                           
 38784 ;; *************** function _m_mem_cpy_len *****************
 38785 ;; Defined at:
 38786 ;;		line 41 in file "src/depend/m_string.c"
 38787 ;; Parameters:    Size  Location     Type
 38788 ;;  d               2    0[BANK0 ] PTR unsigned char 
 38789 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), crc_verify@expected(2), stSysData(240), 
 38790 ;;  s               2    2[BANK0 ] PTR unsigned char 
 38791 ;;		 -> flashTestbuf(65), m_flash_test@tmp(16), stSysData(240), defultSystemData(240), 
 38792 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 38793 ;;  len             2    4[BANK0 ] unsigned int 
 38794 ;; Auto vars:     Size  Location     Type
 38795 ;;		None
 38796 ;; Return value:  Size  Location     Type
 38797 ;;                  1    wreg      void 
 38798 ;; Registers used:
 38799 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38800 ;; Tracked objects:
 38801 ;;		On entry : 0/0
 38802 ;;		On exit  : 0/0
 38803 ;;		Unchanged: 0/0
 38804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38809 ;;Total ram usage:        6 bytes
 38810 ;; Hardware stack levels used:    1
 38811 ;; Hardware stack levels required when called:    4
 38812 ;; This function calls:
 38813 ;;		Nothing
 38814 ;; This function is called by:
 38815 ;;		_data_sys_init
 38816 ;;		_crc_verify
 38817 ;;		_m_flash_write
 38818 ;;		_data_sys_save
 38819 ;;		_m_flash_test
 38820 ;; This function uses a non-reentrant model
 38821 ;;
 38822                           
 38823                           	psect	text198
 38824  008FEA                     __ptext198:
 38825                           	opt stack 0
 38826  008FEA                     _m_mem_cpy_len:
 38827                           	opt stack 21
 38828                           
 38829                           ;m_string.c: 44: while(len)
 38830                           
 38831                           ; BSR set to: 0
 38832                           ;incstack = 0
 38833  008FEA  D01F               	goto	l13936
 38834  008FEC                     l13928:
 38835                           
 38836                           ;m_string.c: 45: {
 38837                           ;m_string.c: 46: *d++=*s++;
 38838  008FEC  C062  FFF6         	movff	m_mem_cpy_len@s,tblptrl
 38839  008FF0  C063  FFF7         	movff	m_mem_cpy_len@s+1,tblptrh
 38840  008FF4  6AF8               	clrf	tblptru,c
 38841  008FF6  C060  FFD9         	movff	m_mem_cpy_len@d,fsr2l
 38842  008FFA  C061  FFDA         	movff	m_mem_cpy_len@d+1,fsr2h
 38843  008FFE  0E0F               	movlw	(high __ramtop+-1)
 38844  009000  64F7               	cpfsgt	tblptrh,c
 38845  009002  D003               	bra	u12817
 38846  009004  0008               	tblrd		*
 38847  009006  50F5               	movf	tablat,w,c
 38848  009008  D005               	bra	u12810
 38849  00900A                     u12817:
 38850  00900A  CFF6 FFE9          	movff	tblptrl,fsr0l
 38851  00900E  CFF7 FFEA          	movff	tblptrh,fsr0h
 38852  009012  50EF               	movf	indf0,w,c
 38853  009014                     u12810:
 38854  009014  6EDF               	movwf	indf2,c
 38855  009016  0100               	movlb	0	; () banked
 38856  009018  4B62               	infsnz	m_mem_cpy_len@s& (0+255),f,b
 38857  00901A  2B63               	incf	(m_mem_cpy_len@s+1)& (0+255),f,b
 38858                           
 38859                           ; BSR set to: 0
 38860  00901C  0100               	movlb	0	; () banked
 38861  00901E  4B60               	infsnz	m_mem_cpy_len@d& (0+255),f,b
 38862  009020  2B61               	incf	(m_mem_cpy_len@d+1)& (0+255),f,b
 38863                           
 38864                           ; BSR set to: 0
 38865                           ;m_string.c: 47: len--;
 38866  009022  0100               	movlb	0	; () banked
 38867  009024  0764               	decf	m_mem_cpy_len@len& (0+255),f,b
 38868  009026  A0D8               	btfss	status,0,c
 38869  009028  0765               	decf	(m_mem_cpy_len@len+1)& (0+255),f,b
 38870  00902A                     l13936:
 38871  00902A  0100               	movlb	0	; () banked
 38872  00902C  5164               	movf	m_mem_cpy_len@len& (0+255),w,b
 38873  00902E  0100               	movlb	0	; () banked
 38874  009030  1165               	iorwf	(m_mem_cpy_len@len+1)& (0+255),w,b
 38875  009032  B4D8               	btfsc	status,2,c
 38876  009034  0012               	return	
 38877  009036  D7DA               	goto	l13928
 38878  009038                     __end_of_m_mem_cpy_len:
 38879                           	opt stack 0
 38880                           tosu	equ	0xFFF
 38881                           tosh	equ	0xFFE
 38882                           tosl	equ	0xFFD
 38883                           pclath	equ	0xFFA
 38884                           tblptru	equ	0xFF8
 38885                           tblptrh	equ	0xFF7
 38886                           tblptrl	equ	0xFF6
 38887                           tablat	equ	0xFF5
 38888                           prodh	equ	0xFF4
 38889                           prodl	equ	0xFF3
 38890                           intcon	equ	0xFF2
 38891                           indf0	equ	0xFEF
 38892                           postinc0	equ	0xFEE
 38893                           fsr0h	equ	0xFEA
 38894                           fsr0l	equ	0xFE9
 38895                           wreg	equ	0xFE8
 38896                           indf1	equ	0xFE7
 38897                           postinc1	equ	0xFE6
 38898                           postdec1	equ	0xFE5
 38899                           plusw1	equ	0xFE3
 38900                           fsr1h	equ	0xFE2
 38901                           fsr1l	equ	0xFE1
 38902                           indf2	equ	0xFDF
 38903                           postinc2	equ	0xFDE
 38904                           postdec2	equ	0xFDD
 38905                           plusw2	equ	0xFDB
 38906                           fsr2h	equ	0xFDA
 38907                           fsr2l	equ	0xFD9
 38908                           status	equ	0xFD8
 38909                           
 38910 ;; *************** function _crc_append *****************
 38911 ;; Defined at:
 38912 ;;		line 86 in file "src/depend/crc16.c"
 38913 ;; Parameters:    Size  Location     Type
 38914 ;;  message         2   12[BANK0 ] PTR unsigned char 
 38915 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 38916 ;;  n               2   14[BANK0 ] unsigned int 
 38917 ;; Auto vars:     Size  Location     Type
 38918 ;;  crc             2   18[BANK0 ] unsigned int 
 38919 ;; Return value:  Size  Location     Type
 38920 ;;                  1    wreg      void 
 38921 ;; Registers used:
 38922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38923 ;; Tracked objects:
 38924 ;;		On entry : 0/0
 38925 ;;		On exit  : 0/0
 38926 ;;		Unchanged: 0/0
 38927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38931 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38932 ;;Total ram usage:        8 bytes
 38933 ;; Hardware stack levels used:    1
 38934 ;; Hardware stack levels required when called:    5
 38935 ;; This function calls:
 38936 ;;		_crc_sum
 38937 ;; This function is called by:
 38938 ;;		_data_sys_init
 38939 ;;		_calib_data_init_diff_pr
 38940 ;;		_calib_data_init_pr
 38941 ;;		___sys_data_save_write_flash
 38942 ;;		___set_short_diff_calib
 38943 ;;		___set_short_pr_calib
 38944 ;;		_data_sys_save
 38945 ;; This function uses a non-reentrant model
 38946 ;;
 38947                           
 38948                           	psect	text199
 38949  008828                     __ptext199:
 38950                           	opt stack 0
 38951  008828                     _crc_append:
 38952                           	opt stack 21
 38953                           
 38954                           ;crc16.c: 88: uint16_t crc;
 38955                           ;crc16.c: 89: crc = crc_sum(message, n);
 38956                           
 38957                           ; BSR set to: 0
 38958                           ;incstack = 0
 38959  008828  C06C  F060         	movff	crc_append@message,crc_sum@puchMsg
 38960  00882C  C06D  F061         	movff	crc_append@message+1,crc_sum@puchMsg+1
 38961  008830  C06E  F062         	movff	crc_append@n,crc_sum@usDataLen
 38962  008834  C06F  F063         	movff	crc_append@n+1,crc_sum@usDataLen+1
 38963  008838  ECD3  F039         	call	_crc_sum	;wreg free
 38964  00883C  C060  F072         	movff	?_crc_sum,crc_append@crc
 38965  008840  C061  F073         	movff	?_crc_sum+1,crc_append@crc+1
 38966                           
 38967                           ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
 38968  008844  0100               	movlb	0	; () banked
 38969  008846  516E               	movf	crc_append@n& (0+255),w,b
 38970  008848  0100               	movlb	0	; () banked
 38971  00884A  256C               	addwf	crc_append@message& (0+255),w,b
 38972  00884C  6ED9               	movwf	fsr2l,c
 38973  00884E  0100               	movlb	0	; () banked
 38974  008850  516F               	movf	(crc_append@n+1)& (0+255),w,b
 38975  008852  0100               	movlb	0	; () banked
 38976  008854  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 38977  008856  6EDA               	movwf	fsr2h,c
 38978  008858  C072  FFDF         	movff	crc_append@crc,indf2
 38979                           
 38980                           ; BSR set to: 0
 38981                           ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 38982  00885C  0E01               	movlw	1
 38983  00885E  0100               	movlb	0	; () banked
 38984  008860  256E               	addwf	crc_append@n& (0+255),w,b
 38985  008862  0100               	movlb	0	; () banked
 38986  008864  6F70               	movwf	??_crc_append& (0+255),b
 38987  008866  0E00               	movlw	0
 38988  008868  0100               	movlb	0	; () banked
 38989  00886A  216F               	addwfc	(crc_append@n+1)& (0+255),w,b
 38990  00886C  0100               	movlb	0	; () banked
 38991  00886E  6F71               	movwf	(??_crc_append+1)& (0+255),b
 38992  008870  0100               	movlb	0	; () banked
 38993  008872  5170               	movf	??_crc_append& (0+255),w,b
 38994  008874  0100               	movlb	0	; () banked
 38995  008876  256C               	addwf	crc_append@message& (0+255),w,b
 38996  008878  6ED9               	movwf	fsr2l,c
 38997  00887A  0100               	movlb	0	; () banked
 38998  00887C  5171               	movf	(??_crc_append+1)& (0+255),w,b
 38999  00887E  0100               	movlb	0	; () banked
 39000  008880  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 39001  008882  6EDA               	movwf	fsr2h,c
 39002  008884  0100               	movlb	0	; () banked
 39003  008886  5173               	movf	(crc_append@crc+1)& (0+255),w,b
 39004  008888  6EDF               	movwf	indf2,c
 39005                           
 39006                           ; BSR set to: 0
 39007  00888A  0012               	return		;funcret
 39008  00888C                     __end_of_crc_append:
 39009                           	opt stack 0
 39010                           tosu	equ	0xFFF
 39011                           tosh	equ	0xFFE
 39012                           tosl	equ	0xFFD
 39013                           pclath	equ	0xFFA
 39014                           tblptru	equ	0xFF8
 39015                           tblptrh	equ	0xFF7
 39016                           tblptrl	equ	0xFF6
 39017                           tablat	equ	0xFF5
 39018                           prodh	equ	0xFF4
 39019                           prodl	equ	0xFF3
 39020                           intcon	equ	0xFF2
 39021                           indf0	equ	0xFEF
 39022                           postinc0	equ	0xFEE
 39023                           fsr0h	equ	0xFEA
 39024                           fsr0l	equ	0xFE9
 39025                           wreg	equ	0xFE8
 39026                           indf1	equ	0xFE7
 39027                           postinc1	equ	0xFE6
 39028                           postdec1	equ	0xFE5
 39029                           plusw1	equ	0xFE3
 39030                           fsr1h	equ	0xFE2
 39031                           fsr1l	equ	0xFE1
 39032                           indf2	equ	0xFDF
 39033                           postinc2	equ	0xFDE
 39034                           postdec2	equ	0xFDD
 39035                           plusw2	equ	0xFDB
 39036                           fsr2h	equ	0xFDA
 39037                           fsr2l	equ	0xFD9
 39038                           status	equ	0xFD8
 39039                           
 39040 ;; *************** function _crc_sum *****************
 39041 ;; Defined at:
 39042 ;;		line 61 in file "src/depend/crc16.c"
 39043 ;; Parameters:    Size  Location     Type
 39044 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
 39045 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 39046 ;;  usDataLen       2    2[BANK0 ] unsigned int 
 39047 ;; Auto vars:     Size  Location     Type
 39048 ;;  uIndex          2    8[BANK0 ] unsigned int 
 39049 ;;  len             2    6[BANK0 ] unsigned int 
 39050 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 39051 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 39052 ;; Return value:  Size  Location     Type
 39053 ;;                  2    0[BANK0 ] unsigned int 
 39054 ;; Registers used:
 39055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39056 ;; Tracked objects:
 39057 ;;		On entry : 0/0
 39058 ;;		On exit  : 0/0
 39059 ;;		Unchanged: 0/0
 39060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39061 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39062 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39064 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39065 ;;Total ram usage:       12 bytes
 39066 ;; Hardware stack levels used:    1
 39067 ;; Hardware stack levels required when called:    4
 39068 ;; This function calls:
 39069 ;;		Nothing
 39070 ;; This function is called by:
 39071 ;;		_crc_verify
 39072 ;;		_crc_append
 39073 ;; This function uses a non-reentrant model
 39074 ;;
 39075                           
 39076                           	psect	text200
 39077  0073A6                     __ptext200:
 39078                           	opt stack 0
 39079  0073A6                     _crc_sum:
 39080                           	opt stack 21
 39081                           
 39082                           ;crc16.c: 63: uint16_t len;
 39083                           ;crc16.c: 64: len=usDataLen;
 39084                           
 39085                           ; BSR set to: 0
 39086                           ;incstack = 0
 39087  0073A6  C062  F066         	movff	crc_sum@usDataLen,crc_sum@len
 39088  0073AA  C063  F067         	movff	crc_sum@usDataLen+1,crc_sum@len+1
 39089                           
 39090                           ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
 39091  0073AE  0100               	movlb	0	; () banked
 39092  0073B0  696A               	setf	crc_sum@uchCRCHi& (0+255),b
 39093                           
 39094                           ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
 39095  0073B2  0100               	movlb	0	; () banked
 39096  0073B4  696B               	setf	crc_sum@uchCRCLo& (0+255),b
 39097                           
 39098                           ;crc16.c: 67: uint16_t uIndex ;
 39099                           ;crc16.c: 68: while (len--)
 39100  0073B6  D028               	goto	l14078
 39101  0073B8                     l14070:
 39102                           
 39103                           ; BSR set to: 0
 39104                           ;crc16.c: 69: {
 39105                           ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
 39106  0073B8  C060  FFD9         	movff	crc_sum@puchMsg,fsr2l
 39107  0073BC  C061  FFDA         	movff	crc_sum@puchMsg+1,fsr2h
 39108  0073C0  50DF               	movf	indf2,w,c
 39109  0073C2  0100               	movlb	0	; () banked
 39110  0073C4  196B               	xorwf	crc_sum@uchCRCLo& (0+255),w,b
 39111  0073C6  0100               	movlb	0	; () banked
 39112  0073C8  6F64               	movwf	??_crc_sum& (0+255),b
 39113  0073CA  0100               	movlb	0	; () banked
 39114  0073CC  5164               	movf	??_crc_sum& (0+255),w,b
 39115  0073CE  0100               	movlb	0	; () banked
 39116  0073D0  6F68               	movwf	crc_sum@uIndex& (0+255),b
 39117  0073D2  6B69               	clrf	(crc_sum@uIndex+1)& (0+255),b
 39118                           
 39119                           ; BSR set to: 0
 39120  0073D4  0100               	movlb	0	; () banked
 39121  0073D6  4B60               	infsnz	crc_sum@puchMsg& (0+255),f,b
 39122  0073D8  2B61               	incf	(crc_sum@puchMsg+1)& (0+255),f,b
 39123                           
 39124                           ; BSR set to: 0
 39125                           ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
 39126  0073DA  0EB1               	movlw	low _auchCRCHi
 39127  0073DC  0100               	movlb	0	; () banked
 39128  0073DE  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 39129  0073E0  6EF6               	movwf	tblptrl,c
 39130  0073E2  0EED               	movlw	high _auchCRCHi
 39131  0073E4  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 39132  0073E6  6EF7               	movwf	tblptrh,c
 39133  0073E8                     	if	0	;There are less than 3 active tblptr bytes
 39134  0073E8                     	endif
 39135  0073E8  0008               	tblrd		*
 39136  0073EA  50F5               	movf	tablat,w,c
 39137  0073EC  0100               	movlb	0	; () banked
 39138  0073EE  196A               	xorwf	crc_sum@uchCRCHi& (0+255),w,b
 39139  0073F0  0100               	movlb	0	; () banked
 39140  0073F2  6F6B               	movwf	crc_sum@uchCRCLo& (0+255),b
 39141                           
 39142                           ; BSR set to: 0
 39143                           ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
 39144  0073F4  0EB1               	movlw	low _auchCRCLo
 39145  0073F6  0100               	movlb	0	; () banked
 39146  0073F8  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 39147  0073FA  6EF6               	movwf	tblptrl,c
 39148  0073FC  0EEC               	movlw	high _auchCRCLo
 39149  0073FE  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 39150  007400  6EF7               	movwf	tblptrh,c
 39151  007402                     	if	0	;There are less than 3 active tblptr bytes
 39152  007402                     	endif
 39153  007402  0008               	tblrd		*
 39154  007404  CFF5 F06A          	movff	tablat,crc_sum@uchCRCHi
 39155  007408                     l14078:
 39156                           
 39157                           ; BSR set to: 0
 39158  007408  0100               	movlb	0	; () banked
 39159  00740A  0766               	decf	crc_sum@len& (0+255),f,b
 39160  00740C  A0D8               	btfss	status,0,c
 39161  00740E  0767               	decf	(crc_sum@len+1)& (0+255),f,b
 39162  007410  0100               	movlb	0	; () banked
 39163  007412  2966               	incf	crc_sum@len& (0+255),w,b
 39164  007414  E1D1               	bnz	l14070
 39165  007416  0100               	movlb	0	; () banked
 39166  007418  2967               	incf	(crc_sum@len+1)& (0+255),w,b
 39167  00741A  A4D8               	btfss	status,2,c
 39168  00741C  D7CD               	goto	l14070
 39169                           
 39170                           ; BSR set to: 0
 39171                           ;crc16.c: 73: }
 39172                           ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
 39173                           
 39174                           ; BSR set to: 0
 39175  00741E  0100               	movlb	0	; () banked
 39176  007420  516B               	movf	crc_sum@uchCRCLo& (0+255),w,b
 39177  007422  C06A  F064         	movff	crc_sum@uchCRCHi,??_crc_sum
 39178  007426  0100               	movlb	0	; () banked
 39179  007428  6B65               	clrf	(??_crc_sum+1)& (0+255),b
 39180  00742A  C064  F065         	movff	??_crc_sum,??_crc_sum+1
 39181  00742E  0100               	movlb	0	; () banked
 39182  007430  6B64               	clrf	??_crc_sum& (0+255),b
 39183  007432  0100               	movlb	0	; () banked
 39184  007434  1164               	iorwf	??_crc_sum& (0+255),w,b
 39185  007436  0100               	movlb	0	; () banked
 39186  007438  6F60               	movwf	?_crc_sum& (0+255),b
 39187  00743A  0100               	movlb	0	; () banked
 39188  00743C  5165               	movf	(??_crc_sum+1)& (0+255),w,b
 39189  00743E  0100               	movlb	0	; () banked
 39190  007440  6F61               	movwf	(?_crc_sum+1)& (0+255),b
 39191  007442  0012               	return	
 39192  007444                     __end_of_crc_sum:
 39193                           	opt stack 0
 39194                           tosu	equ	0xFFF
 39195                           tosh	equ	0xFFE
 39196                           tosl	equ	0xFFD
 39197                           pclath	equ	0xFFA
 39198                           tblptru	equ	0xFF8
 39199                           tblptrh	equ	0xFF7
 39200                           tblptrl	equ	0xFF6
 39201                           tablat	equ	0xFF5
 39202                           prodh	equ	0xFF4
 39203                           prodl	equ	0xFF3
 39204                           intcon	equ	0xFF2
 39205                           indf0	equ	0xFEF
 39206                           postinc0	equ	0xFEE
 39207                           fsr0h	equ	0xFEA
 39208                           fsr0l	equ	0xFE9
 39209                           wreg	equ	0xFE8
 39210                           indf1	equ	0xFE7
 39211                           postinc1	equ	0xFE6
 39212                           postdec1	equ	0xFE5
 39213                           plusw1	equ	0xFE3
 39214                           fsr1h	equ	0xFE2
 39215                           fsr1l	equ	0xFE1
 39216                           indf2	equ	0xFDF
 39217                           postinc2	equ	0xFDE
 39218                           postdec2	equ	0xFDD
 39219                           plusw2	equ	0xFDB
 39220                           fsr2h	equ	0xFDA
 39221                           fsr2l	equ	0xFD9
 39222                           status	equ	0xFD8
 39223                           
 39224 ;; *************** function _calib_data_set_default_diff_pr *****************
 39225 ;; Defined at:
 39226 ;;		line 227 in file "src/api/data.c"
 39227 ;; Parameters:    Size  Location     Type
 39228 ;;		None
 39229 ;; Auto vars:     Size  Location     Type
 39230 ;;  i               1   15[BANK0 ] unsigned char 
 39231 ;;  j               1   14[BANK0 ] unsigned char 
 39232 ;; Return value:  Size  Location     Type
 39233 ;;                  1    wreg      void 
 39234 ;; Registers used:
 39235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39236 ;; Tracked objects:
 39237 ;;		On entry : 0/0
 39238 ;;		On exit  : 0/0
 39239 ;;		Unchanged: 0/0
 39240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39243 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39244 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39245 ;;Total ram usage:        8 bytes
 39246 ;; Hardware stack levels used:    1
 39247 ;; Hardware stack levels required when called:    5
 39248 ;; This function calls:
 39249 ;;		___wmul
 39250 ;; This function is called by:
 39251 ;;		_calib_data_init_diff_pr
 39252 ;; This function uses a non-reentrant model
 39253 ;;
 39254                           
 39255                           	psect	text201
 39256  00355C                     __ptext201:
 39257                           	opt stack 0
 39258  00355C                     _calib_data_set_default_diff_pr:
 39259                           	opt stack 23
 39260                           
 39261                           ;data.c: 229: uint8_t i,j;
 39262                           ;data.c: 230: diff_prCalibTabDef.rowCount=3;
 39263                           
 39264                           ; BSR set to: 0
 39265                           ;incstack = 0
 39266  00355C  0E03               	movlw	3
 39267  00355E  0103               	movlb	3	; () banked
 39268  003560  6F10               	movwf	_diff_prCalibTabDef& (0+255),b
 39269                           
 39270                           ;data.c: 231: for(i=0;i<3;i++){
 39271  003562  0E00               	movlw	0
 39272  003564  0100               	movlb	0	; () banked
 39273  003566  6F6F               	movwf	calib_data_set_default_diff_pr@i& (0+255),b
 39274  003568                     l15524:
 39275                           
 39276                           ; BSR set to: 0
 39277  003568  0E02               	movlw	2
 39278  00356A  0100               	movlb	0	; () banked
 39279  00356C  656F               	cpfsgt	calib_data_set_default_diff_pr@i& (0+255),b
 39280  00356E  D001               	goto	l15528
 39281  003570  0012               	return	
 39282  003572                     l15528:
 39283                           
 39284                           ; BSR set to: 0
 39285                           ;data.c: 232: diff_prCalibTabDef.prCalibRow[i].pCount=6;
 39286  003572  0100               	movlb	0	; () banked
 39287  003574  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 39288  003576  0D34               	mullw	52
 39289  003578  0E14               	movlw	low (_diff_prCalibTabDef+4)
 39290  00357A  24F3               	addwf	prodl,w,c
 39291  00357C  6ED9               	movwf	fsr2l,c
 39292  00357E  0E03               	movlw	high (_diff_prCalibTabDef+4)
 39293  003580  20F4               	addwfc	prodh,w,c
 39294  003582  6EDA               	movwf	fsr2h,c
 39295  003584  0E06               	movlw	6
 39296  003586  6EDF               	movwf	indf2,c
 39297                           
 39298                           ; BSR set to: 0
 39299                           ;data.c: 233: for(j=0;j<6;j++){
 39300  003588  0E00               	movlw	0
 39301  00358A  0100               	movlb	0	; () banked
 39302  00358C  6F6E               	movwf	calib_data_set_default_diff_pr@j& (0+255),b
 39303  00358E                     l15532:
 39304                           
 39305                           ; BSR set to: 0
 39306  00358E  0E05               	movlw	5
 39307  003590  0100               	movlb	0	; () banked
 39308  003592  656E               	cpfsgt	calib_data_set_default_diff_pr@j& (0+255),b
 39309  003594  D001               	goto	l15536
 39310  003596  D0CE               	goto	l15542
 39311  003598                     l15536:
 39312                           
 39313                           ; BSR set to: 0
 39314                           ;data.c: 234: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 39315  003598  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 39316  00359C  0100               	movlb	0	; () banked
 39317  00359E  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39318  0035A0  0E17               	movlw	23
 39319  0035A2  0100               	movlb	0	; () banked
 39320  0035A4  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39321  0035A6  0E70               	movlw	112
 39322  0035A8  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39323  0035AA  EC68  F04A         	call	___wmul	;wreg free
 39324  0035AE  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 39325  0035B2  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 39326  0035B6  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 39327  0035BA  0100               	movlb	0	; () banked
 39328  0035BC  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39329  0035BE  0E01               	movlw	1
 39330  0035C0  0100               	movlb	0	; () banked
 39331  0035C2  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39332  0035C4  0EF4               	movlw	244
 39333  0035C6  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39334  0035C8  EC68  F04A         	call	___wmul	;wreg free
 39335  0035CC  0100               	movlb	0	; () banked
 39336  0035CE  5162               	movf	?___wmul& (0+255),w,b
 39337  0035D0  0100               	movlb	0	; () banked
 39338  0035D2  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 39339  0035D4  0100               	movlb	0	; () banked
 39340  0035D6  5163               	movf	(?___wmul+1)& (0+255),w,b
 39341  0035D8  0100               	movlb	0	; () banked
 39342  0035DA  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 39343  0035DC  0100               	movlb	0	; () banked
 39344  0035DE  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 39345  0035E0  0D08               	mullw	8
 39346  0035E2  0E04               	movlw	4
 39347  0035E4  26F3               	addwf	prodl,f,c
 39348  0035E6  0E00               	movlw	0
 39349  0035E8  22F4               	addwfc	prodh,f,c
 39350  0035EA  0E10               	movlw	low _diff_prCalibTabDef
 39351  0035EC  0100               	movlb	0	; () banked
 39352  0035EE  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 39353  0035F0  0E03               	movlw	high _diff_prCalibTabDef
 39354  0035F2  0100               	movlb	0	; () banked
 39355  0035F4  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 39356  0035F6  0E04               	movlw	4
 39357  0035F8  0100               	movlb	0	; () banked
 39358  0035FA  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 39359  0035FC  0E00               	movlw	0
 39360  0035FE  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 39361  003600  50F3               	movf	prodl,w,c
 39362  003602  0100               	movlb	0	; () banked
 39363  003604  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 39364  003606  50F4               	movf	prodh,w,c
 39365  003608  0100               	movlb	0	; () banked
 39366  00360A  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 39367  00360C  0100               	movlb	0	; () banked
 39368  00360E  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 39369  003610  0D34               	mullw	52
 39370  003612  50F3               	movf	prodl,w,c
 39371  003614  0100               	movlb	0	; () banked
 39372  003616  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 39373  003618  50F4               	movf	prodh,w,c
 39374  00361A  0100               	movlb	0	; () banked
 39375  00361C  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 39376  00361E  0E04               	movlw	4
 39377  003620  0100               	movlb	0	; () banked
 39378  003622  256A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),w,b
 39379  003624  6ED9               	movwf	fsr2l,c
 39380  003626  0E00               	movlw	0
 39381  003628  0100               	movlb	0	; () banked
 39382  00362A  216B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),w,b
 39383  00362C  6EDA               	movwf	fsr2h,c
 39384  00362E  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 39385  003632  C069  FFDD         	movff	??_calib_data_set_default_diff_pr+1,postdec2
 39386                           
 39387                           ;data.c: 235: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 39388  003636  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 39389  00363A  0100               	movlb	0	; () banked
 39390  00363C  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39391  00363E  0E17               	movlw	23
 39392  003640  0100               	movlb	0	; () banked
 39393  003642  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39394  003644  0E70               	movlw	112
 39395  003646  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39396  003648  EC68  F04A         	call	___wmul	;wreg free
 39397  00364C  0100               	movlb	0	; () banked
 39398  00364E  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 39399  003652  0100               	movlb	0	; () banked
 39400  003654  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 39401  003658  0E00               	movlw	0
 39402  00365A  0100               	movlb	0	; () banked
 39403  00365C  BF69               	btfsc	(??_calib_data_set_default_diff_pr+1)& (0+255),7,b
 39404  00365E  0EFF               	movlw	255
 39405  003660  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 39406  003662  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 39407  003664  0100               	movlb	0	; () banked
 39408  003666  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 39409  003668  0D08               	mullw	8
 39410  00366A  0E04               	movlw	4
 39411  00366C  26F3               	addwf	prodl,f,c
 39412  00366E  0E00               	movlw	0
 39413  003670  22F4               	addwfc	prodh,f,c
 39414  003672  0E10               	movlw	low _diff_prCalibTabDef
 39415  003674  0100               	movlb	0	; () banked
 39416  003676  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 39417  003678  0E03               	movlw	high _diff_prCalibTabDef
 39418  00367A  0100               	movlb	0	; () banked
 39419  00367C  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 39420  00367E  0E04               	movlw	4
 39421  003680  0100               	movlb	0	; () banked
 39422  003682  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 39423  003684  0E00               	movlw	0
 39424  003686  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 39425  003688  50F3               	movf	prodl,w,c
 39426  00368A  0100               	movlb	0	; () banked
 39427  00368C  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 39428  00368E  50F4               	movf	prodh,w,c
 39429  003690  0100               	movlb	0	; () banked
 39430  003692  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 39431  003694  0100               	movlb	0	; () banked
 39432  003696  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 39433  003698  0D34               	mullw	52
 39434  00369A  50F3               	movf	prodl,w,c
 39435  00369C  0100               	movlb	0	; () banked
 39436  00369E  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 39437  0036A0  6ED9               	movwf	fsr2l,c
 39438  0036A2  50F4               	movf	prodh,w,c
 39439  0036A4  0100               	movlb	0	; () banked
 39440  0036A6  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 39441  0036A8  6EDA               	movwf	fsr2h,c
 39442  0036AA  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 39443  0036AE  C069  FFDE         	movff	??_calib_data_set_default_diff_pr+1,postinc2
 39444  0036B2  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 39445  0036B6  C06B  FFDE         	movff	??_calib_data_set_default_diff_pr+3,postinc2
 39446                           
 39447                           ;data.c: 236: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=i*1000;
 39448  0036BA  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 39449  0036BE  0100               	movlb	0	; () banked
 39450  0036C0  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39451  0036C2  0E03               	movlw	3
 39452  0036C4  0100               	movlb	0	; () banked
 39453  0036C6  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39454  0036C8  0EE8               	movlw	232
 39455  0036CA  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39456  0036CC  EC68  F04A         	call	___wmul	;wreg free
 39457  0036D0  0100               	movlb	0	; () banked
 39458  0036D2  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 39459  0036D4  0D08               	mullw	8
 39460  0036D6  0E04               	movlw	4
 39461  0036D8  26F3               	addwf	prodl,f,c
 39462  0036DA  0E00               	movlw	0
 39463  0036DC  22F4               	addwfc	prodh,f,c
 39464  0036DE  0E10               	movlw	low _diff_prCalibTabDef
 39465  0036E0  0100               	movlb	0	; () banked
 39466  0036E2  6F68               	movwf	??_calib_data_set_default_diff_pr& (0+255),b
 39467  0036E4  0E03               	movlw	high _diff_prCalibTabDef
 39468  0036E6  0100               	movlb	0	; () banked
 39469  0036E8  6F69               	movwf	(??_calib_data_set_default_diff_pr+1)& (0+255),b
 39470  0036EA  0E04               	movlw	4
 39471  0036EC  0100               	movlb	0	; () banked
 39472  0036EE  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 39473  0036F0  0E00               	movlw	0
 39474  0036F2  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 39475  0036F4  50F3               	movf	prodl,w,c
 39476  0036F6  0100               	movlb	0	; () banked
 39477  0036F8  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 39478  0036FA  50F4               	movf	prodh,w,c
 39479  0036FC  0100               	movlb	0	; () banked
 39480  0036FE  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 39481  003700  0100               	movlb	0	; () banked
 39482  003702  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 39483  003704  0D34               	mullw	52
 39484  003706  50F3               	movf	prodl,w,c
 39485  003708  0100               	movlb	0	; () banked
 39486  00370A  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 39487  00370C  50F4               	movf	prodh,w,c
 39488  00370E  0100               	movlb	0	; () banked
 39489  003710  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 39490  003712  0E06               	movlw	6
 39491  003714  0100               	movlb	0	; () banked
 39492  003716  2568               	addwf	??_calib_data_set_default_diff_pr& (0+255),w,b
 39493  003718  6ED9               	movwf	fsr2l,c
 39494  00371A  0E00               	movlw	0
 39495  00371C  0100               	movlb	0	; () banked
 39496  00371E  2169               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),w,b
 39497  003720  6EDA               	movwf	fsr2h,c
 39498  003722  0100               	movlb	0	; () banked
 39499  003724  C062  FFDE         	movff	?___wmul,postinc2
 39500  003728  0100               	movlb	0	; () banked
 39501  00372A  C063  FFDD         	movff	?___wmul+1,postdec2
 39502                           
 39503                           ; BSR set to: 0
 39504  00372E  0100               	movlb	0	; () banked
 39505  003730  2B6E               	incf	calib_data_set_default_diff_pr@j& (0+255),f,b
 39506  003732  D72D               	goto	l15532
 39507  003734                     l15542:
 39508                           
 39509                           ; BSR set to: 0
 39510  003734  0100               	movlb	0	; () banked
 39511  003736  2B6F               	incf	calib_data_set_default_diff_pr@i& (0+255),f,b
 39512  003738  D717               	goto	l15524
 39513  00373A                     __end_of_calib_data_set_default_diff_pr:
 39514                           	opt stack 0
 39515                           tosu	equ	0xFFF
 39516                           tosh	equ	0xFFE
 39517                           tosl	equ	0xFFD
 39518                           pclath	equ	0xFFA
 39519                           tblptru	equ	0xFF8
 39520                           tblptrh	equ	0xFF7
 39521                           tblptrl	equ	0xFF6
 39522                           tablat	equ	0xFF5
 39523                           prodh	equ	0xFF4
 39524                           prodl	equ	0xFF3
 39525                           intcon	equ	0xFF2
 39526                           indf0	equ	0xFEF
 39527                           postinc0	equ	0xFEE
 39528                           fsr0h	equ	0xFEA
 39529                           fsr0l	equ	0xFE9
 39530                           wreg	equ	0xFE8
 39531                           indf1	equ	0xFE7
 39532                           postinc1	equ	0xFE6
 39533                           postdec1	equ	0xFE5
 39534                           plusw1	equ	0xFE3
 39535                           fsr1h	equ	0xFE2
 39536                           fsr1l	equ	0xFE1
 39537                           indf2	equ	0xFDF
 39538                           postinc2	equ	0xFDE
 39539                           postdec2	equ	0xFDD
 39540                           plusw2	equ	0xFDB
 39541                           fsr2h	equ	0xFDA
 39542                           fsr2l	equ	0xFD9
 39543                           status	equ	0xFD8
 39544                           
 39545 ;; *************** function ___wmul *****************
 39546 ;; Defined at:
 39547 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 39548 ;; Parameters:    Size  Location     Type
 39549 ;;  multiplier      2    2[BANK0 ] unsigned int 
 39550 ;;  multiplicand    2    4[BANK0 ] unsigned int 
 39551 ;; Auto vars:     Size  Location     Type
 39552 ;;  product         2    6[BANK0 ] unsigned int 
 39553 ;; Return value:  Size  Location     Type
 39554 ;;                  2    2[BANK0 ] unsigned int 
 39555 ;; Registers used:
 39556 ;;		wreg, status,2, status,0, prodl, prodh
 39557 ;; Tracked objects:
 39558 ;;		On entry : 0/0
 39559 ;;		On exit  : 0/0
 39560 ;;		Unchanged: 0/0
 39561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39566 ;;Total ram usage:        6 bytes
 39567 ;; Hardware stack levels used:    1
 39568 ;; Hardware stack levels required when called:    4
 39569 ;; This function calls:
 39570 ;;		Nothing
 39571 ;; This function is called by:
 39572 ;;		_calib_data_set_default_diff_pr
 39573 ;;		_calib_data_set_default_pr
 39574 ;;		_key_adj_value_fixed
 39575 ;; This function uses a non-reentrant model
 39576 ;;
 39577                           
 39578                           	psect	text202
 39579  0094D0                     __ptext202:
 39580                           	opt stack 0
 39581  0094D0                     ___wmul:
 39582                           	opt stack 21
 39583                           
 39584                           ; BSR set to: 0
 39585                           ;incstack = 0
 39586  0094D0  0100               	movlb	0	; () banked
 39587  0094D2  5162               	movf	___wmul@multiplier& (0+255),w,b
 39588  0094D4  0100               	movlb	0	; () banked
 39589  0094D6  0364               	mulwf	___wmul@multiplicand& (0+255),b
 39590  0094D8  CFF3 F066          	movff	prodl,___wmul@product
 39591  0094DC  CFF4 F067          	movff	prodh,___wmul@product+1
 39592  0094E0  0100               	movlb	0	; () banked
 39593  0094E2  5162               	movf	___wmul@multiplier& (0+255),w,b
 39594  0094E4  0100               	movlb	0	; () banked
 39595  0094E6  0365               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 39596  0094E8  50F3               	movf	prodl,w,c
 39597  0094EA  0100               	movlb	0	; () banked
 39598  0094EC  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 39599  0094EE  0100               	movlb	0	; () banked
 39600  0094F0  5163               	movf	(___wmul@multiplier+1)& (0+255),w,b
 39601  0094F2  0100               	movlb	0	; () banked
 39602  0094F4  0364               	mulwf	___wmul@multiplicand& (0+255),b
 39603  0094F6  50F3               	movf	prodl,w,c
 39604  0094F8  0100               	movlb	0	; () banked
 39605  0094FA  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 39606                           
 39607                           ; BSR set to: 0
 39608  0094FC  C066  F062         	movff	___wmul@product,?___wmul
 39609  009500  C067  F063         	movff	___wmul@product+1,?___wmul+1
 39610  009504  0012               	return	
 39611  009506                     __end_of___wmul:
 39612                           	opt stack 0
 39613                           tosu	equ	0xFFF
 39614                           tosh	equ	0xFFE
 39615                           tosl	equ	0xFFD
 39616                           pclath	equ	0xFFA
 39617                           tblptru	equ	0xFF8
 39618                           tblptrh	equ	0xFF7
 39619                           tblptrl	equ	0xFF6
 39620                           tablat	equ	0xFF5
 39621                           prodh	equ	0xFF4
 39622                           prodl	equ	0xFF3
 39623                           intcon	equ	0xFF2
 39624                           indf0	equ	0xFEF
 39625                           postinc0	equ	0xFEE
 39626                           fsr0h	equ	0xFEA
 39627                           fsr0l	equ	0xFE9
 39628                           wreg	equ	0xFE8
 39629                           indf1	equ	0xFE7
 39630                           postinc1	equ	0xFE6
 39631                           postdec1	equ	0xFE5
 39632                           plusw1	equ	0xFE3
 39633                           fsr1h	equ	0xFE2
 39634                           fsr1l	equ	0xFE1
 39635                           indf2	equ	0xFDF
 39636                           postinc2	equ	0xFDE
 39637                           postdec2	equ	0xFDD
 39638                           plusw2	equ	0xFDB
 39639                           fsr2h	equ	0xFDA
 39640                           fsr2l	equ	0xFD9
 39641                           status	equ	0xFD8
 39642                           
 39643 ;; *************** function _at24c02_write_n_byte *****************
 39644 ;; Defined at:
 39645 ;;		line 70 in file "src/driver/ex_eeprom.c"
 39646 ;; Parameters:    Size  Location     Type
 39647 ;;  pAt24c02        2    6[BANK0 ] PTR struct .
 39648 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 39649 ;;  addr            1    8[BANK0 ] unsigned char 
 39650 ;;  buf             2    9[BANK0 ] PTR unsigned char 
 39651 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 39652 ;;  len             2   11[BANK0 ] unsigned int 
 39653 ;; Auto vars:     Size  Location     Type
 39654 ;;  i               2   13[BANK0 ] unsigned int 
 39655 ;; Return value:  Size  Location     Type
 39656 ;;                  1    wreg      void 
 39657 ;; Registers used:
 39658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 39659 ;; Tracked objects:
 39660 ;;		On entry : 0/0
 39661 ;;		On exit  : 0/0
 39662 ;;		Unchanged: 0/0
 39663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39664 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39667 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39668 ;;Total ram usage:        9 bytes
 39669 ;; Hardware stack levels used:    1
 39670 ;; Hardware stack levels required when called:    8
 39671 ;; This function calls:
 39672 ;;		_delay_ms
 39673 ;;		_iic_send_byte
 39674 ;;		_iic_start
 39675 ;;		_iic_stop
 39676 ;; This function is called by:
 39677 ;;		_calib_data_init_diff_pr
 39678 ;;		_calib_data_init_pr
 39679 ;;		___set_short_diff_calib
 39680 ;;		___set_short_pr_calib
 39681 ;; This function uses a non-reentrant model
 39682 ;;
 39683                           
 39684                           	psect	text203
 39685  005392                     __ptext203:
 39686                           	opt stack 0
 39687  005392                     _at24c02_write_n_byte:
 39688                           	opt stack 19
 39689                           
 39690                           ;ex_eeprom.c: 72: uint16_t i;
 39691                           ;ex_eeprom.c: 73: for(i=0;i<len;i++){
 39692                           
 39693                           ; BSR set to: 0
 39694                           ;incstack = 0
 39695  005392  0E00               	movlw	0
 39696  005394  0100               	movlb	0	; () banked
 39697  005396  6F6E               	movwf	(at24c02_write_n_byte@i+1)& (0+255),b
 39698  005398  0E00               	movlw	0
 39699  00539A  6F6D               	movwf	at24c02_write_n_byte@i& (0+255),b
 39700  00539C  D07A               	goto	l14960
 39701  00539E                     l14948:
 39702                           
 39703                           ; BSR set to: 0
 39704                           ;ex_eeprom.c: 74: pAt24c02->iic_start();
 39705  00539E  0100               	movlb	0	; () banked
 39706  0053A0  EE20 F001          	lfsr	2,1
 39707  0053A4  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 39708  0053A6  26D9               	addwf	fsr2l,f,c
 39709  0053A8  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 39710  0053AA  22DA               	addwfc	fsr2h,f,c
 39711  0053AC  D801               	call	u14138
 39712  0053AE  D00A               	goto	u14139
 39713  0053B0                     u14138:
 39714  0053B0  0005               	push	
 39715  0053B2  6EFA               	movwf	pclath,c
 39716  0053B4  50DE               	movf	postinc2,w,c
 39717  0053B6  6EFD               	movwf	tosl,c
 39718  0053B8  50DE               	movf	postinc2,w,c
 39719  0053BA  6EFE               	movwf	tosh,c
 39720  0053BC  50F8               	movf	tblptru,w,c
 39721  0053BE  6EFF               	movwf	tosu,c
 39722  0053C0  50FA               	movf	pclath,w,c
 39723  0053C2  0012               	return		;indir
 39724  0053C4                     u14139:
 39725                           
 39726                           ;ex_eeprom.c: 75: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 39727  0053C4  0100               	movlb	0	; () banked
 39728  0053C6  EE20 F005          	lfsr	2,5
 39729  0053CA  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 39730  0053CC  26D9               	addwf	fsr2l,f,c
 39731  0053CE  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 39732  0053D0  22DA               	addwfc	fsr2h,f,c
 39733  0053D2  D801               	call	u14148
 39734  0053D4  D00F               	goto	u14149
 39735  0053D6                     u14148:
 39736  0053D6  0005               	push	
 39737  0053D8  6EFA               	movwf	pclath,c
 39738  0053DA  50DE               	movf	postinc2,w,c
 39739  0053DC  6EFD               	movwf	tosl,c
 39740  0053DE  50DE               	movf	postinc2,w,c
 39741  0053E0  6EFE               	movwf	tosh,c
 39742  0053E2  50F8               	movf	tblptru,w,c
 39743  0053E4  6EFF               	movwf	tosu,c
 39744  0053E6  50FA               	movf	pclath,w,c
 39745  0053E8  C066  FFD9         	movff	at24c02_write_n_byte@pAt24c02,fsr2l
 39746  0053EC  C067  FFDA         	movff	at24c02_write_n_byte@pAt24c02+1,fsr2h
 39747  0053F0  50DF               	movf	indf2,w,c
 39748  0053F2  0012               	return		;indir
 39749  0053F4                     u14149:
 39750                           
 39751                           ;ex_eeprom.c: 76: pAt24c02->iic_send_byte(addr++);
 39752  0053F4  0100               	movlb	0	; () banked
 39753  0053F6  EE20 F005          	lfsr	2,5
 39754  0053FA  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 39755  0053FC  26D9               	addwf	fsr2l,f,c
 39756  0053FE  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 39757  005400  22DA               	addwfc	fsr2h,f,c
 39758  005402  D801               	call	u14158
 39759  005404  D00C               	goto	l14950
 39760  005406                     u14158:
 39761  005406  0005               	push	
 39762  005408  6EFA               	movwf	pclath,c
 39763  00540A  50DE               	movf	postinc2,w,c
 39764  00540C  6EFD               	movwf	tosl,c
 39765  00540E  50DE               	movf	postinc2,w,c
 39766  005410  6EFE               	movwf	tosh,c
 39767  005412  50F8               	movf	tblptru,w,c
 39768  005414  6EFF               	movwf	tosu,c
 39769  005416  50FA               	movf	pclath,w,c
 39770  005418  0100               	movlb	0	; () banked
 39771  00541A  5168               	movf	at24c02_write_n_byte@addr& (0+255),w,b
 39772  00541C  0012               	return		;indir
 39773  00541E                     l14950:
 39774  00541E  0100               	movlb	0	; () banked
 39775  005420  2B68               	incf	at24c02_write_n_byte@addr& (0+255),f,b
 39776                           
 39777                           ; BSR set to: 0
 39778                           ;ex_eeprom.c: 78: pAt24c02->iic_send_byte(*buf++);
 39779  005422  0100               	movlb	0	; () banked
 39780  005424  EE20 F005          	lfsr	2,5
 39781  005428  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 39782  00542A  26D9               	addwf	fsr2l,f,c
 39783  00542C  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 39784  00542E  22DA               	addwfc	fsr2h,f,c
 39785  005430  D801               	call	u14168
 39786  005432  D00F               	goto	u14169
 39787  005434                     u14168:
 39788  005434  0005               	push	
 39789  005436  6EFA               	movwf	pclath,c
 39790  005438  50DE               	movf	postinc2,w,c
 39791  00543A  6EFD               	movwf	tosl,c
 39792  00543C  50DE               	movf	postinc2,w,c
 39793  00543E  6EFE               	movwf	tosh,c
 39794  005440  50F8               	movf	tblptru,w,c
 39795  005442  6EFF               	movwf	tosu,c
 39796  005444  50FA               	movf	pclath,w,c
 39797  005446  C069  FFD9         	movff	at24c02_write_n_byte@buf,fsr2l
 39798  00544A  C06A  FFDA         	movff	at24c02_write_n_byte@buf+1,fsr2h
 39799  00544E  50DF               	movf	indf2,w,c
 39800  005450  0012               	return		;indir
 39801  005452                     u14169:
 39802  005452  0100               	movlb	0	; () banked
 39803  005454  4B69               	infsnz	at24c02_write_n_byte@buf& (0+255),f,b
 39804  005456  2B6A               	incf	(at24c02_write_n_byte@buf+1)& (0+255),f,b
 39805                           
 39806                           ; BSR set to: 0
 39807                           ;ex_eeprom.c: 79: pAt24c02->iic_stop();
 39808  005458  0100               	movlb	0	; () banked
 39809  00545A  EE20 F003          	lfsr	2,3
 39810  00545E  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 39811  005460  26D9               	addwf	fsr2l,f,c
 39812  005462  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 39813  005464  22DA               	addwfc	fsr2h,f,c
 39814  005466  D801               	call	u14178
 39815  005468  D00A               	goto	l14956
 39816  00546A                     u14178:
 39817  00546A  0005               	push	
 39818  00546C  6EFA               	movwf	pclath,c
 39819  00546E  50DE               	movf	postinc2,w,c
 39820  005470  6EFD               	movwf	tosl,c
 39821  005472  50DE               	movf	postinc2,w,c
 39822  005474  6EFE               	movwf	tosh,c
 39823  005476  50F8               	movf	tblptru,w,c
 39824  005478  6EFF               	movwf	tosu,c
 39825  00547A  50FA               	movf	pclath,w,c
 39826  00547C  0012               	return		;indir
 39827  00547E                     l14956:
 39828                           
 39829                           ;ex_eeprom.c: 80: delay_ms(1);
 39830  00547E  0E00               	movlw	0
 39831  005480  0100               	movlb	0	; () banked
 39832  005482  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 39833  005484  0E01               	movlw	1
 39834  005486  6F64               	movwf	delay_ms@dly& (0+255),b
 39835  005488  EC7F  F04C         	call	_delay_ms
 39836  00548C  0100               	movlb	0	; () banked
 39837  00548E  4B6D               	infsnz	at24c02_write_n_byte@i& (0+255),f,b
 39838  005490  2B6E               	incf	(at24c02_write_n_byte@i+1)& (0+255),f,b
 39839  005492                     l14960:
 39840                           
 39841                           ; BSR set to: 0
 39842  005492  0100               	movlb	0	; () banked
 39843  005494  516B               	movf	at24c02_write_n_byte@len& (0+255),w,b
 39844  005496  0100               	movlb	0	; () banked
 39845  005498  5D6D               	subwf	at24c02_write_n_byte@i& (0+255),w,b
 39846  00549A  0100               	movlb	0	; () banked
 39847  00549C  516C               	movf	(at24c02_write_n_byte@len+1)& (0+255),w,b
 39848  00549E  0100               	movlb	0	; () banked
 39849  0054A0  596E               	subwfb	(at24c02_write_n_byte@i+1)& (0+255),w,b
 39850  0054A2  B0D8               	btfsc	status,0,c
 39851  0054A4  0012               	return	
 39852  0054A6  D77B               	goto	l14948
 39853  0054A8                     __end_of_at24c02_write_n_byte:
 39854                           	opt stack 0
 39855                           tosu	equ	0xFFF
 39856                           tosh	equ	0xFFE
 39857                           tosl	equ	0xFFD
 39858                           pclath	equ	0xFFA
 39859                           tblptru	equ	0xFF8
 39860                           tblptrh	equ	0xFF7
 39861                           tblptrl	equ	0xFF6
 39862                           tablat	equ	0xFF5
 39863                           prodh	equ	0xFF4
 39864                           prodl	equ	0xFF3
 39865                           intcon	equ	0xFF2
 39866                           indf0	equ	0xFEF
 39867                           postinc0	equ	0xFEE
 39868                           fsr0h	equ	0xFEA
 39869                           fsr0l	equ	0xFE9
 39870                           wreg	equ	0xFE8
 39871                           indf1	equ	0xFE7
 39872                           postinc1	equ	0xFE6
 39873                           postdec1	equ	0xFE5
 39874                           plusw1	equ	0xFE3
 39875                           fsr1h	equ	0xFE2
 39876                           fsr1l	equ	0xFE1
 39877                           indf2	equ	0xFDF
 39878                           postinc2	equ	0xFDE
 39879                           postdec2	equ	0xFDD
 39880                           plusw2	equ	0xFDB
 39881                           fsr2h	equ	0xFDA
 39882                           fsr2l	equ	0xFD9
 39883                           status	equ	0xFD8
 39884                           
 39885 ;; *************** function _delay_ms *****************
 39886 ;; Defined at:
 39887 ;;		line 97 in file "src/soc/clock.c"
 39888 ;; Parameters:    Size  Location     Type
 39889 ;;  dly             2    4[BANK0 ] unsigned int 
 39890 ;; Auto vars:     Size  Location     Type
 39891 ;;		None
 39892 ;; Return value:  Size  Location     Type
 39893 ;;                  1    wreg      void 
 39894 ;; Registers used:
 39895 ;;		wreg, status,2, status,0, cstack
 39896 ;; Tracked objects:
 39897 ;;		On entry : 0/0
 39898 ;;		On exit  : 0/0
 39899 ;;		Unchanged: 0/0
 39900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39905 ;;Total ram usage:        2 bytes
 39906 ;; Hardware stack levels used:    1
 39907 ;; Hardware stack levels required when called:    5
 39908 ;; This function calls:
 39909 ;;		_delay_us
 39910 ;; This function is called by:
 39911 ;;		_key_waite_release
 39912 ;;		_at24c02_write_n_byte
 39913 ;;		_key_polling
 39914 ;; This function uses a non-reentrant model
 39915 ;;
 39916                           
 39917                           	psect	text204
 39918  0098FE                     __ptext204:
 39919                           	opt stack 0
 39920  0098FE                     _delay_ms:
 39921                           	opt stack 22
 39922                           
 39923                           ;clock.c: 99: while(dly>0){
 39924                           
 39925                           ; BSR set to: 0
 39926                           ;incstack = 0
 39927  0098FE  D00B               	goto	l14618
 39928  009900                     l14614:
 39929                           
 39930                           ;clock.c: 100: delay_us(1000);
 39931  009900  0E03               	movlw	3
 39932  009902  0100               	movlb	0	; () banked
 39933  009904  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 39934  009906  0EE8               	movlw	232
 39935  009908  6F60               	movwf	delay_us@dly& (0+255),b
 39936  00990A  EC16  F04A         	call	_delay_us	;wreg free
 39937                           
 39938                           ;clock.c: 101: dly--;
 39939  00990E  0100               	movlb	0	; () banked
 39940  009910  0764               	decf	delay_ms@dly& (0+255),f,b
 39941  009912  A0D8               	btfss	status,0,c
 39942  009914  0765               	decf	(delay_ms@dly+1)& (0+255),f,b
 39943  009916                     l14618:
 39944  009916  0100               	movlb	0	; () banked
 39945  009918  5164               	movf	delay_ms@dly& (0+255),w,b
 39946  00991A  0100               	movlb	0	; () banked
 39947  00991C  1165               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 39948  00991E  B4D8               	btfsc	status,2,c
 39949  009920  0012               	return	
 39950  009922  D7EE               	goto	l14614
 39951  009924                     __end_of_delay_ms:
 39952                           	opt stack 0
 39953                           tosu	equ	0xFFF
 39954                           tosh	equ	0xFFE
 39955                           tosl	equ	0xFFD
 39956                           pclath	equ	0xFFA
 39957                           tblptru	equ	0xFF8
 39958                           tblptrh	equ	0xFF7
 39959                           tblptrl	equ	0xFF6
 39960                           tablat	equ	0xFF5
 39961                           prodh	equ	0xFF4
 39962                           prodl	equ	0xFF3
 39963                           intcon	equ	0xFF2
 39964                           indf0	equ	0xFEF
 39965                           postinc0	equ	0xFEE
 39966                           fsr0h	equ	0xFEA
 39967                           fsr0l	equ	0xFE9
 39968                           wreg	equ	0xFE8
 39969                           indf1	equ	0xFE7
 39970                           postinc1	equ	0xFE6
 39971                           postdec1	equ	0xFE5
 39972                           plusw1	equ	0xFE3
 39973                           fsr1h	equ	0xFE2
 39974                           fsr1l	equ	0xFE1
 39975                           indf2	equ	0xFDF
 39976                           postinc2	equ	0xFDE
 39977                           postdec2	equ	0xFDD
 39978                           plusw2	equ	0xFDB
 39979                           fsr2h	equ	0xFDA
 39980                           fsr2l	equ	0xFD9
 39981                           status	equ	0xFD8
 39982                           
 39983 ;; *************** function _at24c02_read_n_byte *****************
 39984 ;; Defined at:
 39985 ;;		line 45 in file "src/driver/ex_eeprom.c"
 39986 ;; Parameters:    Size  Location     Type
 39987 ;;  pAt24c02        2    8[BANK0 ] PTR struct .
 39988 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 39989 ;;  addr            1   10[BANK0 ] unsigned char 
 39990 ;;  buf             2   11[BANK0 ] PTR unsigned char 
 39991 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 39992 ;;  len             2   13[BANK0 ] unsigned int 
 39993 ;; Auto vars:     Size  Location     Type
 39994 ;;  i               2   19[BANK0 ] unsigned int 
 39995 ;; Return value:  Size  Location     Type
 39996 ;;                  1    wreg      void 
 39997 ;; Registers used:
 39998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 39999 ;; Tracked objects:
 40000 ;;		On entry : 0/0
 40001 ;;		On exit  : 0/0
 40002 ;;		Unchanged: 0/0
 40003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40004 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40008 ;;Total ram usage:       13 bytes
 40009 ;; Hardware stack levels used:    1
 40010 ;; Hardware stack levels required when called:    8
 40011 ;; This function calls:
 40012 ;;		_iic_received_byte_if_ack
 40013 ;;		_iic_send_byte
 40014 ;;		_iic_start
 40015 ;;		_iic_stop
 40016 ;; This function is called by:
 40017 ;;		_calib_data_init_diff_pr
 40018 ;;		_calib_data_init_pr
 40019 ;; This function uses a non-reentrant model
 40020 ;;
 40021                           
 40022                           	psect	text205
 40023  003E5A                     __ptext205:
 40024                           	opt stack 0
 40025  003E5A                     _at24c02_read_n_byte:
 40026                           	opt stack 20
 40027                           
 40028                           ;ex_eeprom.c: 48: uint16_t i;
 40029                           ;ex_eeprom.c: 49: pAt24c02->iic_start();
 40030                           
 40031                           ; BSR set to: 0
 40032                           ;incstack = 0
 40033  003E5A  0100               	movlb	0	; () banked
 40034  003E5C  EE20 F001          	lfsr	2,1
 40035  003E60  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40036  003E62  26D9               	addwf	fsr2l,f,c
 40037  003E64  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40038  003E66  22DA               	addwfc	fsr2h,f,c
 40039  003E68  D801               	call	u14748
 40040  003E6A  D00A               	goto	u14749
 40041  003E6C                     u14748:
 40042  003E6C  0005               	push	
 40043  003E6E  6EFA               	movwf	pclath,c
 40044  003E70  50DE               	movf	postinc2,w,c
 40045  003E72  6EFD               	movwf	tosl,c
 40046  003E74  50DE               	movf	postinc2,w,c
 40047  003E76  6EFE               	movwf	tosh,c
 40048  003E78  50F8               	movf	tblptru,w,c
 40049  003E7A  6EFF               	movwf	tosu,c
 40050  003E7C  50FA               	movf	pclath,w,c
 40051  003E7E  0012               	return		;indir
 40052  003E80                     u14749:
 40053                           
 40054                           ;ex_eeprom.c: 50: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 40055  003E80  0100               	movlb	0	; () banked
 40056  003E82  EE20 F005          	lfsr	2,5
 40057  003E86  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40058  003E88  26D9               	addwf	fsr2l,f,c
 40059  003E8A  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40060  003E8C  22DA               	addwfc	fsr2h,f,c
 40061  003E8E  D801               	call	u14758
 40062  003E90  D00F               	goto	u14759
 40063  003E92                     u14758:
 40064  003E92  0005               	push	
 40065  003E94  6EFA               	movwf	pclath,c
 40066  003E96  50DE               	movf	postinc2,w,c
 40067  003E98  6EFD               	movwf	tosl,c
 40068  003E9A  50DE               	movf	postinc2,w,c
 40069  003E9C  6EFE               	movwf	tosh,c
 40070  003E9E  50F8               	movf	tblptru,w,c
 40071  003EA0  6EFF               	movwf	tosu,c
 40072  003EA2  50FA               	movf	pclath,w,c
 40073  003EA4  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 40074  003EA8  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 40075  003EAC  50DF               	movf	indf2,w,c
 40076  003EAE  0012               	return		;indir
 40077  003EB0                     u14759:
 40078                           
 40079                           ;ex_eeprom.c: 51: pAt24c02->iic_send_byte(addr);
 40080  003EB0  0100               	movlb	0	; () banked
 40081  003EB2  EE20 F005          	lfsr	2,5
 40082  003EB6  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40083  003EB8  26D9               	addwf	fsr2l,f,c
 40084  003EBA  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40085  003EBC  22DA               	addwfc	fsr2h,f,c
 40086  003EBE  D801               	call	u14768
 40087  003EC0  D00C               	goto	u14769
 40088  003EC2                     u14768:
 40089  003EC2  0005               	push	
 40090  003EC4  6EFA               	movwf	pclath,c
 40091  003EC6  50DE               	movf	postinc2,w,c
 40092  003EC8  6EFD               	movwf	tosl,c
 40093  003ECA  50DE               	movf	postinc2,w,c
 40094  003ECC  6EFE               	movwf	tosh,c
 40095  003ECE  50F8               	movf	tblptru,w,c
 40096  003ED0  6EFF               	movwf	tosu,c
 40097  003ED2  50FA               	movf	pclath,w,c
 40098  003ED4  0100               	movlb	0	; () banked
 40099  003ED6  516A               	movf	at24c02_read_n_byte@addr& (0+255),w,b
 40100  003ED8  0012               	return		;indir
 40101  003EDA                     u14769:
 40102                           
 40103                           ;ex_eeprom.c: 53: pAt24c02->iic_start();
 40104  003EDA  0100               	movlb	0	; () banked
 40105  003EDC  EE20 F001          	lfsr	2,1
 40106  003EE0  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40107  003EE2  26D9               	addwf	fsr2l,f,c
 40108  003EE4  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40109  003EE6  22DA               	addwfc	fsr2h,f,c
 40110  003EE8  D801               	call	u14778
 40111  003EEA  D00A               	goto	u14779
 40112  003EEC                     u14778:
 40113  003EEC  0005               	push	
 40114  003EEE  6EFA               	movwf	pclath,c
 40115  003EF0  50DE               	movf	postinc2,w,c
 40116  003EF2  6EFD               	movwf	tosl,c
 40117  003EF4  50DE               	movf	postinc2,w,c
 40118  003EF6  6EFE               	movwf	tosh,c
 40119  003EF8  50F8               	movf	tblptru,w,c
 40120  003EFA  6EFF               	movwf	tosu,c
 40121  003EFC  50FA               	movf	pclath,w,c
 40122  003EFE  0012               	return		;indir
 40123  003F00                     u14779:
 40124                           
 40125                           ;ex_eeprom.c: 54: pAt24c02->iic_send_byte(pAt24c02->slaveAddr+1);
 40126  003F00  0100               	movlb	0	; () banked
 40127  003F02  EE20 F005          	lfsr	2,5
 40128  003F06  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40129  003F08  26D9               	addwf	fsr2l,f,c
 40130  003F0A  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40131  003F0C  22DA               	addwfc	fsr2h,f,c
 40132  003F0E  D801               	call	u14788
 40133  003F10  D013               	goto	l15584
 40134  003F12                     u14788:
 40135  003F12  0005               	push	
 40136  003F14  6EFA               	movwf	pclath,c
 40137  003F16  50DE               	movf	postinc2,w,c
 40138  003F18  6EFD               	movwf	tosl,c
 40139  003F1A  50DE               	movf	postinc2,w,c
 40140  003F1C  6EFE               	movwf	tosh,c
 40141  003F1E  50F8               	movf	tblptru,w,c
 40142  003F20  6EFF               	movwf	tosu,c
 40143  003F22  50FA               	movf	pclath,w,c
 40144  003F24  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 40145  003F28  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 40146  003F2C  50DF               	movf	indf2,w,c
 40147  003F2E  0100               	movlb	0	; () banked
 40148  003F30  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 40149  003F32  0100               	movlb	0	; () banked
 40150  003F34  296F               	incf	??_at24c02_read_n_byte& (0+255),w,b
 40151  003F36  0012               	return		;indir
 40152  003F38                     l15584:
 40153                           
 40154                           ;ex_eeprom.c: 55: for(i=0;i<len-1;i++){
 40155  003F38  0E00               	movlw	0
 40156  003F3A  0100               	movlb	0	; () banked
 40157  003F3C  6F74               	movwf	(at24c02_read_n_byte@i+1)& (0+255),b
 40158  003F3E  0E00               	movlw	0
 40159  003F40  6F73               	movwf	at24c02_read_n_byte@i& (0+255),b
 40160  003F42  D01F               	goto	l15592
 40161  003F44                     l15586:
 40162                           
 40163                           ; BSR set to: 0
 40164                           ;ex_eeprom.c: 56: *buf++=pAt24c02->iic_received_byte_if_ack(IIC_ACK);
 40165  003F44  0100               	movlb	0	; () banked
 40166  003F46  EE20 F009          	lfsr	2,9
 40167  003F4A  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40168  003F4C  26D9               	addwf	fsr2l,f,c
 40169  003F4E  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40170  003F50  22DA               	addwfc	fsr2h,f,c
 40171  003F52  D801               	call	u14798
 40172  003F54  D00B               	goto	u14799
 40173  003F56                     u14798:
 40174  003F56  0005               	push	
 40175  003F58  6EFA               	movwf	pclath,c
 40176  003F5A  50DE               	movf	postinc2,w,c
 40177  003F5C  6EFD               	movwf	tosl,c
 40178  003F5E  50DE               	movf	postinc2,w,c
 40179  003F60  6EFE               	movwf	tosh,c
 40180  003F62  50F8               	movf	tblptru,w,c
 40181  003F64  6EFF               	movwf	tosu,c
 40182  003F66  50FA               	movf	pclath,w,c
 40183  003F68  0E00               	movlw	0
 40184  003F6A  0012               	return		;indir
 40185  003F6C                     u14799:
 40186  003F6C  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 40187  003F70  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 40188  003F74  6EDF               	movwf	indf2,c
 40189  003F76  0100               	movlb	0	; () banked
 40190  003F78  4B6B               	infsnz	at24c02_read_n_byte@buf& (0+255),f,b
 40191  003F7A  2B6C               	incf	(at24c02_read_n_byte@buf+1)& (0+255),f,b
 40192                           
 40193                           ; BSR set to: 0
 40194  003F7C  0100               	movlb	0	; () banked
 40195  003F7E  4B73               	infsnz	at24c02_read_n_byte@i& (0+255),f,b
 40196  003F80  2B74               	incf	(at24c02_read_n_byte@i+1)& (0+255),f,b
 40197  003F82                     l15592:
 40198                           
 40199                           ; BSR set to: 0
 40200  003F82  0EFF               	movlw	255
 40201  003F84  0100               	movlb	0	; () banked
 40202  003F86  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 40203  003F88  0EFF               	movlw	255
 40204  003F8A  0100               	movlb	0	; () banked
 40205  003F8C  6F70               	movwf	(??_at24c02_read_n_byte+1)& (0+255),b
 40206  003F8E  C06D  F071         	movff	at24c02_read_n_byte@len,??_at24c02_read_n_byte+2
 40207  003F92  C06E  F072         	movff	at24c02_read_n_byte@len+1,??_at24c02_read_n_byte+3
 40208  003F96  0100               	movlb	0	; () banked
 40209  003F98  516F               	movf	??_at24c02_read_n_byte& (0+255),w,b
 40210  003F9A  0100               	movlb	0	; () banked
 40211  003F9C  2771               	addwf	(??_at24c02_read_n_byte+2)& (0+255),f,b
 40212  003F9E  0100               	movlb	0	; () banked
 40213  003FA0  5170               	movf	(??_at24c02_read_n_byte+1)& (0+255),w,b
 40214  003FA2  0100               	movlb	0	; () banked
 40215  003FA4  2372               	addwfc	(??_at24c02_read_n_byte+3)& (0+255),f,b
 40216  003FA6  0100               	movlb	0	; () banked
 40217  003FA8  5171               	movf	(??_at24c02_read_n_byte+2)& (0+255),w,b
 40218  003FAA  0100               	movlb	0	; () banked
 40219  003FAC  5D73               	subwf	at24c02_read_n_byte@i& (0+255),w,b
 40220  003FAE  0100               	movlb	0	; () banked
 40221  003FB0  5172               	movf	(??_at24c02_read_n_byte+3)& (0+255),w,b
 40222  003FB2  0100               	movlb	0	; () banked
 40223  003FB4  5974               	subwfb	(at24c02_read_n_byte@i+1)& (0+255),w,b
 40224  003FB6  A0D8               	btfss	status,0,c
 40225  003FB8  D7C5               	goto	l15586
 40226                           
 40227                           ; BSR set to: 0
 40228                           ;ex_eeprom.c: 57: }
 40229                           ;ex_eeprom.c: 58: *buf=pAt24c02->iic_received_byte_if_ack(IIC_NACK);
 40230                           
 40231                           ; BSR set to: 0
 40232  003FBA  0100               	movlb	0	; () banked
 40233  003FBC  EE20 F009          	lfsr	2,9
 40234  003FC0  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40235  003FC2  26D9               	addwf	fsr2l,f,c
 40236  003FC4  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40237  003FC6  22DA               	addwfc	fsr2h,f,c
 40238  003FC8  D801               	call	u14818
 40239  003FCA  D00B               	goto	u14819
 40240  003FCC                     u14818:
 40241  003FCC  0005               	push	
 40242  003FCE  6EFA               	movwf	pclath,c
 40243  003FD0  50DE               	movf	postinc2,w,c
 40244  003FD2  6EFD               	movwf	tosl,c
 40245  003FD4  50DE               	movf	postinc2,w,c
 40246  003FD6  6EFE               	movwf	tosh,c
 40247  003FD8  50F8               	movf	tblptru,w,c
 40248  003FDA  6EFF               	movwf	tosu,c
 40249  003FDC  50FA               	movf	pclath,w,c
 40250  003FDE  0E01               	movlw	1
 40251  003FE0  0012               	return		;indir
 40252  003FE2                     u14819:
 40253  003FE2  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 40254  003FE6  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 40255  003FEA  6EDF               	movwf	indf2,c
 40256                           
 40257                           ;ex_eeprom.c: 59: pAt24c02->iic_stop();
 40258  003FEC  0100               	movlb	0	; () banked
 40259  003FEE  EE20 F003          	lfsr	2,3
 40260  003FF2  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 40261  003FF4  26D9               	addwf	fsr2l,f,c
 40262  003FF6  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 40263  003FF8  22DA               	addwfc	fsr2h,f,c
 40264  003FFA  D801               	call	u14828
 40265  003FFC  0012               	return	
 40266  003FFE                     u14828:
 40267  003FFE  0005               	push	
 40268  004000  6EFA               	movwf	pclath,c
 40269  004002  50DE               	movf	postinc2,w,c
 40270  004004  6EFD               	movwf	tosl,c
 40271  004006  50DE               	movf	postinc2,w,c
 40272  004008  6EFE               	movwf	tosh,c
 40273  00400A  50F8               	movf	tblptru,w,c
 40274  00400C  6EFF               	movwf	tosu,c
 40275  00400E  50FA               	movf	pclath,w,c
 40276  004010  0012               	return		;indir
 40277  004012                     __end_of_at24c02_read_n_byte:
 40278                           	opt stack 0
 40279                           tosu	equ	0xFFF
 40280                           tosh	equ	0xFFE
 40281                           tosl	equ	0xFFD
 40282                           pclath	equ	0xFFA
 40283                           tblptru	equ	0xFF8
 40284                           tblptrh	equ	0xFF7
 40285                           tblptrl	equ	0xFF6
 40286                           tablat	equ	0xFF5
 40287                           prodh	equ	0xFF4
 40288                           prodl	equ	0xFF3
 40289                           intcon	equ	0xFF2
 40290                           indf0	equ	0xFEF
 40291                           postinc0	equ	0xFEE
 40292                           fsr0h	equ	0xFEA
 40293                           fsr0l	equ	0xFE9
 40294                           wreg	equ	0xFE8
 40295                           indf1	equ	0xFE7
 40296                           postinc1	equ	0xFE6
 40297                           postdec1	equ	0xFE5
 40298                           plusw1	equ	0xFE3
 40299                           fsr1h	equ	0xFE2
 40300                           fsr1l	equ	0xFE1
 40301                           indf2	equ	0xFDF
 40302                           postinc2	equ	0xFDE
 40303                           postdec2	equ	0xFDD
 40304                           plusw2	equ	0xFDB
 40305                           fsr2h	equ	0xFDA
 40306                           fsr2l	equ	0xFD9
 40307                           status	equ	0xFD8
 40308                           
 40309 ;; *************** function _iic_start *****************
 40310 ;; Defined at:
 40311 ;;		line 19 in file "src/driver/i2c.c"
 40312 ;; Parameters:    Size  Location     Type
 40313 ;;		None
 40314 ;; Auto vars:     Size  Location     Type
 40315 ;;		None
 40316 ;; Return value:  Size  Location     Type
 40317 ;;                  1    wreg      void 
 40318 ;; Registers used:
 40319 ;;		wreg, status,2, status,0, cstack
 40320 ;; Tracked objects:
 40321 ;;		On entry : 0/0
 40322 ;;		On exit  : 0/0
 40323 ;;		Unchanged: 0/0
 40324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40329 ;;Total ram usage:        0 bytes
 40330 ;; Hardware stack levels used:    1
 40331 ;; Hardware stack levels required when called:    5
 40332 ;; This function calls:
 40333 ;;		_delay_us
 40334 ;; This function is called by:
 40335 ;;		_ads1115_init
 40336 ;;		_at24c02_init
 40337 ;;		_pcf8574_init
 40338 ;;		_ads1115_write_reg
 40339 ;;		_ads1115_read_reg
 40340 ;;		_at24c02_write_n_byte
 40341 ;;		_at24c02_read_n_byte
 40342 ;;		_pcf8574_write_singel
 40343 ;;		_ad421_write_via_pcf8574
 40344 ;; This function uses a non-reentrant model
 40345 ;;
 40346                           
 40347                           	psect	text206
 40348  0093F4                     __ptext206:
 40349                           	opt stack 0
 40350  0093F4                     _iic_start:
 40351                           	opt stack 21
 40352                           
 40353                           ;incstack = 0
 40354                           ;i2c.c: 21: do{TRISC &= ~(1<<3);}while(0);;;
 40355  0093F4  9694               	bcf	3988,3,c	;volatile
 40356                           
 40357                           ;i2c.c: 22: do{TRISC &= ~(1<<4);}while(0);;;
 40358  0093F6  9894               	bcf	3988,4,c	;volatile
 40359                           
 40360                           ;i2c.c: 24: do{LATC |= (1<<4);}while(0);;;
 40361  0093F8  888B               	bsf	3979,4,c	;volatile
 40362                           
 40363                           ;i2c.c: 25: do{LATC |= (1<<3);}while(0);;;
 40364  0093FA  868B               	bsf	3979,3,c	;volatile
 40365                           
 40366                           ;i2c.c: 26: delay_us(3);
 40367  0093FC  0E00               	movlw	0
 40368  0093FE  0100               	movlb	0	; () banked
 40369  009400  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40370  009402  0E03               	movlw	3
 40371  009404  6F60               	movwf	delay_us@dly& (0+255),b
 40372  009406  EC16  F04A         	call	_delay_us
 40373                           
 40374                           ;i2c.c: 27: do{LATC &= ~(1<<4);}while(0);;;
 40375  00940A  988B               	bcf	3979,4,c	;volatile
 40376                           
 40377                           ;i2c.c: 28: delay_us(3);
 40378  00940C  0E00               	movlw	0
 40379  00940E  0100               	movlb	0	; () banked
 40380  009410  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40381  009412  0E03               	movlw	3
 40382  009414  6F60               	movwf	delay_us@dly& (0+255),b
 40383  009416  EC16  F04A         	call	_delay_us	;wreg free
 40384                           
 40385                           ;i2c.c: 29: do{LATC &= ~(1<<3);}while(0);;;
 40386  00941A  968B               	bcf	3979,3,c	;volatile
 40387                           
 40388                           ;i2c.c: 30: delay_us(3);
 40389  00941C  0E00               	movlw	0
 40390  00941E  0100               	movlb	0	; () banked
 40391  009420  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40392  009422  0E03               	movlw	3
 40393  009424  6F60               	movwf	delay_us@dly& (0+255),b
 40394  009426  EC16  F04A         	call	_delay_us	;wreg free
 40395  00942A  0012               	return		;funcret
 40396  00942C                     __end_of_iic_start:
 40397                           	opt stack 0
 40398                           tosu	equ	0xFFF
 40399                           tosh	equ	0xFFE
 40400                           tosl	equ	0xFFD
 40401                           pclath	equ	0xFFA
 40402                           tblptru	equ	0xFF8
 40403                           tblptrh	equ	0xFF7
 40404                           tblptrl	equ	0xFF6
 40405                           tablat	equ	0xFF5
 40406                           prodh	equ	0xFF4
 40407                           prodl	equ	0xFF3
 40408                           intcon	equ	0xFF2
 40409                           indf0	equ	0xFEF
 40410                           postinc0	equ	0xFEE
 40411                           fsr0h	equ	0xFEA
 40412                           fsr0l	equ	0xFE9
 40413                           wreg	equ	0xFE8
 40414                           indf1	equ	0xFE7
 40415                           postinc1	equ	0xFE6
 40416                           postdec1	equ	0xFE5
 40417                           plusw1	equ	0xFE3
 40418                           fsr1h	equ	0xFE2
 40419                           fsr1l	equ	0xFE1
 40420                           indf2	equ	0xFDF
 40421                           postinc2	equ	0xFDE
 40422                           postdec2	equ	0xFDD
 40423                           plusw2	equ	0xFDB
 40424                           fsr2h	equ	0xFDA
 40425                           fsr2l	equ	0xFD9
 40426                           status	equ	0xFD8
 40427                           
 40428 ;; *************** function _iic_send_byte *****************
 40429 ;; Defined at:
 40430 ;;		line 84 in file "src/driver/i2c.c"
 40431 ;; Parameters:    Size  Location     Type
 40432 ;;  x               1    wreg     unsigned char 
 40433 ;; Auto vars:     Size  Location     Type
 40434 ;;  x               1    4[BANK0 ] unsigned char 
 40435 ;;  i               1    5[BANK0 ] unsigned char 
 40436 ;; Return value:  Size  Location     Type
 40437 ;;                  1    wreg      unsigned char 
 40438 ;; Registers used:
 40439 ;;		wreg, status,2, status,0, cstack
 40440 ;; Tracked objects:
 40441 ;;		On entry : 0/0
 40442 ;;		On exit  : 0/0
 40443 ;;		Unchanged: 0/0
 40444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40449 ;;Total ram usage:        2 bytes
 40450 ;; Hardware stack levels used:    1
 40451 ;; Hardware stack levels required when called:    7
 40452 ;; This function calls:
 40453 ;;		_delay_us
 40454 ;;		_iic_waite_ack
 40455 ;; This function is called by:
 40456 ;;		_ads1115_init
 40457 ;;		_at24c02_init
 40458 ;;		_pcf8574_init
 40459 ;;		_ads1115_write_reg
 40460 ;;		_ads1115_read_reg
 40461 ;;		_at24c02_write_n_byte
 40462 ;;		_at24c02_read_n_byte
 40463 ;;		_pcf8574_write_singel
 40464 ;;		_ad421_write_via_pcf8574
 40465 ;; This function uses a non-reentrant model
 40466 ;;
 40467                           
 40468                           	psect	text207
 40469  0080EE                     __ptext207:
 40470                           	opt stack 0
 40471  0080EE                     _iic_send_byte:
 40472                           	opt stack 19
 40473                           
 40474                           ;incstack = 0
 40475                           ;iic_send_byte@x stored from wreg
 40476  0080EE  0100               	movlb	0	; () banked
 40477  0080F0  6F64               	movwf	iic_send_byte@x& (0+255),b
 40478                           
 40479                           ;i2c.c: 86: uint8_t i;
 40480                           ;i2c.c: 87: do{TRISC &= ~(1<<3);}while(0);;;
 40481  0080F2  9694               	bcf	3988,3,c	;volatile
 40482                           
 40483                           ;i2c.c: 88: do{TRISC &= ~(1<<4);}while(0);;;
 40484  0080F4  9894               	bcf	3988,4,c	;volatile
 40485                           
 40486                           ;i2c.c: 89: do{LATC &= ~(1<<3);}while(0);;;
 40487  0080F6  968B               	bcf	3979,3,c	;volatile
 40488                           
 40489                           ;i2c.c: 90: delay_us(3);
 40490  0080F8  0E00               	movlw	0
 40491  0080FA  0100               	movlb	0	; () banked
 40492  0080FC  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40493  0080FE  0E03               	movlw	3
 40494  008100  6F60               	movwf	delay_us@dly& (0+255),b
 40495  008102  EC16  F04A         	call	_delay_us	;wreg free
 40496                           
 40497                           ;i2c.c: 91: for(i=0;i<8;i++){
 40498  008106  0E00               	movlw	0
 40499  008108  0100               	movlb	0	; () banked
 40500  00810A  6F65               	movwf	iic_send_byte@i& (0+255),b
 40501  00810C                     l14100:
 40502                           
 40503                           ; BSR set to: 0
 40504  00810C  0E07               	movlw	7
 40505  00810E  0100               	movlb	0	; () banked
 40506  008110  6565               	cpfsgt	iic_send_byte@i& (0+255),b
 40507  008112  D001               	goto	l1648
 40508  008114  D023               	goto	l14120
 40509  008116                     l1648:
 40510                           
 40511                           ; BSR set to: 0
 40512                           ;i2c.c: 92: if(x&0x80){
 40513  008116  0100               	movlb	0	; () banked
 40514  008118  AF64               	btfss	iic_send_byte@x& (0+255),7,b
 40515  00811A  D002               	goto	l14106
 40516                           
 40517                           ; BSR set to: 0
 40518                           
 40519                           ; BSR set to: 0
 40520                           
 40521                           ;i2c.c: 93: do{LATC |= (1<<4);}while(0);;;
 40522  00811C  888B               	bsf	3979,4,c	;volatile
 40523                           
 40524                           ; BSR set to: 0
 40525                           ;i2c.c: 94: }
 40526  00811E  D001               	goto	l14108
 40527  008120                     l14106:
 40528                           
 40529                           ; BSR set to: 0
 40530  008120  988B               	bcf	3979,4,c	;volatile
 40531  008122                     l14108:
 40532                           
 40533                           ; BSR set to: 0
 40534                           ;i2c.c: 97: }
 40535                           ;i2c.c: 98: delay_us(3);
 40536  008122  0E00               	movlw	0
 40537  008124  0100               	movlb	0	; () banked
 40538  008126  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40539  008128  0E03               	movlw	3
 40540  00812A  6F60               	movwf	delay_us@dly& (0+255),b
 40541  00812C  EC16  F04A         	call	_delay_us	;wreg free
 40542                           
 40543                           ;i2c.c: 99: do{LATC |= (1<<3);}while(0);;;
 40544  008130  868B               	bsf	3979,3,c	;volatile
 40545                           
 40546                           ;i2c.c: 101: delay_us(3);
 40547  008132  0E00               	movlw	0
 40548  008134  0100               	movlb	0	; () banked
 40549  008136  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40550  008138  0E03               	movlw	3
 40551  00813A  6F60               	movwf	delay_us@dly& (0+255),b
 40552  00813C  EC16  F04A         	call	_delay_us	;wreg free
 40553                           
 40554                           ;i2c.c: 102: do{LATC &= ~(1<<3);}while(0);;;
 40555  008140  968B               	bcf	3979,3,c	;volatile
 40556                           
 40557                           ;i2c.c: 104: delay_us(3);
 40558  008142  0E00               	movlw	0
 40559  008144  0100               	movlb	0	; () banked
 40560  008146  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40561  008148  0E03               	movlw	3
 40562  00814A  6F60               	movwf	delay_us@dly& (0+255),b
 40563  00814C  EC16  F04A         	call	_delay_us	;wreg free
 40564                           
 40565                           ;i2c.c: 105: x<<=1;
 40566  008150  0100               	movlb	0	; () banked
 40567  008152  90D8               	bcf	status,0,c
 40568  008154  3764               	rlcf	iic_send_byte@x& (0+255),f,b
 40569                           
 40570                           ; BSR set to: 0
 40571  008156  0100               	movlb	0	; () banked
 40572  008158  2B65               	incf	iic_send_byte@i& (0+255),f,b
 40573  00815A  D7D8               	goto	l14100
 40574  00815C                     l14120:
 40575                           
 40576                           ; BSR set to: 0
 40577                           ;i2c.c: 106: }
 40578                           ;i2c.c: 107: return iic_waite_ack();
 40579                           ;	Return value of _iic_send_byte is never used
 40580  00815C  ECD8  F046         	call	_iic_waite_ack	;wreg free
 40581  008160  0012               	return	
 40582  008162                     __end_of_iic_send_byte:
 40583                           	opt stack 0
 40584                           tosu	equ	0xFFF
 40585                           tosh	equ	0xFFE
 40586                           tosl	equ	0xFFD
 40587                           pclath	equ	0xFFA
 40588                           tblptru	equ	0xFF8
 40589                           tblptrh	equ	0xFF7
 40590                           tblptrl	equ	0xFF6
 40591                           tablat	equ	0xFF5
 40592                           prodh	equ	0xFF4
 40593                           prodl	equ	0xFF3
 40594                           intcon	equ	0xFF2
 40595                           indf0	equ	0xFEF
 40596                           postinc0	equ	0xFEE
 40597                           fsr0h	equ	0xFEA
 40598                           fsr0l	equ	0xFE9
 40599                           wreg	equ	0xFE8
 40600                           indf1	equ	0xFE7
 40601                           postinc1	equ	0xFE6
 40602                           postdec1	equ	0xFE5
 40603                           plusw1	equ	0xFE3
 40604                           fsr1h	equ	0xFE2
 40605                           fsr1l	equ	0xFE1
 40606                           indf2	equ	0xFDF
 40607                           postinc2	equ	0xFDE
 40608                           postdec2	equ	0xFDD
 40609                           plusw2	equ	0xFDB
 40610                           fsr2h	equ	0xFDA
 40611                           fsr2l	equ	0xFD9
 40612                           status	equ	0xFD8
 40613                           
 40614 ;; *************** function _iic_waite_ack *****************
 40615 ;; Defined at:
 40616 ;;		line 63 in file "src/driver/i2c.c"
 40617 ;; Parameters:    Size  Location     Type
 40618 ;;		None
 40619 ;; Auto vars:     Size  Location     Type
 40620 ;;  timeout         1   31[COMRAM] unsigned char 
 40621 ;; Return value:  Size  Location     Type
 40622 ;;                  1    wreg      unsigned char 
 40623 ;; Registers used:
 40624 ;;		wreg, status,2, status,0, cstack
 40625 ;; Tracked objects:
 40626 ;;		On entry : 0/0
 40627 ;;		On exit  : 0/0
 40628 ;;		Unchanged: 0/0
 40629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40634 ;;Total ram usage:        1 bytes
 40635 ;; Hardware stack levels used:    1
 40636 ;; Hardware stack levels required when called:    6
 40637 ;; This function calls:
 40638 ;;		_delay_us
 40639 ;;		_iic_stop
 40640 ;; This function is called by:
 40641 ;;		_ads1115_init
 40642 ;;		_at24c02_init
 40643 ;;		_iic_send_byte
 40644 ;;		_pcf8574_init
 40645 ;; This function uses a non-reentrant model
 40646 ;;
 40647                           
 40648                           	psect	text208
 40649  008DB0                     __ptext208:
 40650                           	opt stack 0
 40651  008DB0                     _iic_waite_ack:
 40652                           	opt stack 19
 40653                           
 40654                           ;i2c.c: 65: uint8_t timeout=200;
 40655                           
 40656                           ;incstack = 0
 40657  008DB0  0EC8               	movlw	200
 40658  008DB2  6E20               	movwf	iic_waite_ack@timeout,c
 40659                           
 40660                           ;i2c.c: 66: do{TRISC &= ~(1<<3);}while(0);;;
 40661  008DB4  9694               	bcf	3988,3,c	;volatile
 40662                           
 40663                           ;i2c.c: 67: do{TRISC |= (1<<4);}while(0);;;
 40664  008DB6  8894               	bsf	3988,4,c	;volatile
 40665                           
 40666                           ;i2c.c: 68: do{LATC &= ~(1<<3);}while(0);;;
 40667  008DB8  968B               	bcf	3979,3,c	;volatile
 40668                           
 40669                           ;i2c.c: 69: delay_us(3);
 40670  008DBA  0E00               	movlw	0
 40671  008DBC  0100               	movlb	0	; () banked
 40672  008DBE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40673  008DC0  0E03               	movlw	3
 40674  008DC2  6F60               	movwf	delay_us@dly& (0+255),b
 40675  008DC4  EC16  F04A         	call	_delay_us	;wreg free
 40676                           
 40677                           ;i2c.c: 70: do{LATC |= (1<<3);}while(0);;;
 40678  008DC8  868B               	bsf	3979,3,c	;volatile
 40679                           
 40680                           ;i2c.c: 71: delay_us(3);
 40681  008DCA  0E00               	movlw	0
 40682  008DCC  0100               	movlb	0	; () banked
 40683  008DCE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40684  008DD0  0E03               	movlw	3
 40685  008DD2  6F60               	movwf	delay_us@dly& (0+255),b
 40686  008DD4  EC16  F04A         	call	_delay_us	;wreg free
 40687                           
 40688                           ;i2c.c: 72: while(timeout--){
 40689  008DD8  D002               	goto	l13222
 40690  008DDA                     l1633:
 40691                           
 40692                           ;i2c.c: 73: if(!(PORTC & (1<<4)))break;
 40693  008DDA  A882               	btfss	3970,4,c	;volatile
 40694  008DDC  D004               	goto	l13224
 40695  008DDE                     l13222:
 40696  008DDE  0620               	decf	iic_waite_ack@timeout,f,c
 40697  008DE0  2820               	incf	iic_waite_ack@timeout,w,c
 40698  008DE2  A4D8               	btfss	status,2,c
 40699  008DE4  D7FA               	goto	l1633
 40700  008DE6                     l13224:
 40701                           
 40702                           ;i2c.c: 74: }
 40703                           ;i2c.c: 75: if(!timeout){
 40704  008DE6  5020               	movf	iic_waite_ack@timeout,w,c
 40705  008DE8  A4D8               	btfss	status,2,c
 40706  008DEA  D004               	goto	l13232
 40707                           
 40708                           ;i2c.c: 76: iic_stop();
 40709  008DEC  EC83  F04A         	call	_iic_stop	;wreg free
 40710                           
 40711                           ;i2c.c: 77: return 0;
 40712  008DF0  0E00               	movlw	0
 40713  008DF2  0012               	return	
 40714  008DF4                     l13232:
 40715  008DF4  968B               	bcf	3979,3,c	;volatile
 40716                           
 40717                           ;i2c.c: 80: delay_us(3);
 40718  008DF6  0E00               	movlw	0
 40719  008DF8  0100               	movlb	0	; () banked
 40720  008DFA  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40721  008DFC  0E03               	movlw	3
 40722  008DFE  6F60               	movwf	delay_us@dly& (0+255),b
 40723  008E00  EC16  F04A         	call	_delay_us	;wreg free
 40724                           
 40725                           ;i2c.c: 81: return 1;
 40726  008E04  0E01               	movlw	1
 40727  008E06  0012               	return	
 40728  008E08                     __end_of_iic_waite_ack:
 40729                           	opt stack 0
 40730                           tosu	equ	0xFFF
 40731                           tosh	equ	0xFFE
 40732                           tosl	equ	0xFFD
 40733                           pclath	equ	0xFFA
 40734                           tblptru	equ	0xFF8
 40735                           tblptrh	equ	0xFF7
 40736                           tblptrl	equ	0xFF6
 40737                           tablat	equ	0xFF5
 40738                           prodh	equ	0xFF4
 40739                           prodl	equ	0xFF3
 40740                           intcon	equ	0xFF2
 40741                           indf0	equ	0xFEF
 40742                           postinc0	equ	0xFEE
 40743                           fsr0h	equ	0xFEA
 40744                           fsr0l	equ	0xFE9
 40745                           wreg	equ	0xFE8
 40746                           indf1	equ	0xFE7
 40747                           postinc1	equ	0xFE6
 40748                           postdec1	equ	0xFE5
 40749                           plusw1	equ	0xFE3
 40750                           fsr1h	equ	0xFE2
 40751                           fsr1l	equ	0xFE1
 40752                           indf2	equ	0xFDF
 40753                           postinc2	equ	0xFDE
 40754                           postdec2	equ	0xFDD
 40755                           plusw2	equ	0xFDB
 40756                           fsr2h	equ	0xFDA
 40757                           fsr2l	equ	0xFD9
 40758                           status	equ	0xFD8
 40759                           
 40760 ;; *************** function _iic_stop *****************
 40761 ;; Defined at:
 40762 ;;		line 33 in file "src/driver/i2c.c"
 40763 ;; Parameters:    Size  Location     Type
 40764 ;;		None
 40765 ;; Auto vars:     Size  Location     Type
 40766 ;;		None
 40767 ;; Return value:  Size  Location     Type
 40768 ;;                  1    wreg      void 
 40769 ;; Registers used:
 40770 ;;		wreg, status,2, status,0, cstack
 40771 ;; Tracked objects:
 40772 ;;		On entry : 0/0
 40773 ;;		On exit  : 0/0
 40774 ;;		Unchanged: 0/0
 40775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40780 ;;Total ram usage:        0 bytes
 40781 ;; Hardware stack levels used:    1
 40782 ;; Hardware stack levels required when called:    5
 40783 ;; This function calls:
 40784 ;;		_delay_us
 40785 ;; This function is called by:
 40786 ;;		_ads1115_init
 40787 ;;		_at24c02_init
 40788 ;;		_iic_waite_ack
 40789 ;;		_pcf8574_init
 40790 ;;		_ads1115_write_reg
 40791 ;;		_ads1115_read_reg
 40792 ;;		_at24c02_write_n_byte
 40793 ;;		_at24c02_read_n_byte
 40794 ;;		_pcf8574_write_singel
 40795 ;;		_ad421_write_via_pcf8574
 40796 ;; This function uses a non-reentrant model
 40797 ;;
 40798                           
 40799                           	psect	text209
 40800  009506                     __ptext209:
 40801                           	opt stack 0
 40802  009506                     _iic_stop:
 40803                           	opt stack 21
 40804                           
 40805                           ;incstack = 0
 40806                           ;i2c.c: 35: do{TRISC &= ~(1<<3);}while(0);;;
 40807  009506  9694               	bcf	3988,3,c	;volatile
 40808                           
 40809                           ;i2c.c: 36: do{TRISC &= ~(1<<4);}while(0);;;
 40810  009508  9894               	bcf	3988,4,c	;volatile
 40811                           
 40812                           ;i2c.c: 37: do{LATC &= ~(1<<4);}while(0);;;
 40813  00950A  988B               	bcf	3979,4,c	;volatile
 40814                           
 40815                           ;i2c.c: 38: delay_us(3);
 40816  00950C  0E00               	movlw	0
 40817  00950E  0100               	movlb	0	; () banked
 40818  009510  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40819  009512  0E03               	movlw	3
 40820  009514  6F60               	movwf	delay_us@dly& (0+255),b
 40821  009516  EC16  F04A         	call	_delay_us	;wreg free
 40822                           
 40823                           ;i2c.c: 39: do{LATC |= (1<<3);}while(0);;;
 40824  00951A  868B               	bsf	3979,3,c	;volatile
 40825                           
 40826                           ;i2c.c: 40: delay_us(3);
 40827  00951C  0E00               	movlw	0
 40828  00951E  0100               	movlb	0	; () banked
 40829  009520  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40830  009522  0E03               	movlw	3
 40831  009524  6F60               	movwf	delay_us@dly& (0+255),b
 40832  009526  EC16  F04A         	call	_delay_us	;wreg free
 40833                           
 40834                           ;i2c.c: 41: do{LATC |= (1<<4);}while(0);;;
 40835  00952A  888B               	bsf	3979,4,c	;volatile
 40836                           
 40837                           ;i2c.c: 42: delay_us(3);
 40838  00952C  0E00               	movlw	0
 40839  00952E  0100               	movlb	0	; () banked
 40840  009530  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40841  009532  0E03               	movlw	3
 40842  009534  6F60               	movwf	delay_us@dly& (0+255),b
 40843  009536  EC16  F04A         	call	_delay_us	;wreg free
 40844  00953A  0012               	return		;funcret
 40845  00953C                     __end_of_iic_stop:
 40846                           	opt stack 0
 40847                           tosu	equ	0xFFF
 40848                           tosh	equ	0xFFE
 40849                           tosl	equ	0xFFD
 40850                           pclath	equ	0xFFA
 40851                           tblptru	equ	0xFF8
 40852                           tblptrh	equ	0xFF7
 40853                           tblptrl	equ	0xFF6
 40854                           tablat	equ	0xFF5
 40855                           prodh	equ	0xFF4
 40856                           prodl	equ	0xFF3
 40857                           intcon	equ	0xFF2
 40858                           indf0	equ	0xFEF
 40859                           postinc0	equ	0xFEE
 40860                           fsr0h	equ	0xFEA
 40861                           fsr0l	equ	0xFE9
 40862                           wreg	equ	0xFE8
 40863                           indf1	equ	0xFE7
 40864                           postinc1	equ	0xFE6
 40865                           postdec1	equ	0xFE5
 40866                           plusw1	equ	0xFE3
 40867                           fsr1h	equ	0xFE2
 40868                           fsr1l	equ	0xFE1
 40869                           indf2	equ	0xFDF
 40870                           postinc2	equ	0xFDE
 40871                           postdec2	equ	0xFDD
 40872                           plusw2	equ	0xFDB
 40873                           fsr2h	equ	0xFDA
 40874                           fsr2l	equ	0xFD9
 40875                           status	equ	0xFD8
 40876                           
 40877 ;; *************** function _iic_received_byte_if_ack *****************
 40878 ;; Defined at:
 40879 ;;		line 130 in file "src/driver/i2c.c"
 40880 ;; Parameters:    Size  Location     Type
 40881 ;;  ack             1    wreg     unsigned char 
 40882 ;; Auto vars:     Size  Location     Type
 40883 ;;  ack             1    6[BANK0 ] unsigned char 
 40884 ;;  ret             1    7[BANK0 ] unsigned char 
 40885 ;; Return value:  Size  Location     Type
 40886 ;;                  1    wreg      unsigned char 
 40887 ;; Registers used:
 40888 ;;		wreg, status,2, status,0, cstack
 40889 ;; Tracked objects:
 40890 ;;		On entry : 0/0
 40891 ;;		On exit  : 0/0
 40892 ;;		Unchanged: 0/0
 40893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40898 ;;Total ram usage:        2 bytes
 40899 ;; Hardware stack levels used:    1
 40900 ;; Hardware stack levels required when called:    6
 40901 ;; This function calls:
 40902 ;;		_iic_received_byte
 40903 ;;		_iic_send_ack
 40904 ;; This function is called by:
 40905 ;;		_ads1115_init
 40906 ;;		_at24c02_init
 40907 ;;		_pcf8574_init
 40908 ;;		_ads1115_read_reg
 40909 ;;		_at24c02_read_n_byte
 40910 ;; This function uses a non-reentrant model
 40911 ;;
 40912                           
 40913                           	psect	text210
 40914  009A3C                     __ptext210:
 40915                           	opt stack 0
 40916  009A3C                     _iic_received_byte_if_ack:
 40917                           	opt stack 19
 40918                           
 40919                           ;incstack = 0
 40920                           ;iic_received_byte_if_ack@ack stored from wreg
 40921  009A3C  0100               	movlb	0	; () banked
 40922  009A3E  6F66               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 40923                           
 40924                           ;i2c.c: 132: uint8_t ret=0;
 40925  009A40  0E00               	movlw	0
 40926  009A42  0100               	movlb	0	; () banked
 40927  009A44  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 40928                           
 40929                           ; BSR set to: 0
 40930                           ;i2c.c: 133: ret=iic_received_byte();
 40931  009A46  EC46  F044         	call	_iic_received_byte	;wreg free
 40932  009A4A  0100               	movlb	0	; () banked
 40933  009A4C  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 40934                           
 40935                           ; BSR set to: 0
 40936                           ;i2c.c: 134: iic_send_ack(ack);
 40937  009A4E  0100               	movlb	0	; () banked
 40938  009A50  5166               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 40939  009A52  EC2F  F047         	call	_iic_send_ack
 40940                           
 40941                           ;i2c.c: 135: return ret;
 40942  009A56  0100               	movlb	0	; () banked
 40943  009A58  5167               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 40944  009A5A  0012               	return	
 40945  009A5C                     __end_of_iic_received_byte_if_ack:
 40946                           	opt stack 0
 40947                           tosu	equ	0xFFF
 40948                           tosh	equ	0xFFE
 40949                           tosl	equ	0xFFD
 40950                           pclath	equ	0xFFA
 40951                           tblptru	equ	0xFF8
 40952                           tblptrh	equ	0xFF7
 40953                           tblptrl	equ	0xFF6
 40954                           tablat	equ	0xFF5
 40955                           prodh	equ	0xFF4
 40956                           prodl	equ	0xFF3
 40957                           intcon	equ	0xFF2
 40958                           indf0	equ	0xFEF
 40959                           postinc0	equ	0xFEE
 40960                           fsr0h	equ	0xFEA
 40961                           fsr0l	equ	0xFE9
 40962                           wreg	equ	0xFE8
 40963                           indf1	equ	0xFE7
 40964                           postinc1	equ	0xFE6
 40965                           postdec1	equ	0xFE5
 40966                           plusw1	equ	0xFE3
 40967                           fsr1h	equ	0xFE2
 40968                           fsr1l	equ	0xFE1
 40969                           indf2	equ	0xFDF
 40970                           postinc2	equ	0xFDE
 40971                           postdec2	equ	0xFDD
 40972                           plusw2	equ	0xFDB
 40973                           fsr2h	equ	0xFDA
 40974                           fsr2l	equ	0xFD9
 40975                           status	equ	0xFD8
 40976                           
 40977 ;; *************** function _iic_send_ack *****************
 40978 ;; Defined at:
 40979 ;;		line 45 in file "src/driver/i2c.c"
 40980 ;; Parameters:    Size  Location     Type
 40981 ;;  ack             1    wreg     char 
 40982 ;; Auto vars:     Size  Location     Type
 40983 ;;  ack             1   31[COMRAM] char 
 40984 ;; Return value:  Size  Location     Type
 40985 ;;                  1    wreg      void 
 40986 ;; Registers used:
 40987 ;;		wreg, status,2, status,0, cstack
 40988 ;; Tracked objects:
 40989 ;;		On entry : 0/0
 40990 ;;		On exit  : 0/0
 40991 ;;		Unchanged: 0/0
 40992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40997 ;;Total ram usage:        1 bytes
 40998 ;; Hardware stack levels used:    1
 40999 ;; Hardware stack levels required when called:    5
 41000 ;; This function calls:
 41001 ;;		_delay_us
 41002 ;; This function is called by:
 41003 ;;		_iic_received_byte_if_ack
 41004 ;; This function uses a non-reentrant model
 41005 ;;
 41006                           
 41007                           	psect	text211
 41008  008E5E                     __ptext211:
 41009                           	opt stack 0
 41010  008E5E                     _iic_send_ack:
 41011                           	opt stack 19
 41012                           
 41013                           ; BSR set to: 0
 41014                           ;incstack = 0
 41015                           ;iic_send_ack@ack stored from wreg
 41016  008E5E  6E20               	movwf	iic_send_ack@ack,c
 41017                           
 41018                           ;i2c.c: 47: do{TRISC &= ~(1<<3);}while(0);;;
 41019  008E60  9694               	bcf	3988,3,c	;volatile
 41020                           
 41021                           ;i2c.c: 48: do{TRISC &= ~(1<<4);}while(0);;;
 41022  008E62  9894               	bcf	3988,4,c	;volatile
 41023                           
 41024                           ;i2c.c: 49: do{LATC &= ~(1<<3);}while(0);;;
 41025  008E64  968B               	bcf	3979,3,c	;volatile
 41026                           
 41027                           ;i2c.c: 50: delay_us(3);
 41028  008E66  0E00               	movlw	0
 41029  008E68  0100               	movlb	0	; () banked
 41030  008E6A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41031  008E6C  0E03               	movlw	3
 41032  008E6E  6F60               	movwf	delay_us@dly& (0+255),b
 41033  008E70  EC16  F04A         	call	_delay_us	;wreg free
 41034                           
 41035                           ;i2c.c: 51: if(ack){
 41036  008E74  5020               	movf	iic_send_ack@ack,w,c
 41037  008E76  B4D8               	btfsc	status,2,c
 41038  008E78  D002               	goto	l13196
 41039                           
 41040                           ;i2c.c: 52: do{LATC |= (1<<4);}while(0);;;
 41041  008E7A  888B               	bsf	3979,4,c	;volatile
 41042                           
 41043                           ;i2c.c: 53: }else{
 41044  008E7C  D001               	goto	l13198
 41045  008E7E                     l13196:
 41046  008E7E  988B               	bcf	3979,4,c	;volatile
 41047  008E80                     l13198:
 41048                           
 41049                           ;i2c.c: 55: }
 41050                           ;i2c.c: 56: delay_us(3);
 41051  008E80  0E00               	movlw	0
 41052  008E82  0100               	movlb	0	; () banked
 41053  008E84  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41054  008E86  0E03               	movlw	3
 41055  008E88  6F60               	movwf	delay_us@dly& (0+255),b
 41056  008E8A  EC16  F04A         	call	_delay_us	;wreg free
 41057                           
 41058                           ;i2c.c: 57: do{LATC |= (1<<3);}while(0);;;
 41059  008E8E  868B               	bsf	3979,3,c	;volatile
 41060                           
 41061                           ;i2c.c: 58: delay_us(3);
 41062  008E90  0E00               	movlw	0
 41063  008E92  0100               	movlb	0	; () banked
 41064  008E94  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41065  008E96  0E03               	movlw	3
 41066  008E98  6F60               	movwf	delay_us@dly& (0+255),b
 41067  008E9A  EC16  F04A         	call	_delay_us	;wreg free
 41068                           
 41069                           ;i2c.c: 59: do{LATC &= ~(1<<3);}while(0);;;
 41070  008E9E  968B               	bcf	3979,3,c	;volatile
 41071                           
 41072                           ;i2c.c: 60: delay_us(3);
 41073  008EA0  0E00               	movlw	0
 41074  008EA2  0100               	movlb	0	; () banked
 41075  008EA4  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41076  008EA6  0E03               	movlw	3
 41077  008EA8  6F60               	movwf	delay_us@dly& (0+255),b
 41078  008EAA  EC16  F04A         	call	_delay_us	;wreg free
 41079  008EAE  0012               	return		;funcret
 41080  008EB0                     __end_of_iic_send_ack:
 41081                           	opt stack 0
 41082                           tosu	equ	0xFFF
 41083                           tosh	equ	0xFFE
 41084                           tosl	equ	0xFFD
 41085                           pclath	equ	0xFFA
 41086                           tblptru	equ	0xFF8
 41087                           tblptrh	equ	0xFF7
 41088                           tblptrl	equ	0xFF6
 41089                           tablat	equ	0xFF5
 41090                           prodh	equ	0xFF4
 41091                           prodl	equ	0xFF3
 41092                           intcon	equ	0xFF2
 41093                           indf0	equ	0xFEF
 41094                           postinc0	equ	0xFEE
 41095                           fsr0h	equ	0xFEA
 41096                           fsr0l	equ	0xFE9
 41097                           wreg	equ	0xFE8
 41098                           indf1	equ	0xFE7
 41099                           postinc1	equ	0xFE6
 41100                           postdec1	equ	0xFE5
 41101                           plusw1	equ	0xFE3
 41102                           fsr1h	equ	0xFE2
 41103                           fsr1l	equ	0xFE1
 41104                           indf2	equ	0xFDF
 41105                           postinc2	equ	0xFDE
 41106                           postdec2	equ	0xFDD
 41107                           plusw2	equ	0xFDB
 41108                           fsr2h	equ	0xFDA
 41109                           fsr2l	equ	0xFD9
 41110                           status	equ	0xFD8
 41111                           
 41112 ;; *************** function _iic_received_byte *****************
 41113 ;; Defined at:
 41114 ;;		line 110 in file "src/driver/i2c.c"
 41115 ;; Parameters:    Size  Location     Type
 41116 ;;		None
 41117 ;; Auto vars:     Size  Location     Type
 41118 ;;  i               1    5[BANK0 ] unsigned char 
 41119 ;;  ret             1    4[BANK0 ] unsigned char 
 41120 ;; Return value:  Size  Location     Type
 41121 ;;                  1    wreg      unsigned char 
 41122 ;; Registers used:
 41123 ;;		wreg, status,2, status,0, cstack
 41124 ;; Tracked objects:
 41125 ;;		On entry : 0/0
 41126 ;;		On exit  : 0/0
 41127 ;;		Unchanged: 0/0
 41128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41133 ;;Total ram usage:        2 bytes
 41134 ;; Hardware stack levels used:    1
 41135 ;; Hardware stack levels required when called:    5
 41136 ;; This function calls:
 41137 ;;		_delay_us
 41138 ;; This function is called by:
 41139 ;;		_iic_received_byte_if_ack
 41140 ;; This function uses a non-reentrant model
 41141 ;;
 41142                           
 41143                           	psect	text212
 41144  00888C                     __ptext212:
 41145                           	opt stack 0
 41146  00888C                     _iic_received_byte:
 41147                           	opt stack 19
 41148                           
 41149                           ;i2c.c: 112: uint8_t i;
 41150                           ;i2c.c: 113: uint8_t ret=0;
 41151                           
 41152                           ;incstack = 0
 41153  00888C  0E00               	movlw	0
 41154  00888E  0100               	movlb	0	; () banked
 41155  008890  6F64               	movwf	iic_received_byte@ret& (0+255),b
 41156                           
 41157                           ; BSR set to: 0
 41158                           
 41159                           ; BSR set to: 0
 41160                           
 41161                           ;i2c.c: 114: do{TRISC &= ~(1<<3);}while(0);;;
 41162  008892  9694               	bcf	3988,3,c	;volatile
 41163                           
 41164                           ; BSR set to: 0
 41165                           
 41166                           ; BSR set to: 0
 41167                           
 41168                           ;i2c.c: 115: do{TRISC |= (1<<4);}while(0);;;
 41169                           
 41170                           ; BSR set to: 0
 41171  008894  8894               	bsf	3988,4,c	;volatile
 41172                           
 41173                           ; BSR set to: 0
 41174                           ;i2c.c: 116: for(i=0;i<8;i++){
 41175  008896  0E00               	movlw	0
 41176  008898  0100               	movlb	0	; () banked
 41177  00889A  6F65               	movwf	iic_received_byte@i& (0+255),b
 41178  00889C                     l13246:
 41179                           
 41180                           ; BSR set to: 0
 41181  00889C  0E07               	movlw	7
 41182  00889E  0100               	movlb	0	; () banked
 41183  0088A0  6565               	cpfsgt	iic_received_byte@i& (0+255),b
 41184  0088A2  D001               	goto	l13250
 41185  0088A4  D01A               	goto	l13266
 41186  0088A6                     l13250:
 41187                           
 41188                           ; BSR set to: 0
 41189                           ;i2c.c: 117: ret<<=1;
 41190  0088A6  0100               	movlb	0	; () banked
 41191  0088A8  90D8               	bcf	status,0,c
 41192  0088AA  3764               	rlcf	iic_received_byte@ret& (0+255),f,b
 41193                           
 41194                           ; BSR set to: 0
 41195                           
 41196                           ; BSR set to: 0
 41197                           
 41198                           ;i2c.c: 118: do{LATC &= ~(1<<3);}while(0);;;
 41199  0088AC  968B               	bcf	3979,3,c	;volatile
 41200                           
 41201                           ; BSR set to: 0
 41202                           ;i2c.c: 119: delay_us(3);
 41203                           
 41204                           ; BSR set to: 0
 41205  0088AE  0E00               	movlw	0
 41206  0088B0  0100               	movlb	0	; () banked
 41207  0088B2  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41208  0088B4  0E03               	movlw	3
 41209  0088B6  6F60               	movwf	delay_us@dly& (0+255),b
 41210  0088B8  EC16  F04A         	call	_delay_us	;wreg free
 41211                           
 41212                           ;i2c.c: 120: do{LATC |= (1<<3);}while(0);;;
 41213  0088BC  868B               	bsf	3979,3,c	;volatile
 41214                           
 41215                           ;i2c.c: 121: delay_us(3);
 41216  0088BE  0E00               	movlw	0
 41217  0088C0  0100               	movlb	0	; () banked
 41218  0088C2  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41219  0088C4  0E03               	movlw	3
 41220  0088C6  6F60               	movwf	delay_us@dly& (0+255),b
 41221  0088C8  EC16  F04A         	call	_delay_us	;wreg free
 41222                           
 41223                           ;i2c.c: 122: if((PORTC & (1<<4))){
 41224  0088CC  A882               	btfss	3970,4,c	;volatile
 41225  0088CE  D002               	goto	l1673
 41226                           
 41227                           ;i2c.c: 123: ret|=1;
 41228  0088D0  0100               	movlb	0	; () banked
 41229  0088D2  8164               	bsf	iic_received_byte@ret& (0+255),0,b
 41230  0088D4                     l1673:
 41231  0088D4  0100               	movlb	0	; () banked
 41232  0088D6  2B65               	incf	iic_received_byte@i& (0+255),f,b
 41233  0088D8  D7E1               	goto	l13246
 41234  0088DA                     l13266:
 41235                           
 41236                           ; BSR set to: 0
 41237  0088DA  968B               	bcf	3979,3,c	;volatile
 41238                           
 41239                           ; BSR set to: 0
 41240                           ;i2c.c: 127: delay_us(3);
 41241                           
 41242                           ; BSR set to: 0
 41243  0088DC  0E00               	movlw	0
 41244  0088DE  0100               	movlb	0	; () banked
 41245  0088E0  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41246  0088E2  0E03               	movlw	3
 41247  0088E4  6F60               	movwf	delay_us@dly& (0+255),b
 41248  0088E6  EC16  F04A         	call	_delay_us	;wreg free
 41249                           
 41250                           ;i2c.c: 128: return ret;
 41251  0088EA  0100               	movlb	0	; () banked
 41252  0088EC  5164               	movf	iic_received_byte@ret& (0+255),w,b
 41253  0088EE  0012               	return	
 41254  0088F0                     __end_of_iic_received_byte:
 41255                           	opt stack 0
 41256                           tosu	equ	0xFFF
 41257                           tosh	equ	0xFFE
 41258                           tosl	equ	0xFFD
 41259                           pclath	equ	0xFFA
 41260                           tblptru	equ	0xFF8
 41261                           tblptrh	equ	0xFF7
 41262                           tblptrl	equ	0xFF6
 41263                           tablat	equ	0xFF5
 41264                           prodh	equ	0xFF4
 41265                           prodl	equ	0xFF3
 41266                           intcon	equ	0xFF2
 41267                           indf0	equ	0xFEF
 41268                           postinc0	equ	0xFEE
 41269                           fsr0h	equ	0xFEA
 41270                           fsr0l	equ	0xFE9
 41271                           wreg	equ	0xFE8
 41272                           indf1	equ	0xFE7
 41273                           postinc1	equ	0xFE6
 41274                           postdec1	equ	0xFE5
 41275                           plusw1	equ	0xFE3
 41276                           fsr1h	equ	0xFE2
 41277                           fsr1l	equ	0xFE1
 41278                           indf2	equ	0xFDF
 41279                           postinc2	equ	0xFDE
 41280                           postdec2	equ	0xFDD
 41281                           plusw2	equ	0xFDB
 41282                           fsr2h	equ	0xFDA
 41283                           fsr2l	equ	0xFD9
 41284                           status	equ	0xFD8
 41285                           
 41286 ;; *************** function _delay_us *****************
 41287 ;; Defined at:
 41288 ;;		line 82 in file "src/soc/clock.c"
 41289 ;; Parameters:    Size  Location     Type
 41290 ;;  dly             2    0[BANK0 ] unsigned int 
 41291 ;; Auto vars:     Size  Location     Type
 41292 ;;  i               2    2[BANK0 ] unsigned int 
 41293 ;; Return value:  Size  Location     Type
 41294 ;;                  1    wreg      void 
 41295 ;; Registers used:
 41296 ;;		wreg, status,2, status,0
 41297 ;; Tracked objects:
 41298 ;;		On entry : 0/0
 41299 ;;		On exit  : 0/0
 41300 ;;		Unchanged: 0/0
 41301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41305 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41306 ;;Total ram usage:        4 bytes
 41307 ;; Hardware stack levels used:    1
 41308 ;; Hardware stack levels required when called:    4
 41309 ;; This function calls:
 41310 ;;		Nothing
 41311 ;; This function is called by:
 41312 ;;		_iic_start
 41313 ;;		_iic_stop
 41314 ;;		_iic_send_ack
 41315 ;;		_iic_waite_ack
 41316 ;;		_iic_send_byte
 41317 ;;		_iic_received_byte
 41318 ;;		_in_adc_start_and_read
 41319 ;;		_delay_ms
 41320 ;; This function uses a non-reentrant model
 41321 ;;
 41322                           
 41323                           	psect	text213
 41324  00942C                     __ptext213:
 41325                           	opt stack 0
 41326  00942C                     _delay_us:
 41327                           	opt stack 22
 41328                           
 41329                           ;clock.c: 84: uint16_t i;
 41330                           ;clock.c: 85: for(i=0;i<dly;i++){
 41331                           
 41332                           ; BSR set to: 0
 41333                           ;incstack = 0
 41334  00942C  0E00               	movlw	0
 41335  00942E  0100               	movlb	0	; () banked
 41336  009430  6F63               	movwf	(delay_us@i+1)& (0+255),b
 41337  009432  0E00               	movlw	0
 41338  009434  6F62               	movwf	delay_us@i& (0+255),b
 41339  009436  D00B               	goto	l13120
 41340  009438                     l2264:
 41341                           
 41342                           ; BSR set to: 0
 41343                           ;clock.c: 86: __nop();
 41344  009438  F000               	nop	
 41345                           
 41346                           ;clock.c: 87: __nop();
 41347  00943A  F000               	nop	
 41348                           
 41349                           ;clock.c: 88: __nop();
 41350  00943C  F000               	nop	
 41351                           
 41352                           ;clock.c: 89: __nop();
 41353  00943E  F000               	nop	
 41354                           
 41355                           ;clock.c: 91: __nop();
 41356  009440  F000               	nop	
 41357                           
 41358                           ;clock.c: 92: __nop();
 41359  009442  F000               	nop	
 41360                           
 41361                           ;clock.c: 93: __nop();
 41362  009444  F000               	nop	
 41363                           
 41364                           ;clock.c: 94: __nop();
 41365  009446  F000               	nop	
 41366  009448  0100               	movlb	0	; () banked
 41367  00944A  4B62               	infsnz	delay_us@i& (0+255),f,b
 41368  00944C  2B63               	incf	(delay_us@i+1)& (0+255),f,b
 41369  00944E                     l13120:
 41370                           
 41371                           ; BSR set to: 0
 41372  00944E  0100               	movlb	0	; () banked
 41373  009450  5160               	movf	delay_us@dly& (0+255),w,b
 41374  009452  0100               	movlb	0	; () banked
 41375  009454  5D62               	subwf	delay_us@i& (0+255),w,b
 41376  009456  0100               	movlb	0	; () banked
 41377  009458  5161               	movf	(delay_us@dly+1)& (0+255),w,b
 41378  00945A  0100               	movlb	0	; () banked
 41379  00945C  5963               	subwfb	(delay_us@i+1)& (0+255),w,b
 41380  00945E  B0D8               	btfsc	status,0,c
 41381  009460  0012               	return	
 41382  009462  D7EA               	goto	l2264
 41383  009464                     __end_of_delay_us:
 41384                           	opt stack 0
 41385                           tosu	equ	0xFFF
 41386                           tosh	equ	0xFFE
 41387                           tosl	equ	0xFFD
 41388                           pclath	equ	0xFFA
 41389                           tblptru	equ	0xFF8
 41390                           tblptrh	equ	0xFF7
 41391                           tblptrl	equ	0xFF6
 41392                           tablat	equ	0xFF5
 41393                           prodh	equ	0xFF4
 41394                           prodl	equ	0xFF3
 41395                           intcon	equ	0xFF2
 41396                           indf0	equ	0xFEF
 41397                           postinc0	equ	0xFEE
 41398                           fsr0h	equ	0xFEA
 41399                           fsr0l	equ	0xFE9
 41400                           wreg	equ	0xFE8
 41401                           indf1	equ	0xFE7
 41402                           postinc1	equ	0xFE6
 41403                           postdec1	equ	0xFE5
 41404                           plusw1	equ	0xFE3
 41405                           fsr1h	equ	0xFE2
 41406                           fsr1l	equ	0xFE1
 41407                           indf2	equ	0xFDF
 41408                           postinc2	equ	0xFDE
 41409                           postdec2	equ	0xFDD
 41410                           plusw2	equ	0xFDB
 41411                           fsr2h	equ	0xFDA
 41412                           fsr2l	equ	0xFD9
 41413                           status	equ	0xFD8
 41414                           
 41415 ;; *************** function _at24c02_init *****************
 41416 ;; Defined at:
 41417 ;;		line 13 in file "src/driver/ex_eeprom.c"
 41418 ;; Parameters:    Size  Location     Type
 41419 ;;  pAt24c02        2    0[BANK0 ] PTR struct .
 41420 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 41421 ;;  slv             1    2[BANK0 ] unsigned char 
 41422 ;; Auto vars:     Size  Location     Type
 41423 ;;		None
 41424 ;; Return value:  Size  Location     Type
 41425 ;;                  1    wreg      void 
 41426 ;; Registers used:
 41427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41428 ;; Tracked objects:
 41429 ;;		On entry : 0/0
 41430 ;;		On exit  : 0/0
 41431 ;;		Unchanged: 0/0
 41432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41433 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41436 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;Total ram usage:        3 bytes
 41438 ;; Hardware stack levels used:    1
 41439 ;; Hardware stack levels required when called:    4
 41440 ;; This function calls:
 41441 ;;		Nothing
 41442 ;; This function is called by:
 41443 ;;		_calib_data_init_diff_pr
 41444 ;;		_calib_data_init_pr
 41445 ;;		_at24c02_init_all_chip
 41446 ;; This function uses a non-reentrant model
 41447 ;;
 41448                           
 41449                           	psect	text214
 41450  007DA2                     __ptext214:
 41451                           	opt stack 0
 41452  007DA2                     _at24c02_init:
 41453                           	opt stack 24
 41454                           
 41455                           ;ex_eeprom.c: 15: pAt24c02->slaveAddr=slv;
 41456                           
 41457                           ; BSR set to: 0
 41458                           ;incstack = 0
 41459  007DA2  C060  FFD9         	movff	at24c02_init@pAt24c02,fsr2l
 41460  007DA6  C061  FFDA         	movff	at24c02_init@pAt24c02+1,fsr2h
 41461  007DAA  C062  FFDF         	movff	at24c02_init@slv,indf2
 41462                           
 41463                           ;ex_eeprom.c: 16: pAt24c02->iic_start=iic_start;
 41464  007DAE  0100               	movlb	0	; () banked
 41465  007DB0  EE20 F001          	lfsr	2,1
 41466  007DB4  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 41467  007DB6  26D9               	addwf	fsr2l,f,c
 41468  007DB8  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 41469  007DBA  22DA               	addwfc	fsr2h,f,c
 41470  007DBC  0EF4               	movlw	low _iic_start
 41471  007DBE  6EDE               	movwf	postinc2,c
 41472  007DC0  0E93               	movlw	high _iic_start
 41473  007DC2  6EDD               	movwf	postdec2,c
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;ex_eeprom.c: 17: pAt24c02->iic_stop=iic_stop;
 41477  007DC4  0100               	movlb	0	; () banked
 41478  007DC6  EE20 F003          	lfsr	2,3
 41479  007DCA  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 41480  007DCC  26D9               	addwf	fsr2l,f,c
 41481  007DCE  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 41482  007DD0  22DA               	addwfc	fsr2h,f,c
 41483  007DD2  0E06               	movlw	low _iic_stop
 41484  007DD4  6EDE               	movwf	postinc2,c
 41485  007DD6  0E95               	movlw	high _iic_stop
 41486  007DD8  6EDD               	movwf	postdec2,c
 41487                           
 41488                           ; BSR set to: 0
 41489                           ;ex_eeprom.c: 18: pAt24c02->iic_send_byte=iic_send_byte;
 41490  007DDA  0100               	movlb	0	; () banked
 41491  007DDC  EE20 F005          	lfsr	2,5
 41492  007DE0  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 41493  007DE2  26D9               	addwf	fsr2l,f,c
 41494  007DE4  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 41495  007DE6  22DA               	addwfc	fsr2h,f,c
 41496  007DE8  0EEE               	movlw	low _iic_send_byte
 41497  007DEA  6EDE               	movwf	postinc2,c
 41498  007DEC  0E80               	movlw	high _iic_send_byte
 41499  007DEE  6EDD               	movwf	postdec2,c
 41500                           
 41501                           ; BSR set to: 0
 41502                           ;ex_eeprom.c: 20: pAt24c02->iic_waite_ack=iic_waite_ack;
 41503  007DF0  0100               	movlb	0	; () banked
 41504  007DF2  EE20 F007          	lfsr	2,7
 41505  007DF6  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 41506  007DF8  26D9               	addwf	fsr2l,f,c
 41507  007DFA  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 41508  007DFC  22DA               	addwfc	fsr2h,f,c
 41509  007DFE  0EB0               	movlw	low _iic_waite_ack
 41510  007E00  6EDE               	movwf	postinc2,c
 41511  007E02  0E8D               	movlw	high _iic_waite_ack
 41512  007E04  6EDD               	movwf	postdec2,c
 41513                           
 41514                           ; BSR set to: 0
 41515                           ;ex_eeprom.c: 22: pAt24c02->iic_received_byte_if_ack=iic_received_byte_if_ack;
 41516  007E06  0100               	movlb	0	; () banked
 41517  007E08  EE20 F009          	lfsr	2,9
 41518  007E0C  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 41519  007E0E  26D9               	addwf	fsr2l,f,c
 41520  007E10  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 41521  007E12  22DA               	addwfc	fsr2h,f,c
 41522  007E14  0E3C               	movlw	low _iic_received_byte_if_ack
 41523  007E16  6EDE               	movwf	postinc2,c
 41524  007E18  0E9A               	movlw	high _iic_received_byte_if_ack
 41525  007E1A  6EDD               	movwf	postdec2,c
 41526                           
 41527                           ; BSR set to: 0
 41528  007E1C  0012               	return		;funcret
 41529  007E1E                     __end_of_at24c02_init:
 41530                           	opt stack 0
 41531                           tosu	equ	0xFFF
 41532                           tosh	equ	0xFFE
 41533                           tosl	equ	0xFFD
 41534                           pclath	equ	0xFFA
 41535                           tblptru	equ	0xFF8
 41536                           tblptrh	equ	0xFF7
 41537                           tblptrl	equ	0xFF6
 41538                           tablat	equ	0xFF5
 41539                           prodh	equ	0xFF4
 41540                           prodl	equ	0xFF3
 41541                           intcon	equ	0xFF2
 41542                           indf0	equ	0xFEF
 41543                           postinc0	equ	0xFEE
 41544                           fsr0h	equ	0xFEA
 41545                           fsr0l	equ	0xFE9
 41546                           wreg	equ	0xFE8
 41547                           indf1	equ	0xFE7
 41548                           postinc1	equ	0xFE6
 41549                           postdec1	equ	0xFE5
 41550                           plusw1	equ	0xFE3
 41551                           fsr1h	equ	0xFE2
 41552                           fsr1l	equ	0xFE1
 41553                           indf2	equ	0xFDF
 41554                           postinc2	equ	0xFDE
 41555                           postdec2	equ	0xFDD
 41556                           plusw2	equ	0xFDB
 41557                           fsr2h	equ	0xFDA
 41558                           fsr2l	equ	0xFD9
 41559                           status	equ	0xFD8
 41560                           
 41561 ;; *************** function _ads1115_init_all_chip *****************
 41562 ;; Defined at:
 41563 ;;		line 112 in file "src/driver/ads1115.c"
 41564 ;; Parameters:    Size  Location     Type
 41565 ;;		None
 41566 ;; Auto vars:     Size  Location     Type
 41567 ;;		None
 41568 ;; Return value:  Size  Location     Type
 41569 ;;                  1    wreg      void 
 41570 ;; Registers used:
 41571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41572 ;; Tracked objects:
 41573 ;;		On entry : 0/0
 41574 ;;		On exit  : 0/0
 41575 ;;		Unchanged: 0/0
 41576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41581 ;;Total ram usage:        0 bytes
 41582 ;; Hardware stack levels used:    1
 41583 ;; Hardware stack levels required when called:    5
 41584 ;; This function calls:
 41585 ;;		_ads1115_init
 41586 ;; This function is called by:
 41587 ;;		_main
 41588 ;; This function uses a non-reentrant model
 41589 ;;
 41590                           
 41591                           	psect	text215
 41592  009296                     __ptext215:
 41593                           	opt stack 0
 41594  009296                     _ads1115_init_all_chip:
 41595                           	opt stack 25
 41596                           
 41597                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 41598                           
 41599                           ; BSR set to: 0
 41600                           ;incstack = 0
 41601  009296  0E72               	movlw	low _ads1115Chip0
 41602  009298  0100               	movlb	0	; () banked
 41603  00929A  6FEC               	movwf	_pAds1115PrObj& (0+255),b
 41604  00929C  0E01               	movlw	high _ads1115Chip0
 41605  00929E  0100               	movlb	0	; () banked
 41606  0092A0  6FED               	movwf	(_pAds1115PrObj+1)& (0+255),b
 41607                           
 41608                           ; BSR set to: 0
 41609                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 41610  0092A2  C0EC  F060         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 41611  0092A6  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 41612  0092AA  0E90               	movlw	144
 41613  0092AC  0100               	movlb	0	; () banked
 41614  0092AE  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 41615  0092B0  EC30  F039         	call	_ads1115_init	;wreg free
 41616                           
 41617                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 41618  0092B4  0EF0               	movlw	low _ads1115Chip1
 41619  0092B6  0100               	movlb	0	; () banked
 41620  0092B8  6FEE               	movwf	_pAds1115DiffPrObj& (0+255),b
 41621  0092BA  0E02               	movlw	high _ads1115Chip1
 41622  0092BC  0100               	movlb	0	; () banked
 41623  0092BE  6FEF               	movwf	(_pAds1115DiffPrObj+1)& (0+255),b
 41624                           
 41625                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 41626  0092C0  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 41627  0092C4  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 41628  0092C8  0E92               	movlw	146
 41629  0092CA  0100               	movlb	0	; () banked
 41630  0092CC  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 41631  0092CE  EC30  F039         	call	_ads1115_init	;wreg free
 41632  0092D2  0012               	return		;funcret
 41633  0092D4                     __end_of_ads1115_init_all_chip:
 41634                           	opt stack 0
 41635                           tosu	equ	0xFFF
 41636                           tosh	equ	0xFFE
 41637                           tosl	equ	0xFFD
 41638                           pclath	equ	0xFFA
 41639                           tblptru	equ	0xFF8
 41640                           tblptrh	equ	0xFF7
 41641                           tblptrl	equ	0xFF6
 41642                           tablat	equ	0xFF5
 41643                           prodh	equ	0xFF4
 41644                           prodl	equ	0xFF3
 41645                           intcon	equ	0xFF2
 41646                           indf0	equ	0xFEF
 41647                           postinc0	equ	0xFEE
 41648                           fsr0h	equ	0xFEA
 41649                           fsr0l	equ	0xFE9
 41650                           wreg	equ	0xFE8
 41651                           indf1	equ	0xFE7
 41652                           postinc1	equ	0xFE6
 41653                           postdec1	equ	0xFE5
 41654                           plusw1	equ	0xFE3
 41655                           fsr1h	equ	0xFE2
 41656                           fsr1l	equ	0xFE1
 41657                           indf2	equ	0xFDF
 41658                           postinc2	equ	0xFDE
 41659                           postdec2	equ	0xFDD
 41660                           plusw2	equ	0xFDB
 41661                           fsr2h	equ	0xFDA
 41662                           fsr2l	equ	0xFD9
 41663                           status	equ	0xFD8
 41664                           
 41665 ;; *************** function _ads1115_init *****************
 41666 ;; Defined at:
 41667 ;;		line 5 in file "src/driver/ads1115.c"
 41668 ;; Parameters:    Size  Location     Type
 41669 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 41670 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 41671 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 41672 ;; Auto vars:     Size  Location     Type
 41673 ;;		None
 41674 ;; Return value:  Size  Location     Type
 41675 ;;                  1    wreg      void 
 41676 ;; Registers used:
 41677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41678 ;; Tracked objects:
 41679 ;;		On entry : 0/0
 41680 ;;		On exit  : 0/0
 41681 ;;		Unchanged: 0/0
 41682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41683 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41687 ;;Total ram usage:        3 bytes
 41688 ;; Hardware stack levels used:    1
 41689 ;; Hardware stack levels required when called:    4
 41690 ;; This function calls:
 41691 ;;		Nothing
 41692 ;; This function is called by:
 41693 ;;		_ads1115_init_all_chip
 41694 ;; This function uses a non-reentrant model
 41695 ;;
 41696                           
 41697                           	psect	text216
 41698  007260                     __ptext216:
 41699                           	opt stack 0
 41700  007260                     _ads1115_init:
 41701                           	opt stack 25
 41702                           
 41703                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 41704                           
 41705                           ;incstack = 0
 41706  007260  C060  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 41707  007264  C061  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 41708  007268  0E05               	movlw	5
 41709  00726A  6EDF               	movwf	indf2,c
 41710                           
 41711                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 41712  00726C  0100               	movlb	0	; () banked
 41713  00726E  EE20 F001          	lfsr	2,1
 41714  007272  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41715  007274  26D9               	addwf	fsr2l,f,c
 41716  007276  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41717  007278  22DA               	addwfc	fsr2h,f,c
 41718  00727A  C062  FFDF         	movff	ads1115_init@slvaddr,indf2
 41719                           
 41720                           ; BSR set to: 0
 41721                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 41722  00727E  0100               	movlb	0	; () banked
 41723  007280  EE20 F002          	lfsr	2,2
 41724  007284  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41725  007286  26D9               	addwf	fsr2l,f,c
 41726  007288  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41727  00728A  22DA               	addwfc	fsr2h,f,c
 41728  00728C  0E83               	movlw	131
 41729  00728E  6EDE               	movwf	postinc2,c
 41730  007290  0E85               	movlw	133
 41731  007292  6EDD               	movwf	postdec2,c
 41732                           
 41733                           ; BSR set to: 0
 41734                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 41735  007294  0100               	movlb	0	; () banked
 41736  007296  EE20 F006          	lfsr	2,6
 41737  00729A  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41738  00729C  26D9               	addwf	fsr2l,f,c
 41739  00729E  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41740  0072A0  22DA               	addwfc	fsr2h,f,c
 41741  0072A2  0EF4               	movlw	low _iic_start
 41742  0072A4  6EDE               	movwf	postinc2,c
 41743  0072A6  0E93               	movlw	high _iic_start
 41744  0072A8  6EDD               	movwf	postdec2,c
 41745                           
 41746                           ; BSR set to: 0
 41747                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 41748  0072AA  0100               	movlb	0	; () banked
 41749  0072AC  EE20 F008          	lfsr	2,8
 41750  0072B0  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41751  0072B2  26D9               	addwf	fsr2l,f,c
 41752  0072B4  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41753  0072B6  22DA               	addwfc	fsr2h,f,c
 41754  0072B8  0E06               	movlw	low _iic_stop
 41755  0072BA  6EDE               	movwf	postinc2,c
 41756  0072BC  0E95               	movlw	high _iic_stop
 41757  0072BE  6EDD               	movwf	postdec2,c
 41758                           
 41759                           ; BSR set to: 0
 41760                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 41761  0072C0  0100               	movlb	0	; () banked
 41762  0072C2  EE20 F00A          	lfsr	2,10
 41763  0072C6  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41764  0072C8  26D9               	addwf	fsr2l,f,c
 41765  0072CA  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41766  0072CC  22DA               	addwfc	fsr2h,f,c
 41767  0072CE  0EEE               	movlw	low _iic_send_byte
 41768  0072D0  6EDE               	movwf	postinc2,c
 41769  0072D2  0E80               	movlw	high _iic_send_byte
 41770  0072D4  6EDD               	movwf	postdec2,c
 41771                           
 41772                           ; BSR set to: 0
 41773                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 41774  0072D6  0100               	movlb	0	; () banked
 41775  0072D8  EE20 F00C          	lfsr	2,12
 41776  0072DC  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41777  0072DE  26D9               	addwf	fsr2l,f,c
 41778  0072E0  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41779  0072E2  22DA               	addwfc	fsr2h,f,c
 41780  0072E4  0EB0               	movlw	low _iic_waite_ack
 41781  0072E6  6EDE               	movwf	postinc2,c
 41782  0072E8  0E8D               	movlw	high _iic_waite_ack
 41783  0072EA  6EDD               	movwf	postdec2,c
 41784                           
 41785                           ; BSR set to: 0
 41786                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 41787  0072EC  0100               	movlb	0	; () banked
 41788  0072EE  EE20 F00E          	lfsr	2,14
 41789  0072F2  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 41790  0072F4  26D9               	addwf	fsr2l,f,c
 41791  0072F6  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 41792  0072F8  22DA               	addwfc	fsr2h,f,c
 41793  0072FA  0E3C               	movlw	low _iic_received_byte_if_ack
 41794  0072FC  6EDE               	movwf	postinc2,c
 41795  0072FE  0E9A               	movlw	high _iic_received_byte_if_ack
 41796  007300  6EDD               	movwf	postdec2,c
 41797                           
 41798                           ; BSR set to: 0
 41799  007302  0012               	return		;funcret
 41800  007304                     __end_of_ads1115_init:
 41801                           	opt stack 0
 41802                           tosu	equ	0xFFF
 41803                           tosh	equ	0xFFE
 41804                           tosl	equ	0xFFD
 41805                           pclath	equ	0xFFA
 41806                           tblptru	equ	0xFF8
 41807                           tblptrh	equ	0xFF7
 41808                           tblptrl	equ	0xFF6
 41809                           tablat	equ	0xFF5
 41810                           prodh	equ	0xFF4
 41811                           prodl	equ	0xFF3
 41812                           intcon	equ	0xFF2
 41813                           indf0	equ	0xFEF
 41814                           postinc0	equ	0xFEE
 41815                           fsr0h	equ	0xFEA
 41816                           fsr0l	equ	0xFE9
 41817                           wreg	equ	0xFE8
 41818                           indf1	equ	0xFE7
 41819                           postinc1	equ	0xFE6
 41820                           postdec1	equ	0xFE5
 41821                           plusw1	equ	0xFE3
 41822                           fsr1h	equ	0xFE2
 41823                           fsr1l	equ	0xFE1
 41824                           indf2	equ	0xFDF
 41825                           postinc2	equ	0xFDE
 41826                           postdec2	equ	0xFDD
 41827                           plusw2	equ	0xFDB
 41828                           fsr2h	equ	0xFDA
 41829                           fsr2l	equ	0xFD9
 41830                           status	equ	0xFD8
 41831                           
 41832 ;; *************** function _handler_interrupt_low *****************
 41833 ;; Defined at:
 41834 ;;		line 38 in file "src/soc/int.c"
 41835 ;; Parameters:    Size  Location     Type
 41836 ;;		None
 41837 ;; Auto vars:     Size  Location     Type
 41838 ;;		None
 41839 ;; Return value:  Size  Location     Type
 41840 ;;                  1    wreg      void 
 41841 ;; Registers used:
 41842 ;;		wreg, status,2, status,0, cstack
 41843 ;; Tracked objects:
 41844 ;;		On entry : 0/0
 41845 ;;		On exit  : 0/0
 41846 ;;		Unchanged: 0/0
 41847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41850 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41851 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41852 ;;Total ram usage:       17 bytes
 41853 ;; Hardware stack levels used:    1
 41854 ;; Hardware stack levels required when called:    3
 41855 ;; This function calls:
 41856 ;;		_rtc_alrm_irq_hook
 41857 ;;		_sys_ticker_irq_hook
 41858 ;; This function is called by:
 41859 ;;		Interrupt level 1
 41860 ;; This function uses a non-reentrant model
 41861 ;;
 41862                           
 41863                           	psect	intcodelo
 41864  000018                     __pintcodelo:
 41865                           	opt stack 0
 41866  000018                     _handler_interrupt_low:
 41867                           	opt stack 17
 41868                           
 41869                           ; BSR set to: 0
 41870                           ;incstack = 0
 41871  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 41872  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 41873  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 41874  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 41875  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 41876  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 41877  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 41878  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 41879  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 41880  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 41881  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 41882  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 41883  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 41884  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 41885  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 41886  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 41887  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 41888  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 41889                           
 41890                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 41891  00005E  B29D               	btfsc	3997,1,c	;volatile
 41892  000060  A29E               	btfss	3998,1,c	;volatile
 41893  000062  D00D               	goto	i1l13036
 41894  000064  B29F               	btfsc	3999,1,c	;volatile
 41895  000066  D00B               	goto	i1l13036
 41896                           
 41897                           ;int.c: 41: PIR1bits.TMR2IF=0;
 41898  000068  929E               	bcf	3998,1,c	;volatile
 41899                           
 41900                           ;int.c: 42: glTicker++;
 41901  00006A  0E01               	movlw	1
 41902  00006C  0101               	movlb	1	; () banked
 41903  00006E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 41904  000070  0E00               	movlw	0
 41905  000072  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 41906  000074  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 41907  000076  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 41908                           
 41909                           ; BSR set to: 1
 41910                           ;int.c: 43: glbEvent |= (1<<0);
 41911  000078  802E               	bsf	_glbEvent,0,c	;volatile
 41912                           
 41913                           ; BSR set to: 1
 41914                           ;int.c: 44: sys_ticker_irq_hook();
 41915  00007A  EC83  F04D         	call	_sys_ticker_irq_hook	;wreg free
 41916  00007E                     i1l13036:
 41917                           
 41918                           ;int.c: 45: }
 41919                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 41920  00007E  B0A3               	btfsc	4003,0,c	;volatile
 41921  000080  A0A4               	btfss	4004,0,c	;volatile
 41922  000082  D006               	goto	i1l2312
 41923  000084  B0A5               	btfsc	4005,0,c	;volatile
 41924  000086  D004               	goto	i1l2312
 41925                           
 41926                           ;int.c: 47: PIR3bits.RTCCIF=0;
 41927  000088  90A4               	bcf	4004,0,c	;volatile
 41928                           
 41929                           ;int.c: 48: glbEvent |= (1<<1);
 41930  00008A  822E               	bsf	_glbEvent,1,c	;volatile
 41931                           
 41932                           ;int.c: 49: rtc_alrm_irq_hook();
 41933  00008C  EC5D  F04E         	call	_rtc_alrm_irq_hook	;wreg free
 41934  000090                     i1l2312:
 41935  000090  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 41936  000094  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 41937  000098  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 41938  00009C  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 41939  0000A0  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 41940  0000A4  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 41941  0000A8  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 41942  0000AC  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 41943  0000B0  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 41944  0000B4  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 41945  0000B8  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 41946  0000BC  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 41947  0000C0  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 41948  0000C4  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 41949  0000C8  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 41950  0000CC  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 41951  0000D0  C00F  FFD8         	movff	??_handler_interrupt_low,status
 41952  0000D4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 41953  0000D6  0010               	retfie	
 41954  0000D8                     __end_of_handler_interrupt_low:
 41955                           	opt stack 0
 41956                           tosu	equ	0xFFF
 41957                           tosh	equ	0xFFE
 41958                           tosl	equ	0xFFD
 41959                           pclatu	equ	0xFFB
 41960                           pclath	equ	0xFFA
 41961                           tblptru	equ	0xFF8
 41962                           tblptrh	equ	0xFF7
 41963                           tblptrl	equ	0xFF6
 41964                           tablat	equ	0xFF5
 41965                           prodh	equ	0xFF4
 41966                           prodl	equ	0xFF3
 41967                           intcon	equ	0xFF2
 41968                           indf0	equ	0xFEF
 41969                           postinc0	equ	0xFEE
 41970                           fsr0h	equ	0xFEA
 41971                           fsr0l	equ	0xFE9
 41972                           wreg	equ	0xFE8
 41973                           indf1	equ	0xFE7
 41974                           postinc1	equ	0xFE6
 41975                           postdec1	equ	0xFE5
 41976                           plusw1	equ	0xFE3
 41977                           fsr1h	equ	0xFE2
 41978                           fsr1l	equ	0xFE1
 41979                           bsr	equ	0xFE0
 41980                           indf2	equ	0xFDF
 41981                           postinc2	equ	0xFDE
 41982                           postdec2	equ	0xFDD
 41983                           plusw2	equ	0xFDB
 41984                           fsr2h	equ	0xFDA
 41985                           fsr2l	equ	0xFD9
 41986                           status	equ	0xFD8
 41987                           
 41988 ;; *************** function _sys_ticker_irq_hook *****************
 41989 ;; Defined at:
 41990 ;;		line 40 in file "src/soc/ticker.c"
 41991 ;; Parameters:    Size  Location     Type
 41992 ;;		None
 41993 ;; Auto vars:     Size  Location     Type
 41994 ;;		None
 41995 ;; Return value:  Size  Location     Type
 41996 ;;                  1    wreg      void 
 41997 ;; Registers used:
 41998 ;;		wreg, status,2, status,0
 41999 ;; Tracked objects:
 42000 ;;		On entry : 0/0
 42001 ;;		On exit  : 0/0
 42002 ;;		Unchanged: 0/0
 42003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42008 ;;Total ram usage:        0 bytes
 42009 ;; Hardware stack levels used:    1
 42010 ;; Hardware stack levels required when called:    2
 42011 ;; This function calls:
 42012 ;;		Nothing
 42013 ;; This function is called by:
 42014 ;;		_handler_interrupt_low
 42015 ;; This function uses a non-reentrant model
 42016 ;;
 42017                           
 42018                           	psect	text218
 42019  009B06                     __ptext218:
 42020                           	opt stack 0
 42021  009B06                     _sys_ticker_irq_hook:
 42022                           	opt stack 17
 42023                           
 42024                           ;ticker.c: 42: if(dlyTickerEn){
 42025                           
 42026                           ;incstack = 0
 42027  009B06  502B               	movf	_dlyTickerEn,w,c
 42028  009B08  B4D8               	btfsc	status,2,c
 42029  009B0A  D005               	goto	i1l2411
 42030                           
 42031                           ;ticker.c: 43: dlyTicker+=10;
 42032  009B0C  0E0A               	movlw	10
 42033  009B0E  0101               	movlb	1	; () banked
 42034  009B10  275E               	addwf	_dlyTicker& (0+255),f,b
 42035  009B12  0E00               	movlw	0
 42036  009B14  235F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 42037  009B16                     i1l2411:
 42038                           
 42039                           ;ticker.c: 44: }
 42040                           ;ticker.c: 45: userTicker_ms+=20;
 42041  009B16  0E14               	movlw	20
 42042  009B18  2625               	addwf	_userTicker_ms,f,c	;volatile
 42043  009B1A  0E00               	movlw	0
 42044  009B1C  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 42045  009B1E  0012               	return		;funcret
 42046  009B20                     __end_of_sys_ticker_irq_hook:
 42047                           	opt stack 0
 42048                           tosu	equ	0xFFF
 42049                           tosh	equ	0xFFE
 42050                           tosl	equ	0xFFD
 42051                           pclatu	equ	0xFFB
 42052                           pclath	equ	0xFFA
 42053                           tblptru	equ	0xFF8
 42054                           tblptrh	equ	0xFF7
 42055                           tblptrl	equ	0xFF6
 42056                           tablat	equ	0xFF5
 42057                           prodh	equ	0xFF4
 42058                           prodl	equ	0xFF3
 42059                           intcon	equ	0xFF2
 42060                           indf0	equ	0xFEF
 42061                           postinc0	equ	0xFEE
 42062                           fsr0h	equ	0xFEA
 42063                           fsr0l	equ	0xFE9
 42064                           wreg	equ	0xFE8
 42065                           indf1	equ	0xFE7
 42066                           postinc1	equ	0xFE6
 42067                           postdec1	equ	0xFE5
 42068                           plusw1	equ	0xFE3
 42069                           fsr1h	equ	0xFE2
 42070                           fsr1l	equ	0xFE1
 42071                           bsr	equ	0xFE0
 42072                           indf2	equ	0xFDF
 42073                           postinc2	equ	0xFDE
 42074                           postdec2	equ	0xFDD
 42075                           plusw2	equ	0xFDB
 42076                           fsr2h	equ	0xFDA
 42077                           fsr2l	equ	0xFD9
 42078                           status	equ	0xFD8
 42079                           
 42080 ;; *************** function _rtc_alrm_irq_hook *****************
 42081 ;; Defined at:
 42082 ;;		line 103 in file "src/soc/rtc.c"
 42083 ;; Parameters:    Size  Location     Type
 42084 ;;		None
 42085 ;; Auto vars:     Size  Location     Type
 42086 ;;		None
 42087 ;; Return value:  Size  Location     Type
 42088 ;;                  1    wreg      void 
 42089 ;; Registers used:
 42090 ;;		None
 42091 ;; Tracked objects:
 42092 ;;		On entry : 0/0
 42093 ;;		On exit  : 0/0
 42094 ;;		Unchanged: 0/0
 42095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42100 ;;Total ram usage:        0 bytes
 42101 ;; Hardware stack levels used:    1
 42102 ;; Hardware stack levels required when called:    2
 42103 ;; This function calls:
 42104 ;;		Nothing
 42105 ;; This function is called by:
 42106 ;;		_handler_interrupt_low
 42107 ;; This function uses a non-reentrant model
 42108 ;;
 42109                           
 42110                           	psect	text219
 42111  009CBA                     __ptext219:
 42112                           	opt stack 0
 42113  009CBA                     _rtc_alrm_irq_hook:
 42114                           	opt stack 17
 42115                           
 42116                           ;incstack = 0
 42117  009CBA  0012               	return		;funcret
 42118  009CBC                     __end_of_rtc_alrm_irq_hook:
 42119                           	opt stack 0
 42120                           tosu	equ	0xFFF
 42121                           tosh	equ	0xFFE
 42122                           tosl	equ	0xFFD
 42123                           pclatu	equ	0xFFB
 42124                           pclath	equ	0xFFA
 42125                           tblptru	equ	0xFF8
 42126                           tblptrh	equ	0xFF7
 42127                           tblptrl	equ	0xFF6
 42128                           tablat	equ	0xFF5
 42129                           prodh	equ	0xFF4
 42130                           prodl	equ	0xFF3
 42131                           intcon	equ	0xFF2
 42132                           indf0	equ	0xFEF
 42133                           postinc0	equ	0xFEE
 42134                           fsr0h	equ	0xFEA
 42135                           fsr0l	equ	0xFE9
 42136                           wreg	equ	0xFE8
 42137                           indf1	equ	0xFE7
 42138                           postinc1	equ	0xFE6
 42139                           postdec1	equ	0xFE5
 42140                           plusw1	equ	0xFE3
 42141                           fsr1h	equ	0xFE2
 42142                           fsr1l	equ	0xFE1
 42143                           bsr	equ	0xFE0
 42144                           indf2	equ	0xFDF
 42145                           postinc2	equ	0xFDE
 42146                           postdec2	equ	0xFDD
 42147                           plusw2	equ	0xFDB
 42148                           fsr2h	equ	0xFDA
 42149                           fsr2l	equ	0xFD9
 42150                           status	equ	0xFD8
 42151                           
 42152 ;; *************** function _handler_interrupt_hight *****************
 42153 ;; Defined at:
 42154 ;;		line 9 in file "src/soc/int.c"
 42155 ;; Parameters:    Size  Location     Type
 42156 ;;		None
 42157 ;; Auto vars:     Size  Location     Type
 42158 ;;		None
 42159 ;; Return value:  Size  Location     Type
 42160 ;;                  1    wreg      void 
 42161 ;; Registers used:
 42162 ;;		wreg, status,2, status,0, cstack
 42163 ;; Tracked objects:
 42164 ;;		On entry : 0/0
 42165 ;;		On exit  : 0/0
 42166 ;;		Unchanged: 0/0
 42167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42170 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42171 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42172 ;;Total ram usage:       14 bytes
 42173 ;; Hardware stack levels used:    1
 42174 ;; Hardware stack levels required when called:    1
 42175 ;; This function calls:
 42176 ;;		i2_rtc_alrm_irq_hook
 42177 ;;		i2_sys_ticker_irq_hook
 42178 ;; This function is called by:
 42179 ;;		Interrupt level 2
 42180 ;; This function uses a non-reentrant model
 42181 ;;
 42182                           
 42183                           	psect	intcode
 42184  000008                     __pintcode:
 42185                           	opt stack 0
 42186  000008                     _handler_interrupt_hight:
 42187                           	opt stack 17
 42188                           
 42189                           ;incstack = 0
 42190  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 42191  00000A  EF80  F033         	goto	int_func
 42192                           tosu	equ	0xFFF
 42193                           tosh	equ	0xFFE
 42194                           tosl	equ	0xFFD
 42195                           pclatu	equ	0xFFB
 42196                           pclath	equ	0xFFA
 42197                           tblptru	equ	0xFF8
 42198                           tblptrh	equ	0xFF7
 42199                           tblptrl	equ	0xFF6
 42200                           tablat	equ	0xFF5
 42201                           prodh	equ	0xFF4
 42202                           prodl	equ	0xFF3
 42203                           intcon	equ	0xFF2
 42204                           indf0	equ	0xFEF
 42205                           postinc0	equ	0xFEE
 42206                           fsr0h	equ	0xFEA
 42207                           fsr0l	equ	0xFE9
 42208                           wreg	equ	0xFE8
 42209                           indf1	equ	0xFE7
 42210                           postinc1	equ	0xFE6
 42211                           postdec1	equ	0xFE5
 42212                           plusw1	equ	0xFE3
 42213                           fsr1h	equ	0xFE2
 42214                           fsr1l	equ	0xFE1
 42215                           bsr	equ	0xFE0
 42216                           indf2	equ	0xFDF
 42217                           postinc2	equ	0xFDE
 42218                           postdec2	equ	0xFDD
 42219                           plusw2	equ	0xFDB
 42220                           fsr2h	equ	0xFDA
 42221                           fsr2l	equ	0xFD9
 42222                           status	equ	0xFD8
 42223                           
 42224                           	psect	intcode_body
 42225  006700                     __pintcode_body:
 42226                           	opt stack 17
 42227  006700                     int_func:
 42228                           	opt stack 17
 42229  006700  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 42230  006704  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 42231  006708  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 42232  00670C  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 42233  006710  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 42234  006714  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 42235  006718  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 42236  00671C  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 42237  006720  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 42238  006724  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 42239  006728  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 42240  00672C  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 42241  006730  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 42242  006734  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 42243                           
 42244                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 42245  006738  BAF2               	btfsc	intcon,5,c	;volatile
 42246  00673A  A4F2               	btfss	intcon,2,c	;volatile
 42247  00673C  D002               	goto	i2l2301
 42248  00673E  B4F1               	btfsc	intcon2,2,c	;volatile
 42249                           
 42250                           ;int.c: 13: __nop();
 42251  006740  F000               	nop	
 42252  006742                     i2l2301:
 42253                           
 42254                           ;int.c: 14: }
 42255                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 42256  006742  BCF2               	btfsc	intcon,6,c	;volatile
 42257  006744  A89D               	btfss	3997,4,c	;volatile
 42258  006746  D001               	goto	i2l2302
 42259  006748  509E               	movf	3998,w,c	;volatile
 42260  00674A                     i2l2302:
 42261                           
 42262                           ;int.c: 17: }
 42263                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 42264  00674A  BCF2               	btfsc	intcon,6,c	;volatile
 42265  00674C  AA9D               	btfss	3997,5,c	;volatile
 42266  00674E  D001               	goto	i2l2303
 42267  006750  509E               	movf	3998,w,c	;volatile
 42268  006752                     i2l2303:
 42269                           
 42270                           ;int.c: 20: }
 42271                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 42272  006752  BCF2               	btfsc	intcon,6,c	;volatile
 42273  006754  A09D               	btfss	3997,0,c	;volatile
 42274  006756  D001               	goto	i2l2304
 42275  006758  509E               	movf	3998,w,c	;volatile
 42276  00675A                     i2l2304:
 42277                           
 42278                           ;int.c: 23: }
 42279                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 42280  00675A  B29D               	btfsc	3997,1,c	;volatile
 42281  00675C  A29E               	btfss	3998,1,c	;volatile
 42282  00675E  D00D               	goto	i2l13010
 42283  006760  A29F               	btfss	3999,1,c	;volatile
 42284  006762  D00B               	goto	i2l13010
 42285                           
 42286                           ;int.c: 26: PIR1bits.TMR2IF=0;
 42287  006764  929E               	bcf	3998,1,c	;volatile
 42288                           
 42289                           ;int.c: 27: glTicker++;
 42290  006766  0E01               	movlw	1
 42291  006768  0101               	movlb	1	; () banked
 42292  00676A  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 42293  00676C  0E00               	movlw	0
 42294  00676E  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 42295  006770  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 42296  006772  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 42297                           
 42298                           ; BSR set to: 1
 42299                           ;int.c: 28: glbEvent |= (1<<0);
 42300  006774  802E               	bsf	_glbEvent,0,c	;volatile
 42301                           
 42302                           ; BSR set to: 1
 42303                           ;int.c: 29: sys_ticker_irq_hook();
 42304  006776  EC90  F04D         	call	i2_sys_ticker_irq_hook	;wreg free
 42305  00677A                     i2l13010:
 42306                           
 42307                           ;int.c: 30: }
 42308                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 42309  00677A  B0A3               	btfsc	4003,0,c	;volatile
 42310  00677C  A0A4               	btfss	4004,0,c	;volatile
 42311  00677E  D006               	goto	i2l2307
 42312  006780  A0A5               	btfss	4005,0,c	;volatile
 42313  006782  D004               	goto	i2l2307
 42314                           
 42315                           ;int.c: 32: PIR3bits.RTCCIF=0;
 42316  006784  90A4               	bcf	4004,0,c	;volatile
 42317                           
 42318                           ;int.c: 33: glbEvent |= (1<<1);
 42319  006786  822E               	bsf	_glbEvent,1,c	;volatile
 42320                           
 42321                           ;int.c: 34: rtc_alrm_irq_hook();
 42322  006788  EC5E  F04E         	call	i2_rtc_alrm_irq_hook	;wreg free
 42323  00678C                     i2l2307:
 42324  00678C  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 42325  006790  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 42326  006794  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 42327  006798  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 42328  00679C  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 42329  0067A0  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 42330  0067A4  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 42331  0067A8  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 42332  0067AC  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 42333  0067B0  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 42334  0067B4  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 42335  0067B8  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 42336  0067BC  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 42337  0067C0  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 42338  0067C4  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 42339  0067C6  0011               	retfie		f
 42340  0067C8                     __end_of_handler_interrupt_hight:
 42341                           	opt stack 0
 42342                           tosu	equ	0xFFF
 42343                           tosh	equ	0xFFE
 42344                           tosl	equ	0xFFD
 42345                           pclatu	equ	0xFFB
 42346                           pclath	equ	0xFFA
 42347                           tblptru	equ	0xFF8
 42348                           tblptrh	equ	0xFF7
 42349                           tblptrl	equ	0xFF6
 42350                           tablat	equ	0xFF5
 42351                           prodh	equ	0xFF4
 42352                           prodl	equ	0xFF3
 42353                           intcon	equ	0xFF2
 42354                           intcon2	equ	0xFF1
 42355                           indf0	equ	0xFEF
 42356                           postinc0	equ	0xFEE
 42357                           fsr0h	equ	0xFEA
 42358                           fsr0l	equ	0xFE9
 42359                           wreg	equ	0xFE8
 42360                           indf1	equ	0xFE7
 42361                           postinc1	equ	0xFE6
 42362                           postdec1	equ	0xFE5
 42363                           plusw1	equ	0xFE3
 42364                           fsr1h	equ	0xFE2
 42365                           fsr1l	equ	0xFE1
 42366                           bsr	equ	0xFE0
 42367                           indf2	equ	0xFDF
 42368                           postinc2	equ	0xFDE
 42369                           postdec2	equ	0xFDD
 42370                           plusw2	equ	0xFDB
 42371                           fsr2h	equ	0xFDA
 42372                           fsr2l	equ	0xFD9
 42373                           status	equ	0xFD8
 42374                           
 42375 ;; *************** function i2_sys_ticker_irq_hook *****************
 42376 ;; Defined at:
 42377 ;;		line 40 in file "src/soc/ticker.c"
 42378 ;; Parameters:    Size  Location     Type
 42379 ;;		None
 42380 ;; Auto vars:     Size  Location     Type
 42381 ;;		None
 42382 ;; Return value:  Size  Location     Type
 42383 ;;                  1    wreg      void 
 42384 ;; Registers used:
 42385 ;;		wreg, status,2, status,0
 42386 ;; Tracked objects:
 42387 ;;		On entry : 0/0
 42388 ;;		On exit  : 0/0
 42389 ;;		Unchanged: 0/0
 42390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42395 ;;Total ram usage:        0 bytes
 42396 ;; Hardware stack levels used:    1
 42397 ;; This function calls:
 42398 ;;		Nothing
 42399 ;; This function is called by:
 42400 ;;		_handler_interrupt_hight
 42401 ;; This function uses a non-reentrant model
 42402 ;;
 42403                           
 42404                           	psect	text221
 42405  009B20                     __ptext221:
 42406                           	opt stack 0
 42407  009B20                     i2_sys_ticker_irq_hook:
 42408                           	opt stack 17
 42409                           
 42410                           ;ticker.c: 42: if(dlyTickerEn){
 42411                           
 42412                           ;incstack = 0
 42413  009B20  502B               	movf	_dlyTickerEn,w,c
 42414  009B22  B4D8               	btfsc	status,2,c
 42415  009B24  D005               	goto	i2l2411
 42416                           
 42417                           ;ticker.c: 43: dlyTicker+=10;
 42418  009B26  0E0A               	movlw	10
 42419  009B28  0101               	movlb	1	; () banked
 42420  009B2A  275E               	addwf	_dlyTicker& (0+255),f,b
 42421  009B2C  0E00               	movlw	0
 42422  009B2E  235F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 42423  009B30                     i2l2411:
 42424                           
 42425                           ;ticker.c: 44: }
 42426                           ;ticker.c: 45: userTicker_ms+=20;
 42427  009B30  0E14               	movlw	20
 42428  009B32  2625               	addwf	_userTicker_ms,f,c	;volatile
 42429  009B34  0E00               	movlw	0
 42430  009B36  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 42431  009B38  0012               	return		;funcret
 42432  009B3A                     __end_ofi2_sys_ticker_irq_hook:
 42433                           	opt stack 0
 42434                           tosu	equ	0xFFF
 42435                           tosh	equ	0xFFE
 42436                           tosl	equ	0xFFD
 42437                           pclatu	equ	0xFFB
 42438                           pclath	equ	0xFFA
 42439                           tblptru	equ	0xFF8
 42440                           tblptrh	equ	0xFF7
 42441                           tblptrl	equ	0xFF6
 42442                           tablat	equ	0xFF5
 42443                           prodh	equ	0xFF4
 42444                           prodl	equ	0xFF3
 42445                           intcon	equ	0xFF2
 42446                           intcon2	equ	0xFF1
 42447                           indf0	equ	0xFEF
 42448                           postinc0	equ	0xFEE
 42449                           fsr0h	equ	0xFEA
 42450                           fsr0l	equ	0xFE9
 42451                           wreg	equ	0xFE8
 42452                           indf1	equ	0xFE7
 42453                           postinc1	equ	0xFE6
 42454                           postdec1	equ	0xFE5
 42455                           plusw1	equ	0xFE3
 42456                           fsr1h	equ	0xFE2
 42457                           fsr1l	equ	0xFE1
 42458                           bsr	equ	0xFE0
 42459                           indf2	equ	0xFDF
 42460                           postinc2	equ	0xFDE
 42461                           postdec2	equ	0xFDD
 42462                           plusw2	equ	0xFDB
 42463                           fsr2h	equ	0xFDA
 42464                           fsr2l	equ	0xFD9
 42465                           status	equ	0xFD8
 42466                           
 42467 ;; *************** function i2_rtc_alrm_irq_hook *****************
 42468 ;; Defined at:
 42469 ;;		line 103 in file "src/soc/rtc.c"
 42470 ;; Parameters:    Size  Location     Type
 42471 ;;		None
 42472 ;; Auto vars:     Size  Location     Type
 42473 ;;		None
 42474 ;; Return value:  Size  Location     Type
 42475 ;;                  1    wreg      void 
 42476 ;; Registers used:
 42477 ;;		None
 42478 ;; Tracked objects:
 42479 ;;		On entry : 0/0
 42480 ;;		On exit  : 0/0
 42481 ;;		Unchanged: 0/0
 42482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42487 ;;Total ram usage:        0 bytes
 42488 ;; Hardware stack levels used:    1
 42489 ;; This function calls:
 42490 ;;		Nothing
 42491 ;; This function is called by:
 42492 ;;		_handler_interrupt_hight
 42493 ;; This function uses a non-reentrant model
 42494 ;;
 42495                           
 42496                           	psect	text222
 42497  009CBC                     __ptext222:
 42498                           	opt stack 0
 42499  009CBC                     i2_rtc_alrm_irq_hook:
 42500                           	opt stack 17
 42501                           
 42502                           ;incstack = 0
 42503  009CBC  0012               	return		;funcret
 42504  009CBE                     __end_ofi2_rtc_alrm_irq_hook:
 42505                           	opt stack 0
 42506                           tosu	equ	0xFFF
 42507                           tosh	equ	0xFFE
 42508                           tosl	equ	0xFFD
 42509                           pclatu	equ	0xFFB
 42510                           pclath	equ	0xFFA
 42511                           tblptru	equ	0xFF8
 42512                           tblptrh	equ	0xFF7
 42513                           tblptrl	equ	0xFF6
 42514                           tablat	equ	0xFF5
 42515                           prodh	equ	0xFF4
 42516                           prodl	equ	0xFF3
 42517                           intcon	equ	0xFF2
 42518                           intcon2	equ	0xFF1
 42519                           indf0	equ	0xFEF
 42520                           postinc0	equ	0xFEE
 42521                           fsr0h	equ	0xFEA
 42522                           fsr0l	equ	0xFE9
 42523                           wreg	equ	0xFE8
 42524                           indf1	equ	0xFE7
 42525                           postinc1	equ	0xFE6
 42526                           postdec1	equ	0xFE5
 42527                           plusw1	equ	0xFE3
 42528                           fsr1h	equ	0xFE2
 42529                           fsr1l	equ	0xFE1
 42530                           bsr	equ	0xFE0
 42531                           indf2	equ	0xFDF
 42532                           postinc2	equ	0xFDE
 42533                           postdec2	equ	0xFDD
 42534                           plusw2	equ	0xFDB
 42535                           fsr2h	equ	0xFDA
 42536                           fsr2l	equ	0xFD9
 42537                           status	equ	0xFD8
 42538                           tosu	equ	0xFFF
 42539                           tosh	equ	0xFFE
 42540                           tosl	equ	0xFFD
 42541                           pclatu	equ	0xFFB
 42542                           pclath	equ	0xFFA
 42543                           tblptru	equ	0xFF8
 42544                           tblptrh	equ	0xFF7
 42545                           tblptrl	equ	0xFF6
 42546                           tablat	equ	0xFF5
 42547                           prodh	equ	0xFF4
 42548                           prodl	equ	0xFF3
 42549                           intcon	equ	0xFF2
 42550                           intcon2	equ	0xFF1
 42551                           indf0	equ	0xFEF
 42552                           postinc0	equ	0xFEE
 42553                           fsr0h	equ	0xFEA
 42554                           fsr0l	equ	0xFE9
 42555                           wreg	equ	0xFE8
 42556                           indf1	equ	0xFE7
 42557                           postinc1	equ	0xFE6
 42558                           postdec1	equ	0xFE5
 42559                           plusw1	equ	0xFE3
 42560                           fsr1h	equ	0xFE2
 42561                           fsr1l	equ	0xFE1
 42562                           bsr	equ	0xFE0
 42563                           indf2	equ	0xFDF
 42564                           postinc2	equ	0xFDE
 42565                           postdec2	equ	0xFDD
 42566                           plusw2	equ	0xFDB
 42567                           fsr2h	equ	0xFDA
 42568                           fsr2l	equ	0xFD9
 42569                           status	equ	0xFD8
 42570                           
 42571                           	psect	text223
 42572  000000                     __ptext223:
 42573                           	opt stack 0
 42574                           tosu	equ	0xFFF
 42575                           tosh	equ	0xFFE
 42576                           tosl	equ	0xFFD
 42577                           pclatu	equ	0xFFB
 42578                           pclath	equ	0xFFA
 42579                           tblptru	equ	0xFF8
 42580                           tblptrh	equ	0xFF7
 42581                           tblptrl	equ	0xFF6
 42582                           tablat	equ	0xFF5
 42583                           prodh	equ	0xFF4
 42584                           prodl	equ	0xFF3
 42585                           intcon	equ	0xFF2
 42586                           intcon2	equ	0xFF1
 42587                           indf0	equ	0xFEF
 42588                           postinc0	equ	0xFEE
 42589                           fsr0h	equ	0xFEA
 42590                           fsr0l	equ	0xFE9
 42591                           wreg	equ	0xFE8
 42592                           indf1	equ	0xFE7
 42593                           postinc1	equ	0xFE6
 42594                           postdec1	equ	0xFE5
 42595                           plusw1	equ	0xFE3
 42596                           fsr1h	equ	0xFE2
 42597                           fsr1l	equ	0xFE1
 42598                           bsr	equ	0xFE0
 42599                           indf2	equ	0xFDF
 42600                           postinc2	equ	0xFDE
 42601                           postdec2	equ	0xFDD
 42602                           plusw2	equ	0xFDB
 42603                           fsr2h	equ	0xFDA
 42604                           fsr2l	equ	0xFD9
 42605                           status	equ	0xFD8
 42606                           
 42607                           	psect	rparam
 42608  0000                     tosu	equ	0xFFF
 42609                           tosh	equ	0xFFE
 42610                           tosl	equ	0xFFD
 42611                           pclatu	equ	0xFFB
 42612                           pclath	equ	0xFFA
 42613                           tblptru	equ	0xFF8
 42614                           tblptrh	equ	0xFF7
 42615                           tblptrl	equ	0xFF6
 42616                           tablat	equ	0xFF5
 42617                           prodh	equ	0xFF4
 42618                           prodl	equ	0xFF3
 42619                           intcon	equ	0xFF2
 42620                           intcon2	equ	0xFF1
 42621                           indf0	equ	0xFEF
 42622                           postinc0	equ	0xFEE
 42623                           fsr0h	equ	0xFEA
 42624                           fsr0l	equ	0xFE9
 42625                           wreg	equ	0xFE8
 42626                           indf1	equ	0xFE7
 42627                           postinc1	equ	0xFE6
 42628                           postdec1	equ	0xFE5
 42629                           plusw1	equ	0xFE3
 42630                           fsr1h	equ	0xFE2
 42631                           fsr1l	equ	0xFE1
 42632                           bsr	equ	0xFE0
 42633                           indf2	equ	0xFDF
 42634                           postinc2	equ	0xFDE
 42635                           postdec2	equ	0xFDD
 42636                           plusw2	equ	0xFDB
 42637                           fsr2h	equ	0xFDA
 42638                           fsr2l	equ	0xFD9
 42639                           status	equ	0xFD8
 42640                           
 42641                           	psect	temp
 42642  000040                     btemp:
 42643                           	opt stack 0
 42644  000040                     	ds	1
 42645  0000                     int$flags	set	btemp
 42646                           tosu	equ	0xFFF
 42647                           tosh	equ	0xFFE
 42648                           tosl	equ	0xFFD
 42649                           pclatu	equ	0xFFB
 42650                           pclath	equ	0xFFA
 42651                           tblptru	equ	0xFF8
 42652                           tblptrh	equ	0xFF7
 42653                           tblptrl	equ	0xFF6
 42654                           tablat	equ	0xFF5
 42655                           prodh	equ	0xFF4
 42656                           prodl	equ	0xFF3
 42657                           intcon	equ	0xFF2
 42658                           intcon2	equ	0xFF1
 42659                           indf0	equ	0xFEF
 42660                           postinc0	equ	0xFEE
 42661                           fsr0h	equ	0xFEA
 42662                           fsr0l	equ	0xFE9
 42663                           wreg	equ	0xFE8
 42664                           indf1	equ	0xFE7
 42665                           postinc1	equ	0xFE6
 42666                           postdec1	equ	0xFE5
 42667                           plusw1	equ	0xFE3
 42668                           fsr1h	equ	0xFE2
 42669                           fsr1l	equ	0xFE1
 42670                           bsr	equ	0xFE0
 42671                           indf2	equ	0xFDF
 42672                           postinc2	equ	0xFDE
 42673                           postdec2	equ	0xFDD
 42674                           plusw2	equ	0xFDB
 42675                           fsr2h	equ	0xFDA
 42676                           fsr2l	equ	0xFD9
 42677                           status	equ	0xFD8


Data Sizes:
    Strings     142
    Constant    1727
    Data        14
    BSS         1170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    136     160
    BANK1           256      3     256
    BANK2           256      0     256
    BANK3           256     29     231
    BANK4           256      0     162
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    m_flash_write@buf	PTR unsigned char  size(2) Largest target is 240
		 -> m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), 

    m_flash_write@tmpBuf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer(BANK5[256]), 

    m_flash_read@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), stSysData(BANK2[240]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), 
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(COMRAM[10]), STR_1(CODE[5]), 

    at24c02_write_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S2361$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S2361$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S2361$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S2361$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S2361$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(COMRAM[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[5]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[5]), 
		 -> ui_disp_menu_epr_calib_adj@buf(BANK0[6]), STR_22(CODE[5]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), STR_21(CODE[5]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), STR_14(CODE[5]), 
		 -> ui_disp_menu_calib_pr_adj@buf(BANK0[10]), STR_13(CODE[5]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), 
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 240
		 -> flashTestbuf(CODE[65]), m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), defultSystemData(CODE[240]), 
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), crc_verify@expected(BANK0[2]), stSysData(BANK2[240]), 

    m_mem_set@buf	PTR unsigned char  size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    crc_append@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_sum@puchMsg	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 8
		 -> sampBufRefInSoc(BANK1[8]), sampBufBatInSoc(BANK1[8]), sampBufExPr1InSoc(BANK1[8]), sampBufExPr0InSoc(BANK1[8]), 
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK1[8]), sampBufPt100ExA(BANK1[8]), sampBufDiffPr_S1(BANK1[8]), 
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 8
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    ui_disp_menu_work_mode_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_warn_v_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_warn_t_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_h_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_pos_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_adj_xfixed_pt_dp@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_31(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    ui_disp_adj_xfloat_pt@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_6(CODE[5]), 

    ui_disp_adj_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    __set_long_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_base_zero@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_density@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_ilp_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_param@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_value@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_type@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_warn_type@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_poly_coefic@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_poly_coefic@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_pose_size@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_pose_size@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __up_adj_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_warn_type_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_pose_size_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __enter_menu_bar_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_ilp_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_calib@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_value@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_type@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_poly_coeffic@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_calib_press@stp	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    __enter_menu_calib_press_diff@stp	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_h@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_d@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_pose_size@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    key_adj_value_float@mfp	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    key_adj_value_fixed@value	PTR unsigned int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), passWord(COMRAM[2]), key_adj_value_float@t16(BANK0[2]), 

    key_shift_loc@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK1[1]), 

    cal_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), prCalibTabDef(BANK4[162]), 

    cal_diff_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef.prCalibRow(BANK3[156]), diff_prCalibTabDef(BANK3[162]), 

    cal_diff_press@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    cal_diff_p_to_h@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_float_fast@tab	PTR float  size(2) Largest target is 404
		 -> hKel(CODE[404]), hKcy(CODE[404]), 

    m_interp1_cal_p_t@tmpx	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    m_interp1_cal_p_t@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_v@xout	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), NULL(NULL[0]), 

    m_interp1_cal_p_v@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), diff_prCalibTabDef.prCalibRow(BANK3[156]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_interp1_cal_p_v@xin	PTR struct . size(2) Largest target is 8
		 -> cal_press@xin(BANK0[8]), x_prDiffData(BANK1[8]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_diff_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    data_sys_init@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_init@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v2@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v1@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S74$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S74$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S74$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S74$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S74$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _key_process->_key_waite_release
    _key_process_up->___up_home_adj
    _key_process_up->___up_warn_type_adj
    _key_adj_value_fixed->___exp_10
    ___lwmod->___exp_10
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_calib_press
    _key_process_set_down_long->___enter_menu_calib_press_diff
    ___set_short_pr_calib->___enter_menu_calib_press
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    _key_process_down->___down_home_adj_test
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _sample_pr_chip_fast->_ads1115_set_mux
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _sample_diff_pr_chip_fast->_ads1115_set_data_rate
    _sample_diff_pr_chip_fast->_ads1115_set_mux
    _sample_diff_pr_chip_fast->_ads1115_set_pga
    _ui_disp_menu_work_mode_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_2nd_m
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_mpa
    _ui_disp_menu_warn_t_adj->_lcd_disp_logo
    _ui_disp_menu_psw_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _ui_disp_menu_pos_adj->_lcd_disp_logo
    _ui_disp_menu_h_adj->_lcd_disp_logo
    _ui_disp_menu_d_adj->_lcd_disp_logo
    _ui_disp_menu_poly_c_adj->_lcd_disp_logo
    _lcd_disp_rf->___lbdiv
    _lcd_disp_rf->_lcd_disp_rf_bar
    _lcd_disp_light->___lbdiv
    _lcd_disp_light->_lcd_disp_light_bar
    _lcd_disp_battary->___lbdiv
    _lcd_disp_battary->_lcd_disp_battary_bar
    _ui_disp_menu_epr_ilp_scale_adj->_lcd_disp_logo
    _ui_disp_menu_epr_calib_adj->_lcd_disp_logo
    _ui_disp_menu_density_adj->_lcd_disp_logo
    _ui_disp_menu_calib_pr_adj->___lbdiv
    _ui_disp_menu_calib_pr_adj->_lcd_disp_logo
    _ui_disp_menu_calib_diff_adj->___lbdiv
    _ui_disp_menu_calib_diff_adj->_lcd_disp_logo
    _ui_disp_menu_bzero_adj->_lcd_disp_logo
    _ui_disp_adj_xfloat_pt->___x_arrange_str
    _ui_disp_menu_bar_full_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt_dp->___x_arrange_str
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_show_dp->_lcd_disp_dp_loc_4
    _lcd_show_dp->_lcd_disp_dp_loc_5
    _lcd_show_dp->_lcd_disp_dp_loc_6
    _sample_call_cal_in_soc->_cal_additional_pressute
    _m_flash_write->_m_flash_unlock
    _m_flash_erase->_m_flash_unlock
    ___wmul->___exp_10
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_event_process_rtc
    _main->_event_process_ticker
    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_process_up->___up_pose_size_adj
    ___up_warn_value_adj->_key_adj_value_float
    ___up_psw_adj->_key_adj_value_fixed
    ___up_pr_calib_adj->_key_adj_value_float
    ___up_pose_size_adj->_key_adj_value_float
    ___up_poly_coefic_adj->_key_adj_value_fixed
    ___up_epr_ilp_scale_adj->_key_adj_value_float
    ___up_epr_calib_adj->_key_adj_value_float
    ___up_diff_calib_adj->_key_adj_value_float
    ___up_density_adj->_key_adj_value_float
    ___up_base_zero_adj->_key_adj_value_float
    _key_adj_value_float->_key_adj_value_fixed
    ___up_adj_bar_level_scale->_key_adj_value_fixed
    _key_adj_value_fixed->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    _key_process_set_long->___set_short_poly_coefic
    ___set_long_density->___sys_data_save_write_flash
    ___set_long_base_zero->___sys_data_save_write_flash
    ___set_long_bar_level_scale->___sys_data_save_write_flash
    _key_process_set_down_long->___enter_menu_calib_press
    _key_process_set_down_long->___enter_menu_calib_press_diff
    ___enter_menu_set_density->___int32_2_mflot32
    ___enter_menu_set_base_zero->___int32_2_mflot32
    _key_process_set->___set_short_poly_coefic
    ___set_short_warn_value->___sys_data_save_write_flash
    ___enter_menu_warn_value->___int32_2_mflot32
    ___set_short_warn_type->___sys_data_save_write_flash
    ___set_short_pr_calib->___enter_menu_calib_press
    ___enter_menu_calib_press->___int32_2_mflot32
    ___set_short_pose_size->___sys_data_save_write_flash
    ___enter_menu_set_h->___int32_2_mflot32
    ___enter_menu_set_d->___int32_2_mflot32
    ___set_short_poly_coefic->___sys_data_save_write_flash
    ___set_short_epr_param->___sys_data_save_write_flash
    ___enter_menu_epr_calib->___int32_2_mflot32
    ___set_short_epr_ilp_scale->___sys_data_save_write_flash
    ___sys_data_save_write_flash->_data_sys_cal_v1
    ___enter_menu_epr_ilp_scale->___int32_2_mflot32
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    ___mflot32_2_int32->___lmul
    ___enter_menu_calib_press_diff->___int32_2_mflot32
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _event_process_ticker->_sample_call_in_ticker
    _sample_pr_chip_fast->___x_sample_fifo
    _sample_in_soc_adc_ch->___x_sample_fifo
    _in_adc_start_and_read->_delay_us
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter
    ___x_sample_fliter->___aldiv
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    ___x_sample_fifo->___aldiv
    _event_process_rtc->_sample_function_enable_fi_in_rtc
    _ui_disp_menu->_ui_disp_menu_warn_v_adj
    _ui_disp_menu_work_mode_adj->_lcd_show_string
    _ui_disp_menu_warn_v_adj->_ui_disp_adj_xfloat_pt
    _lcd_disp_unit_mpa->_lcd_set_com_seg
    _lcd_disp_unit_2nd_m->_lcd_set_com_seg
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l0
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l1
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_menu_pose_size->_ui_disp_menu_h_adj
    _ui_disp_menu_pos_adj->_lcd_show_string_l0
    _ui_disp_menu_pos_adj->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _ui_disp_menu_h_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_d_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_poly_c_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_menu_home_test->_lcd_disp_battary
    _ui_disp_menu_home_test->_lcd_disp_rf
    _lcd_disp_rf->_lcd_disp_rf_bar
    _lcd_disp_rf_bar->_lcd_set_com_seg
    _lcd_disp_light->_lcd_disp_light_bar
    _lcd_disp_light_bar->_lcd_set_com_seg
    _lcd_disp_battary->_lcd_disp_battary_bar
    _lcd_disp_battary_bar->_lcd_set_com_seg
    _ui_disp_menu_epr_ilp_scale_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_epr_calib_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_density_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_pr_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_diff_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_bzero_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_adj_xfloat_pt->_lcd_show_string
    _ui_disp_menu_bar_full_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_adj_xfixed_pt_dp->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_6->_lcd_set_com_seg
    _lcd_disp_dp_loc_5->_lcd_set_com_seg
    _lcd_disp_dp_loc_4->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _m_int16_2_str_4->___awdiv
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _sample_call_cal_pr->_cal_press
    _cal_press->_m_interp1_cal_p_v
    _m_interp1_cal_p_v->___aldiv
    _m_interp1_cal_p_t->___aldiv
    ___aldiv->___lmul
    _cal_diff_p_to_h->___fltol
    _cal_diff_hight_to_vol_v->_m_interp1_float_fast
    _cal_diff_hight_to_vol_h->_m_interp1_float_fast
    _m_interp1_float_fast->___flge
    ___flneg->___fldiv
    _cal_diff_hight_level->___flge
    ___flge->___fladd
    ___fladd->___flneg
    _data_init_all->_data_sys_init
    _data_sys_init->_data_sys_cal_v1
    _m_flash_write->_m_flash_read
    _data_sys_cal_v2->___fltol
    _data_sys_cal_v1->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _calib_data_init_pr->_crc_verify
    _calib_data_set_default_pr->___wmul
    _calib_data_init_diff_pr->_crc_verify
    _crc_verify->_crc_sum
    _crc_append->_crc_sum
    _calib_data_set_default_diff_pr->___wmul
    ___wmul->___exp_10
    _at24c02_write_n_byte->_delay_ms
    _at24c02_write_n_byte->_iic_send_byte
    _delay_ms->_delay_us
    _at24c02_read_n_byte->_iic_received_byte_if_ack
    _iic_start->_delay_us
    _iic_send_byte->_delay_us
    _iic_waite_ack->_delay_us
    _iic_stop->_delay_us
    _iic_received_byte_if_ack->_iic_received_byte
    _iic_send_ack->_delay_us
    _iic_received_byte->_delay_us
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_key_process

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    _key_process_set_long->___set_short_pose_size
    _key_process_set->___set_short_pose_size
    _sample_call_cal_diff_pr->_cal_diff_press
    _cal_diff_press->_cal_diff_hight_to_vol_v

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 20086483
              _ads1115_init_all_chip
                      _data_init_all
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _in_adc_init
                        _key_polling
                        _key_process
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  537969
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                         _lcd_bl_off
                          _lcd_bl_on
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0 9975807
                                              0 BANK1      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                         _lcd_bl_off
                          _lcd_bl_on
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4    5547
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                           _delay_ms
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0    2618
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0   60668
           ___up_adj_bar_level_scale
                 ___up_adj_work_mode
                 ___up_base_zero_adj
                   ___up_density_adj
                ___up_diff_calib_adj
                 ___up_epr_calib_adj
             ___up_epr_ilp_scale_adj
                      ___up_home_adj
               ___up_poly_coefic_adj
                 ___up_pose_size_adj
                  ___up_pr_calib_adj
                       ___up_psw_adj
                 ___up_warn_type_adj
                ___up_warn_value_adj
 ---------------------------------------------------------------------------------
 (3) ___up_warn_value_adj                                  0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_warn_type_adj                                   3     3      0     127
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_psw_adj                                         0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_pr_calib_adj                                    1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_pose_size_adj                                   3     3      0    6136
                                             27 BANK0      3     3      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_poly_coefic_adj                                 0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_home_adj                                        1     1      0      77
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___up_epr_ilp_scale_adj                               0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_epr_calib_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_diff_calib_adj                                  1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_density_adj                                     0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_base_zero_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_float                                  6     3      3    6009
                                             21 BANK0      6     3      3
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_adj_work_mode                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_adj_bar_level_scale                             0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (5) _key_adj_value_fixed                                  7     4      3    4009
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     601
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0  481372
         ___exit_menu_to_home_unsave
         ___set_long_bar_level_scale
               ___set_long_base_zero
                 ___set_long_density
               ___set_long_work_mode
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_long_work_mode                                 6     6      0      34
                                              0 BANK0      2     2      0
         ___exit_menu_to_home_unsave
 ---------------------------------------------------------------------------------
 (3) ___set_long_density                                   9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_base_zero                                 9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_bar_level_scale                           8     8      0   45163
                                            131 BANK0      4     4      0
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (2) _key_process_set_down_long                            2     2      0   17626
                                             42 BANK0      2     2      0
             ___enter_menu_bar_scale
           ___enter_menu_calib_press
      ___enter_menu_calib_press_diff
             ___enter_menu_epr_calib
         ___enter_menu_epr_ilp_scale
          ___enter_menu_poly_coeffic
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
         ___enter_menu_set_pose_size
             ___enter_menu_warn_type
            ___enter_menu_warn_value
             ___enter_menu_work_mode
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_work_mode                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             8     8      0    2337
                                             29 BANK0      8     8      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_bar_scale                               4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0  340727
              ___enter_menu_password
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_value                              10    10      0   50349
                                            131 BANK0      2     2      0
                                              0 BANK3      8     8      0
            ___enter_menu_warn_value
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_warn_value                             10    10      0    2467
                                             29 BANK0     10    10      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_type                                7     7      0   45259
                                            131 BANK0      2     2      0
                                              0 BANK3      5     5      0
             ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_warn_type                               5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_pr_calib                                20    20      0   23159
                                             42 BANK0     20    20      0
           ___enter_menu_calib_press
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_calib_press                            14    13      1    2672
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_pose_size                                9     9      0   52593
                                              0 BANK3      9     9      0
                 ___enter_menu_set_d
                 ___enter_menu_set_h
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_pose_size                           2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_h                                   6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_d                                   6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_poly_coefic                              5     5      0   45259
                                            131 BANK0      5     5      0
          ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_poly_coeffic                            5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_param                               10    10      0   50535
                                              0 BANK3      7     7      0
             ___enter_menu_epr_calib
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_epr_calib                               7     7      0    2470
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_ilp_scale                           10    10      0   50414
                                              0 BANK3      7     7      0
         ___enter_menu_epr_ilp_scale
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___sys_data_save_write_flash                          5     5      0   45095
                                            126 BANK0      5     5      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_epr_ilp_scale                           7     7      0    2473
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_diff_calib                              20    20      0   23159
                                             42 BANK0     20    20      0
      ___enter_menu_calib_press_diff
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (4) ___mflot32_2_int32                                   13     9      4    2561
                                             12 BANK0     13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___exit_menu_to_home_unsave                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_calib_press_diff                       14    13      1    2672
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (5) ___int32_2_mflot32                                   16    12      4    2235
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_password                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0   13251
                   ___down_dpr_calib
               ___down_home_adj_test
                   ___down_pose_size
                    ___down_pr_calib
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pr_calib                                      0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pose_size                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_home_adj_test                                 1     1      0      71
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___down_dpr_calib                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc                                        5     1      4    3295
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _event_process_time_out                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process_ticker                                 1     1      0  231230
                                            135 BANK0      1     1      0
              _sample_call_in_ticker
 ---------------------------------------------------------------------------------
 (2) _sample_call_in_ticker                                1     1      0  231220
                                            134 BANK0      1     1      0
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
           _sample_diff_pr_chip_fast
               _sample_in_soc_adc_ch
                _sample_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_fast                                  3     3      0   34570
                                             42 BANK0      3     3      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                 2     2      0    7387
                                             42 BANK0      2     2      0
                    ___x_sample_fifo
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2    2212
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             2     2      0   39499
                                             49 BANK0      2     2      0
                    ___x_sample_fifo
            _ads1115_read_conversion
              _ads1115_set_data_rate
                    _ads1115_set_mux
                    _ads1115_set_pga
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3585
                                             47 BANK0      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3402
                                             26 BANK0     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2   12399
                                             11 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5   11977
                                              6 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_pga                                      4     1      3     962
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3     782
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_data_rate                                4     1      3     422
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2   16214
                                             14 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3   15935
                                              8 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    5039
                                             26 BANK0     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _event_process_rtc                                    1     1      0 9206259
                                            135 BANK0      1     1      0
   _sample_function_enable_fi_in_rtc
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0 9056421
          _ui_disp_menu_bar_full_adj
             _ui_disp_menu_bzero_adj
        _ui_disp_menu_calib_diff_adj
          _ui_disp_menu_calib_pr_adj
           _ui_disp_menu_density_adj
         _ui_disp_menu_epr_calib_adj
     _ui_disp_menu_epr_ilp_scale_adj
             _ui_disp_menu_home_test
            _ui_disp_menu_poly_c_adj
             _ui_disp_menu_pose_size
               _ui_disp_menu_psw_adj
            _ui_disp_menu_warn_t_adj
            _ui_disp_menu_warn_v_adj
         _ui_disp_menu_work_mode_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_work_mode_adj                          13    13      0  289413
                                             22 BANK0     13    13      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_v_adj                             16    16      0  555478
                                             42 BANK0     12    12      0
                       _lcd_disp_all
                      _lcd_disp_logo
                _lcd_disp_unit_2nd_m
                  _lcd_disp_unit_mpa
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_mpa                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_2nd_m                                  1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_t_adj                             10    10      0  541954
                                             22 BANK0     10    10      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  737382
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  706040
                                             22 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_pose_size                               0     0      0 1517062
                 _ui_disp_menu_d_adj
                 _ui_disp_menu_h_adj
               _ui_disp_menu_pos_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_pos_adj                                 8     8      0  541740
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_h_adj                                   2     2      0  487678
                                             42 BANK0      2     2      0
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_d_adj                                   0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_poly_c_adj                              7     7      0  932054
                                             40 BANK0      7     7      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_home_test                               1     1      0   98002
                                             19 BANK0      1     1      0
                       _lcd_disp_all
                   _lcd_disp_battary
                     _lcd_disp_light
                        _lcd_disp_rf
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_rf                                          2     2      0   32628
                                             17 BANK0      2     2      0
                            ___lbdiv
                    _lcd_disp_rf_bar
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_rf_bar                                      2     1      1   31640
                                             31 COMRAM     1     0      1
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_light                                       2     2      0   32582
                                             17 BANK0      1     1      0
                            ___lbdiv
                 _lcd_disp_light_bar
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_light_bar                                   2     1      1   31758
                                             31 COMRAM     1     0      1
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_battary                                     2     2      0   32628
                                             17 BANK0      2     2      0
                            ___lbdiv
               _lcd_disp_battary_bar
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_battary_bar                                 2     1      1   31640
                                             31 COMRAM     1     0      1
                                             16 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_ilp_scale_adj                       6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_calib_adj                           6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_density_adj                             0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_pr_adj                           11    11      0  748609
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_diff_adj                         11    11      0  748683
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     691
                                             31 COMRAM     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bzero_adj                               0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfloat_pt                               20    15      5  456302
                                             22 BANK0     20    15      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bar_full_adj                            0     0      0  926882
                       _lcd_disp_all
                      _lcd_disp_logo
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt_dp                            18    12      6  895540
                                             22 BANK0     18    12      6
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  441955
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (4) _lcd_show_string                                      3     1      2  252936
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  252083
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_show_dp                                          2     1      1  189019
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
                  _lcd_disp_dp_loc_4
                  _lcd_disp_dp_loc_5
                  _lcd_disp_dp_loc_6
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_6                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_5                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_4                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_2                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_1                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_0                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _m_mem_cpy                                            4     0      4    4990
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    4502
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1873
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     974
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   31181
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sample_function_enable_fi_in_rtc                     1     1      0  149835
                                            134 BANK0      1     1      0
               _sample_all_power_off
                _sample_all_power_on
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
               _sample_variable_init
 ---------------------------------------------------------------------------------
 (3) _sample_variable_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_pr                                   0     0      0    5300
                          _cal_press
           _cal_pt100_temperature_ex
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_ex                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_press                                           11    11      0    5300
                                             58 BANK0     11    11      0
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_in_soc                               0     0      0      22
            _cal_additional_pressute
 ---------------------------------------------------------------------------------
 (4) _cal_additional_pressute                              1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_diff_pr                              0     0      0  144439
                     _cal_diff_press
           _cal_pt100_temperature_in
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_in                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_diff_press                                       5     5      0  144439
                                             24 BANK3      5     5      0
               _cal_diff_hight_level
            _cal_diff_hight_to_vol_h
            _cal_diff_hight_to_vol_v
                    _cal_diff_p_to_h
                  _m_interp1_cal_p_t
                  _m_interp1_cal_p_v
                          _m_mem_set
 ---------------------------------------------------------------------------------
 (5) _m_mem_set                                            4     0      4     366
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_v                                   32    26      6    5102
                                             26 BANK0     32    26      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_t                                   31    26      5    4591
                                             26 BANK0     31    26      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1476
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8    1825
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_p_to_h                                     10     8      2   15118
                                             98 BANK0     10     8      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_v                             24    20      4   48314
                                              0 BANK3     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_h                             20    16      4   47390
                                              0 BANK3     20    16      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (6) _m_interp1_float_fast                                34    26      8   23913
                                            100 BANK0     34    26      8
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     515
                                             64 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_level                                16    16      0   23257
                                            100 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1706
                                             88 BANK0     12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    6282
                                             68 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _data_init_all                                        0     0      0  131490
            _calib_data_init_diff_pr
                 _calib_data_init_pr
                      _data_sys_init
 ---------------------------------------------------------------------------------
 (2) _data_sys_init                                        7     7      0   46705
                                            126 BANK0      7     7      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (5) _m_flash_write                                       21    13      8    5581
                                             14 BANK0     21    13      8
                      _m_flash_erase
                       _m_flash_read
                     _m_flash_unlock
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_flash_read                                        14     6      8    2160
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (6) _m_flash_erase                                        8     4      4     260
                                              0 BANK0      8     4      4
                     _m_flash_unlock
 ---------------------------------------------------------------------------------
 (6) _m_flash_unlock                                       1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v2                                     20    16      4   15338
                                             98 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v1                                     28    24      4   15440
                                             98 BANK0     28    24      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    2696
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5933
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    5175
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_pr                                   5     5      0   42377
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
          _calib_data_set_default_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_pr                            8     8      0    2298
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_diff_pr                              5     5      0   42408
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
     _calib_data_set_default_diff_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (5) _crc_verify                                          10     6      4    3778
                                             12 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy_len                                        6     0      6    1452
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (5) _crc_append                                           8     4      4    2531
                                             12 BANK0      8     4      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (6) _crc_sum                                             12     8      4     660
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_diff_pr                       8     8      0    2329
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1852
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) _at24c02_write_n_byte                                 9     2      7   15061
                                              6 BANK0      9     2      7
                           _delay_ms
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    2442
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _at24c02_read_n_byte                                 13     6      7   17254
                                              8 BANK0     13     6      7
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (5) _iic_start                                            0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _iic_send_byte                                        2     2      0    6581
                                              4 BANK0      2     2      0
                           _delay_us
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (6) _iic_waite_ack                                        1     1      0    4341
                                             31 COMRAM     1     1      0
                           _delay_us
                           _iic_stop
 ---------------------------------------------------------------------------------
 (5) _iic_stop                                             0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0    4483
                                              6 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0    2169
                                             31 COMRAM     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0    2246
                                              4 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2    2138
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _at24c02_init                                         3     0      3     937
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _data_init_all
     _calib_data_init_diff_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_diff_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _calib_data_init_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _data_sys_init
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
       _data_sys_cal_v1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _data_sys_cal_v2
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _m_flash_read
       _m_flash_write
         _m_flash_erase
           _m_flash_unlock
         _m_flash_read
         _m_flash_unlock
         _m_mem_cpy_len
       _m_mem_cpy_len
   _event_process_rtc
     _sample_function_enable_fi_in_rtc
       _sample_all_power_off
       _sample_all_power_on
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_variable_init
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home_test
         _lcd_disp_all
         _lcd_disp_battary
           ___lbdiv
           _lcd_disp_battary_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_light
           ___lbdiv
           _lcd_disp_light_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_rf
           ___lbdiv
           _lcd_disp_rf_bar
             _lcd_set_com_seg
               ___awdiv
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _event_process_ticker
     _sample_call_in_ticker
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_diff_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_data_rate
         _ads1115_set_mux
         _ads1115_set_pga
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
               ___lmul (ARG)
       _sample_in_soc_adc_ch
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
   _event_process_time_out
   _in_adc_init
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       ___down_dpr_calib
         _key_shift_loc
       ___down_home_adj_test
       ___down_pose_size
         _key_shift_loc
       ___down_pr_calib
         _key_shift_loc
       _key_shift_loc
     _key_process_set
       ___enter_menu_password
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_set_down_long
       ___enter_menu_bar_scale
       ___enter_menu_calib_press
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_calib_press_diff
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_calib
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_ilp_scale
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_poly_coeffic
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_pose_size
       ___enter_menu_warn_type
       ___enter_menu_warn_value
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_work_mode
     _key_process_set_long
       ___exit_menu_to_home_unsave
       ___set_long_bar_level_scale
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_base_zero
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_density
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_work_mode
         ___exit_menu_to_home_unsave
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_up
       ___up_adj_bar_level_scale
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_adj_work_mode
       ___up_base_zero_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_density_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_diff_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_ilp_scale_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_home_adj
       ___up_poly_coefic_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_pose_size_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_pr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_psw_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_warn_type_adj
       ___up_warn_value_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
     _key_waite_release
       _delay_ms
         _delay_us
       _key_polling
         _delay_ms
           _delay_us
     _lcd_bl_off
     _lcd_bl_on
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home_test
         _lcd_disp_all
         _lcd_disp_battary
           ___lbdiv
           _lcd_disp_battary_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_light
           ___lbdiv
           _lcd_disp_light_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_rf
           ___lbdiv
           _lcd_disp_rf_bar
             _lcd_set_com_seg
               ___awdiv
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _lcd_init
     _lcd_bl_off
     _lcd_bl_on
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A2      14       63.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     1D      E7      11       90.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     568      12        0.0%
DATA                 0      0     568       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Sep 26 20:33:51 2017

             __end_of___set_long_base_zero 8DB0               __end_of___up_poly_coefic_adj 9B7C  
               ui_disp_menu_poly_c_adj@buf 0088                      lcd_show_string_l0@str 0073  
                           ?_iic_waite_ack 0001                      lcd_show_string_l1@str 0073  
                             ___fldiv@aexp 009F                               ___fldiv@bexp 009E  
          __size_of___set_short_diff_calib 036A                               ?_lcd_show_dp 0070  
                      ?_lcd_show_string_l0 0073                        ?_lcd_show_string_l1 0073  
                 ??___enter_menu_bar_scale 0060                               ___fldiv@sign 0093  
               __end_of_rtcc_reg_wr_enable 9C8E                     ??_ui_disp_menu_pos_adj 0021  
                    ??_at24c02_read_n_byte 006F                               ?_in_adc_init 0001  
                     at24c02_init@pAt24c02 0060                     __end_of_m_flash_unlock 9B06  
                            ?_m_int8_2_hex 0060                     ??_ui_disp_menu_psw_adj 0021  
                             ___awdiv@sign 0065                ?___enter_menu_epr_ilp_scale 0001  
                                       bsr 000FE0                              ?_lcd_show_chr 0070  
                      ___wmul@multiplicand 0064                       _m_interp1_float_fast 1A58  
    __end_of___enter_menu_calib_press_diff 5BD6     __size_of___enter_menu_calib_press_diff 0104  
            ___enter_menu_calib_press_diff 5AD2                __end_of_rtcc_reg_wr_disable 9C9A  
   __end_of_ui_disp_menu_epr_ilp_scale_adj 688C    __size_of_ui_disp_menu_epr_ilp_scale_adj 00C4  
           _ui_disp_menu_epr_ilp_scale_adj 67C8                          _pAds1115DiffPrObj 00EE  
                             __CFG_CP0$OFF 000000                              ?_m_flash_read 0060  
                              __CFG_OSC$HS 000000              ui_disp_menu_epr_calib_adj@buf 008A  
                                      l176 0584                                        WREG 000FE8  
                     ___up_pr_calib_adj@t8 007B                                        l828 31E4  
                                      l839 330A                                        l964 5F6A  
                                      _PR2 000FCB                ___set_short_poly_coefic@stp 00E6  
                         ??_key_process_up 0021                                        _dwm 00FD  
                             ___awmod@sign 0065                                        prod 000FF3  
     __size_of_ui_disp_menu_calib_diff_adj 00FC                       ??_lcd_disp_light_bar 0021  
                                      tosl 000FFD                                        wreg 000FE8  
                       ___up_pose_size_adj 8162                  __size_of_ads1115_read_reg 01BC  
                             ___flmul@aexp 007B                               ___flmul@bexp 0080  
                  __end_of___x_arrange_str 8B92                               ___flmul@sign 007A  
                           ?_m_flash_erase 0060                               ___flmul@temp 0085  
                 __end_of___down_pose_size 95A0                               ___flmul@prod 0081  
      ___enter_menu_poly_coeffic@__subMenu 0062                  __size_of_lcd_disp_battary 0072  
                 ??___set_short_warn_value 00E3          __size_of___up_adj_bar_level_scale 0016  
                _m_interp1_float_fast$5837 00DC                  ?___up_adj_bar_level_scale 0001  
                     ??_lcd_show_string_l0 0021                       ??_lcd_show_string_l1 0021  
                 ??_ui_disp_menu_pose_size 0021                               lcd_disp_rf@i 0072  
                       m_int16_2_str_4@buf 0068                             ?_m_flash_write 006E  
                __size_of___up_density_adj 0016                   ?___set_short_poly_coefic 0001  
                             ___fltol@exp1 00C1                                       l1130 2A08  
                                     l1129 29B4                                       l2224 7CF0  
                                     l2233 4C76                                       l2234 4C84  
                                     l2264 9438                                       l2416 9474  
                                     l1633 8DDA                                       l2621 4152  
                                     l1751 85F4                                       l1648 8116  
                                     l1752 85F2                                       l1673 88D4  
                                     l2821 7F80                                       l1942 82EA  
                                     l2831 89AA                                       l2914 20AE  
                                     l2923 20E6                                       l2860 0E36  
                                     l2925 2154                                       l2917 2056  
                                     l2951 148E                                       l1967 8278  
                                     l2944 11F2                                       l2768 6B74  
                                     l2961 15A0                                       l2953 14FC  
                                     l2858 0E76                                       l2875 0FEA  
                                     l2859 0E6A                                       l2980 3A5E  
                                     l2884 107E                                       l2981 3A76  
                                     l2973 3A02                                       l2966 3956  
                _ui_disp_menu_calib_pr_adj 5FAC                                       STR_1 F3A9  
                                     STR_2 F370                                       STR_3 F374  
                                     STR_4 F374                                       STR_5 F3CC  
                                     STR_6 F3EA                                       STR_7 F3EF  
                                     STR_8 F374                                       STR_9 F3D6  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATG 000F8F                        ?___up_pose_size_adj 0001  
                            _m_mem_cpy_len 8FEA                  _ui_disp_menu_bar_full_adj 95A0  
                           ??_lcd_disp_all 0020                          ??_key_process_set 0021  
                 ??___enter_menu_epr_calib 0020                   cal_diff_hight_to_vol_h@h 03CA  
                                     _pLCD 0100                   cal_diff_hight_to_vol_v@D 03DA  
                                     _hKel EF17               __end_of_LCDDigitalIndexTable EEDC  
                                     _hKcy F0AB                   cal_diff_hight_to_vol_v@h 03CA  
                __size_of_lcd_disp_refresh 0062                                       _main 88F0  
                                     _menu 0033                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     _tmpx 03B2                                       btemp 0040  
                      _lcd_disp_unit_2nd_m 875E                    _handler_interrupt_hight 0008  
                 ?_ui_disp_menu_poly_c_adj 0001                       ___set_short_pr_calib 25AA  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00D8                             ??_iic_send_ack 0020  
                       _PrChipSampleFinish 00F5                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0098                   ?_ui_disp_menu_warn_t_adj 0001  
                 ?_ui_disp_menu_warn_v_adj 0001                          _key_waite_release 9084  
         __end_of_iic_received_byte_if_ack 9A5C                     ___up_diff_calib_adj@t8 007B  
               calib_data_init_diff_pr@t16 0077                               ___param_bank 000000  
               calib_data_init_diff_pr@buf 0079                           ?_lcd_set_com_seg 0068  
       __size_of_calib_data_set_default_pr 01C4                 calib_data_init_diff_pr@ret 0076  
               __size_of___up_pr_calib_adj 0038                           ??_cal_diff_press 0020  
          __size_of_sample_call_cal_in_soc 0022                 ??_ui_disp_menu_density_adj 0021  
                       ?_key_waite_release 0068                                      EECON2 000FA7  
                           ??_m_int8_2_hex 0020                      key_adj_value_float@t8 007A  
               ??_ads1115_start_conversion 0021           ___enter_menu_warn_type@__subMenu 0062  
                           ??_lcd_show_chr 0021                              lcd_disp_all@i 0061  
                            lcd_disp_all@x 0060                       ??___up_pose_size_adj 007B  
                          ?_m_flash_unlock 0001                      ?_m_interp1_float_fast 00C4  
                                    TABLAT 000FF5                             ??_m_flash_read 0020  
              __size_of_ui_disp_menu_d_adj 002E                    ??_ads1115_set_data_rate 0020  
                          ___x_sample_fifo 447E                __size_of_ui_disp_menu_h_adj 0070  
                                    RTCCFG 000F5F                                      l13120 944E  
                                    l13112 6AC0                                      l13104 6A9E  
                                    l14000 8B6C                                      l13130 6650  
                                    l14002 8B6E                                      l14010 84EC  
                                    l14100 810C                                      l13108 6AAC  
                                    l14020 851E                                      l14012 84F6  
                                    l13222 8DDE                                      l13126 6646  
                                    l13302 961C                                      l14014 8500  
                                    l13232 8DF4                                      l13224 8DE6  
                                    l14120 815C                                      l13080 6A28  
                                    l14040 8554                                      l14016 850A  
                                    l14024 8528                                      l13320 75B2  
                                    l13312 758A                                      l13250 88A6  
                                    l14106 8120                                      l13138 66C0  
                                    l14018 8514                                      l13322 75BC  
                                    l13314 7594                                      l13330 75DA  
                                    l14034 84B6                                      l14108 8122  
                                    l13412 0DB6                                      l13340 0CB4  
                                    l14212 5380                                      l14204 5352  
                                    l13092 6A5C                                      l13308 95EC  
                                    l13180 8B0E                                      l13172 8AEA  
                                    l13324 75C6                                      l13316 759E  
                                    l14028 8480                                      l15020 9136  
                                    l14300 7F72                                      l13246 889C  
                                    l14070 73B8                                      l14222 54CE  
                                    l13502 1078                                      l13430 0E5A  
                                    l13350 0CE2                                      l11494 99E4  
                                    l13094 6A68                                      l13086 6A3E  
                                    l14054 48D2                                      l14046 858A  
                                    l13326 75D0                                      l13318 75A8  
                                    l14310 8972                                      l14400 4C66  
                                    l13520 1108                                      l13512 10D4  
                                    l13440 0E9A                                      l13424 0E4A  
                                    l14208 5364                                      l13096 6A6E  
                                    l13184 8B2E                                      l13168 8AE0  
                                    l15112 5B1C                                      l15200 70DA  
                                    l14312 8978                                      l13266 88DA  
                                    l13610 2062                                      l13602 202A  
                                    l14250 557C                                      l14242 5550  
                                    l14402 4C6C                                      l13450 0EDE  
                                    l13426 0E50                                      l13370 0D46  
                                    l13346 0CD8                                      l13290 967C  
                                    l16010 4D5A                                      l13196 8E7E  
                                    l14252 5586                                      l13532 112C  
                                    l13524 1114                                      l13516 10E6  
                                    l13364 0D22                                      l14180 529C  
                                    l14164 808A                                      l13284 96AC  
                                    l15028 914A                                      l15220 6BCA  
                                    l16004 4CD8                                      l15132 5914  
                                    l14316 899C                                      l14308 8966  
                                    l13198 8E80                                      l14078 7408  
                                    l13622 20D0                                      l13542 1E9E  
                                    l13702 11DA                                      l14238 553C  
                                    l13526 1118                                      l13454 0EE8  
                                    l13382 0D7A                                      l13374 0D50  
                                    l13358 0D0E                                      l14422 07A2  
                                    l13278 96DC                                      l16110 6E80  
                                    l14270 6B0E                                      l15118 5BD0  
                                    l15214 6BB2                                      l16030 4DCA  
                                    l16006 4CFE                                      l16014 4D90  
                                    l15054 611C                                      l15038 60CA  
                                    l13616 20AA                                      l13552 1ECC  
                                    l13712 121A                                      l13704 11E0  
                                    l14256 55A2                                      l14248 556C  
                                    l14416 4C94                                      l13448 0ED8  
                                    l14192 52E8                                      l14168 80B0  
                                    l14432 091A                                      l13296 964C  
                                    l16120 6EA8                                      l16112 6E88  
                                    l15216 6BBA                                      l15224 6BEA  
                                    l16040 6DF6                                      l16024 4DBE  
                                    l16008 4D34                                      l16016 4DAA  
                                    l15064 6156                                      l15048 60FA  
                                    l15056 6130                                      l13562 1EFC  
                                    l13482 1032                                      l13458 0EFA  
                                    l14194 52F8                                      l14186 52BA  
                                    l14442 0C0C                                      l14434 091E  
                                    l14610 9A0E                                      l13810 7320  
                                    l16122 6EB0                                      l16114 6E90  
                                    l16106 6E70                                      l16130 6EC8  
                                    l14266 6AF8                                      l15218 6BC2  
                                    l15226 6C06                                      l16042 6DFE  
                                    l15138 59C8                                      l14290 7F3C  
                                    l13652 21D2                                      l13628 20FA  
                                    l13572 1F2A                                      l13548 1EC2  
                                    l13708 1206                                      l13476 101C  
                                    l13492 1052                                      l13468 0FCA  
                                    l14532 2D7E                                      l14524 2BFC  
                                    l14196 52FE                                      l14460 1602  
                                    l14452 0C90                                      l14436 0974  
                                    l14428 08B2                                      l13820 7350  
                                    l15308 6188                                      l16124 6EB8  
                                    l16116 6E98                                      l16108 6E78  
                                    l14700 9160                                      l16140 988E  
                                    l16300 5F84                                      l14268 6B08  
                                    l15260 714A                                      l16036 6DE6  
                                    l14292 7F42                                      l14614 9900  
                                    l14366 7BA6                                      l13662 2218  
                                    l13654 21E6                                      l13638 214E  
                                    l13486 103E                                      l13494 1058  
                                    l14526 2CEA                                      l14470 1772  
                                    l14606 99FC                                      l13822 7356  
                                    l13830 7388                                      l13814 7330  
                                    l15326 621C                                      l15318 61DC  
                                    l16214 6046                                      l16310 68D6  
                                    l15342 82F2                                      l16126 6EC0  
                                    l16118 6EA0                                      l15430 7B02  
                                    l16142 9894                                      l15414 87B0  
                                    l15406 874A                                      l16302 5F8A  
                                    l14278 6B62                                      l15270 71AA  
                                    l16062 6E58                                      l16038 6DEE  
                                    l16046 6E1E                                      l15190 708E  
                                    l15174 69A4                                      l13664 221C  
                                    l13656 2208                                      l13648 21A4  
                                    l13592 1FAC                                      l13584 1F7E  
                                    l13568 1F20                                      l13760 14A2  
                                    l14480 1A3E                                      l14472 1776  
                                    l16160 5CF2                                      l16312 68F4  
                                    l15352 8318                                      l15336 82CA  
                                    l15280 658E                                      l15264 7184  
                                    l16056 6E4C                                      l16048 6E38  
                                    l15192 7096                                      l14288 7F30  
                                    l14618 9916                                      l13770 14F6  
                                    l13754 1478                                      l13906 3AC8  
                                    l13850 4100                                      l13842 4060  
                                    l14546 2E64                                      l14538 2DBC  
                                    l14490 2EC4                                      l14474 17C6  
                                    l14466 170A                                      l13834 739C  
                                    l13826 737A                                      l13818 7344  
                                    l16306 689A                                      l16322 67D6  
                                    l15346 8302                                      l15362 8258  
                                    l16234 87DE                                      l14706 9182  
                                    l16138 9888                                      l16146 989A  
                                    l15290 65E2                                      l16410 37BA  
                                    l15194 709E                                      l14626 5DF0  
                                    l17114 7528                                      l15532 358E  
                                    l15524 3568                                      l13780 154C  
                                    l13684 1180                                      l13924 7D10  
                                    l13940 1A64                                      l14580 048A  
                                    l16164 5CFC                                      l16308 68B8  
                                    l16316 6912                                      l16324 67F4  
                                    l16332 684E                                      l15348 830E  
                                    l14900 7E56                                      l15372 8290  
                                    l15444 83E8                                      l14820 292E  
                                    l16420 380E                                      l15188 7086  
                                    l14636 5E8C                                      l15542 3734  
                                    l13686 1186                                      l13678 115C  
                                    l13846 40AE                                      l13950 1BFE  
                                    l14566 02A4                                      l14670 972A  
                                    l14734 3154                                      l16182 5D8C  
                                    l16318 692C                                      l16326 6812  
                                    l16334 686A                                      l14902 7E68  
                                    l15374 829C                                      l16270 4ED0  
                                    l16262 4E76                                      l16350 8062  
                                    l15454 4498                                      l16510 4444  
                                    l16502 4408                                      l14662 58B0  
                                    l15198 70BE                                      l15614 8BD4  
                                    l15622 8BE8                                      l17070 6284  
                                    l17126 756C                                      l15536 3598  
                                    l15528 3572                                      l13928 8FEC  
                                    l13936 902A                                      l13784 1572  
                                    l13696 11B6                                      l13688 1198  
                                    l13880 398E                                      l13856 419E  
                                    l13864 93E2                                      l13952 1C04  
                                    l16360 9A86                                      l14808 3342  
                                    l14752 31BC                                      l16168 5D0A  
                                    l16328 6830                                      l14912 904E  
                                    l15368 8280                                      l16272 4EEC  
                                    l16248 4DEC                                      l16520 447A  
                                    l16512 444A                                      l14648 5826  
                                    l14656 586A                                      l15704 98C8  
                                    l17080 62BE                                      l15554 3B0C  
                                    l13794 15C0                                      l13786 1586  
                                    l13882 3996                                      l13874 3966  
                                    l13954 1C3C                                      l13946 1B8E  
                                    l14498 2F5C                                      l14674 9734  
                                    l14930 8FBC                                      l14914 9060  
                                    l15394 8AAA                                      l14906 7E7A  
                                    l15378 82A6                                      l14682 8412  
                                    l15298 6622                                      l16266 4EA2  
                                    l15466 455A                                      l14826 2960  
                                    l14850 2BB8                                      l16442 38B6  
                                    l16530 4606                                      l14658 5884  
                                    l15802 561A                                      l15810 5672  
                                    l13970 8BF2                                      l15618 8BDE  
                                    l17090 62E2                                      l17074 6294  
                                    l17082 62C4                                      l13796 15CA  
                                    l13892 3A40                                      l13884 39A6  
                                    l14932 8FC0                                      l15388 8A8A  
                                    l16284 5EE4                                      l16348 8046  
                                    l14860 3D04                                      l16428 3850  
                                    l15900 25FC                                      l15724 81A8  
                                    l15716 8164                                      l14950 541E  
                                    l15566 3C98                                      l15558 3B16  
                                    l13894 3A50                                      l13886 39E4  
                                    l14774 3242                                      l14766 321E  
                                    l14926 8FB4                                      l14942 8FE4  
                                    l14918 9072                                      l15398 8ACA  
                                    l14862 3D2E                                      l14838 2A5E  
                                    l16438 389E                                      l16550 4670  
                                    l16542 462C                                      l16470 4338  
                                    l15670 9572                                      l16710 4A36  
                                    l15910 2870                                      l15654 7FFC  
                                    l13982 8C16                                      l13974 8BFE  
                                    l15742 93A0                                      l17086 62D2  
                                    l17094 62EE                                      l17238 9AAE  
                                    l15592 3F82                                      l15584 3F38  
                                    l14960 5492                                      l16376 9A68  
                                    l14696 970C                                      l14880 7EAC  
                                    l14688 8448                                      l14872 3E50  
                                    l14864 3D54                                      l15496 910A  
                                    l16456 3908                                      l16392 3758  
                                    l16720 4A84                                      l16712 4A54  
                                    l15824 5694                                      l15832 56A6  
                                    l15816 5682                                      l15808 565E  
                                    l13992 8C2E                                      l15744 93A6  
                                    l15728 81BE                                      l15586 3F44  
                                    l14970 518C                                      l14794 32E2  
                                    l14938 8FDA                                      l14882 7EBE  
                                    l14890 7EF4                                      l16298 5F7C  
                                    l17178 9850                                      l14866 3D7A  
                                    l14858 3CCE                                      l15674 9590  
                                    l16722 4AA2                                      l16714 4A5A  
                                    l16706 4A12                                      l15826 569A  
                                    l15930 28FC                                      l16810 6D06  
                                    l13986 8C22                                      l13978 8C0A  
                                    l14956 547E                                      l14948 539E  
                                    l13996 8B3A                                      l14788 32AC  
                                    l14884 7ED0                                      l16900 7014  
                                    l14868 3DB8                                      l16492 43BC  
                                    l16484 4374                                      l15692 9AC6  
                                    l16724 4AC0                                      l16716 4A78  
                                    l16708 4A18                                      l16732 4B1A  
                                    l15828 56A0                                      l15924 28DE  
                                    l16820 6D2C                                      l16812 6D0E  
                                    l15756 9368                                      l16740 6F1E  
                                    l14990 5252                                      l14886 7EE2  
                                    l16582 474A                                      l16566 46EC  
                                    l16558 46B2                                      l16726 4ADE  
                                    l16718 4A7E                                      l15950 8392  
                                    l15918 28CE                                      l16830 6D52  
                                    l16822 6D34                                      l16814 6D14  
                                    l16806 6CFA                                      l15790 94C2  
                                    l15774 953E                                      l15758 936E  
                                    l16750 6F3C                                      l16742 6F24  
                                    l17622 891E                                      l14976 51D0  
                                    l14896 7E32                                      l16576 4730  
                                    l16728 4AFC                                      l15872 2574  
                                    l15848 2292                                      l15944 8386  
                                    l16840 744C                                      l16824 6D3C  
                                    l16816 6D1C                                      l16808 6D00  
                                    l16760 6F5A                                      l16752 6F42  
                                    l16744 6F2A                                      l16736 6F12  
                                    l17640 893C                      ___set_short_epr_param 4CA2  
                                    l14898 7E44                                      l16578 4736  
                                    l15866 2564                                      l15858 2506  
                                    l15794 55C6                                      l15970 7C22  
                                    l16850 7474                                      l16842 7454  
                                    l16826 6D44                                      l16818 6D24  
                                    l16834 6D58                                      l15778 9554  
                                    l16762 6F60                                      l16754 6F48  
                                    l16746 6F30                                      l16738 6F18  
                                    l16914 9476                                      l17634 8932  
                                    l15884 259E                                      l15964 7C16  
                                    l16852 747C                                      l16844 745C  
                                    l16780 6408                                      l16772 63EA  
                                    l16828 6D4C                                      l16756 6F4E  
                                    l16748 6F36                                      l17628 8928  
                                    l16870 6FC0                                      l15798 55EE  
                                    l15982 651A                                      l16854 7484  
                                    l16846 7464                                      l16838 7446  
                                    l16790 6434                                      l16782 6414  
                                    l16774 63F0                                      l16758 6F54  
                                    l16766 6F66                                      l16880 6FDE  
                                    l16872 6FC6                                      l16936 8F82  
                                    l15992 655C                                      l16848 746C  
                                    l16792 643C                                      l16784 641C  
                                    l16776 63F6                                      l16688 908E  
                                    l16696 90A8                                      l16890 6FFC  
                                    l16882 6FE4                                      l16874 6FCC  
                                    l16858 748C                                      l16794 6442  
                                    l16786 6424                                      l16778 63FC  
                                    l16698 90B8                                      l16972 636A  
                                    l16892 7002                                      l16884 6FEA  
                                    l16876 6FD2                                      l16788 642C  
                                    l16982 6394                                      l16966 6352  
                                    l16894 7008                                      l16886 6FF0  
                                    l16878 6FD8                                      l15998 6568  
                                    l16798 6448                                      l16976 637A  
                                    l16896 700E                                      l16888 6FF6  
                                    l16996 63C8                                      l16988 63B0  
                                    l16998 63CE                              ___fltol@sign1 00C0  
                          __end_of___aldiv 5392                            __end_of___fladd 113E  
                                    ?_main 0001                          ?_key_process_down 0001  
                    __end_of_data_init_all 9C74                            __end_of___fldiv 2240  
                          __end_of___awdiv 6ACA                            __end_of___lbdiv 8FEA  
                          __end_of___flneg 93F4                                      STR_10 F3D1  
                                    STR_11 F3BD                                      STR_20 F3F9  
                                    STR_12 F3B8                                      STR_13 F374  
                                    STR_21 F3C7                                      STR_14 F374  
                                    STR_30 F3B3                                      STR_22 F395  
                                    STR_15 F374                                      STR_31 F3E5  
                                    STR_23 F38B                                      STR_24 F39F  
                                    STR_16 F39A                                      STR_32 F379  
                     ?_lcd_disp_unit_2nd_m 0001                                      STR_17 F374  
                                    STR_25 F390                                      STR_33 F382  
                                    STR_18 F3F4                                      STR_26 F3A4  
                                    STR_27 F3DB                                      STR_19 F3C2  
                                    STR_28 F3AE                            __end_of___awmod 73A6  
                                    STR_29 F3E0                            __end_of___flmul 15E4  
                          __end_of___fltol 55B4                            __end_of___lldiv 6B86  
                      ??_key_waite_release 0020                       _cal_diff_hight_level 2BCC  
                                    u13100 54EE                            ___awdiv@divisor 0062  
                                    u13105 54E2                                      u12360 21B8  
                                    u14008 3D16                                      _T2CON 000FCA  
                                    u13250 7BA2                                      u14018 3D40  
                                    u14211 7D30                                      u14028 3D66  
                                    u15100 26D0                                      u12550 1560  
                                    u12470 141A                                      u14038 3D8C  
                                    u15030 2366                                      u11584 66A0  
                                    u13600 8432                                      u14048 3DCA  
                                    u11585 669A                                      u14049 3DE0  
                                    u14138 53B0                                      u12810 9014  
                                    u11594 66D6                                      u13610 8468  
                                    u14058 3E08                                      u13530 5E82  
               ___set_short_warn_value@t32 03CB                                      u14139 53C4  
                                    u12475 140E                                      u11595 66D0  
                                    u14059 3E1E                                      u16011 74EE  
                                    u14148 53D6                                      u11860 0E00  
                                    u12900 84D6                                      u14068 3E3C  
                                    u14149 53F4                                      u14158 5406  
                                    u11870 0E18                                      u13607 8428  
                                    u14168 5434                                      u11880 0E1A  
                                    u14169 5452                                      u12817 900A  
                                    u13617 845E                                      u14178 546A  
                                    u12930 857C                                      u13570 589E  
                                    u12907 84CC                                      u12940 85AA  
                                    u12937 8572                                      u12890 84A0  
                                    u12947 85A0                                      u13928 5BE8  
                                    _FSR0H 000FEA                                      u12897 8496  
                                    u13929 5BFC                                      u14818 3FCC  
                                    u13938 5C0E                                      u14819 3FE2  
                                    u13939 5C32                                      u14828 3FFE  
                                    u14748 3E6C                                      u13948 5C44  
                                    _FSR0L 000FE9                                      u14749 3E80  
                                    u13949 5C5C                                      u14758 3E92  
                                    u13958 5C6E                                      u14759 3EB0  
                                    u13959 5C86                                      u14768 3EC2  
                                    u13968 5C98                                      u14769 3EDA  
                                    u13969 5CB0                                      u14778 3EEC  
                                    u13978 5CC2                                      u14779 3F00  
                                    u14788 3F12                                      u13988 3CBA  
                                    u14798 3F56                                      u13998 3CE0  
                                    u15950 62AA                                      u14799 3F6C  
                                    u15960 62AC                            __end_of___lwdiv 7F8A  
                          __end_of___lwmod 89B4                            ___awdiv@counter 0064  
               ___set_short_warn_value@stp 03CF                                      _PORTB 000F81  
                                    _PORTC 000F82                 __end_of_sample_call_cal_pr 9A7A  
               ui_disp_menu_warn_t_adj@buf 0077                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISG 000F98  
                       ??_key_process_down 0021                            ??_lcd_disp_logo 0020  
                             ?_key_polling 0001                        lcd_disp_dp_loc_0@dp 0020  
                      lcd_disp_dp_loc_1@dp 0020                        lcd_disp_dp_loc_2@dp 0020  
                             ?_key_process 0001                        lcd_disp_dp_loc_4@dp 0020  
                      lcd_disp_dp_loc_5@dp 0020                        lcd_disp_dp_loc_6@dp 0020  
                      ___lmul@multiplicand 0064                             __CFG_FCMEN$OFF 000000  
                          __end_of_crc_sum 7444                 ui_disp_menu_warn_v_adj@buf 008C  
                   _diffPrChipSampleFinish 00F8                 ui_disp_menu_warn_v_adj@fps 0092  
                       ___up_warn_type_adj 919A                   ??___enter_menu_warn_type 0060  
                   ___set_short_diff_calib 2240                                      _glRtc 0133  
              sample_diff_pr_chip_fast@t16 0091                                      _st_Bj 002C  
                    __size_of___up_psw_adj 0016                             ?_m_mem_cpy_len 0060  
                           __CFG_T1DIG$OFF 000000                     ??_sample_variable_init 0020  
             ??___enter_menu_set_base_zero 0020                                      pclath 000FFA  
                                    tablat 000FF5               __end_of_sample_in_soc_adc_ch 474E  
                          __end_of_rtc_set 6CF8                          ??_data_sys_cal_v1 0020  
                        ??_data_sys_cal_v2 0020       __size_of___sys_data_save_write_flash 0104  
                                    plusw1 000FE3                                      plusw2 000FDB  
                     _event_process_ticker 9C9A                       ___down_home_adj_test 9AB4  
                       crc_verify@expected 0074                        ?___up_warn_type_adj 0001  
                                    status 000FD8                       ___up_pose_size_adj@p 007C  
                             _adc_pressure 016E               __end_of___set_long_work_mode 9A3C  
                          ??_iic_send_byte 0021                      ?___set_short_pr_calib 0001  
                    __end_of_data_sys_init 4314                            ___lbdiv@divisor 0020  
                       _diff_prCalibTabDef 0310                  __end_of_key_waite_release 90CE  
                          ___lbdiv@counter 0061                           ?_lcd_show_string 0073  
                         key_shift_loc@max 0063                           key_shift_loc@loc 0060  
                         key_shift_loc@min 0062                   ??___enter_menu_work_mode 0020  
                    ___set_short_pose_size 55B4                            ??_iic_waite_ack 0020  
          __size_of_ui_disp_menu_bzero_adj 002E                           __end_of_HexTable EF17  
             __size_of_key_adj_value_float 00DE                      _sample_call_in_ticker 8F4E  
             __size_of_key_adj_value_fixed 00F8                            __initialization 71BC  
         __size_of_sample_call_cal_diff_pr 001E               at24c02_write_n_byte@pAt24c02 0066  
                             __end_of_hKel F0AB            __size_of_ui_disp_menu_home_test 00B0  
                             __end_of_hKcy F23F                      ___set_short_warn_type 7BAA  
                        ??_cal_diff_p_to_h 0020                               __end_of_main 8952  
                     ___up_adj_work_mode@p 0060                              _prCalibTabDef 0400  
               ___enter_menu_warn_value@t8 0082                           _glNoEventTimeOut 00FF  
             ??_ui_disp_menu_epr_calib_adj 0021          __end_of_calib_data_set_default_pr 3C9E  
          __size_of___enter_menu_bar_scale 003C                       iic_received_byte@ret 0064  
              __size_of_calib_data_init_pr 012A                   ?_cal_additional_pressute 0001  
                        ??___down_pr_calib 0021               __size_of_sample_pr_chip_fast 016A  
                  sample_in_soc_adc_ch@t16 008A                     key_adj_value_float@t16 0078  
                            _userTicker_ms 0025                     key_adj_value_fixed@t16 0073  
                  ads1115_set_data_rate@dr 0062              ads1115_set_data_rate@pAds1115 0060  
                     ??___up_warn_type_adj 0020                      ??_lcd_disp_unit_2nd_m 0020  
                   key_adj_value_float@mfp 0075                     key_adj_value_float@loc 0077  
                   key_adj_value_fixed@loc 0070                      ?_cal_diff_hight_level 0001  
                                   ??_main 0021                __size_of___enter_menu_set_d 0068  
              __size_of___enter_menu_set_h 0068                              __activetblptr 000002  
                    ___enter_menu_password 9BD4                 ___enter_menu_warn_type@fps 0063  
                             ___up_psw_adj 9B50                ??___enter_menu_poly_coeffic 0060  
                          ??_m_flash_erase 0021                                 _at24c02Ch0 0182  
                               _at24c02Ch1 018D               __end_of_key_process_set_long 6DB0  
       __size_of___set_short_epr_ilp_scale 00B0                            ??_m_flash_write 0076  
                   ___set_long_work_mode@p 0060                       cal_diff_press@tabrow 03E2  
                         ?___x_arrange_str 0060           __size_of_calib_data_init_diff_pr 012A  
                   _sample_call_cal_in_soc 99D8                        ___up_warn_value_adj 9B3A  
              ui_disp_menu_calib_pr_adj@t8 0094                                     _ADCON1 000FC1  
          __size_of___set_short_warn_value 00C8                       ___set_long_base_zero 8D58  
         __size_of_ads1115_read_conversion 0046                         _sensorSimpleTsLong 00F0  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                         __end_of___exp_10 8C4A                           ___awdiv@dividend 0060  
                     ___up_poly_coefic_adj 9B66            __size_of_ui_disp_menu_pose_size 002A  
                                   _LCDCON 000FA8            ___sys_data_save_write_flash@buf 00E1  
                                   _LCDSE0 000FA9                                     _LCDSE1 000FB6  
                                   _LCDSE2 000FB7                                     _LCDSE3 000FB8  
                                   _LCDSE4 000FB9                                     _LCDSE5 000FBA  
                                   _LCDREG 000FD2           ___set_short_epr_ilp_scale@gohome 03CA  
          ___sys_data_save_write_flash@ret 00DE            ___sys_data_save_write_flash@stp 00DF  
                ??_handler_interrupt_hight 0001                                     i1l2312 0090  
                                   i1l2411 9B16             ___set_short_poly_coefic@gohome 00E3  
                                   i2l2301 6742                                     i2l2302 674A  
                                   i2l2303 6752                                     i2l2304 675A  
                                   i2l2411 9B30                                     i2l2307 678C  
                           __CFG_WDTEN$OFF 000000                 ??_ui_disp_adj_xfixed_pt_dp 007C  
                                   _INTCON 000FF2                                     _TABLAT 000FF5  
             __end_of_at24c02_write_n_byte 54A8                      ?_event_process_ticker 0001  
                    ?___down_home_adj_test 0001                   ?___enter_menu_warn_value 0001  
                    lcd_disp_battary@level 0071            __size_of___enter_menu_epr_calib 00A8  
              ?___exit_menu_to_home_unsave 0001                               m_mem_set@buf 0060  
                             m_mem_set@len 0063                ??_key_process_set_down_long 008A  
                            m_int8_2_hex@b 0062        __size_of___enter_menu_epr_ilp_scale 00BA  
             __size_of_sys_ticker_irq_hook 001A                           __end_of___xxtofl 3ADA  
                         ??_lcd_disp_light 0021        __size_of_ui_disp_menu_epr_calib_adj 00C2  
                 ??___up_epr_ilp_scale_adj 0021                           __end_of_delay_ms 9924  
                   __size_of___up_home_adj 0028                           __end_of_delay_us 9464  
                            ?_at24c02_init 0060             __size_of_sample_diff_pr_fliter 007E  
            __end_of_sample_diff_pr_fliter 7CA8                             __CFG_XINST$OFF 000000  
                      lcd_disp_light@light 0071                          _prChipSampleCount 00F6  
                           cal_press@F7863 0123                      m_interp1_float_fast@f 00E0  
                    m_interp1_float_fast@i 00E4                    __end_of___x_sample_fifo 45E8  
                    m_interp1_float_fast@x 00D4                      m_interp1_float_fast@y 00D8  
             ??___enter_menu_set_pose_size 0020                       ?___up_warn_value_adj 0001  
                         __end_of_lcd_init 9AB4                       __size_of_lcd_disp_rf 0072  
                         __end_of_iic_stop 953C                                     ___flge 4012  
                                   ___lmul 8078                                  ??___aldiv 0020  
                                ??___fladd 00AC                                     ___wmul 94D0  
              ui_disp_menu_warn_v_adj@type 0094                     ??_m_interp1_float_fast 00CC  
                                ??___fldiv 008F                  ui_disp_menu_poly_c_adj@t8 008E  
                                ??___awdiv 0020                                  ??___lbdiv 0021  
                                ??___flneg 0020                                  ??___awmod 0020  
                                ??___flmul 0076                                  ??___fltol 00BC  
                     __end_of_flashTestbuf F370                                  ??___lldiv 0020  
                  at24c02_write_n_byte@buf 0069                    at24c02_write_n_byte@len 006B  
                                ??___lwdiv 0021                                  ??___lwmod 0021  
               ??___enter_menu_calib_press 007D                     __size_of_key_shift_loc 0044  
                   ?___set_short_epr_param 0001                                     clear_0 71F6  
                                   clear_1 7208                                     clear_2 7214  
                                   clear_3 7222                                     clear_4 7234  
                                   clear_5 7240                                     clear_6 724C  
                            m_flash_read@i 0068                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062              ui_disp_menu_calib_diff_adj@t8 0094  
                     __size_of_lcd_show_dp 006C                       __end_of_lcd_disp_all 9750  
                      m_interp1_cal_p_t@pr 0092                        m_interp1_cal_p_v@pr 0095  
                          ___awmod@counter 0064                       __size_of_in_adc_init 0024  
                                ??_crc_sum 0064                      i2_sys_ticker_irq_hook 9B20  
                     _LCDDigitalIndexTable EEB1                       at24c02_read_n_byte@i 0073  
                       ___up_epr_calib_adj 953C                        lcd_disp_rf_bar@show 0020  
                  ??_in_adc_start_and_read 0020                   __size_of_ads1115_set_pga 0024  
                 __size_of_ads1115_set_mux 0024                           key_polling@ktemp 0066  
                 __size_of_lcd_disp_rf_bar 007A                           __end_of_soc_init 9C48  
                     __end_of_iic_send_ack 8EB0                           _ads1115_read_reg 3C9E  
                   _ui_disp_menu_bzero_adj 97DA                               __mediumconst ECB0  
                         __end_of_rtc_init 9258                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                   _ui_disp_menu_home_test 6E60          __size_of_iic_received_byte_if_ack 0020  
                     lcd_disp_get_code@chr 0060                       lcd_disp_get_code@ret 0061  
                ?_iic_received_byte_if_ack 0001                           _lcd_disp_battary 82B8  
                          ??_m_mem_cpy_len 0020                                  ??_rtc_set 0020  
                    ?___set_long_base_zero 0001                   ui_disp_start_cs600@F7726 01F0  
                    ?___up_poly_coefic_adj 0001          __end_of___set_short_epr_ilp_scale 6E60  
          __size_of___enter_menu_warn_type 0062                        ?___up_epr_calib_adj 0001  
                         ___up_density_adj 9B92                     ___enter_menu_bar_scale 92D4  
               __end_of___up_adj_work_mode 94D0                   ?_cal_diff_hight_to_vol_h 03CA  
                 ?_cal_diff_hight_to_vol_v 03CA                           ___lbdiv@dividend 0060  
                 ??_event_process_time_out 0020                       __end_of_m_int8_2_hex 8CA4  
                               ___flge@ff1 00B8                                 ___flge@ff2 00BC  
                     __end_of_lcd_show_chr 7610                               ___xxtofl@arg 006A  
                             _pcf8574Value 002D                               ___xxtofl@exp 0069  
                             ___xxtofl@val 0060                     ??___set_short_pr_calib 008A  
                        ?___down_dpr_calib 0001                           _lcd_disp_refresh 8A16  
                               __accesstop 0060                    __end_of__initialization 7252  
                ui_disp_menu_warn_t_adj@t8 007D                       __end_of_m_flash_read 7D26  
                        _sampBufDiffPr_D01 01E0                          _sampBufDiffPr_D23 01D8  
                               ___flneg@f1 00A0                                 ___exp_10@n 0020  
                ui_disp_menu_warn_v_adj@t8 0095                   __size_of_m_int16_2_str_4 015E  
               __end_of___set_long_density 8F00                  ___enter_menu_poly_coeffic 8F00  
               __size_of_key_waite_release 004A               __size_ofi2_rtc_alrm_irq_hook 0002  
                           ??_at24c02_init 0020                         ??___down_dpr_calib 0021  
                            ___rparam_used 000001                                 ___fltol@f1 00B8  
                   ?___set_short_pose_size 0001                   sample_call_in_ticker@ret 00E6  
                        lcd_disp_battary@i 0072                     ?_sample_call_in_ticker 0001  
                   ?___set_short_warn_type 0001                      _handler_interrupt_low 0018  
                        _event_process_rtc 9832                      ??___up_warn_value_adj 0021  
       __size_of_ui_disp_menu_calib_pr_adj 00E0                              _p_prEepromObj 0027  
          __size_of___enter_menu_work_mode 0012                             iic_send_byte@i 0065  
       __size_of_ui_disp_menu_bar_full_adj 0030                             iic_send_byte@x 0064  
                     _inSocAdcSampleFinish 00F2                          _sampBufExPr0InSoc 01B0  
         __end_of_ui_disp_menu_density_adj 97DA                             __pcstackCOMRAM 0001  
                        _sampBufExPr1InSoc 01A8                     ___set_short_warn_value 64A8  
                       __size_of_cal_press 007C                       ??___up_epr_calib_adj 0021  
                             __pidataBANK0 9CBE                               __pidataBANK1 9C74  
           __size_of_ui_disp_adj_xfloat_pt 025A                         ?_event_process_rtc 0001  
           __size_of_ui_disp_adj_xfixed_pt 00C8                     _ui_disp_menu_pose_size 9886  
            __end_of_ui_disp_adj_xfloat_pt 3358              __end_of_ui_disp_adj_xfixed_pt 6638  
             __size_of___up_diff_calib_adj 0038                    m_flash_write@writeTimes 0078  
               ___enter_menu_epr_calib@t32 007E            __end_of_handler_interrupt_hight 67C8  
                    m_flash_write@pageAddr 007A                 ___enter_menu_epr_calib@fps 0082  
                   ??_cal_diff_hight_level 0020                ___enter_menu_warn_value@t32 0083  
                   ___enter_menu_epr_calib 706C                ___enter_menu_warn_value@fps 0080  
                         ___lbdiv@quotient 0062                  _key_process_set_down_long 63E0  
                    ___x_sample_fliter@t32 008A                   _sample_diff_pr_chip_fast 373A  
                   ?___enter_menu_password 0001                      ___x_sample_fliter@buf 007A  
                 ___enter_menu_set_density 81D4                      ___x_sample_fliter@len 007C  
                     _sample_in_soc_adc_ch 45E8                      ___x_sample_fliter@max 0086  
                    ___x_sample_fliter@min 0088                        ??_event_process_rtc 0021  
             __end_of_ui_disp_clear_num_dp 8CFE                            _key_process_set 7444  
                            ___up_home_adj 98B0                       ___set_long_work_mode 9A1C  
                    _ads1115_init_all_chip 9296                   ___x_sample_fliter@maxLoc 0084  
                  in_adc_start_and_read@ch 0066                   ___x_sample_fliter@minLoc 0085  
            __size_of_lcd_disp_battary_bar 007A                         __size_of_lcd_bl_on 000A  
                       _rtcc_reg_wr_enable 9C82                 calib_data_set_default_pr@i 006E  
               calib_data_set_default_pr@j 006F                         __size_of_iic_start 0038  
                  key_adj_value_fixed@dloc 0071                          crc_append@message 006C  
                     __size_of_key_polling 005C                          ?___down_pose_size 0001  
                     __size_of_key_process 00D0                          lcd_disp_logo@show 0020  
                       __size_of_m_mem_cpy 006C                __end_of_sample_all_power_on 9C26  
                       __size_of_m_mem_set 0022                     ??_event_process_ticker 0021  
                   ??___down_home_adj_test 0020                              _key_shift_loc 9114  
                      ___x_sample_fifo@buf 007A                          lcd_show_string@t8 0075  
                      ___x_sample_fifo@len 007E                        ___x_sample_fifo@ret 0085  
                               __pbssBANK0 00E8                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                       ??___down_pose_size 0021                     ___enter_menu_set_d@t32 007F  
                   ___enter_menu_set_h@t32 007F                     ___enter_menu_set_d@fps 007D  
                               _defalutRtc 01F6                        ?_rtcc_reg_wr_enable 0001  
                   ___enter_menu_set_h@fps 007D                   __size_of_sys_ticker_init 0010  
                        _pdiff_prEepromObj 0029                        ___x_sample_fliter@i 008E  
                          lcd_disp_rf@rssi 0071                      ui_disp_menu_h_adj@fps 008A  
            __size_of_sample_all_power_off 000E                  __end_of_event_process_rtc 985C  
                    calib_data_init_pr@t16 0077                 __end_of___up_base_zero_adj 9BBE  
      __end_of_ui_disp_menu_calib_diff_adj 5DD2                _ui_disp_menu_calib_diff_adj 5CD6  
                      m_flash_write@tmpBuf 007F                      calib_data_init_pr@buf 0079  
          __size_of___up_epr_ilp_scale_adj 0016                      calib_data_init_pr@ret 0076  
              __end_of_at24c02_read_n_byte 4012                          ___x_sample_fifo@i 0089  
                        ___x_sample_fifo@x 007C                           _diffPrChipSampCh 00F9  
                  _sample_call_cal_diff_pr 9A7A                           ??_m_flash_unlock 0020  
              __size_of_lcd_disp_chr_loc_0 0090                __size_of_lcd_disp_chr_loc_1 0090  
              __size_of_lcd_disp_chr_loc_2 0090                __size_of_lcd_disp_chr_loc_3 0090  
              __size_of_lcd_disp_chr_loc_4 0090                __size_of_lcd_disp_chr_loc_5 0090  
              __size_of_lcd_disp_chr_loc_6 0090                __size_of_lcd_disp_chr_loc_7 0090  
                        ___x_sample_fliter 2908                   ui_disp_menu_warn_t_adj@p 007E  
                         ___up_home_adj@t8 0020                    lcd_disp_unit_2nd_m@show 0020  
                  ads1115_set_pga@pAds1115 0060             ___enter_menu_set_base_zero@t32 007F  
                         ?___x_sample_fifo 007A                       _key_process_set_long 6CF8  
       __end_of___enter_menu_epr_ilp_scale 6C40                 ___enter_menu_epr_ilp_scale 6B86  
           ___enter_menu_set_base_zero@fps 007D           __size_of___set_short_poly_coefic 0070  
                                  ?___flge 00B8                     ___enter_menu_warn_type 89B4  
       __end_of_ui_disp_menu_epr_calib_adj 694E                 _ui_disp_menu_epr_calib_adj 688C  
                                  ?___lmul 0060                                    POSTINC0 000FEE  
                       ?___x_sample_fliter 007A                ?___set_long_bar_level_scale 0001  
        __end_of_ui_disp_menu_calib_pr_adj 608C                                    ?___wmul 0062  
        __end_of_ui_disp_menu_bar_full_adj 95D0               __size_of_ui_disp_start_cs600 0098  
                                ?___exp_10 0060                             ___lmul@product 0068  
                   ?i2_sys_ticker_irq_hook 0001                                 _crc_append 8828  
                     ??_rtcc_reg_wr_enable 0020              __size_of_ui_disp_menu_pos_adj 008E  
                    ?_sample_in_soc_adc_ch 0001           __size_of_ui_disp_menu_poly_c_adj 0064  
                                  _ALRMRPT 000F5A                       _at24c02_write_n_byte 5392  
            __size_of_ui_disp_menu_psw_adj 002A             ___enter_menu_epr_ilp_scale@t32 007E  
                      ??___x_sample_fliter 007E                             ?___up_home_adj 0001  
           __size_of_ads1115_set_data_rate 0026             ___enter_menu_epr_ilp_scale@fps 0082  
                    ?___set_long_work_mode 0001                        ___mflot32_2_int32@i 0070  
                      ___mflot32_2_int32@x 006C              __end_of_ads1115_set_data_rate 98FE  
                               _crc_verify 7B1E           __size_of_ui_disp_menu_warn_t_adj 0130  
         __size_of_ui_disp_menu_warn_v_adj 00E2                                    i1l13036 007E  
                            ?_ads1115_init 0060                                    i2l13010 677A  
      __size_of___exit_menu_to_home_unsave 003E                    ?___set_short_diff_calib 0001  
                               _lcd_bl_off 9CB0                            _data_sys_cal_v1 3358  
                          _data_sys_cal_v2 474E                                 _lcdTwinkle 0034  
                                ?___xxtofl 0060                    _calib_data_init_diff_pr 502C  
                   ___enter_menu_work_mode 9C26                                 _lcd_config 9750  
                   ??___set_long_base_zero 0021                __size_of_lcd_disp_light_bar 004C  
                        cal_diff_p_to_h@f1 00C8                          cal_diff_p_to_h@f2 00C4  
                                ?_delay_ms 0064                                  ?_delay_us 0060  
                                  _TBLPTRH 000FF7                     ??___up_poly_coefic_adj 0021  
                                  _TBLPTRL 000FF6                                    _TBLPTRU 000FF8  
                      _key_adj_value_float 608C                        _key_adj_value_fixed 5DD2  
                  _ads1115_read_conversion 90CE               __size_of_rtcc_reg_wr_disable 000C  
                                  _RTCVALH 000F5D                                    _RTCVALL 000F5C  
                        __end_of_cal_press 7DA2                       ___int32_2_mflot32@mf 0079  
                               _m_floatAdj 0035                             ?_key_shift_loc 0060  
                           m_int8_2_hex@t8 0020                                  ?_lcd_init 0001  
              __size_of_lcd_show_string_l0 006E                __size_of_lcd_show_string_l1 0042  
                                ?_iic_stop 0001           __end_of_ui_disp_adj_xfixed_pt_dp 6242  
                        ??_ads1115_set_pga 0020                          ??_ads1115_set_mux 0020  
                        ??_lcd_disp_rf_bar 0021                     sample_pr_chip_fast@t16 008B  
          __size_of_event_process_time_out 0002                            _cal_diff_p_to_h 56BC  
                        __end_of_auchCRCHi EEB1                          __end_of_auchCRCLo EDB1  
                      _sample_pr_chip_fast 4314                     sample_pr_chip_fast@ret 008A  
                __size_of_key_process_down 015C                         _sample_call_cal_pr 9A5C  
                            ?_ui_disp_menu 0001                   _cal_pt100_temperature_in 9BFE  
                 _cal_pt100_temperature_ex 9BEA                  __end_of___x_sample_fliter 2BCC  
                          ___down_pr_calib 9924                     ?_handler_interrupt_low 0001  
              at24c02_read_n_byte@pAt24c02 0068                                    __Hparam 0000  
                        cal_diff_press@xin 03E4                                    __Lparam 0000  
                   m_interp1_float_fast@in 00C6                      ?_key_process_set_long 0001  
                           lcd_show_dp@loc 0071                       ?_key_adj_value_float 0075  
                     ?_key_adj_value_fixed 006E                             _prChipSampleCh 00F7  
                        __end_of_lcd_bl_on 9CB0                                  ?_soc_init 0001  
                      ?_sample_call_cal_pr 0001                      __size_of_lcd_disp_all 0030  
                _cal_diff_hight_level$5838 00C4                  _cal_diff_hight_level$5839 00C8  
                                ?_rtc_init 0001                 __end_of_ui_disp_menu_d_adj 97AC  
                                  ___aldiv 5278                            __size_of___flge 0190  
                        __end_of_iic_start 942C                                    ___fladd 0C96  
                        ??_m_int16_2_str_4 0020                         data_sys_cal_v1@stp 00C2  
               __end_of_ui_disp_menu_h_adj 840A                         data_sys_cal_v2@stp 00C2  
                                  ___fldiv 1E80           __end_of___enter_menu_calib_press 59CE  
                                  ___awdiv 6A0C                                    ___lbdiv 8F9C  
                                  ___flneg 93BC                            __size_of___lmul 0076  
                                  ___awmod 7304                                    ___flmul 113E  
                    ui_disp_menu_pos_adj@p 0076                                    ___fltol 54A8  
                        m_flash_erase@addr 0060                                    ___lldiv 6ACA  
                          __size_of___wmul 0036                    __end_of_key_process_set 74E0  
                                  ___lwdiv 7F12                                    ___lwmod 8952  
                        __end_of_m_mem_cpy 85BE                          __end_of_m_mem_set 9A1C  
                     ___up_warn_type_adj@p 0060        __end_of___sys_data_save_write_flash 5AD2  
              ___sys_data_save_write_flash 59CE                                  _LCDDATA10 000F70  
                                _LCDDATA11 000F71                                  _LCDDATA12 000F72  
                                _LCDDATA20 000F7A                                  _LCDDATA13 000F73  
                                _LCDDATA21 000F7B                                  _LCDDATA14 000F74  
                                _LCDDATA22 000F7C                                  _LCDDATA15 000F75  
                                _LCDDATA23 000F7D                                  _LCDDATA16 000F76  
                                _LCDDATA17 000F77                                  _LCDDATA18 000F78  
                                _LCDDATA19 000F79                __size_of___up_pose_size_adj 0072  
                                  _blackEn 00FB                            __CFG_STVREN$OFF 000000  
                     ?_sample_pr_chip_fast 0001                                 ??___exp_10 0020  
                                  _pcf8574 0118                                    __pcinit 71BC  
                     m_flash_unlock@oldGIE 0020                      __size_of_iic_send_ack 0052  
                ___set_short_pr_calib@adjv 009D                   at24c02_write_n_byte@addr 0068  
                                  __ramtop 1000                      ?_at24c02_write_n_byte 0066  
                                  __ptext0 88F0                                    __ptext1 74E0  
                                  __ptext2 9464                                    __ptext3 8C4A  
                                  __ptext4 9C38                                    __ptext5 9C48  
                                  __ptext6 921A                                    __ptext7 6C40  
                                  __ptext8 9C82                                    __ptext9 9C8E  
           __end_of___set_short_diff_calib 25AA                  ___set_short_diff_calib@t8 0095  
                                  _crc_sum 73A6                     ?_ads1115_init_all_chip 0001  
                           ??_ads1115_init 0020                        _sys_ticker_irq_hook 9B06  
                        ___int32_2_mflot32 57C4                   __size_of_lcd_set_com_seg 00C8  
                   ___up_epr_ilp_scale_adj 9B7C                                  _T1CONbits 000FCD  
                  ?_sample_call_cal_in_soc 0001                      ___mflot32_2_int32@ret 0071  
                      lcd_set_com_seg@bits 006F                   ___up_adj_bar_level_scale 9BBE  
                               ??___xxtofl 0064                       __end_of_at24c02_init 7E1E  
                      lcd_set_com_seg@show 0069                 ___set_short_diff_calib@t16 009B  
               ___set_short_diff_calib@t32 0097                           ___awmod@dividend 0060  
                                  _rtHight 00E8                         ?___int32_2_mflot32 006D  
                         ___aldiv@dividend 006C                      __size_of_m_int8_2_hex 005A  
                                _LCDPSbits 000FAA                                    _rtLevel 00FE  
               ___set_short_diff_calib@pra 0090                       m_interp1_cal_p_t@t16 0096  
                     m_interp1_cal_p_v@t16 0093                                 ??_delay_ms 0020  
            ??___sys_data_save_write_flash 0021                                 ??_delay_us 0020  
                    __size_of_lcd_show_chr 0098             ui_disp_menu_calib_diff_adj@buf 008A  
                     ??_sample_call_cal_pr 0020                                    _subMenu 0032  
                     m_interp1_cal_p_t@xin 007C                       m_interp1_cal_p_v@xin 007C  
                    __end_of_lcd_disp_logo 9720                                    _rtc_set 6C40  
        __size_of_ui_disp_menu_density_adj 002E                      __size_of_m_flash_read 007E  
                ?_ui_disp_menu_density_adj 0001               ??_ui_disp_menu_work_mode_adj 0076  
         ads1115_start_conversion@pAds1115 006B          __size_of_ads1115_start_conversion 002A  
         __size_of_cal_additional_pressute 001C                                 ??_lcd_init 0020  
                ?_ads1115_start_conversion 006B                             __pintcode_body 6700  
                               ??_iic_stop 0020                               _flashTestbuf F32F  
                     end_of_initialization 7252                            cal_press@tabrow 009B  
                      ??___int32_2_mflot32 0071              ___set_short_diff_calib@gohome 0094  
                           m_flash_write@i 0079                             m_flash_write@j 007E  
                  __size_of_key_process_up 00AE                             ??_ui_disp_menu 0021  
        ui_disp_menu_epr_ilp_scale_adj@buf 008A                               _lcd_disp_all 9720  
            __size_of_sample_variable_init 0056                              __Lmediumconst ECB0  
                ??_sample_call_cal_diff_pr 0020                                    int_func 6700  
                     ?_sys_ticker_irq_hook 0001                    event_process_ticker@ret 00E7  
                         _inSocAdcSampleCh 00F3                    ___set_short_pr_calib@t8 0095  
               __size_of_event_process_rtc 002A                     __size_of_data_init_all 000E  
                     _ui_disp_clear_num_dp 8CA4            calib_data_set_default_diff_pr@i 006F  
          calib_data_set_default_diff_pr@j 006E                            ___lldiv@divisor 0064  
                    __end_of_iic_send_byte 8162                      ??_key_adj_value_float 0021  
                    ??_key_adj_value_fixed 0021                            ___lldiv@counter 006C  
                 __end_of_ads1115_read_reg 3E5A               _cal_diff_hight_to_vol_v$5840 03CE  
                             _iic_send_ack 8E5E                                 _ticker_dly 9464  
                               _rtPressure 014A                                 ??_soc_init 0020  
                  ??___set_short_epr_param 0021                 __end_of_calib_data_init_pr 502C  
                 __end_of_lcd_disp_battary 832A                          ??_sys_ticker_init 0020  
              __end_of_lcd_disp_unit_2nd_m 87C4                           ___aldiv@quotient 0076  
                               ??_rtc_init 0020                                    postdec1 000FE5  
                                  postdec2 000FDD                      __end_of_iic_waite_ack 8E08  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                   __end_of___up_density_adj 9BA8  
                        _lcd_disp_dp_loc_0 96C0                          _lcd_disp_dp_loc_1 9690  
                        _lcd_disp_dp_loc_2 9660                          _lcd_disp_dp_loc_4 9630  
                        _lcd_disp_dp_loc_5 9600                          _lcd_disp_dp_loc_6 95D0  
                  m_interp1_cal_p_v@tabrow 007A           __size_of___enter_menu_warn_value 00BE  
                   _event_process_time_out 9CB8                 __end_of___enter_menu_set_d 86F8  
               __end_of___enter_menu_set_h 8690                      ??_sample_pr_chip_fast 0021  
       __size_of___enter_menu_poly_coeffic 004E                    __end_of_data_sys_cal_v1 355C  
                  __end_of_data_sys_cal_v2 48B2                     ??_sample_in_soc_adc_ch 0021  
                        _lcd_disp_get_code 8AD6                   __size_of_lcd_show_string 006E  
                             _m_int8_2_hex 8C4A                  __end_of___int32_2_mflot32 58CA  
                              ?_crc_append 006C                            ??___up_home_adj 0020  
               ?_calib_data_set_default_pr 0001                               _lcd_show_chr 7578  
                         _defultSystemData F23F                     ??___set_long_work_mode 0020  
           __end_of_sample_call_cal_in_soc 99FA                   __end_of_lcd_disp_refresh 8A78  
                       ?_lcd_disp_dp_loc_0 0001                         ?_lcd_disp_dp_loc_1 0001  
                       ?_lcd_disp_dp_loc_2 0001                         ?_lcd_disp_dp_loc_4 0001  
                       ?_lcd_disp_dp_loc_5 0001                         ?_lcd_disp_dp_loc_6 0001  
                  ?_ui_disp_menu_bzero_adj 0001                  ??_calib_data_init_diff_pr 0021  
      __size_of_ui_disp_menu_work_mode_adj 0076                __size_of___up_warn_type_adj 0040  
                             _m_flash_read 7CA8                         ?_lcd_disp_get_code 0001  
                  ?_ui_disp_menu_home_test 0001                                ?_crc_verify 006C  
              ui_disp_adj_xfixed_pt_dp@buf 007E                ui_disp_adj_xfixed_pt_dp@loc 007A  
                  ui_disp_adj_xfloat_pt@t8 0089                        i2_rtc_alrm_irq_hook 9CBC  
              ui_disp_adj_xfixed_pt_dp@str 0076                  ??_ads1115_read_conversion 0070  
                        _m_interp1_cal_p_t 15E4                          _m_interp1_cal_p_v 0784  
                              ?_lcd_bl_off 0001                                ___fladd@grs 00B7  
                   __size_of_data_sys_init 0172                    __size_of_cal_diff_press 0122  
                               crc_sum@len 0066                                ?_lcd_config 0001  
                  ?___enter_menu_bar_scale 0001                              ___xxtofl@sign 0068  
                  __end_of_cal_diff_p_to_h 57C4             __size_of_in_adc_start_and_read 006A  
            __end_of_in_adc_start_and_read 8628                         ?_m_interp1_cal_p_t 007A  
                       ?_m_interp1_cal_p_v 007A                            ??_key_shift_loc 0020  
                      ??_lcd_disp_dp_loc_0 0020                        ??_lcd_disp_dp_loc_1 0020  
                      ??_lcd_disp_dp_loc_2 0020                        ??_lcd_disp_dp_loc_4 0020  
                      ??_lcd_disp_dp_loc_5 0020                        ??_lcd_disp_dp_loc_6 0020  
             ___set_short_warn_type@gohome 03CA                      __end_of_m_flash_erase 8D58  
                     lcd_show_string_l0@t8 0075                       lcd_show_string_l1@t8 0075  
             ___enter_menu_calib_press@t32 0086                        ??_lcd_disp_get_code 0020  
                              ___fldiv@grs 009A               ___enter_menu_calib_press@col 0020  
                              ___fldiv@rem 0094                iic_received_byte_if_ack@ack 0066  
                ads1115_write_reg@pAds1115 0066               ___enter_menu_calib_press@row 0083  
                     _data_sys_cal_v1$5832 00C6                       _data_sys_cal_v1$5833 00CA  
                     _data_sys_cal_v1$5834 00CE               ___enter_menu_calib_press@stp 0084  
              iic_received_byte_if_ack@ret 0067                       _data_sys_cal_v2$5835 00C6  
                     _data_sys_cal_v2$5836 00CA         __size_of_key_process_set_down_long 00C8  
                    __end_of_m_flash_write 4CA2         __end_of___exit_menu_to_home_unsave 9296  
               ___exit_menu_to_home_unsave 9258                        ___up_diff_calib_adj 9384  
                  __end_of___down_pr_calib 9948        __size_of___set_long_bar_level_scale 0040  
                  ??___set_short_pose_size 0021                        ??_m_interp1_cal_p_t 007F  
                      ??_m_interp1_cal_p_v 0080                    ??_sample_call_in_ticker 0021  
                              ___flmul@grs 007C                            iic_send_ack@ack 0020  
                    ??_sys_ticker_irq_hook 000F                          _lcd_disp_unit_mpa 86F8  
                  ??___set_short_warn_type 00E3                   __size_of___x_arrange_str 005E  
               __size_of___x_sample_fliter 02C4                       ?i2_rtc_alrm_irq_hook 0001  
                            ??_lcd_disp_rf 0021                      ?_ui_disp_clear_num_dp 0001  
                        _ads1115_write_reg 5BD6                         ?_lcd_disp_unit_mpa 0001  
                  ?___set_short_warn_value 0001                    ___set_short_pose_size@p 03CB  
                   ??_key_process_set_long 0021                    ?_ui_disp_menu_pose_size 0001  
                             _globleBuffer 0500                    ___set_short_poly_coefic 832A  
               ??_sample_diff_pr_chip_fast 0021                         ?_ads1115_write_reg 0066  
               ??___enter_menu_set_density 007D                          _PrChipSampleTimer 0162  
                       ___up_adj_work_mode 949A                  __end_of_lcd_disp_dp_loc_0 96F0  
                __end_of_lcd_disp_dp_loc_1 96C0                  __end_of_lcd_disp_dp_loc_2 9690  
                __end_of_lcd_disp_dp_loc_4 9660                  __end_of_lcd_disp_dp_loc_5 9630  
                __end_of_lcd_disp_dp_loc_6 9600                         iic_received_byte@i 0065  
         __size_of_cal_diff_hight_to_vol_h 0278           __size_of_cal_diff_hight_to_vol_v 06A8  
                  ?___enter_menu_epr_calib 0001                                _adc_inPt100 0170  
                __end_of_lcd_disp_get_code 8B34                              ??_lcd_show_dp 0021  
                              _adc_exPt100 016C                                _adjLocation 003F  
                    _sample_diff_pr_fliter 7C2A                       ?___up_diff_calib_adj 0001  
                            ??_in_adc_init 0020                    ??___enter_menu_password 0020  
                      ??_lcd_disp_unit_mpa 0020                             __end_of___flge 41A2  
                         ?_key_process_set 0001                                 m_mem_cpy@d 0060  
                  ___set_short_warn_type@p 03CB                                 m_mem_cpy@s 0062  
                           __end_of___lmul 80EE                     ??_at24c02_write_n_byte 0021  
        __size_of_ui_disp_adj_xfixed_pt_dp 00D8             __end_of_ui_disp_menu_bzero_adj 9808  
                  _ui_disp_menu_poly_c_adj 87C4                             __end_of___wmul 9506  
                ?_ui_disp_adj_xfixed_pt_dp 0076                  __size_of___down_dpr_calib 0024  
                               m_mem_set@x 0062              __size_of_m_interp1_float_fast 0428  
           __end_of_ui_disp_menu_home_test 6F10                         ___set_long_density 8EB0  
                      ??_ads1115_write_reg 0021               ??___enter_menu_epr_ilp_scale 0020  
                __end_of_m_interp1_cal_p_t 1A58                  __end_of_m_interp1_cal_p_v 0C96  
                      ?___up_adj_work_mode 0001            __end_of_sample_call_cal_diff_pr 9A98  
        __end_of___enter_menu_poly_coeffic 8F4E                      _diffPrChipSampleCount 00FA  
                  _ui_disp_menu_warn_t_adj 4DD2                    _ui_disp_menu_warn_v_adj 5ECA  
                    at24c02_write_n_byte@i 006D                      _diffPrChipSampleTimer 0164  
                             cal_press@ret 009A                               cal_press@xin 009D  
           __end_of___enter_menu_bar_scale 9310                              _data_init_all 9C66  
                       lcd_disp_get_code@i 0062                          crc_verify@message 006C  
                      start_initialization 71BC                            key_shift_loc@t8 0020  
                      ?___set_long_density 0001                     ui_disp_start_cs600@buf 0076  
                   ui_disp_start_cs600@dly 007C             ___set_long_bar_level_scale@stp 00E5  
                 ?_handler_interrupt_hight 0001     __end_of_calib_data_set_default_diff_pr 373A  
  __size_of_calib_data_set_default_diff_pr 01DE             _calib_data_set_default_diff_pr 355C  
                          _LCDDigitalTable EEDC                   lcd_disp_battary_bar@show 0020  
           ?___enter_menu_calib_press_diff 0020                          ??_lcd_set_com_seg 006A  
                       ads1115_set_pga@pga 0062                ?___enter_menu_set_base_zero 0001  
                   ___x_sample_fliter@loop 007D          __size_of___enter_menu_calib_press 0104  
                    __end_of_m_mem_cpy_len 9038                  __end_of_lcd_disp_unit_mpa 875E  
                ?___enter_menu_calib_press 0020                  ui_disp_adj_xfixed_pt_dp@x 0078  
                   lcd_disp_chr_loc_0@code 0020                 ?___set_short_epr_ilp_scale 0001  
                        m_flash_write@addr 006E                     lcd_disp_chr_loc_1@code 0020  
                   lcd_disp_chr_loc_2@code 0020          __end_of_key_process_set_down_long 64A8  
                   lcd_disp_chr_loc_3@code 0020                     lcd_disp_chr_loc_4@code 0020  
                      _ui_disp_start_cs600 74E0                     lcd_disp_chr_loc_5@code 0020  
                   lcd_disp_chr_loc_6@code 0020                     lcd_disp_chr_loc_7@code 0020  
                         _key_process_down 4A10                       ??___up_adj_work_mode 0020  
                __end_of_ads1115_write_reg 5CD6                __end_of___up_warn_value_adj 9B50  
          __end_of_calib_data_init_diff_pr 5156                         ads1115_set_mux@mux 0062  
                      __size_of_crc_append 0064             __end_of___set_short_warn_value 6570  
                    ??i2_rtc_alrm_irq_hook 0001             __end_of_ui_disp_menu_pose_size 98B0  
                        ___mflot32_2_int32 7114              __size_of___set_short_pr_calib 035E  
                 in_adc_start_and_read@ret 0067       ___enter_menu_epr_ilp_scale@__subMenu 007D  
                     __end_of_ads1115_init 7304                              _data_sys_init 41A2  
                  ?___enter_menu_warn_type 0001               __end_of_lcd_disp_battary_bar 7F12  
                      __size_of_crc_verify 008C                       ??___set_long_density 0021  
                       ?___mflot32_2_int32 006C             __end_of___enter_menu_epr_calib 7114  
                      __size_of_lcd_bl_off 0008                           lcd_show_chr@code 0072  
                 ads1115_read_reg@pAds1115 0068                                ?_ticker_dly 0060  
                      __size_of_lcd_config 002E                           data_sys_cal_v1@f 00D6  
                         data_sys_cal_v2@d 00D2                           data_sys_cal_v1@h 00D2  
                         data_sys_cal_v2@f 00CE                           data_sys_cal_v1@r 00DA  
                __size_of___down_pose_size 0030                       key_waite_release@key 006A  
                      _rtcc_reg_wr_disable 9C8E                                   ??___flge 00C0  
                  ??i2_sys_ticker_irq_hook 0001                      ??___up_diff_calib_adj 0021  
                                 ??___lmul 0020                                   ??___wmul 0021  
              ?_ui_disp_menu_epr_calib_adj 0001                __size_of___up_epr_calib_adj 0034  
                       m_interp1_cal_p_t@i 0098                         m_interp1_cal_p_v@i 0099  
                       m_interp1_cal_p_t@x 008E                         m_interp1_cal_p_t@y 008A  
                       m_interp1_cal_p_v@x 008F                         m_interp1_cal_p_v@y 008B  
                      __end_of_lcd_disp_rf 82B8                         lcd_disp_rf_bar@bar 0070  
                              __pdataBANK0 00FF                                __pdataBANK1 01F0  
                 key_adj_value_fixed@value 006E                           __CFG_LPT1OSC$OFF 000000  
                     ?_ui_disp_start_cs600 0001                           ?_data_sys_cal_v1 00C2  
                         ?_data_sys_cal_v2 00C2                        ??___mflot32_2_int32 0020  
               __size_of___int32_2_mflot32 0106                      __size_of_at24c02_init 007C  
                  __size_of_lcd_disp_light 005E                      _ui_disp_adj_xfloat_pt 30FE  
                    _ui_disp_adj_xfixed_pt 6570                         ___up_base_zero_adj 9BA8  
                  ?___enter_menu_work_mode 0001               __end_of_sample_all_power_off 9C66  
                     __end_of_ui_disp_menu 706C                             ?_data_init_all 0001  
                          _ads1115_set_pga 9990                            _ads1115_set_mux 99B4  
            __size_of_cal_diff_hight_level 02BA                   _iic_received_byte_if_ack 9A3C  
                                ___fladd@a 00A8                                  ___fladd@b 00A4  
                        __size_of___exp_10 005C                            _lcd_disp_rf_bar 7E1E  
                              _ALRMCFGbits 000F5B                        __end_of_lcd_show_dp 8552  
                       lcd_show_string@str 0073                                  ___fldiv@a 008B  
                                ___fldiv@b 0087                        __end_of_in_adc_init 9990  
                            ??_key_polling 0020                           _sampBufDiffPr_S1 01D0  
                                _pAdjValue 0166                           data_sys_init@t16 00DE  
                            ??_key_process 0021                                  ___flmul@a 0072  
                                ___flmul@b 006E                                __pbssCOMRAM 0021  
                         data_sys_init@buf 00E3                          ??_lcd_show_string 0021  
                         data_sys_init@ret 00E0                 ___enter_menu_bar_scale@fps 0062  
                         data_sys_init@stp 00E1                    ui_disp_menu_pos_adj@buf 0078  
                            __pcstackBANK0 0060                              __pcstackBANK1 01FD  
                            __pcstackBANK3 03CA                           ?_cal_diff_p_to_h 00C2  
                                _adc_iPrEx 0021                        ?___up_base_zero_adj 0001  
       __end_of_ui_disp_menu_work_mode_adj 8078                 _ui_disp_menu_work_mode_adj 8002  
                     ?_rtcc_reg_wr_disable 0001                    _cal_additional_pressute 9AD0  
                      _inSocAdcSampleCount 00F4                               _stRTCCFGbits 000F5F  
                           _sensorSimpleEn 00F1                 ??_cal_pt100_temperature_in 0020  
               ??_cal_pt100_temperature_ex 0020          ___enter_menu_warn_value@__subMenu 007F  
                 key_waite_release@timeout 0068                        _inSocAdcSampleTimer 0160  
                        __size_of___xxtofl 01CE               ___set_long_bar_level_scale@p 00E3  
                        __size_of_delay_ms 0026                          __size_of_delay_us 0038  
                      __CFG_CCP2MX$DEFAULT 000000                           ?___down_pr_calib 0001  
             __end_of_ui_disp_menu_pos_adj 7B1E                             _key_process_up 6F10  
      sample_function_enable_fi_in_rtc@ret 00E6                  __end_of___mflot32_2_int32 71BC  
                  ??_handler_interrupt_low 000F               __end_of_ui_disp_menu_psw_adj 9886  
                      ___x_arrange_str@len 0062                            _m_int16_2_str_4 48B2  
                      ___x_arrange_str@str 0060                          __size_of_lcd_init 001C  
            __size_of_event_process_ticker 000C                                  _cal_press 7D26  
            __size_of___down_home_adj_test 001C                     ??_ui_disp_clear_num_dp 0021  
                        __size_of_iic_stop 0036             __end_of___enter_menu_warn_type 8A16  
                ??___set_short_poly_coefic 0021                 __end_of_lcd_disp_chr_loc_0 7A90  
               __end_of_lcd_disp_chr_loc_1 7A00                 __end_of_lcd_disp_chr_loc_2 7970  
               __end_of_lcd_disp_chr_loc_3 78E0                 __end_of_lcd_disp_chr_loc_4 7850  
               __end_of_lcd_disp_chr_loc_5 77C0                 __end_of_lcd_disp_chr_loc_6 7730  
               __end_of_lcd_disp_chr_loc_7 76A0                             ?_data_sys_init 0001  
       __end_of___set_long_bar_level_scale 921A                 ___set_long_bar_level_scale 91DA  
                                _auchCRCHi EDB1                                  _auchCRCLo ECB1  
             __size_of_sample_all_power_on 0014                          ___x_arrange_str@i 0020  
                  ads1115_set_mux@pAds1115 0060                ?___enter_menu_set_pose_size 0001  
                             _at24c02_init 7DA2                           ___lwdiv@dividend 0062  
            ads1115_read_conversion@result 0071               ___enter_menu_set_density@t32 0081  
                     ??___up_base_zero_adj 0021                     ?_sample_diff_pr_fliter 008F  
             ___enter_menu_set_density@fps 007F                 __size_of_lcd_disp_dp_loc_0 0030  
               __size_of_lcd_disp_dp_loc_1 0030                 __size_of_lcd_disp_dp_loc_2 0030  
               __size_of_lcd_disp_dp_loc_4 0030                 __size_of_lcd_disp_dp_loc_5 0030  
               __size_of_lcd_disp_dp_loc_6 0030                  ??_ui_disp_menu_poly_c_adj 0021  
                                __pintcode 0008                 __size_of_lcd_disp_get_code 005E  
                            __pmediumconst ECB0                    ___enter_menu_warn_value 694E  
                        ??___x_arrange_str 0020                                   ?___aldiv 006C  
                                 ?___fladd 00A4                                   ?___fldiv 0087  
                                 ?___awdiv 0060                                  __ptext100 86F8  
                                __ptext101 875E                                   ?___lbdiv 0020  
                                __ptext110 977E                                  __ptext102 4DD2  
                                 ?___flneg 00A0                                  __ptext111 87C4  
                                __ptext103 985C                                  __ptext200 73A6  
                                __ptext120 688C                                  __ptext112 6E60  
                                __ptext104 6570                                  __ptext201 355C  
                                __ptext121 97AC                                  __ptext113 8246  
                                __ptext105 9886                                  __ptext210 9A3C  
                                __ptext202 94D0                                  __ptext130 8478  
                                __ptext122 5FAC                                  __ptext114 7E1E  
                                __ptext106 7A90                                  __ptext211 8E5E  
                                __ptext203 5392                                  __ptext131 7578  
                                __ptext123 5CD6                                  __ptext115 8A78  
                                __ptext107 9158                                  __ptext212 888C  
                                __ptext204 98FE                                  __ptext140 7A00  
                                __ptext132 8AD6                                  __ptext124 8F9C  
                                __ptext116 9038                                  __ptext108 840A  
                                __ptext221 9B20                                  __ptext213 942C  
                                __ptext205 3E5A                                  __ptext141 84E6  
                                __ptext133 7610                                  __ptext125 97DA  
                                __ptext117 82B8                                  __ptext109 839A  
                                __ptext222 9CBC                                  __ptext214 7DA2  
                                __ptext206 93F4                                  __ptext150 7304  
                                __ptext142 95D0                                  __ptext134 76A0  
                                __ptext126 30FE                                  __ptext118 7E98  
                                __ptext223 0000                                  __ptext215 9296  
                                __ptext207 80EE                                  __ptext151 8A16  
                                __ptext143 9600                                  __ptext135 7730  
                                __ptext127 95A0                                  __ptext119 67C8  
                                __ptext216 7260                                  __ptext208 8DB0  
                                __ptext160 9BEA                                  __ptext152 8B34  
                                __ptext144 9630                                  __ptext136 77C0  
                                __ptext128 616A                 ??___up_adj_bar_level_scale 0021  
                                __ptext209 9506                                  __ptext161 7D26  
                                __ptext153 96F0                                  __ptext145 9660  
                                __ptext137 7850                                  __ptext129 8CA4  
                                __ptext218 9B06                                  __ptext170 8078  
                                __ptext162 99D8                                  __ptext154 6638  
                                __ptext146 9690                                  __ptext138 78E0  
                                __ptext219 9CBA                                  __ptext171 5278  
                                __ptext163 9AD0                                  __ptext155 6A0C  
                                __ptext147 96C0                                  __ptext139 7970  
                                __ptext180 9C12                                  __ptext172 56BC  
                                __ptext164 9A7A                                  __ptext156 9720  
                                __ptext148 8552                                  __ptext181 9C58  
                                __ptext173 00DC                                  __ptext165 9BFE  
                                __ptext157 6312                                  __ptext149 48B2  
                                __ptext190 390C                                  __ptext182 9C66  
                                __ptext174 2E86                                  __ptext166 5156  
                                __ptext158 8E08                                  __ptext191 54A8  
                                __ptext183 41A2                                  __ptext175 1A58  
                                __ptext167 99FA                                  __ptext159 9A5C  
                                __ptext192 113E                                  __ptext184 4B6C  
                                __ptext176 93BC                                  __ptext168 0784  
                                __ptext193 1E80                                  __ptext185 7CA8  
                                __ptext177 2BCC                                  __ptext169 15E4  
                                __ptext194 4F02                                  __ptext186 8CFE  
                                __ptext178 4012                                  __ptext195 3ADA  
                                __ptext187 9AEC                                  __ptext179 0C96  
                                 ?___awmod 0060                                  __ptext196 502C  
                                __ptext188 474E                                  __ptext197 7B1E  
                                __ptext189 3358                                  __ptext198 8FEA  
                                __ptext199 8828                                   ?___flmul 006E  
                                 ?___fltol 00B8                  ??_ui_disp_menu_warn_t_adj 0076  
                                 ?___lldiv 0060                    ___mflot32_2_int32@F7717 013E  
                ??_ui_disp_menu_warn_v_adj 008A                    ??_ads1115_init_all_chip 0020  
                    ??_ui_disp_start_cs600 0021                                   ?___lwdiv 0062  
                                 ?___lwmod 0069                          __size_of_soc_init 0010  
               ?_ui_disp_menu_calib_pr_adj 0001             __end_of___enter_menu_work_mode 9C38  
                  ?___up_epr_ilp_scale_adj 0001               __size_of_at24c02_read_n_byte 01B8  
                                _lcd_bl_on 9CA6                 ?_ui_disp_menu_bar_full_adj 0001  
                              __pintcodelo 0018                          __size_of_rtc_init 003E  
         __end_of_ads1115_start_conversion 9832                     lcd_disp_light_bar@show 0020  
                                _dlyTicker 015E                 __size_of_m_interp1_cal_p_t 0474  
               __size_of_m_interp1_cal_p_v 0512                __size_of_rtcc_reg_wr_enable 000C  
                                _iic_start 93F4                                   ?_crc_sum 0060  
                      ___int32_2_mflot32@x 006D                   __size_of___x_sample_fifo 016A  
                  __end_of_LCDDigitalTable EF06                 __end_of_lcd_disp_light_bar 9084  
                cal_diff_hight_to_vol_h@f1 03DA                  cal_diff_hight_to_vol_h@f2 03D2  
                cal_diff_hight_to_vol_h@v1 03D6                  cal_diff_hight_to_vol_h@v2 03CE  
                            ?___up_psw_adj 0001                            at24c02_init@slv 0062  
                                _m_mem_cpy 8552                  cal_diff_hight_to_vol_v@f1 03DE  
                                _m_mem_set 99FA                  cal_diff_hight_to_vol_v@v1 03D2  
                cal_diff_hight_to_vol_v@v2 03D6               cal_additional_pressute@index 0020  
                ___set_short_pose_size@t32 03CD                             _cal_diff_press 5156  
                ___set_short_pose_size@stp 03D1                         _ui_disp_menu_d_adj 977E  
                    ??_rtcc_reg_wr_disable 0020                      _ads1115_set_data_rate 98D8  
               __end_of_lcd_show_string_l0 8478                 __end_of_lcd_show_string_l1 919A  
                       _ui_disp_menu_h_adj 839A                                _PADCFG1bits 000F54  
                         m_flash_erase@t32 0064                                   ?_rtc_set 0060  
                    lcd_disp_unit_mpa@show 0020               ___set_short_pr_calib@saveFlg 0096  
                   __end_of_key_process_up 6FBE                        __size_of_ticker_dly 0036  
                         ___lwdiv@quotient 0067                       ads1115_init@pAds1115 0060  
            __size_of___set_long_base_zero 0058                                   _LCDDATA0 000FBB  
                                 _LCDDATA1 000FBC                                   _LCDDATA2 000FBD  
                                 _LCDDATA3 000FBE                                   _LCDDATA4 000FBF  
                                 _LCDDATA5 000F6B                                   _LCDDATA6 000F6C  
                                 _LCDDATA7 000F6D                                   _LCDDATA8 000F6E  
                                 _LCDDATA9 000F6F              __size_of___up_poly_coefic_adj 0016  
               __size_of_lcd_disp_unit_mpa 0066                      lcd_set_com_seg@offset 006E  
                ___set_short_poly_coefic@p 00E4                        __end_of_key_polling 8BEE  
                     ___mflot32_2_int32@mf 0075                        __end_of_key_process 6312  
                       lcd_set_com_seg@com 006D                            _sys_ticker_init 9C48  
                       lcd_set_com_seg@seg 0068                        ?_ui_disp_menu_d_adj 0001  
                      ?_ui_disp_menu_h_adj 0001                                  _sampBufPr 01B8  
                          ___aldiv@divisor 0070                 __size_of_ads1115_write_reg 0100  
                 __end_of_defultSystemData F32F                                 ?_cal_press 0001  
                         m_flash_read@addr 0060                            ___aldiv@counter 0074  
                           ___wmul@product 0066               ??___exit_menu_to_home_unsave 0020  
         ??_ui_disp_menu_epr_ilp_scale_adj 0021            ?_ui_disp_menu_epr_ilp_scale_adj 0001  
                                delay_us@i 0062                          _iic_received_byte 888C  
                           m_mem_cpy_len@d 0060                             m_mem_cpy_len@s 0062  
                                 _IPR1bits 000F9F                                   _PIE1bits 000F9D  
                                 _IPR3bits 000FA5                                   _PIE3bits 000FA3  
                              _lcd_disp_rf 8246           __end_of_sample_diff_pr_chip_fast 390C  
            ui_disp_adj_xfixed_pt_dp@dploc 007B           __end_of___enter_menu_set_density 8246  
            ___set_short_warn_value@gohome 03CA                                _dlyTickerEn 002B  
                  _cal_diff_hight_to_vol_h 2E86                    _cal_diff_hight_to_vol_v 00DC  
                       ?_iic_received_byte 0001                                   _PIR1bits 000F9E  
                  ?_event_process_time_out 0001                                   _PIR3bits 000FA4  
                       cal_diff_p_to_h@xin 00C2                          ?_ads1115_read_reg 0068  
                         crc_sum@usDataLen 0062                                   _RCONbits 000FD0  
                         __CFG_WDTPS$32768 000000                 __end_of___up_pose_size_adj 81D4  
                  __end_of_ads1115_set_pga 99B4                    __end_of_ads1115_set_mux 99D8  
           __end_of___up_epr_ilp_scale_adj 9B92                          ?_lcd_disp_battary 0001  
                  __end_of_lcd_disp_rf_bar 7E98                                  _stSysData 0200  
           __size_of___set_short_epr_param 0130                                _lcd_show_dp 84E6  
                       ??_ads1115_read_reg 006B              __end_of___set_short_epr_param 4DD2  
                              _in_adc_init 996C                      ___int32_2_mflot32@t32 0075  
                        ?___up_density_adj 0001                     ?_ui_disp_adj_xfloat_pt 0076  
                   ?_ui_disp_adj_xfixed_pt 0076                   sample_diff_pr_fliter@xin 008F  
                   ui_disp_adj_xfloat_pt@x 0087                       ??_ui_disp_menu_d_adj 0021  
                         ___down_dpr_calib 9948                            ??_data_init_all 0021  
                             ??_crc_append 0070                                 ?_lcd_bl_on 0001  
                     ??_ui_disp_menu_h_adj 0021                         ??_lcd_disp_battary 0021  
                      ??_iic_received_byte 0020                     ui_disp_adj_xfixed_pt@x 0078  
           ___enter_menu_set_pose_size@fps 0060               __end_of_sample_variable_init 8E5E  
      __size_of___enter_menu_set_base_zero 0078                  ___set_short_warn_value@t8 03D1  
              ??_calib_data_set_default_pr 0068                     __end_of_cal_diff_press 5278  
                          m_int8_2_hex@str 0060                               _rtExPressure 012B  
                               ?_iic_start 0001            __end_of___set_short_poly_coefic 839A  
                       ??___up_density_adj 0021                                 _ADCON0bits 000FC2  
                           ??___up_psw_adj 0021                                 _ADCON2bits 000FC0  
                        ___wmul@multiplier 0062                              _pAds1115PrObj 00EC  
                        ?_lcd_disp_refresh 0001                    __size_of_m_flash_unlock 001A  
                             ??_crc_verify 0070                                 ?_m_mem_cpy 0060  
                               ?_m_mem_set 0060                  ??_cal_additional_pressute 0020  
                             ??_lcd_bl_off 0020                           m_int16_2_str_4@x 006A  
                               rtc_set@rtc 0060                                 rtc_set@stp 0062  
            ui_disp_menu_work_mode_adj@buf 0077                               ??_lcd_config 0020  
                       _calib_data_init_pr 4F02                         ??_lcd_disp_refresh 0020  
                 ___set_long_base_zero@t32 03CA                       _lcd_disp_battary_bar 7E98  
                 ___set_long_base_zero@stp 03CE                    __end_of_m_int16_2_str_4 4A10  
          __end_of_ui_disp_menu_poly_c_adj 8828                  ___set_short_warn_type@stp 03CD  
              __size_of_sample_call_cal_pr 001E                         ___enter_menu_set_d 8690  
                       ___enter_menu_set_h 8628                            ?_key_process_up 0001  
                   ___set_long_density@t32 03CA            __end_of_ui_disp_menu_warn_t_adj 4F02  
                                 _HexTable EF06            __end_of_ui_disp_menu_warn_v_adj 5FAC  
          ads1115_read_conversion@pAds1115 006E   __end_of_sample_function_enable_fi_in_rtc 63E0  
__size_of_sample_function_enable_fi_in_rtc 00CE         ??_sample_function_enable_fi_in_rtc 0021  
        ?_sample_function_enable_fi_in_rtc 0001           _sample_function_enable_fi_in_rtc 6312  
                        ___lmul@multiplier 0060                                _INTCON2bits 000FF1  
                         crc_verify@crccal 0072                     ___set_long_density@stp 03CE  
                                copy_data0 71D0                      __size_of_ads1115_init 00A4  
                      ?_calib_data_init_pr 0001                    at24c02_read_n_byte@addr 006A  
               __size_of___mflot32_2_int32 00A8                            ??_data_sys_init 0021  
              __end_of_key_adj_value_float 616A                __end_of_key_adj_value_fixed 5ECA  
                    ui_disp_start_cs600@t8 007D                  __end_of_iic_received_byte 88F0  
                  lcd_disp_battary_bar@bar 0070                        ?___enter_menu_set_d 0001  
                      ?___enter_menu_set_h 0001                           m_flash_write@t16 0081  
           __size_of___set_short_pose_size 0108                         __end_of_crc_append 888C  
            __end_of___set_short_pose_size 56BC                           m_flash_write@buf 0072  
                     _sample_all_power_off 9C58             __size_of_sample_call_in_ticker 004E  
                         m_flash_write@len 0074                          _rtc_alrm_irq_hook 9CBA  
                               _EECON1bits 000FA6              __end_of_sample_call_in_ticker 8F9C  
         ___enter_menu_epr_calib@__subMenu 007D             __size_of___set_short_warn_type 0080  
           __end_of_event_process_time_out 9CBA              __end_of___set_short_warn_type 7C2A  
                ??___enter_menu_warn_value 007D                __end_of_sample_pr_chip_fast 447E  
                                 __Hrparam 0000                    m_interp1_float_fast@len 00CA  
                  m_interp1_float_fast@tab 00C4                         __end_of_crc_verify 7BAA  
                          lcd_show_dp@show 0070                         ?_rtc_alrm_irq_hook 0001  
                          lcd_show_chr@chr 0070                            lcd_show_chr@loc 0071  
                      key_waite_release@t8 0020                                   __Lrparam 0000  
                           _rtDiffPressure 015A                           ___down_pose_size 9570  
                       __end_of_lcd_bl_off 9CB8                            _sampBufPt100ExA 01C8  
                          _sampBufPt100ExB 01C0                            _sampBufBatInSoc 01A0  
                       __end_of_lcd_config 977E                      __size_of_ui_disp_menu 00AE  
                     event_process_rtc@ret 00E7                     __size_of_lcd_disp_logo 0030  
                     ??_calib_data_init_pr 0021                           __size_of___aldiv 011A  
               __end_of___up_warn_type_adj 91DA                           __size_of___fladd 04A8  
                           _lcd_disp_light 8A78                           __size_of___fldiv 03C0  
                         __size_of___awdiv 00BE                           __size_of___lbdiv 004E  
                         __size_of___flneg 0038                           __size_of___awmod 00A2  
                         __size_of___flmul 04A6                           __size_of___fltol 010C  
                         __size_of___lldiv 00BC                                   ___exp_10 8BEE  
           __size_of___enter_menu_password 0016                           __size_of___lwdiv 0078  
            ___enter_menu_poly_coeffic@fps 0063                        ??_rtc_alrm_irq_hook 000F  
                         __size_of___lwmod 0062              __end_of___enter_menu_password 9BEA  
                 __end_of_key_process_down 4B6C                                   _adc_iRef 0168  
                     _ui_disp_menu_pos_adj 7A90                            _lcd_set_com_seg 6638  
                                 _adc_ibat 016A                       ??___enter_menu_set_d 0020  
                     ??___enter_menu_set_h 0020                               _ads1115Chip0 0172  
                             _ads1115Chip1 02F0                            ?_cal_diff_press 0001  
                                 _adjValue 0039                              _sensorPowerOn 002F  
            __size_of_sample_in_soc_adc_ch 0166                       _ui_disp_menu_psw_adj 985C  
                    __end_of___up_home_adj 98D8              ___set_short_epr_ilp_scale@t32 03CB  
             __size_of_lcd_disp_unit_2nd_m 0066                                   _calibCol 0030  
                         __size_of_crc_sum 009E              ___set_short_epr_ilp_scale@stp 03CF  
                                 _calibRow 0031              __size_of___set_long_work_mode 0020  
                 _ui_disp_menu_density_adj 97AC                     ?_ads1115_set_data_rate 0060  
                             _ads1115_init 7260                             key_process@key 01FF  
                    ?_lcd_disp_battary_bar 0020                                   ___xxtofl 390C  
                 _ads1115_start_conversion 9808                                _key_polling 8B92  
        ___enter_menu_calib_press_diff@t32 0086                    __end_of_sys_ticker_init 9C58  
                              _key_process 6242                              crc_append@crc 0072  
        ___enter_menu_calib_press_diff@col 0020           __end_of_cal_pt100_temperature_in 9C12  
         __end_of_cal_pt100_temperature_ex 9BFE                                   _delay_ms 98FE  
        ___enter_menu_calib_press_diff@row 0083          ___enter_menu_calib_press_diff@stp 0084  
                                 _delay_us 942C                     __size_of_iic_send_byte 0074  
                                 _glTicker 013A                            ___lwdiv@divisor 0064  
                                 _glbEvent 002E                            _sampBufRefInSoc 0198  
                          _rtTemperatureIn 014E                            _rtTemperatureEx 0146  
                          ___lwdiv@counter 0066                __end_of_sys_ticker_irq_hook 9B20  
      __size_of___enter_menu_set_pose_size 003C                                   __ptext10 9A98  
                                 __ptext11 9750                                   __ptext20 9B50  
                                 __ptext12 6242                                   __ptext21 934C  
                                 __ptext13 9CA6                                   __ptext30 608C  
                                 __ptext22 8162                                   __ptext14 9CB0  
                                 __ptext31 949A                                   __ptext23 9B66  
                                 __ptext15 9084                                   __ptext40 8D58  
                                 __ptext32 9BBE                                   __ptext24 98B0  
                                 __ptext16 8B92                                   __ptext41 91DA  
                                 __ptext33 5DD2                                   __ptext25 9B7C  
                                 __ptext17 6F10                                   __ptext50 7BAA  
                                 __ptext42 63E0                                   __ptext34 8952  
                                 __ptext26 953C                                   __ptext18 9B3A  
                                 __ptext51 89B4                                   __ptext43 9C26  
                                 __ptext35 7F12                                   __ptext27 9384  
                                 __ptext19 919A                                   __ptext60 4CA2  
                                 __ptext52 25AA                                   __ptext44 81D4  
                                 __ptext36 8BEE                                   __ptext28 9B92  
                                 __ptext61 706C                                   __ptext53 58CA  
                                 __ptext45 7F8A                                   __ptext37 6CF8  
                                 __ptext29 9BA8                                   __ptext70 6ACA  
                                 __ptext62 6DB0                                   __ptext54 55B4  
                                 __ptext46 92D4                                   __ptext38 9A1C  
                                 __ptext71 9BD4                                   __ptext63 59CE  
                                 __ptext55 9310                                   __ptext47 7444  
                                 __ptext39 8EB0                                   __ptext80 8F4E  
                                 __ptext72 4A10                                   __ptext64 6B86  
                                 __ptext56 8628                                   __ptext48 64A8  
                                 __ptext81 4314                                   __ptext73 9924  
                                 __ptext65 2240                                   __ptext57 8690  
                                 __ptext49 694E                                   __ptext90 9990  
                                 __ptext82 45E8                                   __ptext74 9570  
                                 __ptext66 7114                                   __ptext58 832A  
                                 __ptext91 99B4                                   __ptext83 85BE  
                                 __ptext75 9AB4                                   __ptext67 9258  
                                 __ptext59 8F00                                   __ptext92 98D8  
                                 __ptext84 996C                                   __ptext76 9948  
                                 __ptext68 5AD2                                   __ptext93 90CE  
                                 __ptext85 373A                                   __ptext77 9114  
                                 __ptext69 57C4                                   __ptext94 3C9E  
                                 __ptext86 7C2A                                   __ptext78 9CB8  
                                 __ptext95 447E                                   __ptext87 2908  
                                 __ptext79 9C9A                                   __ptext96 9832  
                                 __ptext88 9808                                   __ptext97 6FBE  
                                 __ptext89 5BD6                                   __ptext98 8002  
                                 __ptext99 5ECA                          ??___x_sample_fifo 007F  
                    lcd_disp_light_bar@bar 0070                      __end_of_key_shift_loc 9158  
                 ?_sample_call_cal_diff_pr 0001                           __size_of_rtc_set 00B8  
                                 _lcd_init 9A98                      _in_adc_start_and_read 85BE  
                                 _iic_stop 9506               __end_of_m_interp1_float_fast 1E80  
                   __size_of_iic_waite_ack 0058                ??___set_short_epr_ilp_scale 0021  
                              _rtDiffPrBuf 0300                  _calib_data_set_default_pr 3ADA  
                          cal_diff_press@i 03E6                                   _keyValue 00FC  
                __end_of_rtc_alrm_irq_hook 9CBC                ___set_short_pr_calib@gohome 0094  
                              ??_cal_press 0020                              __size_of_main 0062  
                    ?_sample_all_power_off 0001                  ??_cal_diff_hight_to_vol_h 0020  
                             _ui_disp_menu 6FBE                  ??_cal_diff_hight_to_vol_v 0020  
                          crc_sum@uchCRCHi 006A                            crc_sum@uchCRCLo 006B  
          __end_of_cal_additional_pressute 9AEC                            m_flash_read@t32 006A  
                                 _passWord 003D                            m_flash_read@buf 0064  
                          m_flash_read@len 0066                ___set_short_diff_calib@adjv 009D  
         __size_of_handler_interrupt_hight 67C0               ?_ui_disp_menu_calib_diff_adj 0001  
                             ??_ticker_dly 0020            ?_calib_data_set_default_diff_pr 0001  
         ??_calib_data_set_default_diff_pr 0068                                   _rtWeight 0156  
          ??___enter_menu_calib_press_diff 007D              __size_of_key_process_set_long 00B8  
                                 _soc_init 9C38                               ticker_dly@ms 0060  
               ??_iic_received_byte_if_ack 0021                      m_interp1_cal_p_t@tmpx 007A  
                                 _rtVolume 0152                     __end_of_lcd_disp_light 8AD6  
         __end_of___up_adj_bar_level_scale 9BD4                   ??___set_short_diff_calib 008A  
                    m_interp1_cal_p_v@xout 007E                                   _rtc_init 921A  
                   ads1115_write_reg@value 0069                           ?_ads1115_set_pga 0060  
                   __size_of_m_flash_erase 005A                                   int$flags 0040  
                 ?_calib_data_init_diff_pr 0001                           ?_ads1115_set_mux 0060  
                          _lcd_show_string 8478                           ?_lcd_disp_rf_bar 0020  
             ??___set_long_bar_level_scale 0021             __size_ofi2_sys_ticker_irq_hook 001A  
            __end_ofi2_sys_ticker_irq_hook 9B3A                          ___up_pr_calib_adj 934C  
                   __size_of_m_flash_write 0136                   ?_ads1115_read_conversion 006E  
                              ??_lcd_bl_on 0020                      ?_ui_disp_menu_pos_adj 0001  
                    ?_ui_disp_menu_psw_adj 0001                                ??_iic_start 0020  
                       ?___up_pr_calib_adj 0001              __size_of_at24c02_write_n_byte 0116  
             __end_of___set_short_pr_calib 2908                                delay_ms@dly 0064  
                      ads1115_init@slvaddr 0062                                ??_m_mem_cpy 0020  
                   at24c02_read_n_byte@buf 006B                 ?___enter_menu_poly_coeffic 0001  
                              ??_m_mem_set 0020                     at24c02_read_n_byte@len 006D  
                              delay_us@dly 0060                               _x_prDiffData 01E8  
          __end_of___enter_menu_warn_value 6A0C                                 _INTCONbits 000FF2  
                      _sample_all_power_on 9C12          __size_of_sample_diff_pr_chip_fast 01D2  
       __end_of___enter_menu_set_base_zero 8002                 ___enter_menu_set_base_zero 7F8A  
                 __size_of_key_process_set 009C          __size_of___enter_menu_set_density 0072  
                ?_sample_diff_pr_chip_fast 0001                           m_mem_cpy_len@len 0064  
           ___set_short_diff_calib@saveFlg 0096                  ?___enter_menu_set_density 0001  
                     iic_waite_ack@timeout 0020                      __CFG_RTCSOSC$T1OSCREF 000000  
                      ??___up_pr_calib_adj 0021                           ?_m_int16_2_str_4 0068  
              ?_ui_disp_menu_work_mode_adj 0001                              key_polling@t8 0067  
              __end_ofi2_rtc_alrm_irq_hook 9CBE                              _lcd_disp_logo 96F0  
                       __end_of_ticker_dly 949A                   ___set_short_pr_calib@t16 009B  
                 ___set_short_pr_calib@t32 0097                                   intlevel1 0000  
                                 intlevel2 0000                        _at24c02_read_n_byte 3E5A  
                     ads1115_read_reg@addr 006A                              key_process@tm 01FD  
                 ___set_short_pr_calib@pra 0090                 __size_of_iic_received_byte 0064  
                          ___x_arrange_str 8B34               ___set_short_pose_size@gohome 03CA  
             __end_of_cal_diff_hight_level 2E86                __size_of___up_adj_work_mode 0036  
                         ___lwmod@dividend 0069                 ?_key_process_set_down_long 0001  
                     _sample_variable_init 8E08                           ___lldiv@dividend 0060  
           __size_of_handler_interrupt_low 00C0                    ??_sample_diff_pr_fliter 0020  
            __end_of_handler_interrupt_low 00D8                __end_of___up_diff_calib_adj 93BC  
                     __end_of___up_psw_adj 9B66                       ?_sample_all_power_on 0001  
                               _OSCCONbits 000FD3                 __end_of___up_epr_calib_adj 9570  
              __size_of___set_long_density 0050                              _iic_send_byte 80EE  
                    ads1115_write_reg@addr 0068                    __end_of_lcd_set_com_seg 6700  
             ui_disp_menu_calib_pr_adj@buf 008A                   _ui_disp_adj_xfixed_pt_dp 616A  
            ??_ui_disp_menu_calib_diff_adj 0021                   ??_sample_call_cal_in_soc 0021  
             __size_of___up_warn_value_adj 0016                  __end_of___up_pr_calib_adj 9384  
                           crc_sum@puchMsg 0060                            ?_lcd_disp_light 0001  
                            _iic_waite_ack 8DB0                  ___set_short_epr_ilp_scale 6DB0  
                     ?_at24c02_read_n_byte 0068               ___set_short_epr_param@gohome 03CA  
                ___set_short_epr_param@t32 03CB                    ___down_home_adj_test@t8 0020  
              ??_ui_disp_menu_calib_pr_adj 0021                         _lcd_disp_chr_loc_0 7A00  
                       _lcd_disp_chr_loc_1 7970                         _lcd_disp_chr_loc_2 78E0  
                       _lcd_disp_chr_loc_3 7850                         _lcd_disp_chr_loc_4 77C0  
                       _lcd_disp_chr_loc_5 7730                         _lcd_disp_chr_loc_6 76A0  
                       _lcd_disp_chr_loc_7 7610               __end_of_event_process_ticker 9CA6  
             __end_of___down_home_adj_test 9AD0                     __size_of_m_mem_cpy_len 004E  
           __size_of_ads1115_init_all_chip 003E               ?___sys_data_save_write_flash 0001  
                ___set_short_epr_param@stp 03CF                ??_ui_disp_menu_bar_full_adj 0021  
            __end_of_ads1115_init_all_chip 92D4                             _m_flash_unlock 9AEC  
          __end_of_cal_diff_hight_to_vol_h 30FE            __end_of_cal_diff_hight_to_vol_v 0784  
                 m_interp1_cal_p_t@tmpxLen 007E                                 _RTCCFGbits 000F5F  
                      ads1115_read_reg@t16 006C                     ??_lcd_disp_battary_bar 0021  
                              crc_append@n 006E                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 006B                              crc_sum@uIndex 0068  
                  ___int32_2_mflot32@F7712 0142                            ___lwmod@counter 006D  
                      ?_lcd_disp_chr_loc_0 0001                        ?_lcd_disp_chr_loc_1 0001  
                      ?_lcd_disp_chr_loc_2 0001                        ?_lcd_disp_chr_loc_3 0001  
                      ?_lcd_disp_chr_loc_4 0001                        ?_lcd_disp_chr_loc_5 0001  
                      ?_lcd_disp_chr_loc_6 0001                        ?_lcd_disp_chr_loc_7 0001  
                 ___enter_menu_calib_press 58CA                           ?_sys_ticker_init 0001  
                 __size_of_data_sys_cal_v1 0204                   __size_of_data_sys_cal_v2 0164  
                             ___aldiv@sign 0075                             ?_lcd_disp_logo 0001  
                   ?_in_adc_start_and_read 0064                              _m_flash_erase 8CFE  
                            ___fladd@signs 00B4                              _m_flash_write 4B6C  
                 __end_of___down_dpr_calib 996C                     ??_sample_all_power_off 0020  
                       _lcd_disp_light_bar 9038                   ui_disp_adj_xfloat_pt@buf 007D  
                 ui_disp_adj_xfloat_pt@loc 007A                 __size_of_rtc_alrm_irq_hook 0002  
                 ui_disp_adj_xfloat_pt@xpf 0078                   ui_disp_adj_xfloat_pt@str 0076  
                    ?_sample_variable_init 0001                              ?_lcd_disp_all 0001  
       __end_of___enter_menu_set_pose_size 934C                 ___enter_menu_set_pose_size 9310  
                             ___fladd@aexp 00B5                               ___fladd@bexp 00B6  
                 __size_of_cal_diff_p_to_h 0108                   ui_disp_menu_home_test@t8 0073  
                   cal_diff_hight_level@f1 00D0                     cal_diff_hight_level@f2 00CC  
                 ui_disp_adj_xfixed_pt@buf 007D                   ui_disp_adj_xfixed_pt@loc 007A  
                    ??_sample_all_power_on 0020                    __end_of_lcd_show_string 84E6  
                 ui_disp_adj_xfixed_pt@str 0076                         _lcd_show_string_l0 840A  
                       _lcd_show_string_l1 9158                               ?_lcd_disp_rf 0001  
                              crc_verify@n 006E              __size_of_ui_disp_clear_num_dp 005A  
              __end_of_ui_disp_start_cs600 7578                       ??_lcd_disp_chr_loc_0 0020  
                     ??_lcd_disp_chr_loc_1 0020                       ??_lcd_disp_chr_loc_2 0020  
                     ??_lcd_disp_chr_loc_3 0020                       ??_lcd_disp_chr_loc_4 0020  
                     ??_lcd_disp_chr_loc_5 0020                       ??_lcd_disp_chr_loc_6 0020  
                     ??_lcd_disp_chr_loc_7 0020                             ?_iic_send_byte 0001  
                 ??_ui_disp_menu_bzero_adj 0021                              ?_iic_send_ack 0001  
                 __size_of___down_pr_calib 0024                        ?_lcd_disp_light_bar 0020  
              ui_disp_menu_work_mode_adj@p 0081            __end_of_ads1115_read_conversion 9114  
                  ??_ui_disp_adj_xfloat_pt 007B                   ??_ui_disp_menu_home_test 0021  
        __size_of_cal_pt100_temperature_in 0014          __size_of_cal_pt100_temperature_ex 0014  
                  ??_ui_disp_adj_xfixed_pt 007B                __size_of___up_base_zero_adj 0016  
                ?_cal_pt100_temperature_in 0001                  ?_cal_pt100_temperature_ex 0001  
