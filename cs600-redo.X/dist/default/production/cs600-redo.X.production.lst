

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 15 09:58:59 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113  0000                     
   114                           ; Version 1.41
   115                           ; Generated 25/01/2017 GMT
   116                           ; 
   117                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC18F86J93 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     
   149                           	psect	idataBANK0
   150  0027B4                     __pidataBANK0:
   151                           	opt stack 0
   152                           
   153                           ;initializer for ui_disp_start_cs600@F7614
   154  0027B4  2D                 	db	45
   155  0027B5  30                 	db	48
   156  0027B6  30                 	db	48
   157  0027B7  2D                 	db	45
   158  0027B8  00                 	db	0
   159  0027B9  00                 	db	0
   160                           
   161                           ;initializer for _fpSysData
   162  0027BA  00                 	db	0
   163  0027BB  F4                 	db	244
   164  0027BC  00                 	db	0
   165                           
   166                           ;initializer for _defalutRtc
   167  0027BD  17                 	db	23
   168  0027BE  07                 	db	7
   169  0027BF  31                 	db	49
   170  0027C0  23                 	db	35
   171  0027C1  55                 	db	85
   172  0027C2  55                 	db	85
   173  0027C3  02                 	db	2
   174                           
   175                           	psect	mediumconst
   176  00F992                     __pmediumconst:
   177                           	opt stack 0
   178  00F992  00                 	db	0
   179  00F993                     _hKel:
   180                           	opt stack 0
   181  00F993  0000               	dw	0
   182  00F995  0000               	dw	0
   183  00F997  4952               	dw	18770
   184  00F999  399D               	dw	14749
   185  00F99B  4952               	dw	18770
   186  00F99D  3A9D               	dw	15005
   187  00F99F  64C3               	dw	25795
   188  00F9A1  3B2A               	dw	15146
   189  00F9A3  0275               	dw	629
   190  00F9A5  3B9A               	dw	15258
   191  00F9A7  34D7               	dw	13527
   192  00F9A9  3BEF               	dw	15343
   193  00F9AB  64C3               	dw	25795
   194  00F9AD  3C2A               	dw	15402
   195  00F9AF  6042               	dw	24642
   196  00F9B1  3C65               	dw	15461
   197  00F9B3  182B               	dw	6187
   198  00F9B5  3C95               	dw	15509
   199  00F9B7  C711               	dw	50961
   200  00F9B9  3CBA               	dw	15546
   201  00F9BB  6042               	dw	24642
   202  00F9BD  3CE5               	dw	15589
   203  00F9BF  A027               	dw	40999
   204  00F9C1  3D09               	dw	15625
   205  00F9C3  9C78               	dw	40056
   206  00F9C5  3D22               	dw	15650
   207  00F9C7  A512               	dw	42258
   208  00F9C9  3D3D               	dw	15677
   209  00F9CB  511A               	dw	20762
   210  00F9CD  3D5A               	dw	15706
   211  00F9CF  A090               	dw	41104
   212  00F9D1  3D78               	dw	15736
   213  00F9D3  7E28               	dw	32296
   214  00F9D5  3D8C               	dw	15756
   215  00F9D7  7DBF               	dw	32191
   216  00F9D9  3D9D               	dw	15773
   217  00F9DB  1AA0               	dw	6816
   218  00F9DD  3DAF               	dw	15791
   219  00F9DF  BDA5               	dw	48549
   220  00F9E1  3DC1               	dw	15809
   221  00F9E3  FDF4               	dw	65012
   222  00F9E5  3DD4               	dw	15828
   223  00F9E7  0FF9               	dw	4089
   224  00F9E9  3DE9               	dw	15849
   225  00F9EB  BF48               	dw	48968
   226  00F9ED  3DFD               	dw	15869
   227  00F9EF  A027               	dw	40999
   228  00F9F1  3E09               	dw	15881
   229  00F9F3  AF4F               	dw	44879
   230  00F9F5  3E14               	dw	15892
   231  00F9F7  0D1B               	dw	3355
   232  00F9F9  3E20               	dw	15904
   233  00F9FB  9F56               	dw	40790
   234  00F9FD  3E2B               	dw	15915
   235  00F9FF  9A6B               	dw	39531
   236  00FA01  3E37               	dw	15927
   237  00FA03  E426               	dw	58406
   238  00FA05  3E43               	dw	15939
   239  00FA07  624E               	dw	25166
   240  00FA09  3E50               	dw	15952
   241  00FA0B  2F1B               	dw	12059
   242  00FA0D  3E5D               	dw	15965
   243  00FA0F  3055               	dw	12373
   244  00FA11  3E6A               	dw	15978
   245  00FA13  8034               	dw	32820
   246  00FA15  3E77               	dw	15991
   247  00FA17  7525               	dw	29989
   248  00FA19  3E82               	dw	16002
   249  00FA1B  5183               	dw	20867
   250  00FA1D  3E89               	dw	16009
   251  00FA1F  4817               	dw	18455
   252  00FA21  3E90               	dw	16016
   253  00FA23  4BC7               	dw	19399
   254  00FA25  3E97               	dw	16023
   255  00FA27  69AD               	dw	27053
   256  00FA29  3E9E               	dw	16030
   257  00FA2B  A1CB               	dw	41419
   258  00FA2D  3EA5               	dw	16037
   259  00FA2F  E704               	dw	59140
   260  00FA31  3EAC               	dw	16044
   261  00FA33  3958               	dw	14680
   262  00FA35  3EB4               	dw	16052
   263  00FA37  A5E3               	dw	42467
   264  00FA39  3EBB               	dw	16059
   265  00FA3B  126F               	dw	4719
   266  00FA3D  3EC3               	dw	16067
   267  00FA3F  9931               	dw	39217
   268  00FA41  3ECA               	dw	16074
   269  00FA43  1FF3               	dw	8179
   270  00FA45  3ED2               	dw	16082
   271  00FA47  C0EC               	dw	49388
   272  00FA49  3ED9               	dw	16089
   273  00FA4B  54CA               	dw	21706
   274  00FA4D  3EE1               	dw	16097
   275  00FA4F  02DE               	dw	734
   276  00FA51  3EE9               	dw	16105
   277  00FA53  A3D7               	dw	41943
   278  00FA55  3EF0               	dw	16112
   279  00FA57  51EC               	dw	20972
   280  00FA59  3EF8               	dw	16120
   281  00FA5B  0000               	dw	0
   282  00FA5D  3F00               	dw	16128
   283  00FA5F  D70A               	dw	55050
   284  00FA61  3F03               	dw	16131
   285  00FA63  AE14               	dw	44564
   286  00FA65  3F07               	dw	16135
   287  00FA67  7E91               	dw	32401
   288  00FA69  3F0B               	dw	16139
   289  00FA6B  559B               	dw	21915
   290  00FA6D  3F0F               	dw	16143
   291  00FA6F  2618               	dw	9752
   292  00FA71  3F13               	dw	16147
   293  00FA73  F007               	dw	61447
   294  00FA75  3F16               	dw	16150
   295  00FA77  B368               	dw	45928
   296  00FA79  3F1A               	dw	16154
   297  00FA7B  76C9               	dw	30409
   298  00FA7D  3F1E               	dw	16158
   299  00FA7F  2D0E               	dw	11534
   300  00FA81  3F22               	dw	16162
   301  00FA83  E354               	dw	58196
   302  00FA85  3F25               	dw	16165
   303  00FA87  8C7E               	dw	35966
   304  00FA89  3F29               	dw	16169
   305  00FA8B  2F1B               	dw	12059
   306  00FA8D  3F2D               	dw	16173
   307  00FA8F  CB29               	dw	52009
   308  00FA91  3F30               	dw	16176
   309  00FA93  5A1D               	dw	23069
   310  00FA95  3F34               	dw	16180
   311  00FA97  E282               	dw	57986
   312  00FA99  3F37               	dw	16183
   313  00FA9B  573F               	dw	22335
   314  00FA9D  3F3B               	dw	16187
   315  00FA9F  C56D               	dw	50541
   316  00FAA1  3F3E               	dw	16190
   317  00FAA3  1FF3               	dw	8179
   318  00FAA5  3F42               	dw	16194
   319  00FAA7  73EB               	dw	29675
   320  00FAA9  3F45               	dw	16197
   321  00FAAB  B439               	dw	46137
   322  00FAAD  3F48               	dw	16200
   323  00FAAF  E76D               	dw	59245
   324  00FAB1  3F4B               	dw	16203
   325  00FAB3  06F7               	dw	1783
   326  00FAB5  3F4F               	dw	16207
   327  00FAB7  1965               	dw	6501
   328  00FAB9  3F52               	dw	16210
   329  00FABB  182B               	dw	6187
   330  00FABD  3F55               	dw	16213
   331  00FABF  0347               	dw	839
   332  00FAC1  3F58               	dw	16216
   333  00FAC3  D42C               	dw	54316
   334  00FAC5  3F5A               	dw	16218
   335  00FAC7  97F6               	dw	38902
   336  00FAC9  3F5D               	dw	16221
   337  00FACB  4817               	dw	18455
   338  00FACD  3F60               	dw	16224
   339  00FACF  DE01               	dw	56833
   340  00FAD1  3F62               	dw	16226
   341  00FAD3  6042               	dw	24642
   342  00FAD5  3F65               	dw	16229
   343  00FAD7  C84B               	dw	51275
   344  00FAD9  3F67               	dw	16231
   345  00FADB  1CAC               	dw	7340
   346  00FADD  3F6A               	dw	16234
   347  00FADF  5048               	dw	20552
   348  00FAE1  3F6C               	dw	16236
   349  00FAE3  703B               	dw	28731
   350  00FAE5  3F6E               	dw	16238
   351  00FAE7  6F69               	dw	28521
   352  00FAE9  3F70               	dw	16240
   353  00FAEB  5AEE               	dw	23278
   354  00FAED  3F72               	dw	16242
   355  00FAEF  25AF               	dw	9647
   356  00FAF1  3F74               	dw	16244
   357  00FAF3  D639               	dw	54841
   358  00FAF5  3F75               	dw	16245
   359  00FAF7  65FE               	dw	26110
   360  00FAF9  3F77               	dw	16247
   361  00FAFB  D4FE               	dw	54526
   362  00FAFD  3F78               	dw	16248
   363  00FAFF  29C7               	dw	10695
   364  00FB01  3F7A               	dw	16250
   365  00FB03  573F               	dw	22335
   366  00FB05  3F7B               	dw	16251
   367  00FB07  6A7F               	dw	27263
   368  00FB09  3F7C               	dw	16252
   369  00FB0B  566D               	dw	22125
   370  00FB0D  3F7D               	dw	16253
   371  00FB0F  2824               	dw	10276
   372  00FB11  3F7E               	dw	16254
   373  00FB13  CBFB               	dw	52219
   374  00FB15  3F7E               	dw	16254
   375  00FB17  559B               	dw	21915
   376  00FB19  3F7F               	dw	16255
   377  00FB1B  B15B               	dw	45403
   378  00FB1D  3F7F               	dw	16255
   379  00FB1F  EC57               	dw	60503
   380  00FB21  3F7F               	dw	16255
   381  00FB23  0000               	dw	0
   382  00FB25  3F80               	dw	16256
   383  00FB27                     __end_of_hKel:
   384                           	opt stack 0
   385  00FB27                     _hKcy:
   386                           	opt stack 0
   387  00FB27  0000               	dw	0
   388  00FB29  0000               	dw	0
   389  00FB2B  D289               	dw	53897
   390  00FB2D  3ADE               	dw	15070
   391  00FB2F  4952               	dw	18770
   392  00FB31  3B9D               	dw	15261
   393  00FB33  8A72               	dw	35442
   394  00FB35  3C0E               	dw	15374
   395  00FB37  8BAC               	dw	35756
   396  00FB39  3C5B               	dw	15451
   397  00FB3B  30BE               	dw	12478
   398  00FB3D  3C99               	dw	15513
   399  00FB3F  B439               	dw	46137
   400  00FB41  3CC8               	dw	15560
   401  00FB43  5048               	dw	20552
   402  00FB45  3CFC               	dw	15612
   403  00FB47  999A               	dw	39322
   404  00FB49  3D19               	dw	15641
   405  00FB4B  AE7D               	dw	44669
   406  00FB4D  3D36               	dw	15670
   407  00FB4F  FDF4               	dw	65012
   408  00FB51  3D54               	dw	15700
   409  00FB53  F0D8               	dw	61656
   410  00FB55  3D74               	dw	15732
   411  00FB57  4396               	dw	17302
   412  00FB59  3D8B               	dw	15755
   413  00FB5B  779A               	dw	30618
   414  00FB5D  3D9C               	dw	15772
   415  00FB5F  48E9               	dw	18665
   416  00FB61  3DAE               	dw	15790
   417  00FB63  B780               	dw	46976
   418  00FB65  3DC0               	dw	15808
   419  00FB67  8EF3               	dw	36595
   420  00FB69  3DD3               	dw	15827
   421  00FB6B  CF42               	dw	53058
   422  00FB6D  3DE6               	dw	15846
   423  00FB6F  ACDA               	dw	44250
   424  00FB71  3DFA               	dw	15866
   425  00FB73  79A7               	dw	31143
   426  00FB75  3E07               	dw	15879
   427  00FB77  D14E               	dw	53582
   428  00FB79  3E11               	dw	15889
   429  00FB7B  5D64               	dw	23908
   430  00FB7D  3E1C               	dw	15900
   431  00FB7F  03B0               	dw	944
   432  00FB81  3E27               	dw	15911
   433  00FB83  F8A1               	dw	63649
   434  00FB85  3E31               	dw	15921
   435  00FB87  ED91               	dw	60817
   436  00FB89  3E3C               	dw	15932
   437  00FB8B  3127               	dw	12583
   438  00FB8D  3E48               	dw	15944
   439  00FB8F  8EF3               	dw	36595
   440  00FB91  3E53               	dw	15955
   441  00FB93  06F7               	dw	1783
   442  00FB95  3E5F               	dw	15967
   443  00FB97  B368               	dw	45928
   444  00FB99  3E6A               	dw	15978
   445  00FB9B  7A10               	dw	31248
   446  00FB9D  3E76               	dw	15990
   447  00FB9F  2D77               	dw	11639
   448  00FBA1  3E81               	dw	16001
   449  00FBA3  2B02               	dw	11010
   450  00FBA5  3E87               	dw	16007
   451  00FBA7  42C4               	dw	17092
   452  00FBA9  3E8D               	dw	16013
   453  00FBAB  5A86               	dw	23174
   454  00FBAD  3E93               	dw	16019
   455  00FBAF  7F63               	dw	32611
   456  00FBB1  3E99               	dw	16025
   457  00FBB3  B15B               	dw	45403
   458  00FBB5  3E9F               	dw	16031
   459  00FBB7  F06F               	dw	61551
   460  00FBB9  3EA5               	dw	16037
   461  00FBBB  3C9F               	dw	15519
   462  00FBBD  3EAC               	dw	16044
   463  00FBBF  88CE               	dw	35022
   464  00FBC1  3EB2               	dw	16050
   465  00FBC3  E219               	dw	57881
   466  00FBC5  3EB8               	dw	16056
   467  00FBC7  3B64               	dw	15204
   468  00FBC9  3EBF               	dw	16063
   469  00FBCB  A1CB               	dw	41419
   470  00FBCD  3EC5               	dw	16069
   471  00FBCF  154D               	dw	5453
   472  00FBD1  3ECC               	dw	16076
   473  00FBD3  88CE               	dw	35022
   474  00FBD5  3ED2               	dw	16082
   475  00FBD7  FC50               	dw	64592
   476  00FBD9  3ED8               	dw	16088
   477  00FBDB  6FD2               	dw	28626
   478  00FBDD  3EDF               	dw	16095
   479  00FBDF  F06F               	dw	61551
   480  00FBE1  3EE5               	dw	16101
   481  00FBE3  710D               	dw	28941
   482  00FBE5  3EEC               	dw	16108
   483  00FBE7  F1AA               	dw	61866
   484  00FBE9  3EF2               	dw	16114
   485  00FBEB  7F63               	dw	32611
   486  00FBED  3EF9               	dw	16121
   487  00FBEF  0000               	dw	0
   488  00FBF1  3F00               	dw	16128
   489  00FBF3  404F               	dw	16463
   490  00FBF5  3F03               	dw	16131
   491  00FBF7  872B               	dw	34603
   492  00FBF9  3F06               	dw	16134
   493  00FBFB  C77A               	dw	51066
   494  00FBFD  3F09               	dw	16137
   495  00FBFF  07C8               	dw	1992
   496  00FC01  3F0D               	dw	16141
   497  00FC03  4817               	dw	18455
   498  00FC05  3F10               	dw	16144
   499  00FC07  81D8               	dw	33240
   500  00FC09  3F13               	dw	16147
   501  00FC0B  BB99               	dw	48025
   502  00FC0D  3F16               	dw	16150
   503  00FC0F  F55A               	dw	62810
   504  00FC11  3F19               	dw	16153
   505  00FC13  2F1B               	dw	12059
   506  00FC15  3F1D               	dw	16157
   507  00FC17  624E               	dw	25166
   508  00FC19  3F20               	dw	16160
   509  00FC1B  8EF3               	dw	36595
   510  00FC1D  3F23               	dw	16163
   511  00FC1F  BB99               	dw	48025
   512  00FC21  3F26               	dw	16166
   513  00FC23  E1B1               	dw	57777
   514  00FC25  3F29               	dw	16169
   515  00FC27  07C8               	dw	1992
   516  00FC29  3F2D               	dw	16173
   517  00FC2B  2752               	dw	10066
   518  00FC2D  3F30               	dw	16176
   519  00FC2F  404F               	dw	16463
   520  00FC31  3F33               	dw	16179
   521  00FC33  52BD               	dw	21181
   522  00FC35  3F36               	dw	16182
   523  00FC37  5E9E               	dw	24222
   524  00FC39  3F39               	dw	16185
   525  00FC3B  6A7F               	dw	27263
   526  00FC3D  3F3C               	dw	16188
   527  00FC3F  6944               	dw	26948
   528  00FC41  3F3F               	dw	16191
   529  00FC43  617C               	dw	24956
   530  00FC45  3F42               	dw	16194
   531  00FC47  5326               	dw	21286
   532  00FC49  3F45               	dw	16197
   533  00FC4B  3E42               	dw	15938
   534  00FC4D  3F48               	dw	16200
   535  00FC4F  1C43               	dw	7235
   536  00FC51  3F4B               	dw	16203
   537  00FC53  F3B6               	dw	62390
   538  00FC55  3F4D               	dw	16205
   539  00FC57  C49C               	dw	50332
   540  00FC59  3F50               	dw	16208
   541  00FC5B  81D8               	dw	33240
   542  00FC5D  3F53               	dw	16211
   543  00FC5F  3F14               	dw	16148
   544  00FC61  3F56               	dw	16214
   545  00FC63  E8A7               	dw	59559
   546  00FC65  3F58               	dw	16216
   547  00FC67  8BAC               	dw	35756
   548  00FC69  3F5B               	dw	16219
   549  00FC6B  2196               	dw	8598
   550  00FC6D  3F5E               	dw	16222
   551  00FC6F  AA65               	dw	43621
   552  00FC71  3F60               	dw	16224
   553  00FC73  2618               	dw	9752
   554  00FC75  3F63               	dw	16227
   555  00FC77  8E22               	dw	36386
   556  00FC79  3F65               	dw	16229
   557  00FC7B  E910               	dw	59664
   558  00FC7D  3F67               	dw	16231
   559  00FC7F  36E3               	dw	14051
   560  00FC81  3F6A               	dw	16234
   561  00FC83  710D               	dw	28941
   562  00FC85  3F6C               	dw	16236
   563  00FC87  978D               	dw	38797
   564  00FC89  3F6E               	dw	16238
   565  00FC8B  B0F2               	dw	45298
   566  00FC8D  3F70               	dw	16240
   567  00FC8F  B021               	dw	45089
   568  00FC91  3F72               	dw	16242
   569  00FC93  9518               	dw	38168
   570  00FC95  3F74               	dw	16244
   571  00FC97  6666               	dw	26214
   572  00FC99  3F76               	dw	16246
   573  00FC9B  1D7E               	dw	7550
   574  00FC9D  3F78               	dw	16248
   575  00FC9F  BA5E               	dw	47710
   576  00FCA1  3F79               	dw	16249
   577  00FCA3  367A               	dw	13946
   578  00FCA5  3F7B               	dw	16251
   579  00FCA7  91D1               	dw	37329
   580  00FCA9  3F7C               	dw	16252
   581  00FCAB  C5D6               	dw	50646
   582  00FCAD  3F7D               	dw	16253
   583  00FCAF  C56D               	dw	50541
   584  00FCB1  3F7E               	dw	16254
   585  00FCB3  9097               	dw	37015
   586  00FCB5  3F7F               	dw	16255
   587  00FCB7  0000               	dw	0
   588  00FCB9  3F80               	dw	16256
   589  00FCBB                     __end_of_hKcy:
   590                           	opt stack 0
   591  00FCBB                     _auchCRCLo:
   592                           	opt stack 0
   593  00FCBB  00                 	db	0
   594  00FCBC  C0                 	db	192
   595  00FCBD  C1                 	db	193
   596  00FCBE  01                 	db	1
   597  00FCBF  C3                 	db	195
   598  00FCC0  03                 	db	3
   599  00FCC1  02                 	db	2
   600  00FCC2  C2                 	db	194
   601  00FCC3  C6                 	db	198
   602  00FCC4  06                 	db	6
   603  00FCC5  07                 	db	7
   604  00FCC6  C7                 	db	199
   605  00FCC7  05                 	db	5
   606  00FCC8  C5                 	db	197
   607  00FCC9  C4                 	db	196
   608  00FCCA  04                 	db	4
   609  00FCCB  CC                 	db	204
   610  00FCCC  0C                 	db	12
   611  00FCCD  0D                 	db	13
   612  00FCCE  CD                 	db	205
   613  00FCCF  0F                 	db	15
   614  00FCD0  CF                 	db	207
   615  00FCD1  CE                 	db	206
   616  00FCD2  0E                 	db	14
   617  00FCD3  0A                 	db	10
   618  00FCD4  CA                 	db	202
   619  00FCD5  CB                 	db	203
   620  00FCD6  0B                 	db	11
   621  00FCD7  C9                 	db	201
   622  00FCD8  09                 	db	9
   623  00FCD9  08                 	db	8
   624  00FCDA  C8                 	db	200
   625  00FCDB  D8                 	db	216
   626  00FCDC  18                 	db	24
   627  00FCDD  19                 	db	25
   628  00FCDE  D9                 	db	217
   629  00FCDF  1B                 	db	27
   630  00FCE0  DB                 	db	219
   631  00FCE1  DA                 	db	218
   632  00FCE2  1A                 	db	26
   633  00FCE3  1E                 	db	30
   634  00FCE4  DE                 	db	222
   635  00FCE5  DF                 	db	223
   636  00FCE6  1F                 	db	31
   637  00FCE7  DD                 	db	221
   638  00FCE8  1D                 	db	29
   639  00FCE9  1C                 	db	28
   640  00FCEA  DC                 	db	220
   641  00FCEB  14                 	db	20
   642  00FCEC  D4                 	db	212
   643  00FCED  D5                 	db	213
   644  00FCEE  15                 	db	21
   645  00FCEF  D7                 	db	215
   646  00FCF0  17                 	db	23
   647  00FCF1  16                 	db	22
   648  00FCF2  D6                 	db	214
   649  00FCF3  D2                 	db	210
   650  00FCF4  12                 	db	18
   651  00FCF5  13                 	db	19
   652  00FCF6  D3                 	db	211
   653  00FCF7  11                 	db	17
   654  00FCF8  D1                 	db	209
   655  00FCF9  D0                 	db	208
   656  00FCFA  10                 	db	16
   657  00FCFB  F0                 	db	240
   658  00FCFC  30                 	db	48
   659  00FCFD  31                 	db	49
   660  00FCFE  F1                 	db	241
   661  00FCFF  33                 	db	51
   662  00FD00  F3                 	db	243
   663  00FD01  F2                 	db	242
   664  00FD02  32                 	db	50
   665  00FD03  36                 	db	54
   666  00FD04  F6                 	db	246
   667  00FD05  F7                 	db	247
   668  00FD06  37                 	db	55
   669  00FD07  F5                 	db	245
   670  00FD08  35                 	db	53
   671  00FD09  34                 	db	52
   672  00FD0A  F4                 	db	244
   673  00FD0B  3C                 	db	60
   674  00FD0C  FC                 	db	252
   675  00FD0D  FD                 	db	253
   676  00FD0E  3D                 	db	61
   677  00FD0F  FF                 	db	255
   678  00FD10  3F                 	db	63
   679  00FD11  3E                 	db	62
   680  00FD12  FE                 	db	254
   681  00FD13  FA                 	db	250
   682  00FD14  3A                 	db	58
   683  00FD15  3B                 	db	59
   684  00FD16  FB                 	db	251
   685  00FD17  39                 	db	57
   686  00FD18  F9                 	db	249
   687  00FD19  F8                 	db	248
   688  00FD1A  38                 	db	56
   689  00FD1B  28                 	db	40
   690  00FD1C  E8                 	db	232
   691  00FD1D  E9                 	db	233
   692  00FD1E  29                 	db	41
   693  00FD1F  EB                 	db	235
   694  00FD20  2B                 	db	43
   695  00FD21  2A                 	db	42
   696  00FD22  EA                 	db	234
   697  00FD23  EE                 	db	238
   698  00FD24  2E                 	db	46
   699  00FD25  2F                 	db	47
   700  00FD26  EF                 	db	239
   701  00FD27  2D                 	db	45
   702  00FD28  ED                 	db	237
   703  00FD29  EC                 	db	236
   704  00FD2A  2C                 	db	44
   705  00FD2B  E4                 	db	228
   706  00FD2C  24                 	db	36
   707  00FD2D  25                 	db	37
   708  00FD2E  E5                 	db	229
   709  00FD2F  27                 	db	39
   710  00FD30  E7                 	db	231
   711  00FD31  E6                 	db	230
   712  00FD32  26                 	db	38
   713  00FD33  22                 	db	34
   714  00FD34  E2                 	db	226
   715  00FD35  E3                 	db	227
   716  00FD36  23                 	db	35
   717  00FD37  E1                 	db	225
   718  00FD38  21                 	db	33
   719  00FD39  20                 	db	32
   720  00FD3A  E0                 	db	224
   721  00FD3B  A0                 	db	160
   722  00FD3C  60                 	db	96
   723  00FD3D  61                 	db	97
   724  00FD3E  A1                 	db	161
   725  00FD3F  63                 	db	99
   726  00FD40  A3                 	db	163
   727  00FD41  A2                 	db	162
   728  00FD42  62                 	db	98
   729  00FD43  66                 	db	102
   730  00FD44  A6                 	db	166
   731  00FD45  A7                 	db	167
   732  00FD46  67                 	db	103
   733  00FD47  A5                 	db	165
   734  00FD48  65                 	db	101
   735  00FD49  64                 	db	100
   736  00FD4A  A4                 	db	164
   737  00FD4B  6C                 	db	108
   738  00FD4C  AC                 	db	172
   739  00FD4D  AD                 	db	173
   740  00FD4E  6D                 	db	109
   741  00FD4F  AF                 	db	175
   742  00FD50  6F                 	db	111
   743  00FD51  6E                 	db	110
   744  00FD52  AE                 	db	174
   745  00FD53  AA                 	db	170
   746  00FD54  6A                 	db	106
   747  00FD55  6B                 	db	107
   748  00FD56  AB                 	db	171
   749  00FD57  69                 	db	105
   750  00FD58  A9                 	db	169
   751  00FD59  A8                 	db	168
   752  00FD5A  68                 	db	104
   753  00FD5B  78                 	db	120
   754  00FD5C  B8                 	db	184
   755  00FD5D  B9                 	db	185
   756  00FD5E  79                 	db	121
   757  00FD5F  BB                 	db	187
   758  00FD60  7B                 	db	123
   759  00FD61  7A                 	db	122
   760  00FD62  BA                 	db	186
   761  00FD63  BE                 	db	190
   762  00FD64  7E                 	db	126
   763  00FD65  7F                 	db	127
   764  00FD66  BF                 	db	191
   765  00FD67  7D                 	db	125
   766  00FD68  BD                 	db	189
   767  00FD69  BC                 	db	188
   768  00FD6A  7C                 	db	124
   769  00FD6B  B4                 	db	180
   770  00FD6C  74                 	db	116
   771  00FD6D  75                 	db	117
   772  00FD6E  B5                 	db	181
   773  00FD6F  77                 	db	119
   774  00FD70  B7                 	db	183
   775  00FD71  B6                 	db	182
   776  00FD72  76                 	db	118
   777  00FD73  72                 	db	114
   778  00FD74  B2                 	db	178
   779  00FD75  B3                 	db	179
   780  00FD76  73                 	db	115
   781  00FD77  B1                 	db	177
   782  00FD78  71                 	db	113
   783  00FD79  70                 	db	112
   784  00FD7A  B0                 	db	176
   785  00FD7B  50                 	db	80
   786  00FD7C  90                 	db	144
   787  00FD7D  91                 	db	145
   788  00FD7E  51                 	db	81
   789  00FD7F  93                 	db	147
   790  00FD80  53                 	db	83
   791  00FD81  52                 	db	82
   792  00FD82  92                 	db	146
   793  00FD83  96                 	db	150
   794  00FD84  56                 	db	86
   795  00FD85  57                 	db	87
   796  00FD86  97                 	db	151
   797  00FD87  55                 	db	85
   798  00FD88  95                 	db	149
   799  00FD89  94                 	db	148
   800  00FD8A  54                 	db	84
   801  00FD8B  9C                 	db	156
   802  00FD8C  5C                 	db	92
   803  00FD8D  5D                 	db	93
   804  00FD8E  9D                 	db	157
   805  00FD8F  5F                 	db	95
   806  00FD90  9F                 	db	159
   807  00FD91  9E                 	db	158
   808  00FD92  5E                 	db	94
   809  00FD93  5A                 	db	90
   810  00FD94  9A                 	db	154
   811  00FD95  9B                 	db	155
   812  00FD96  5B                 	db	91
   813  00FD97  99                 	db	153
   814  00FD98  59                 	db	89
   815  00FD99  58                 	db	88
   816  00FD9A  98                 	db	152
   817  00FD9B  88                 	db	136
   818  00FD9C  48                 	db	72
   819  00FD9D  49                 	db	73
   820  00FD9E  89                 	db	137
   821  00FD9F  4B                 	db	75
   822  00FDA0  8B                 	db	139
   823  00FDA1  8A                 	db	138
   824  00FDA2  4A                 	db	74
   825  00FDA3  4E                 	db	78
   826  00FDA4  8E                 	db	142
   827  00FDA5  8F                 	db	143
   828  00FDA6  4F                 	db	79
   829  00FDA7  8D                 	db	141
   830  00FDA8  4D                 	db	77
   831  00FDA9  4C                 	db	76
   832  00FDAA  8C                 	db	140
   833  00FDAB  44                 	db	68
   834  00FDAC  84                 	db	132
   835  00FDAD  85                 	db	133
   836  00FDAE  45                 	db	69
   837  00FDAF  87                 	db	135
   838  00FDB0  47                 	db	71
   839  00FDB1  46                 	db	70
   840  00FDB2  86                 	db	134
   841  00FDB3  82                 	db	130
   842  00FDB4  42                 	db	66
   843  00FDB5  43                 	db	67
   844  00FDB6  83                 	db	131
   845  00FDB7  41                 	db	65
   846  00FDB8  81                 	db	129
   847  00FDB9  80                 	db	128
   848  00FDBA  40                 	db	64
   849  00FDBB                     __end_of_auchCRCLo:
   850                           	opt stack 0
   851  00FDBB                     _auchCRCHi:
   852                           	opt stack 0
   853  00FDBB  00                 	db	0
   854  00FDBC  C1                 	db	193
   855  00FDBD  81                 	db	129
   856  00FDBE  40                 	db	64
   857  00FDBF  01                 	db	1
   858  00FDC0  C0                 	db	192
   859  00FDC1  80                 	db	128
   860  00FDC2  41                 	db	65
   861  00FDC3  01                 	db	1
   862  00FDC4  C0                 	db	192
   863  00FDC5  80                 	db	128
   864  00FDC6  41                 	db	65
   865  00FDC7  00                 	db	0
   866  00FDC8  C1                 	db	193
   867  00FDC9  81                 	db	129
   868  00FDCA  40                 	db	64
   869  00FDCB  01                 	db	1
   870  00FDCC  C0                 	db	192
   871  00FDCD  80                 	db	128
   872  00FDCE  41                 	db	65
   873  00FDCF  00                 	db	0
   874  00FDD0  C1                 	db	193
   875  00FDD1  81                 	db	129
   876  00FDD2  40                 	db	64
   877  00FDD3  00                 	db	0
   878  00FDD4  C1                 	db	193
   879  00FDD5  81                 	db	129
   880  00FDD6  40                 	db	64
   881  00FDD7  01                 	db	1
   882  00FDD8  C0                 	db	192
   883  00FDD9  80                 	db	128
   884  00FDDA  41                 	db	65
   885  00FDDB  01                 	db	1
   886  00FDDC  C0                 	db	192
   887  00FDDD  80                 	db	128
   888  00FDDE  41                 	db	65
   889  00FDDF  00                 	db	0
   890  00FDE0  C1                 	db	193
   891  00FDE1  81                 	db	129
   892  00FDE2  40                 	db	64
   893  00FDE3  00                 	db	0
   894  00FDE4  C1                 	db	193
   895  00FDE5  81                 	db	129
   896  00FDE6  40                 	db	64
   897  00FDE7  01                 	db	1
   898  00FDE8  C0                 	db	192
   899  00FDE9  80                 	db	128
   900  00FDEA  41                 	db	65
   901  00FDEB  00                 	db	0
   902  00FDEC  C1                 	db	193
   903  00FDED  81                 	db	129
   904  00FDEE  40                 	db	64
   905  00FDEF  01                 	db	1
   906  00FDF0  C0                 	db	192
   907  00FDF1  80                 	db	128
   908  00FDF2  41                 	db	65
   909  00FDF3  01                 	db	1
   910  00FDF4  C0                 	db	192
   911  00FDF5  80                 	db	128
   912  00FDF6  41                 	db	65
   913  00FDF7  00                 	db	0
   914  00FDF8  C1                 	db	193
   915  00FDF9  81                 	db	129
   916  00FDFA  40                 	db	64
   917  00FDFB  01                 	db	1
   918  00FDFC  C0                 	db	192
   919  00FDFD  80                 	db	128
   920  00FDFE  41                 	db	65
   921  00FDFF  00                 	db	0
   922  00FE00  C1                 	db	193
   923  00FE01  81                 	db	129
   924  00FE02  40                 	db	64
   925  00FE03  00                 	db	0
   926  00FE04  C1                 	db	193
   927  00FE05  81                 	db	129
   928  00FE06  40                 	db	64
   929  00FE07  01                 	db	1
   930  00FE08  C0                 	db	192
   931  00FE09  80                 	db	128
   932  00FE0A  41                 	db	65
   933  00FE0B  00                 	db	0
   934  00FE0C  C1                 	db	193
   935  00FE0D  81                 	db	129
   936  00FE0E  40                 	db	64
   937  00FE0F  01                 	db	1
   938  00FE10  C0                 	db	192
   939  00FE11  80                 	db	128
   940  00FE12  41                 	db	65
   941  00FE13  01                 	db	1
   942  00FE14  C0                 	db	192
   943  00FE15  80                 	db	128
   944  00FE16  41                 	db	65
   945  00FE17  00                 	db	0
   946  00FE18  C1                 	db	193
   947  00FE19  81                 	db	129
   948  00FE1A  40                 	db	64
   949  00FE1B  00                 	db	0
   950  00FE1C  C1                 	db	193
   951  00FE1D  81                 	db	129
   952  00FE1E  40                 	db	64
   953  00FE1F  01                 	db	1
   954  00FE20  C0                 	db	192
   955  00FE21  80                 	db	128
   956  00FE22  41                 	db	65
   957  00FE23  01                 	db	1
   958  00FE24  C0                 	db	192
   959  00FE25  80                 	db	128
   960  00FE26  41                 	db	65
   961  00FE27  00                 	db	0
   962  00FE28  C1                 	db	193
   963  00FE29  81                 	db	129
   964  00FE2A  40                 	db	64
   965  00FE2B  01                 	db	1
   966  00FE2C  C0                 	db	192
   967  00FE2D  80                 	db	128
   968  00FE2E  41                 	db	65
   969  00FE2F  00                 	db	0
   970  00FE30  C1                 	db	193
   971  00FE31  81                 	db	129
   972  00FE32  40                 	db	64
   973  00FE33  00                 	db	0
   974  00FE34  C1                 	db	193
   975  00FE35  81                 	db	129
   976  00FE36  40                 	db	64
   977  00FE37  01                 	db	1
   978  00FE38  C0                 	db	192
   979  00FE39  80                 	db	128
   980  00FE3A  41                 	db	65
   981  00FE3B  01                 	db	1
   982  00FE3C  C0                 	db	192
   983  00FE3D  80                 	db	128
   984  00FE3E  41                 	db	65
   985  00FE3F  00                 	db	0
   986  00FE40  C1                 	db	193
   987  00FE41  81                 	db	129
   988  00FE42  40                 	db	64
   989  00FE43  00                 	db	0
   990  00FE44  C1                 	db	193
   991  00FE45  81                 	db	129
   992  00FE46  40                 	db	64
   993  00FE47  01                 	db	1
   994  00FE48  C0                 	db	192
   995  00FE49  80                 	db	128
   996  00FE4A  41                 	db	65
   997  00FE4B  00                 	db	0
   998  00FE4C  C1                 	db	193
   999  00FE4D  81                 	db	129
  1000  00FE4E  40                 	db	64
  1001  00FE4F  01                 	db	1
  1002  00FE50  C0                 	db	192
  1003  00FE51  80                 	db	128
  1004  00FE52  41                 	db	65
  1005  00FE53  01                 	db	1
  1006  00FE54  C0                 	db	192
  1007  00FE55  80                 	db	128
  1008  00FE56  41                 	db	65
  1009  00FE57  00                 	db	0
  1010  00FE58  C1                 	db	193
  1011  00FE59  81                 	db	129
  1012  00FE5A  40                 	db	64
  1013  00FE5B  00                 	db	0
  1014  00FE5C  C1                 	db	193
  1015  00FE5D  81                 	db	129
  1016  00FE5E  40                 	db	64
  1017  00FE5F  01                 	db	1
  1018  00FE60  C0                 	db	192
  1019  00FE61  80                 	db	128
  1020  00FE62  41                 	db	65
  1021  00FE63  01                 	db	1
  1022  00FE64  C0                 	db	192
  1023  00FE65  80                 	db	128
  1024  00FE66  41                 	db	65
  1025  00FE67  00                 	db	0
  1026  00FE68  C1                 	db	193
  1027  00FE69  81                 	db	129
  1028  00FE6A  40                 	db	64
  1029  00FE6B  01                 	db	1
  1030  00FE6C  C0                 	db	192
  1031  00FE6D  80                 	db	128
  1032  00FE6E  41                 	db	65
  1033  00FE6F  00                 	db	0
  1034  00FE70  C1                 	db	193
  1035  00FE71  81                 	db	129
  1036  00FE72  40                 	db	64
  1037  00FE73  00                 	db	0
  1038  00FE74  C1                 	db	193
  1039  00FE75  81                 	db	129
  1040  00FE76  40                 	db	64
  1041  00FE77  01                 	db	1
  1042  00FE78  C0                 	db	192
  1043  00FE79  80                 	db	128
  1044  00FE7A  41                 	db	65
  1045  00FE7B  00                 	db	0
  1046  00FE7C  C1                 	db	193
  1047  00FE7D  81                 	db	129
  1048  00FE7E  40                 	db	64
  1049  00FE7F  01                 	db	1
  1050  00FE80  C0                 	db	192
  1051  00FE81  80                 	db	128
  1052  00FE82  41                 	db	65
  1053  00FE83  01                 	db	1
  1054  00FE84  C0                 	db	192
  1055  00FE85  80                 	db	128
  1056  00FE86  41                 	db	65
  1057  00FE87  00                 	db	0
  1058  00FE88  C1                 	db	193
  1059  00FE89  81                 	db	129
  1060  00FE8A  40                 	db	64
  1061  00FE8B  01                 	db	1
  1062  00FE8C  C0                 	db	192
  1063  00FE8D  80                 	db	128
  1064  00FE8E  41                 	db	65
  1065  00FE8F  00                 	db	0
  1066  00FE90  C1                 	db	193
  1067  00FE91  81                 	db	129
  1068  00FE92  40                 	db	64
  1069  00FE93  00                 	db	0
  1070  00FE94  C1                 	db	193
  1071  00FE95  81                 	db	129
  1072  00FE96  40                 	db	64
  1073  00FE97  01                 	db	1
  1074  00FE98  C0                 	db	192
  1075  00FE99  80                 	db	128
  1076  00FE9A  41                 	db	65
  1077  00FE9B  01                 	db	1
  1078  00FE9C  C0                 	db	192
  1079  00FE9D  80                 	db	128
  1080  00FE9E  41                 	db	65
  1081  00FE9F  00                 	db	0
  1082  00FEA0  C1                 	db	193
  1083  00FEA1  81                 	db	129
  1084  00FEA2  40                 	db	64
  1085  00FEA3  00                 	db	0
  1086  00FEA4  C1                 	db	193
  1087  00FEA5  81                 	db	129
  1088  00FEA6  40                 	db	64
  1089  00FEA7  01                 	db	1
  1090  00FEA8  C0                 	db	192
  1091  00FEA9  80                 	db	128
  1092  00FEAA  41                 	db	65
  1093  00FEAB  00                 	db	0
  1094  00FEAC  C1                 	db	193
  1095  00FEAD  81                 	db	129
  1096  00FEAE  40                 	db	64
  1097  00FEAF  01                 	db	1
  1098  00FEB0  C0                 	db	192
  1099  00FEB1  80                 	db	128
  1100  00FEB2  41                 	db	65
  1101  00FEB3  01                 	db	1
  1102  00FEB4  C0                 	db	192
  1103  00FEB5  80                 	db	128
  1104  00FEB6  41                 	db	65
  1105  00FEB7  00                 	db	0
  1106  00FEB8  C1                 	db	193
  1107  00FEB9  81                 	db	129
  1108  00FEBA  40                 	db	64
  1109  00FEBB                     __end_of_auchCRCHi:
  1110                           	opt stack 0
  1111  00FEBB                     _LCDDigitalIndexTable:
  1112                           	opt stack 0
  1113  00FEBB  30                 	db	48
  1114  00FEBC  31                 	db	49
  1115  00FEBD  32                 	db	50
  1116  00FEBE  33                 	db	51
  1117  00FEBF  34                 	db	52
  1118  00FEC0  35                 	db	53
  1119  00FEC1  36                 	db	54
  1120  00FEC2  37                 	db	55
  1121  00FEC3  38                 	db	56
  1122  00FEC4  39                 	db	57
  1123  00FEC5  61                 	db	97
  1124  00FEC6  62                 	db	98
  1125  00FEC7  63                 	db	99
  1126  00FEC8  64                 	db	100
  1127  00FEC9  65                 	db	101
  1128  00FECA  66                 	db	102
  1129  00FECB  67                 	db	103
  1130  00FECC  68                 	db	104
  1131  00FECD  69                 	db	105
  1132  00FECE  6A                 	db	106
  1133  00FECF  6B                 	db	107
  1134  00FED0  6C                 	db	108
  1135  00FED1  6D                 	db	109
  1136  00FED2  6E                 	db	110
  1137  00FED3  6F                 	db	111
  1138  00FED4  70                 	db	112
  1139  00FED5  71                 	db	113
  1140  00FED6  72                 	db	114
  1141  00FED7  73                 	db	115
  1142  00FED8  74                 	db	116
  1143  00FED9  75                 	db	117
  1144  00FEDA  76                 	db	118
  1145  00FEDB  77                 	db	119
  1146  00FEDC  78                 	db	120
  1147  00FEDD  79                 	db	121
  1148  00FEDE  7A                 	db	122
  1149  00FEDF  2E                 	db	46
  1150  00FEE0  2D                 	db	45
  1151  00FEE1  3A                 	db	58
  1152  00FEE2  20                 	db	32
  1153  00FEE3  00                 	db	0
  1154  00FEE4                     __end_of_LCDDigitalIndexTable:
  1155                           	opt stack 0
  1156  00FEE4                     _LCDDigitalTable:
  1157                           	opt stack 0
  1158  00FEE4  3F                 	db	63
  1159  00FEE5  06                 	db	6
  1160  00FEE6  5B                 	db	91
  1161  00FEE7  4F                 	db	79
  1162  00FEE8  66                 	db	102
  1163  00FEE9  6D                 	db	109
  1164  00FEEA  7D                 	db	125
  1165  00FEEB  07                 	db	7
  1166  00FEEC  7F                 	db	127
  1167  00FEED  6F                 	db	111
  1168  00FEEE  77                 	db	119
  1169  00FEEF  7C                 	db	124
  1170  00FEF0  39                 	db	57
  1171  00FEF1  5E                 	db	94
  1172  00FEF2  79                 	db	121
  1173  00FEF3  71                 	db	113
  1174  00FEF4  6F                 	db	111
  1175  00FEF5  76                 	db	118
  1176  00FEF6  06                 	db	6
  1177  00FEF7  0E                 	db	14
  1178  00FEF8  7A                 	db	122
  1179  00FEF9  38                 	db	56
  1180  00FEFA  00                 	db	0
  1181  00FEFB  37                 	db	55
  1182  00FEFC  5C                 	db	92
  1183  00FEFD  73                 	db	115
  1184  00FEFE  67                 	db	103
  1185  00FEFF  50                 	db	80
  1186  00FF00  6D                 	db	109
  1187  00FF01  78                 	db	120
  1188  00FF02  3E                 	db	62
  1189  00FF03  00                 	db	0
  1190  00FF04  00                 	db	0
  1191  00FF05  00                 	db	0
  1192  00FF06  6E                 	db	110
  1193  00FF07  5B                 	db	91
  1194  00FF08  40                 	db	64
  1195  00FF09  40                 	db	64
  1196  00FF0A  48                 	db	72
  1197  00FF0B  00                 	db	0
  1198  00FF0C                     __end_of_LCDDigitalTable:
  1199                           	opt stack 0
  1200  00FF0C                     _HexTable:
  1201                           	opt stack 0
  1202  00FF0C  30                 	db	48
  1203  00FF0D  31                 	db	49
  1204  00FF0E  32                 	db	50
  1205  00FF0F  33                 	db	51
  1206  00FF10  34                 	db	52
  1207  00FF11  35                 	db	53
  1208  00FF12  36                 	db	54
  1209  00FF13  37                 	db	55
  1210  00FF14  38                 	db	56
  1211  00FF15  39                 	db	57
  1212  00FF16  61                 	db	97
  1213  00FF17  62                 	db	98
  1214  00FF18  63                 	db	99
  1215  00FF19  64                 	db	100
  1216  00FF1A  65                 	db	101
  1217  00FF1B  66                 	db	102
  1218  00FF1C  00                 	db	0
  1219  00FF1D                     __end_of_HexTable:
  1220                           	opt stack 0
  1221  00FF1D                     _defultSystemData:
  1222                           	opt stack 0
  1223  00FF1D  0000               	dw	0
  1224  00FF1F  0000               	dw	0
  1225  00FF21  00                 	db	0
  1226  00FF22  5F                 	db	95
  1227  00FF23  03E8               	dw	1000
  1228  00FF25  2710               	dw	10000
  1229  00FF27  0000               	dw	0
  1230  00FF29  1388               	dw	5000
  1231  00FF2B  0000               	dw	0
  1232  00FF2D  FF38               	dw	65336
  1233  00FF2F  FFFF               	dw	65535
  1234  00FF31  0000               	dw	0
  1235  00FF33  0000               	dw	0
  1236  00FF35  00                 	db	0
  1237  00FF36  00                 	db	0
  1238  00FF37  00                 	db	0
  1239  00FF38  00                 	db	0
  1240  00FF39  00                 	db	0
  1241  00FF3A  00                 	db	0
  1242  00FF3B  00                 	db	0
  1243  00FF3C  00                 	db	0
  1244  00FF3D  00                 	db	0
  1245  00FF3E  00                 	db	0
  1246  00FF3F  00                 	db	0
  1247  00FF40  00                 	db	0
  1248  00FF41  00                 	db	0
  1249  00FF42  00                 	db	0
  1250  00FF43  00                 	db	0
  1251  00FF44  00                 	db	0
  1252  00FF45  00                 	db	0
  1253  00FF46  00                 	db	0
  1254  00FF47  00                 	db	0
  1255  00FF48  00                 	db	0
  1256  00FF49  00                 	db	0
  1257  00FF4A  00                 	db	0
  1258  00FF4B  00                 	db	0
  1259  00FF4C  00                 	db	0
  1260  00FF4D  00                 	db	0
  1261  00FF4E  00                 	db	0
  1262  00FF4F  00                 	db	0
  1263  00FF50  00                 	db	0
  1264  00FF51  00                 	db	0
  1265  00FF52  00                 	db	0
  1266  00FF53  00                 	db	0
  1267  00FF54  00                 	db	0
  1268  00FF55  00                 	db	0
  1269  00FF56  00                 	db	0
  1270  00FF57  00                 	db	0
  1271  00FF58  00                 	db	0
  1272  00FF59  00                 	db	0
  1273  00FF5A  00                 	db	0
  1274  00FF5B  00                 	db	0
  1275  00FF5C  00                 	db	0
  1276  00FF5D  00                 	db	0
  1277  00FF5E  00                 	db	0
  1278  00FF5F  00                 	db	0
  1279  00FF60  00                 	db	0
  1280  00FF61  0000               	dw	0
  1281  00FF63  0000               	dw	0
  1282  00FF65  00                 	db	0
  1283  00FF66  00                 	db	0
  1284  00FF67  00                 	db	0
  1285  00FF68  00                 	db	0
  1286  00FF69  00                 	db	0
  1287  00FF6A  00                 	db	0
  1288  00FF6B  00                 	db	0
  1289  00FF6C  00                 	db	0
  1290  00FF6D  28                 	db	40
  1291  00FF6E  1E                 	db	30
  1292  00FF6F  14                 	db	20
  1293  00FF70  0A                 	db	10
  1294  00FF71  0000               	dw	0
  1295  00FF73  0000               	dw	0
  1296  00FF75  00                 	db	0
  1297  00FF76  00                 	db	0
  1298  00FF77  00                 	db	0
  1299  00FF78  00                 	db	0
  1300  00FF79  03E8               	dw	1000
  1301  00FF7B  0000               	dw	0
  1302  00FF7D  03E8               	dw	1000
  1303  00FF7F  0000               	dw	0
  1304  00FF81  0000               	dw	0
  1305  00FF83  0000               	dw	0
  1306  00FF85  00                 	db	0
  1307  00FF86  00                 	db	0
  1308  00FF87  00                 	db	0
  1309  00FF88  00                 	db	0
  1310  00FF89  03E8               	dw	1000
  1311  00FF8B  0000               	dw	0
  1312  00FF8D  03E8               	dw	1000
  1313  00FF8F  0000               	dw	0
  1314  00FF91  0000               	dw	0
  1315  00FF93  0000               	dw	0
  1316  00FF95  03E8               	dw	1000
  1317  00FF97  0000               	dw	0
  1318  00FF99  0000               	dw	0
  1319  00FF9B  0000               	dw	0
  1320  00FF9D  03E8               	dw	1000
  1321  00FF9F  0000               	dw	0
  1322  00FFA1  0000               	dw	0
  1323  00FFA3                     __end_of_defultSystemData:
  1324                           	opt stack 0
  1325  00FFA3                     _flashTestbuf:
  1326                           	opt stack 0
  1327  00FFA3  30                 	db	48
  1328  00FFA4  31                 	db	49
  1329  00FFA5  32                 	db	50
  1330  00FFA6  33                 	db	51
  1331  00FFA7  34                 	db	52
  1332  00FFA8  35                 	db	53
  1333  00FFA9  36                 	db	54
  1334  00FFAA  37                 	db	55
  1335  00FFAB  38                 	db	56
  1336  00FFAC  39                 	db	57
  1337  00FFAD  30                 	db	48
  1338  00FFAE  31                 	db	49
  1339  00FFAF  32                 	db	50
  1340  00FFB0  33                 	db	51
  1341  00FFB1  34                 	db	52
  1342  00FFB2  35                 	db	53
  1343  00FFB3  36                 	db	54
  1344  00FFB4  37                 	db	55
  1345  00FFB5  38                 	db	56
  1346  00FFB6  39                 	db	57
  1347  00FFB7  30                 	db	48
  1348  00FFB8  31                 	db	49
  1349  00FFB9  32                 	db	50
  1350  00FFBA  33                 	db	51
  1351  00FFBB  34                 	db	52
  1352  00FFBC  35                 	db	53
  1353  00FFBD  36                 	db	54
  1354  00FFBE  37                 	db	55
  1355  00FFBF  38                 	db	56
  1356  00FFC0  39                 	db	57
  1357  00FFC1  30                 	db	48
  1358  00FFC2  31                 	db	49
  1359  00FFC3  32                 	db	50
  1360  00FFC4  33                 	db	51
  1361  00FFC5  34                 	db	52
  1362  00FFC6  35                 	db	53
  1363  00FFC7  36                 	db	54
  1364  00FFC8  37                 	db	55
  1365  00FFC9  38                 	db	56
  1366  00FFCA  39                 	db	57
  1367  00FFCB  30                 	db	48
  1368  00FFCC  31                 	db	49
  1369  00FFCD  32                 	db	50
  1370  00FFCE  33                 	db	51
  1371  00FFCF  34                 	db	52
  1372  00FFD0  35                 	db	53
  1373  00FFD1  36                 	db	54
  1374  00FFD2  37                 	db	55
  1375  00FFD3  38                 	db	56
  1376  00FFD4  39                 	db	57
  1377  00FFD5  30                 	db	48
  1378  00FFD6  31                 	db	49
  1379  00FFD7  32                 	db	50
  1380  00FFD8  33                 	db	51
  1381  00FFD9  34                 	db	52
  1382  00FFDA  35                 	db	53
  1383  00FFDB  36                 	db	54
  1384  00FFDC  37                 	db	55
  1385  00FFDD  38                 	db	56
  1386  00FFDE  39                 	db	57
  1387  00FFDF  30                 	db	48
  1388  00FFE0  31                 	db	49
  1389  00FFE1  32                 	db	50
  1390  00FFE2  33                 	db	51
  1391  00FFE3  00                 	db	0
  1392  00FFE4                     __end_of_flashTestbuf:
  1393                           	opt stack 0
  1394  0000                     _RTCVALH	set	3933
  1395  0000                     _RTCVALL	set	3932
  1396  0000                     _stRTCCFGbits	set	3935
  1397  0000                     _ALRMCFGbits	set	3931
  1398  0000                     _ALRMRPT	set	3930
  1399  0000                     _PADCFG1bits	set	3924
  1400  0000                     _RTCCFGbits	set	3935
  1401  0000                     _PR2	set	4043
  1402  0000                     _T2CON	set	4042
  1403  0000                     _RCONbits	set	4048
  1404  0000                     _T1CONbits	set	4045
  1405  0000                     _IPR3bits	set	4005
  1406  0000                     _PIR3bits	set	4004
  1407  0000                     _PIE3bits	set	4003
  1408  0000                     _INTCON2bits	set	4081
  1409  0000                     _OSCCONbits	set	4051
  1410  0000                     _FSR0H	set	4074
  1411  0000                     _FSR0L	set	4073
  1412  0000                     _TABLAT	set	4085
  1413  0000                     _TBLPTRU	set	4088
  1414  0000                     _TBLPTRH	set	4087
  1415  0000                     _TBLPTRL	set	4086
  1416  0000                     _EECON1bits	set	4006
  1417  0000                     _INTCONbits	set	4082
  1418  0000                     _INTCON	set	4082
  1419  0000                     _LCDCON	set	4008
  1420  0000                     _TRISG	set	3992
  1421  0000                     _LCDSE5	set	4026
  1422  0000                     _LCDSE4	set	4025
  1423  0000                     _LCDSE3	set	4024
  1424  0000                     _LCDSE2	set	4023
  1425  0000                     _LCDSE1	set	4022
  1426  0000                     _LCDSE0	set	4009
  1427  0000                     _LCDPSbits	set	4010
  1428  0000                     _LCDREG	set	4050
  1429  0000                     _LCDDATA23	set	3965
  1430  0000                     _LCDDATA22	set	3964
  1431  0000                     _LCDDATA21	set	3963
  1432  0000                     _LCDDATA20	set	3962
  1433  0000                     _LCDDATA19	set	3961
  1434  0000                     _LCDDATA18	set	3960
  1435  0000                     _LCDDATA17	set	3959
  1436  0000                     _LCDDATA16	set	3958
  1437  0000                     _LCDDATA15	set	3957
  1438  0000                     _LCDDATA14	set	3956
  1439  0000                     _LCDDATA13	set	3955
  1440  0000                     _LCDDATA12	set	3954
  1441  0000                     _LCDDATA11	set	3953
  1442  0000                     _LCDDATA10	set	3952
  1443  0000                     _LCDDATA9	set	3951
  1444  0000                     _LCDDATA8	set	3950
  1445  0000                     _LCDDATA7	set	3949
  1446  0000                     _LCDDATA6	set	3948
  1447  0000                     _LCDDATA5	set	3947
  1448  0000                     _LCDDATA4	set	4031
  1449  0000                     _LCDDATA3	set	4030
  1450  0000                     _LCDDATA2	set	4029
  1451  0000                     _LCDDATA1	set	4028
  1452  0000                     _LCDDATA0	set	4027
  1453  0000                     _PORTB	set	3969
  1454  0000                     _ADRESL	set	4035
  1455  0000                     _ADRESH	set	4036
  1456  0000                     _IPR1bits	set	3999
  1457  0000                     _PIE1bits	set	3997
  1458  0000                     _PIR1bits	set	3998
  1459  0000                     _ADCON0bits	set	4034
  1460  0000                     _ADCON2bits	set	4032
  1461  0000                     _ADCON1	set	4033
  1462  0000                     _PORTC	set	3970
  1463  0000                     _LATC	set	3979
  1464  0000                     _TRISC	set	3988
  1465  0000                     _LATB	set	3978
  1466  0000                     _TRISB	set	3987
  1467  00FFE4                     STR_2:
  1468  00FFE4  20                 	db	32
  1469  00FFE5  20                 	db	32
  1470  00FFE6  20                 	db	32
  1471  00FFE7  20                 	db	32
  1472  00FFE8  20                 	db	32
  1473  00FFE9  20                 	db	32
  1474  00FFEA  20                 	db	32
  1475  00FFEB  20                 	db	32
  1476  00FFEC  00                 	db	0
  1477  00FFED                     STR_1:
  1478  00FFED  63                 	db	99	;'c'
  1479  00FFEE  73                 	db	115	;'s'
  1480  00FFEF  36                 	db	54	;'6'
  1481  00FFF0  36                 	db	54	;'6'
  1482  00FFF1  00                 	db	0
  1483  00FFF2                     STR_3:
  1484  00FFF2  20                 	db	32
  1485  00FFF3  70                 	db	112	;'p'
  1486  00FFF4  73                 	db	115	;'s'
  1487  00FFF5  64                 	db	100	;'d'
  1488  00FFF6  00                 	db	0
  1489                           
  1490                           ; #config settings
  1491  00FFF7  00                 	db	0	; dummy byte at the end
  1492  0000                     
  1493                           	psect	cinit
  1494  00196E                     __pcinit:
  1495                           	opt stack 0
  1496  00196E                     start_initialization:
  1497                           	opt stack 0
  1498  00196E                     __initialization:
  1499                           	opt stack 0
  1500                           
  1501                           ; Initialize objects allocated to BANK0 (16 bytes)
  1502                           ; load TBLPTR registers with __pidataBANK0
  1503  00196E  0EB4               	movlw	low __pidataBANK0
  1504  001970  6EF6               	movwf	tblptrl,c
  1505  001972  0E27               	movlw	high __pidataBANK0
  1506  001974  6EF7               	movwf	tblptrh,c
  1507  001976  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1508  001978  6EF8               	movwf	tblptru,c
  1509  00197A  EE00  F0F0         	lfsr	0,__pdataBANK0
  1510  00197E  EE10 F010          	lfsr	1,16
  1511  001982                     copy_data0:
  1512  001982  0009               	tblrd		*+
  1513  001984  CFF5 FFEE          	movff	tablat,postinc0
  1514  001988  50E5               	movf	postdec1,w,c
  1515  00198A  50E1               	movf	fsr1l,w,c
  1516  00198C  E1FA               	bnz	copy_data0
  1517                           
  1518                           ; Clear objects allocated to BANK4 (256 bytes)
  1519  00198E  EE04  F000         	lfsr	0,__pbssBANK4
  1520  001992  EE11 F000          	lfsr	1,256
  1521  001996                     clear_0:
  1522  001996  6AEE               	clrf	postinc0,c
  1523  001998  50E5               	movf	postdec1,w,c
  1524  00199A  50E1               	movf	fsr1l,w,c
  1525  00199C  E1FC               	bnz	clear_0
  1526  00199E  50E2               	movf	fsr1h,w,c
  1527  0019A0  E1FA               	bnz	clear_0
  1528                           
  1529                           ; Clear objects allocated to BANK3 (256 bytes)
  1530  0019A2  EE03  F000         	lfsr	0,__pbssBANK3
  1531  0019A6  EE11 F000          	lfsr	1,256
  1532  0019AA                     clear_1:
  1533  0019AA  6AEE               	clrf	postinc0,c
  1534  0019AC  50E5               	movf	postdec1,w,c
  1535  0019AE  50E1               	movf	fsr1l,w,c
  1536  0019B0  E1FC               	bnz	clear_1
  1537  0019B2  50E2               	movf	fsr1h,w,c
  1538  0019B4  E1FA               	bnz	clear_1
  1539                           
  1540                           ; Clear objects allocated to BANK2 (162 bytes)
  1541  0019B6  EE02  F000         	lfsr	0,__pbssBANK2
  1542  0019BA  0EA2               	movlw	162
  1543  0019BC                     clear_2:
  1544  0019BC  6AEE               	clrf	postinc0,c
  1545  0019BE  06E8               	decf	wreg,f,c
  1546  0019C0  E1FD               	bnz	clear_2
  1547                           
  1548                           ; Clear objects allocated to BANK1 (237 bytes)
  1549  0019C2  EE01  F000         	lfsr	0,__pbssBANK1
  1550  0019C6  0EED               	movlw	237
  1551  0019C8                     clear_3:
  1552  0019C8  6AEE               	clrf	postinc0,c
  1553  0019CA  06E8               	decf	wreg,f,c
  1554  0019CC  E1FD               	bnz	clear_3
  1555                           
  1556                           ; Clear objects allocated to BANK0 (121 bytes)
  1557  0019CE  EE00  F060         	lfsr	0,__pbssBANK0
  1558  0019D2  0E79               	movlw	121
  1559  0019D4                     clear_4:
  1560  0019D4  6AEE               	clrf	postinc0,c
  1561  0019D6  06E8               	decf	wreg,f,c
  1562  0019D8  E1FD               	bnz	clear_4
  1563                           
  1564                           ; Clear objects allocated to COMRAM (31 bytes)
  1565  0019DA  EE00  F021         	lfsr	0,__pbssCOMRAM
  1566  0019DE  0E1F               	movlw	31
  1567  0019E0                     clear_5:
  1568  0019E0  6AEE               	clrf	postinc0,c
  1569  0019E2  06E8               	decf	wreg,f,c
  1570  0019E4  E1FD               	bnz	clear_5
  1571  0019E6                     end_of_initialization:
  1572                           	opt stack 0
  1573  0019E6                     __end_of__initialization:
  1574                           	opt stack 0
  1575  0019E6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1576  0019E8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1577  0019EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1578  0019EC  6EF8               	movwf	tblptru,c
  1579  0019EE  0100               	movlb	0
  1580  0019F0  EF44  F006         	goto	_main	;jump to C main() function
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1h	equ	0xFE2
  1589                           fsr1l	equ	0xFE1
  1590                           
  1591                           	psect	bssCOMRAM
  1592  000021                     __pbssCOMRAM:
  1593                           	opt stack 0
  1594  000021                     _adjValue:
  1595                           	opt stack 0
  1596  000021                     	ds	4
  1597  000025                     _dlyTicker:
  1598                           	opt stack 0
  1599  000025                     	ds	2
  1600  000027                     _pAds1115PrObj:
  1601                           	opt stack 0
  1602  000027                     	ds	2
  1603  000029                     _fastSampTimer:
  1604                           	opt stack 0
  1605  000029                     	ds	2
  1606  00002B                     _pAds1115DiffPrObj:
  1607                           	opt stack 0
  1608  00002B                     	ds	2
  1609  00002D                     _userTicker_ms:
  1610                           	opt stack 0
  1611  00002D                     	ds	2
  1612  00002F                     _p_prEepromObj:
  1613                           	opt stack 0
  1614  00002F                     	ds	2
  1615  000031                     _pdiff_prEepromObj:
  1616                           	opt stack 0
  1617  000031                     	ds	2
  1618  000033                     _dlyTickerEn:
  1619                           	opt stack 0
  1620  000033                     	ds	1
  1621  000034                     _st_Bj:
  1622                           	opt stack 0
  1623  000034                     	ds	1
  1624  000035                     _pcf8574Value:
  1625                           	opt stack 0
  1626  000035                     	ds	1
  1627  000036                     _slowSampleTimer:
  1628                           	opt stack 0
  1629  000036                     	ds	1
  1630  000037                     _diffSampCh:
  1631                           	opt stack 0
  1632  000037                     	ds	1
  1633  000038                     _diffSampCount_D23:
  1634                           	opt stack 0
  1635  000038                     	ds	1
  1636  000039                     _diffSampCount_D01:
  1637                           	opt stack 0
  1638  000039                     	ds	1
  1639  00003A                     _calibCol:
  1640                           	opt stack 0
  1641  00003A                     	ds	1
  1642  00003B                     _calibRow:
  1643                           	opt stack 0
  1644  00003B                     	ds	1
  1645  00003C                     _menu:
  1646                           	opt stack 0
  1647  00003C                     	ds	1
  1648  00003D                     _passWord:
  1649                           	opt stack 0
  1650  00003D                     	ds	2
  1651  00003F                     _adjLocation:
  1652                           	opt stack 0
  1653  00003F                     	ds	1
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           postdec1	equ	0xFE5
  1661                           fsr1h	equ	0xFE2
  1662                           fsr1l	equ	0xFE1
  1663                           
  1664                           	psect	bssBANK0
  1665  000060                     __pbssBANK0:
  1666                           	opt stack 0
  1667  000060                     _pLCD:
  1668                           	opt stack 0
  1669  000060                     	ds	24
  1670  000078                     _pcf8574:
  1671                           	opt stack 0
  1672  000078                     	ds	11
  1673  000083                     _glRtc:
  1674                           	opt stack 0
  1675  000083                     	ds	7
  1676  00008A                     _glTicker:
  1677                           	opt stack 0
  1678  00008A                     	ds	4
  1679  00008E                     ___mflot32_2_int32@F7605:
  1680                           	opt stack 0
  1681  00008E                     	ds	4
  1682  000092                     ___int32_2_mflot32@F7600:
  1683                           	opt stack 0
  1684  000092                     	ds	4
  1685  000096                     _x_Pemperature:
  1686                           	opt stack 0
  1687  000096                     	ds	4
  1688  00009A                     _x_Pressure:
  1689                           	opt stack 0
  1690  00009A                     	ds	4
  1691  00009E                     _x_Weight:
  1692                           	opt stack 0
  1693  00009E                     	ds	4
  1694  0000A2                     _x_Hight:
  1695                           	opt stack 0
  1696  0000A2                     	ds	4
  1697  0000A6                     _x_DiffPressure:
  1698                           	opt stack 0
  1699  0000A6                     	ds	4
  1700  0000AA                     _sampBufDiffPr_S1:
  1701                           	opt stack 0
  1702  0000AA                     	ds	2
  1703  0000AC                     _pAdjValue:
  1704                           	opt stack 0
  1705  0000AC                     	ds	2
  1706  0000AE                     _adc_iRef:
  1707                           	opt stack 0
  1708  0000AE                     	ds	2
  1709  0000B0                     _adc_ibat:
  1710                           	opt stack 0
  1711  0000B0                     	ds	2
  1712  0000B2                     _adc_iPrEx1:
  1713                           	opt stack 0
  1714  0000B2                     	ds	2
  1715  0000B4                     _adc_iPrEx0:
  1716                           	opt stack 0
  1717  0000B4                     	ds	2
  1718  0000B6                     _adc_Pr:
  1719                           	opt stack 0
  1720  0000B6                     	ds	2
  1721  0000B8                     _adc_exPt100Line:
  1722                           	opt stack 0
  1723  0000B8                     	ds	2
  1724  0000BA                     _adc_exPt100:
  1725                           	opt stack 0
  1726  0000BA                     	ds	2
  1727  0000BC                     _adc_diffGnd:
  1728                           	opt stack 0
  1729  0000BC                     	ds	2
  1730  0000BE                     _adc_diffVcc:
  1731                           	opt stack 0
  1732  0000BE                     	ds	2
  1733  0000C0                     _adc_diffBrg:
  1734                           	opt stack 0
  1735  0000C0                     	ds	2
  1736  0000C2                     _adc_diffPr:
  1737                           	opt stack 0
  1738  0000C2                     	ds	2
  1739  0000C4                     _glbEvent:
  1740                           	opt stack 0
  1741  0000C4                     	ds	1
  1742  0000C5                     _keyValue:
  1743                           	opt stack 0
  1744  0000C5                     	ds	1
  1745  0000C6                     _at24c02Ch1:
  1746                           	opt stack 0
  1747  0000C6                     	ds	11
  1748  0000D1                     _x_prDiffData:
  1749                           	opt stack 0
  1750  0000D1                     	ds	8
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           
  1761                           	psect	dataBANK0
  1762  0000F0                     __pdataBANK0:
  1763                           	opt stack 0
  1764  0000F0                     ui_disp_start_cs600@F7614:
  1765                           	opt stack 0
  1766  0000F0                     	ds	6
  1767  0000F6                     _fpSysData:
  1768                           	opt stack 0
  1769  0000F6                     	ds	3
  1770  0000F9                     _defalutRtc:
  1771                           	opt stack 0
  1772  0000F9                     	ds	7
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1h	equ	0xFE2
  1781                           fsr1l	equ	0xFE1
  1782                           
  1783                           	psect	bssBANK1
  1784  000100                     __pbssBANK1:
  1785                           	opt stack 0
  1786  000100                     _diff_prCalibTabDef:
  1787                           	opt stack 0
  1788  000100                     	ds	162
  1789  0001A2                     _ads1115Chip1:
  1790                           	opt stack 0
  1791  0001A2                     	ds	16
  1792  0001B2                     _ads1115Chip0:
  1793                           	opt stack 0
  1794  0001B2                     	ds	16
  1795  0001C2                     _sampBufDiffPr_D23:
  1796                           	opt stack 0
  1797  0001C2                     	ds	16
  1798  0001D2                     _sampBufDiffPr_D01:
  1799                           	opt stack 0
  1800  0001D2                     	ds	16
  1801  0001E2                     _at24c02Ch0:
  1802                           	opt stack 0
  1803  0001E2                     	ds	11
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	bssBANK2
  1815  000200                     __pbssBANK2:
  1816                           	opt stack 0
  1817  000200                     _prCalibTabDef:
  1818                           	opt stack 0
  1819  000200                     	ds	162
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postdec1	equ	0xFE5
  1827                           fsr1h	equ	0xFE2
  1828                           fsr1l	equ	0xFE1
  1829                           
  1830                           	psect	bssBANK3
  1831  000300                     __pbssBANK3:
  1832                           	opt stack 0
  1833  000300                     _globleBuffer0:
  1834                           	opt stack 0
  1835  000300                     	ds	256
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           postdec1	equ	0xFE5
  1843                           fsr1h	equ	0xFE2
  1844                           fsr1l	equ	0xFE1
  1845                           
  1846                           	psect	bssBANK4
  1847  000400                     __pbssBANK4:
  1848                           	opt stack 0
  1849  000400                     _globleBuffer1:
  1850                           	opt stack 0
  1851  000400                     	ds	256
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           postdec1	equ	0xFE5
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           
  1862                           	psect	cstackBANK2
  1863  0002A2                     __pcstackBANK2:
  1864                           	opt stack 0
  1865  0002A2                     key_process@tm:
  1866                           	opt stack 0
  1867                           
  1868                           ; 2 bytes @ 0x0
  1869  0002A2                     	ds	2
  1870  0002A4                     key_process@key:
  1871                           	opt stack 0
  1872                           
  1873                           ; 1 bytes @ 0x2
  1874  0002A4                     	ds	1
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           
  1885                           	psect	cstackBANK1
  1886  0001ED                     __pcstackBANK1:
  1887                           	opt stack 0
  1888  0001ED                     ui_disp_adj_xfixed_pt@str:
  1889                           	opt stack 0
  1890  0001ED                     ___int32_2_mflot32@t32:
  1891                           	opt stack 0
  1892  0001ED                     ui_disp_start_cs600@buf:
  1893                           	opt stack 0
  1894  0001ED                     ui_disp_rtc_mm_ss@buf:
  1895                           	opt stack 0
  1896                           
  1897                           ; 10 bytes @ 0x0
  1898  0001ED                     	ds	2
  1899  0001EF                     ui_disp_adj_xfixed_pt@x:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x2
  1903  0001EF                     	ds	2
  1904  0001F1                     ui_disp_adj_xfixed_pt@loc:
  1905                           	opt stack 0
  1906  0001F1                     ___int32_2_mflot32@mf:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x4
  1910  0001F1                     	ds	1
  1911  0001F2                     ??_ui_disp_adj_xfixed_pt:
  1912                           
  1913                           ; 1 bytes @ 0x5
  1914  0001F2                     	ds	1
  1915  0001F3                     ui_disp_start_cs600@dly:
  1916                           	opt stack 0
  1917                           
  1918                           ; 1 bytes @ 0x6
  1919  0001F3                     	ds	1
  1920  0001F4                     ui_disp_start_cs600@t8:
  1921                           	opt stack 0
  1922  0001F4                     ui_disp_adj_xfixed_pt@buf:
  1923                           	opt stack 0
  1924                           
  1925                           ; 10 bytes @ 0x7
  1926  0001F4                     	ds	1
  1927  0001F5                     ??_key_process_set_down_long:
  1928                           
  1929                           ; 1 bytes @ 0x8
  1930  0001F5                     	ds	2
  1931  0001F7                     ui_disp_rtc_mm_ss@t8:
  1932                           	opt stack 0
  1933                           
  1934                           ; 1 bytes @ 0xA
  1935  0001F7                     	ds	7
  1936  0001FE                     main@t16:
  1937                           	opt stack 0
  1938                           
  1939                           ; 2 bytes @ 0x11
  1940  0001FE                     	ds	2
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           postdec1	equ	0xFE5
  1948                           fsr1h	equ	0xFE2
  1949                           fsr1l	equ	0xFE1
  1950                           
  1951                           	psect	cstackBANK0
  1952  0000D9                     __pcstackBANK0:
  1953                           	opt stack 0
  1954  0000D9                     ??___enter_menu_set_density:
  1955  0000D9                     ?___exp_10:
  1956                           	opt stack 0
  1957  0000D9                     ?___awdiv:
  1958                           	opt stack 0
  1959  0000D9                     ?___awmod:
  1960                           	opt stack 0
  1961  0000D9                     ?___lldiv:
  1962                           	opt stack 0
  1963  0000D9                     iic_send_byte@x:
  1964                           	opt stack 0
  1965  0000D9                     iic_received_byte@ret:
  1966                           	opt stack 0
  1967  0000D9                     lcd_disp_get_code@chr:
  1968                           	opt stack 0
  1969  0000D9                     lcd_disp_all@x:
  1970                           	opt stack 0
  1971  0000D9                     key_shift_loc_fixed_point@loc:
  1972                           	opt stack 0
  1973  0000D9                     ___enter_menu_set_pose@fps:
  1974                           	opt stack 0
  1975  0000D9                     ___x_arrange_str@str:
  1976                           	opt stack 0
  1977  0000D9                     m_mem_cpy@d:
  1978                           	opt stack 0
  1979  0000D9                     m_int8_2_hex@str:
  1980                           	opt stack 0
  1981  0000D9                     ads1115_init@pAds1115:
  1982                           	opt stack 0
  1983  0000D9                     delay_us@dly:
  1984                           	opt stack 0
  1985  0000D9                     rtc_set@rtc:
  1986                           	opt stack 0
  1987  0000D9                     ticker_dly@ms:
  1988                           	opt stack 0
  1989  0000D9                     ___awdiv@dividend:
  1990                           	opt stack 0
  1991  0000D9                     ___awmod@dividend:
  1992                           	opt stack 0
  1993  0000D9                     ___lldiv@dividend:
  1994                           	opt stack 0
  1995                           
  1996                           ; 4 bytes @ 0x0
  1997  0000D9                     	ds	1
  1998  0000DA                     iic_send_byte@i:
  1999                           	opt stack 0
  2000  0000DA                     iic_received_byte@i:
  2001                           	opt stack 0
  2002  0000DA                     lcd_disp_get_code@ret:
  2003                           	opt stack 0
  2004  0000DA                     lcd_disp_all@i:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x1
  2008  0000DA                     	ds	1
  2009  0000DB                     ?___wmul:
  2010                           	opt stack 0
  2011  0000DB                     ?___lwdiv:
  2012                           	opt stack 0
  2013  0000DB                     key_shift_loc_fixed_point@min:
  2014                           	opt stack 0
  2015  0000DB                     ___x_arrange_str@len:
  2016                           	opt stack 0
  2017  0000DB                     m_int8_2_hex@b:
  2018                           	opt stack 0
  2019  0000DB                     ads1115_init@slvaddr:
  2020                           	opt stack 0
  2021  0000DB                     iic_received_byte_if_ack@ack:
  2022                           	opt stack 0
  2023  0000DB                     lcd_disp_get_code@i:
  2024                           	opt stack 0
  2025  0000DB                     ___enter_menu_set_density@fps:
  2026                           	opt stack 0
  2027  0000DB                     m_mem_cpy@s:
  2028                           	opt stack 0
  2029  0000DB                     ads1115_write_reg@pAds1115:
  2030                           	opt stack 0
  2031  0000DB                     delay_us@i:
  2032                           	opt stack 0
  2033  0000DB                     rtc_set@stp:
  2034                           	opt stack 0
  2035  0000DB                     ___wmul@multiplier:
  2036                           	opt stack 0
  2037  0000DB                     ___awdiv@divisor:
  2038                           	opt stack 0
  2039  0000DB                     ___awmod@divisor:
  2040                           	opt stack 0
  2041  0000DB                     ___lwdiv@dividend:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x2
  2045  0000DB                     	ds	1
  2046  0000DC                     key_shift_loc_fixed_point@max:
  2047                           	opt stack 0
  2048  0000DC                     iic_received_byte_if_ack@ret:
  2049                           	opt stack 0
  2050                           
  2051                           ; 1 bytes @ 0x3
  2052  0000DC                     	ds	1
  2053  0000DD                     ?_ads1115_read_reg:
  2054                           	opt stack 0
  2055  0000DD                     ?_in_adc_start_and_read:
  2056                           	opt stack 0
  2057  0000DD                     ads1115_write_reg@addr:
  2058                           	opt stack 0
  2059  0000DD                     ___awdiv@counter:
  2060                           	opt stack 0
  2061  0000DD                     ___awmod@counter:
  2062                           	opt stack 0
  2063  0000DD                     ads1115_read_reg@pAds1115:
  2064                           	opt stack 0
  2065  0000DD                     delay_ms@dly:
  2066                           	opt stack 0
  2067  0000DD                     ___wmul@multiplicand:
  2068                           	opt stack 0
  2069  0000DD                     ___lwdiv@divisor:
  2070                           	opt stack 0
  2071  0000DD                     ___lldiv@divisor:
  2072                           	opt stack 0
  2073                           
  2074                           ; 4 bytes @ 0x4
  2075  0000DD                     	ds	1
  2076  0000DE                     ___awdiv@sign:
  2077                           	opt stack 0
  2078  0000DE                     ___awmod@sign:
  2079                           	opt stack 0
  2080  0000DE                     ads1115_write_reg@value:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x5
  2084  0000DE                     	ds	1
  2085  0000DF                     ads1115_read_reg@addr:
  2086                           	opt stack 0
  2087  0000DF                     in_adc_start_and_read@ch:
  2088                           	opt stack 0
  2089  0000DF                     key_polling@ktemp:
  2090                           	opt stack 0
  2091  0000DF                     ___lwdiv@counter:
  2092                           	opt stack 0
  2093  0000DF                     ___wmul@product:
  2094                           	opt stack 0
  2095  0000DF                     ___awdiv@quotient:
  2096                           	opt stack 0
  2097                           
  2098                           ; 2 bytes @ 0x6
  2099  0000DF                     	ds	1
  2100  0000E0                     ??_ads1115_read_reg:
  2101  0000E0                     key_polling@t8:
  2102                           	opt stack 0
  2103  0000E0                     ads1115_start_conversion@pAds1115:
  2104                           	opt stack 0
  2105  0000E0                     in_adc_start_and_read@ret:
  2106                           	opt stack 0
  2107  0000E0                     ___lwdiv@quotient:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x7
  2111  0000E0                     	ds	1
  2112  0000E1                     ?_key_waite_release:
  2113                           	opt stack 0
  2114  0000E1                     lcd_set_com_seg@seg:
  2115                           	opt stack 0
  2116  0000E1                     key_waite_release@timeout:
  2117                           	opt stack 0
  2118  0000E1                     m_int16_2_str_4@buf:
  2119                           	opt stack 0
  2120  0000E1                     ads1115_read_reg@t16:
  2121                           	opt stack 0
  2122  0000E1                     ___lldiv@quotient:
  2123                           	opt stack 0
  2124                           
  2125                           ; 4 bytes @ 0x8
  2126  0000E1                     	ds	1
  2127  0000E2                     ?___lwmod:
  2128                           	opt stack 0
  2129  0000E2                     lcd_set_com_seg@show:
  2130                           	opt stack 0
  2131  0000E2                     ___lwmod@dividend:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x9
  2135  0000E2                     	ds	1
  2136  0000E3                     ??_lcd_set_com_seg:
  2137  0000E3                     ?_ads1115_read_conversion:
  2138                           	opt stack 0
  2139  0000E3                     key_waite_release@key:
  2140                           	opt stack 0
  2141  0000E3                     m_int16_2_str_4@x:
  2142                           	opt stack 0
  2143  0000E3                     ads1115_read_conversion@pAds1115:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0xA
  2147  0000E3                     	ds	1
  2148  0000E4                     ___lwmod@divisor:
  2149                           	opt stack 0
  2150                           
  2151                           ; 2 bytes @ 0xB
  2152  0000E4                     	ds	1
  2153  0000E5                     ___lldiv@counter:
  2154                           	opt stack 0
  2155                           
  2156                           ; 1 bytes @ 0xC
  2157  0000E5                     	ds	1
  2158  0000E6                     ?___int32_2_mflot32:
  2159                           	opt stack 0
  2160  0000E6                     lcd_set_com_seg@com:
  2161                           	opt stack 0
  2162  0000E6                     ___lwmod@counter:
  2163                           	opt stack 0
  2164  0000E6                     ads1115_read_conversion@result:
  2165                           	opt stack 0
  2166  0000E6                     ___int32_2_mflot32@x:
  2167                           	opt stack 0
  2168                           
  2169                           ; 4 bytes @ 0xD
  2170  0000E6                     	ds	1
  2171  0000E7                     lcd_set_com_seg@offset:
  2172                           	opt stack 0
  2173  0000E7                     key_adj_value_fixed_point@value:
  2174                           	opt stack 0
  2175                           
  2176                           ; 2 bytes @ 0xE
  2177  0000E7                     	ds	1
  2178  0000E8                     lcd_set_com_seg@bits:
  2179                           	opt stack 0
  2180                           
  2181                           ; 1 bytes @ 0xF
  2182  0000E8                     	ds	1
  2183  0000E9                     key_adj_value_fixed_point@loc:
  2184                           	opt stack 0
  2185  0000E9                     lcd_disp_level_bar@__bar:
  2186                           	opt stack 0
  2187  0000E9                     lcd_show_dp@show:
  2188                           	opt stack 0
  2189  0000E9                     lcd_show_chr@chr:
  2190                           	opt stack 0
  2191                           
  2192                           ; 1 bytes @ 0x10
  2193  0000E9                     	ds	1
  2194  0000EA                     ??___int32_2_mflot32:
  2195  0000EA                     lcd_disp_level_bar@bar:
  2196                           	opt stack 0
  2197  0000EA                     lcd_show_dp@loc:
  2198                           	opt stack 0
  2199  0000EA                     lcd_show_chr@loc:
  2200                           	opt stack 0
  2201  0000EA                     key_adj_value_fixed_point@dloc:
  2202                           	opt stack 0
  2203                           
  2204                           ; 2 bytes @ 0x11
  2205  0000EA                     	ds	1
  2206  0000EB                     lcd_disp_level@level:
  2207                           	opt stack 0
  2208  0000EB                     lcd_show_chr@code:
  2209                           	opt stack 0
  2210                           
  2211                           ; 1 bytes @ 0x12
  2212  0000EB                     	ds	1
  2213  0000EC                     lcd_disp_level@i:
  2214                           	opt stack 0
  2215  0000EC                     key_adj_value_fixed_point@t16:
  2216                           	opt stack 0
  2217  0000EC                     lcd_show_string_l0@str:
  2218                           	opt stack 0
  2219  0000EC                     lcd_show_string_l1@str:
  2220                           	opt stack 0
  2221  0000EC                     lcd_show_string@str:
  2222                           	opt stack 0
  2223                           
  2224                           ; 2 bytes @ 0x13
  2225  0000EC                     	ds	2
  2226  0000EE                     lcd_show_string_l0@t8:
  2227                           	opt stack 0
  2228  0000EE                     lcd_show_string_l1@t8:
  2229                           	opt stack 0
  2230  0000EE                     lcd_show_string@t8:
  2231                           	opt stack 0
  2232  0000EE                     ___enter_menu_set_base_zero@fps:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x15
  2236  0000EE                     	ds	2
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1h	equ	0xFE2
  2245                           fsr1l	equ	0xFE1
  2246                           
  2247                           	psect	cstackCOMRAM
  2248  000001                     __pcstackCOMRAM:
  2249                           	opt stack 0
  2250  000001                     ??_handler_interrupt_hight:
  2251  000001                     
  2252                           ; 2 bytes @ 0x0
  2253  000001                     	ds	14
  2254  00000F                     ??_handler_interrupt_low:
  2255                           
  2256                           ; 1 bytes @ 0xE
  2257  00000F                     	ds	17
  2258  000020                     ??_in_adc_start_and_read:
  2259  000020                     ??___enter_menu_set_pose:
  2260  000020                     ___exp_10@n:
  2261                           	opt stack 0
  2262  000020                     key_waite_release@t8:
  2263                           	opt stack 0
  2264  000020                     key_shift_loc_fixed_point@t8:
  2265                           	opt stack 0
  2266  000020                     ___x_arrange_str@i:
  2267                           	opt stack 0
  2268  000020                     m_int8_2_hex@t8:
  2269                           	opt stack 0
  2270  000020                     iic_send_ack@ack:
  2271                           	opt stack 0
  2272  000020                     iic_waite_ack@timeout:
  2273                           	opt stack 0
  2274  000020                     lcd_disp_level_bar@show:
  2275                           	opt stack 0
  2276  000020                     lcd_disp_chr_loc_0@code:
  2277                           	opt stack 0
  2278  000020                     lcd_disp_dp_loc_0@dp:
  2279                           	opt stack 0
  2280  000020                     lcd_disp_chr_loc_1@code:
  2281                           	opt stack 0
  2282  000020                     lcd_disp_dp_loc_1@dp:
  2283                           	opt stack 0
  2284  000020                     lcd_disp_chr_loc_2@code:
  2285                           	opt stack 0
  2286  000020                     lcd_disp_dp_loc_2@dp:
  2287                           	opt stack 0
  2288  000020                     lcd_disp_chr_loc_3@code:
  2289                           	opt stack 0
  2290  000020                     lcd_disp_chr_loc_4@code:
  2291                           	opt stack 0
  2292  000020                     lcd_disp_chr_loc_5@code:
  2293                           	opt stack 0
  2294  000020                     lcd_disp_chr_loc_6@code:
  2295                           	opt stack 0
  2296  000020                     lcd_disp_chr_loc_7@code:
  2297                           	opt stack 0
  2298  000020                     lcd_disp_logo@show:
  2299                           	opt stack 0
  2300  000020                     rtc_get@t8:
  2301                           	opt stack 0
  2302                           
  2303                           ; 1 bytes @ 0x1F
  2304  000020                     	ds	1
  2305  000021                     tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           postdec1	equ	0xFE5
  2312                           fsr1h	equ	0xFE2
  2313                           fsr1l	equ	0xFE1
  2314                           
  2315                           ; 1 bytes @ 0x20
  2316 ;;
  2317 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2318 ;;
  2319 ;; *************** function _main *****************
  2320 ;; Defined at:
  2321 ;;		line 5 in file "src/app/main.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  t16             2   17[BANK1 ] unsigned int 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2  521[None  ] int 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        2 bytes
  2340 ;; Hardware stack levels required when called:   14
  2341 ;; This function calls:
  2342 ;;		_ads1115_init_all_chip
  2343 ;;		_ads1115_read_conversion
  2344 ;;		_ads1115_read_reg
  2345 ;;		_ads1115_start_conversion
  2346 ;;		_in_adc_init
  2347 ;;		_in_adc_start_and_read
  2348 ;;		_key_polling
  2349 ;;		_key_process
  2350 ;;		_lcd_disp_level
  2351 ;;		_lcd_init
  2352 ;;		_rtc_set
  2353 ;;		_soc_init
  2354 ;;		_ticker_dly
  2355 ;;		_ui_disp_rtc_mm_ss
  2356 ;;		_ui_disp_start_cs600
  2357 ;; This function is called by:
  2358 ;;		Startup code after reset
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text0
  2363  000C88                     __ptext0:
  2364                           	opt stack 0
  2365  000C88                     _main:
  2366                           	opt stack 17
  2367                           
  2368                           ;main.c: 7: uint16_t t16;
  2369                           ;main.c: 8: __nop();
  2370                           
  2371                           ;incstack = 0
  2372  000C88  F000               	nop	
  2373                           
  2374                           ;main.c: 10: soc_init();
  2375  000C8A  ECE2  F013         	call	_soc_init	;wreg free
  2376                           
  2377                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  2378  000C8E  0EF9               	movlw	low _defalutRtc
  2379  000C90  0100               	movlb	0	; () banked
  2380  000C92  6FD9               	movwf	rtc_set@rtc& (0+255),b
  2381  000C94  0E00               	movlw	high _defalutRtc
  2382  000C96  0100               	movlb	0	; () banked
  2383  000C98  6FDA               	movwf	(rtc_set@rtc+1)& (0+255),b
  2384  000C9A  EC29  F008         	call	_rtc_set	;wreg free
  2385                           
  2386                           ;main.c: 12: lcd_init();
  2387  000C9E  ECF2  F013         	call	_lcd_init	;wreg free
  2388                           
  2389                           ;main.c: 14: ads1115_init_all_chip();
  2390  000CA2  EC1C  F012         	call	_ads1115_init_all_chip	;wreg free
  2391                           
  2392                           ;main.c: 16: ads1115_start_conversion(&ads1115Chip0);
  2393  000CA6  0EB2               	movlw	low _ads1115Chip0
  2394  000CA8  0100               	movlb	0	; () banked
  2395  000CAA  6FE0               	movwf	ads1115_start_conversion@pAds1115& (0+255),b
  2396  000CAC  0E01               	movlw	high _ads1115Chip0
  2397  000CAE  0100               	movlb	0	; () banked
  2398  000CB0  6FE1               	movwf	(ads1115_start_conversion@pAds1115+1)& (0+255),b
  2399  000CB2  EC57  F013         	call	_ads1115_start_conversion	;wreg free
  2400                           
  2401                           ;main.c: 17: t16=ads1115_read_reg(&ads1115Chip1,(0x01));
  2402  000CB6  0EA2               	movlw	low _ads1115Chip1
  2403  000CB8  0100               	movlb	0	; () banked
  2404  000CBA  6FDD               	movwf	ads1115_read_reg@pAds1115& (0+255),b
  2405  000CBC  0E01               	movlw	high _ads1115Chip1
  2406  000CBE  0100               	movlb	0	; () banked
  2407  000CC0  6FDE               	movwf	(ads1115_read_reg@pAds1115+1)& (0+255),b
  2408  000CC2  0E01               	movlw	1
  2409  000CC4  0100               	movlb	0	; () banked
  2410  000CC6  6FDF               	movwf	ads1115_read_reg@addr& (0+255),b
  2411  000CC8  ECD9  F002         	call	_ads1115_read_reg	;wreg free
  2412  000CCC  C0DD  F1FE         	movff	?_ads1115_read_reg,main@t16
  2413  000CD0  C0DE  F1FF         	movff	?_ads1115_read_reg+1,main@t16+1
  2414                           
  2415                           ;main.c: 18: ticker_dly(100);
  2416  000CD4  0E00               	movlw	0
  2417  000CD6  0100               	movlb	0	; () banked
  2418  000CD8  6FDA               	movwf	(ticker_dly@ms+1)& (0+255),b
  2419  000CDA  0E64               	movlw	100
  2420  000CDC  6FD9               	movwf	ticker_dly@ms& (0+255),b
  2421  000CDE  ECFD  F012         	call	_ticker_dly	;wreg free
  2422                           
  2423                           ;main.c: 19: t16=ads1115_read_conversion(&ads1115Chip0);
  2424  000CE2  0EB2               	movlw	low _ads1115Chip0
  2425  000CE4  0100               	movlb	0	; () banked
  2426  000CE6  6FE3               	movwf	ads1115_read_conversion@pAds1115& (0+255),b
  2427  000CE8  0E01               	movlw	high _ads1115Chip0
  2428  000CEA  0100               	movlb	0	; () banked
  2429  000CEC  6FE4               	movwf	(ads1115_read_conversion@pAds1115+1)& (0+255),b
  2430  000CEE  ECA4  F010         	call	_ads1115_read_conversion	;wreg free
  2431  000CF2  C0E3  F1FE         	movff	?_ads1115_read_conversion,main@t16
  2432  000CF6  C0E4  F1FF         	movff	?_ads1115_read_conversion+1,main@t16+1
  2433                           
  2434                           ;main.c: 21: in_adc_init();
  2435  000CFA  EC91  F013         	call	_in_adc_init	;wreg free
  2436                           
  2437                           ;main.c: 22: t16=in_adc_start_and_read(3);
  2438  000CFE  0E03               	movlw	3
  2439  000D00  EC1A  F00E         	call	_in_adc_start_and_read
  2440  000D04  C0DD  F1FE         	movff	?_in_adc_start_and_read,main@t16
  2441  000D08  C0DE  F1FF         	movff	?_in_adc_start_and_read+1,main@t16+1
  2442                           
  2443                           ;main.c: 23: ui_disp_start_cs600(10);
  2444  000D0C  0E0A               	movlw	10
  2445  000D0E  ECDC  F009         	call	_ui_disp_start_cs600
  2446                           
  2447                           ;main.c: 25: lcd_disp_level(60);
  2448  000D12  0E3C               	movlw	60
  2449  000D14  EC29  F010         	call	_lcd_disp_level
  2450                           
  2451                           ;main.c: 27: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  2452  000D18  9893               	bcf	3987,4,c	;volatile
  2453  000D1A  888A               	bsf	3978,4,c	;volatile
  2454                           
  2455                           ;main.c: 29: __nop();
  2456  000D1C  F000               	nop	
  2457  000D1E                     l9543:
  2458                           
  2459                           ;main.c: 31: if(glbEvent & (0x02)){
  2460  000D1E  0100               	movlb	0	; () banked
  2461  000D20  A3C4               	btfss	_glbEvent& (0+255),1,b	;volatile
  2462  000D22  D006               	goto	l9553
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;main.c: 32: glbEvent &= ~(0x02);
  2466  000D24  0100               	movlb	0	; () banked
  2467  000D26  93C4               	bcf	_glbEvent& (0+255),1,b	;volatile
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;main.c: 33: __nop();
  2471  000D28  F000               	nop	
  2472                           
  2473                           ;main.c: 34: ui_disp_rtc_mm_ss();
  2474  000D2A  ECE0  F008         	call	_ui_disp_rtc_mm_ss	;wreg free
  2475                           
  2476                           ;main.c: 35: __nop();
  2477  000D2E  F000               	nop	
  2478  000D30                     l9553:
  2479                           
  2480                           ;main.c: 37: }
  2481                           ;main.c: 38: if(glbEvent & (0x01)){
  2482  000D30  0100               	movlb	0	; () banked
  2483  000D32  A1C4               	btfss	_glbEvent& (0+255),0,b	;volatile
  2484  000D34  D003               	goto	l9559
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;main.c: 39: glbEvent &= ~(0x01);
  2488  000D36  0100               	movlb	0	; () banked
  2489  000D38  91C4               	bcf	_glbEvent& (0+255),0,b	;volatile
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;main.c: 41: __nop();
  2493  000D3A  F000               	nop	
  2494  000D3C                     l9559:
  2495                           
  2496                           ;main.c: 42: }
  2497                           ;main.c: 43: keyValue=key_polling();
  2498  000D3C  EC73  F00F         	call	_key_polling	;wreg free
  2499  000D40  0100               	movlb	0	; () banked
  2500  000D42  6FC5               	movwf	_keyValue& (0+255),b	;volatile
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;main.c: 44: if(keyValue!=(0x0))key_process();
  2504  000D44  0100               	movlb	0	; () banked
  2505  000D46  51C5               	movf	_keyValue& (0+255),w,b	;volatile
  2506  000D48  B4D8               	btfsc	status,2,c
  2507  000D4A  D7E9               	goto	l9543
  2508                           
  2509                           ; BSR set to: 0
  2510  000D4C  ECFA  F00C         	call	_key_process	;wreg free
  2511  000D50  D7E6               	goto	l9543
  2512  000D52                     __end_of_main:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           fsr1h	equ	0xFE2
  2522                           fsr1l	equ	0xFE1
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _ui_disp_start_cs600 *****************
  2526 ;; Defined at:
  2527 ;;		line 113 in file "src/api/ui.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  dly             1    wreg     unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  dly             1    6[BANK1 ] unsigned char 
  2532 ;;  buf             6    0[BANK1 ] unsigned char [6]
  2533 ;;  t8              1    7[BANK1 ] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        8 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    9
  2550 ;; This function calls:
  2551 ;;		_lcd_disp_all
  2552 ;;		_lcd_disp_level
  2553 ;;		_lcd_disp_logo
  2554 ;;		_lcd_disp_refresh
  2555 ;;		_lcd_show_string_l0
  2556 ;;		_lcd_show_string_l1
  2557 ;;		_m_int8_2_hex
  2558 ;;		_ticker_dly
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text1
  2565  0013B8                     __ptext1:
  2566                           	opt stack 0
  2567  0013B8                     _ui_disp_start_cs600:
  2568                           	opt stack 21
  2569                           
  2570                           ;incstack = 0
  2571                           ;ui_disp_start_cs600@dly stored from wreg
  2572  0013B8  0101               	movlb	1	; () banked
  2573  0013BA  6FF3               	movwf	ui_disp_start_cs600@dly& (0+255),b
  2574                           
  2575                           ;ui.c: 115: uint8_t t8;
  2576                           ;ui.c: 116: uint8_t buf[6]="-00-";
  2577  0013BC  EE20  F0F0         	lfsr	2,ui_disp_start_cs600@F7614
  2578  0013C0  EE11  F0ED         	lfsr	1,ui_disp_start_cs600@buf
  2579  0013C4  0E05               	movlw	5
  2580  0013C6                     u6921:
  2581  0013C6  CFDB FFE3          	movff	plusw2,plusw1
  2582  0013CA  06E8               	decf	wreg,f,c
  2583  0013CC  E2FC               	bc	u6921
  2584                           
  2585                           ;ui.c: 117: lcd_disp_all(0);;
  2586  0013CE  0E00               	movlw	0
  2587  0013D0  EC9D  F012         	call	_lcd_disp_all
  2588                           
  2589                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  2590  0013D4  0EED               	movlw	low STR_1
  2591  0013D6  0100               	movlb	0	; () banked
  2592  0013D8  6FEC               	movwf	lcd_show_string_l0@str& (0+255),b
  2593  0013DA  0EFF               	movlw	high STR_1
  2594  0013DC  0100               	movlb	0	; () banked
  2595  0013DE  6FED               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  2596  0013E0  ECC7  F010         	call	_lcd_show_string_l0	;wreg free
  2597                           
  2598                           ;ui.c: 119: lcd_disp_logo(1);
  2599  0013E4  0E01               	movlw	1
  2600  0013E6  EC85  F012         	call	_lcd_disp_logo
  2601                           
  2602                           ;ui.c: 120: t8=dly;
  2603  0013EA  C1F3  F1F4         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  2604                           
  2605                           ;ui.c: 121: if(t8<1)t8=1;
  2606  0013EE  0101               	movlb	1	; () banked
  2607  0013F0  51F4               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2608  0013F2  0101               	movlb	1	; () banked
  2609  0013F4  A4D8               	btfss	status,2,c
  2610  0013F6  D029               	goto	l9087
  2611                           
  2612                           ; BSR set to: 1
  2613  0013F8  0E01               	movlw	1
  2614  0013FA  0101               	movlb	1	; () banked
  2615  0013FC  6FF4               	movwf	ui_disp_start_cs600@t8& (0+255),b
  2616                           
  2617                           ; BSR set to: 1
  2618                           ;ui.c: 122: while(t8){
  2619  0013FE  D025               	goto	l9087
  2620  001400                     l9073:
  2621                           
  2622                           ; BSR set to: 1
  2623                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  2624  001400  0EEE               	movlw	low (ui_disp_start_cs600@buf+1)
  2625  001402  0100               	movlb	0	; () banked
  2626  001404  6FD9               	movwf	m_int8_2_hex@str& (0+255),b
  2627  001406  0E01               	movlw	high (ui_disp_start_cs600@buf+1)
  2628  001408  0100               	movlb	0	; () banked
  2629  00140A  6FDA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2630  00140C  0101               	movlb	1	; () banked
  2631  00140E  05F4               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  2632  001410  0100               	movlb	0	; () banked
  2633  001412  6FDB               	movwf	m_int8_2_hex@b& (0+255),b
  2634  001414  ECCF  F00F         	call	_m_int8_2_hex	;wreg free
  2635                           
  2636                           ;ui.c: 124: buf[4]='\0';
  2637  001418  0E00               	movlw	0
  2638  00141A  0101               	movlb	1	; () banked
  2639  00141C  6FF1               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;ui.c: 125: lcd_show_string_l1(buf);
  2643  00141E  0EED               	movlw	low ui_disp_start_cs600@buf
  2644  001420  0100               	movlb	0	; () banked
  2645  001422  6FEC               	movwf	lcd_show_string_l1@str& (0+255),b
  2646  001424  0E01               	movlw	high ui_disp_start_cs600@buf
  2647  001426  0100               	movlb	0	; () banked
  2648  001428  6FED               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  2649  00142A  EC0B  F011         	call	_lcd_show_string_l1	;wreg free
  2650                           
  2651                           ;ui.c: 126: lcd_disp_level(60);
  2652  00142E  0E3C               	movlw	60
  2653  001430  EC29  F010         	call	_lcd_disp_level
  2654                           
  2655                           ;ui.c: 127: lcd_disp_refresh();
  2656  001434  EC84  F00E         	call	_lcd_disp_refresh	;wreg free
  2657                           
  2658                           ;ui.c: 128: ticker_dly(1000);
  2659  001438  0E03               	movlw	3
  2660  00143A  0100               	movlb	0	; () banked
  2661  00143C  6FDA               	movwf	(ticker_dly@ms+1)& (0+255),b
  2662  00143E  0EE8               	movlw	232
  2663  001440  6FD9               	movwf	ticker_dly@ms& (0+255),b
  2664  001442  ECFD  F012         	call	_ticker_dly	;wreg free
  2665                           
  2666                           ;ui.c: 129: t8--;
  2667  001446  0101               	movlb	1	; () banked
  2668  001448  07F4               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  2669  00144A                     l9087:
  2670                           
  2671                           ; BSR set to: 1
  2672  00144A  0101               	movlb	1	; () banked
  2673  00144C  51F4               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2674  00144E  0101               	movlb	1	; () banked
  2675  001450  B4D8               	btfsc	status,2,c
  2676  001452  0012               	return	
  2677  001454  D7D5               	goto	l9073
  2678  001456                     __end_of_ui_disp_start_cs600:
  2679                           	opt stack 0
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           postdec1	equ	0xFE5
  2687                           plusw1	equ	0xFE3
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           plusw2	equ	0xFDB
  2691                           status	equ	0xFD8
  2692                           
  2693 ;; *************** function _ticker_dly *****************
  2694 ;; Defined at:
  2695 ;;		line 46 in file "src/soc/ticker.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  ms              2    0[BANK0 ] unsigned int 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:        2 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    4
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_ui_disp_start_cs600
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text2
  2725  0025FA                     __ptext2:
  2726                           	opt stack 0
  2727  0025FA                     _ticker_dly:
  2728                           	opt stack 25
  2729                           
  2730                           ;ticker.c: 48: dlyTicker=0;
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;incstack = 0
  2734  0025FA  0E00               	movlw	0
  2735  0025FC  6E26               	movwf	_dlyTicker+1,c
  2736  0025FE  0E00               	movlw	0
  2737  002600  6E25               	movwf	_dlyTicker,c
  2738                           
  2739                           ;ticker.c: 49: dlyTickerEn=1;
  2740  002602  0E01               	movlw	1
  2741  002604  6E33               	movwf	_dlyTickerEn,c
  2742                           
  2743                           ;ticker.c: 50: while(dlyTicker<ms){
  2744  002606  D001               	goto	l8863
  2745  002608                     l1613:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;ticker.c: 51: __nop();
  2749  002608  F000               	nop	
  2750  00260A                     l8863:
  2751  00260A  0100               	movlb	0	; () banked
  2752  00260C  51D9               	movf	ticker_dly@ms& (0+255),w,b
  2753  00260E  5C25               	subwf	_dlyTicker,w,c
  2754  002610  0100               	movlb	0	; () banked
  2755  002612  51DA               	movf	(ticker_dly@ms+1)& (0+255),w,b
  2756  002614  5826               	subwfb	_dlyTicker+1,w,c
  2757  002616  A0D8               	btfss	status,0,c
  2758  002618  D7F7               	goto	l1613
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;ticker.c: 52: }
  2762                           ;ticker.c: 53: dlyTickerEn=0;
  2763                           
  2764                           ; BSR set to: 0
  2765  00261A  0E00               	movlw	0
  2766  00261C  6E33               	movwf	_dlyTickerEn,c
  2767                           
  2768                           ;ticker.c: 54: dlyTicker=0;
  2769  00261E  0E00               	movlw	0
  2770  002620  6E26               	movwf	_dlyTicker+1,c
  2771  002622  0E00               	movlw	0
  2772  002624  6E25               	movwf	_dlyTicker,c
  2773                           
  2774                           ; BSR set to: 0
  2775  002626  0012               	return		;funcret
  2776  002628                     __end_of_ticker_dly:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postdec1	equ	0xFE5
  2785                           plusw1	equ	0xFE3
  2786                           fsr1h	equ	0xFE2
  2787                           fsr1l	equ	0xFE1
  2788                           plusw2	equ	0xFDB
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _lcd_show_string_l1 *****************
  2792 ;; Defined at:
  2793 ;;		line 524 in file "src/driver/lcd.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  str             2   19[BANK0 ] PTR unsigned char 
  2796 ;;		 -> ui_disp_start_cs600@buf(6), 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  t8              1   21[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        3 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    8
  2815 ;; This function calls:
  2816 ;;		_lcd_show_chr
  2817 ;; This function is called by:
  2818 ;;		_ui_disp_start_cs600
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text3
  2823  002216                     __ptext3:
  2824                           	opt stack 0
  2825  002216                     _lcd_show_string_l1:
  2826                           	opt stack 21
  2827                           
  2828                           ;lcd.c: 526: uint8_t t8=0;
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;incstack = 0
  2832  002216  0E00               	movlw	0
  2833  002218  0100               	movlb	0	; () banked
  2834  00221A  6FEE               	movwf	lcd_show_string_l1@t8& (0+255),b
  2835                           
  2836                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  2837  00221C  D011               	goto	l8833
  2838  00221E                     l8827:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  2842  00221E  C0EC  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2843  002222  C0ED  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2844  002226  50DF               	movf	indf2,w,c
  2845  002228  0100               	movlb	0	; () banked
  2846  00222A  6FE9               	movwf	lcd_show_chr@chr& (0+255),b
  2847  00222C  0100               	movlb	0	; () banked
  2848  00222E  51EE               	movf	lcd_show_string_l1@t8& (0+255),w,b
  2849  002230  0F04               	addlw	4
  2850  002232  EC2B  F00A         	call	_lcd_show_chr
  2851                           
  2852                           ;lcd.c: 529: str++;
  2853  002236  0100               	movlb	0	; () banked
  2854  002238  4BEC               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  2855  00223A  2BED               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;lcd.c: 530: t8++;
  2859  00223C  0100               	movlb	0	; () banked
  2860  00223E  2BEE               	incf	lcd_show_string_l1@t8& (0+255),f,b
  2861  002240                     l8833:
  2862                           
  2863                           ; BSR set to: 0
  2864  002240  C0EC  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2865  002244  C0ED  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2866  002248  50DF               	movf	indf2,w,c
  2867  00224A  B4D8               	btfsc	status,2,c
  2868  00224C  0012               	return	
  2869                           
  2870                           ; BSR set to: 0
  2871  00224E  0E03               	movlw	3
  2872  002250  0100               	movlb	0	; () banked
  2873  002252  65EE               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  2874  002254  D7E4               	goto	l8827
  2875  002256  0012               	return	
  2876  002258                     __end_of_lcd_show_string_l1:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           plusw1	equ	0xFE3
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           plusw2	equ	0xFDB
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _lcd_show_string_l0 *****************
  2895 ;; Defined at:
  2896 ;;		line 514 in file "src/driver/lcd.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  str             2   19[BANK0 ] PTR unsigned char 
  2899 ;;		 -> STR_1(5), 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  t8              1   21[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        3 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    8
  2918 ;; This function calls:
  2919 ;;		_lcd_show_chr
  2920 ;; This function is called by:
  2921 ;;		_ui_disp_start_cs600
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text4
  2926  00218E                     __ptext4:
  2927                           	opt stack 0
  2928  00218E                     _lcd_show_string_l0:
  2929                           	opt stack 21
  2930                           
  2931                           ;lcd.c: 516: uint8_t t8=0;
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;incstack = 0
  2935  00218E  0E00               	movlw	0
  2936  002190  0100               	movlb	0	; () banked
  2937  002192  6FEE               	movwf	lcd_show_string_l0@t8& (0+255),b
  2938                           
  2939                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  2940  002194  D010               	goto	l8805
  2941  002196                     l8799:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  2945  002196  C0EC  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2946  00219A  C0ED  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2947  00219E                     	if	0	;tblptru may be non-zero
  2948  00219E                     	endif
  2949  00219E                     	if	0	;tblptru may be non-zero
  2950  00219E                     	endif
  2951  00219E  0008               	tblrd		*
  2952  0021A0  CFF5 F0E9          	movff	tablat,lcd_show_chr@chr
  2953  0021A4  0100               	movlb	0	; () banked
  2954  0021A6  51EE               	movf	lcd_show_string_l0@t8& (0+255),w,b
  2955  0021A8  EC2B  F00A         	call	_lcd_show_chr
  2956                           
  2957                           ;lcd.c: 519: str++;
  2958  0021AC  0100               	movlb	0	; () banked
  2959  0021AE  4BEC               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  2960  0021B0  2BED               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;lcd.c: 520: t8++;
  2964  0021B2  0100               	movlb	0	; () banked
  2965  0021B4  2BEE               	incf	lcd_show_string_l0@t8& (0+255),f,b
  2966  0021B6                     l8805:
  2967                           
  2968                           ; BSR set to: 0
  2969  0021B6  C0EC  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2970  0021BA  C0ED  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2971  0021BE                     	if	0	;tblptru may be non-zero
  2972  0021BE                     	endif
  2973  0021BE                     	if	0	;tblptru may be non-zero
  2974  0021BE                     	endif
  2975  0021BE  0008               	tblrd		*
  2976  0021C0  50F5               	movf	tablat,w,c
  2977  0021C2  0900               	iorlw	0
  2978  0021C4  B4D8               	btfsc	status,2,c
  2979  0021C6  0012               	return	
  2980                           
  2981                           ; BSR set to: 0
  2982  0021C8  0E03               	movlw	3
  2983  0021CA  0100               	movlb	0	; () banked
  2984  0021CC  65EE               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  2985  0021CE  D7E3               	goto	l8799
  2986  0021D0  0012               	return	
  2987  0021D2                     __end_of_lcd_show_string_l0:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postdec1	equ	0xFE5
  2996                           plusw1	equ	0xFE3
  2997                           fsr1h	equ	0xFE2
  2998                           fsr1l	equ	0xFE1
  2999                           indf2	equ	0xFDF
  3000                           plusw2	equ	0xFDB
  3001                           fsr2h	equ	0xFDA
  3002                           fsr2l	equ	0xFD9
  3003                           status	equ	0xFD8
  3004                           
  3005 ;; *************** function _lcd_disp_logo *****************
  3006 ;; Defined at:
  3007 ;;		line 378 in file "src/driver/lcd.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  show            1    wreg     unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  show            1   31[COMRAM] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;Total ram usage:        1 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		_lcd_set_com_seg
  3030 ;; This function is called by:
  3031 ;;		_ui_disp_start_cs600
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text5
  3036  00250A                     __ptext5:
  3037                           	opt stack 0
  3038  00250A                     _lcd_disp_logo:
  3039                           	opt stack 23
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;incstack = 0
  3043                           ;lcd_disp_logo@show stored from wreg
  3044  00250A  6E20               	movwf	lcd_disp_logo@show,c
  3045                           
  3046                           ;lcd.c: 380: if(show)
  3047  00250C  5020               	movf	lcd_disp_logo@show,w,c
  3048  00250E  B4D8               	btfsc	status,2,c
  3049  002510  D00A               	goto	l8813
  3050                           
  3051                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  3052  002512  0E0D               	movlw	13
  3053  002514  0100               	movlb	0	; () banked
  3054  002516  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3055  002518  0E01               	movlw	1
  3056  00251A  0100               	movlb	0	; () banked
  3057  00251C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  3058  00251E  0E02               	movlw	2
  3059  002520  ECA9  F006         	call	_lcd_set_com_seg
  3060  002524  0012               	return	
  3061  002526                     l8813:
  3062                           
  3063                           ;lcd.c: 382: else
  3064                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  3065  002526  0E0D               	movlw	13
  3066  002528  0100               	movlb	0	; () banked
  3067  00252A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3068  00252C  0E00               	movlw	0
  3069  00252E  0100               	movlb	0	; () banked
  3070  002530  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  3071  002532  0E02               	movlw	2
  3072  002534  ECA9  F006         	call	_lcd_set_com_seg
  3073  002538  0012               	return	
  3074  00253A                     __end_of_lcd_disp_logo:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           postdec1	equ	0xFE5
  3083                           plusw1	equ	0xFE3
  3084                           fsr1h	equ	0xFE2
  3085                           fsr1l	equ	0xFE1
  3086                           indf2	equ	0xFDF
  3087                           plusw2	equ	0xFDB
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _ui_disp_rtc_mm_ss *****************
  3093 ;; Defined at:
  3094 ;;		line 133 in file "src/api/ui.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  buf            10    0[BANK1 ] unsigned char [10]
  3099 ;;  t8              1   10[BANK1 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:       11 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    9
  3116 ;; This function calls:
  3117 ;;		_lcd_disp_level
  3118 ;;		_lcd_disp_refresh
  3119 ;;		_lcd_show_dp
  3120 ;;		_lcd_show_string
  3121 ;;		_m_int8_2_hex
  3122 ;;		_rtc_get
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text6
  3129  0011C0                     __ptext6:
  3130                           	opt stack 0
  3131  0011C0                     _ui_disp_rtc_mm_ss:
  3132                           	opt stack 21
  3133                           
  3134                           ;ui.c: 135: uint8_t buf[10];
  3135                           ;ui.c: 136: uint8_t t8;
  3136                           ;ui.c: 137: if(RTCCFGbits.HALFSEC){
  3137                           
  3138                           ;incstack = 0
  3139  0011C0  010F               	movlb	15	; () banked
  3140  0011C2  A75F               	btfss	95,3,b	;volatile
  3141  0011C4  D007               	goto	l9093
  3142                           
  3143                           ; BSR set to: 15
  3144                           ;ui.c: 138: lcd_show_dp(1,0);
  3145  0011C6  0E00               	movlw	0
  3146  0011C8  0100               	movlb	0	; () banked
  3147  0011CA  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  3148  0011CC  0E01               	movlw	1
  3149  0011CE  ECAE  F00D         	call	_lcd_show_dp
  3150                           
  3151                           ;ui.c: 139: }else{
  3152  0011D2  D049               	goto	l9119
  3153  0011D4                     l9093:
  3154                           
  3155                           ;ui.c: 140: rtc_get();
  3156  0011D4  EC2C  F011         	call	_rtc_get	;wreg free
  3157                           
  3158                           ;ui.c: 141: t8=glRtc.hour;
  3159  0011D8  C086  F1F7         	movff	_glRtc+3,ui_disp_rtc_mm_ss@t8
  3160                           
  3161                           ;ui.c: 142: m_int8_2_hex(buf,t8);
  3162  0011DC  0EED               	movlw	low ui_disp_rtc_mm_ss@buf
  3163  0011DE  0100               	movlb	0	; () banked
  3164  0011E0  6FD9               	movwf	m_int8_2_hex@str& (0+255),b
  3165  0011E2  0E01               	movlw	high ui_disp_rtc_mm_ss@buf
  3166  0011E4  0100               	movlb	0	; () banked
  3167  0011E6  6FDA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3168  0011E8  C1F7  F0DB         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  3169  0011EC  ECCF  F00F         	call	_m_int8_2_hex	;wreg free
  3170                           
  3171                           ;ui.c: 143: t8=glRtc.minute;
  3172  0011F0  C087  F1F7         	movff	_glRtc+4,ui_disp_rtc_mm_ss@t8
  3173                           
  3174                           ;ui.c: 144: m_int8_2_hex(buf+2,t8);
  3175  0011F4  0EEF               	movlw	low (ui_disp_rtc_mm_ss@buf+2)
  3176  0011F6  0100               	movlb	0	; () banked
  3177  0011F8  6FD9               	movwf	m_int8_2_hex@str& (0+255),b
  3178  0011FA  0E01               	movlw	high (ui_disp_rtc_mm_ss@buf+2)
  3179  0011FC  0100               	movlb	0	; () banked
  3180  0011FE  6FDA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3181  001200  C1F7  F0DB         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  3182  001204  ECCF  F00F         	call	_m_int8_2_hex	;wreg free
  3183                           
  3184                           ;ui.c: 146: t8=glRtc.month;
  3185  001208  C084  F1F7         	movff	_glRtc+1,ui_disp_rtc_mm_ss@t8
  3186                           
  3187                           ;ui.c: 147: m_int8_2_hex(buf+4,t8);
  3188  00120C  0EF1               	movlw	low (ui_disp_rtc_mm_ss@buf+4)
  3189  00120E  0100               	movlb	0	; () banked
  3190  001210  6FD9               	movwf	m_int8_2_hex@str& (0+255),b
  3191  001212  0E01               	movlw	high (ui_disp_rtc_mm_ss@buf+4)
  3192  001214  0100               	movlb	0	; () banked
  3193  001216  6FDA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3194  001218  C1F7  F0DB         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  3195  00121C  ECCF  F00F         	call	_m_int8_2_hex	;wreg free
  3196                           
  3197                           ;ui.c: 148: t8=glRtc.date;
  3198  001220  C085  F1F7         	movff	_glRtc+2,ui_disp_rtc_mm_ss@t8
  3199                           
  3200                           ;ui.c: 149: m_int8_2_hex(buf+6,t8);
  3201  001224  0EF3               	movlw	low (ui_disp_rtc_mm_ss@buf+6)
  3202  001226  0100               	movlb	0	; () banked
  3203  001228  6FD9               	movwf	m_int8_2_hex@str& (0+255),b
  3204  00122A  0E01               	movlw	high (ui_disp_rtc_mm_ss@buf+6)
  3205  00122C  0100               	movlb	0	; () banked
  3206  00122E  6FDA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3207  001230  C1F7  F0DB         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  3208  001234  ECCF  F00F         	call	_m_int8_2_hex	;wreg free
  3209                           
  3210                           ;ui.c: 150: buf[8]='\0';
  3211  001238  0E00               	movlw	0
  3212  00123A  0101               	movlb	1	; () banked
  3213  00123C  6FF5               	movwf	(ui_disp_rtc_mm_ss@buf+8)& (0+255),b
  3214                           
  3215                           ; BSR set to: 1
  3216                           ;ui.c: 152: lcd_show_string(buf);
  3217  00123E  0EED               	movlw	low ui_disp_rtc_mm_ss@buf
  3218  001240  0100               	movlb	0	; () banked
  3219  001242  6FEC               	movwf	lcd_show_string@str& (0+255),b
  3220  001244  0E01               	movlw	high ui_disp_rtc_mm_ss@buf
  3221  001246  0100               	movlb	0	; () banked
  3222  001248  6FED               	movwf	(lcd_show_string@str+1)& (0+255),b
  3223  00124A  EC77  F00D         	call	_lcd_show_string	;wreg free
  3224                           
  3225                           ;ui.c: 153: lcd_show_dp(1,1);
  3226  00124E  0E01               	movlw	1
  3227  001250  0100               	movlb	0	; () banked
  3228  001252  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  3229  001254  0E01               	movlw	1
  3230  001256  ECAE  F00D         	call	_lcd_show_dp
  3231                           
  3232                           ;ui.c: 154: lcd_show_dp(5,1);
  3233  00125A  0E01               	movlw	1
  3234  00125C  0100               	movlb	0	; () banked
  3235  00125E  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  3236  001260  0E05               	movlw	5
  3237  001262  ECAE  F00D         	call	_lcd_show_dp
  3238  001266                     l9119:
  3239                           
  3240                           ;ui.c: 155: }
  3241                           ;ui.c: 156: lcd_disp_level(60);
  3242  001266  0E3C               	movlw	60
  3243  001268  EC29  F010         	call	_lcd_disp_level
  3244                           
  3245                           ;ui.c: 157: lcd_disp_refresh();
  3246  00126C  EC84  F00E         	call	_lcd_disp_refresh	;wreg free
  3247  001270  0012               	return		;funcret
  3248  001272                     __end_of_ui_disp_rtc_mm_ss:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           postdec1	equ	0xFE5
  3257                           plusw1	equ	0xFE3
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           plusw2	equ	0xFDB
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _rtc_get *****************
  3267 ;; Defined at:
  3268 ;;		line 74 in file "src/soc/rtc.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  t8              1   31[COMRAM] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        1 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_ui_disp_rtc_mm_ss
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text7
  3297  002258                     __ptext7:
  3298                           	opt stack 0
  3299  002258                     _rtc_get:
  3300                           	opt stack 25
  3301                           
  3302                           ;rtc.c: 76: uint8_t t8;
  3303                           ;rtc.c: 77: stRTCCFGbits.RTCPTR=3;
  3304                           
  3305                           ;incstack = 0
  3306  002258  0E03               	movlw	3
  3307  00225A  010F               	movlb	15	; () banked
  3308  00225C  135F               	iorwf	95,f,b	;volatile
  3309                           
  3310                           ; BSR set to: 15
  3311                           ;rtc.c: 78: glRtc.year=RTCVALL;
  3312  00225E  CF5C F083          	movff	3932,_glRtc	;volatile
  3313                           
  3314                           ; BSR set to: 15
  3315                           ;rtc.c: 80: t8=RTCVALH;
  3316  002262  CF5D F020          	movff	3933,rtc_get@t8	;volatile
  3317                           
  3318                           ;rtc.c: 81: stRTCCFGbits.RTCPTR=2;
  3319  002266  010F               	movlb	15	; () banked
  3320  002268  515F               	movf	95,w,b	;volatile
  3321  00226A  0BFC               	andlw	-4
  3322  00226C  0902               	iorlw	2
  3323  00226E  6F5F               	movwf	95,b	;volatile
  3324                           
  3325                           ; BSR set to: 15
  3326                           ;rtc.c: 82: glRtc.date=RTCVALL;
  3327  002270  CF5C F085          	movff	3932,_glRtc+2	;volatile
  3328                           
  3329                           ; BSR set to: 15
  3330                           ;rtc.c: 83: glRtc.month=RTCVALH;
  3331  002274  CF5D F084          	movff	3933,_glRtc+1	;volatile
  3332                           
  3333                           ;rtc.c: 84: stRTCCFGbits.RTCPTR=1;
  3334  002278  010F               	movlb	15	; () banked
  3335  00227A  515F               	movf	95,w,b	;volatile
  3336  00227C  0BFC               	andlw	-4
  3337  00227E  0901               	iorlw	1
  3338  002280  6F5F               	movwf	95,b	;volatile
  3339                           
  3340                           ; BSR set to: 15
  3341                           ;rtc.c: 85: glRtc.hour=RTCVALL;
  3342  002282  CF5C F086          	movff	3932,_glRtc+3	;volatile
  3343                           
  3344                           ; BSR set to: 15
  3345                           ;rtc.c: 86: glRtc.day=RTCVALH;
  3346  002286  CF5D F089          	movff	3933,_glRtc+6	;volatile
  3347                           
  3348                           ;rtc.c: 87: stRTCCFGbits.RTCPTR=0;
  3349  00228A  0EFC               	movlw	-4
  3350  00228C  010F               	movlb	15	; () banked
  3351  00228E  175F               	andwf	95,f,b	;volatile
  3352                           
  3353                           ; BSR set to: 15
  3354                           ;rtc.c: 88: glRtc.second=RTCVALL;
  3355  002290  CF5C F088          	movff	3932,_glRtc+5	;volatile
  3356                           
  3357                           ; BSR set to: 15
  3358                           ;rtc.c: 89: glRtc.minute=RTCVALH;
  3359  002294  CF5D F087          	movff	3933,_glRtc+4	;volatile
  3360                           
  3361                           ; BSR set to: 15
  3362  002298  0012               	return		;funcret
  3363  00229A                     __end_of_rtc_get:
  3364                           	opt stack 0
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           postdec1	equ	0xFE5
  3372                           plusw1	equ	0xFE3
  3373                           fsr1h	equ	0xFE2
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           plusw2	equ	0xFDB
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _m_int8_2_hex *****************
  3382 ;; Defined at:
  3383 ;;		line 243 in file "src/depend/m_string.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  str             2    0[BANK0 ] PTR unsigned char 
  3386 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  3387 ;;  b               1    2[BANK0 ] unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  t8              1   31[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        4 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_ui_disp_start_cs600
  3410 ;;		_ui_disp_rtc_mm_ss
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text8
  3415  001F9E                     __ptext8:
  3416                           	opt stack 0
  3417  001F9E                     _m_int8_2_hex:
  3418                           	opt stack 25
  3419                           
  3420                           ;m_string.c: 245: uint8_t t8;
  3421                           ;m_string.c: 246: t8=b;
  3422                           
  3423                           ; BSR set to: 15
  3424                           ;incstack = 0
  3425  001F9E  C0DB  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3426                           
  3427                           ;m_string.c: 247: t8>>=4;
  3428  001FA2  3A20               	swapf	m_int8_2_hex@t8,f,c
  3429  001FA4  0E0F               	movlw	15
  3430  001FA6  1620               	andwf	m_int8_2_hex@t8,f,c
  3431                           
  3432                           ;m_string.c: 248: t8 &= 0x0f;
  3433  001FA8  0E0F               	movlw	15
  3434  001FAA  1620               	andwf	m_int8_2_hex@t8,f,c
  3435                           
  3436                           ;m_string.c: 249: str[0]=HexTable[t8];
  3437  001FAC  5020               	movf	m_int8_2_hex@t8,w,c
  3438  001FAE  0D01               	mullw	1
  3439  001FB0  0E0C               	movlw	low _HexTable
  3440  001FB2  24F3               	addwf	prodl,w,c
  3441  001FB4  6EF6               	movwf	tblptrl,c
  3442  001FB6  0EFF               	movlw	high _HexTable
  3443  001FB8  20F4               	addwfc	prodh,w,c
  3444  001FBA  6EF7               	movwf	tblptrh,c
  3445  001FBC                     	if	0	;There are less than 3 active tblptr bytes
  3446  001FBC                     	endif
  3447  001FBC  C0D9  FFD9         	movff	m_int8_2_hex@str,fsr2l
  3448  001FC0  C0DA  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  3449  001FC4  0008               	tblrd		*
  3450  001FC6  CFF5 FFDF          	movff	tablat,indf2
  3451                           
  3452                           ;m_string.c: 251: t8=b;
  3453  001FCA  C0DB  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3454                           
  3455                           ;m_string.c: 253: t8 &= 0x0f;
  3456  001FCE  0E0F               	movlw	15
  3457  001FD0  1620               	andwf	m_int8_2_hex@t8,f,c
  3458                           
  3459                           ;m_string.c: 254: str[1]=HexTable[t8];
  3460  001FD2  5020               	movf	m_int8_2_hex@t8,w,c
  3461  001FD4  0D01               	mullw	1
  3462  001FD6  0E0C               	movlw	low _HexTable
  3463  001FD8  24F3               	addwf	prodl,w,c
  3464  001FDA  6EF6               	movwf	tblptrl,c
  3465  001FDC  0EFF               	movlw	high _HexTable
  3466  001FDE  20F4               	addwfc	prodh,w,c
  3467  001FE0  6EF7               	movwf	tblptrh,c
  3468  001FE2                     	if	0	;There are less than 3 active tblptr bytes
  3469  001FE2                     	endif
  3470  001FE2  0100               	movlb	0	; () banked
  3471  001FE4  EE20 F001          	lfsr	2,1
  3472  001FE8  51D9               	movf	m_int8_2_hex@str& (0+255),w,b
  3473  001FEA  26D9               	addwf	fsr2l,f,c
  3474  001FEC  51DA               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  3475  001FEE  22DA               	addwfc	fsr2h,f,c
  3476  001FF0  0008               	tblrd		*
  3477  001FF2  CFF5 FFDF          	movff	tablat,indf2
  3478                           
  3479                           ; BSR set to: 0
  3480  001FF6  0012               	return		;funcret
  3481  001FF8                     __end_of_m_int8_2_hex:
  3482                           	opt stack 0
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           postdec1	equ	0xFE5
  3492                           plusw1	equ	0xFE3
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           plusw2	equ	0xFDB
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function _lcd_disp_level *****************
  3502 ;; Defined at:
  3503 ;;		line 118 in file "src/driver/lcd.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  level           1    wreg     unsigned char 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  level           1   18[BANK0 ] unsigned char 
  3508 ;;  i               1   19[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    7
  3525 ;; This function calls:
  3526 ;;		_lcd_disp_level_bar
  3527 ;; This function is called by:
  3528 ;;		_ui_disp_start_cs600
  3529 ;;		_ui_disp_rtc_mm_ss
  3530 ;;		_main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text9
  3535  002052                     __ptext9:
  3536                           	opt stack 0
  3537  002052                     _lcd_disp_level:
  3538                           	opt stack 22
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;incstack = 0
  3542                           ;lcd_disp_level@level stored from wreg
  3543  002052  0100               	movlb	0	; () banked
  3544  002054  6FEB               	movwf	lcd_disp_level@level& (0+255),b
  3545                           
  3546                           ;lcd.c: 120: uint8_t i;
  3547                           ;lcd.c: 121: if(level>=99)level=99;
  3548  002056  0E62               	movlw	98
  3549  002058  0100               	movlb	0	; () banked
  3550  00205A  65EB               	cpfsgt	lcd_disp_level@level& (0+255),b
  3551  00205C  D003               	goto	l8841
  3552                           
  3553                           ; BSR set to: 0
  3554  00205E  0E63               	movlw	99
  3555  002060  0100               	movlb	0	; () banked
  3556  002062  6FEB               	movwf	lcd_disp_level@level& (0+255),b
  3557  002064                     l8841:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;lcd.c: 122: level/=2;
  3561  002064  0100               	movlb	0	; () banked
  3562  002066  90D8               	bcf	status,0,c
  3563  002068  33EB               	rrcf	lcd_disp_level@level& (0+255),f,b
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;lcd.c: 123: for(i=0;i<level;i++){
  3567  00206A  0E00               	movlw	0
  3568  00206C  0100               	movlb	0	; () banked
  3569  00206E  6FEC               	movwf	lcd_disp_level@i& (0+255),b
  3570  002070  D008               	goto	l8849
  3571  002072                     l8845:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  3575  002072  0E01               	movlw	1
  3576  002074  6E20               	movwf	lcd_disp_level_bar@show,c
  3577  002076  0100               	movlb	0	; () banked
  3578  002078  51EC               	movf	lcd_disp_level@i& (0+255),w,b
  3579  00207A  EC70  F000         	call	_lcd_disp_level_bar
  3580  00207E  0100               	movlb	0	; () banked
  3581  002080  2BEC               	incf	lcd_disp_level@i& (0+255),f,b
  3582  002082                     l8849:
  3583                           
  3584                           ; BSR set to: 0
  3585  002082  0100               	movlb	0	; () banked
  3586  002084  51EB               	movf	lcd_disp_level@level& (0+255),w,b
  3587  002086  0100               	movlb	0	; () banked
  3588  002088  5DEC               	subwf	lcd_disp_level@i& (0+255),w,b
  3589  00208A  A0D8               	btfss	status,0,c
  3590  00208C  D7F2               	goto	l8845
  3591  00208E                     l8851:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;lcd.c: 125: }
  3595                           ;lcd.c: 126: for(;i<50;i++){
  3596  00208E  0E31               	movlw	49
  3597  002090  0100               	movlb	0	; () banked
  3598  002092  65EC               	cpfsgt	lcd_disp_level@i& (0+255),b
  3599  002094  D001               	goto	l8855
  3600  002096  0012               	return	
  3601  002098                     l8855:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  3605  002098  0E00               	movlw	0
  3606  00209A  6E20               	movwf	lcd_disp_level_bar@show,c
  3607  00209C  0100               	movlb	0	; () banked
  3608  00209E  51EC               	movf	lcd_disp_level@i& (0+255),w,b
  3609  0020A0  EC70  F000         	call	_lcd_disp_level_bar
  3610  0020A4  0100               	movlb	0	; () banked
  3611  0020A6  2BEC               	incf	lcd_disp_level@i& (0+255),f,b
  3612  0020A8  D7F2               	goto	l8851
  3613  0020AA                     __end_of_lcd_disp_level:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec1	equ	0xFE5
  3624                           plusw1	equ	0xFE3
  3625                           fsr1h	equ	0xFE2
  3626                           fsr1l	equ	0xFE1
  3627                           indf2	equ	0xFDF
  3628                           plusw2	equ	0xFDB
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _lcd_disp_level_bar *****************
  3634 ;; Defined at:
  3635 ;;		line 46 in file "src/driver/lcd.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  bar             1    wreg     unsigned char 
  3638 ;;  show            1   31[COMRAM] unsigned char 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  bar             1   17[BANK0 ] unsigned char 
  3641 ;;  __bar           1   16[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    6
  3658 ;; This function calls:
  3659 ;;		_lcd_set_com_seg
  3660 ;; This function is called by:
  3661 ;;		_lcd_disp_level
  3662 ;;		_lcd_disp_level_off
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text10
  3667  0000E0                     __ptext10:
  3668                           	opt stack 0
  3669  0000E0                     _lcd_disp_level_bar:
  3670                           	opt stack 22
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;incstack = 0
  3674                           ;lcd_disp_level_bar@bar stored from wreg
  3675  0000E0  0100               	movlb	0	; () banked
  3676  0000E2  6FEA               	movwf	lcd_disp_level_bar@bar& (0+255),b
  3677                           
  3678                           ;lcd.c: 49: uint8_t __bar;
  3679                           ;lcd.c: 50: if(bar>49)return;
  3680  0000E4  0E31               	movlw	49
  3681  0000E6  0100               	movlb	0	; () banked
  3682  0000E8  65EA               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  3683  0000EA  D001               	goto	l8597
  3684  0000EC  0012               	return	
  3685  0000EE                     l8597:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;lcd.c: 51: __bar=49-bar;
  3689  0000EE  0100               	movlb	0	; () banked
  3690  0000F0  51EA               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  3691  0000F2  0800               	sublw	0
  3692  0000F4  0F31               	addlw	49
  3693  0000F6  0100               	movlb	0	; () banked
  3694  0000F8  6FE9               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  3695                           
  3696                           ;lcd.c: 52: switch(__bar){
  3697  0000FA  D1C2               	goto	l8701
  3698  0000FC                     l8599:
  3699                           
  3700                           ; BSR set to: 0
  3701  0000FC  0E2E               	movlw	46
  3702  0000FE  0100               	movlb	0	; () banked
  3703  000100  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3704  000102  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3705  000106  0E00               	movlw	0
  3706  000108  ECA9  F006         	call	_lcd_set_com_seg
  3707  00010C  0012               	return	
  3708  00010E                     l8601:
  3709  00010E  0E2E               	movlw	46
  3710  000110  0100               	movlb	0	; () banked
  3711  000112  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3712  000114  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3713  000118  0E01               	movlw	1
  3714  00011A  ECA9  F006         	call	_lcd_set_com_seg
  3715  00011E  0012               	return	
  3716  000120                     l8603:
  3717  000120  0E2E               	movlw	46
  3718  000122  0100               	movlb	0	; () banked
  3719  000124  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3720  000126  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3721  00012A  0E02               	movlw	2
  3722  00012C  ECA9  F006         	call	_lcd_set_com_seg
  3723  000130  0012               	return	
  3724  000132                     l8605:
  3725  000132  0E2E               	movlw	46
  3726  000134  0100               	movlb	0	; () banked
  3727  000136  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3728  000138  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3729  00013C  0E03               	movlw	3
  3730  00013E  ECA9  F006         	call	_lcd_set_com_seg
  3731  000142  0012               	return	
  3732  000144                     l8607:
  3733  000144  0E2F               	movlw	47
  3734  000146  0100               	movlb	0	; () banked
  3735  000148  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3736  00014A  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3737  00014E  0E03               	movlw	3
  3738  000150  ECA9  F006         	call	_lcd_set_com_seg
  3739  000154  0012               	return	
  3740  000156                     l8609:
  3741  000156  0E2F               	movlw	47
  3742  000158  0100               	movlb	0	; () banked
  3743  00015A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3744  00015C  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3745  000160  0E02               	movlw	2
  3746  000162  ECA9  F006         	call	_lcd_set_com_seg
  3747  000166  0012               	return	
  3748  000168                     l8611:
  3749  000168  0E2F               	movlw	47
  3750  00016A  0100               	movlb	0	; () banked
  3751  00016C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3752  00016E  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3753  000172  0E01               	movlw	1
  3754  000174  ECA9  F006         	call	_lcd_set_com_seg
  3755  000178  0012               	return	
  3756  00017A                     l8613:
  3757  00017A  0E2F               	movlw	47
  3758  00017C  0100               	movlb	0	; () banked
  3759  00017E  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3760  000180  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3761  000184  0E00               	movlw	0
  3762  000186  ECA9  F006         	call	_lcd_set_com_seg
  3763  00018A  0012               	return	
  3764  00018C                     l8615:
  3765  00018C  0E1F               	movlw	31
  3766  00018E  0100               	movlb	0	; () banked
  3767  000190  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3768  000192  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3769  000196  0E00               	movlw	0
  3770  000198  ECA9  F006         	call	_lcd_set_com_seg
  3771  00019C  0012               	return	
  3772  00019E                     l8617:
  3773  00019E  0E1F               	movlw	31
  3774  0001A0  0100               	movlb	0	; () banked
  3775  0001A2  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3776  0001A4  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3777  0001A8  0E01               	movlw	1
  3778  0001AA  ECA9  F006         	call	_lcd_set_com_seg
  3779  0001AE  0012               	return	
  3780  0001B0                     l8619:
  3781  0001B0  0E1F               	movlw	31
  3782  0001B2  0100               	movlb	0	; () banked
  3783  0001B4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3784  0001B6  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3785  0001BA  0E02               	movlw	2
  3786  0001BC  ECA9  F006         	call	_lcd_set_com_seg
  3787  0001C0  0012               	return	
  3788  0001C2                     l8621:
  3789  0001C2  0E1F               	movlw	31
  3790  0001C4  0100               	movlb	0	; () banked
  3791  0001C6  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3792  0001C8  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3793  0001CC  0E03               	movlw	3
  3794  0001CE  ECA9  F006         	call	_lcd_set_com_seg
  3795  0001D2  0012               	return	
  3796  0001D4                     l8623:
  3797  0001D4  0E00               	movlw	0
  3798  0001D6  0100               	movlb	0	; () banked
  3799  0001D8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3800  0001DA  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3801  0001DE  0E03               	movlw	3
  3802  0001E0  ECA9  F006         	call	_lcd_set_com_seg
  3803  0001E4  0012               	return	
  3804  0001E6                     l8625:
  3805  0001E6  0E00               	movlw	0
  3806  0001E8  0100               	movlb	0	; () banked
  3807  0001EA  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3808  0001EC  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3809  0001F0  0E02               	movlw	2
  3810  0001F2  ECA9  F006         	call	_lcd_set_com_seg
  3811  0001F6  0012               	return	
  3812  0001F8                     l8627:
  3813  0001F8  0E00               	movlw	0
  3814  0001FA  0100               	movlb	0	; () banked
  3815  0001FC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3816  0001FE  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3817  000202  0E01               	movlw	1
  3818  000204  ECA9  F006         	call	_lcd_set_com_seg
  3819  000208  0012               	return	
  3820  00020A                     l8629:
  3821  00020A  0E00               	movlw	0
  3822  00020C  0100               	movlb	0	; () banked
  3823  00020E  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3824  000210  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3825  000214  0E00               	movlw	0
  3826  000216  ECA9  F006         	call	_lcd_set_com_seg
  3827  00021A  0012               	return	
  3828  00021C                     l8631:
  3829  00021C  0E01               	movlw	1
  3830  00021E  0100               	movlb	0	; () banked
  3831  000220  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3832  000222  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3833  000226  0E00               	movlw	0
  3834  000228  ECA9  F006         	call	_lcd_set_com_seg
  3835  00022C  0012               	return	
  3836  00022E                     l8633:
  3837  00022E  0E01               	movlw	1
  3838  000230  0100               	movlb	0	; () banked
  3839  000232  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3840  000234  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3841  000238  0E01               	movlw	1
  3842  00023A  ECA9  F006         	call	_lcd_set_com_seg
  3843  00023E  0012               	return	
  3844  000240                     l8635:
  3845  000240  0E01               	movlw	1
  3846  000242  0100               	movlb	0	; () banked
  3847  000244  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3848  000246  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3849  00024A  0E02               	movlw	2
  3850  00024C  ECA9  F006         	call	_lcd_set_com_seg
  3851  000250  0012               	return	
  3852  000252                     l8637:
  3853  000252  0E01               	movlw	1
  3854  000254  0100               	movlb	0	; () banked
  3855  000256  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3856  000258  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3857  00025C  0E03               	movlw	3
  3858  00025E  ECA9  F006         	call	_lcd_set_com_seg
  3859  000262  0012               	return	
  3860  000264                     l8639:
  3861  000264  0E02               	movlw	2
  3862  000266  0100               	movlb	0	; () banked
  3863  000268  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3864  00026A  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3865  00026E  0E03               	movlw	3
  3866  000270  ECA9  F006         	call	_lcd_set_com_seg
  3867  000274  0012               	return	
  3868  000276                     l8641:
  3869  000276  0E02               	movlw	2
  3870  000278  0100               	movlb	0	; () banked
  3871  00027A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3872  00027C  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3873  000280  0E02               	movlw	2
  3874  000282  ECA9  F006         	call	_lcd_set_com_seg
  3875  000286  0012               	return	
  3876  000288                     l8643:
  3877  000288  0E02               	movlw	2
  3878  00028A  0100               	movlb	0	; () banked
  3879  00028C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3880  00028E  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3881  000292  0E01               	movlw	1
  3882  000294  ECA9  F006         	call	_lcd_set_com_seg
  3883  000298  0012               	return	
  3884  00029A                     l8645:
  3885  00029A  0E02               	movlw	2
  3886  00029C  0100               	movlb	0	; () banked
  3887  00029E  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3888  0002A0  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3889  0002A4  0E00               	movlw	0
  3890  0002A6  ECA9  F006         	call	_lcd_set_com_seg
  3891  0002AA  0012               	return	
  3892  0002AC                     l8647:
  3893  0002AC  0E03               	movlw	3
  3894  0002AE  0100               	movlb	0	; () banked
  3895  0002B0  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3896  0002B2  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3897  0002B6  0E00               	movlw	0
  3898  0002B8  ECA9  F006         	call	_lcd_set_com_seg
  3899  0002BC  0012               	return	
  3900  0002BE                     l8649:
  3901  0002BE  0E03               	movlw	3
  3902  0002C0  0100               	movlb	0	; () banked
  3903  0002C2  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3904  0002C4  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3905  0002C8  0E01               	movlw	1
  3906  0002CA  ECA9  F006         	call	_lcd_set_com_seg
  3907  0002CE  0012               	return	
  3908  0002D0                     l8651:
  3909  0002D0  0E03               	movlw	3
  3910  0002D2  0100               	movlb	0	; () banked
  3911  0002D4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3912  0002D6  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3913  0002DA  0E02               	movlw	2
  3914  0002DC  ECA9  F006         	call	_lcd_set_com_seg
  3915  0002E0  0012               	return	
  3916  0002E2                     l8653:
  3917  0002E2  0E03               	movlw	3
  3918  0002E4  0100               	movlb	0	; () banked
  3919  0002E6  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3920  0002E8  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3921  0002EC  0E03               	movlw	3
  3922  0002EE  ECA9  F006         	call	_lcd_set_com_seg
  3923  0002F2  0012               	return	
  3924  0002F4                     l8655:
  3925  0002F4  0E04               	movlw	4
  3926  0002F6  0100               	movlb	0	; () banked
  3927  0002F8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3928  0002FA  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3929  0002FE  0E03               	movlw	3
  3930  000300  ECA9  F006         	call	_lcd_set_com_seg
  3931  000304  0012               	return	
  3932  000306                     l8657:
  3933  000306  0E04               	movlw	4
  3934  000308  0100               	movlb	0	; () banked
  3935  00030A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3936  00030C  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3937  000310  0E02               	movlw	2
  3938  000312  ECA9  F006         	call	_lcd_set_com_seg
  3939  000316  0012               	return	
  3940  000318                     l8659:
  3941  000318  0E04               	movlw	4
  3942  00031A  0100               	movlb	0	; () banked
  3943  00031C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3944  00031E  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3945  000322  0E01               	movlw	1
  3946  000324  ECA9  F006         	call	_lcd_set_com_seg
  3947  000328  0012               	return	
  3948  00032A                     l8661:
  3949  00032A  0E04               	movlw	4
  3950  00032C  0100               	movlb	0	; () banked
  3951  00032E  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3952  000330  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3953  000334  0E00               	movlw	0
  3954  000336  ECA9  F006         	call	_lcd_set_com_seg
  3955  00033A  0012               	return	
  3956  00033C                     l8663:
  3957  00033C  0E05               	movlw	5
  3958  00033E  0100               	movlb	0	; () banked
  3959  000340  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3960  000342  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3961  000346  0E00               	movlw	0
  3962  000348  ECA9  F006         	call	_lcd_set_com_seg
  3963  00034C  0012               	return	
  3964  00034E                     l8665:
  3965  00034E  0E05               	movlw	5
  3966  000350  0100               	movlb	0	; () banked
  3967  000352  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3968  000354  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3969  000358  0E01               	movlw	1
  3970  00035A  ECA9  F006         	call	_lcd_set_com_seg
  3971  00035E  0012               	return	
  3972  000360                     l8667:
  3973  000360  0E05               	movlw	5
  3974  000362  0100               	movlb	0	; () banked
  3975  000364  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3976  000366  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3977  00036A  0E02               	movlw	2
  3978  00036C  ECA9  F006         	call	_lcd_set_com_seg
  3979  000370  0012               	return	
  3980  000372                     l8669:
  3981  000372  0E05               	movlw	5
  3982  000374  0100               	movlb	0	; () banked
  3983  000376  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3984  000378  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3985  00037C  0E03               	movlw	3
  3986  00037E  ECA9  F006         	call	_lcd_set_com_seg
  3987  000382  0012               	return	
  3988  000384                     l8671:
  3989  000384  0E06               	movlw	6
  3990  000386  0100               	movlb	0	; () banked
  3991  000388  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3992  00038A  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3993  00038E  0E03               	movlw	3
  3994  000390  ECA9  F006         	call	_lcd_set_com_seg
  3995  000394  0012               	return	
  3996  000396                     l8673:
  3997  000396  0E06               	movlw	6
  3998  000398  0100               	movlb	0	; () banked
  3999  00039A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4000  00039C  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4001  0003A0  0E02               	movlw	2
  4002  0003A2  ECA9  F006         	call	_lcd_set_com_seg
  4003  0003A6  0012               	return	
  4004  0003A8                     l8675:
  4005  0003A8  0E06               	movlw	6
  4006  0003AA  0100               	movlb	0	; () banked
  4007  0003AC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4008  0003AE  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4009  0003B2  0E01               	movlw	1
  4010  0003B4  ECA9  F006         	call	_lcd_set_com_seg
  4011  0003B8  0012               	return	
  4012  0003BA                     l8677:
  4013  0003BA  0E06               	movlw	6
  4014  0003BC  0100               	movlb	0	; () banked
  4015  0003BE  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4016  0003C0  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4017  0003C4  0E00               	movlw	0
  4018  0003C6  ECA9  F006         	call	_lcd_set_com_seg
  4019  0003CA  0012               	return	
  4020  0003CC                     l8679:
  4021  0003CC  0E07               	movlw	7
  4022  0003CE  0100               	movlb	0	; () banked
  4023  0003D0  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4024  0003D2  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4025  0003D6  0E00               	movlw	0
  4026  0003D8  ECA9  F006         	call	_lcd_set_com_seg
  4027  0003DC  0012               	return	
  4028  0003DE                     l8681:
  4029  0003DE  0E07               	movlw	7
  4030  0003E0  0100               	movlb	0	; () banked
  4031  0003E2  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4032  0003E4  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4033  0003E8  0E01               	movlw	1
  4034  0003EA  ECA9  F006         	call	_lcd_set_com_seg
  4035  0003EE  0012               	return	
  4036  0003F0                     l8683:
  4037  0003F0  0E07               	movlw	7
  4038  0003F2  0100               	movlb	0	; () banked
  4039  0003F4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4040  0003F6  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4041  0003FA  0E02               	movlw	2
  4042  0003FC  ECA9  F006         	call	_lcd_set_com_seg
  4043  000400  0012               	return	
  4044  000402                     l8685:
  4045  000402  0E07               	movlw	7
  4046  000404  0100               	movlb	0	; () banked
  4047  000406  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4048  000408  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4049  00040C  0E03               	movlw	3
  4050  00040E  ECA9  F006         	call	_lcd_set_com_seg
  4051  000412  0012               	return	
  4052  000414                     l8687:
  4053  000414  0E21               	movlw	33
  4054  000416  0100               	movlb	0	; () banked
  4055  000418  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4056  00041A  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4057  00041E  0E03               	movlw	3
  4058  000420  ECA9  F006         	call	_lcd_set_com_seg
  4059  000424  0012               	return	
  4060  000426                     l8689:
  4061  000426  0E21               	movlw	33
  4062  000428  0100               	movlb	0	; () banked
  4063  00042A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4064  00042C  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4065  000430  0E02               	movlw	2
  4066  000432  ECA9  F006         	call	_lcd_set_com_seg
  4067  000436  0012               	return	
  4068  000438                     l8691:
  4069  000438  0E21               	movlw	33
  4070  00043A  0100               	movlb	0	; () banked
  4071  00043C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4072  00043E  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4073  000442  0E01               	movlw	1
  4074  000444  ECA9  F006         	call	_lcd_set_com_seg
  4075  000448  0012               	return	
  4076  00044A                     l8693:
  4077  00044A  0E21               	movlw	33
  4078  00044C  0100               	movlb	0	; () banked
  4079  00044E  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4080  000450  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4081  000454  0E00               	movlw	0
  4082  000456  ECA9  F006         	call	_lcd_set_com_seg
  4083  00045A  0012               	return	
  4084  00045C                     l8695:
  4085  00045C  0E22               	movlw	34
  4086  00045E  0100               	movlb	0	; () banked
  4087  000460  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4088  000462  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4089  000466  0E00               	movlw	0
  4090  000468  ECA9  F006         	call	_lcd_set_com_seg
  4091  00046C  0012               	return	
  4092  00046E                     l8697:
  4093  00046E  0E22               	movlw	34
  4094  000470  0100               	movlb	0	; () banked
  4095  000472  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  4096  000474  C020  F0E2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4097  000478  0E01               	movlw	1
  4098  00047A  ECA9  F006         	call	_lcd_set_com_seg
  4099                           
  4100                           ;lcd.c: 115: }
  4101  00047E  0012               	return	
  4102  000480                     l8701:
  4103  000480  0100               	movlb	0	; () banked
  4104  000482  51E9               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  4105                           
  4106                           ; Switch size 1, requested type "space"
  4107                           ; Number of cases is 50, Range of values is 0 to 49
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte          151    76 (average)
  4111                           ;	Chosen strategy is simple_byte
  4112  000484  0A00               	xorlw	0	; case 0
  4113  000486  B4D8               	btfsc	status,2,c
  4114  000488  D639               	goto	l8599
  4115  00048A  0A01               	xorlw	1	; case 1
  4116  00048C  B4D8               	btfsc	status,2,c
  4117  00048E  D63F               	goto	l8601
  4118  000490  0A03               	xorlw	3	; case 2
  4119  000492  B4D8               	btfsc	status,2,c
  4120  000494  D645               	goto	l8603
  4121  000496  0A01               	xorlw	1	; case 3
  4122  000498  B4D8               	btfsc	status,2,c
  4123  00049A  D64B               	goto	l8605
  4124  00049C  0A07               	xorlw	7	; case 4
  4125  00049E  B4D8               	btfsc	status,2,c
  4126  0004A0  D651               	goto	l8607
  4127  0004A2  0A01               	xorlw	1	; case 5
  4128  0004A4  B4D8               	btfsc	status,2,c
  4129  0004A6  D657               	goto	l8609
  4130  0004A8  0A03               	xorlw	3	; case 6
  4131  0004AA  B4D8               	btfsc	status,2,c
  4132  0004AC  D65D               	goto	l8611
  4133  0004AE  0A01               	xorlw	1	; case 7
  4134  0004B0  B4D8               	btfsc	status,2,c
  4135  0004B2  D663               	goto	l8613
  4136  0004B4  0A0F               	xorlw	15	; case 8
  4137  0004B6  B4D8               	btfsc	status,2,c
  4138  0004B8  D669               	goto	l8615
  4139  0004BA  0A01               	xorlw	1	; case 9
  4140  0004BC  B4D8               	btfsc	status,2,c
  4141  0004BE  D66F               	goto	l8617
  4142  0004C0  0A03               	xorlw	3	; case 10
  4143  0004C2  B4D8               	btfsc	status,2,c
  4144  0004C4  D675               	goto	l8619
  4145  0004C6  0A01               	xorlw	1	; case 11
  4146  0004C8  B4D8               	btfsc	status,2,c
  4147  0004CA  D67B               	goto	l8621
  4148  0004CC  0A07               	xorlw	7	; case 12
  4149  0004CE  B4D8               	btfsc	status,2,c
  4150  0004D0  D681               	goto	l8623
  4151  0004D2  0A01               	xorlw	1	; case 13
  4152  0004D4  B4D8               	btfsc	status,2,c
  4153  0004D6  D687               	goto	l8625
  4154  0004D8  0A03               	xorlw	3	; case 14
  4155  0004DA  B4D8               	btfsc	status,2,c
  4156  0004DC  D68D               	goto	l8627
  4157  0004DE  0A01               	xorlw	1	; case 15
  4158  0004E0  B4D8               	btfsc	status,2,c
  4159  0004E2  D693               	goto	l8629
  4160  0004E4  0A1F               	xorlw	31	; case 16
  4161  0004E6  B4D8               	btfsc	status,2,c
  4162  0004E8  D699               	goto	l8631
  4163  0004EA  0A01               	xorlw	1	; case 17
  4164  0004EC  B4D8               	btfsc	status,2,c
  4165  0004EE  D69F               	goto	l8633
  4166  0004F0  0A03               	xorlw	3	; case 18
  4167  0004F2  B4D8               	btfsc	status,2,c
  4168  0004F4  D6A5               	goto	l8635
  4169  0004F6  0A01               	xorlw	1	; case 19
  4170  0004F8  B4D8               	btfsc	status,2,c
  4171  0004FA  D6AB               	goto	l8637
  4172  0004FC  0A07               	xorlw	7	; case 20
  4173  0004FE  B4D8               	btfsc	status,2,c
  4174  000500  D6B1               	goto	l8639
  4175  000502  0A01               	xorlw	1	; case 21
  4176  000504  B4D8               	btfsc	status,2,c
  4177  000506  D6B7               	goto	l8641
  4178  000508  0A03               	xorlw	3	; case 22
  4179  00050A  B4D8               	btfsc	status,2,c
  4180  00050C  D6BD               	goto	l8643
  4181  00050E  0A01               	xorlw	1	; case 23
  4182  000510  B4D8               	btfsc	status,2,c
  4183  000512  D6C3               	goto	l8645
  4184  000514  0A0F               	xorlw	15	; case 24
  4185  000516  B4D8               	btfsc	status,2,c
  4186  000518  D6C9               	goto	l8647
  4187  00051A  0A01               	xorlw	1	; case 25
  4188  00051C  B4D8               	btfsc	status,2,c
  4189  00051E  D6CF               	goto	l8649
  4190  000520  0A03               	xorlw	3	; case 26
  4191  000522  B4D8               	btfsc	status,2,c
  4192  000524  D6D5               	goto	l8651
  4193  000526  0A01               	xorlw	1	; case 27
  4194  000528  B4D8               	btfsc	status,2,c
  4195  00052A  D6DB               	goto	l8653
  4196  00052C  0A07               	xorlw	7	; case 28
  4197  00052E  B4D8               	btfsc	status,2,c
  4198  000530  D6E1               	goto	l8655
  4199  000532  0A01               	xorlw	1	; case 29
  4200  000534  B4D8               	btfsc	status,2,c
  4201  000536  D6E7               	goto	l8657
  4202  000538  0A03               	xorlw	3	; case 30
  4203  00053A  B4D8               	btfsc	status,2,c
  4204  00053C  D6ED               	goto	l8659
  4205  00053E  0A01               	xorlw	1	; case 31
  4206  000540  B4D8               	btfsc	status,2,c
  4207  000542  D6F3               	goto	l8661
  4208  000544  0A3F               	xorlw	63	; case 32
  4209  000546  B4D8               	btfsc	status,2,c
  4210  000548  D6F9               	goto	l8663
  4211  00054A  0A01               	xorlw	1	; case 33
  4212  00054C  B4D8               	btfsc	status,2,c
  4213  00054E  D6FF               	goto	l8665
  4214  000550  0A03               	xorlw	3	; case 34
  4215  000552  B4D8               	btfsc	status,2,c
  4216  000554  D705               	goto	l8667
  4217  000556  0A01               	xorlw	1	; case 35
  4218  000558  B4D8               	btfsc	status,2,c
  4219  00055A  D70B               	goto	l8669
  4220  00055C  0A07               	xorlw	7	; case 36
  4221  00055E  B4D8               	btfsc	status,2,c
  4222  000560  D711               	goto	l8671
  4223  000562  0A01               	xorlw	1	; case 37
  4224  000564  B4D8               	btfsc	status,2,c
  4225  000566  D717               	goto	l8673
  4226  000568  0A03               	xorlw	3	; case 38
  4227  00056A  B4D8               	btfsc	status,2,c
  4228  00056C  D71D               	goto	l8675
  4229  00056E  0A01               	xorlw	1	; case 39
  4230  000570  B4D8               	btfsc	status,2,c
  4231  000572  D723               	goto	l8677
  4232  000574  0A0F               	xorlw	15	; case 40
  4233  000576  B4D8               	btfsc	status,2,c
  4234  000578  D729               	goto	l8679
  4235  00057A  0A01               	xorlw	1	; case 41
  4236  00057C  B4D8               	btfsc	status,2,c
  4237  00057E  D72F               	goto	l8681
  4238  000580  0A03               	xorlw	3	; case 42
  4239  000582  B4D8               	btfsc	status,2,c
  4240  000584  D735               	goto	l8683
  4241  000586  0A01               	xorlw	1	; case 43
  4242  000588  B4D8               	btfsc	status,2,c
  4243  00058A  D73B               	goto	l8685
  4244  00058C  0A07               	xorlw	7	; case 44
  4245  00058E  B4D8               	btfsc	status,2,c
  4246  000590  D741               	goto	l8687
  4247  000592  0A01               	xorlw	1	; case 45
  4248  000594  B4D8               	btfsc	status,2,c
  4249  000596  D747               	goto	l8689
  4250  000598  0A03               	xorlw	3	; case 46
  4251  00059A  B4D8               	btfsc	status,2,c
  4252  00059C  D74D               	goto	l8691
  4253  00059E  0A01               	xorlw	1	; case 47
  4254  0005A0  B4D8               	btfsc	status,2,c
  4255  0005A2  D753               	goto	l8693
  4256  0005A4  0A1F               	xorlw	31	; case 48
  4257  0005A6  B4D8               	btfsc	status,2,c
  4258  0005A8  D759               	goto	l8695
  4259  0005AA  0A01               	xorlw	1	; case 49
  4260  0005AC  A4D8               	btfss	status,2,c
  4261  0005AE  0012               	return	
  4262  0005B0  D75E               	goto	l8697
  4263  0005B2                     __end_of_lcd_disp_level_bar:
  4264                           	opt stack 0
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           prodh	equ	0xFF4
  4270                           prodl	equ	0xFF3
  4271                           postinc0	equ	0xFEE
  4272                           wreg	equ	0xFE8
  4273                           postdec1	equ	0xFE5
  4274                           plusw1	equ	0xFE3
  4275                           fsr1h	equ	0xFE2
  4276                           fsr1l	equ	0xFE1
  4277                           indf2	equ	0xFDF
  4278                           plusw2	equ	0xFDB
  4279                           fsr2h	equ	0xFDA
  4280                           fsr2l	equ	0xFD9
  4281                           status	equ	0xFD8
  4282                           
  4283 ;; *************** function _soc_init *****************
  4284 ;; Defined at:
  4285 ;;		line 2 in file "src/soc/soc.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    6
  4306 ;; This function calls:
  4307 ;;		_rtc_init
  4308 ;;		_sys_ticker_init
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text11
  4315  0027C4                     __ptext11:
  4316                           	opt stack 0
  4317  0027C4                     _soc_init:
  4318                           	opt stack 24
  4319                           
  4320                           ;soc.c: 5: sys_ticker_init();
  4321                           
  4322                           ;incstack = 0
  4323  0027C4  ECEA  F013         	call	_sys_ticker_init	;wreg free
  4324                           
  4325                           ;soc.c: 6: rtc_init();
  4326  0027C8  EC4D  F011         	call	_rtc_init	;wreg free
  4327                           
  4328                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4329  0027CC  8CF2               	bsf	intcon,6,c	;volatile
  4330                           
  4331                           ;soc.c: 9: INTCONbits.GIE = 1;
  4332  0027CE  8EF2               	bsf	intcon,7,c	;volatile
  4333                           
  4334                           ;soc.c: 11: RCONbits.IPEN=0;
  4335  0027D0  9ED0               	bcf	4048,7,c	;volatile
  4336  0027D2  0012               	return		;funcret
  4337  0027D4                     __end_of_soc_init:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           postdec1	equ	0xFE5
  4349                           plusw1	equ	0xFE3
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           plusw2	equ	0xFDB
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _sys_ticker_init *****************
  4359 ;; Defined at:
  4360 ;;		line 27 in file "src/soc/ticker.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    4
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_soc_init
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text12
  4389  0027D4                     __ptext12:
  4390                           	opt stack 0
  4391  0027D4                     _sys_ticker_init:
  4392                           	opt stack 25
  4393                           
  4394                           ;ticker.c: 30: PR2=(uint8_t)((11059200/4/16/16/100));
  4395                           
  4396                           ;incstack = 0
  4397  0027D4  0E6C               	movlw	108
  4398  0027D6  6ECB               	movwf	4043,c	;volatile
  4399                           
  4400                           ;ticker.c: 31: IPR1bits.TMR2IP=1;
  4401  0027D8  829F               	bsf	3999,1,c	;volatile
  4402                           
  4403                           ;ticker.c: 32: PIR1bits.TMR2IF=0;
  4404  0027DA  929E               	bcf	3998,1,c	;volatile
  4405                           
  4406                           ;ticker.c: 33: PIE1bits.TMR2IE=1;
  4407  0027DC  829D               	bsf	3997,1,c	;volatile
  4408                           
  4409                           ;ticker.c: 35: T2CON=0x7f;
  4410  0027DE  0E7F               	movlw	127
  4411  0027E0  6ECA               	movwf	4042,c	;volatile
  4412  0027E2  0012               	return		;funcret
  4413  0027E4                     __end_of_sys_ticker_init:
  4414                           	opt stack 0
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           postdec1	equ	0xFE5
  4425                           plusw1	equ	0xFE3
  4426                           fsr1h	equ	0xFE2
  4427                           fsr1l	equ	0xFE1
  4428                           indf2	equ	0xFDF
  4429                           plusw2	equ	0xFDB
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _rtc_init *****************
  4435 ;; Defined at:
  4436 ;;		line 25 in file "src/soc/rtc.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    5
  4457 ;; This function calls:
  4458 ;;		_rtcc_reg_wr_disable
  4459 ;;		_rtcc_reg_wr_enable
  4460 ;; This function is called by:
  4461 ;;		_soc_init
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text13
  4466  00229A                     __ptext13:
  4467                           	opt stack 0
  4468  00229A                     _rtc_init:
  4469                           	opt stack 24
  4470                           
  4471                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4472                           
  4473                           ;incstack = 0
  4474  00229A  010F               	movlb	15	; () banked
  4475  00229C  9554               	bcf	84,2,b	;volatile
  4476                           
  4477                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4478  00229E  010F               	movlb	15	; () banked
  4479  0022A0  8354               	bsf	84,1,b	;volatile
  4480                           
  4481                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4482  0022A2  010F               	movlb	15	; () banked
  4483  0022A4  955F               	bcf	95,2,b	;volatile
  4484                           
  4485                           ;rtc.c: 31: ALRMRPT=0xff;
  4486  0022A6  010F               	movlb	15	; () banked
  4487  0022A8  695A               	setf	90,b	;volatile
  4488                           
  4489                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4490  0022AA  010F               	movlb	15	; () banked
  4491  0022AC  8F5B               	bsf	91,7,b	;volatile
  4492                           
  4493                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4494  0022AE  010F               	movlb	15	; () banked
  4495  0022B0  8D5B               	bsf	91,6,b	;volatile
  4496                           
  4497                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4498  0022B2  010F               	movlb	15	; () banked
  4499  0022B4  955B               	bcf	91,2,b	;volatile
  4500  0022B6  975B               	bcf	91,3,b	;volatile
  4501  0022B8  995B               	bcf	91,4,b	;volatile
  4502  0022BA  9B5B               	bcf	91,5,b	;volatile
  4503                           
  4504                           ;rtc.c: 37: __nop();
  4505  0022BC  F000               	nop	
  4506                           
  4507                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4508  0022BE  ECF9  F013         	call	_rtcc_reg_wr_enable	;wreg free
  4509                           
  4510                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4511  0022C2  010F               	movlb	15	; () banked
  4512  0022C4  8F5F               	bsf	95,7,b	;volatile
  4513                           
  4514                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4515  0022C6  ECFF  F013         	call	_rtcc_reg_wr_disable	;wreg free
  4516                           
  4517                           ;rtc.c: 43: __nop();
  4518  0022CA  F000               	nop	
  4519                           
  4520                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4521  0022CC  80A5               	bsf	4005,0,c	;volatile
  4522                           
  4523                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4524  0022CE  90A4               	bcf	4004,0,c	;volatile
  4525                           
  4526                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4527  0022D0  80A3               	bsf	4003,0,c	;volatile
  4528                           
  4529                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4530  0022D2  86CD               	bsf	4045,3,c	;volatile
  4531                           
  4532                           ;rtc.c: 51: __nop();
  4533  0022D4  F000               	nop	
  4534  0022D6  0012               	return		;funcret
  4535  0022D8                     __end_of_rtc_init:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           plusw1	equ	0xFE3
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           indf2	equ	0xFDF
  4551                           plusw2	equ	0xFDB
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _rtc_set *****************
  4557 ;; Defined at:
  4558 ;;		line 54 in file "src/soc/rtc.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4561 ;;		 -> defalutRtc(7), 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  stp             2    2[BANK0 ] PTR struct .
  4564 ;;		 -> defalutRtc(7), 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        4 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    5
  4581 ;; This function calls:
  4582 ;;		_rtcc_reg_wr_disable
  4583 ;;		_rtcc_reg_wr_enable
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text14
  4590  001052                     __ptext14:
  4591                           	opt stack 0
  4592  001052                     _rtc_set:
  4593                           	opt stack 25
  4594                           
  4595                           ;rtc.c: 56: st_RtcDef* stp;
  4596                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4597                           
  4598                           ;incstack = 0
  4599  001052  C0D9  F0DB         	movff	rtc_set@rtc,rtc_set@stp
  4600  001056  C0DA  F0DC         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4601                           
  4602                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4603  00105A  ECF9  F013         	call	_rtcc_reg_wr_enable	;wreg free
  4604                           
  4605                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4606  00105E  0EFC               	movlw	-4
  4607  001060  010F               	movlb	15	; () banked
  4608  001062  175F               	andwf	95,f,b	;volatile
  4609                           
  4610                           ; BSR set to: 15
  4611                           ;rtc.c: 61: RTCVALL=stp->second;
  4612  001064  0100               	movlb	0	; () banked
  4613  001066  EE20 F005          	lfsr	2,5
  4614  00106A  51DB               	movf	rtc_set@stp& (0+255),w,b
  4615  00106C  26D9               	addwf	fsr2l,f,c
  4616  00106E  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4617  001070  22DA               	addwfc	fsr2h,f,c
  4618  001072  50DF               	movf	indf2,w,c
  4619  001074  010F               	movlb	15	; () banked
  4620  001076  6F5C               	movwf	92,b	;volatile
  4621                           
  4622                           ; BSR set to: 15
  4623                           ;rtc.c: 62: RTCVALH=stp->minute;
  4624  001078  0100               	movlb	0	; () banked
  4625  00107A  EE20 F004          	lfsr	2,4
  4626  00107E  51DB               	movf	rtc_set@stp& (0+255),w,b
  4627  001080  26D9               	addwf	fsr2l,f,c
  4628  001082  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4629  001084  22DA               	addwfc	fsr2h,f,c
  4630  001086  50DF               	movf	indf2,w,c
  4631  001088  010F               	movlb	15	; () banked
  4632  00108A  6F5D               	movwf	93,b	;volatile
  4633                           
  4634                           ; BSR set to: 15
  4635                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4636  00108C  010F               	movlb	15	; () banked
  4637  00108E  515F               	movf	95,w,b	;volatile
  4638  001090  0BFC               	andlw	-4
  4639  001092  0901               	iorlw	1
  4640  001094  6F5F               	movwf	95,b	;volatile
  4641                           
  4642                           ; BSR set to: 15
  4643                           ;rtc.c: 64: RTCVALL=stp->hour;
  4644  001096  0100               	movlb	0	; () banked
  4645  001098  EE20 F003          	lfsr	2,3
  4646  00109C  51DB               	movf	rtc_set@stp& (0+255),w,b
  4647  00109E  26D9               	addwf	fsr2l,f,c
  4648  0010A0  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4649  0010A2  22DA               	addwfc	fsr2h,f,c
  4650  0010A4  50DF               	movf	indf2,w,c
  4651  0010A6  010F               	movlb	15	; () banked
  4652  0010A8  6F5C               	movwf	92,b	;volatile
  4653                           
  4654                           ; BSR set to: 15
  4655                           ;rtc.c: 65: RTCVALH=stp->day;
  4656  0010AA  0100               	movlb	0	; () banked
  4657  0010AC  EE20 F006          	lfsr	2,6
  4658  0010B0  51DB               	movf	rtc_set@stp& (0+255),w,b
  4659  0010B2  26D9               	addwf	fsr2l,f,c
  4660  0010B4  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4661  0010B6  22DA               	addwfc	fsr2h,f,c
  4662  0010B8  50DF               	movf	indf2,w,c
  4663  0010BA  010F               	movlb	15	; () banked
  4664  0010BC  6F5D               	movwf	93,b	;volatile
  4665                           
  4666                           ; BSR set to: 15
  4667                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4668  0010BE  010F               	movlb	15	; () banked
  4669  0010C0  515F               	movf	95,w,b	;volatile
  4670  0010C2  0BFC               	andlw	-4
  4671  0010C4  0902               	iorlw	2
  4672  0010C6  6F5F               	movwf	95,b	;volatile
  4673                           
  4674                           ; BSR set to: 15
  4675                           ;rtc.c: 67: RTCVALL=stp->date;
  4676  0010C8  0100               	movlb	0	; () banked
  4677  0010CA  EE20 F002          	lfsr	2,2
  4678  0010CE  51DB               	movf	rtc_set@stp& (0+255),w,b
  4679  0010D0  26D9               	addwf	fsr2l,f,c
  4680  0010D2  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4681  0010D4  22DA               	addwfc	fsr2h,f,c
  4682  0010D6  50DF               	movf	indf2,w,c
  4683  0010D8  010F               	movlb	15	; () banked
  4684  0010DA  6F5C               	movwf	92,b	;volatile
  4685                           
  4686                           ; BSR set to: 15
  4687                           ;rtc.c: 68: RTCVALH=stp->month;
  4688  0010DC  0100               	movlb	0	; () banked
  4689  0010DE  EE20 F001          	lfsr	2,1
  4690  0010E2  51DB               	movf	rtc_set@stp& (0+255),w,b
  4691  0010E4  26D9               	addwf	fsr2l,f,c
  4692  0010E6  51DC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4693  0010E8  22DA               	addwfc	fsr2h,f,c
  4694  0010EA  50DF               	movf	indf2,w,c
  4695  0010EC  010F               	movlb	15	; () banked
  4696  0010EE  6F5D               	movwf	93,b	;volatile
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4700  0010F0  0E03               	movlw	3
  4701  0010F2  010F               	movlb	15	; () banked
  4702  0010F4  135F               	iorwf	95,f,b	;volatile
  4703                           
  4704                           ; BSR set to: 15
  4705                           ;rtc.c: 70: RTCVALL=stp->year;
  4706  0010F6  C0DB  FFD9         	movff	rtc_set@stp,fsr2l
  4707  0010FA  C0DC  FFDA         	movff	rtc_set@stp+1,fsr2h
  4708  0010FE  50DF               	movf	indf2,w,c
  4709  001100  010F               	movlb	15	; () banked
  4710  001102  6F5C               	movwf	92,b	;volatile
  4711                           
  4712                           ; BSR set to: 15
  4713                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4714  001104  ECFF  F013         	call	_rtcc_reg_wr_disable	;wreg free
  4715  001108  0012               	return		;funcret
  4716  00110A                     __end_of_rtc_set:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           postinc0	equ	0xFEE
  4726                           wreg	equ	0xFE8
  4727                           postdec1	equ	0xFE5
  4728                           plusw1	equ	0xFE3
  4729                           fsr1h	equ	0xFE2
  4730                           fsr1l	equ	0xFE1
  4731                           indf2	equ	0xFDF
  4732                           plusw2	equ	0xFDB
  4733                           fsr2h	equ	0xFDA
  4734                           fsr2l	equ	0xFD9
  4735                           status	equ	0xFD8
  4736                           
  4737 ;; *************** function _rtcc_reg_wr_enable *****************
  4738 ;; Defined at:
  4739 ;;		line 9 in file "src/soc/rtc.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		None
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    4
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_rtc_init
  4764 ;;		_rtc_set
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text15
  4769  0027F2                     __ptext15:
  4770                           	opt stack 0
  4771  0027F2                     _rtcc_reg_wr_enable:
  4772                           	opt stack 24
  4773                           
  4774                           ;incstack = 0
  4775  0027F2  0E55               	movlw	85	;# 
  4776  0027F4  6EA7               	movwf	4007,c	;# 
  4777  0027F6  0EAA               	movlw	170	;# 
  4778  0027F8  6EA7               	movwf	4007,c	;# 
  4779  0027FA  8B5F               	bsf	3935,5,b	;# 
  4780  0027FC  0012               	return		;funcret
  4781  0027FE                     __end_of_rtcc_reg_wr_enable:
  4782                           	opt stack 0
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           prodh	equ	0xFF4
  4788                           prodl	equ	0xFF3
  4789                           intcon	equ	0xFF2
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           postdec1	equ	0xFE5
  4793                           plusw1	equ	0xFE3
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           plusw2	equ	0xFDB
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _rtcc_reg_wr_disable *****************
  4803 ;; Defined at:
  4804 ;;		line 17 in file "src/soc/rtc.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		None
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    4
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_rtc_init
  4829 ;;		_rtc_set
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text16
  4834  0027FE                     __ptext16:
  4835                           	opt stack 0
  4836  0027FE                     _rtcc_reg_wr_disable:
  4837                           	opt stack 24
  4838                           
  4839                           ;incstack = 0
  4840  0027FE  0E55               	movlw	85	;# 
  4841  002800  6EA7               	movwf	4007,c	;# 
  4842  002802  0EAA               	movlw	170	;# 
  4843  002804  6EA7               	movwf	4007,c	;# 
  4844  002806  9B5F               	bcf	3935,5,b	;# 
  4845  002808  0012               	return		;funcret
  4846  00280A                     __end_of_rtcc_reg_wr_disable:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           postdec1	equ	0xFE5
  4858                           plusw1	equ	0xFE3
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           indf2	equ	0xFDF
  4862                           plusw2	equ	0xFDB
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           status	equ	0xFD8
  4866                           
  4867 ;; *************** function _lcd_init *****************
  4868 ;; Defined at:
  4869 ;;		line 628 in file "src/driver/lcd.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    6
  4890 ;; This function calls:
  4891 ;;		_lcd_bl_init
  4892 ;;		_lcd_config
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text17
  4899  0027E4                     __ptext17:
  4900                           	opt stack 0
  4901  0027E4                     _lcd_init:
  4902                           	opt stack 24
  4903                           
  4904                           ;lcd.c: 630: lcd_config();
  4905                           
  4906                           ;incstack = 0
  4907  0027E4  EC14  F013         	call	_lcd_config	;wreg free
  4908                           
  4909                           ;lcd.c: 631: lcd_bl_init();
  4910  0027E8  EC05  F014         	call	_lcd_bl_init	;wreg free
  4911                           
  4912                           ;lcd.c: 632: LCDCON=0x8f;;
  4913  0027EC  0E8F               	movlw	143
  4914  0027EE  6EA8               	movwf	4008,c	;volatile
  4915  0027F0  0012               	return		;funcret
  4916  0027F2                     __end_of_lcd_init:
  4917                           	opt stack 0
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           intcon	equ	0xFF2
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           postdec1	equ	0xFE5
  4928                           plusw1	equ	0xFE3
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           plusw2	equ	0xFDB
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _lcd_config *****************
  4938 ;; Defined at:
  4939 ;;		line 588 in file "src/driver/lcd.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    5
  4960 ;; This function calls:
  4961 ;;		_lcd_disp_all
  4962 ;; This function is called by:
  4963 ;;		_lcd_init
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text18
  4968  002628                     __ptext18:
  4969                           	opt stack 0
  4970  002628                     _lcd_config:
  4971                           	opt stack 24
  4972                           
  4973                           ;lcd.c: 594: LCDREG=0x3f;
  4974                           
  4975                           ;incstack = 0
  4976  002628  0E3F               	movlw	63
  4977  00262A  6ED2               	movwf	4050,c	;volatile
  4978                           
  4979                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  4980  00262C  9EAA               	bcf	4010,7,c	;volatile
  4981                           
  4982                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  4983  00262E  9CAA               	bcf	4010,6,c	;volatile
  4984                           
  4985                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  4986  002630  96AA               	bcf	4010,3,c	;volatile
  4987                           
  4988                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  4989  002632  84AA               	bsf	4010,2,c	;volatile
  4990                           
  4991                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  4992  002634  92AA               	bcf	4010,1,c	;volatile
  4993                           
  4994                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  4995  002636  90AA               	bcf	4010,0,c	;volatile
  4996                           
  4997                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  4998  002638  68A9               	setf	4009,c	;volatile
  4999                           
  5000                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  5001  00263A  0EE0               	movlw	224
  5002  00263C  6EB6               	movwf	4022,c	;volatile
  5003                           
  5004                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  5005  00263E  0EF8               	movlw	248
  5006  002640  6EB7               	movwf	4023,c	;volatile
  5007                           
  5008                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  5009  002642  0EC3               	movlw	195
  5010  002644  6EB8               	movwf	4024,c	;volatile
  5011                           
  5012                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  5013  002646  0EFE               	movlw	254
  5014  002648  6EB9               	movwf	4025,c	;volatile
  5015                           
  5016                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  5017  00264A  0ECF               	movlw	207
  5018  00264C  6EBA               	movwf	4026,c	;volatile
  5019                           
  5020                           ;lcd.c: 618: lcd_disp_all(0x00);;
  5021  00264E  0E00               	movlw	0
  5022  002650  EC9D  F012         	call	_lcd_disp_all
  5023  002654  0012               	return		;funcret
  5024  002656                     __end_of_lcd_config:
  5025                           	opt stack 0
  5026                           tblptru	equ	0xFF8
  5027                           tblptrh	equ	0xFF7
  5028                           tblptrl	equ	0xFF6
  5029                           tablat	equ	0xFF5
  5030                           prodh	equ	0xFF4
  5031                           prodl	equ	0xFF3
  5032                           intcon	equ	0xFF2
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           plusw1	equ	0xFE3
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           indf2	equ	0xFDF
  5040                           plusw2	equ	0xFDB
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8
  5044                           
  5045 ;; *************** function _lcd_disp_all *****************
  5046 ;; Defined at:
  5047 ;;		line 578 in file "src/driver/lcd.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  x               1    wreg     unsigned char 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  x               1    0[BANK0 ] unsigned char 
  5052 ;;  i               1    1[BANK0 ] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;Total ram usage:        2 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    4
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_ui_disp_start_cs600
  5073 ;;		_lcd_config
  5074 ;;		_ui_disp_all_on
  5075 ;;		_ui_disp_all_off
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text19
  5080  00253A                     __ptext19:
  5081                           	opt stack 0
  5082  00253A                     _lcd_disp_all:
  5083                           	opt stack 25
  5084                           
  5085                           ;incstack = 0
  5086                           ;lcd_disp_all@x stored from wreg
  5087  00253A  0100               	movlb	0	; () banked
  5088  00253C  6FD9               	movwf	lcd_disp_all@x& (0+255),b
  5089                           
  5090                           ;lcd.c: 580: uint8_t i;
  5091                           ;lcd.c: 581: for(i=0;i<24;i++)
  5092  00253E  0E00               	movlw	0
  5093  002540  0100               	movlb	0	; () banked
  5094  002542  6FDA               	movwf	lcd_disp_all@i& (0+255),b
  5095  002544                     l8453:
  5096                           
  5097                           ; BSR set to: 0
  5098  002544  0E17               	movlw	23
  5099  002546  0100               	movlb	0	; () banked
  5100  002548  65DA               	cpfsgt	lcd_disp_all@i& (0+255),b
  5101  00254A  D001               	goto	l8457
  5102  00254C  0012               	return	
  5103  00254E                     l8457:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;lcd.c: 582: {
  5107                           ;lcd.c: 583: pLCD[i]=x;
  5108  00254E  0100               	movlb	0	; () banked
  5109  002550  51DA               	movf	lcd_disp_all@i& (0+255),w,b
  5110  002552  0D01               	mullw	1
  5111  002554  0E60               	movlw	low _pLCD
  5112  002556  24F3               	addwf	prodl,w,c
  5113  002558  6ED9               	movwf	fsr2l,c
  5114  00255A  0E00               	movlw	high _pLCD
  5115  00255C  20F4               	addwfc	prodh,w,c
  5116  00255E  6EDA               	movwf	fsr2h,c
  5117  002560  C0D9  FFDF         	movff	lcd_disp_all@x,indf2
  5118                           
  5119                           ; BSR set to: 0
  5120  002564  0100               	movlb	0	; () banked
  5121  002566  2BDA               	incf	lcd_disp_all@i& (0+255),f,b
  5122  002568  D7ED               	goto	l8453
  5123  00256A                     __end_of_lcd_disp_all:
  5124                           	opt stack 0
  5125                           tblptru	equ	0xFF8
  5126                           tblptrh	equ	0xFF7
  5127                           tblptrl	equ	0xFF6
  5128                           tablat	equ	0xFF5
  5129                           prodh	equ	0xFF4
  5130                           prodl	equ	0xFF3
  5131                           intcon	equ	0xFF2
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           plusw1	equ	0xFE3
  5136                           fsr1h	equ	0xFE2
  5137                           fsr1l	equ	0xFE1
  5138                           indf2	equ	0xFDF
  5139                           plusw2	equ	0xFDB
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _lcd_bl_init *****************
  5145 ;; Defined at:
  5146 ;;		line 623 in file "src/driver/lcd.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_lcd_init
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text20
  5175  00280A                     __ptext20:
  5176                           	opt stack 0
  5177  00280A                     _lcd_bl_init:
  5178                           	opt stack 25
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;incstack = 0
  5182                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  5183  00280A  8898               	bsf	3992,4,c	;volatile
  5184  00280C  0012               	return	
  5185  00280E                     __end_of_lcd_bl_init:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           intcon	equ	0xFF2
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           postdec1	equ	0xFE5
  5197                           plusw1	equ	0xFE3
  5198                           fsr1h	equ	0xFE2
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           plusw2	equ	0xFDB
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _key_process *****************
  5207 ;; Defined at:
  5208 ;;		line 154 in file "src/api/key_menu.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  tm              2    0[BANK2 ] unsigned int 
  5213 ;;  key             1    2[BANK2 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;Total ram usage:        3 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:   13
  5230 ;; This function calls:
  5231 ;;		_key_process_down
  5232 ;;		_key_process_set
  5233 ;;		_key_process_set_down_long
  5234 ;;		_key_process_set_long
  5235 ;;		_key_process_up
  5236 ;;		_key_waite_release
  5237 ;;		_ui_disp_menu
  5238 ;; This function is called by:
  5239 ;;		_main
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text21
  5244  0019F4                     __ptext21:
  5245                           	opt stack 0
  5246  0019F4                     _key_process:
  5247                           	opt stack 17
  5248                           
  5249                           ;key_menu.c: 156: uint16_t tm;
  5250                           ;key_menu.c: 157: uint8_t key;
  5251                           ;key_menu.c: 158: tm=key_waite_release(2000,&key);
  5252                           
  5253                           ;incstack = 0
  5254  0019F4  0E07               	movlw	7
  5255  0019F6  0100               	movlb	0	; () banked
  5256  0019F8  6FE2               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5257  0019FA  0ED0               	movlw	208
  5258  0019FC  6FE1               	movwf	key_waite_release@timeout& (0+255),b
  5259  0019FE  0EA4               	movlw	low key_process@key
  5260  001A00  0100               	movlb	0	; () banked
  5261  001A02  6FE3               	movwf	key_waite_release@key& (0+255),b
  5262  001A04  0E02               	movlw	high key_process@key
  5263  001A06  0100               	movlb	0	; () banked
  5264  001A08  6FE4               	movwf	(key_waite_release@key+1)& (0+255),b
  5265  001A0A  EC8B  F011         	call	_key_waite_release	;wreg free
  5266  001A0E  C0E1  F2A2         	movff	?_key_waite_release,key_process@tm
  5267  001A12  C0E2  F2A3         	movff	?_key_waite_release+1,key_process@tm+1
  5268                           
  5269                           ;key_menu.c: 159: if(tm>=2000){
  5270  001A16  0ED0               	movlw	208
  5271  001A18  0102               	movlb	2	; () banked
  5272  001A1A  5DA2               	subwf	key_process@tm& (0+255),w,b
  5273  001A1C  0E07               	movlw	7
  5274  001A1E  0102               	movlb	2	; () banked
  5275  001A20  59A3               	subwfb	(key_process@tm+1)& (0+255),w,b
  5276  001A22  A0D8               	btfss	status,0,c
  5277  001A24  D010               	goto	l9045
  5278                           
  5279                           ; BSR set to: 2
  5280                           ;key_menu.c: 161: if(key==(0x01<<0x02)){
  5281  001A26  0E04               	movlw	4
  5282  001A28  0102               	movlb	2	; () banked
  5283  001A2A  19A4               	xorwf	key_process@key& (0+255),w,b
  5284  001A2C  A4D8               	btfss	status,2,c
  5285  001A2E  D003               	goto	l9041
  5286                           
  5287                           ; BSR set to: 2
  5288                           ;key_menu.c: 162: key_process_set_long();
  5289  001A30  EC07  F014         	call	_key_process_set_long	;wreg free
  5290                           
  5291                           ;key_menu.c: 163: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  5292  001A34  D01D               	goto	l9057
  5293  001A36                     l9041:
  5294  001A36  0E05               	movlw	5
  5295  001A38  0100               	movlb	0	; () banked
  5296  001A3A  19C5               	xorwf	_keyValue& (0+255),w,b	;volatile
  5297  001A3C  A4D8               	btfss	status,2,c
  5298  001A3E  D018               	goto	l9057
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;key_menu.c: 164: key_process_set_down_long();
  5302  001A40  EC6C  F007         	call	_key_process_set_down_long	;wreg free
  5303                           
  5304                           ;key_menu.c: 165: }
  5305                           ;key_menu.c: 166: }else{
  5306  001A44  D015               	goto	l9057
  5307  001A46                     l9045:
  5308                           
  5309                           ;key_menu.c: 168: if(keyValue == (0x01<<0x0)){
  5310  001A46  0100               	movlb	0	; () banked
  5311  001A48  05C5               	decf	_keyValue& (0+255),w,b	;volatile
  5312  001A4A  A4D8               	btfss	status,2,c
  5313  001A4C  D003               	goto	l9049
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;key_menu.c: 169: key_process_down();
  5317  001A4E  ECA9  F011         	call	_key_process_down	;wreg free
  5318                           
  5319                           ;key_menu.c: 170: }else if(keyValue == (0x01<<0x01)){
  5320  001A52  D00E               	goto	l9057
  5321  001A54                     l9049:
  5322  001A54  0E02               	movlw	2
  5323  001A56  0100               	movlb	0	; () banked
  5324  001A58  19C5               	xorwf	_keyValue& (0+255),w,b	;volatile
  5325  001A5A  A4D8               	btfss	status,2,c
  5326  001A5C  D003               	goto	l9053
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;key_menu.c: 171: key_process_up();
  5330  001A5E  EC37  F012         	call	_key_process_up	;wreg free
  5331                           
  5332                           ;key_menu.c: 172: }else if(keyValue == (0x01<<0x02)){
  5333  001A62  D006               	goto	l9057
  5334  001A64                     l9053:
  5335  001A64  0E04               	movlw	4
  5336  001A66  0100               	movlb	0	; () banked
  5337  001A68  19C5               	xorwf	_keyValue& (0+255),w,b	;volatile
  5338  001A6A  B4D8               	btfsc	status,2,c
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;key_menu.c: 173: key_process_set();
  5342  001A6C  EC42  F013         	call	_key_process_set	;wreg free
  5343  001A70                     l9057:
  5344                           
  5345                           ;key_menu.c: 174: }
  5346                           ;key_menu.c: 175: }
  5347                           ;key_menu.c: 176: ui_disp_menu();
  5348  001A70  EC7F  F013         	call	_ui_disp_menu	;wreg free
  5349  001A74  0012               	return		;funcret
  5350  001A76                     __end_of_key_process:
  5351                           	opt stack 0
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           prodh	equ	0xFF4
  5357                           prodl	equ	0xFF3
  5358                           intcon	equ	0xFF2
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           plusw1	equ	0xFE3
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           indf2	equ	0xFDF
  5366                           plusw2	equ	0xFDB
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function _ui_disp_menu *****************
  5372 ;; Defined at:
  5373 ;;		line 205 in file "src/api/ui.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:   12
  5394 ;; This function calls:
  5395 ;;		_ui_disp_menu_psw_adj
  5396 ;; This function is called by:
  5397 ;;		_key_process
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text22
  5402  0026FE                     __ptext22:
  5403                           	opt stack 0
  5404  0026FE                     _ui_disp_menu:
  5405                           	opt stack 17
  5406                           
  5407                           ;ui.c: 207: switch(menu){
  5408                           
  5409                           ;incstack = 0
  5410  0026FE  D003               	goto	l8795
  5411  002700                     l8791:
  5412  002700  ECB3  F013         	call	_ui_disp_menu_psw_adj	;wreg free
  5413                           
  5414                           ;ui.c: 215: }
  5415                           
  5416                           ;ui.c: 213: default:break;
  5417  002704  0012               	return	
  5418  002706                     l8795:
  5419  002706  503C               	movf	_menu,w,c	;volatile
  5420                           
  5421                           ; Switch size 1, requested type "space"
  5422                           ; Number of cases is 4, Range of values is 0 to 16
  5423                           ; switch strategies available:
  5424                           ; Name         Instructions Cycles
  5425                           ; simple_byte           13     7 (average)
  5426                           ;	Chosen strategy is simple_byte
  5427  002708  0A00               	xorlw	0	; case 0
  5428  00270A  B4D8               	btfsc	status,2,c
  5429  00270C  0012               	return	
  5430  00270E  0A01               	xorlw	1	; case 1
  5431  002710  B4D8               	btfsc	status,2,c
  5432  002712  0012               	return	
  5433  002714  0A03               	xorlw	3	; case 2
  5434  002716  B4D8               	btfsc	status,2,c
  5435  002718  0012               	return	
  5436  00271A  0A12               	xorlw	18	; case 16
  5437  00271C  A4D8               	btfss	status,2,c
  5438  00271E  0012               	return	
  5439  002720  D7EF               	goto	l8791
  5440  002722                     __end_of_ui_disp_menu:
  5441                           	opt stack 0
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           prodh	equ	0xFF4
  5447                           prodl	equ	0xFF3
  5448                           intcon	equ	0xFF2
  5449                           postinc0	equ	0xFEE
  5450                           wreg	equ	0xFE8
  5451                           postdec1	equ	0xFE5
  5452                           plusw1	equ	0xFE3
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           indf2	equ	0xFDF
  5456                           plusw2	equ	0xFDB
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _ui_disp_menu_psw_adj *****************
  5462 ;; Defined at:
  5463 ;;		line 200 in file "src/api/ui.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:   11
  5484 ;; This function calls:
  5485 ;;		_ui_disp_adj_xfixed_pt
  5486 ;; This function is called by:
  5487 ;;		_ui_disp_menu
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text23
  5492  002766                     __ptext23:
  5493                           	opt stack 0
  5494  002766                     _ui_disp_menu_psw_adj:
  5495                           	opt stack 17
  5496                           
  5497                           ;ui.c: 202: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  5498                           
  5499                           ;incstack = 0
  5500  002766  0EF2               	movlw	low STR_3
  5501  002768  0101               	movlb	1	; () banked
  5502  00276A  6FED               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  5503  00276C  0EFF               	movlw	high STR_3
  5504  00276E  0101               	movlb	1	; () banked
  5505  002770  6FEE               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  5506  002772  C03D  F1EF         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  5507  002776  C03E  F1F0         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  5508  00277A  C03F  F1F1         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  5509  00277E  EC85  F008         	call	_ui_disp_adj_xfixed_pt	;wreg free
  5510  002782  0012               	return		;funcret
  5511  002784                     __end_of_ui_disp_menu_psw_adj:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           prodh	equ	0xFF4
  5518                           prodl	equ	0xFF3
  5519                           intcon	equ	0xFF2
  5520                           postinc0	equ	0xFEE
  5521                           wreg	equ	0xFE8
  5522                           postdec1	equ	0xFE5
  5523                           plusw1	equ	0xFE3
  5524                           fsr1h	equ	0xFE2
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           plusw2	equ	0xFDB
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  5533 ;; Defined at:
  5534 ;;		line 186 in file "src/api/ui.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  str             2    0[BANK1 ] PTR unsigned char 
  5537 ;;		 -> STR_3(5), 
  5538 ;;  x               2    2[BANK1 ] unsigned int 
  5539 ;;  loc             1    4[BANK1 ] unsigned char 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  buf            10    7[BANK1 ] unsigned char [10]
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:       17 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:   10
  5558 ;; This function calls:
  5559 ;;		___x_arrange_str
  5560 ;;		_lcd_disp_refresh
  5561 ;;		_lcd_show_string
  5562 ;;		_m_int16_2_str_4
  5563 ;;		_m_mem_cpy
  5564 ;;		_ui_disp_clear_num_dp
  5565 ;; This function is called by:
  5566 ;;		_ui_disp_menu_psw_adj
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text24
  5571  00110A                     __ptext24:
  5572                           	opt stack 0
  5573  00110A                     _ui_disp_adj_xfixed_pt:
  5574                           	opt stack 17
  5575                           
  5576                           ;ui.c: 188: uint8_t buf[10];
  5577                           ;ui.c: 189: ui_disp_clear_num_dp();
  5578                           
  5579                           ;incstack = 0
  5580  00110A  ECFC  F00F         	call	_ui_disp_clear_num_dp	;wreg free
  5581                           
  5582                           ;ui.c: 190: if(x>9999)x=9999;
  5583  00110E  0E10               	movlw	16
  5584  001110  0101               	movlb	1	; () banked
  5585  001112  5DEF               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  5586  001114  0E27               	movlw	39
  5587  001116  0101               	movlb	1	; () banked
  5588  001118  59F0               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  5589  00111A  A0D8               	btfss	status,0,c
  5590  00111C  D005               	goto	l8093
  5591                           
  5592                           ; BSR set to: 1
  5593  00111E  0E27               	movlw	39
  5594  001120  0101               	movlb	1	; () banked
  5595  001122  6FF0               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  5596  001124  0E0F               	movlw	15
  5597  001126  6FEF               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  5598  001128                     l8093:
  5599                           
  5600                           ; BSR set to: 1
  5601                           ;ui.c: 191: m_mem_cpy(buf,str);
  5602  001128  0EF4               	movlw	low ui_disp_adj_xfixed_pt@buf
  5603  00112A  0100               	movlb	0	; () banked
  5604  00112C  6FD9               	movwf	m_mem_cpy@d& (0+255),b
  5605  00112E  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  5606  001130  0100               	movlb	0	; () banked
  5607  001132  6FDA               	movwf	(m_mem_cpy@d+1)& (0+255),b
  5608  001134  C1ED  F0DB         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  5609  001138  C1EE  F0DC         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  5610  00113C  ECE9  F010         	call	_m_mem_cpy	;wreg free
  5611                           
  5612                           ;ui.c: 192: m_int16_2_str_4(buf+4,x);
  5613  001140  0EF8               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  5614  001142  0100               	movlb	0	; () banked
  5615  001144  6FE1               	movwf	m_int16_2_str_4@buf& (0+255),b
  5616  001146  0E01               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  5617  001148  0100               	movlb	0	; () banked
  5618  00114A  6FE2               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  5619  00114C  C1EF  F0E3         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  5620  001150  C1F0  F0E4         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  5621  001154  ECB7  F003         	call	_m_int16_2_str_4	;wreg free
  5622                           
  5623                           ;ui.c: 193: __x_arrange_str(buf,8);
  5624  001158  0EF4               	movlw	low ui_disp_adj_xfixed_pt@buf
  5625  00115A  0100               	movlb	0	; () banked
  5626  00115C  6FD9               	movwf	___x_arrange_str@str& (0+255),b
  5627  00115E  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  5628  001160  0100               	movlb	0	; () banked
  5629  001162  6FDA               	movwf	(___x_arrange_str@str+1)& (0+255),b
  5630  001164  0E08               	movlw	8
  5631  001166  0100               	movlb	0	; () banked
  5632  001168  6FDB               	movwf	___x_arrange_str@len& (0+255),b
  5633  00116A  EC15  F00F         	call	___x_arrange_str	;wreg free
  5634                           
  5635                           ;ui.c: 194: if(loc>3)loc=3;
  5636  00116E  0E03               	movlw	3
  5637  001170  0101               	movlb	1	; () banked
  5638  001172  65F1               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  5639  001174  D003               	goto	l8103
  5640                           
  5641                           ; BSR set to: 1
  5642  001176  0E03               	movlw	3
  5643  001178  0101               	movlb	1	; () banked
  5644  00117A  6FF1               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  5645  00117C                     l8103:
  5646                           
  5647                           ; BSR set to: 1
  5648                           ;ui.c: 195: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  5649  00117C  010F               	movlb	15	; () banked
  5650  00117E  B75F               	btfsc	95,3,b	;volatile
  5651  001180  D014               	goto	l8107
  5652                           
  5653                           ; BSR set to: 15
  5654  001182  0101               	movlb	1	; () banked
  5655  001184  51F1               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  5656  001186  0101               	movlb	1	; () banked
  5657  001188  6FF2               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  5658  00118A  6BF3               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  5659  00118C  0E04               	movlw	4
  5660  00118E  0101               	movlb	1	; () banked
  5661  001190  27F2               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  5662  001192  0E00               	movlw	0
  5663  001194  23F3               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  5664  001196  0EF4               	movlw	low ui_disp_adj_xfixed_pt@buf
  5665  001198  0101               	movlb	1	; () banked
  5666  00119A  25F2               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  5667  00119C  6ED9               	movwf	fsr2l,c
  5668  00119E  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  5669  0011A0  0101               	movlb	1	; () banked
  5670  0011A2  21F3               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  5671  0011A4  6EDA               	movwf	fsr2h,c
  5672  0011A6  0E20               	movlw	32
  5673  0011A8  6EDF               	movwf	indf2,c
  5674  0011AA                     l8107:
  5675                           
  5676                           ;ui.c: 196: lcd_show_string(buf);
  5677  0011AA  0EF4               	movlw	low ui_disp_adj_xfixed_pt@buf
  5678  0011AC  0100               	movlb	0	; () banked
  5679  0011AE  6FEC               	movwf	lcd_show_string@str& (0+255),b
  5680  0011B0  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  5681  0011B2  0100               	movlb	0	; () banked
  5682  0011B4  6FED               	movwf	(lcd_show_string@str+1)& (0+255),b
  5683  0011B6  EC77  F00D         	call	_lcd_show_string	;wreg free
  5684                           
  5685                           ;ui.c: 197: lcd_disp_refresh();
  5686  0011BA  EC84  F00E         	call	_lcd_disp_refresh	;wreg free
  5687  0011BE  0012               	return		;funcret
  5688  0011C0                     __end_of_ui_disp_adj_xfixed_pt:
  5689                           	opt stack 0
  5690                           tblptru	equ	0xFF8
  5691                           tblptrh	equ	0xFF7
  5692                           tblptrl	equ	0xFF6
  5693                           tablat	equ	0xFF5
  5694                           prodh	equ	0xFF4
  5695                           prodl	equ	0xFF3
  5696                           intcon	equ	0xFF2
  5697                           postinc0	equ	0xFEE
  5698                           wreg	equ	0xFE8
  5699                           postdec1	equ	0xFE5
  5700                           plusw1	equ	0xFE3
  5701                           fsr1h	equ	0xFE2
  5702                           fsr1l	equ	0xFE1
  5703                           indf2	equ	0xFDF
  5704                           plusw2	equ	0xFDB
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _ui_disp_clear_num_dp *****************
  5710 ;; Defined at:
  5711 ;;		line 159 in file "src/api/ui.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    9
  5732 ;; This function calls:
  5733 ;;		_lcd_show_dp
  5734 ;;		_lcd_show_string
  5735 ;; This function is called by:
  5736 ;;		_ui_disp_adj_xfixed_pt
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text25
  5741  001FF8                     __ptext25:
  5742                           	opt stack 0
  5743  001FF8                     _ui_disp_clear_num_dp:
  5744                           	opt stack 17
  5745                           
  5746                           ;ui.c: 161: lcd_show_string((uint8_t*)"        ");
  5747                           
  5748                           ;incstack = 0
  5749  001FF8  0EE4               	movlw	low STR_2
  5750  001FFA  0100               	movlb	0	; () banked
  5751  001FFC  6FEC               	movwf	lcd_show_string@str& (0+255),b
  5752  001FFE  0EFF               	movlw	high STR_2
  5753  002000  0100               	movlb	0	; () banked
  5754  002002  6FED               	movwf	(lcd_show_string@str+1)& (0+255),b
  5755  002004  EC77  F00D         	call	_lcd_show_string	;wreg free
  5756                           
  5757                           ;ui.c: 162: lcd_show_dp(0,0);
  5758  002008  0E00               	movlw	0
  5759  00200A  0100               	movlb	0	; () banked
  5760  00200C  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5761  00200E  0E00               	movlw	0
  5762  002010  ECAE  F00D         	call	_lcd_show_dp
  5763                           
  5764                           ;ui.c: 163: lcd_show_dp(1,0);
  5765  002014  0E00               	movlw	0
  5766  002016  0100               	movlb	0	; () banked
  5767  002018  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5768  00201A  0E01               	movlw	1
  5769  00201C  ECAE  F00D         	call	_lcd_show_dp
  5770                           
  5771                           ;ui.c: 164: lcd_show_dp(2,0);
  5772  002020  0E00               	movlw	0
  5773  002022  0100               	movlb	0	; () banked
  5774  002024  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5775  002026  0E02               	movlw	2
  5776  002028  ECAE  F00D         	call	_lcd_show_dp
  5777                           
  5778                           ;ui.c: 165: lcd_show_dp(4,0);
  5779  00202C  0E00               	movlw	0
  5780  00202E  0100               	movlb	0	; () banked
  5781  002030  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5782  002032  0E04               	movlw	4
  5783  002034  ECAE  F00D         	call	_lcd_show_dp
  5784                           
  5785                           ;ui.c: 166: lcd_show_dp(5,0);
  5786  002038  0E00               	movlw	0
  5787  00203A  0100               	movlb	0	; () banked
  5788  00203C  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5789  00203E  0E05               	movlw	5
  5790  002040  ECAE  F00D         	call	_lcd_show_dp
  5791                           
  5792                           ;ui.c: 167: lcd_show_dp(6,0);
  5793  002044  0E00               	movlw	0
  5794  002046  0100               	movlb	0	; () banked
  5795  002048  6FE9               	movwf	lcd_show_dp@show& (0+255),b
  5796  00204A  0E06               	movlw	6
  5797  00204C  ECAE  F00D         	call	_lcd_show_dp
  5798  002050  0012               	return		;funcret
  5799  002052                     __end_of_ui_disp_clear_num_dp:
  5800                           	opt stack 0
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           postdec1	equ	0xFE5
  5811                           plusw1	equ	0xFE3
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           plusw2	equ	0xFDB
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _lcd_show_string *****************
  5821 ;; Defined at:
  5822 ;;		line 534 in file "src/driver/lcd.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  str             2   19[BANK0 ] PTR unsigned char 
  5825 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  t8              1   21[BANK0 ] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;Total ram usage:        3 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    8
  5844 ;; This function calls:
  5845 ;;		_lcd_show_chr
  5846 ;; This function is called by:
  5847 ;;		_ui_disp_rtc_mm_ss
  5848 ;;		_ui_disp_clear_num_dp
  5849 ;;		_ui_disp_adj_xfixed_pt
  5850 ;;		_ui_disp_adj_xfloat_pt
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text26
  5855  001AEE                     __ptext26:
  5856                           	opt stack 0
  5857  001AEE                     _lcd_show_string:
  5858                           	opt stack 21
  5859                           
  5860                           ;lcd.c: 536: uint8_t t8=0;
  5861                           
  5862                           ;incstack = 0
  5863  001AEE  0E00               	movlw	0
  5864  001AF0  0100               	movlb	0	; () banked
  5865  001AF2  6FEE               	movwf	lcd_show_string@t8& (0+255),b
  5866                           
  5867                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  5868  001AF4  D01B               	goto	l7857
  5869  001AF6                     l7851:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  5873  001AF6  C0EC  FFF6         	movff	lcd_show_string@str,tblptrl
  5874  001AFA  C0ED  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5875  001AFE  6AF8               	clrf	tblptru,c
  5876  001B00  0E0F               	movlw	(high __ramtop+-1)
  5877  001B02  64F7               	cpfsgt	tblptrh,c
  5878  001B04  D003               	bra	u5987
  5879  001B06  0008               	tblrd		*
  5880  001B08  50F5               	movf	tablat,w,c
  5881  001B0A  D005               	bra	u5980
  5882  001B0C                     u5987:
  5883  001B0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5884  001B10  CFF7 FFEA          	movff	tblptrh,fsr0h
  5885  001B14  50EF               	movf	indf0,w,c
  5886  001B16                     u5980:
  5887  001B16  0100               	movlb	0	; () banked
  5888  001B18  6FE9               	movwf	lcd_show_chr@chr& (0+255),b
  5889  001B1A  0100               	movlb	0	; () banked
  5890  001B1C  51EE               	movf	lcd_show_string@t8& (0+255),w,b
  5891  001B1E  EC2B  F00A         	call	_lcd_show_chr
  5892                           
  5893                           ;lcd.c: 539: str++;
  5894  001B22  0100               	movlb	0	; () banked
  5895  001B24  4BEC               	infsnz	lcd_show_string@str& (0+255),f,b
  5896  001B26  2BED               	incf	(lcd_show_string@str+1)& (0+255),f,b
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;lcd.c: 540: t8++;
  5900  001B28  0100               	movlb	0	; () banked
  5901  001B2A  2BEE               	incf	lcd_show_string@t8& (0+255),f,b
  5902  001B2C                     l7857:
  5903                           
  5904                           ; BSR set to: 0
  5905  001B2C  C0EC  FFF6         	movff	lcd_show_string@str,tblptrl
  5906  001B30  C0ED  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5907  001B34  6AF8               	clrf	tblptru,c
  5908  001B36  0E0F               	movlw	(high __ramtop+-1)
  5909  001B38  64F7               	cpfsgt	tblptrh,c
  5910  001B3A  D003               	bra	u5997
  5911  001B3C  0008               	tblrd		*
  5912  001B3E  50F5               	movf	tablat,w,c
  5913  001B40  D005               	bra	u5990
  5914  001B42                     u5997:
  5915  001B42  CFF6 FFE9          	movff	tblptrl,fsr0l
  5916  001B46  CFF7 FFEA          	movff	tblptrh,fsr0h
  5917  001B4A  50EF               	movf	indf0,w,c
  5918  001B4C                     u5990:
  5919  001B4C  0900               	iorlw	0
  5920  001B4E  B4D8               	btfsc	status,2,c
  5921  001B50  0012               	return	
  5922  001B52  0E07               	movlw	7
  5923  001B54  0100               	movlb	0	; () banked
  5924  001B56  65EE               	cpfsgt	lcd_show_string@t8& (0+255),b
  5925  001B58  D7CE               	goto	l7851
  5926  001B5A  0012               	return	
  5927  001B5C                     __end_of_lcd_show_string:
  5928                           	opt stack 0
  5929                           tblptru	equ	0xFF8
  5930                           tblptrh	equ	0xFF7
  5931                           tblptrl	equ	0xFF6
  5932                           tablat	equ	0xFF5
  5933                           prodh	equ	0xFF4
  5934                           prodl	equ	0xFF3
  5935                           intcon	equ	0xFF2
  5936                           indf0	equ	0xFEF
  5937                           postinc0	equ	0xFEE
  5938                           fsr0h	equ	0xFEA
  5939                           fsr0l	equ	0xFE9
  5940                           wreg	equ	0xFE8
  5941                           postdec1	equ	0xFE5
  5942                           plusw1	equ	0xFE3
  5943                           fsr1h	equ	0xFE2
  5944                           fsr1l	equ	0xFE1
  5945                           indf2	equ	0xFDF
  5946                           plusw2	equ	0xFDB
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8
  5950                           
  5951 ;; *************** function _lcd_show_chr *****************
  5952 ;; Defined at:
  5953 ;;		line 489 in file "src/driver/lcd.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  loc             1    wreg     unsigned char 
  5956 ;;  chr             1   16[BANK0 ] unsigned char 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  loc             1   17[BANK0 ] unsigned char 
  5959 ;;  code            1   18[BANK0 ] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        3 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    7
  5976 ;; This function calls:
  5977 ;;		_lcd_disp_chr_loc_0
  5978 ;;		_lcd_disp_chr_loc_1
  5979 ;;		_lcd_disp_chr_loc_2
  5980 ;;		_lcd_disp_chr_loc_3
  5981 ;;		_lcd_disp_chr_loc_4
  5982 ;;		_lcd_disp_chr_loc_5
  5983 ;;		_lcd_disp_chr_loc_6
  5984 ;;		_lcd_disp_chr_loc_7
  5985 ;;		_lcd_disp_get_code
  5986 ;; This function is called by:
  5987 ;;		_lcd_show_string_l0
  5988 ;;		_lcd_show_string_l1
  5989 ;;		_lcd_show_string
  5990 ;;		_lcd_show_chr_lc
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text27
  5995  001456                     __ptext27:
  5996                           	opt stack 0
  5997  001456                     _lcd_show_chr:
  5998                           	opt stack 21
  5999                           
  6000                           ;incstack = 0
  6001                           ;lcd_show_chr@loc stored from wreg
  6002  001456  0100               	movlb	0	; () banked
  6003  001458  6FEA               	movwf	lcd_show_chr@loc& (0+255),b
  6004                           
  6005                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  6006  00145A  0100               	movlb	0	; () banked
  6007  00145C  51E9               	movf	lcd_show_chr@chr& (0+255),w,b
  6008  00145E  ECE6  F00E         	call	_lcd_disp_get_code
  6009  001462  0100               	movlb	0	; () banked
  6010  001464  6FEB               	movwf	lcd_show_chr@code& (0+255),b
  6011                           
  6012                           ;lcd.c: 492: switch(loc){
  6013  001466  D028               	goto	l7829
  6014  001468                     l7811:
  6015                           
  6016                           ; BSR set to: 0
  6017  001468  0100               	movlb	0	; () banked
  6018  00146A  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6019  00146C  EC6F  F00C         	call	_lcd_disp_chr_loc_0
  6020  001470  0012               	return	
  6021  001472                     l7813:
  6022  001472  0100               	movlb	0	; () banked
  6023  001474  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6024  001476  EC27  F00C         	call	_lcd_disp_chr_loc_1
  6025  00147A  0012               	return	
  6026  00147C                     l7815:
  6027  00147C  0100               	movlb	0	; () banked
  6028  00147E  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6029  001480  ECDF  F00B         	call	_lcd_disp_chr_loc_2
  6030  001484  0012               	return	
  6031  001486                     l7817:
  6032  001486  0100               	movlb	0	; () banked
  6033  001488  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6034  00148A  EC97  F00B         	call	_lcd_disp_chr_loc_3
  6035  00148E  0012               	return	
  6036  001490                     l7819:
  6037  001490  0100               	movlb	0	; () banked
  6038  001492  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6039  001494  EC4F  F00B         	call	_lcd_disp_chr_loc_4
  6040  001498  0012               	return	
  6041  00149A                     l7821:
  6042  00149A  0100               	movlb	0	; () banked
  6043  00149C  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6044  00149E  EC07  F00B         	call	_lcd_disp_chr_loc_5
  6045  0014A2  0012               	return	
  6046  0014A4                     l7823:
  6047  0014A4  0100               	movlb	0	; () banked
  6048  0014A6  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6049  0014A8  ECBF  F00A         	call	_lcd_disp_chr_loc_6
  6050  0014AC  0012               	return	
  6051  0014AE                     l7825:
  6052  0014AE  0100               	movlb	0	; () banked
  6053  0014B0  51EB               	movf	lcd_show_chr@code& (0+255),w,b
  6054  0014B2  EC77  F00A         	call	_lcd_disp_chr_loc_7
  6055                           
  6056                           ;lcd.c: 502: }
  6057                           
  6058                           ;lcd.c: 501: default:break;
  6059  0014B6  0012               	return	
  6060  0014B8                     l7829:
  6061  0014B8  0100               	movlb	0	; () banked
  6062  0014BA  51EA               	movf	lcd_show_chr@loc& (0+255),w,b
  6063                           
  6064                           ; Switch size 1, requested type "space"
  6065                           ; Number of cases is 8, Range of values is 0 to 7
  6066                           ; switch strategies available:
  6067                           ; Name         Instructions Cycles
  6068                           ; simple_byte           25    13 (average)
  6069                           ;	Chosen strategy is simple_byte
  6070  0014BC  0A00               	xorlw	0	; case 0
  6071  0014BE  B4D8               	btfsc	status,2,c
  6072  0014C0  D7D3               	goto	l7811
  6073  0014C2  0A01               	xorlw	1	; case 1
  6074  0014C4  B4D8               	btfsc	status,2,c
  6075  0014C6  D7D5               	goto	l7813
  6076  0014C8  0A03               	xorlw	3	; case 2
  6077  0014CA  B4D8               	btfsc	status,2,c
  6078  0014CC  D7D7               	goto	l7815
  6079  0014CE  0A01               	xorlw	1	; case 3
  6080  0014D0  B4D8               	btfsc	status,2,c
  6081  0014D2  D7D9               	goto	l7817
  6082  0014D4  0A07               	xorlw	7	; case 4
  6083  0014D6  B4D8               	btfsc	status,2,c
  6084  0014D8  D7DB               	goto	l7819
  6085  0014DA  0A01               	xorlw	1	; case 5
  6086  0014DC  B4D8               	btfsc	status,2,c
  6087  0014DE  D7DD               	goto	l7821
  6088  0014E0  0A03               	xorlw	3	; case 6
  6089  0014E2  B4D8               	btfsc	status,2,c
  6090  0014E4  D7DF               	goto	l7823
  6091  0014E6  0A01               	xorlw	1	; case 7
  6092  0014E8  A4D8               	btfss	status,2,c
  6093  0014EA  0012               	return	
  6094  0014EC  D7E0               	goto	l7825
  6095  0014EE                     __end_of_lcd_show_chr:
  6096                           	opt stack 0
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           indf0	equ	0xFEF
  6105                           postinc0	equ	0xFEE
  6106                           fsr0h	equ	0xFEA
  6107                           fsr0l	equ	0xFE9
  6108                           wreg	equ	0xFE8
  6109                           postdec1	equ	0xFE5
  6110                           plusw1	equ	0xFE3
  6111                           fsr1h	equ	0xFE2
  6112                           fsr1l	equ	0xFE1
  6113                           indf2	equ	0xFDF
  6114                           plusw2	equ	0xFDB
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _lcd_disp_get_code *****************
  6120 ;; Defined at:
  6121 ;;		line 461 in file "src/driver/lcd.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  chr             1    wreg     unsigned char 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  chr             1    0[BANK0 ] unsigned char 
  6126 ;;  i               1    2[BANK0 ] unsigned char 
  6127 ;;  ret             1    1[BANK0 ] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      unsigned char 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        3 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    4
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_lcd_show_chr
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text28
  6152  001DCC                     __ptext28:
  6153                           	opt stack 0
  6154  001DCC                     _lcd_disp_get_code:
  6155                           	opt stack 23
  6156                           
  6157                           ;incstack = 0
  6158                           ;lcd_disp_get_code@chr stored from wreg
  6159  001DCC  0100               	movlb	0	; () banked
  6160  001DCE  6FD9               	movwf	lcd_disp_get_code@chr& (0+255),b
  6161                           
  6162                           ;lcd.c: 463: uint8_t i;
  6163                           ;lcd.c: 464: uint8_t ret;
  6164                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  6165  001DD0  0E00               	movlw	0
  6166  001DD2  0100               	movlb	0	; () banked
  6167  001DD4  6FDB               	movwf	lcd_disp_get_code@i& (0+255),b
  6168  001DD6                     l7771:
  6169                           
  6170                           ; BSR set to: 0
  6171  001DD6  0E28               	movlw	40
  6172  001DD8  0100               	movlb	0	; () banked
  6173  001DDA  65DB               	cpfsgt	lcd_disp_get_code@i& (0+255),b
  6174  001DDC  D001               	goto	l7775
  6175  001DDE  D012               	goto	l7783
  6176  001DE0                     l7775:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  6180  001DE0  0100               	movlb	0	; () banked
  6181  001DE2  51DB               	movf	lcd_disp_get_code@i& (0+255),w,b
  6182  001DE4  0D01               	mullw	1
  6183  001DE6  0EBB               	movlw	low _LCDDigitalIndexTable
  6184  001DE8  24F3               	addwf	prodl,w,c
  6185  001DEA  6EF6               	movwf	tblptrl,c
  6186  001DEC  0EFE               	movlw	high _LCDDigitalIndexTable
  6187  001DEE  20F4               	addwfc	prodh,w,c
  6188  001DF0  6EF7               	movwf	tblptrh,c
  6189  001DF2                     	if	0	;There are less than 3 active tblptr bytes
  6190  001DF2                     	endif
  6191  001DF2  0008               	tblrd		*
  6192  001DF4  50F5               	movf	tablat,w,c
  6193  001DF6  0100               	movlb	0	; () banked
  6194  001DF8  19D9               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
  6195  001DFA  B4D8               	btfsc	status,2,c
  6196  001DFC  D003               	goto	l7783
  6197                           
  6198                           ; BSR set to: 0
  6199                           
  6200                           ; BSR set to: 0
  6201                           
  6202                           ; BSR set to: 0
  6203  001DFE  0100               	movlb	0	; () banked
  6204  001E00  2BDB               	incf	lcd_disp_get_code@i& (0+255),f,b
  6205  001E02  D7E9               	goto	l7771
  6206  001E04                     l7783:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;lcd.c: 467: }
  6210                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  6211  001E04  0E29               	movlw	41
  6212  001E06  0100               	movlb	0	; () banked
  6213  001E08  61DB               	cpfslt	lcd_disp_get_code@i& (0+255),b
  6214  001E0A  D00C               	goto	l7787
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  6218  001E0C  0100               	movlb	0	; () banked
  6219  001E0E  51DB               	movf	lcd_disp_get_code@i& (0+255),w,b
  6220  001E10  0D01               	mullw	1
  6221  001E12  0EE4               	movlw	low _LCDDigitalTable
  6222  001E14  24F3               	addwf	prodl,w,c
  6223  001E16  6EF6               	movwf	tblptrl,c
  6224  001E18  0EFE               	movlw	high _LCDDigitalTable
  6225  001E1A  20F4               	addwfc	prodh,w,c
  6226  001E1C  6EF7               	movwf	tblptrh,c
  6227  001E1E                     	if	0	;There are less than 3 active tblptr bytes
  6228  001E1E                     	endif
  6229  001E1E  0008               	tblrd		*
  6230  001E20  CFF5 F0DA          	movff	tablat,lcd_disp_get_code@ret
  6231  001E24                     l7787:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;lcd.c: 470: }
  6235                           ;lcd.c: 471: return ret;
  6236  001E24  0100               	movlb	0	; () banked
  6237  001E26  51DA               	movf	lcd_disp_get_code@ret& (0+255),w,b
  6238  001E28  0012               	return	
  6239  001E2A                     __end_of_lcd_disp_get_code:
  6240                           	opt stack 0
  6241                           tblptru	equ	0xFF8
  6242                           tblptrh	equ	0xFF7
  6243                           tblptrl	equ	0xFF6
  6244                           tablat	equ	0xFF5
  6245                           prodh	equ	0xFF4
  6246                           prodl	equ	0xFF3
  6247                           intcon	equ	0xFF2
  6248                           indf0	equ	0xFEF
  6249                           postinc0	equ	0xFEE
  6250                           fsr0h	equ	0xFEA
  6251                           fsr0l	equ	0xFE9
  6252                           wreg	equ	0xFE8
  6253                           postdec1	equ	0xFE5
  6254                           plusw1	equ	0xFE3
  6255                           fsr1h	equ	0xFE2
  6256                           fsr1l	equ	0xFE1
  6257                           indf2	equ	0xFDF
  6258                           plusw2	equ	0xFDB
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _lcd_disp_chr_loc_7 *****************
  6264 ;; Defined at:
  6265 ;;		line 353 in file "src/driver/lcd.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  code            1    wreg     unsigned char 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  code            1   31[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        1 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    6
  6286 ;; This function calls:
  6287 ;;		_lcd_set_com_seg
  6288 ;; This function is called by:
  6289 ;;		_lcd_show_chr
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text29
  6294  0014EE                     __ptext29:
  6295                           	opt stack 0
  6296  0014EE                     _lcd_disp_chr_loc_7:
  6297                           	opt stack 21
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;incstack = 0
  6301                           ;lcd_disp_chr_loc_7@code stored from wreg
  6302  0014EE  6E20               	movwf	lcd_disp_chr_loc_7@code,c
  6303                           
  6304                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  6305  0014F0  0E13               	movlw	19
  6306  0014F2  0100               	movlb	0	; () banked
  6307  0014F4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6308  0014F6  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6309  0014F8  0B08               	andlw	8
  6310  0014FA  0100               	movlb	0	; () banked
  6311  0014FC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6312  0014FE  0E00               	movlw	0
  6313  001500  ECA9  F006         	call	_lcd_set_com_seg
  6314                           
  6315                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  6316  001504  0E13               	movlw	19
  6317  001506  0100               	movlb	0	; () banked
  6318  001508  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6319  00150A  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6320  00150C  0B10               	andlw	16
  6321  00150E  0100               	movlb	0	; () banked
  6322  001510  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6323  001512  0E01               	movlw	1
  6324  001514  ECA9  F006         	call	_lcd_set_com_seg
  6325                           
  6326                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  6327  001518  0E13               	movlw	19
  6328  00151A  0100               	movlb	0	; () banked
  6329  00151C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6330  00151E  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6331  001520  0B20               	andlw	32
  6332  001522  0100               	movlb	0	; () banked
  6333  001524  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6334  001526  0E02               	movlw	2
  6335  001528  ECA9  F006         	call	_lcd_set_com_seg
  6336                           
  6337                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  6338  00152C  0E13               	movlw	19
  6339  00152E  0100               	movlb	0	; () banked
  6340  001530  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6341  001532  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6342  001534  0B01               	andlw	1
  6343  001536  0100               	movlb	0	; () banked
  6344  001538  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6345  00153A  0E03               	movlw	3
  6346  00153C  ECA9  F006         	call	_lcd_set_com_seg
  6347                           
  6348                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  6349  001540  0E28               	movlw	40
  6350  001542  0100               	movlb	0	; () banked
  6351  001544  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6352  001546  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6353  001548  0B04               	andlw	4
  6354  00154A  0100               	movlb	0	; () banked
  6355  00154C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6356  00154E  0E01               	movlw	1
  6357  001550  ECA9  F006         	call	_lcd_set_com_seg
  6358                           
  6359                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  6360  001554  0E28               	movlw	40
  6361  001556  0100               	movlb	0	; () banked
  6362  001558  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6363  00155A  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6364  00155C  0B40               	andlw	64
  6365  00155E  0100               	movlb	0	; () banked
  6366  001560  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6367  001562  0E02               	movlw	2
  6368  001564  ECA9  F006         	call	_lcd_set_com_seg
  6369                           
  6370                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  6371  001568  0E28               	movlw	40
  6372  00156A  0100               	movlb	0	; () banked
  6373  00156C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6374  00156E  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  6375  001570  0B02               	andlw	2
  6376  001572  0100               	movlb	0	; () banked
  6377  001574  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6378  001576  0E03               	movlw	3
  6379  001578  ECA9  F006         	call	_lcd_set_com_seg
  6380  00157C  0012               	return		;funcret
  6381  00157E                     __end_of_lcd_disp_chr_loc_7:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           indf0	equ	0xFEF
  6391                           postinc0	equ	0xFEE
  6392                           fsr0h	equ	0xFEA
  6393                           fsr0l	equ	0xFE9
  6394                           wreg	equ	0xFE8
  6395                           postdec1	equ	0xFE5
  6396                           plusw1	equ	0xFE3
  6397                           fsr1h	equ	0xFE2
  6398                           fsr1l	equ	0xFE1
  6399                           indf2	equ	0xFDF
  6400                           plusw2	equ	0xFDB
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function _lcd_disp_chr_loc_6 *****************
  6406 ;; Defined at:
  6407 ;;		line 334 in file "src/driver/lcd.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  code            1    wreg     unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  code            1   31[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        1 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    6
  6428 ;; This function calls:
  6429 ;;		_lcd_set_com_seg
  6430 ;; This function is called by:
  6431 ;;		_lcd_show_chr
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text30
  6436  00157E                     __ptext30:
  6437                           	opt stack 0
  6438  00157E                     _lcd_disp_chr_loc_6:
  6439                           	opt stack 21
  6440                           
  6441                           ;incstack = 0
  6442                           ;lcd_disp_chr_loc_6@code stored from wreg
  6443  00157E  6E20               	movwf	lcd_disp_chr_loc_6@code,c
  6444                           
  6445                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  6446  001580  0E0E               	movlw	14
  6447  001582  0100               	movlb	0	; () banked
  6448  001584  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6449  001586  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6450  001588  0B08               	andlw	8
  6451  00158A  0100               	movlb	0	; () banked
  6452  00158C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6453  00158E  0E00               	movlw	0
  6454  001590  ECA9  F006         	call	_lcd_set_com_seg
  6455                           
  6456                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  6457  001594  0E0E               	movlw	14
  6458  001596  0100               	movlb	0	; () banked
  6459  001598  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6460  00159A  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6461  00159C  0B10               	andlw	16
  6462  00159E  0100               	movlb	0	; () banked
  6463  0015A0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6464  0015A2  0E01               	movlw	1
  6465  0015A4  ECA9  F006         	call	_lcd_set_com_seg
  6466                           
  6467                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  6468  0015A8  0E0E               	movlw	14
  6469  0015AA  0100               	movlb	0	; () banked
  6470  0015AC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6471  0015AE  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6472  0015B0  0B20               	andlw	32
  6473  0015B2  0100               	movlb	0	; () banked
  6474  0015B4  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6475  0015B6  0E02               	movlw	2
  6476  0015B8  ECA9  F006         	call	_lcd_set_com_seg
  6477                           
  6478                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  6479  0015BC  0E0E               	movlw	14
  6480  0015BE  0100               	movlb	0	; () banked
  6481  0015C0  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6482  0015C2  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6483  0015C4  0B01               	andlw	1
  6484  0015C6  0100               	movlb	0	; () banked
  6485  0015C8  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6486  0015CA  0E03               	movlw	3
  6487  0015CC  ECA9  F006         	call	_lcd_set_com_seg
  6488                           
  6489                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  6490  0015D0  0E0F               	movlw	15
  6491  0015D2  0100               	movlb	0	; () banked
  6492  0015D4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6493  0015D6  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6494  0015D8  0B04               	andlw	4
  6495  0015DA  0100               	movlb	0	; () banked
  6496  0015DC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6497  0015DE  0E01               	movlw	1
  6498  0015E0  ECA9  F006         	call	_lcd_set_com_seg
  6499                           
  6500                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  6501  0015E4  0E0F               	movlw	15
  6502  0015E6  0100               	movlb	0	; () banked
  6503  0015E8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6504  0015EA  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6505  0015EC  0B40               	andlw	64
  6506  0015EE  0100               	movlb	0	; () banked
  6507  0015F0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6508  0015F2  0E02               	movlw	2
  6509  0015F4  ECA9  F006         	call	_lcd_set_com_seg
  6510                           
  6511                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  6512  0015F8  0E0F               	movlw	15
  6513  0015FA  0100               	movlb	0	; () banked
  6514  0015FC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6515  0015FE  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  6516  001600  0B02               	andlw	2
  6517  001602  0100               	movlb	0	; () banked
  6518  001604  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6519  001606  0E03               	movlw	3
  6520  001608  ECA9  F006         	call	_lcd_set_com_seg
  6521  00160C  0012               	return		;funcret
  6522  00160E                     __end_of_lcd_disp_chr_loc_6:
  6523                           	opt stack 0
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodh	equ	0xFF4
  6529                           prodl	equ	0xFF3
  6530                           intcon	equ	0xFF2
  6531                           indf0	equ	0xFEF
  6532                           postinc0	equ	0xFEE
  6533                           fsr0h	equ	0xFEA
  6534                           fsr0l	equ	0xFE9
  6535                           wreg	equ	0xFE8
  6536                           postdec1	equ	0xFE5
  6537                           plusw1	equ	0xFE3
  6538                           fsr1h	equ	0xFE2
  6539                           fsr1l	equ	0xFE1
  6540                           indf2	equ	0xFDF
  6541                           plusw2	equ	0xFDB
  6542                           fsr2h	equ	0xFDA
  6543                           fsr2l	equ	0xFD9
  6544                           status	equ	0xFD8
  6545                           
  6546 ;; *************** function _lcd_disp_chr_loc_5 *****************
  6547 ;; Defined at:
  6548 ;;		line 315 in file "src/driver/lcd.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  code            1    wreg     unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  code            1   31[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;Total ram usage:        1 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    6
  6569 ;; This function calls:
  6570 ;;		_lcd_set_com_seg
  6571 ;; This function is called by:
  6572 ;;		_lcd_show_chr
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text31
  6577  00160E                     __ptext31:
  6578                           	opt stack 0
  6579  00160E                     _lcd_disp_chr_loc_5:
  6580                           	opt stack 21
  6581                           
  6582                           ;incstack = 0
  6583                           ;lcd_disp_chr_loc_5@code stored from wreg
  6584  00160E  6E20               	movwf	lcd_disp_chr_loc_5@code,c
  6585                           
  6586                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  6587  001610  0E26               	movlw	38
  6588  001612  0100               	movlb	0	; () banked
  6589  001614  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6590  001616  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6591  001618  0B08               	andlw	8
  6592  00161A  0100               	movlb	0	; () banked
  6593  00161C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6594  00161E  0E00               	movlw	0
  6595  001620  ECA9  F006         	call	_lcd_set_com_seg
  6596                           
  6597                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  6598  001624  0E26               	movlw	38
  6599  001626  0100               	movlb	0	; () banked
  6600  001628  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6601  00162A  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6602  00162C  0B10               	andlw	16
  6603  00162E  0100               	movlb	0	; () banked
  6604  001630  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6605  001632  0E01               	movlw	1
  6606  001634  ECA9  F006         	call	_lcd_set_com_seg
  6607                           
  6608                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  6609  001638  0E26               	movlw	38
  6610  00163A  0100               	movlb	0	; () banked
  6611  00163C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6612  00163E  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6613  001640  0B20               	andlw	32
  6614  001642  0100               	movlb	0	; () banked
  6615  001644  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6616  001646  0E02               	movlw	2
  6617  001648  ECA9  F006         	call	_lcd_set_com_seg
  6618                           
  6619                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  6620  00164C  0E26               	movlw	38
  6621  00164E  0100               	movlb	0	; () banked
  6622  001650  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6623  001652  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6624  001654  0B01               	andlw	1
  6625  001656  0100               	movlb	0	; () banked
  6626  001658  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6627  00165A  0E03               	movlw	3
  6628  00165C  ECA9  F006         	call	_lcd_set_com_seg
  6629                           
  6630                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  6631  001660  0E27               	movlw	39
  6632  001662  0100               	movlb	0	; () banked
  6633  001664  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6634  001666  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6635  001668  0B04               	andlw	4
  6636  00166A  0100               	movlb	0	; () banked
  6637  00166C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6638  00166E  0E01               	movlw	1
  6639  001670  ECA9  F006         	call	_lcd_set_com_seg
  6640                           
  6641                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  6642  001674  0E27               	movlw	39
  6643  001676  0100               	movlb	0	; () banked
  6644  001678  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6645  00167A  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6646  00167C  0B40               	andlw	64
  6647  00167E  0100               	movlb	0	; () banked
  6648  001680  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6649  001682  0E02               	movlw	2
  6650  001684  ECA9  F006         	call	_lcd_set_com_seg
  6651                           
  6652                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  6653  001688  0E27               	movlw	39
  6654  00168A  0100               	movlb	0	; () banked
  6655  00168C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6656  00168E  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  6657  001690  0B02               	andlw	2
  6658  001692  0100               	movlb	0	; () banked
  6659  001694  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6660  001696  0E03               	movlw	3
  6661  001698  ECA9  F006         	call	_lcd_set_com_seg
  6662  00169C  0012               	return		;funcret
  6663  00169E                     __end_of_lcd_disp_chr_loc_5:
  6664                           	opt stack 0
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           intcon	equ	0xFF2
  6672                           indf0	equ	0xFEF
  6673                           postinc0	equ	0xFEE
  6674                           fsr0h	equ	0xFEA
  6675                           fsr0l	equ	0xFE9
  6676                           wreg	equ	0xFE8
  6677                           postdec1	equ	0xFE5
  6678                           plusw1	equ	0xFE3
  6679                           fsr1h	equ	0xFE2
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           plusw2	equ	0xFDB
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _lcd_disp_chr_loc_4 *****************
  6688 ;; Defined at:
  6689 ;;		line 296 in file "src/driver/lcd.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  code            1    wreg     unsigned char 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  code            1   31[COMRAM] unsigned char 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;Total ram usage:        1 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    6
  6710 ;; This function calls:
  6711 ;;		_lcd_set_com_seg
  6712 ;; This function is called by:
  6713 ;;		_lcd_show_chr
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text32
  6718  00169E                     __ptext32:
  6719                           	opt stack 0
  6720  00169E                     _lcd_disp_chr_loc_4:
  6721                           	opt stack 21
  6722                           
  6723                           ;incstack = 0
  6724                           ;lcd_disp_chr_loc_4@code stored from wreg
  6725  00169E  6E20               	movwf	lcd_disp_chr_loc_4@code,c
  6726                           
  6727                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
  6728  0016A0  0E24               	movlw	36
  6729  0016A2  0100               	movlb	0	; () banked
  6730  0016A4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6731  0016A6  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6732  0016A8  0B08               	andlw	8
  6733  0016AA  0100               	movlb	0	; () banked
  6734  0016AC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6735  0016AE  0E00               	movlw	0
  6736  0016B0  ECA9  F006         	call	_lcd_set_com_seg
  6737                           
  6738                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
  6739  0016B4  0E24               	movlw	36
  6740  0016B6  0100               	movlb	0	; () banked
  6741  0016B8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6742  0016BA  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6743  0016BC  0B10               	andlw	16
  6744  0016BE  0100               	movlb	0	; () banked
  6745  0016C0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6746  0016C2  0E01               	movlw	1
  6747  0016C4  ECA9  F006         	call	_lcd_set_com_seg
  6748                           
  6749                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
  6750  0016C8  0E24               	movlw	36
  6751  0016CA  0100               	movlb	0	; () banked
  6752  0016CC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6753  0016CE  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6754  0016D0  0B20               	andlw	32
  6755  0016D2  0100               	movlb	0	; () banked
  6756  0016D4  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6757  0016D6  0E02               	movlw	2
  6758  0016D8  ECA9  F006         	call	_lcd_set_com_seg
  6759                           
  6760                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
  6761  0016DC  0E24               	movlw	36
  6762  0016DE  0100               	movlb	0	; () banked
  6763  0016E0  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6764  0016E2  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6765  0016E4  0B01               	andlw	1
  6766  0016E6  0100               	movlb	0	; () banked
  6767  0016E8  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6768  0016EA  0E03               	movlw	3
  6769  0016EC  ECA9  F006         	call	_lcd_set_com_seg
  6770                           
  6771                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
  6772  0016F0  0E25               	movlw	37
  6773  0016F2  0100               	movlb	0	; () banked
  6774  0016F4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6775  0016F6  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6776  0016F8  0B04               	andlw	4
  6777  0016FA  0100               	movlb	0	; () banked
  6778  0016FC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6779  0016FE  0E01               	movlw	1
  6780  001700  ECA9  F006         	call	_lcd_set_com_seg
  6781                           
  6782                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
  6783  001704  0E25               	movlw	37
  6784  001706  0100               	movlb	0	; () banked
  6785  001708  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6786  00170A  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6787  00170C  0B40               	andlw	64
  6788  00170E  0100               	movlb	0	; () banked
  6789  001710  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6790  001712  0E02               	movlw	2
  6791  001714  ECA9  F006         	call	_lcd_set_com_seg
  6792                           
  6793                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
  6794  001718  0E25               	movlw	37
  6795  00171A  0100               	movlb	0	; () banked
  6796  00171C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6797  00171E  5020               	movf	lcd_disp_chr_loc_4@code,w,c
  6798  001720  0B02               	andlw	2
  6799  001722  0100               	movlb	0	; () banked
  6800  001724  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6801  001726  0E03               	movlw	3
  6802  001728  ECA9  F006         	call	_lcd_set_com_seg
  6803  00172C  0012               	return		;funcret
  6804  00172E                     __end_of_lcd_disp_chr_loc_4:
  6805                           	opt stack 0
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           prodh	equ	0xFF4
  6811                           prodl	equ	0xFF3
  6812                           intcon	equ	0xFF2
  6813                           indf0	equ	0xFEF
  6814                           postinc0	equ	0xFEE
  6815                           fsr0h	equ	0xFEA
  6816                           fsr0l	equ	0xFE9
  6817                           wreg	equ	0xFE8
  6818                           postdec1	equ	0xFE5
  6819                           plusw1	equ	0xFE3
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           indf2	equ	0xFDF
  6823                           plusw2	equ	0xFDB
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function _lcd_disp_chr_loc_3 *****************
  6829 ;; Defined at:
  6830 ;;		line 284 in file "src/driver/lcd.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  code            1    wreg     unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  code            1   31[COMRAM] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;Total ram usage:        1 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    6
  6851 ;; This function calls:
  6852 ;;		_lcd_set_com_seg
  6853 ;; This function is called by:
  6854 ;;		_lcd_show_chr
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text33
  6859  00172E                     __ptext33:
  6860                           	opt stack 0
  6861  00172E                     _lcd_disp_chr_loc_3:
  6862                           	opt stack 21
  6863                           
  6864                           ;incstack = 0
  6865                           ;lcd_disp_chr_loc_3@code stored from wreg
  6866  00172E  6E20               	movwf	lcd_disp_chr_loc_3@code,c
  6867                           
  6868                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
  6869  001730  0E2B               	movlw	43
  6870  001732  0100               	movlb	0	; () banked
  6871  001734  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6872  001736  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6873  001738  0B01               	andlw	1
  6874  00173A  0100               	movlb	0	; () banked
  6875  00173C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6876  00173E  0E00               	movlw	0
  6877  001740  ECA9  F006         	call	_lcd_set_com_seg
  6878                           
  6879                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
  6880  001744  0E2B               	movlw	43
  6881  001746  0100               	movlb	0	; () banked
  6882  001748  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6883  00174A  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6884  00174C  0B20               	andlw	32
  6885  00174E  0100               	movlb	0	; () banked
  6886  001750  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6887  001752  0E01               	movlw	1
  6888  001754  ECA9  F006         	call	_lcd_set_com_seg
  6889                           
  6890                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
  6891  001758  0E2B               	movlw	43
  6892  00175A  0100               	movlb	0	; () banked
  6893  00175C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6894  00175E  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6895  001760  0B10               	andlw	16
  6896  001762  0100               	movlb	0	; () banked
  6897  001764  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6898  001766  0E02               	movlw	2
  6899  001768  ECA9  F006         	call	_lcd_set_com_seg
  6900                           
  6901                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
  6902  00176C  0E2B               	movlw	43
  6903  00176E  0100               	movlb	0	; () banked
  6904  001770  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6905  001772  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6906  001774  0B08               	andlw	8
  6907  001776  0100               	movlb	0	; () banked
  6908  001778  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6909  00177A  0E03               	movlw	3
  6910  00177C  ECA9  F006         	call	_lcd_set_com_seg
  6911                           
  6912                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
  6913  001780  0E2A               	movlw	42
  6914  001782  0100               	movlb	0	; () banked
  6915  001784  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6916  001786  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6917  001788  0B02               	andlw	2
  6918  00178A  0100               	movlb	0	; () banked
  6919  00178C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6920  00178E  0E00               	movlw	0
  6921  001790  ECA9  F006         	call	_lcd_set_com_seg
  6922                           
  6923                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
  6924  001794  0E2A               	movlw	42
  6925  001796  0100               	movlb	0	; () banked
  6926  001798  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6927  00179A  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6928  00179C  0B40               	andlw	64
  6929  00179E  0100               	movlb	0	; () banked
  6930  0017A0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6931  0017A2  0E01               	movlw	1
  6932  0017A4  ECA9  F006         	call	_lcd_set_com_seg
  6933                           
  6934                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
  6935  0017A8  0E2A               	movlw	42
  6936  0017AA  0100               	movlb	0	; () banked
  6937  0017AC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  6938  0017AE  5020               	movf	lcd_disp_chr_loc_3@code,w,c
  6939  0017B0  0B04               	andlw	4
  6940  0017B2  0100               	movlb	0	; () banked
  6941  0017B4  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  6942  0017B6  0E02               	movlw	2
  6943  0017B8  ECA9  F006         	call	_lcd_set_com_seg
  6944  0017BC  0012               	return		;funcret
  6945  0017BE                     __end_of_lcd_disp_chr_loc_3:
  6946                           	opt stack 0
  6947                           tblptru	equ	0xFF8
  6948                           tblptrh	equ	0xFF7
  6949                           tblptrl	equ	0xFF6
  6950                           tablat	equ	0xFF5
  6951                           prodh	equ	0xFF4
  6952                           prodl	equ	0xFF3
  6953                           intcon	equ	0xFF2
  6954                           indf0	equ	0xFEF
  6955                           postinc0	equ	0xFEE
  6956                           fsr0h	equ	0xFEA
  6957                           fsr0l	equ	0xFE9
  6958                           wreg	equ	0xFE8
  6959                           postdec1	equ	0xFE5
  6960                           plusw1	equ	0xFE3
  6961                           fsr1h	equ	0xFE2
  6962                           fsr1l	equ	0xFE1
  6963                           indf2	equ	0xFDF
  6964                           plusw2	equ	0xFDB
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function _lcd_disp_chr_loc_2 *****************
  6970 ;; Defined at:
  6971 ;;		line 265 in file "src/driver/lcd.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  code            1    wreg     unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  code            1   31[COMRAM] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:        1 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    6
  6992 ;; This function calls:
  6993 ;;		_lcd_set_com_seg
  6994 ;; This function is called by:
  6995 ;;		_lcd_show_chr
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text34
  7000  0017BE                     __ptext34:
  7001                           	opt stack 0
  7002  0017BE                     _lcd_disp_chr_loc_2:
  7003                           	opt stack 21
  7004                           
  7005                           ;incstack = 0
  7006                           ;lcd_disp_chr_loc_2@code stored from wreg
  7007  0017BE  6E20               	movwf	lcd_disp_chr_loc_2@code,c
  7008                           
  7009                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
  7010  0017C0  0E15               	movlw	21
  7011  0017C2  0100               	movlb	0	; () banked
  7012  0017C4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7013  0017C6  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7014  0017C8  0B01               	andlw	1
  7015  0017CA  0100               	movlb	0	; () banked
  7016  0017CC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7017  0017CE  0E00               	movlw	0
  7018  0017D0  ECA9  F006         	call	_lcd_set_com_seg
  7019                           
  7020                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
  7021  0017D4  0E15               	movlw	21
  7022  0017D6  0100               	movlb	0	; () banked
  7023  0017D8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7024  0017DA  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7025  0017DC  0B20               	andlw	32
  7026  0017DE  0100               	movlb	0	; () banked
  7027  0017E0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7028  0017E2  0E01               	movlw	1
  7029  0017E4  ECA9  F006         	call	_lcd_set_com_seg
  7030                           
  7031                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
  7032  0017E8  0E15               	movlw	21
  7033  0017EA  0100               	movlb	0	; () banked
  7034  0017EC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7035  0017EE  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7036  0017F0  0B10               	andlw	16
  7037  0017F2  0100               	movlb	0	; () banked
  7038  0017F4  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7039  0017F6  0E02               	movlw	2
  7040  0017F8  ECA9  F006         	call	_lcd_set_com_seg
  7041                           
  7042                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
  7043  0017FC  0E15               	movlw	21
  7044  0017FE  0100               	movlb	0	; () banked
  7045  001800  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7046  001802  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7047  001804  0B08               	andlw	8
  7048  001806  0100               	movlb	0	; () banked
  7049  001808  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7050  00180A  0E03               	movlw	3
  7051  00180C  ECA9  F006         	call	_lcd_set_com_seg
  7052                           
  7053                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
  7054  001810  0E14               	movlw	20
  7055  001812  0100               	movlb	0	; () banked
  7056  001814  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7057  001816  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7058  001818  0B02               	andlw	2
  7059  00181A  0100               	movlb	0	; () banked
  7060  00181C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7061  00181E  0E00               	movlw	0
  7062  001820  ECA9  F006         	call	_lcd_set_com_seg
  7063                           
  7064                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
  7065  001824  0E14               	movlw	20
  7066  001826  0100               	movlb	0	; () banked
  7067  001828  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7068  00182A  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7069  00182C  0B40               	andlw	64
  7070  00182E  0100               	movlb	0	; () banked
  7071  001830  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7072  001832  0E01               	movlw	1
  7073  001834  ECA9  F006         	call	_lcd_set_com_seg
  7074                           
  7075                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
  7076  001838  0E14               	movlw	20
  7077  00183A  0100               	movlb	0	; () banked
  7078  00183C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7079  00183E  5020               	movf	lcd_disp_chr_loc_2@code,w,c
  7080  001840  0B04               	andlw	4
  7081  001842  0100               	movlb	0	; () banked
  7082  001844  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7083  001846  0E02               	movlw	2
  7084  001848  ECA9  F006         	call	_lcd_set_com_seg
  7085  00184C  0012               	return		;funcret
  7086  00184E                     __end_of_lcd_disp_chr_loc_2:
  7087                           	opt stack 0
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           indf0	equ	0xFEF
  7096                           postinc0	equ	0xFEE
  7097                           fsr0h	equ	0xFEA
  7098                           fsr0l	equ	0xFE9
  7099                           wreg	equ	0xFE8
  7100                           postdec1	equ	0xFE5
  7101                           plusw1	equ	0xFE3
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           indf2	equ	0xFDF
  7105                           plusw2	equ	0xFDB
  7106                           fsr2h	equ	0xFDA
  7107                           fsr2l	equ	0xFD9
  7108                           status	equ	0xFD8
  7109                           
  7110 ;; *************** function _lcd_disp_chr_loc_1 *****************
  7111 ;; Defined at:
  7112 ;;		line 246 in file "src/driver/lcd.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  code            1    wreg     unsigned char 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  code            1   31[COMRAM] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;Total ram usage:        1 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    6
  7133 ;; This function calls:
  7134 ;;		_lcd_set_com_seg
  7135 ;; This function is called by:
  7136 ;;		_lcd_show_chr
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text35
  7141  00184E                     __ptext35:
  7142                           	opt stack 0
  7143  00184E                     _lcd_disp_chr_loc_1:
  7144                           	opt stack 21
  7145                           
  7146                           ;incstack = 0
  7147                           ;lcd_disp_chr_loc_1@code stored from wreg
  7148  00184E  6E20               	movwf	lcd_disp_chr_loc_1@code,c
  7149                           
  7150                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
  7151  001850  0E17               	movlw	23
  7152  001852  0100               	movlb	0	; () banked
  7153  001854  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7154  001856  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7155  001858  0B01               	andlw	1
  7156  00185A  0100               	movlb	0	; () banked
  7157  00185C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7158  00185E  0E00               	movlw	0
  7159  001860  ECA9  F006         	call	_lcd_set_com_seg
  7160                           
  7161                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
  7162  001864  0E17               	movlw	23
  7163  001866  0100               	movlb	0	; () banked
  7164  001868  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7165  00186A  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7166  00186C  0B20               	andlw	32
  7167  00186E  0100               	movlb	0	; () banked
  7168  001870  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7169  001872  0E01               	movlw	1
  7170  001874  ECA9  F006         	call	_lcd_set_com_seg
  7171                           
  7172                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
  7173  001878  0E17               	movlw	23
  7174  00187A  0100               	movlb	0	; () banked
  7175  00187C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7176  00187E  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7177  001880  0B10               	andlw	16
  7178  001882  0100               	movlb	0	; () banked
  7179  001884  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7180  001886  0E02               	movlw	2
  7181  001888  ECA9  F006         	call	_lcd_set_com_seg
  7182                           
  7183                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
  7184  00188C  0E17               	movlw	23
  7185  00188E  0100               	movlb	0	; () banked
  7186  001890  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7187  001892  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7188  001894  0B08               	andlw	8
  7189  001896  0100               	movlb	0	; () banked
  7190  001898  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7191  00189A  0E03               	movlw	3
  7192  00189C  ECA9  F006         	call	_lcd_set_com_seg
  7193                           
  7194                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
  7195  0018A0  0E16               	movlw	22
  7196  0018A2  0100               	movlb	0	; () banked
  7197  0018A4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7198  0018A6  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7199  0018A8  0B02               	andlw	2
  7200  0018AA  0100               	movlb	0	; () banked
  7201  0018AC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7202  0018AE  0E00               	movlw	0
  7203  0018B0  ECA9  F006         	call	_lcd_set_com_seg
  7204                           
  7205                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
  7206  0018B4  0E16               	movlw	22
  7207  0018B6  0100               	movlb	0	; () banked
  7208  0018B8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7209  0018BA  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7210  0018BC  0B40               	andlw	64
  7211  0018BE  0100               	movlb	0	; () banked
  7212  0018C0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7213  0018C2  0E01               	movlw	1
  7214  0018C4  ECA9  F006         	call	_lcd_set_com_seg
  7215                           
  7216                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
  7217  0018C8  0E16               	movlw	22
  7218  0018CA  0100               	movlb	0	; () banked
  7219  0018CC  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7220  0018CE  5020               	movf	lcd_disp_chr_loc_1@code,w,c
  7221  0018D0  0B04               	andlw	4
  7222  0018D2  0100               	movlb	0	; () banked
  7223  0018D4  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7224  0018D6  0E02               	movlw	2
  7225  0018D8  ECA9  F006         	call	_lcd_set_com_seg
  7226  0018DC  0012               	return		;funcret
  7227  0018DE                     __end_of_lcd_disp_chr_loc_1:
  7228                           	opt stack 0
  7229                           tblptru	equ	0xFF8
  7230                           tblptrh	equ	0xFF7
  7231                           tblptrl	equ	0xFF6
  7232                           tablat	equ	0xFF5
  7233                           prodh	equ	0xFF4
  7234                           prodl	equ	0xFF3
  7235                           intcon	equ	0xFF2
  7236                           indf0	equ	0xFEF
  7237                           postinc0	equ	0xFEE
  7238                           fsr0h	equ	0xFEA
  7239                           fsr0l	equ	0xFE9
  7240                           wreg	equ	0xFE8
  7241                           postdec1	equ	0xFE5
  7242                           plusw1	equ	0xFE3
  7243                           fsr1h	equ	0xFE2
  7244                           fsr1l	equ	0xFE1
  7245                           indf2	equ	0xFDF
  7246                           plusw2	equ	0xFDB
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function _lcd_disp_chr_loc_0 *****************
  7252 ;; Defined at:
  7253 ;;		line 226 in file "src/driver/lcd.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  code            1    wreg     unsigned char 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  code            1   31[COMRAM] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        1 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    6
  7274 ;; This function calls:
  7275 ;;		_lcd_set_com_seg
  7276 ;; This function is called by:
  7277 ;;		_lcd_show_chr
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text36
  7282  0018DE                     __ptext36:
  7283                           	opt stack 0
  7284  0018DE                     _lcd_disp_chr_loc_0:
  7285                           	opt stack 21
  7286                           
  7287                           ;incstack = 0
  7288                           ;lcd_disp_chr_loc_0@code stored from wreg
  7289  0018DE  6E20               	movwf	lcd_disp_chr_loc_0@code,c
  7290                           
  7291                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
  7292  0018E0  0E19               	movlw	25
  7293  0018E2  0100               	movlb	0	; () banked
  7294  0018E4  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7295  0018E6  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7296  0018E8  0B01               	andlw	1
  7297  0018EA  0100               	movlb	0	; () banked
  7298  0018EC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7299  0018EE  0E00               	movlw	0
  7300  0018F0  ECA9  F006         	call	_lcd_set_com_seg
  7301                           
  7302                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
  7303  0018F4  0E19               	movlw	25
  7304  0018F6  0100               	movlb	0	; () banked
  7305  0018F8  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7306  0018FA  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7307  0018FC  0B20               	andlw	32
  7308  0018FE  0100               	movlb	0	; () banked
  7309  001900  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7310  001902  0E01               	movlw	1
  7311  001904  ECA9  F006         	call	_lcd_set_com_seg
  7312                           
  7313                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
  7314  001908  0E19               	movlw	25
  7315  00190A  0100               	movlb	0	; () banked
  7316  00190C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7317  00190E  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7318  001910  0B10               	andlw	16
  7319  001912  0100               	movlb	0	; () banked
  7320  001914  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7321  001916  0E02               	movlw	2
  7322  001918  ECA9  F006         	call	_lcd_set_com_seg
  7323                           
  7324                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
  7325  00191C  0E19               	movlw	25
  7326  00191E  0100               	movlb	0	; () banked
  7327  001920  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7328  001922  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7329  001924  0B08               	andlw	8
  7330  001926  0100               	movlb	0	; () banked
  7331  001928  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7332  00192A  0E03               	movlw	3
  7333  00192C  ECA9  F006         	call	_lcd_set_com_seg
  7334                           
  7335                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
  7336  001930  0E18               	movlw	24
  7337  001932  0100               	movlb	0	; () banked
  7338  001934  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7339  001936  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7340  001938  0B02               	andlw	2
  7341  00193A  0100               	movlb	0	; () banked
  7342  00193C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7343  00193E  0E00               	movlw	0
  7344  001940  ECA9  F006         	call	_lcd_set_com_seg
  7345                           
  7346                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
  7347  001944  0E18               	movlw	24
  7348  001946  0100               	movlb	0	; () banked
  7349  001948  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7350  00194A  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7351  00194C  0B40               	andlw	64
  7352  00194E  0100               	movlb	0	; () banked
  7353  001950  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7354  001952  0E01               	movlw	1
  7355  001954  ECA9  F006         	call	_lcd_set_com_seg
  7356                           
  7357                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
  7358  001958  0E18               	movlw	24
  7359  00195A  0100               	movlb	0	; () banked
  7360  00195C  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7361  00195E  5020               	movf	lcd_disp_chr_loc_0@code,w,c
  7362  001960  0B04               	andlw	4
  7363  001962  0100               	movlb	0	; () banked
  7364  001964  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7365  001966  0E02               	movlw	2
  7366  001968  ECA9  F006         	call	_lcd_set_com_seg
  7367  00196C  0012               	return		;funcret
  7368  00196E                     __end_of_lcd_disp_chr_loc_0:
  7369                           	opt stack 0
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           prodh	equ	0xFF4
  7375                           prodl	equ	0xFF3
  7376                           intcon	equ	0xFF2
  7377                           indf0	equ	0xFEF
  7378                           postinc0	equ	0xFEE
  7379                           fsr0h	equ	0xFEA
  7380                           fsr0l	equ	0xFE9
  7381                           wreg	equ	0xFE8
  7382                           postdec1	equ	0xFE5
  7383                           plusw1	equ	0xFE3
  7384                           fsr1h	equ	0xFE2
  7385                           fsr1l	equ	0xFE1
  7386                           indf2	equ	0xFDF
  7387                           plusw2	equ	0xFDB
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _lcd_show_dp *****************
  7393 ;; Defined at:
  7394 ;;		line 474 in file "src/driver/lcd.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  loc             1    wreg     unsigned char 
  7397 ;;  show            1   16[BANK0 ] unsigned char 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  loc             1   17[BANK0 ] unsigned char 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        2 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    7
  7416 ;; This function calls:
  7417 ;;		_lcd_disp_dp_loc_0
  7418 ;;		_lcd_disp_dp_loc_1
  7419 ;;		_lcd_disp_dp_loc_2
  7420 ;; This function is called by:
  7421 ;;		_ui_disp_rtc_mm_ss
  7422 ;;		_ui_disp_clear_num_dp
  7423 ;;		_ui_disp_adj_xfloat_pt
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text37
  7428  001B5C                     __ptext37:
  7429                           	opt stack 0
  7430  001B5C                     _lcd_show_dp:
  7431                           	opt stack 22
  7432                           
  7433                           ;incstack = 0
  7434                           ;lcd_show_dp@loc stored from wreg
  7435  001B5C  0100               	movlb	0	; () banked
  7436  001B5E  6FEA               	movwf	lcd_show_dp@loc& (0+255),b
  7437                           
  7438                           ;lcd.c: 476: switch(loc){
  7439  001B60  D01E               	goto	l7847
  7440  001B62                     l7833:
  7441  001B62  0100               	movlb	0	; () banked
  7442  001B64  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7443  001B66  ECE5  F012         	call	_lcd_disp_dp_loc_0
  7444  001B6A  0012               	return	
  7445  001B6C                     l7835:
  7446  001B6C  0100               	movlb	0	; () banked
  7447  001B6E  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7448  001B70  ECCD  F012         	call	_lcd_disp_dp_loc_1
  7449  001B74  0012               	return	
  7450  001B76                     l7837:
  7451  001B76  0100               	movlb	0	; () banked
  7452  001B78  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7453  001B7A  ECB5  F012         	call	_lcd_disp_dp_loc_2
  7454  001B7E  0012               	return	
  7455  001B80                     l7839:
  7456  001B80  0100               	movlb	0	; () banked
  7457  001B82  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7458  001B84  ECE5  F012         	call	_lcd_disp_dp_loc_0
  7459  001B88  0012               	return	
  7460  001B8A                     l7841:
  7461  001B8A  0100               	movlb	0	; () banked
  7462  001B8C  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7463  001B8E  ECCD  F012         	call	_lcd_disp_dp_loc_1
  7464  001B92  0012               	return	
  7465  001B94                     l7843:
  7466  001B94  0100               	movlb	0	; () banked
  7467  001B96  51E9               	movf	lcd_show_dp@show& (0+255),w,b
  7468  001B98  ECB5  F012         	call	_lcd_disp_dp_loc_2
  7469                           
  7470                           ;lcd.c: 486: }
  7471                           
  7472                           ;lcd.c: 485: default:break;
  7473  001B9C  0012               	return	
  7474  001B9E                     l7847:
  7475  001B9E  0100               	movlb	0	; () banked
  7476  001BA0  51EA               	movf	lcd_show_dp@loc& (0+255),w,b
  7477                           
  7478                           ; Switch size 1, requested type "space"
  7479                           ; Number of cases is 6, Range of values is 0 to 6
  7480                           ; switch strategies available:
  7481                           ; Name         Instructions Cycles
  7482                           ; simple_byte           19    10 (average)
  7483                           ;	Chosen strategy is simple_byte
  7484  001BA2  0A00               	xorlw	0	; case 0
  7485  001BA4  B4D8               	btfsc	status,2,c
  7486  001BA6  D7DD               	goto	l7833
  7487  001BA8  0A01               	xorlw	1	; case 1
  7488  001BAA  B4D8               	btfsc	status,2,c
  7489  001BAC  D7DF               	goto	l7835
  7490  001BAE  0A03               	xorlw	3	; case 2
  7491  001BB0  B4D8               	btfsc	status,2,c
  7492  001BB2  D7E1               	goto	l7837
  7493  001BB4  0A06               	xorlw	6	; case 4
  7494  001BB6  B4D8               	btfsc	status,2,c
  7495  001BB8  D7E3               	goto	l7839
  7496  001BBA  0A01               	xorlw	1	; case 5
  7497  001BBC  B4D8               	btfsc	status,2,c
  7498  001BBE  D7E5               	goto	l7841
  7499  001BC0  0A03               	xorlw	3	; case 6
  7500  001BC2  A4D8               	btfss	status,2,c
  7501  001BC4  0012               	return	
  7502  001BC6  D7E6               	goto	l7843
  7503  001BC8                     __end_of_lcd_show_dp:
  7504                           	opt stack 0
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           intcon	equ	0xFF2
  7512                           indf0	equ	0xFEF
  7513                           postinc0	equ	0xFEE
  7514                           fsr0h	equ	0xFEA
  7515                           fsr0l	equ	0xFE9
  7516                           wreg	equ	0xFE8
  7517                           postdec1	equ	0xFE5
  7518                           plusw1	equ	0xFE3
  7519                           fsr1h	equ	0xFE2
  7520                           fsr1l	equ	0xFE1
  7521                           indf2	equ	0xFDF
  7522                           plusw2	equ	0xFDB
  7523                           fsr2h	equ	0xFDA
  7524                           fsr2l	equ	0xFD9
  7525                           status	equ	0xFD8
  7526                           
  7527 ;; *************** function _lcd_disp_dp_loc_2 *****************
  7528 ;; Defined at:
  7529 ;;		line 276 in file "src/driver/lcd.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  dp              1    wreg     unsigned char 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  dp              1   31[COMRAM] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;Total ram usage:        1 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    6
  7550 ;; This function calls:
  7551 ;;		_lcd_set_com_seg
  7552 ;; This function is called by:
  7553 ;;		_lcd_show_dp
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text38
  7558  00256A                     __ptext38:
  7559                           	opt stack 0
  7560  00256A                     _lcd_disp_dp_loc_2:
  7561                           	opt stack 22
  7562                           
  7563                           ;incstack = 0
  7564                           ;lcd_disp_dp_loc_2@dp stored from wreg
  7565  00256A  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
  7566                           
  7567                           ;lcd.c: 278: if(dp)
  7568  00256C  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
  7569  00256E  B4D8               	btfsc	status,2,c
  7570  002570  D00A               	goto	l7807
  7571                           
  7572                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
  7573  002572  0E14               	movlw	20
  7574  002574  0100               	movlb	0	; () banked
  7575  002576  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7576  002578  0E80               	movlw	128
  7577  00257A  0100               	movlb	0	; () banked
  7578  00257C  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7579  00257E  0E03               	movlw	3
  7580  002580  ECA9  F006         	call	_lcd_set_com_seg
  7581  002584  0012               	return	
  7582  002586                     l7807:
  7583                           
  7584                           ;lcd.c: 280: else
  7585                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
  7586  002586  0E14               	movlw	20
  7587  002588  0100               	movlb	0	; () banked
  7588  00258A  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7589  00258C  0E00               	movlw	0
  7590  00258E  0100               	movlb	0	; () banked
  7591  002590  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7592  002592  0E03               	movlw	3
  7593  002594  ECA9  F006         	call	_lcd_set_com_seg
  7594  002598  0012               	return	
  7595  00259A                     __end_of_lcd_disp_dp_loc_2:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           prodh	equ	0xFF4
  7602                           prodl	equ	0xFF3
  7603                           intcon	equ	0xFF2
  7604                           indf0	equ	0xFEF
  7605                           postinc0	equ	0xFEE
  7606                           fsr0h	equ	0xFEA
  7607                           fsr0l	equ	0xFE9
  7608                           wreg	equ	0xFE8
  7609                           postdec1	equ	0xFE5
  7610                           plusw1	equ	0xFE3
  7611                           fsr1h	equ	0xFE2
  7612                           fsr1l	equ	0xFE1
  7613                           indf2	equ	0xFDF
  7614                           plusw2	equ	0xFDB
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _lcd_disp_dp_loc_1 *****************
  7620 ;; Defined at:
  7621 ;;		line 257 in file "src/driver/lcd.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  dp              1    wreg     unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  dp              1   31[COMRAM] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;Total ram usage:        1 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    6
  7642 ;; This function calls:
  7643 ;;		_lcd_set_com_seg
  7644 ;; This function is called by:
  7645 ;;		_lcd_show_dp
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text39
  7650  00259A                     __ptext39:
  7651                           	opt stack 0
  7652  00259A                     _lcd_disp_dp_loc_1:
  7653                           	opt stack 22
  7654                           
  7655                           ;incstack = 0
  7656                           ;lcd_disp_dp_loc_1@dp stored from wreg
  7657  00259A  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
  7658                           
  7659                           ;lcd.c: 259: if(dp)
  7660  00259C  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
  7661  00259E  B4D8               	btfsc	status,2,c
  7662  0025A0  D00A               	goto	l7801
  7663                           
  7664                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
  7665  0025A2  0E16               	movlw	22
  7666  0025A4  0100               	movlb	0	; () banked
  7667  0025A6  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7668  0025A8  0E80               	movlw	128
  7669  0025AA  0100               	movlb	0	; () banked
  7670  0025AC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7671  0025AE  0E03               	movlw	3
  7672  0025B0  ECA9  F006         	call	_lcd_set_com_seg
  7673  0025B4  0012               	return	
  7674  0025B6                     l7801:
  7675                           
  7676                           ;lcd.c: 261: else
  7677                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
  7678  0025B6  0E16               	movlw	22
  7679  0025B8  0100               	movlb	0	; () banked
  7680  0025BA  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7681  0025BC  0E00               	movlw	0
  7682  0025BE  0100               	movlb	0	; () banked
  7683  0025C0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7684  0025C2  0E03               	movlw	3
  7685  0025C4  ECA9  F006         	call	_lcd_set_com_seg
  7686  0025C8  0012               	return	
  7687  0025CA                     __end_of_lcd_disp_dp_loc_1:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           intcon	equ	0xFF2
  7696                           indf0	equ	0xFEF
  7697                           postinc0	equ	0xFEE
  7698                           fsr0h	equ	0xFEA
  7699                           fsr0l	equ	0xFE9
  7700                           wreg	equ	0xFE8
  7701                           postdec1	equ	0xFE5
  7702                           plusw1	equ	0xFE3
  7703                           fsr1h	equ	0xFE2
  7704                           fsr1l	equ	0xFE1
  7705                           indf2	equ	0xFDF
  7706                           plusw2	equ	0xFDB
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function _lcd_disp_dp_loc_0 *****************
  7712 ;; Defined at:
  7713 ;;		line 238 in file "src/driver/lcd.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  dp              1    wreg     unsigned char 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  dp              1   31[COMRAM] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;Total ram usage:        1 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    6
  7734 ;; This function calls:
  7735 ;;		_lcd_set_com_seg
  7736 ;; This function is called by:
  7737 ;;		_lcd_show_dp
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text40
  7742  0025CA                     __ptext40:
  7743                           	opt stack 0
  7744  0025CA                     _lcd_disp_dp_loc_0:
  7745                           	opt stack 22
  7746                           
  7747                           ;incstack = 0
  7748                           ;lcd_disp_dp_loc_0@dp stored from wreg
  7749  0025CA  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
  7750                           
  7751                           ;lcd.c: 240: if(dp)
  7752  0025CC  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
  7753  0025CE  B4D8               	btfsc	status,2,c
  7754  0025D0  D00A               	goto	l7795
  7755                           
  7756                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
  7757  0025D2  0E18               	movlw	24
  7758  0025D4  0100               	movlb	0	; () banked
  7759  0025D6  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7760  0025D8  0E80               	movlw	128
  7761  0025DA  0100               	movlb	0	; () banked
  7762  0025DC  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7763  0025DE  0E03               	movlw	3
  7764  0025E0  ECA9  F006         	call	_lcd_set_com_seg
  7765  0025E4  0012               	return	
  7766  0025E6                     l7795:
  7767                           
  7768                           ;lcd.c: 242: else
  7769                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
  7770  0025E6  0E18               	movlw	24
  7771  0025E8  0100               	movlb	0	; () banked
  7772  0025EA  6FE1               	movwf	lcd_set_com_seg@seg& (0+255),b
  7773  0025EC  0E00               	movlw	0
  7774  0025EE  0100               	movlb	0	; () banked
  7775  0025F0  6FE2               	movwf	lcd_set_com_seg@show& (0+255),b
  7776  0025F2  0E03               	movlw	3
  7777  0025F4  ECA9  F006         	call	_lcd_set_com_seg
  7778  0025F8  0012               	return	
  7779  0025FA                     __end_of_lcd_disp_dp_loc_0:
  7780                           	opt stack 0
  7781                           tblptru	equ	0xFF8
  7782                           tblptrh	equ	0xFF7
  7783                           tblptrl	equ	0xFF6
  7784                           tablat	equ	0xFF5
  7785                           prodh	equ	0xFF4
  7786                           prodl	equ	0xFF3
  7787                           intcon	equ	0xFF2
  7788                           indf0	equ	0xFEF
  7789                           postinc0	equ	0xFEE
  7790                           fsr0h	equ	0xFEA
  7791                           fsr0l	equ	0xFE9
  7792                           wreg	equ	0xFE8
  7793                           postdec1	equ	0xFE5
  7794                           plusw1	equ	0xFE3
  7795                           fsr1h	equ	0xFE2
  7796                           fsr1l	equ	0xFE1
  7797                           indf2	equ	0xFDF
  7798                           plusw2	equ	0xFDB
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function _lcd_set_com_seg *****************
  7804 ;; Defined at:
  7805 ;;		line 32 in file "src/driver/lcd.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  com             1    wreg     unsigned char 
  7808 ;;  seg             1    8[BANK0 ] unsigned char 
  7809 ;;  show            1    9[BANK0 ] unsigned char 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  com             1   13[BANK0 ] unsigned char 
  7812 ;;  bits            1   15[BANK0 ] unsigned char 
  7813 ;;  offset          1   14[BANK0 ] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;Total ram usage:        8 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    5
  7830 ;; This function calls:
  7831 ;;		___awdiv
  7832 ;; This function is called by:
  7833 ;;		_lcd_disp_level_bar
  7834 ;;		_lcd_disp_chr_loc_0
  7835 ;;		_lcd_disp_dp_loc_0
  7836 ;;		_lcd_disp_chr_loc_1
  7837 ;;		_lcd_disp_dp_loc_1
  7838 ;;		_lcd_disp_chr_loc_2
  7839 ;;		_lcd_disp_dp_loc_2
  7840 ;;		_lcd_disp_chr_loc_3
  7841 ;;		_lcd_disp_chr_loc_4
  7842 ;;		_lcd_disp_chr_loc_5
  7843 ;;		_lcd_disp_chr_loc_6
  7844 ;;		_lcd_disp_chr_loc_7
  7845 ;;		_lcd_disp_logo
  7846 ;;		_lcd_disp_battary_bar
  7847 ;;		_lcd_disp_rf_bar
  7848 ;;		_lcd_disp_light_bar
  7849 ;;		_lcd_disp_dp_loc_4
  7850 ;;		_lcd_disp_dp_loc_5
  7851 ;;		_lcd_disp_dp_loc_6
  7852 ;;		_lcd_disp_unit_t
  7853 ;;		_lcd_disp_unit_1st_m
  7854 ;;		_lcd_disp_unit_1st_m3
  7855 ;;		_lcd_disp_unit_temperature
  7856 ;;		_lcd_disp_unit_2nd_m
  7857 ;;		_lcd_disp_unit_2nd_m3
  7858 ;;		_lcd_disp_unit_mpa
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text41
  7863  000D52                     __ptext41:
  7864                           	opt stack 0
  7865  000D52                     _lcd_set_com_seg:
  7866                           	opt stack 21
  7867                           
  7868                           ;incstack = 0
  7869                           ;lcd_set_com_seg@com stored from wreg
  7870  000D52  0100               	movlb	0	; () banked
  7871  000D54  6FE6               	movwf	lcd_set_com_seg@com& (0+255),b
  7872                           
  7873                           ;lcd.c: 34: uint8_t offset;
  7874                           ;lcd.c: 35: uint8_t bits;
  7875                           ;lcd.c: 36: if(com>3)return;
  7876  000D56  0E03               	movlw	3
  7877  000D58  0100               	movlb	0	; () banked
  7878  000D5A  65E6               	cpfsgt	lcd_set_com_seg@com& (0+255),b
  7879  000D5C  D001               	goto	l7739
  7880  000D5E  0012               	return	
  7881  000D60                     l7739:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;lcd.c: 37: if(seg>47)return;
  7885  000D60  0E2F               	movlw	47
  7886  000D62  0100               	movlb	0	; () banked
  7887  000D64  65E1               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
  7888  000D66  D001               	goto	l7743
  7889  000D68  0012               	return	
  7890  000D6A                     l7743:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;lcd.c: 38: offset=com*6 + seg/8;
  7894  000D6A  C0E1  F0D9         	movff	lcd_set_com_seg@seg,___awdiv@dividend
  7895  000D6E  0100               	movlb	0	; () banked
  7896  000D70  6BDA               	clrf	(___awdiv@dividend+1)& (0+255),b
  7897  000D72  0E00               	movlw	0
  7898  000D74  0100               	movlb	0	; () banked
  7899  000D76  6FDC               	movwf	(___awdiv@divisor+1)& (0+255),b
  7900  000D78  0E08               	movlw	8
  7901  000D7A  6FDB               	movwf	___awdiv@divisor& (0+255),b
  7902  000D7C  EC0D  F007         	call	___awdiv	;wreg free
  7903  000D80  0100               	movlb	0	; () banked
  7904  000D82  51E6               	movf	lcd_set_com_seg@com& (0+255),w,b
  7905  000D84  0D06               	mullw	6
  7906  000D86  50F3               	movf	prodl,w,c
  7907  000D88  0100               	movlb	0	; () banked
  7908  000D8A  25D9               	addwf	?___awdiv& (0+255),w,b
  7909  000D8C  0100               	movlb	0	; () banked
  7910  000D8E  6FE7               	movwf	lcd_set_com_seg@offset& (0+255),b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;lcd.c: 39: bits=seg%8;
  7914  000D90  0100               	movlb	0	; () banked
  7915  000D92  51E1               	movf	lcd_set_com_seg@seg& (0+255),w,b
  7916  000D94  0B07               	andlw	7
  7917  000D96  0100               	movlb	0	; () banked
  7918  000D98  6FE8               	movwf	lcd_set_com_seg@bits& (0+255),b
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;lcd.c: 40: if(show){
  7922  000D9A  0100               	movlb	0	; () banked
  7923  000D9C  51E2               	movf	lcd_set_com_seg@show& (0+255),w,b
  7924  000D9E  0100               	movlb	0	; () banked
  7925  000DA0  B4D8               	btfsc	status,2,c
  7926  000DA2  D01B               	goto	l7751
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
  7930  000DA4  C0E8  F0E3         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7931  000DA8  0E01               	movlw	1
  7932  000DAA  0100               	movlb	0	; () banked
  7933  000DAC  6FE4               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7934  000DAE  0100               	movlb	0	; () banked
  7935  000DB0  2BE3               	incf	??_lcd_set_com_seg& (0+255),f,b
  7936  000DB2  D003               	goto	u5894
  7937  000DB4                     u5895:
  7938  000DB4  0100               	movlb	0	; () banked
  7939  000DB6  90D8               	bcf	status,0,c
  7940  000DB8  37E4               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7941  000DBA                     u5894:
  7942  000DBA  0100               	movlb	0	; () banked
  7943  000DBC  2FE3               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7944  000DBE  D7FA               	goto	u5895
  7945  000DC0  0100               	movlb	0	; () banked
  7946  000DC2  51E7               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7947  000DC4  0D01               	mullw	1
  7948  000DC6  0E60               	movlw	low _pLCD
  7949  000DC8  24F3               	addwf	prodl,w,c
  7950  000DCA  6ED9               	movwf	fsr2l,c
  7951  000DCC  0E00               	movlw	high _pLCD
  7952  000DCE  20F4               	addwfc	prodh,w,c
  7953  000DD0  6EDA               	movwf	fsr2h,c
  7954  000DD2  0100               	movlb	0	; () banked
  7955  000DD4  51E4               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7956  000DD6  12DF               	iorwf	indf2,f,c
  7957                           
  7958                           ;lcd.c: 42: }else{
  7959  000DD8  0012               	return	
  7960  000DDA                     l7751:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
  7964  000DDA  C0E8  F0E3         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7965  000DDE  0E01               	movlw	1
  7966  000DE0  0100               	movlb	0	; () banked
  7967  000DE2  6FE4               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7968  000DE4  0100               	movlb	0	; () banked
  7969  000DE6  2BE3               	incf	??_lcd_set_com_seg& (0+255),f,b
  7970  000DE8  D003               	goto	u5904
  7971  000DEA                     u5905:
  7972  000DEA  0100               	movlb	0	; () banked
  7973  000DEC  90D8               	bcf	status,0,c
  7974  000DEE  37E4               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7975  000DF0                     u5904:
  7976  000DF0  0100               	movlb	0	; () banked
  7977  000DF2  2FE3               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7978  000DF4  D7FA               	goto	u5905
  7979  000DF6  0100               	movlb	0	; () banked
  7980  000DF8  51E4               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7981  000DFA  0AFF               	xorlw	255
  7982  000DFC  0100               	movlb	0	; () banked
  7983  000DFE  6FE5               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
  7984  000E00  0100               	movlb	0	; () banked
  7985  000E02  51E7               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7986  000E04  0D01               	mullw	1
  7987  000E06  0E60               	movlw	low _pLCD
  7988  000E08  24F3               	addwf	prodl,w,c
  7989  000E0A  6ED9               	movwf	fsr2l,c
  7990  000E0C  0E00               	movlw	high _pLCD
  7991  000E0E  20F4               	addwfc	prodh,w,c
  7992  000E10  6EDA               	movwf	fsr2h,c
  7993  000E12  0100               	movlb	0	; () banked
  7994  000E14  51E5               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
  7995  000E16  16DF               	andwf	indf2,f,c
  7996  000E18  0012               	return	
  7997  000E1A                     __end_of_lcd_set_com_seg:
  7998                           	opt stack 0
  7999                           tblptru	equ	0xFF8
  8000                           tblptrh	equ	0xFF7
  8001                           tblptrl	equ	0xFF6
  8002                           tablat	equ	0xFF5
  8003                           prodh	equ	0xFF4
  8004                           prodl	equ	0xFF3
  8005                           intcon	equ	0xFF2
  8006                           indf0	equ	0xFEF
  8007                           postinc0	equ	0xFEE
  8008                           fsr0h	equ	0xFEA
  8009                           fsr0l	equ	0xFE9
  8010                           wreg	equ	0xFE8
  8011                           postdec1	equ	0xFE5
  8012                           plusw1	equ	0xFE3
  8013                           fsr1h	equ	0xFE2
  8014                           fsr1l	equ	0xFE1
  8015                           indf2	equ	0xFDF
  8016                           plusw2	equ	0xFDB
  8017                           fsr2h	equ	0xFDA
  8018                           fsr2l	equ	0xFD9
  8019                           status	equ	0xFD8
  8020                           
  8021 ;; *************** function _m_mem_cpy *****************
  8022 ;; Defined at:
  8023 ;;		line 51 in file "src/depend/m_string.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  d               2    0[BANK0 ] PTR unsigned char 
  8026 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8027 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8028 ;;		 -> STR_3(5), 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8040 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;Total ram usage:        4 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    4
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_ui_disp_adj_xfixed_pt
  8051 ;;		_ui_disp_adj_xfloat_pt
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text42
  8056  0021D2                     __ptext42:
  8057                           	opt stack 0
  8058  0021D2                     _m_mem_cpy:
  8059                           	opt stack 22
  8060                           
  8061                           ;m_string.c: 53: while(*s!='\0')
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;incstack = 0
  8065  0021D2  D011               	goto	l7933
  8066  0021D4                     l7927:
  8067                           
  8068                           ;m_string.c: 54: {
  8069                           ;m_string.c: 55: *d++=*s++;
  8070  0021D4  C0DB  FFF6         	movff	m_mem_cpy@s,tblptrl
  8071  0021D8  C0DC  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  8072  0021DC                     	if	0	;tblptru may be non-zero
  8073  0021DC                     	endif
  8074  0021DC                     	if	0	;tblptru may be non-zero
  8075  0021DC                     	endif
  8076  0021DC  C0D9  FFD9         	movff	m_mem_cpy@d,fsr2l
  8077  0021E0  C0DA  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  8078  0021E4  0008               	tblrd		*
  8079  0021E6  CFF5 FFDF          	movff	tablat,indf2
  8080  0021EA  0100               	movlb	0	; () banked
  8081  0021EC  4BDB               	infsnz	m_mem_cpy@s& (0+255),f,b
  8082  0021EE  2BDC               	incf	(m_mem_cpy@s+1)& (0+255),f,b
  8083                           
  8084                           ; BSR set to: 0
  8085  0021F0  0100               	movlb	0	; () banked
  8086  0021F2  4BD9               	infsnz	m_mem_cpy@d& (0+255),f,b
  8087  0021F4  2BDA               	incf	(m_mem_cpy@d+1)& (0+255),f,b
  8088  0021F6                     l7933:
  8089  0021F6  C0DB  FFF6         	movff	m_mem_cpy@s,tblptrl
  8090  0021FA  C0DC  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  8091  0021FE                     	if	0	;tblptru may be non-zero
  8092  0021FE                     	endif
  8093  0021FE                     	if	0	;tblptru may be non-zero
  8094  0021FE                     	endif
  8095  0021FE  0008               	tblrd		*
  8096  002200  50F5               	movf	tablat,w,c
  8097  002202  0900               	iorlw	0
  8098  002204  A4D8               	btfss	status,2,c
  8099  002206  D7E6               	goto	l7927
  8100                           
  8101                           ;m_string.c: 56: }
  8102                           ;m_string.c: 57: *d='\0';
  8103  002208  C0D9  FFD9         	movff	m_mem_cpy@d,fsr2l
  8104  00220C  C0DA  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  8105  002210  0E00               	movlw	0
  8106  002212  6EDF               	movwf	indf2,c
  8107  002214  0012               	return		;funcret
  8108  002216                     __end_of_m_mem_cpy:
  8109                           	opt stack 0
  8110                           tblptru	equ	0xFF8
  8111                           tblptrh	equ	0xFF7
  8112                           tblptrl	equ	0xFF6
  8113                           tablat	equ	0xFF5
  8114                           prodh	equ	0xFF4
  8115                           prodl	equ	0xFF3
  8116                           intcon	equ	0xFF2
  8117                           indf0	equ	0xFEF
  8118                           postinc0	equ	0xFEE
  8119                           fsr0h	equ	0xFEA
  8120                           fsr0l	equ	0xFE9
  8121                           wreg	equ	0xFE8
  8122                           postdec1	equ	0xFE5
  8123                           plusw1	equ	0xFE3
  8124                           fsr1h	equ	0xFE2
  8125                           fsr1l	equ	0xFE1
  8126                           indf2	equ	0xFDF
  8127                           plusw2	equ	0xFDB
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132 ;; *************** function _m_int16_2_str_4 *****************
  8133 ;; Defined at:
  8134 ;;		line 260 in file "src/depend/m_string.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  8137 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8138 ;;  x               2   10[BANK0 ] int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;Total ram usage:        4 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    5
  8157 ;; This function calls:
  8158 ;;		___awdiv
  8159 ;;		___awmod
  8160 ;; This function is called by:
  8161 ;;		_ui_disp_adj_xfixed_pt
  8162 ;;		_ui_disp_adj_xfloat_pt
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text43
  8167  00076E                     __ptext43:
  8168                           	opt stack 0
  8169  00076E                     _m_int16_2_str_4:
  8170                           	opt stack 21
  8171                           
  8172                           ;m_string.c: 262: if(x>9999)x=9999;
  8173                           
  8174                           ;incstack = 0
  8175  00076E  0100               	movlb	0	; () banked
  8176  000770  BFE4               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
  8177  000772  D00D               	goto	l7941
  8178  000774  0E10               	movlw	16
  8179  000776  0100               	movlb	0	; () banked
  8180  000778  5DE3               	subwf	m_int16_2_str_4@x& (0+255),w,b
  8181  00077A  0E27               	movlw	39
  8182  00077C  0100               	movlb	0	; () banked
  8183  00077E  59E4               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
  8184  000780  A0D8               	btfss	status,0,c
  8185  000782  D005               	goto	l7941
  8186                           
  8187                           ; BSR set to: 0
  8188  000784  0E27               	movlw	39
  8189  000786  0100               	movlb	0	; () banked
  8190  000788  6FE4               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
  8191  00078A  0E0F               	movlw	15
  8192  00078C  6FE3               	movwf	m_int16_2_str_4@x& (0+255),b
  8193  00078E                     l7941:
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;m_string.c: 263: buf[3]=HexTable[x%10];
  8197  00078E  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awmod@dividend
  8198  000792  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  8199  000796  0E00               	movlw	0
  8200  000798  0100               	movlb	0	; () banked
  8201  00079A  6FDC               	movwf	(___awmod@divisor+1)& (0+255),b
  8202  00079C  0E0A               	movlw	10
  8203  00079E  6FDB               	movwf	___awmod@divisor& (0+255),b
  8204  0007A0  EC8B  F009         	call	___awmod	;wreg free
  8205  0007A4  0E0C               	movlw	low _HexTable
  8206  0007A6  0100               	movlb	0	; () banked
  8207  0007A8  25D9               	addwf	?___awmod& (0+255),w,b
  8208  0007AA  6EF6               	movwf	tblptrl,c
  8209  0007AC  0EFF               	movlw	high _HexTable
  8210  0007AE  0100               	movlb	0	; () banked
  8211  0007B0  21DA               	addwfc	(?___awmod+1)& (0+255),w,b
  8212  0007B2  6EF7               	movwf	tblptrh,c
  8213  0007B4                     	if	0	;There are less than 3 active tblptr bytes
  8214  0007B4                     	endif
  8215  0007B4  0100               	movlb	0	; () banked
  8216  0007B6  EE20 F003          	lfsr	2,3
  8217  0007BA  51E1               	movf	m_int16_2_str_4@buf& (0+255),w,b
  8218  0007BC  26D9               	addwf	fsr2l,f,c
  8219  0007BE  51E2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  8220  0007C0  22DA               	addwfc	fsr2h,f,c
  8221  0007C2  0008               	tblrd		*
  8222  0007C4  CFF5 FFDF          	movff	tablat,indf2
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;m_string.c: 264: x/=10;
  8226  0007C8  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awdiv@dividend
  8227  0007CC  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  8228  0007D0  0E00               	movlw	0
  8229  0007D2  0100               	movlb	0	; () banked
  8230  0007D4  6FDC               	movwf	(___awdiv@divisor+1)& (0+255),b
  8231  0007D6  0E0A               	movlw	10
  8232  0007D8  6FDB               	movwf	___awdiv@divisor& (0+255),b
  8233  0007DA  EC0D  F007         	call	___awdiv	;wreg free
  8234  0007DE  C0D9  F0E3         	movff	?___awdiv,m_int16_2_str_4@x
  8235  0007E2  C0DA  F0E4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  8236                           
  8237                           ;m_string.c: 265: buf[2]=HexTable[x%10];
  8238  0007E6  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awmod@dividend
  8239  0007EA  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  8240  0007EE  0E00               	movlw	0
  8241  0007F0  0100               	movlb	0	; () banked
  8242  0007F2  6FDC               	movwf	(___awmod@divisor+1)& (0+255),b
  8243  0007F4  0E0A               	movlw	10
  8244  0007F6  6FDB               	movwf	___awmod@divisor& (0+255),b
  8245  0007F8  EC8B  F009         	call	___awmod	;wreg free
  8246  0007FC  0E0C               	movlw	low _HexTable
  8247  0007FE  0100               	movlb	0	; () banked
  8248  000800  25D9               	addwf	?___awmod& (0+255),w,b
  8249  000802  6EF6               	movwf	tblptrl,c
  8250  000804  0EFF               	movlw	high _HexTable
  8251  000806  0100               	movlb	0	; () banked
  8252  000808  21DA               	addwfc	(?___awmod+1)& (0+255),w,b
  8253  00080A  6EF7               	movwf	tblptrh,c
  8254  00080C                     	if	0	;There are less than 3 active tblptr bytes
  8255  00080C                     	endif
  8256  00080C  0100               	movlb	0	; () banked
  8257  00080E  EE20 F002          	lfsr	2,2
  8258  000812  51E1               	movf	m_int16_2_str_4@buf& (0+255),w,b
  8259  000814  26D9               	addwf	fsr2l,f,c
  8260  000816  51E2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  8261  000818  22DA               	addwfc	fsr2h,f,c
  8262  00081A  0008               	tblrd		*
  8263  00081C  CFF5 FFDF          	movff	tablat,indf2
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;m_string.c: 266: x/=10;
  8267  000820  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awdiv@dividend
  8268  000824  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  8269  000828  0E00               	movlw	0
  8270  00082A  0100               	movlb	0	; () banked
  8271  00082C  6FDC               	movwf	(___awdiv@divisor+1)& (0+255),b
  8272  00082E  0E0A               	movlw	10
  8273  000830  6FDB               	movwf	___awdiv@divisor& (0+255),b
  8274  000832  EC0D  F007         	call	___awdiv	;wreg free
  8275  000836  C0D9  F0E3         	movff	?___awdiv,m_int16_2_str_4@x
  8276  00083A  C0DA  F0E4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  8277                           
  8278                           ;m_string.c: 267: buf[1]=HexTable[x%10];
  8279  00083E  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awmod@dividend
  8280  000842  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  8281  000846  0E00               	movlw	0
  8282  000848  0100               	movlb	0	; () banked
  8283  00084A  6FDC               	movwf	(___awmod@divisor+1)& (0+255),b
  8284  00084C  0E0A               	movlw	10
  8285  00084E  6FDB               	movwf	___awmod@divisor& (0+255),b
  8286  000850  EC8B  F009         	call	___awmod	;wreg free
  8287  000854  0E0C               	movlw	low _HexTable
  8288  000856  0100               	movlb	0	; () banked
  8289  000858  25D9               	addwf	?___awmod& (0+255),w,b
  8290  00085A  6EF6               	movwf	tblptrl,c
  8291  00085C  0EFF               	movlw	high _HexTable
  8292  00085E  0100               	movlb	0	; () banked
  8293  000860  21DA               	addwfc	(?___awmod+1)& (0+255),w,b
  8294  000862  6EF7               	movwf	tblptrh,c
  8295  000864                     	if	0	;There are less than 3 active tblptr bytes
  8296  000864                     	endif
  8297  000864  0100               	movlb	0	; () banked
  8298  000866  EE20 F001          	lfsr	2,1
  8299  00086A  51E1               	movf	m_int16_2_str_4@buf& (0+255),w,b
  8300  00086C  26D9               	addwf	fsr2l,f,c
  8301  00086E  51E2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  8302  000870  22DA               	addwfc	fsr2h,f,c
  8303  000872  0008               	tblrd		*
  8304  000874  CFF5 FFDF          	movff	tablat,indf2
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;m_string.c: 268: x/=10;
  8308  000878  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awdiv@dividend
  8309  00087C  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  8310  000880  0E00               	movlw	0
  8311  000882  0100               	movlb	0	; () banked
  8312  000884  6FDC               	movwf	(___awdiv@divisor+1)& (0+255),b
  8313  000886  0E0A               	movlw	10
  8314  000888  6FDB               	movwf	___awdiv@divisor& (0+255),b
  8315  00088A  EC0D  F007         	call	___awdiv	;wreg free
  8316  00088E  C0D9  F0E3         	movff	?___awdiv,m_int16_2_str_4@x
  8317  000892  C0DA  F0E4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  8318                           
  8319                           ;m_string.c: 269: buf[0]=HexTable[x%10];
  8320  000896  C0E3  F0D9         	movff	m_int16_2_str_4@x,___awmod@dividend
  8321  00089A  C0E4  F0DA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  8322  00089E  0E00               	movlw	0
  8323  0008A0  0100               	movlb	0	; () banked
  8324  0008A2  6FDC               	movwf	(___awmod@divisor+1)& (0+255),b
  8325  0008A4  0E0A               	movlw	10
  8326  0008A6  6FDB               	movwf	___awmod@divisor& (0+255),b
  8327  0008A8  EC8B  F009         	call	___awmod	;wreg free
  8328  0008AC  0E0C               	movlw	low _HexTable
  8329  0008AE  0100               	movlb	0	; () banked
  8330  0008B0  25D9               	addwf	?___awmod& (0+255),w,b
  8331  0008B2  6EF6               	movwf	tblptrl,c
  8332  0008B4  0EFF               	movlw	high _HexTable
  8333  0008B6  0100               	movlb	0	; () banked
  8334  0008B8  21DA               	addwfc	(?___awmod+1)& (0+255),w,b
  8335  0008BA  6EF7               	movwf	tblptrh,c
  8336  0008BC                     	if	0	;There are less than 3 active tblptr bytes
  8337  0008BC                     	endif
  8338  0008BC  C0E1  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
  8339  0008C0  C0E2  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
  8340  0008C4  0008               	tblrd		*
  8341  0008C6  CFF5 FFDF          	movff	tablat,indf2
  8342                           
  8343                           ; BSR set to: 0
  8344  0008CA  0012               	return		;funcret
  8345  0008CC                     __end_of_m_int16_2_str_4:
  8346                           	opt stack 0
  8347                           tblptru	equ	0xFF8
  8348                           tblptrh	equ	0xFF7
  8349                           tblptrl	equ	0xFF6
  8350                           tablat	equ	0xFF5
  8351                           prodh	equ	0xFF4
  8352                           prodl	equ	0xFF3
  8353                           intcon	equ	0xFF2
  8354                           indf0	equ	0xFEF
  8355                           postinc0	equ	0xFEE
  8356                           fsr0h	equ	0xFEA
  8357                           fsr0l	equ	0xFE9
  8358                           wreg	equ	0xFE8
  8359                           postdec1	equ	0xFE5
  8360                           plusw1	equ	0xFE3
  8361                           fsr1h	equ	0xFE2
  8362                           fsr1l	equ	0xFE1
  8363                           indf2	equ	0xFDF
  8364                           plusw2	equ	0xFDB
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function ___awmod *****************
  8370 ;; Defined at:
  8371 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  dividend        2    0[BANK0 ] int 
  8374 ;;  divisor         2    2[BANK0 ] int 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  sign            1    5[BANK0 ] unsigned char 
  8377 ;;  counter         1    4[BANK0 ] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2    0[BANK0 ] int 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:        6 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    4
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_m_int16_2_str_4
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text44
  8402  001316                     __ptext44:
  8403                           	opt stack 0
  8404  001316                     ___awmod:
  8405                           	opt stack 21
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;incstack = 0
  8409  001316  0E00               	movlw	0
  8410  001318  0100               	movlb	0	; () banked
  8411  00131A  6FDE               	movwf	___awmod@sign& (0+255),b
  8412                           
  8413                           ; BSR set to: 0
  8414  00131C  0100               	movlb	0	; () banked
  8415  00131E  AFDA               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8416  001320  D008               	goto	l7869
  8417                           
  8418                           ; BSR set to: 0
  8419  001322  0100               	movlb	0	; () banked
  8420  001324  6DD9               	negf	___awmod@dividend& (0+255),b
  8421  001326  1FDA               	comf	(___awmod@dividend+1)& (0+255),f,b
  8422  001328  B0D8               	btfsc	status,0,c
  8423  00132A  2BDA               	incf	(___awmod@dividend+1)& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 0
  8426  00132C  0E01               	movlw	1
  8427  00132E  0100               	movlb	0	; () banked
  8428  001330  6FDE               	movwf	___awmod@sign& (0+255),b
  8429  001332                     l7869:
  8430                           
  8431                           ; BSR set to: 0
  8432  001332  0100               	movlb	0	; () banked
  8433  001334  AFDC               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8434  001336  D005               	goto	l7873
  8435                           
  8436                           ; BSR set to: 0
  8437  001338  0100               	movlb	0	; () banked
  8438  00133A  6DDB               	negf	___awmod@divisor& (0+255),b
  8439  00133C  1FDC               	comf	(___awmod@divisor+1)& (0+255),f,b
  8440  00133E  B0D8               	btfsc	status,0,c
  8441  001340  2BDC               	incf	(___awmod@divisor+1)& (0+255),f,b
  8442  001342                     l7873:
  8443                           
  8444                           ; BSR set to: 0
  8445  001342  0100               	movlb	0	; () banked
  8446  001344  51DB               	movf	___awmod@divisor& (0+255),w,b
  8447  001346  0100               	movlb	0	; () banked
  8448  001348  11DC               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8449  00134A  B4D8               	btfsc	status,2,c
  8450  00134C  D026               	goto	l7889
  8451                           
  8452                           ; BSR set to: 0
  8453  00134E  0E01               	movlw	1
  8454  001350  0100               	movlb	0	; () banked
  8455  001352  6FDD               	movwf	___awmod@counter& (0+255),b
  8456  001354  D006               	goto	l7879
  8457  001356                     l7877:
  8458                           
  8459                           ; BSR set to: 0
  8460  001356  0100               	movlb	0	; () banked
  8461  001358  90D8               	bcf	status,0,c
  8462  00135A  37DB               	rlcf	___awmod@divisor& (0+255),f,b
  8463  00135C  37DC               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8464  00135E  0100               	movlb	0	; () banked
  8465  001360  2BDD               	incf	___awmod@counter& (0+255),f,b
  8466  001362                     l7879:
  8467                           
  8468                           ; BSR set to: 0
  8469  001362  0100               	movlb	0	; () banked
  8470  001364  AFDC               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8471  001366  D7F7               	goto	l7877
  8472  001368                     l7881:
  8473                           
  8474                           ; BSR set to: 0
  8475  001368  0100               	movlb	0	; () banked
  8476  00136A  51DB               	movf	___awmod@divisor& (0+255),w,b
  8477  00136C  0100               	movlb	0	; () banked
  8478  00136E  5DD9               	subwf	___awmod@dividend& (0+255),w,b
  8479  001370  0100               	movlb	0	; () banked
  8480  001372  51DC               	movf	(___awmod@divisor+1)& (0+255),w,b
  8481  001374  0100               	movlb	0	; () banked
  8482  001376  59DA               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8483  001378  A0D8               	btfss	status,0,c
  8484  00137A  D008               	goto	l7885
  8485                           
  8486                           ; BSR set to: 0
  8487  00137C  0100               	movlb	0	; () banked
  8488  00137E  51DB               	movf	___awmod@divisor& (0+255),w,b
  8489  001380  0100               	movlb	0	; () banked
  8490  001382  5FD9               	subwf	___awmod@dividend& (0+255),f,b
  8491  001384  0100               	movlb	0	; () banked
  8492  001386  51DC               	movf	(___awmod@divisor+1)& (0+255),w,b
  8493  001388  0100               	movlb	0	; () banked
  8494  00138A  5BDA               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8495  00138C                     l7885:
  8496                           
  8497                           ; BSR set to: 0
  8498  00138C  0100               	movlb	0	; () banked
  8499  00138E  90D8               	bcf	status,0,c
  8500  001390  33DC               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8501  001392  33DB               	rrcf	___awmod@divisor& (0+255),f,b
  8502                           
  8503                           ; BSR set to: 0
  8504  001394  0100               	movlb	0	; () banked
  8505  001396  2FDD               	decfsz	___awmod@counter& (0+255),f,b
  8506  001398  D7E7               	goto	l7881
  8507  00139A                     l7889:
  8508                           
  8509                           ; BSR set to: 0
  8510  00139A  0100               	movlb	0	; () banked
  8511  00139C  51DE               	movf	___awmod@sign& (0+255),w,b
  8512  00139E  0100               	movlb	0	; () banked
  8513  0013A0  B4D8               	btfsc	status,2,c
  8514  0013A2  D005               	goto	l7893
  8515                           
  8516                           ; BSR set to: 0
  8517  0013A4  0100               	movlb	0	; () banked
  8518  0013A6  6DD9               	negf	___awmod@dividend& (0+255),b
  8519  0013A8  1FDA               	comf	(___awmod@dividend+1)& (0+255),f,b
  8520  0013AA  B0D8               	btfsc	status,0,c
  8521  0013AC  2BDA               	incf	(___awmod@dividend+1)& (0+255),f,b
  8522  0013AE                     l7893:
  8523                           
  8524                           ; BSR set to: 0
  8525  0013AE  C0D9  F0D9         	movff	___awmod@dividend,?___awmod
  8526  0013B2  C0DA  F0DA         	movff	___awmod@dividend+1,?___awmod+1
  8527  0013B6  0012               	return	
  8528  0013B8                     __end_of___awmod:
  8529                           	opt stack 0
  8530                           tblptru	equ	0xFF8
  8531                           tblptrh	equ	0xFF7
  8532                           tblptrl	equ	0xFF6
  8533                           tablat	equ	0xFF5
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           indf0	equ	0xFEF
  8538                           postinc0	equ	0xFEE
  8539                           fsr0h	equ	0xFEA
  8540                           fsr0l	equ	0xFE9
  8541                           wreg	equ	0xFE8
  8542                           postdec1	equ	0xFE5
  8543                           plusw1	equ	0xFE3
  8544                           fsr1h	equ	0xFE2
  8545                           fsr1l	equ	0xFE1
  8546                           indf2	equ	0xFDF
  8547                           plusw2	equ	0xFDB
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function ___awdiv *****************
  8553 ;; Defined at:
  8554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  dividend        2    0[BANK0 ] int 
  8557 ;;  divisor         2    2[BANK0 ] int 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  quotient        2    6[BANK0 ] int 
  8560 ;;  sign            1    5[BANK0 ] unsigned char 
  8561 ;;  counter         1    4[BANK0 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2    0[BANK0 ] int 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8575 ;;Total ram usage:        8 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    4
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_m_int16_2_str_4
  8582 ;;		_lcd_set_com_seg
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text45
  8587  000E1A                     __ptext45:
  8588                           	opt stack 0
  8589  000E1A                     ___awdiv:
  8590                           	opt stack 21
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;incstack = 0
  8594  000E1A  0E00               	movlw	0
  8595  000E1C  0100               	movlb	0	; () banked
  8596  000E1E  6FDE               	movwf	___awdiv@sign& (0+255),b
  8597                           
  8598                           ; BSR set to: 0
  8599  000E20  0100               	movlb	0	; () banked
  8600  000E22  AFDC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8601  000E24  D008               	goto	l7699
  8602                           
  8603                           ; BSR set to: 0
  8604  000E26  0100               	movlb	0	; () banked
  8605  000E28  6DDB               	negf	___awdiv@divisor& (0+255),b
  8606  000E2A  1FDC               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8607  000E2C  B0D8               	btfsc	status,0,c
  8608  000E2E  2BDC               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  000E30  0E01               	movlw	1
  8612  000E32  0100               	movlb	0	; () banked
  8613  000E34  6FDE               	movwf	___awdiv@sign& (0+255),b
  8614  000E36                     l7699:
  8615                           
  8616                           ; BSR set to: 0
  8617  000E36  0100               	movlb	0	; () banked
  8618  000E38  AFDA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8619  000E3A  D008               	goto	l7705
  8620                           
  8621                           ; BSR set to: 0
  8622  000E3C  0100               	movlb	0	; () banked
  8623  000E3E  6DD9               	negf	___awdiv@dividend& (0+255),b
  8624  000E40  1FDA               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8625  000E42  B0D8               	btfsc	status,0,c
  8626  000E44  2BDA               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8627                           
  8628                           ; BSR set to: 0
  8629  000E46  0E01               	movlw	1
  8630  000E48  0100               	movlb	0	; () banked
  8631  000E4A  1BDE               	xorwf	___awdiv@sign& (0+255),f,b
  8632  000E4C                     l7705:
  8633                           
  8634                           ; BSR set to: 0
  8635  000E4C  0E00               	movlw	0
  8636  000E4E  0100               	movlb	0	; () banked
  8637  000E50  6FE0               	movwf	(___awdiv@quotient+1)& (0+255),b
  8638  000E52  0E00               	movlw	0
  8639  000E54  6FDF               	movwf	___awdiv@quotient& (0+255),b
  8640                           
  8641                           ; BSR set to: 0
  8642  000E56  0100               	movlb	0	; () banked
  8643  000E58  51DB               	movf	___awdiv@divisor& (0+255),w,b
  8644  000E5A  0100               	movlb	0	; () banked
  8645  000E5C  11DC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8646  000E5E  B4D8               	btfsc	status,2,c
  8647  000E60  D02C               	goto	l7727
  8648                           
  8649                           ; BSR set to: 0
  8650  000E62  0E01               	movlw	1
  8651  000E64  0100               	movlb	0	; () banked
  8652  000E66  6FDD               	movwf	___awdiv@counter& (0+255),b
  8653  000E68  D006               	goto	l7713
  8654  000E6A                     l7711:
  8655                           
  8656                           ; BSR set to: 0
  8657  000E6A  0100               	movlb	0	; () banked
  8658  000E6C  90D8               	bcf	status,0,c
  8659  000E6E  37DB               	rlcf	___awdiv@divisor& (0+255),f,b
  8660  000E70  37DC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8661  000E72  0100               	movlb	0	; () banked
  8662  000E74  2BDD               	incf	___awdiv@counter& (0+255),f,b
  8663  000E76                     l7713:
  8664                           
  8665                           ; BSR set to: 0
  8666  000E76  0100               	movlb	0	; () banked
  8667  000E78  AFDC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8668  000E7A  D7F7               	goto	l7711
  8669  000E7C                     l7715:
  8670                           
  8671                           ; BSR set to: 0
  8672  000E7C  0100               	movlb	0	; () banked
  8673  000E7E  90D8               	bcf	status,0,c
  8674  000E80  37DF               	rlcf	___awdiv@quotient& (0+255),f,b
  8675  000E82  37E0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  000E84  0100               	movlb	0	; () banked
  8679  000E86  51DB               	movf	___awdiv@divisor& (0+255),w,b
  8680  000E88  0100               	movlb	0	; () banked
  8681  000E8A  5DD9               	subwf	___awdiv@dividend& (0+255),w,b
  8682  000E8C  0100               	movlb	0	; () banked
  8683  000E8E  51DC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8684  000E90  0100               	movlb	0	; () banked
  8685  000E92  59DA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8686  000E94  A0D8               	btfss	status,0,c
  8687  000E96  D00A               	goto	l7723
  8688                           
  8689                           ; BSR set to: 0
  8690  000E98  0100               	movlb	0	; () banked
  8691  000E9A  51DB               	movf	___awdiv@divisor& (0+255),w,b
  8692  000E9C  0100               	movlb	0	; () banked
  8693  000E9E  5FD9               	subwf	___awdiv@dividend& (0+255),f,b
  8694  000EA0  0100               	movlb	0	; () banked
  8695  000EA2  51DC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8696  000EA4  0100               	movlb	0	; () banked
  8697  000EA6  5BDA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8698                           
  8699                           ; BSR set to: 0
  8700  000EA8  0100               	movlb	0	; () banked
  8701  000EAA  81DF               	bsf	___awdiv@quotient& (0+255),0,b
  8702  000EAC                     l7723:
  8703                           
  8704                           ; BSR set to: 0
  8705  000EAC  0100               	movlb	0	; () banked
  8706  000EAE  90D8               	bcf	status,0,c
  8707  000EB0  33DC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8708  000EB2  33DB               	rrcf	___awdiv@divisor& (0+255),f,b
  8709                           
  8710                           ; BSR set to: 0
  8711  000EB4  0100               	movlb	0	; () banked
  8712  000EB6  2FDD               	decfsz	___awdiv@counter& (0+255),f,b
  8713  000EB8  D7E1               	goto	l7715
  8714  000EBA                     l7727:
  8715                           
  8716                           ; BSR set to: 0
  8717  000EBA  0100               	movlb	0	; () banked
  8718  000EBC  51DE               	movf	___awdiv@sign& (0+255),w,b
  8719  000EBE  0100               	movlb	0	; () banked
  8720  000EC0  B4D8               	btfsc	status,2,c
  8721  000EC2  D005               	goto	l7731
  8722                           
  8723                           ; BSR set to: 0
  8724  000EC4  0100               	movlb	0	; () banked
  8725  000EC6  6DDF               	negf	___awdiv@quotient& (0+255),b
  8726  000EC8  1FE0               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8727  000ECA  B0D8               	btfsc	status,0,c
  8728  000ECC  2BE0               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8729  000ECE                     l7731:
  8730                           
  8731                           ; BSR set to: 0
  8732  000ECE  C0DF  F0D9         	movff	___awdiv@quotient,?___awdiv
  8733  000ED2  C0E0  F0DA         	movff	___awdiv@quotient+1,?___awdiv+1
  8734  000ED6  0012               	return	
  8735  000ED8                     __end_of___awdiv:
  8736                           	opt stack 0
  8737                           tblptru	equ	0xFF8
  8738                           tblptrh	equ	0xFF7
  8739                           tblptrl	equ	0xFF6
  8740                           tablat	equ	0xFF5
  8741                           prodh	equ	0xFF4
  8742                           prodl	equ	0xFF3
  8743                           intcon	equ	0xFF2
  8744                           indf0	equ	0xFEF
  8745                           postinc0	equ	0xFEE
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           postdec1	equ	0xFE5
  8750                           plusw1	equ	0xFE3
  8751                           fsr1h	equ	0xFE2
  8752                           fsr1l	equ	0xFE1
  8753                           indf2	equ	0xFDF
  8754                           plusw2	equ	0xFDB
  8755                           fsr2h	equ	0xFDA
  8756                           fsr2l	equ	0xFD9
  8757                           status	equ	0xFD8
  8758                           
  8759 ;; *************** function _lcd_disp_refresh *****************
  8760 ;; Defined at:
  8761 ;;		line 547 in file "src/driver/lcd.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		None
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    4
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_ui_disp_start_cs600
  8786 ;;		_ui_disp_rtc_mm_ss
  8787 ;;		_ui_disp_adj_xfixed_pt
  8788 ;;		_ui_disp_all_on
  8789 ;;		_ui_disp_all_off
  8790 ;;		_ui_disp_adj_xfloat_pt
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text46
  8795  001D08                     __ptext46:
  8796                           	opt stack 0
  8797  001D08                     _lcd_disp_refresh:
  8798                           	opt stack 25
  8799                           
  8800                           ;lcd.c: 550: LCDDATA0=pLCD[0];
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;incstack = 0
  8804  001D08  C060  FFBB         	movff	_pLCD,4027	;volatile
  8805                           
  8806                           ;lcd.c: 551: LCDDATA1=pLCD[1];
  8807  001D0C  C061  FFBC         	movff	_pLCD+1,4028	;volatile
  8808                           
  8809                           ;lcd.c: 552: LCDDATA2=pLCD[2];
  8810  001D10  C062  FFBD         	movff	_pLCD+2,4029	;volatile
  8811                           
  8812                           ;lcd.c: 553: LCDDATA3=pLCD[3];
  8813  001D14  C063  FFBE         	movff	_pLCD+3,4030	;volatile
  8814                           
  8815                           ;lcd.c: 554: LCDDATA4=pLCD[4];
  8816  001D18  C064  FFBF         	movff	_pLCD+4,4031	;volatile
  8817                           
  8818                           ;lcd.c: 555: LCDDATA5=pLCD[5];
  8819  001D1C  C065  FF6B         	movff	_pLCD+5,3947	;volatile
  8820                           
  8821                           ;lcd.c: 556: LCDDATA6=pLCD[6];
  8822  001D20  C066  FF6C         	movff	_pLCD+6,3948	;volatile
  8823                           
  8824                           ;lcd.c: 557: LCDDATA7=pLCD[7];
  8825  001D24  C067  FF6D         	movff	_pLCD+7,3949	;volatile
  8826                           
  8827                           ;lcd.c: 558: LCDDATA8=pLCD[8];
  8828  001D28  C068  FF6E         	movff	_pLCD+8,3950	;volatile
  8829                           
  8830                           ;lcd.c: 559: LCDDATA9=pLCD[9];
  8831  001D2C  C069  FF6F         	movff	_pLCD+9,3951	;volatile
  8832                           
  8833                           ;lcd.c: 561: LCDDATA10=pLCD[10];
  8834  001D30  C06A  FF70         	movff	_pLCD+10,3952	;volatile
  8835                           
  8836                           ;lcd.c: 562: LCDDATA11=pLCD[11];
  8837  001D34  C06B  FF71         	movff	_pLCD+11,3953	;volatile
  8838                           
  8839                           ;lcd.c: 563: LCDDATA12=pLCD[12];
  8840  001D38  C06C  FF72         	movff	_pLCD+12,3954	;volatile
  8841                           
  8842                           ;lcd.c: 564: LCDDATA13=pLCD[13];
  8843  001D3C  C06D  FF73         	movff	_pLCD+13,3955	;volatile
  8844                           
  8845                           ;lcd.c: 565: LCDDATA14=pLCD[14];
  8846  001D40  C06E  FF74         	movff	_pLCD+14,3956	;volatile
  8847                           
  8848                           ;lcd.c: 566: LCDDATA15=pLCD[15];
  8849  001D44  C06F  FF75         	movff	_pLCD+15,3957	;volatile
  8850                           
  8851                           ;lcd.c: 567: LCDDATA16=pLCD[16];
  8852  001D48  C070  FF76         	movff	_pLCD+16,3958	;volatile
  8853                           
  8854                           ;lcd.c: 568: LCDDATA17=pLCD[17];
  8855  001D4C  C071  FF77         	movff	_pLCD+17,3959	;volatile
  8856                           
  8857                           ;lcd.c: 569: LCDDATA18=pLCD[18];
  8858  001D50  C072  FF78         	movff	_pLCD+18,3960	;volatile
  8859                           
  8860                           ;lcd.c: 570: LCDDATA19=pLCD[19];
  8861  001D54  C073  FF79         	movff	_pLCD+19,3961	;volatile
  8862                           
  8863                           ;lcd.c: 572: LCDDATA20=pLCD[20];
  8864  001D58  C074  FF7A         	movff	_pLCD+20,3962	;volatile
  8865                           
  8866                           ;lcd.c: 573: LCDDATA21=pLCD[21];
  8867  001D5C  C075  FF7B         	movff	_pLCD+21,3963	;volatile
  8868                           
  8869                           ;lcd.c: 574: LCDDATA22=pLCD[22];
  8870  001D60  C076  FF7C         	movff	_pLCD+22,3964	;volatile
  8871                           
  8872                           ;lcd.c: 575: LCDDATA23=pLCD[23];
  8873  001D64  C077  FF7D         	movff	_pLCD+23,3965	;volatile
  8874  001D68  0012               	return		;funcret
  8875  001D6A                     __end_of_lcd_disp_refresh:
  8876                           	opt stack 0
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           intcon	equ	0xFF2
  8884                           indf0	equ	0xFEF
  8885                           postinc0	equ	0xFEE
  8886                           fsr0h	equ	0xFEA
  8887                           fsr0l	equ	0xFE9
  8888                           wreg	equ	0xFE8
  8889                           postdec1	equ	0xFE5
  8890                           plusw1	equ	0xFE3
  8891                           fsr1h	equ	0xFE2
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           plusw2	equ	0xFDB
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function ___x_arrange_str *****************
  8900 ;; Defined at:
  8901 ;;		line 9 in file "src/api/ui.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  str             2    0[BANK0 ] PTR unsigned char 
  8904 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8905 ;;  len             1    2[BANK0 ] unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  i               1   31[COMRAM] unsigned char 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8917 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;Total ram usage:        4 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:    4
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_ui_disp_adj_xfixed_pt
  8928 ;;		_ui_disp_adj_xfloat_pt
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text47
  8933  001E2A                     __ptext47:
  8934                           	opt stack 0
  8935  001E2A                     ___x_arrange_str:
  8936                           	opt stack 22
  8937                           
  8938                           ;ui.c: 11: uint8_t i;
  8939                           ;ui.c: 12: for(i=0;i<len;i++){
  8940                           
  8941                           ;incstack = 0
  8942  001E2A  0E00               	movlw	0
  8943  001E2C  6E20               	movwf	___x_arrange_str@i,c
  8944  001E2E  D01A               	goto	l7905
  8945  001E30                     l7899:
  8946                           
  8947                           ;ui.c: 13: if(str[i]=='\0')str[i]=' ';
  8948  001E30  5020               	movf	___x_arrange_str@i,w,c
  8949  001E32  0D01               	mullw	1
  8950  001E34  50F3               	movf	prodl,w,c
  8951  001E36  0100               	movlb	0	; () banked
  8952  001E38  25D9               	addwf	___x_arrange_str@str& (0+255),w,b
  8953  001E3A  6ED9               	movwf	fsr2l,c
  8954  001E3C  50F4               	movf	prodh,w,c
  8955  001E3E  0100               	movlb	0	; () banked
  8956  001E40  21DA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8957  001E42  6EDA               	movwf	fsr2h,c
  8958  001E44  50DF               	movf	indf2,w,c
  8959  001E46  A4D8               	btfss	status,2,c
  8960  001E48  D00C               	goto	l7903
  8961                           
  8962                           ; BSR set to: 0
  8963  001E4A  5020               	movf	___x_arrange_str@i,w,c
  8964  001E4C  0D01               	mullw	1
  8965  001E4E  50F3               	movf	prodl,w,c
  8966  001E50  0100               	movlb	0	; () banked
  8967  001E52  25D9               	addwf	___x_arrange_str@str& (0+255),w,b
  8968  001E54  6ED9               	movwf	fsr2l,c
  8969  001E56  50F4               	movf	prodh,w,c
  8970  001E58  0100               	movlb	0	; () banked
  8971  001E5A  21DA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8972  001E5C  6EDA               	movwf	fsr2h,c
  8973  001E5E  0E20               	movlw	32
  8974  001E60  6EDF               	movwf	indf2,c
  8975  001E62                     l7903:
  8976                           
  8977                           ; BSR set to: 0
  8978  001E62  2A20               	incf	___x_arrange_str@i,f,c
  8979  001E64                     l7905:
  8980  001E64  0100               	movlb	0	; () banked
  8981  001E66  51DB               	movf	___x_arrange_str@len& (0+255),w,b
  8982  001E68  5C20               	subwf	___x_arrange_str@i,w,c
  8983  001E6A  A0D8               	btfss	status,0,c
  8984  001E6C  D7E1               	goto	l7899
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;ui.c: 14: }
  8988                           ;ui.c: 15: str[i]='\0';
  8989                           
  8990                           ; BSR set to: 0
  8991  001E6E  5020               	movf	___x_arrange_str@i,w,c
  8992  001E70  0D01               	mullw	1
  8993  001E72  50F3               	movf	prodl,w,c
  8994  001E74  0100               	movlb	0	; () banked
  8995  001E76  25D9               	addwf	___x_arrange_str@str& (0+255),w,b
  8996  001E78  6ED9               	movwf	fsr2l,c
  8997  001E7A  50F4               	movf	prodh,w,c
  8998  001E7C  0100               	movlb	0	; () banked
  8999  001E7E  21DA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  9000  001E80  6EDA               	movwf	fsr2h,c
  9001  001E82  0E00               	movlw	0
  9002  001E84  6EDF               	movwf	indf2,c
  9003                           
  9004                           ; BSR set to: 0
  9005  001E86  0012               	return		;funcret
  9006  001E88                     __end_of___x_arrange_str:
  9007                           	opt stack 0
  9008                           tblptru	equ	0xFF8
  9009                           tblptrh	equ	0xFF7
  9010                           tblptrl	equ	0xFF6
  9011                           tablat	equ	0xFF5
  9012                           prodh	equ	0xFF4
  9013                           prodl	equ	0xFF3
  9014                           intcon	equ	0xFF2
  9015                           indf0	equ	0xFEF
  9016                           postinc0	equ	0xFEE
  9017                           fsr0h	equ	0xFEA
  9018                           fsr0l	equ	0xFE9
  9019                           wreg	equ	0xFE8
  9020                           postdec1	equ	0xFE5
  9021                           plusw1	equ	0xFE3
  9022                           fsr1h	equ	0xFE2
  9023                           fsr1l	equ	0xFE1
  9024                           indf2	equ	0xFDF
  9025                           plusw2	equ	0xFDB
  9026                           fsr2h	equ	0xFDA
  9027                           fsr2l	equ	0xFD9
  9028                           status	equ	0xFD8
  9029                           
  9030 ;; *************** function _key_waite_release *****************
  9031 ;; Defined at:
  9032 ;;		line 26 in file "src/api/key_menu.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  timeout         2    8[BANK0 ] unsigned int 
  9035 ;;  key             2   10[BANK0 ] PTR unsigned char 
  9036 ;;		 -> key_process@key(1), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  t8              1   31[COMRAM] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  2    8[BANK0 ] unsigned int 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        5 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    7
  9055 ;; This function calls:
  9056 ;;		_key_polling
  9057 ;; This function is called by:
  9058 ;;		_key_process
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text48
  9063  002316                     __ptext48:
  9064                           	opt stack 0
  9065  002316                     _key_waite_release:
  9066                           	opt stack 22
  9067                           
  9068                           ;key_menu.c: 28: uint8_t t8;
  9069                           ;key_menu.c: 30: userTicker_ms=0;
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;incstack = 0
  9073  002316  0E00               	movlw	0
  9074  002318  6E2E               	movwf	_userTicker_ms+1,c	;volatile
  9075  00231A  0E00               	movlw	0
  9076  00231C  6E2D               	movwf	_userTicker_ms,c	;volatile
  9077                           
  9078                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  9079  00231E  D006               	goto	l8715
  9080  002320                     l8709:
  9081                           
  9082                           ;key_menu.c: 32: t8=key_polling();
  9083  002320  EC73  F00F         	call	_key_polling	;wreg free
  9084  002324  6E20               	movwf	key_waite_release@t8,c
  9085                           
  9086                           ;key_menu.c: 33: if(t8==(0x0))break;
  9087  002326  5020               	movf	key_waite_release@t8,w,c
  9088  002328  B4D8               	btfsc	status,2,c
  9089  00232A  D008               	goto	l8717
  9090  00232C                     l8715:
  9091  00232C  0100               	movlb	0	; () banked
  9092  00232E  51E1               	movf	key_waite_release@timeout& (0+255),w,b
  9093  002330  5C2D               	subwf	_userTicker_ms,w,c	;volatile
  9094  002332  0100               	movlb	0	; () banked
  9095  002334  51E2               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  9096  002336  582E               	subwfb	_userTicker_ms+1,w,c	;volatile
  9097  002338  A0D8               	btfss	status,0,c
  9098  00233A  D7F2               	goto	l8709
  9099  00233C                     l8717:
  9100                           
  9101                           ;key_menu.c: 34: }
  9102                           ;key_menu.c: 35: *key=t8;
  9103  00233C  C0E3  FFD9         	movff	key_waite_release@key,fsr2l
  9104  002340  C0E4  FFDA         	movff	key_waite_release@key+1,fsr2h
  9105  002344  C020  FFDF         	movff	key_waite_release@t8,indf2
  9106                           
  9107                           ;key_menu.c: 36: return userTicker_ms;
  9108  002348  C02D  F0E1         	movff	_userTicker_ms,?_key_waite_release	;volatile
  9109  00234C  C02E  F0E2         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  9110  002350  0012               	return	
  9111  002352                     __end_of_key_waite_release:
  9112                           	opt stack 0
  9113                           tblptru	equ	0xFF8
  9114                           tblptrh	equ	0xFF7
  9115                           tblptrl	equ	0xFF6
  9116                           tablat	equ	0xFF5
  9117                           prodh	equ	0xFF4
  9118                           prodl	equ	0xFF3
  9119                           intcon	equ	0xFF2
  9120                           indf0	equ	0xFEF
  9121                           postinc0	equ	0xFEE
  9122                           fsr0h	equ	0xFEA
  9123                           fsr0l	equ	0xFE9
  9124                           wreg	equ	0xFE8
  9125                           postdec1	equ	0xFE5
  9126                           plusw1	equ	0xFE3
  9127                           fsr1h	equ	0xFE2
  9128                           fsr1l	equ	0xFE1
  9129                           indf2	equ	0xFDF
  9130                           plusw2	equ	0xFDB
  9131                           fsr2h	equ	0xFDA
  9132                           fsr2l	equ	0xFD9
  9133                           status	equ	0xFD8
  9134                           
  9135 ;; *************** function _key_polling *****************
  9136 ;; Defined at:
  9137 ;;		line 8 in file "src/driver/key.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;		None
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  t8              1    7[BANK0 ] unsigned char 
  9142 ;;  ktemp           1    6[BANK0 ] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      unsigned char 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;Total ram usage:        2 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    6
  9159 ;; This function calls:
  9160 ;;		_delay_ms
  9161 ;; This function is called by:
  9162 ;;		_key_waite_release
  9163 ;;		_main
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text49
  9168  001EE6                     __ptext49:
  9169                           	opt stack 0
  9170  001EE6                     _key_polling:
  9171                           	opt stack 22
  9172                           
  9173                           ;key.c: 10: uint8_t ktemp=(0x0);
  9174                           
  9175                           ;incstack = 0
  9176  001EE6  0E00               	movlw	0
  9177  001EE8  0100               	movlb	0	; () banked
  9178  001EEA  6FDF               	movwf	key_polling@ktemp& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;key.c: 11: uint8_t t8=0xff;
  9182  001EEC  0100               	movlb	0	; () banked
  9183  001EEE  69E0               	setf	key_polling@t8& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186                           
  9187                           ; BSR set to: 0
  9188                           
  9189                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  9190  001EF0  0E0E               	movlw	14
  9191  001EF2  1293               	iorwf	3987,f,c	;volatile
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  9195                           
  9196                           ; BSR set to: 0
  9197  001EF4  5081               	movf	3969,w,c	;volatile
  9198  001EF6  0B0E               	andlw	14
  9199  001EF8  0100               	movlb	0	; () banked
  9200  001EFA  6FE0               	movwf	key_polling@t8& (0+255),b
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  9204  001EFC  0100               	movlb	0	; () banked
  9205  001EFE  51E0               	movf	key_polling@t8& (0+255),w,b
  9206  001F00  0B0E               	andlw	14
  9207  001F02  0A0E               	xorlw	14
  9208  001F04  B4D8               	btfsc	status,2,c
  9209  001F06  D01A               	goto	l8397
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;key.c: 16: delay_ms(10);
  9213  001F08  0E00               	movlw	0
  9214  001F0A  0100               	movlb	0	; () banked
  9215  001F0C  6FDE               	movwf	(delay_ms@dly+1)& (0+255),b
  9216  001F0E  0E0A               	movlw	10
  9217  001F10  6FDD               	movwf	delay_ms@dly& (0+255),b
  9218  001F12  EC6C  F013         	call	_delay_ms	;wreg free
  9219                           
  9220                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  9221  001F16  5081               	movf	3969,w,c	;volatile
  9222  001F18  0B0E               	andlw	14
  9223  001F1A  0100               	movlb	0	; () banked
  9224  001F1C  6FE0               	movwf	key_polling@t8& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;key.c: 18: if(!( t8 & (1<<3))){
  9228  001F1E  0100               	movlb	0	; () banked
  9229  001F20  B7E0               	btfsc	key_polling@t8& (0+255),3,b
  9230  001F22  D002               	goto	l8389
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;key.c: 19: ktemp |= (0x01<<0x0);
  9234  001F24  0100               	movlb	0	; () banked
  9235  001F26  81DF               	bsf	key_polling@ktemp& (0+255),0,b
  9236  001F28                     l8389:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;key.c: 20: }
  9240                           ;key.c: 21: if(!( t8 & (1<<2))){
  9241  001F28  0100               	movlb	0	; () banked
  9242  001F2A  B5E0               	btfsc	key_polling@t8& (0+255),2,b
  9243  001F2C  D002               	goto	l8393
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;key.c: 22: ktemp |= (0x01<<0x01);
  9247  001F2E  0100               	movlb	0	; () banked
  9248  001F30  83DF               	bsf	key_polling@ktemp& (0+255),1,b
  9249  001F32                     l8393:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;key.c: 23: }
  9253                           ;key.c: 24: if(!( t8 & (1<<1))){
  9254  001F32  0100               	movlb	0	; () banked
  9255  001F34  B3E0               	btfsc	key_polling@t8& (0+255),1,b
  9256  001F36  D002               	goto	l8397
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;key.c: 25: ktemp |= (0x01<<0x02);
  9260  001F38  0100               	movlb	0	; () banked
  9261  001F3A  85DF               	bsf	key_polling@ktemp& (0+255),2,b
  9262  001F3C                     l8397:
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;key.c: 26: }
  9266                           ;key.c: 27: }
  9267                           ;key.c: 29: return ktemp;
  9268  001F3C  0100               	movlb	0	; () banked
  9269  001F3E  51DF               	movf	key_polling@ktemp& (0+255),w,b
  9270  001F40  0012               	return	
  9271  001F42                     __end_of_key_polling:
  9272                           	opt stack 0
  9273                           tblptru	equ	0xFF8
  9274                           tblptrh	equ	0xFF7
  9275                           tblptrl	equ	0xFF6
  9276                           tablat	equ	0xFF5
  9277                           prodh	equ	0xFF4
  9278                           prodl	equ	0xFF3
  9279                           intcon	equ	0xFF2
  9280                           indf0	equ	0xFEF
  9281                           postinc0	equ	0xFEE
  9282                           fsr0h	equ	0xFEA
  9283                           fsr0l	equ	0xFE9
  9284                           wreg	equ	0xFE8
  9285                           postdec1	equ	0xFE5
  9286                           plusw1	equ	0xFE3
  9287                           fsr1h	equ	0xFE2
  9288                           fsr1l	equ	0xFE1
  9289                           indf2	equ	0xFDF
  9290                           plusw2	equ	0xFDB
  9291                           fsr2h	equ	0xFDA
  9292                           fsr2l	equ	0xFD9
  9293                           status	equ	0xFD8
  9294                           
  9295 ;; *************** function _delay_ms *****************
  9296 ;; Defined at:
  9297 ;;		line 97 in file "src/soc/clock.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  dly             2    4[BANK0 ] unsigned int 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      void 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2, status,0, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;Total ram usage:        2 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:    5
  9318 ;; This function calls:
  9319 ;;		_delay_us
  9320 ;; This function is called by:
  9321 ;;		_key_polling
  9322 ;;		_diff_pr_chip_sample_slow
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text50
  9327  0026D8                     __ptext50:
  9328                           	opt stack 0
  9329  0026D8                     _delay_ms:
  9330                           	opt stack 22
  9331                           
  9332                           ;clock.c: 99: while(dly>0){
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;incstack = 0
  9336  0026D8  D00B               	goto	l8117
  9337  0026DA                     l8113:
  9338                           
  9339                           ;clock.c: 100: delay_us(1000);
  9340  0026DA  0E03               	movlw	3
  9341  0026DC  0100               	movlb	0	; () banked
  9342  0026DE  6FDA               	movwf	(delay_us@dly+1)& (0+255),b
  9343  0026E0  0EE8               	movlw	232
  9344  0026E2  6FD9               	movwf	delay_us@dly& (0+255),b
  9345  0026E4  ECE5  F011         	call	_delay_us	;wreg free
  9346                           
  9347                           ;clock.c: 101: dly--;
  9348  0026E8  0100               	movlb	0	; () banked
  9349  0026EA  07DD               	decf	delay_ms@dly& (0+255),f,b
  9350  0026EC  A0D8               	btfss	status,0,c
  9351  0026EE  07DE               	decf	(delay_ms@dly+1)& (0+255),f,b
  9352  0026F0                     l8117:
  9353  0026F0  0100               	movlb	0	; () banked
  9354  0026F2  51DD               	movf	delay_ms@dly& (0+255),w,b
  9355  0026F4  0100               	movlb	0	; () banked
  9356  0026F6  11DE               	iorwf	(delay_ms@dly+1)& (0+255),w,b
  9357  0026F8  B4D8               	btfsc	status,2,c
  9358  0026FA  0012               	return	
  9359  0026FC  D7EE               	goto	l8113
  9360  0026FE                     __end_of_delay_ms:
  9361                           	opt stack 0
  9362                           tblptru	equ	0xFF8
  9363                           tblptrh	equ	0xFF7
  9364                           tblptrl	equ	0xFF6
  9365                           tablat	equ	0xFF5
  9366                           prodh	equ	0xFF4
  9367                           prodl	equ	0xFF3
  9368                           intcon	equ	0xFF2
  9369                           indf0	equ	0xFEF
  9370                           postinc0	equ	0xFEE
  9371                           fsr0h	equ	0xFEA
  9372                           fsr0l	equ	0xFE9
  9373                           wreg	equ	0xFE8
  9374                           postdec1	equ	0xFE5
  9375                           plusw1	equ	0xFE3
  9376                           fsr1h	equ	0xFE2
  9377                           fsr1l	equ	0xFE1
  9378                           indf2	equ	0xFDF
  9379                           plusw2	equ	0xFDB
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
  9383                           
  9384 ;; *************** function _key_process_up *****************
  9385 ;; Defined at:
  9386 ;;		line 69 in file "src/api/key_menu.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    6
  9407 ;; This function calls:
  9408 ;;		_key_adj_value_fixed_point
  9409 ;; This function is called by:
  9410 ;;		_key_process
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text51
  9415  00246E                     __ptext51:
  9416                           	opt stack 0
  9417  00246E                     _key_process_up:
  9418                           	opt stack 23
  9419                           
  9420                           ;key_menu.c: 71: switch(menu){
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;incstack = 0
  9424  00246E  D00B               	goto	l8737
  9425  002470                     l8733:
  9426  002470  0E3D               	movlw	low _passWord
  9427  002472  0100               	movlb	0	; () banked
  9428  002474  6FE7               	movwf	key_adj_value_fixed_point@value& (0+255),b
  9429  002476  0E00               	movlw	high _passWord
  9430  002478  0100               	movlb	0	; () banked
  9431  00247A  6FE8               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  9432  00247C  C03F  F0E9         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  9433  002480  EC69  F005         	call	_key_adj_value_fixed_point	;wreg free
  9434                           
  9435                           ;key_menu.c: 77: }
  9436                           
  9437                           ;key_menu.c: 76: default:break;
  9438  002484  0012               	return	
  9439  002486                     l8737:
  9440  002486  503C               	movf	_menu,w,c	;volatile
  9441                           
  9442                           ; Switch size 1, requested type "space"
  9443                           ; Number of cases is 4, Range of values is 0 to 16
  9444                           ; switch strategies available:
  9445                           ; Name         Instructions Cycles
  9446                           ; simple_byte           13     7 (average)
  9447                           ;	Chosen strategy is simple_byte
  9448  002488  0A00               	xorlw	0	; case 0
  9449  00248A  B4D8               	btfsc	status,2,c
  9450  00248C  0012               	return	
  9451  00248E  0A01               	xorlw	1	; case 1
  9452  002490  B4D8               	btfsc	status,2,c
  9453  002492  0012               	return	
  9454  002494  0A03               	xorlw	3	; case 2
  9455  002496  B4D8               	btfsc	status,2,c
  9456  002498  0012               	return	
  9457  00249A  0A12               	xorlw	18	; case 16
  9458  00249C  A4D8               	btfss	status,2,c
  9459  00249E  0012               	return	
  9460  0024A0  D7E7               	goto	l8733
  9461  0024A2                     __end_of_key_process_up:
  9462                           	opt stack 0
  9463                           tblptru	equ	0xFF8
  9464                           tblptrh	equ	0xFF7
  9465                           tblptrl	equ	0xFF6
  9466                           tablat	equ	0xFF5
  9467                           prodh	equ	0xFF4
  9468                           prodl	equ	0xFF3
  9469                           intcon	equ	0xFF2
  9470                           indf0	equ	0xFEF
  9471                           postinc0	equ	0xFEE
  9472                           fsr0h	equ	0xFEA
  9473                           fsr0l	equ	0xFE9
  9474                           wreg	equ	0xFE8
  9475                           postdec1	equ	0xFE5
  9476                           plusw1	equ	0xFE3
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           indf2	equ	0xFDF
  9480                           plusw2	equ	0xFDB
  9481                           fsr2h	equ	0xFDA
  9482                           fsr2l	equ	0xFD9
  9483                           status	equ	0xFD8
  9484                           
  9485 ;; *************** function _key_adj_value_fixed_point *****************
  9486 ;; Defined at:
  9487 ;;		line 58 in file "src/api/key_menu.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  value           2   14[BANK0 ] PTR unsigned int 
  9490 ;;		 -> passWord(2), 
  9491 ;;  loc             1   16[BANK0 ] unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  t16             2   19[BANK0 ] unsigned int 
  9494 ;;  dloc            2   17[BANK0 ] unsigned int 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9504 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;Total ram usage:        7 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    5
  9511 ;; This function calls:
  9512 ;;		___exp_10
  9513 ;;		___lwdiv
  9514 ;;		___lwmod
  9515 ;;		___wmul
  9516 ;; This function is called by:
  9517 ;;		_key_process_up
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text52
  9522  000AD2                     __ptext52:
  9523                           	opt stack 0
  9524  000AD2                     _key_adj_value_fixed_point:
  9525                           	opt stack 23
  9526                           
  9527                           ;key_menu.c: 60: uint16_t dloc;
  9528                           ;key_menu.c: 61: uint16_t t16=*value;
  9529                           
  9530                           ;incstack = 0
  9531  000AD2  C0E7  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  9532  000AD6  C0E8  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  9533  000ADA  CFDE F0EC          	movff	postinc2,key_adj_value_fixed_point@t16
  9534  000ADE  CFDD F0ED          	movff	postdec2,key_adj_value_fixed_point@t16+1
  9535                           
  9536                           ;key_menu.c: 62: dloc=(t16/__exp_10(loc))%10;
  9537  000AE2  0100               	movlb	0	; () banked
  9538  000AE4  51E9               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9539  000AE6  ECA1  F00F         	call	___exp_10
  9540  000AEA  C0D9  F0DD         	movff	?___exp_10,___lwdiv@divisor
  9541  000AEE  C0DA  F0DE         	movff	?___exp_10+1,___lwdiv@divisor+1
  9542  000AF2  C0EC  F0DB         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  9543  000AF6  C0ED  F0DC         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  9544  000AFA  EC3B  F00D         	call	___lwdiv	;wreg free
  9545  000AFE  C0DB  F0E2         	movff	?___lwdiv,___lwmod@dividend
  9546  000B02  C0DC  F0E3         	movff	?___lwdiv+1,___lwmod@dividend+1
  9547  000B06  0E00               	movlw	0
  9548  000B08  0100               	movlb	0	; () banked
  9549  000B0A  6FE5               	movwf	(___lwmod@divisor+1)& (0+255),b
  9550  000B0C  0E0A               	movlw	10
  9551  000B0E  6FE4               	movwf	___lwmod@divisor& (0+255),b
  9552  000B10  ECB5  F00E         	call	___lwmod	;wreg free
  9553  000B14  C0E2  F0EA         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  9554  000B18  C0E3  F0EB         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  9555                           
  9556                           ;key_menu.c: 63: t16=t16-dloc*__exp_10(loc);
  9557  000B1C  0100               	movlb	0	; () banked
  9558  000B1E  51E9               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9559  000B20  ECA1  F00F         	call	___exp_10
  9560  000B24  C0D9  F0DB         	movff	?___exp_10,___wmul@multiplier
  9561  000B28  C0DA  F0DC         	movff	?___exp_10+1,___wmul@multiplier+1
  9562  000B2C  C0EA  F0DD         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  9563  000B30  C0EB  F0DE         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  9564  000B34  EC01  F012         	call	___wmul	;wreg free
  9565  000B38  0100               	movlb	0	; () banked
  9566  000B3A  1FDB               	comf	?___wmul& (0+255),f,b
  9567  000B3C  0100               	movlb	0	; () banked
  9568  000B3E  1FDC               	comf	(?___wmul+1)& (0+255),f,b
  9569  000B40  0100               	movlb	0	; () banked
  9570  000B42  4BDB               	infsnz	?___wmul& (0+255),f,b
  9571  000B44  2BDC               	incf	(?___wmul+1)& (0+255),f,b
  9572  000B46  0100               	movlb	0	; () banked
  9573  000B48  51EC               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  9574  000B4A  0100               	movlb	0	; () banked
  9575  000B4C  25DB               	addwf	?___wmul& (0+255),w,b
  9576  000B4E  0100               	movlb	0	; () banked
  9577  000B50  6FEC               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  9578  000B52  0100               	movlb	0	; () banked
  9579  000B54  51ED               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  9580  000B56  0100               	movlb	0	; () banked
  9581  000B58  21DC               	addwfc	(?___wmul+1)& (0+255),w,b
  9582  000B5A  0100               	movlb	0	; () banked
  9583  000B5C  6FED               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;key_menu.c: 64: dloc++;
  9587  000B5E  0100               	movlb	0	; () banked
  9588  000B60  4BEA               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  9589  000B62  2BEB               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;key_menu.c: 65: if(dloc>9)dloc=0;
  9593  000B64  0100               	movlb	0	; () banked
  9594  000B66  51EB               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  9595  000B68  E105               	bnz	u6430
  9596  000B6A  0E0A               	movlw	10
  9597  000B6C  0100               	movlb	0	; () banked
  9598  000B6E  5DEA               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  9599  000B70  A0D8               	btfss	status,0,c
  9600  000B72  D005               	goto	l8427
  9601  000B74                     u6430:
  9602                           
  9603                           ; BSR set to: 0
  9604  000B74  0E00               	movlw	0
  9605  000B76  0100               	movlb	0	; () banked
  9606  000B78  6FEB               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  9607  000B7A  0E00               	movlw	0
  9608  000B7C  6FEA               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  9609  000B7E                     l8427:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;key_menu.c: 66: t16+=(dloc*__exp_10(loc));
  9613  000B7E  0100               	movlb	0	; () banked
  9614  000B80  51E9               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  9615  000B82  ECA1  F00F         	call	___exp_10
  9616  000B86  C0D9  F0DB         	movff	?___exp_10,___wmul@multiplier
  9617  000B8A  C0DA  F0DC         	movff	?___exp_10+1,___wmul@multiplier+1
  9618  000B8E  C0EA  F0DD         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  9619  000B92  C0EB  F0DE         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  9620  000B96  EC01  F012         	call	___wmul	;wreg free
  9621  000B9A  0100               	movlb	0	; () banked
  9622  000B9C  51DB               	movf	?___wmul& (0+255),w,b
  9623  000B9E  0100               	movlb	0	; () banked
  9624  000BA0  27EC               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  9625  000BA2  0100               	movlb	0	; () banked
  9626  000BA4  51DC               	movf	(?___wmul+1)& (0+255),w,b
  9627  000BA6  0100               	movlb	0	; () banked
  9628  000BA8  23ED               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;key_menu.c: 67: *value=t16;
  9632  000BAA  C0E7  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  9633  000BAE  C0E8  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  9634  000BB2  C0EC  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  9635  000BB6  C0ED  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  9636                           
  9637                           ; BSR set to: 0
  9638  000BBA  0012               	return		;funcret
  9639  000BBC                     __end_of_key_adj_value_fixed_point:
  9640                           	opt stack 0
  9641                           tblptru	equ	0xFF8
  9642                           tblptrh	equ	0xFF7
  9643                           tblptrl	equ	0xFF6
  9644                           tablat	equ	0xFF5
  9645                           prodh	equ	0xFF4
  9646                           prodl	equ	0xFF3
  9647                           intcon	equ	0xFF2
  9648                           indf0	equ	0xFEF
  9649                           postinc0	equ	0xFEE
  9650                           fsr0h	equ	0xFEA
  9651                           fsr0l	equ	0xFE9
  9652                           wreg	equ	0xFE8
  9653                           postdec1	equ	0xFE5
  9654                           plusw1	equ	0xFE3
  9655                           fsr1h	equ	0xFE2
  9656                           fsr1l	equ	0xFE1
  9657                           indf2	equ	0xFDF
  9658                           postinc2	equ	0xFDE
  9659                           postdec2	equ	0xFDD
  9660                           plusw2	equ	0xFDB
  9661                           fsr2h	equ	0xFDA
  9662                           fsr2l	equ	0xFD9
  9663                           status	equ	0xFD8
  9664                           
  9665 ;; *************** function ___wmul *****************
  9666 ;; Defined at:
  9667 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  multiplier      2    2[BANK0 ] unsigned int 
  9670 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  product         2    6[BANK0 ] unsigned int 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  2    2[BANK0 ] unsigned int 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, status,0, prodl, prodh
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:        6 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    4
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_key_adj_value_fixed_point
  9693 ;;		_calib_data_set_default_diff_pr
  9694 ;;		_calib_data_set_default_pr
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text53
  9699  002402                     __ptext53:
  9700                           	opt stack 0
  9701  002402                     ___wmul:
  9702                           	opt stack 23
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;incstack = 0
  9706  002402  0100               	movlb	0	; () banked
  9707  002404  51DB               	movf	___wmul@multiplier& (0+255),w,b
  9708  002406  0100               	movlb	0	; () banked
  9709  002408  03DD               	mulwf	___wmul@multiplicand& (0+255),b
  9710  00240A  CFF3 F0DF          	movff	prodl,___wmul@product
  9711  00240E  CFF4 F0E0          	movff	prodh,___wmul@product+1
  9712  002412  0100               	movlb	0	; () banked
  9713  002414  51DB               	movf	___wmul@multiplier& (0+255),w,b
  9714  002416  0100               	movlb	0	; () banked
  9715  002418  03DE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9716  00241A  50F3               	movf	prodl,w,c
  9717  00241C  0100               	movlb	0	; () banked
  9718  00241E  27E0               	addwf	(___wmul@product+1)& (0+255),f,b
  9719  002420  0100               	movlb	0	; () banked
  9720  002422  51DC               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9721  002424  0100               	movlb	0	; () banked
  9722  002426  03DD               	mulwf	___wmul@multiplicand& (0+255),b
  9723  002428  50F3               	movf	prodl,w,c
  9724  00242A  0100               	movlb	0	; () banked
  9725  00242C  27E0               	addwf	(___wmul@product+1)& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  00242E  C0DF  F0DB         	movff	___wmul@product,?___wmul
  9729  002432  C0E0  F0DC         	movff	___wmul@product+1,?___wmul+1
  9730  002436  0012               	return	
  9731  002438                     __end_of___wmul:
  9732                           	opt stack 0
  9733                           tblptru	equ	0xFF8
  9734                           tblptrh	equ	0xFF7
  9735                           tblptrl	equ	0xFF6
  9736                           tablat	equ	0xFF5
  9737                           prodh	equ	0xFF4
  9738                           prodl	equ	0xFF3
  9739                           intcon	equ	0xFF2
  9740                           indf0	equ	0xFEF
  9741                           postinc0	equ	0xFEE
  9742                           fsr0h	equ	0xFEA
  9743                           fsr0l	equ	0xFE9
  9744                           wreg	equ	0xFE8
  9745                           postdec1	equ	0xFE5
  9746                           plusw1	equ	0xFE3
  9747                           fsr1h	equ	0xFE2
  9748                           fsr1l	equ	0xFE1
  9749                           indf2	equ	0xFDF
  9750                           postinc2	equ	0xFDE
  9751                           postdec2	equ	0xFDD
  9752                           plusw2	equ	0xFDB
  9753                           fsr2h	equ	0xFDA
  9754                           fsr2l	equ	0xFD9
  9755                           status	equ	0xFD8
  9756                           
  9757 ;; *************** function ___lwmod *****************
  9758 ;; Defined at:
  9759 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwmod.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  dividend        2    9[BANK0 ] unsigned int 
  9762 ;;  divisor         2   11[BANK0 ] unsigned int 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  counter         1   13[BANK0 ] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  2    9[BANK0 ] unsigned int 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9774 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;Total ram usage:        5 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    4
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_key_adj_value_fixed_point
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text54
  9789  001D6A                     __ptext54:
  9790                           	opt stack 0
  9791  001D6A                     ___lwmod:
  9792                           	opt stack 23
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;incstack = 0
  9796  001D6A  0100               	movlb	0	; () banked
  9797  001D6C  51E4               	movf	___lwmod@divisor& (0+255),w,b
  9798  001D6E  0100               	movlb	0	; () banked
  9799  001D70  11E5               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9800  001D72  B4D8               	btfsc	status,2,c
  9801  001D74  D026               	goto	l2028
  9802                           
  9803                           ; BSR set to: 0
  9804  001D76  0E01               	movlw	1
  9805  001D78  0100               	movlb	0	; () banked
  9806  001D7A  6FE6               	movwf	___lwmod@counter& (0+255),b
  9807  001D7C  D006               	goto	l8361
  9808  001D7E                     l8359:
  9809                           
  9810                           ; BSR set to: 0
  9811  001D7E  0100               	movlb	0	; () banked
  9812  001D80  90D8               	bcf	status,0,c
  9813  001D82  37E4               	rlcf	___lwmod@divisor& (0+255),f,b
  9814  001D84  37E5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9815  001D86  0100               	movlb	0	; () banked
  9816  001D88  2BE6               	incf	___lwmod@counter& (0+255),f,b
  9817  001D8A                     l8361:
  9818                           
  9819                           ; BSR set to: 0
  9820  001D8A  0100               	movlb	0	; () banked
  9821  001D8C  AFE5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9822  001D8E  D7F7               	goto	l8359
  9823  001D90                     l8363:
  9824                           
  9825                           ; BSR set to: 0
  9826  001D90  0100               	movlb	0	; () banked
  9827  001D92  51E4               	movf	___lwmod@divisor& (0+255),w,b
  9828  001D94  0100               	movlb	0	; () banked
  9829  001D96  5DE2               	subwf	___lwmod@dividend& (0+255),w,b
  9830  001D98  0100               	movlb	0	; () banked
  9831  001D9A  51E5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9832  001D9C  0100               	movlb	0	; () banked
  9833  001D9E  59E3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9834  001DA0  A0D8               	btfss	status,0,c
  9835  001DA2  D008               	goto	l8367
  9836                           
  9837                           ; BSR set to: 0
  9838  001DA4  0100               	movlb	0	; () banked
  9839  001DA6  51E4               	movf	___lwmod@divisor& (0+255),w,b
  9840  001DA8  0100               	movlb	0	; () banked
  9841  001DAA  5FE2               	subwf	___lwmod@dividend& (0+255),f,b
  9842  001DAC  0100               	movlb	0	; () banked
  9843  001DAE  51E5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9844  001DB0  0100               	movlb	0	; () banked
  9845  001DB2  5BE3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9846  001DB4                     l8367:
  9847                           
  9848                           ; BSR set to: 0
  9849  001DB4  0100               	movlb	0	; () banked
  9850  001DB6  90D8               	bcf	status,0,c
  9851  001DB8  33E5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9852  001DBA  33E4               	rrcf	___lwmod@divisor& (0+255),f,b
  9853                           
  9854                           ; BSR set to: 0
  9855  001DBC  0100               	movlb	0	; () banked
  9856  001DBE  2FE6               	decfsz	___lwmod@counter& (0+255),f,b
  9857  001DC0  D7E7               	goto	l8363
  9858  001DC2                     l2028:
  9859                           
  9860                           ; BSR set to: 0
  9861  001DC2  C0E2  F0E2         	movff	___lwmod@dividend,?___lwmod
  9862  001DC6  C0E3  F0E3         	movff	___lwmod@dividend+1,?___lwmod+1
  9863                           
  9864                           ; BSR set to: 0
  9865  001DCA  0012               	return		;funcret
  9866  001DCC                     __end_of___lwmod:
  9867                           	opt stack 0
  9868                           tblptru	equ	0xFF8
  9869                           tblptrh	equ	0xFF7
  9870                           tblptrl	equ	0xFF6
  9871                           tablat	equ	0xFF5
  9872                           prodh	equ	0xFF4
  9873                           prodl	equ	0xFF3
  9874                           intcon	equ	0xFF2
  9875                           indf0	equ	0xFEF
  9876                           postinc0	equ	0xFEE
  9877                           fsr0h	equ	0xFEA
  9878                           fsr0l	equ	0xFE9
  9879                           wreg	equ	0xFE8
  9880                           postdec1	equ	0xFE5
  9881                           plusw1	equ	0xFE3
  9882                           fsr1h	equ	0xFE2
  9883                           fsr1l	equ	0xFE1
  9884                           indf2	equ	0xFDF
  9885                           postinc2	equ	0xFDE
  9886                           postdec2	equ	0xFDD
  9887                           plusw2	equ	0xFDB
  9888                           fsr2h	equ	0xFDA
  9889                           fsr2l	equ	0xFD9
  9890                           status	equ	0xFD8
  9891                           
  9892 ;; *************** function ___lwdiv *****************
  9893 ;; Defined at:
  9894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;  dividend        2    2[BANK0 ] unsigned int 
  9897 ;;  divisor         2    4[BANK0 ] unsigned int 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;  quotient        2    7[BANK0 ] unsigned int 
  9900 ;;  counter         1    6[BANK0 ] unsigned char 
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  2    2[BANK0 ] unsigned int 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;Total ram usage:        7 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    4
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_key_adj_value_fixed_point
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text55
  9925  001A76                     __ptext55:
  9926                           	opt stack 0
  9927  001A76                     ___lwdiv:
  9928                           	opt stack 23
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;incstack = 0
  9932  001A76  0E00               	movlw	0
  9933  001A78  0100               	movlb	0	; () banked
  9934  001A7A  6FE1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9935  001A7C  0E00               	movlw	0
  9936  001A7E  6FE0               	movwf	___lwdiv@quotient& (0+255),b
  9937                           
  9938                           ; BSR set to: 0
  9939  001A80  0100               	movlb	0	; () banked
  9940  001A82  51DD               	movf	___lwdiv@divisor& (0+255),w,b
  9941  001A84  0100               	movlb	0	; () banked
  9942  001A86  11DE               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9943  001A88  B4D8               	btfsc	status,2,c
  9944  001A8A  D02C               	goto	l2018
  9945                           
  9946                           ; BSR set to: 0
  9947  001A8C  0E01               	movlw	1
  9948  001A8E  0100               	movlb	0	; () banked
  9949  001A90  6FDF               	movwf	___lwdiv@counter& (0+255),b
  9950  001A92  D006               	goto	l8341
  9951  001A94                     l8339:
  9952                           
  9953                           ; BSR set to: 0
  9954  001A94  0100               	movlb	0	; () banked
  9955  001A96  90D8               	bcf	status,0,c
  9956  001A98  37DD               	rlcf	___lwdiv@divisor& (0+255),f,b
  9957  001A9A  37DE               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9958  001A9C  0100               	movlb	0	; () banked
  9959  001A9E  2BDF               	incf	___lwdiv@counter& (0+255),f,b
  9960  001AA0                     l8341:
  9961                           
  9962                           ; BSR set to: 0
  9963  001AA0  0100               	movlb	0	; () banked
  9964  001AA2  AFDE               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9965  001AA4  D7F7               	goto	l8339
  9966  001AA6                     l8343:
  9967                           
  9968                           ; BSR set to: 0
  9969  001AA6  0100               	movlb	0	; () banked
  9970  001AA8  90D8               	bcf	status,0,c
  9971  001AAA  37E0               	rlcf	___lwdiv@quotient& (0+255),f,b
  9972  001AAC  37E1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 0
  9975  001AAE  0100               	movlb	0	; () banked
  9976  001AB0  51DD               	movf	___lwdiv@divisor& (0+255),w,b
  9977  001AB2  0100               	movlb	0	; () banked
  9978  001AB4  5DDB               	subwf	___lwdiv@dividend& (0+255),w,b
  9979  001AB6  0100               	movlb	0	; () banked
  9980  001AB8  51DE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9981  001ABA  0100               	movlb	0	; () banked
  9982  001ABC  59DC               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9983  001ABE  A0D8               	btfss	status,0,c
  9984  001AC0  D00A               	goto	l8351
  9985                           
  9986                           ; BSR set to: 0
  9987  001AC2  0100               	movlb	0	; () banked
  9988  001AC4  51DD               	movf	___lwdiv@divisor& (0+255),w,b
  9989  001AC6  0100               	movlb	0	; () banked
  9990  001AC8  5FDB               	subwf	___lwdiv@dividend& (0+255),f,b
  9991  001ACA  0100               	movlb	0	; () banked
  9992  001ACC  51DE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9993  001ACE  0100               	movlb	0	; () banked
  9994  001AD0  5BDC               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9995                           
  9996                           ; BSR set to: 0
  9997  001AD2  0100               	movlb	0	; () banked
  9998  001AD4  81E0               	bsf	___lwdiv@quotient& (0+255),0,b
  9999  001AD6                     l8351:
 10000                           
 10001                           ; BSR set to: 0
 10002  001AD6  0100               	movlb	0	; () banked
 10003  001AD8  90D8               	bcf	status,0,c
 10004  001ADA  33DE               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10005  001ADC  33DD               	rrcf	___lwdiv@divisor& (0+255),f,b
 10006                           
 10007                           ; BSR set to: 0
 10008  001ADE  0100               	movlb	0	; () banked
 10009  001AE0  2FDF               	decfsz	___lwdiv@counter& (0+255),f,b
 10010  001AE2  D7E1               	goto	l8343
 10011  001AE4                     l2018:
 10012                           
 10013                           ; BSR set to: 0
 10014  001AE4  C0E0  F0DB         	movff	___lwdiv@quotient,?___lwdiv
 10015  001AE8  C0E1  F0DC         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10016                           
 10017                           ; BSR set to: 0
 10018  001AEC  0012               	return		;funcret
 10019  001AEE                     __end_of___lwdiv:
 10020                           	opt stack 0
 10021                           tblptru	equ	0xFF8
 10022                           tblptrh	equ	0xFF7
 10023                           tblptrl	equ	0xFF6
 10024                           tablat	equ	0xFF5
 10025                           prodh	equ	0xFF4
 10026                           prodl	equ	0xFF3
 10027                           intcon	equ	0xFF2
 10028                           indf0	equ	0xFEF
 10029                           postinc0	equ	0xFEE
 10030                           fsr0h	equ	0xFEA
 10031                           fsr0l	equ	0xFE9
 10032                           wreg	equ	0xFE8
 10033                           postdec1	equ	0xFE5
 10034                           plusw1	equ	0xFE3
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           indf2	equ	0xFDF
 10038                           postinc2	equ	0xFDE
 10039                           postdec2	equ	0xFDD
 10040                           plusw2	equ	0xFDB
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8
 10044                           
 10045 ;; *************** function ___exp_10 *****************
 10046 ;; Defined at:
 10047 ;;		line 15 in file "src/api/key_menu.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  n               1    wreg     unsigned char 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  n               1   31[COMRAM] unsigned char 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  2    0[BANK0 ] unsigned int 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;Total ram usage:        3 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    4
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_key_adj_value_fixed_point
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text56
 10076  001F42                     __ptext56:
 10077                           	opt stack 0
 10078  001F42                     ___exp_10:
 10079                           	opt stack 23
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;incstack = 0
 10083                           ;___exp_10@n stored from wreg
 10084  001F42  6E20               	movwf	___exp_10@n,c
 10085                           
 10086                           ;key_menu.c: 17: switch(n){
 10087  001F44  D01E               	goto	l8057
 10088  001F46                     l8035:
 10089  001F46  0E00               	movlw	0
 10090  001F48  0100               	movlb	0	; () banked
 10091  001F4A  6FDA               	movwf	(?___exp_10+1)& (0+255),b
 10092  001F4C  0E01               	movlw	1
 10093  001F4E  6FD9               	movwf	?___exp_10& (0+255),b
 10094                           
 10095                           ; BSR set to: 0
 10096  001F50  0012               	return	
 10097  001F52                     l8039:
 10098  001F52  0E00               	movlw	0
 10099  001F54  0100               	movlb	0	; () banked
 10100  001F56  6FDA               	movwf	(?___exp_10+1)& (0+255),b
 10101  001F58  0E0A               	movlw	10
 10102  001F5A  6FD9               	movwf	?___exp_10& (0+255),b
 10103                           
 10104                           ; BSR set to: 0
 10105  001F5C  0012               	return	
 10106  001F5E                     l8043:
 10107  001F5E  0E00               	movlw	0
 10108  001F60  0100               	movlb	0	; () banked
 10109  001F62  6FDA               	movwf	(?___exp_10+1)& (0+255),b
 10110  001F64  0E64               	movlw	100
 10111  001F66  6FD9               	movwf	?___exp_10& (0+255),b
 10112                           
 10113                           ; BSR set to: 0
 10114  001F68  0012               	return	
 10115  001F6A                     l8047:
 10116  001F6A  0E03               	movlw	3
 10117  001F6C  0100               	movlb	0	; () banked
 10118  001F6E  6FDA               	movwf	(?___exp_10+1)& (0+255),b
 10119  001F70  0EE8               	movlw	232
 10120  001F72  6FD9               	movwf	?___exp_10& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123  001F74  0012               	return	
 10124  001F76                     l8051:
 10125  001F76  0E27               	movlw	39
 10126  001F78  0100               	movlb	0	; () banked
 10127  001F7A  6FDA               	movwf	(?___exp_10+1)& (0+255),b
 10128  001F7C  0E10               	movlw	16
 10129  001F7E  6FD9               	movwf	?___exp_10& (0+255),b
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;key_menu.c: 23: }
 10133                           
 10134                           ; BSR set to: 0
 10135  001F80  0012               	return	
 10136  001F82                     l8057:
 10137  001F82  5020               	movf	___exp_10@n,w,c
 10138                           
 10139                           ; Switch size 1, requested type "space"
 10140                           ; Number of cases is 4, Range of values is 0 to 4
 10141                           ; switch strategies available:
 10142                           ; Name         Instructions Cycles
 10143                           ; simple_byte           13     7 (average)
 10144                           ;	Chosen strategy is simple_byte
 10145  001F84  0A00               	xorlw	0	; case 0
 10146  001F86  B4D8               	btfsc	status,2,c
 10147  001F88  D7DE               	goto	l8035
 10148  001F8A  0A02               	xorlw	2	; case 2
 10149  001F8C  B4D8               	btfsc	status,2,c
 10150  001F8E  D7E1               	goto	l8039
 10151  001F90  0A01               	xorlw	1	; case 3
 10152  001F92  B4D8               	btfsc	status,2,c
 10153  001F94  D7E4               	goto	l8043
 10154  001F96  0A07               	xorlw	7	; case 4
 10155  001F98  B4D8               	btfsc	status,2,c
 10156  001F9A  D7E7               	goto	l8047
 10157  001F9C  D7EC               	goto	l8051
 10158  001F9E                     __end_of___exp_10:
 10159                           	opt stack 0
 10160                           tblptru	equ	0xFF8
 10161                           tblptrh	equ	0xFF7
 10162                           tblptrl	equ	0xFF6
 10163                           tablat	equ	0xFF5
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           intcon	equ	0xFF2
 10167                           indf0	equ	0xFEF
 10168                           postinc0	equ	0xFEE
 10169                           fsr0h	equ	0xFEA
 10170                           fsr0l	equ	0xFE9
 10171                           wreg	equ	0xFE8
 10172                           postdec1	equ	0xFE5
 10173                           plusw1	equ	0xFE3
 10174                           fsr1h	equ	0xFE2
 10175                           fsr1l	equ	0xFE1
 10176                           indf2	equ	0xFDF
 10177                           postinc2	equ	0xFDE
 10178                           postdec2	equ	0xFDD
 10179                           plusw2	equ	0xFDB
 10180                           fsr2h	equ	0xFDA
 10181                           fsr2l	equ	0xFD9
 10182                           status	equ	0xFD8
 10183                           
 10184 ;; *************** function _key_process_set_long *****************
 10185 ;; Defined at:
 10186 ;;		line 139 in file "src/api/key_menu.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		None
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    4
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_key_process
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text57
 10215  00280E                     __ptext57:
 10216                           	opt stack 0
 10217  00280E                     _key_process_set_long:
 10218                           	opt stack 25
 10219                           
 10220                           ;incstack = 0
 10221  00280E  0012               	return		;funcret
 10222  002810                     __end_of_key_process_set_long:
 10223                           	opt stack 0
 10224                           tblptru	equ	0xFF8
 10225                           tblptrh	equ	0xFF7
 10226                           tblptrl	equ	0xFF6
 10227                           tablat	equ	0xFF5
 10228                           prodh	equ	0xFF4
 10229                           prodl	equ	0xFF3
 10230                           intcon	equ	0xFF2
 10231                           indf0	equ	0xFEF
 10232                           postinc0	equ	0xFEE
 10233                           fsr0h	equ	0xFEA
 10234                           fsr0l	equ	0xFE9
 10235                           wreg	equ	0xFE8
 10236                           postdec1	equ	0xFE5
 10237                           plusw1	equ	0xFE3
 10238                           fsr1h	equ	0xFE2
 10239                           fsr1l	equ	0xFE1
 10240                           indf2	equ	0xFDF
 10241                           postinc2	equ	0xFDE
 10242                           postdec2	equ	0xFDD
 10243                           plusw2	equ	0xFDB
 10244                           fsr2h	equ	0xFDA
 10245                           fsr2l	equ	0xFD9
 10246                           status	equ	0xFD8
 10247                           
 10248 ;; *************** function _key_process_set_down_long *****************
 10249 ;; Defined at:
 10250 ;;		line 106 in file "src/api/key_menu.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10266 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;Total ram usage:        2 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    7
 10271 ;; This function calls:
 10272 ;;		___enter_menu_set_base_zero
 10273 ;;		___enter_menu_set_density
 10274 ;;		___enter_menu_set_pose
 10275 ;; This function is called by:
 10276 ;;		_key_process
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text58
 10281  000ED8                     __ptext58:
 10282                           	opt stack 0
 10283  000ED8                     _key_process_set_down_long:
 10284                           	opt stack 22
 10285                           
 10286                           ;key_menu.c: 108: if(menu==0x10){
 10287                           
 10288                           ;incstack = 0
 10289  000ED8  0E10               	movlw	16
 10290  000EDA  183C               	xorwf	_menu,w,c	;volatile
 10291  000EDC  A4D8               	btfss	status,2,c
 10292  000EDE  0012               	return	
 10293  000EE0  D02A               	goto	l8775
 10294  000EE2                     l8743:
 10295                           
 10296                           ;key_menu.c: 111: menu=0x20; __enter_menu_set_density(); break;
 10297  000EE2  0E20               	movlw	32
 10298  000EE4  6E3C               	movwf	_menu,c	;volatile
 10299  000EE6  EC51  F012         	call	___enter_menu_set_density	;wreg free
 10300  000EEA  0012               	return	
 10301  000EEC                     l8747:
 10302                           
 10303                           ;key_menu.c: 113: menu=0x30; __enter_menu_set_pose(); break;
 10304  000EEC  0E30               	movlw	48
 10305  000EEE  6E3C               	movwf	_menu,c	;volatile
 10306  000EF0  EC2B  F013         	call	___enter_menu_set_pose	;wreg free
 10307  000EF4  0012               	return	
 10308  000EF6                     l8751:
 10309                           
 10310                           ;key_menu.c: 115: menu=0x40;__enter_menu_set_base_zero(); break;
 10311  000EF6  0E40               	movlw	64
 10312  000EF8  6E3C               	movwf	_menu,c	;volatile
 10313  000EFA  EC55  F010         	call	___enter_menu_set_base_zero	;wreg free
 10314  000EFE  0012               	return	
 10315  000F00                     l8755:
 10316                           
 10317                           ;key_menu.c: 117: menu=0x50; break;
 10318  000F00  0E50               	movlw	80
 10319  000F02  6E3C               	movwf	_menu,c	;volatile
 10320  000F04  0012               	return	
 10321  000F06                     l8757:
 10322                           
 10323                           ;key_menu.c: 119: menu=0x60; break;
 10324  000F06  0E60               	movlw	96
 10325  000F08  6E3C               	movwf	_menu,c	;volatile
 10326  000F0A  0012               	return	
 10327  000F0C                     l8759:
 10328                           
 10329                           ;key_menu.c: 121: menu=0x70; break;
 10330  000F0C  0E70               	movlw	112
 10331  000F0E  6E3C               	movwf	_menu,c	;volatile
 10332  000F10  0012               	return	
 10333  000F12                     l8761:
 10334                           
 10335                           ;key_menu.c: 123: menu=0x80; break;
 10336  000F12  0E80               	movlw	128
 10337  000F14  6E3C               	movwf	_menu,c	;volatile
 10338  000F16  0012               	return	
 10339  000F18                     l8763:
 10340                           
 10341                           ;key_menu.c: 125: menu=0x90; break;
 10342  000F18  0E90               	movlw	144
 10343  000F1A  6E3C               	movwf	_menu,c	;volatile
 10344  000F1C  0012               	return	
 10345  000F1E                     l8765:
 10346                           
 10347                           ;key_menu.c: 127: menu=0xa0; break;
 10348  000F1E  0EA0               	movlw	160
 10349  000F20  6E3C               	movwf	_menu,c	;volatile
 10350  000F22  0012               	return	
 10351  000F24                     l8767:
 10352                           
 10353                           ;key_menu.c: 129: menu=0xb0; break;
 10354  000F24  0EB0               	movlw	176
 10355  000F26  6E3C               	movwf	_menu,c	;volatile
 10356  000F28  0012               	return	
 10357  000F2A                     l8769:
 10358                           
 10359                           ;key_menu.c: 131: menu=0xc0; break;
 10360  000F2A  0EC0               	movlw	192
 10361  000F2C  6E3C               	movwf	_menu,c	;volatile
 10362  000F2E  0012               	return	
 10363  000F30                     l8771:
 10364                           
 10365                           ;key_menu.c: 133: menu=0xf0; break;
 10366  000F30  0EF0               	movlw	240
 10367  000F32  6E3C               	movwf	_menu,c	;volatile
 10368                           
 10369                           ;key_menu.c: 135: }
 10370                           
 10371                           ;key_menu.c: 134: default:break;
 10372  000F34  0012               	return	
 10373  000F36                     l8775:
 10374  000F36  C03D  F1F5         	movff	_passWord,??_key_process_set_down_long	;volatile
 10375  000F3A  C03E  F1F6         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
 10376                           
 10377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10378                           ; Switch size 1, requested type "space"
 10379                           ; Number of cases is 1, Range of values is 0 to 0
 10380                           ; switch strategies available:
 10381                           ; Name         Instructions Cycles
 10382                           ; simple_byte            4     3 (average)
 10383                           ;	Chosen strategy is simple_byte
 10384  000F3E  0101               	movlb	1	; () banked
 10385  000F40  51F6               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
 10386  000F42  0A00               	xorlw	0	; case 0
 10387  000F44  A4D8               	btfss	status,2,c
 10388  000F46  0012               	return	
 10389                           
 10390                           ; BSR set to: 1
 10391                           ; Switch size 1, requested type "space"
 10392                           ; Number of cases is 12, Range of values is 6 to 188
 10393                           ; switch strategies available:
 10394                           ; Name         Instructions Cycles
 10395                           ; simple_byte           37    19 (average)
 10396                           ;	Chosen strategy is simple_byte
 10397  000F48  0101               	movlb	1	; () banked
 10398  000F4A  51F5               	movf	??_key_process_set_down_long& (0+255),w,b
 10399  000F4C  0A06               	xorlw	6	; case 6
 10400  000F4E  B4D8               	btfsc	status,2,c
 10401  000F50  D7E0               	goto	l8761
 10402  000F52  0A16               	xorlw	22	; case 16
 10403  000F54  B4D8               	btfsc	status,2,c
 10404  000F56  D7E0               	goto	l8763
 10405  000F58  0A02               	xorlw	2	; case 18
 10406  000F5A  B4D8               	btfsc	status,2,c
 10407  000F5C  D7E9               	goto	l8771
 10408  000F5E  0A36               	xorlw	54	; case 36
 10409  000F60  B4D8               	btfsc	status,2,c
 10410  000F62  D7BF               	goto	l8743
 10411  000F64  0A1C               	xorlw	28	; case 56
 10412  000F66  B4D8               	btfsc	status,2,c
 10413  000F68  D7C6               	goto	l8751
 10414  000F6A  0A7A               	xorlw	122	; case 66
 10415  000F6C  B4D8               	btfsc	status,2,c
 10416  000F6E  D7BE               	goto	l8747
 10417  000F70  0AC7               	xorlw	199	; case 133
 10418  000F72  B4D8               	btfsc	status,2,c
 10419  000F74  D7CB               	goto	l8759
 10420  000F76  0A0F               	xorlw	15	; case 138
 10421  000F78  B4D8               	btfsc	status,2,c
 10422  000F7A  D7D1               	goto	l8765
 10423  000F7C  0A01               	xorlw	1	; case 139
 10424  000F7E  B4D8               	btfsc	status,2,c
 10425  000F80  D7D1               	goto	l8767
 10426  000F82  0A23               	xorlw	35	; case 168
 10427  000F84  B4D8               	btfsc	status,2,c
 10428  000F86  D7BC               	goto	l8755
 10429  000F88  0A01               	xorlw	1	; case 169
 10430  000F8A  B4D8               	btfsc	status,2,c
 10431  000F8C  D7BC               	goto	l8757
 10432  000F8E  0A15               	xorlw	21	; case 188
 10433  000F90  A4D8               	btfss	status,2,c
 10434                           
 10435                           ; BSR set to: 1
 10436  000F92  0012               	return	
 10437  000F94  D7CA               	goto	l8769
 10438  000F96                     __end_of_key_process_set_down_long:
 10439                           	opt stack 0
 10440                           tblptru	equ	0xFF8
 10441                           tblptrh	equ	0xFF7
 10442                           tblptrl	equ	0xFF6
 10443                           tablat	equ	0xFF5
 10444                           prodh	equ	0xFF4
 10445                           prodl	equ	0xFF3
 10446                           intcon	equ	0xFF2
 10447                           indf0	equ	0xFEF
 10448                           postinc0	equ	0xFEE
 10449                           fsr0h	equ	0xFEA
 10450                           fsr0l	equ	0xFE9
 10451                           wreg	equ	0xFE8
 10452                           postdec1	equ	0xFE5
 10453                           plusw1	equ	0xFE3
 10454                           fsr1h	equ	0xFE2
 10455                           fsr1l	equ	0xFE1
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           postdec2	equ	0xFDD
 10459                           plusw2	equ	0xFDB
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function ___enter_menu_set_pose *****************
 10465 ;; Defined at:
 10466 ;;		line 87 in file "src/api/key_menu.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  fps             2    0[BANK0 ] PTR struct .
 10471 ;;		 -> RAM(3923), 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;Total ram usage:        3 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    4
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_key_process_set_down_long
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text59
 10496  002656                     __ptext59:
 10497                           	opt stack 0
 10498  002656                     ___enter_menu_set_pose:
 10499                           	opt stack 24
 10500                           
 10501                           ;key_menu.c: 88: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10502                           
 10503                           ;incstack = 0
 10504  002656  0E00               	movlw	0
 10505  002658  0100               	movlb	0	; () banked
 10506  00265A  6FD9               	movwf	___enter_menu_set_pose@fps& (0+255),b
 10507  00265C  0EF4               	movlw	244
 10508  00265E  0100               	movlb	0	; () banked
 10509  002660  6FDA               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;key_menu.c: 89: adjValue=(uint8_t)(fps->pos);
 10513  002662  0100               	movlb	0	; () banked
 10514  002664  EE20 F004          	lfsr	2,4
 10515  002668  51D9               	movf	___enter_menu_set_pose@fps& (0+255),w,b
 10516  00266A  26D9               	addwf	fsr2l,f,c
 10517  00266C  51DA               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
 10518  00266E  22DA               	addwfc	fsr2h,f,c
 10519  002670  50DF               	movf	indf2,w,c
 10520  002672  6E20               	movwf	??___enter_menu_set_pose& (0+255),c
 10521  002674  5020               	movf	??___enter_menu_set_pose,w,c
 10522  002676  6E21               	movwf	_adjValue,c	;volatile
 10523  002678  6A22               	clrf	_adjValue+1,c	;volatile
 10524  00267A  6A23               	clrf	_adjValue+2,c	;volatile
 10525  00267C  6A24               	clrf	_adjValue+3,c	;volatile
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;key_menu.c: 90: adjLocation=0;
 10529  00267E  0E00               	movlw	0
 10530  002680  6E3F               	movwf	_adjLocation,c	;volatile
 10531                           
 10532                           ; BSR set to: 0
 10533  002682  0012               	return		;funcret
 10534  002684                     __end_of___enter_menu_set_pose:
 10535                           	opt stack 0
 10536                           tblptru	equ	0xFF8
 10537                           tblptrh	equ	0xFF7
 10538                           tblptrl	equ	0xFF6
 10539                           tablat	equ	0xFF5
 10540                           prodh	equ	0xFF4
 10541                           prodl	equ	0xFF3
 10542                           intcon	equ	0xFF2
 10543                           indf0	equ	0xFEF
 10544                           postinc0	equ	0xFEE
 10545                           fsr0h	equ	0xFEA
 10546                           fsr0l	equ	0xFE9
 10547                           wreg	equ	0xFE8
 10548                           postdec1	equ	0xFE5
 10549                           plusw1	equ	0xFE3
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           indf2	equ	0xFDF
 10553                           postinc2	equ	0xFDE
 10554                           postdec2	equ	0xFDD
 10555                           plusw2	equ	0xFDB
 10556                           fsr2h	equ	0xFDA
 10557                           fsr2l	equ	0xFD9
 10558                           status	equ	0xFD8
 10559                           
 10560 ;; *************** function ___enter_menu_set_density *****************
 10561 ;; Defined at:
 10562 ;;		line 81 in file "src/api/key_menu.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;		None
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;  fps             2    2[BANK0 ] PTR struct .
 10567 ;;		 -> RAM(3923), 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      void 
 10570 ;; Registers used:
 10571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;Total ram usage:        4 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    4
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_key_process_set_down_long
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text60
 10592  0024A2                     __ptext60:
 10593                           	opt stack 0
 10594  0024A2                     ___enter_menu_set_density:
 10595                           	opt stack 24
 10596                           
 10597                           ;key_menu.c: 82: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;incstack = 0
 10601  0024A2  0E00               	movlw	0
 10602  0024A4  0100               	movlb	0	; () banked
 10603  0024A6  6FDB               	movwf	___enter_menu_set_density@fps& (0+255),b
 10604  0024A8  0EF4               	movlw	244
 10605  0024AA  0100               	movlb	0	; () banked
 10606  0024AC  6FDC               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;key_menu.c: 83: adjValue=fps->density;
 10610  0024AE  0100               	movlb	0	; () banked
 10611  0024B0  EE20 F006          	lfsr	2,6
 10612  0024B4  51DB               	movf	___enter_menu_set_density@fps& (0+255),w,b
 10613  0024B6  26D9               	addwf	fsr2l,f,c
 10614  0024B8  51DC               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
 10615  0024BA  22DA               	addwfc	fsr2h,f,c
 10616  0024BC  CFDE F0D9          	movff	postinc2,??___enter_menu_set_density
 10617  0024C0  CFDD F0DA          	movff	postdec2,??___enter_menu_set_density+1
 10618  0024C4  C0D9  F021         	movff	??___enter_menu_set_density,_adjValue	;volatile
 10619  0024C8  C0DA  F022         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
 10620  0024CC  6A23               	clrf	_adjValue+2,c	;volatile
 10621  0024CE  6A24               	clrf	_adjValue+3,c	;volatile
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;key_menu.c: 84: adjLocation=0;
 10625  0024D0  0E00               	movlw	0
 10626  0024D2  6E3F               	movwf	_adjLocation,c	;volatile
 10627                           
 10628                           ; BSR set to: 0
 10629  0024D4  0012               	return		;funcret
 10630  0024D6                     __end_of___enter_menu_set_density:
 10631                           	opt stack 0
 10632                           tblptru	equ	0xFF8
 10633                           tblptrh	equ	0xFF7
 10634                           tblptrl	equ	0xFF6
 10635                           tablat	equ	0xFF5
 10636                           prodh	equ	0xFF4
 10637                           prodl	equ	0xFF3
 10638                           intcon	equ	0xFF2
 10639                           indf0	equ	0xFEF
 10640                           postinc0	equ	0xFEE
 10641                           fsr0h	equ	0xFEA
 10642                           fsr0l	equ	0xFE9
 10643                           wreg	equ	0xFE8
 10644                           postdec1	equ	0xFE5
 10645                           plusw1	equ	0xFE3
 10646                           fsr1h	equ	0xFE2
 10647                           fsr1l	equ	0xFE1
 10648                           indf2	equ	0xFDF
 10649                           postinc2	equ	0xFDE
 10650                           postdec2	equ	0xFDD
 10651                           plusw2	equ	0xFDB
 10652                           fsr2h	equ	0xFDA
 10653                           fsr2l	equ	0xFD9
 10654                           status	equ	0xFD8
 10655                           
 10656 ;; *************** function ___enter_menu_set_base_zero *****************
 10657 ;; Defined at:
 10658 ;;		line 92 in file "src/api/key_menu.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  fps             2   21[BANK0 ] PTR struct .
 10663 ;;		 -> RAM(3923), 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;Total ram usage:        2 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    6
 10680 ;; This function calls:
 10681 ;;		___int32_2_mflot32
 10682 ;; This function is called by:
 10683 ;;		_key_process_set_down_long
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text61
 10688  0020AA                     __ptext61:
 10689                           	opt stack 0
 10690  0020AA                     ___enter_menu_set_base_zero:
 10691                           	opt stack 22
 10692                           
 10693                           ;key_menu.c: 93: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;incstack = 0
 10697  0020AA  0E00               	movlw	0
 10698  0020AC  0100               	movlb	0	; () banked
 10699  0020AE  6FEE               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
 10700  0020B0  0EF4               	movlw	244
 10701  0020B2  0100               	movlb	0	; () banked
 10702  0020B4  6FEF               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;key_menu.c: 94: adjValue=(fps->baseZero);
 10706  0020B6  0100               	movlb	0	; () banked
 10707  0020B8  EE20 F010          	lfsr	2,16
 10708  0020BC  51EE               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
 10709  0020BE  26D9               	addwf	fsr2l,f,c
 10710  0020C0  51EF               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
 10711  0020C2  22DA               	addwfc	fsr2h,f,c
 10712  0020C4  CFDE F021          	movff	postinc2,_adjValue	;volatile
 10713  0020C8  CFDE F022          	movff	postinc2,_adjValue+1	;volatile
 10714  0020CC  CFDE F023          	movff	postinc2,_adjValue+2	;volatile
 10715  0020D0  CFDE F024          	movff	postinc2,_adjValue+3	;volatile
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;key_menu.c: 95: adjValue=__int32_2_mflot32(adjValue);
 10719  0020D4  C021  F0E6         	movff	_adjValue,___int32_2_mflot32@x	;volatile
 10720  0020D8  C022  F0E7         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
 10721  0020DC  C023  F0E8         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
 10722  0020E0  C024  F0E9         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
 10723  0020E4  EC66  F004         	call	___int32_2_mflot32	;wreg free
 10724  0020E8  C0E6  F021         	movff	?___int32_2_mflot32,_adjValue	;volatile
 10725  0020EC  C0E7  F022         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
 10726  0020F0  C0E8  F023         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
 10727  0020F4  C0E9  F024         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
 10728                           
 10729                           ;key_menu.c: 96: adjLocation=0;
 10730  0020F8  0E00               	movlw	0
 10731  0020FA  6E3F               	movwf	_adjLocation,c	;volatile
 10732  0020FC  0012               	return		;funcret
 10733  0020FE                     __end_of___enter_menu_set_base_zero:
 10734                           	opt stack 0
 10735                           tblptru	equ	0xFF8
 10736                           tblptrh	equ	0xFF7
 10737                           tblptrl	equ	0xFF6
 10738                           tablat	equ	0xFF5
 10739                           prodh	equ	0xFF4
 10740                           prodl	equ	0xFF3
 10741                           intcon	equ	0xFF2
 10742                           indf0	equ	0xFEF
 10743                           postinc0	equ	0xFEE
 10744                           fsr0h	equ	0xFEA
 10745                           fsr0l	equ	0xFE9
 10746                           wreg	equ	0xFE8
 10747                           postdec1	equ	0xFE5
 10748                           plusw1	equ	0xFE3
 10749                           fsr1h	equ	0xFE2
 10750                           fsr1l	equ	0xFE1
 10751                           indf2	equ	0xFDF
 10752                           postinc2	equ	0xFDE
 10753                           postdec2	equ	0xFDD
 10754                           plusw2	equ	0xFDB
 10755                           fsr2h	equ	0xFDA
 10756                           fsr2l	equ	0xFD9
 10757                           status	equ	0xFD8
 10758                           
 10759 ;; *************** function ___int32_2_mflot32 *****************
 10760 ;; Defined at:
 10761 ;;		line 24 in file "src/api/ui.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  x               4   13[BANK0 ] long 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  mf              4    4[BANK1 ] struct .
 10766 ;;  t32             4    0[BANK1 ] unsigned long 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  4   13[BANK0 ] long 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Totals:         0       8       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;Total ram usage:       16 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    5
 10783 ;; This function calls:
 10784 ;;		___lldiv
 10785 ;; This function is called by:
 10786 ;;		___enter_menu_set_base_zero
 10787 ;;		___enter_menu_calib_press_diff
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text62
 10792  0008CC                     __ptext62:
 10793                           	opt stack 0
 10794  0008CC                     ___int32_2_mflot32:
 10795                           	opt stack 22
 10796                           
 10797                           ;ui.c: 26: st_float32 mf={0};
 10798                           
 10799                           ;incstack = 0
 10800  0008CC  C092  F1F1         	movff	___int32_2_mflot32@F7600,___int32_2_mflot32@mf
 10801  0008D0  C093  F1F2         	movff	___int32_2_mflot32@F7600+1,___int32_2_mflot32@mf+1
 10802  0008D4  C094  F1F3         	movff	___int32_2_mflot32@F7600+2,___int32_2_mflot32@mf+2
 10803  0008D8  C095  F1F4         	movff	___int32_2_mflot32@F7600+3,___int32_2_mflot32@mf+3
 10804                           
 10805                           ;ui.c: 27: uint32_t t32;
 10806                           ;ui.c: 28: t32=x;
 10807  0008DC  C0E6  F1ED         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 10808  0008E0  C0E7  F1EE         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 10809  0008E4  C0E8  F1EF         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 10810  0008E8  C0E9  F1F0         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 10811                           
 10812                           ;ui.c: 29: if(x<0){
 10813  0008EC  0100               	movlb	0	; () banked
 10814  0008EE  AFE9               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 10815  0008F0  D040               	goto	l8075
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;ui.c: 30: t32 = ((~x) +1);
 10819  0008F2  C0E6  F0EA         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 10820  0008F6  C0E7  F0EB         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 10821  0008FA  C0E8  F0EC         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 10822  0008FE  C0E9  F0ED         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 10823  000902  0100               	movlb	0	; () banked
 10824  000904  1FEA               	comf	??___int32_2_mflot32& (0+255),f,b
 10825  000906  1FEB               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 10826  000908  1FEC               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 10827  00090A  1FED               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 10828  00090C  2BEA               	incf	??___int32_2_mflot32& (0+255),f,b
 10829  00090E  0E00               	movlw	0
 10830  000910  23EB               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 10831  000912  23EC               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 10832  000914  23ED               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 10833  000916  C0EA  F1ED         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 10834  00091A  C0EB  F1EE         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 10835  00091E  C0EC  F1EF         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 10836  000922  C0ED  F1F0         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;ui.c: 31: mf.stru.sign=1;
 10840  000926  0E01               	movlw	1
 10841  000928  0101               	movlb	1	; () banked
 10842  00092A  6FF4               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 10843                           
 10844                           ; BSR set to: 1
 10845                           ;ui.c: 32: }
 10846                           ;ui.c: 33: while(t32>9999){
 10847  00092C  D022               	goto	l8075
 10848  00092E                     l8067:
 10849                           
 10850                           ; BSR set to: 1
 10851                           ;ui.c: 34: mf.stru.exponent++;
 10852  00092E  0101               	movlb	1	; () banked
 10853  000930  2BF3               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 10854                           
 10855                           ; BSR set to: 1
 10856                           ;ui.c: 35: t32/=10;
 10857  000932  C1ED  F0D9         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 10858  000936  C1EE  F0DA         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 10859  00093A  C1EF  F0DB         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 10860  00093E  C1F0  F0DC         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 10861  000942  0E0A               	movlw	10
 10862  000944  0100               	movlb	0	; () banked
 10863  000946  6FDD               	movwf	___lldiv@divisor& (0+255),b
 10864  000948  0E00               	movlw	0
 10865  00094A  6FDE               	movwf	(___lldiv@divisor+1)& (0+255),b
 10866  00094C  0E00               	movlw	0
 10867  00094E  6FDF               	movwf	(___lldiv@divisor+2)& (0+255),b
 10868  000950  0E00               	movlw	0
 10869  000952  6FE0               	movwf	(___lldiv@divisor+3)& (0+255),b
 10870  000954  ECCB  F007         	call	___lldiv	;wreg free
 10871  000958  C0D9  F1ED         	movff	?___lldiv,___int32_2_mflot32@t32
 10872  00095C  C0DA  F1EE         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 10873  000960  C0DB  F1EF         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 10874  000964  C0DC  F1F0         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 10875                           
 10876                           ;ui.c: 36: if( mf.stru.exponent==3)break;
 10877  000968  0E03               	movlw	3
 10878  00096A  0101               	movlb	1	; () banked
 10879  00096C  19F3               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
 10880  00096E  B4D8               	btfsc	status,2,c
 10881  000970  D00D               	goto	l8077
 10882  000972                     l8075:
 10883  000972  0101               	movlb	1	; () banked
 10884  000974  51F0               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10885  000976  0101               	movlb	1	; () banked
 10886  000978  11EF               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10887  00097A  E1D9               	bnz	l8067
 10888  00097C  0E10               	movlw	16
 10889  00097E  0101               	movlb	1	; () banked
 10890  000980  5DED               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10891  000982  0E27               	movlw	39
 10892  000984  0101               	movlb	1	; () banked
 10893  000986  59EE               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10894  000988  B0D8               	btfsc	status,0,c
 10895  00098A  D7D1               	goto	l8067
 10896  00098C                     l8077:
 10897                           
 10898                           ; BSR set to: 1
 10899                           ;ui.c: 37: }
 10900                           ;ui.c: 38: if(t32>9999)t32=9999;
 10901  00098C  0101               	movlb	1	; () banked
 10902  00098E  51F0               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10903  000990  0101               	movlb	1	; () banked
 10904  000992  11EF               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10905  000994  E108               	bnz	u6190
 10906  000996  0E10               	movlw	16
 10907  000998  0101               	movlb	1	; () banked
 10908  00099A  5DED               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10909  00099C  0E27               	movlw	39
 10910  00099E  0101               	movlb	1	; () banked
 10911  0009A0  59EE               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10912  0009A2  A0D8               	btfss	status,0,c
 10913  0009A4  D009               	goto	l8081
 10914  0009A6                     u6190:
 10915                           
 10916                           ; BSR set to: 1
 10917  0009A6  0E0F               	movlw	15
 10918  0009A8  0101               	movlb	1	; () banked
 10919  0009AA  6FED               	movwf	___int32_2_mflot32@t32& (0+255),b
 10920  0009AC  0E27               	movlw	39
 10921  0009AE  6FEE               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 10922  0009B0  0E00               	movlw	0
 10923  0009B2  6FEF               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 10924  0009B4  0E00               	movlw	0
 10925  0009B6  6FF0               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 10926  0009B8                     l8081:
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;ui.c: 39: mf.stru.significand=t32;
 10930  0009B8  C1ED  F1F1         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 10931  0009BC  C1EE  F1F2         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;ui.c: 40: return mf.t32;
 10935  0009C0  C1F1  F0E6         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 10936  0009C4  C1F2  F0E7         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 10937  0009C8  C1F3  F0E8         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 10938  0009CC  C1F4  F0E9         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 10939  0009D0  0012               	return	
 10940  0009D2                     __end_of___int32_2_mflot32:
 10941                           	opt stack 0
 10942                           tblptru	equ	0xFF8
 10943                           tblptrh	equ	0xFF7
 10944                           tblptrl	equ	0xFF6
 10945                           tablat	equ	0xFF5
 10946                           prodh	equ	0xFF4
 10947                           prodl	equ	0xFF3
 10948                           intcon	equ	0xFF2
 10949                           indf0	equ	0xFEF
 10950                           postinc0	equ	0xFEE
 10951                           fsr0h	equ	0xFEA
 10952                           fsr0l	equ	0xFE9
 10953                           wreg	equ	0xFE8
 10954                           postdec1	equ	0xFE5
 10955                           plusw1	equ	0xFE3
 10956                           fsr1h	equ	0xFE2
 10957                           fsr1l	equ	0xFE1
 10958                           indf2	equ	0xFDF
 10959                           postinc2	equ	0xFDE
 10960                           postdec2	equ	0xFDD
 10961                           plusw2	equ	0xFDB
 10962                           fsr2h	equ	0xFDA
 10963                           fsr2l	equ	0xFD9
 10964                           status	equ	0xFD8
 10965                           
 10966 ;; *************** function ___lldiv *****************
 10967 ;; Defined at:
 10968 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lldiv.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;  dividend        4    0[BANK0 ] unsigned long 
 10971 ;;  divisor         4    4[BANK0 ] unsigned long 
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;  quotient        4    8[BANK0 ] unsigned long 
 10974 ;;  counter         1   12[BANK0 ] unsigned char 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  4    0[BANK0 ] unsigned long 
 10977 ;; Registers used:
 10978 ;;		wreg, status,2, status,0
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10984 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10988 ;;Total ram usage:       13 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    4
 10991 ;; This function calls:
 10992 ;;		Nothing
 10993 ;; This function is called by:
 10994 ;;		___int32_2_mflot32
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text63
 10999  000F96                     __ptext63:
 11000                           	opt stack 0
 11001  000F96                     ___lldiv:
 11002                           	opt stack 22
 11003                           
 11004                           ; BSR set to: 1
 11005                           ;incstack = 0
 11006  000F96  0E00               	movlw	0
 11007  000F98  0100               	movlb	0	; () banked
 11008  000F9A  6FE1               	movwf	___lldiv@quotient& (0+255),b
 11009  000F9C  0E00               	movlw	0
 11010  000F9E  6FE2               	movwf	(___lldiv@quotient+1)& (0+255),b
 11011  000FA0  0E00               	movlw	0
 11012  000FA2  6FE3               	movwf	(___lldiv@quotient+2)& (0+255),b
 11013  000FA4  0E00               	movlw	0
 11014  000FA6  6FE4               	movwf	(___lldiv@quotient+3)& (0+255),b
 11015                           
 11016                           ; BSR set to: 0
 11017  000FA8  0100               	movlb	0	; () banked
 11018  000FAA  51DD               	movf	___lldiv@divisor& (0+255),w,b
 11019  000FAC  0100               	movlb	0	; () banked
 11020  000FAE  11DE               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11021  000FB0  0100               	movlb	0	; () banked
 11022  000FB2  11DF               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11023  000FB4  0100               	movlb	0	; () banked
 11024  000FB6  11E0               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11025  000FB8  B4D8               	btfsc	status,2,c
 11026  000FBA  D042               	goto	l1965
 11027                           
 11028                           ; BSR set to: 0
 11029  000FBC  0E01               	movlw	1
 11030  000FBE  0100               	movlb	0	; () banked
 11031  000FC0  6FE5               	movwf	___lldiv@counter& (0+255),b
 11032  000FC2  D008               	goto	l8019
 11033  000FC4                     l8017:
 11034                           
 11035                           ; BSR set to: 0
 11036  000FC4  0100               	movlb	0	; () banked
 11037  000FC6  90D8               	bcf	status,0,c
 11038  000FC8  37DD               	rlcf	___lldiv@divisor& (0+255),f,b
 11039  000FCA  37DE               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11040  000FCC  37DF               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11041  000FCE  37E0               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11042  000FD0  0100               	movlb	0	; () banked
 11043  000FD2  2BE5               	incf	___lldiv@counter& (0+255),f,b
 11044  000FD4                     l8019:
 11045                           
 11046                           ; BSR set to: 0
 11047  000FD4  0100               	movlb	0	; () banked
 11048  000FD6  AFE0               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11049  000FD8  D7F5               	goto	l8017
 11050  000FDA                     l8021:
 11051                           
 11052                           ; BSR set to: 0
 11053  000FDA  0100               	movlb	0	; () banked
 11054  000FDC  90D8               	bcf	status,0,c
 11055  000FDE  37E1               	rlcf	___lldiv@quotient& (0+255),f,b
 11056  000FE0  37E2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11057  000FE2  37E3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11058  000FE4  37E4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11059                           
 11060                           ; BSR set to: 0
 11061  000FE6  0100               	movlb	0	; () banked
 11062  000FE8  51DD               	movf	___lldiv@divisor& (0+255),w,b
 11063  000FEA  0100               	movlb	0	; () banked
 11064  000FEC  5DD9               	subwf	___lldiv@dividend& (0+255),w,b
 11065  000FEE  0100               	movlb	0	; () banked
 11066  000FF0  51DE               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11067  000FF2  0100               	movlb	0	; () banked
 11068  000FF4  59DA               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11069  000FF6  0100               	movlb	0	; () banked
 11070  000FF8  51DF               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11071  000FFA  0100               	movlb	0	; () banked
 11072  000FFC  59DB               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11073  000FFE  0100               	movlb	0	; () banked
 11074  001000  51E0               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11075  001002  0100               	movlb	0	; () banked
 11076  001004  59DC               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11077  001006  A0D8               	btfss	status,0,c
 11078  001008  D012               	goto	l8029
 11079                           
 11080                           ; BSR set to: 0
 11081  00100A  0100               	movlb	0	; () banked
 11082  00100C  51DD               	movf	___lldiv@divisor& (0+255),w,b
 11083  00100E  0100               	movlb	0	; () banked
 11084  001010  5FD9               	subwf	___lldiv@dividend& (0+255),f,b
 11085  001012  0100               	movlb	0	; () banked
 11086  001014  51DE               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11087  001016  0100               	movlb	0	; () banked
 11088  001018  5BDA               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11089  00101A  0100               	movlb	0	; () banked
 11090  00101C  51DF               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11091  00101E  0100               	movlb	0	; () banked
 11092  001020  5BDB               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11093  001022  0100               	movlb	0	; () banked
 11094  001024  51E0               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11095  001026  0100               	movlb	0	; () banked
 11096  001028  5BDC               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11097                           
 11098                           ; BSR set to: 0
 11099  00102A  0100               	movlb	0	; () banked
 11100  00102C  81E1               	bsf	___lldiv@quotient& (0+255),0,b
 11101  00102E                     l8029:
 11102                           
 11103                           ; BSR set to: 0
 11104  00102E  0100               	movlb	0	; () banked
 11105  001030  90D8               	bcf	status,0,c
 11106  001032  33E0               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11107  001034  33DF               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11108  001036  33DE               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11109  001038  33DD               	rrcf	___lldiv@divisor& (0+255),f,b
 11110                           
 11111                           ; BSR set to: 0
 11112  00103A  0100               	movlb	0	; () banked
 11113  00103C  2FE5               	decfsz	___lldiv@counter& (0+255),f,b
 11114  00103E  D7CD               	goto	l8021
 11115  001040                     l1965:
 11116                           
 11117                           ; BSR set to: 0
 11118  001040  C0E1  F0D9         	movff	___lldiv@quotient,?___lldiv
 11119  001044  C0E2  F0DA         	movff	___lldiv@quotient+1,?___lldiv+1
 11120  001048  C0E3  F0DB         	movff	___lldiv@quotient+2,?___lldiv+2
 11121  00104C  C0E4  F0DC         	movff	___lldiv@quotient+3,?___lldiv+3
 11122                           
 11123                           ; BSR set to: 0
 11124  001050  0012               	return		;funcret
 11125  001052                     __end_of___lldiv:
 11126                           	opt stack 0
 11127                           tblptru	equ	0xFF8
 11128                           tblptrh	equ	0xFF7
 11129                           tblptrl	equ	0xFF6
 11130                           tablat	equ	0xFF5
 11131                           prodh	equ	0xFF4
 11132                           prodl	equ	0xFF3
 11133                           intcon	equ	0xFF2
 11134                           indf0	equ	0xFEF
 11135                           postinc0	equ	0xFEE
 11136                           fsr0h	equ	0xFEA
 11137                           fsr0l	equ	0xFE9
 11138                           wreg	equ	0xFE8
 11139                           postdec1	equ	0xFE5
 11140                           plusw1	equ	0xFE3
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           indf2	equ	0xFDF
 11144                           postinc2	equ	0xFDE
 11145                           postdec2	equ	0xFDD
 11146                           plusw2	equ	0xFDB
 11147                           fsr2h	equ	0xFDA
 11148                           fsr2l	equ	0xFD9
 11149                           status	equ	0xFD8
 11150                           
 11151 ;; *************** function _key_process_set *****************
 11152 ;; Defined at:
 11153 ;;		line 144 in file "src/api/key_menu.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    4
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_key_process
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text64
 11182  002684                     __ptext64:
 11183                           	opt stack 0
 11184  002684                     _key_process_set:
 11185                           	opt stack 25
 11186                           
 11187                           ;key_menu.c: 146: switch(menu){
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;incstack = 0
 11191  002684  D009               	goto	l8787
 11192  002686                     l8783:
 11193                           
 11194                           ;key_menu.c: 148: case 0x01:
 11195                           ;key_menu.c: 149: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
 11196  002686  0E00               	movlw	0
 11197  002688  6E3E               	movwf	_passWord+1,c	;volatile
 11198  00268A  0E00               	movlw	0
 11199  00268C  6E3D               	movwf	_passWord,c	;volatile
 11200  00268E  0E00               	movlw	0
 11201  002690  6E3F               	movwf	_adjLocation,c	;volatile
 11202  002692  0E10               	movlw	16
 11203  002694  6E3C               	movwf	_menu,c	;volatile
 11204                           
 11205                           ;key_menu.c: 151: }
 11206                           
 11207                           ;key_menu.c: 150: default:break;
 11208  002696  0012               	return	
 11209  002698                     l8787:
 11210  002698  503C               	movf	_menu,w,c	;volatile
 11211                           
 11212                           ; Switch size 1, requested type "space"
 11213                           ; Number of cases is 3, Range of values is 0 to 2
 11214                           ; switch strategies available:
 11215                           ; Name         Instructions Cycles
 11216                           ; simple_byte           10     6 (average)
 11217                           ;	Chosen strategy is simple_byte
 11218  00269A  0A00               	xorlw	0	; case 0
 11219  00269C  B4D8               	btfsc	status,2,c
 11220  00269E  D7F3               	goto	l8783
 11221  0026A0  0A01               	xorlw	1	; case 1
 11222  0026A2  B4D8               	btfsc	status,2,c
 11223  0026A4  D7F0               	goto	l8783
 11224  0026A6  0A03               	xorlw	3	; case 2
 11225  0026A8  A4D8               	btfss	status,2,c
 11226  0026AA  0012               	return	
 11227  0026AC  D7EC               	goto	l8783
 11228  0026AE                     __end_of_key_process_set:
 11229                           	opt stack 0
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           indf0	equ	0xFEF
 11238                           postinc0	equ	0xFEE
 11239                           fsr0h	equ	0xFEA
 11240                           fsr0l	equ	0xFE9
 11241                           wreg	equ	0xFE8
 11242                           postdec1	equ	0xFE5
 11243                           plusw1	equ	0xFE3
 11244                           fsr1h	equ	0xFE2
 11245                           fsr1l	equ	0xFE1
 11246                           indf2	equ	0xFDF
 11247                           postinc2	equ	0xFDE
 11248                           postdec2	equ	0xFDD
 11249                           plusw2	equ	0xFDB
 11250                           fsr2h	equ	0xFDA
 11251                           fsr2l	equ	0xFD9
 11252                           status	equ	0xFD8
 11253                           
 11254 ;; *************** function _key_process_down *****************
 11255 ;; Defined at:
 11256 ;;		line 47 in file "src/api/key_menu.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;		None
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11274 ;;Total ram usage:        0 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    5
 11277 ;; This function calls:
 11278 ;;		_key_shift_loc_fixed_point
 11279 ;; This function is called by:
 11280 ;;		_key_process
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text65
 11285  002352                     __ptext65:
 11286                           	opt stack 0
 11287  002352                     _key_process_down:
 11288                           	opt stack 24
 11289                           
 11290                           ;key_menu.c: 49: switch(menu){
 11291                           
 11292                           ;incstack = 0
 11293  002352  D00F               	goto	l8729
 11294  002354                     l8725:
 11295  002354  0E3F               	movlw	low _adjLocation
 11296  002356  0100               	movlb	0	; () banked
 11297  002358  6FD9               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
 11298  00235A  0E00               	movlw	high _adjLocation
 11299  00235C  0100               	movlb	0	; () banked
 11300  00235E  6FDA               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
 11301  002360  0E00               	movlw	0
 11302  002362  0100               	movlb	0	; () banked
 11303  002364  6FDB               	movwf	key_shift_loc_fixed_point@min& (0+255),b
 11304  002366  0E03               	movlw	3
 11305  002368  0100               	movlb	0	; () banked
 11306  00236A  6FDC               	movwf	key_shift_loc_fixed_point@max& (0+255),b
 11307  00236C  EC6B  F012         	call	_key_shift_loc_fixed_point	;wreg free
 11308                           
 11309                           ;key_menu.c: 55: }
 11310                           
 11311                           ;key_menu.c: 54: default:break;
 11312  002370  0012               	return	
 11313  002372                     l8729:
 11314  002372  503C               	movf	_menu,w,c	;volatile
 11315                           
 11316                           ; Switch size 1, requested type "space"
 11317                           ; Number of cases is 4, Range of values is 0 to 16
 11318                           ; switch strategies available:
 11319                           ; Name         Instructions Cycles
 11320                           ; simple_byte           13     7 (average)
 11321                           ;	Chosen strategy is simple_byte
 11322  002374  0A00               	xorlw	0	; case 0
 11323  002376  B4D8               	btfsc	status,2,c
 11324  002378  0012               	return	
 11325  00237A  0A01               	xorlw	1	; case 1
 11326  00237C  B4D8               	btfsc	status,2,c
 11327  00237E  0012               	return	
 11328  002380  0A03               	xorlw	3	; case 2
 11329  002382  B4D8               	btfsc	status,2,c
 11330  002384  0012               	return	
 11331  002386  0A12               	xorlw	18	; case 16
 11332  002388  A4D8               	btfss	status,2,c
 11333  00238A  0012               	return	
 11334  00238C  D7E3               	goto	l8725
 11335  00238E                     __end_of_key_process_down:
 11336                           	opt stack 0
 11337                           tblptru	equ	0xFF8
 11338                           tblptrh	equ	0xFF7
 11339                           tblptrl	equ	0xFF6
 11340                           tablat	equ	0xFF5
 11341                           prodh	equ	0xFF4
 11342                           prodl	equ	0xFF3
 11343                           intcon	equ	0xFF2
 11344                           indf0	equ	0xFEF
 11345                           postinc0	equ	0xFEE
 11346                           fsr0h	equ	0xFEA
 11347                           fsr0l	equ	0xFE9
 11348                           wreg	equ	0xFE8
 11349                           postdec1	equ	0xFE5
 11350                           plusw1	equ	0xFE3
 11351                           fsr1h	equ	0xFE2
 11352                           fsr1l	equ	0xFE1
 11353                           indf2	equ	0xFDF
 11354                           postinc2	equ	0xFDE
 11355                           postdec2	equ	0xFDD
 11356                           plusw2	equ	0xFDB
 11357                           fsr2h	equ	0xFDA
 11358                           fsr2l	equ	0xFD9
 11359                           status	equ	0xFD8
 11360                           
 11361 ;; *************** function _key_shift_loc_fixed_point *****************
 11362 ;; Defined at:
 11363 ;;		line 39 in file "src/api/key_menu.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 11366 ;;		 -> adjLocation(1), 
 11367 ;;  min             1    2[BANK0 ] unsigned char 
 11368 ;;  max             1    3[BANK0 ] unsigned char 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  t8              1   31[COMRAM] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11383 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11384 ;;Total ram usage:        5 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    4
 11387 ;; This function calls:
 11388 ;;		Nothing
 11389 ;; This function is called by:
 11390 ;;		_key_process_down
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text66
 11395  0024D6                     __ptext66:
 11396                           	opt stack 0
 11397  0024D6                     _key_shift_loc_fixed_point:
 11398                           	opt stack 24
 11399                           
 11400                           ;key_menu.c: 41: uint8_t t8=*loc;
 11401                           
 11402                           ;incstack = 0
 11403  0024D6  C0D9  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 11404  0024DA  C0DA  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 11405  0024DE  50DF               	movf	indf2,w,c
 11406  0024E0  6E20               	movwf	key_shift_loc_fixed_point@t8,c
 11407                           
 11408                           ;key_menu.c: 42: if(min<max)return;
 11409  0024E2  0100               	movlb	0	; () banked
 11410  0024E4  51DC               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
 11411  0024E6  0100               	movlb	0	; () banked
 11412  0024E8  5DDB               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
 11413  0024EA  A0D8               	btfss	status,0,c
 11414  0024EC  0012               	return	
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;key_menu.c: 43: t8++;
 11418                           
 11419                           ; BSR set to: 0
 11420                           
 11421                           ; BSR set to: 0
 11422  0024EE  2A20               	incf	key_shift_loc_fixed_point@t8,f,c
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;key_menu.c: 44: if(t8>max)t8=min;
 11426  0024F0  5020               	movf	key_shift_loc_fixed_point@t8,w,c
 11427  0024F2  0100               	movlb	0	; () banked
 11428  0024F4  5DDC               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
 11429  0024F6  A0D8               	btfss	status,0,c
 11430                           
 11431                           ; BSR set to: 0
 11432  0024F8  C0DB  F020         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;key_menu.c: 45: *loc=t8;
 11436                           
 11437                           ; BSR set to: 0
 11438  0024FC  C0D9  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 11439  002500  C0DA  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 11440  002504  C020  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
 11441                           
 11442                           ; BSR set to: 0
 11443  002508  0012               	return		;funcret
 11444  00250A                     __end_of_key_shift_loc_fixed_point:
 11445                           	opt stack 0
 11446                           tblptru	equ	0xFF8
 11447                           tblptrh	equ	0xFF7
 11448                           tblptrl	equ	0xFF6
 11449                           tablat	equ	0xFF5
 11450                           prodh	equ	0xFF4
 11451                           prodl	equ	0xFF3
 11452                           intcon	equ	0xFF2
 11453                           indf0	equ	0xFEF
 11454                           postinc0	equ	0xFEE
 11455                           fsr0h	equ	0xFEA
 11456                           fsr0l	equ	0xFE9
 11457                           wreg	equ	0xFE8
 11458                           postdec1	equ	0xFE5
 11459                           plusw1	equ	0xFE3
 11460                           fsr1h	equ	0xFE2
 11461                           fsr1l	equ	0xFE1
 11462                           indf2	equ	0xFDF
 11463                           postinc2	equ	0xFDE
 11464                           postdec2	equ	0xFDD
 11465                           plusw2	equ	0xFDB
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _in_adc_start_and_read *****************
 11471 ;; Defined at:
 11472 ;;		line 21 in file "src/driver/in_adc.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  ch              1    wreg     unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  ch              1    6[BANK0 ] unsigned char 
 11477 ;;  ret             2    7[BANK0 ] unsigned int 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  2    4[BANK0 ] unsigned int 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11491 ;;Total ram usage:        6 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    5
 11494 ;; This function calls:
 11495 ;;		_delay_us
 11496 ;; This function is called by:
 11497 ;;		_main
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text67
 11502  001C34                     __ptext67:
 11503                           	opt stack 0
 11504  001C34                     _in_adc_start_and_read:
 11505                           	opt stack 25
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;incstack = 0
 11509                           ;in_adc_start_and_read@ch stored from wreg
 11510  001C34  0100               	movlb	0	; () banked
 11511  001C36  6FDF               	movwf	in_adc_start_and_read@ch& (0+255),b
 11512                           
 11513                           ;in_adc.c: 23: uint16_t ret=0;
 11514  001C38  0E00               	movlw	0
 11515  001C3A  0100               	movlb	0	; () banked
 11516  001C3C  6FE1               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 11517  001C3E  0E00               	movlw	0
 11518  001C40  6FE0               	movwf	in_adc_start_and_read@ret& (0+255),b
 11519                           
 11520                           ; BSR set to: 0
 11521                           
 11522                           ; BSR set to: 0
 11523                           
 11524                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 11525  001C42  80C2               	bsf	4034,0,c	;volatile
 11526                           
 11527                           ; BSR set to: 0
 11528                           
 11529                           ; BSR set to: 0
 11530                           
 11531                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 11532                           
 11533                           ; BSR set to: 0
 11534  001C44  C0DF  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 11535  001C48  4620               	rlncf	??_in_adc_start_and_read,f,c
 11536  001C4A  4620               	rlncf	??_in_adc_start_and_read,f,c
 11537  001C4C  50C2               	movf	4034,w,c	;volatile
 11538  001C4E  1820               	xorwf	??_in_adc_start_and_read,w,c
 11539  001C50  0BC3               	andlw	-61
 11540  001C52  1820               	xorwf	??_in_adc_start_and_read,w,c
 11541  001C54  6EC2               	movwf	4034,c	;volatile
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;in_adc.c: 26: delay_us(2);
 11545                           
 11546                           ; BSR set to: 0
 11547  001C56  0E00               	movlw	0
 11548  001C58  0100               	movlb	0	; () banked
 11549  001C5A  6FDA               	movwf	(delay_us@dly+1)& (0+255),b
 11550  001C5C  0E02               	movlw	2
 11551  001C5E  6FD9               	movwf	delay_us@dly& (0+255),b
 11552  001C60  ECE5  F011         	call	_delay_us	;wreg free
 11553                           
 11554                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 11555  001C64  82C2               	bsf	4034,1,c	;volatile
 11556                           
 11557                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 11558  001C66  D001               	goto	l976
 11559  001C68                     l977:
 11560  001C68  F000               	nop	
 11561  001C6A                     l976:
 11562  001C6A  B2C2               	btfsc	4034,1,c	;volatile
 11563  001C6C  D7FD               	goto	l977
 11564                           
 11565                           ;in_adc.c: 30: ret=ADRESH;
 11566  001C6E  CFC4 F0E0          	movff	4036,in_adc_start_and_read@ret	;volatile
 11567  001C72  0100               	movlb	0	; () banked
 11568  001C74  6BE1               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;in_adc.c: 31: ret<<=8;
 11572  001C76  0100               	movlb	0	; () banked
 11573  001C78  51E0               	movf	in_adc_start_and_read@ret& (0+255),w,b
 11574  001C7A  6FE1               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 11575  001C7C  6BE0               	clrf	in_adc_start_and_read@ret& (0+255),b
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;in_adc.c: 32: ret |= ADRESL;
 11579  001C7E  50C3               	movf	4035,w,c	;volatile
 11580  001C80  0100               	movlb	0	; () banked
 11581  001C82  13E0               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;in_adc.c: 33: delay_us(2);
 11585  001C84  0E00               	movlw	0
 11586  001C86  0100               	movlb	0	; () banked
 11587  001C88  6FDA               	movwf	(delay_us@dly+1)& (0+255),b
 11588  001C8A  0E02               	movlw	2
 11589  001C8C  6FD9               	movwf	delay_us@dly& (0+255),b
 11590  001C8E  ECE5  F011         	call	_delay_us	;wreg free
 11591                           
 11592                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 11593  001C92  90C2               	bcf	4034,0,c	;volatile
 11594                           
 11595                           ;in_adc.c: 35: return ret;
 11596  001C94  C0E0  F0DD         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 11597  001C98  C0E1  F0DE         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 11598  001C9C  0012               	return	
 11599  001C9E                     __end_of_in_adc_start_and_read:
 11600                           	opt stack 0
 11601                           tblptru	equ	0xFF8
 11602                           tblptrh	equ	0xFF7
 11603                           tblptrl	equ	0xFF6
 11604                           tablat	equ	0xFF5
 11605                           prodh	equ	0xFF4
 11606                           prodl	equ	0xFF3
 11607                           intcon	equ	0xFF2
 11608                           indf0	equ	0xFEF
 11609                           postinc0	equ	0xFEE
 11610                           fsr0h	equ	0xFEA
 11611                           fsr0l	equ	0xFE9
 11612                           wreg	equ	0xFE8
 11613                           postdec1	equ	0xFE5
 11614                           plusw1	equ	0xFE3
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           indf2	equ	0xFDF
 11618                           postinc2	equ	0xFDE
 11619                           postdec2	equ	0xFDD
 11620                           plusw2	equ	0xFDB
 11621                           fsr2h	equ	0xFDA
 11622                           fsr2l	equ	0xFD9
 11623                           status	equ	0xFD8
 11624                           
 11625 ;; *************** function _delay_us *****************
 11626 ;; Defined at:
 11627 ;;		line 82 in file "src/soc/clock.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  dly             2    0[BANK0 ] unsigned int 
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;  i               2    2[BANK0 ] unsigned int 
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg, status,2, status,0
 11636 ;; Tracked objects:
 11637 ;;		On entry : 0/0
 11638 ;;		On exit  : 0/0
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;Total ram usage:        4 bytes
 11646 ;; Hardware stack levels used:    1
 11647 ;; Hardware stack levels required when called:    4
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_in_adc_start_and_read
 11652 ;;		_delay_ms
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text68
 11657  0023CA                     __ptext68:
 11658                           	opt stack 0
 11659  0023CA                     _delay_us:
 11660                           	opt stack 22
 11661                           
 11662                           ;clock.c: 84: uint16_t i;
 11663                           ;clock.c: 85: for(i=0;i<dly;i++){
 11664                           
 11665                           ;incstack = 0
 11666  0023CA  0E00               	movlw	0
 11667  0023CC  0100               	movlb	0	; () banked
 11668  0023CE  6FDC               	movwf	(delay_us@i+1)& (0+255),b
 11669  0023D0  0E00               	movlw	0
 11670  0023D2  6FDB               	movwf	delay_us@i& (0+255),b
 11671  0023D4  D00B               	goto	l8009
 11672  0023D6                     l1461:
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;clock.c: 86: __nop();
 11676  0023D6  F000               	nop	
 11677                           
 11678                           ;clock.c: 87: __nop();
 11679  0023D8  F000               	nop	
 11680                           
 11681                           ;clock.c: 88: __nop();
 11682  0023DA  F000               	nop	
 11683                           
 11684                           ;clock.c: 89: __nop();
 11685  0023DC  F000               	nop	
 11686                           
 11687                           ;clock.c: 91: __nop();
 11688  0023DE  F000               	nop	
 11689                           
 11690                           ;clock.c: 92: __nop();
 11691  0023E0  F000               	nop	
 11692                           
 11693                           ;clock.c: 93: __nop();
 11694  0023E2  F000               	nop	
 11695                           
 11696                           ;clock.c: 94: __nop();
 11697  0023E4  F000               	nop	
 11698  0023E6  0100               	movlb	0	; () banked
 11699  0023E8  4BDB               	infsnz	delay_us@i& (0+255),f,b
 11700  0023EA  2BDC               	incf	(delay_us@i+1)& (0+255),f,b
 11701  0023EC                     l8009:
 11702                           
 11703                           ; BSR set to: 0
 11704  0023EC  0100               	movlb	0	; () banked
 11705  0023EE  51D9               	movf	delay_us@dly& (0+255),w,b
 11706  0023F0  0100               	movlb	0	; () banked
 11707  0023F2  5DDB               	subwf	delay_us@i& (0+255),w,b
 11708  0023F4  0100               	movlb	0	; () banked
 11709  0023F6  51DA               	movf	(delay_us@dly+1)& (0+255),w,b
 11710  0023F8  0100               	movlb	0	; () banked
 11711  0023FA  59DC               	subwfb	(delay_us@i+1)& (0+255),w,b
 11712  0023FC  B0D8               	btfsc	status,0,c
 11713  0023FE  0012               	return	
 11714  002400  D7EA               	goto	l1461
 11715  002402                     __end_of_delay_us:
 11716                           	opt stack 0
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           intcon	equ	0xFF2
 11724                           indf0	equ	0xFEF
 11725                           postinc0	equ	0xFEE
 11726                           fsr0h	equ	0xFEA
 11727                           fsr0l	equ	0xFE9
 11728                           wreg	equ	0xFE8
 11729                           postdec1	equ	0xFE5
 11730                           plusw1	equ	0xFE3
 11731                           fsr1h	equ	0xFE2
 11732                           fsr1l	equ	0xFE1
 11733                           indf2	equ	0xFDF
 11734                           postinc2	equ	0xFDE
 11735                           postdec2	equ	0xFDD
 11736                           plusw2	equ	0xFDB
 11737                           fsr2h	equ	0xFDA
 11738                           fsr2l	equ	0xFD9
 11739                           status	equ	0xFD8
 11740                           
 11741 ;; *************** function _in_adc_init *****************
 11742 ;; Defined at:
 11743 ;;		line 9 in file "src/driver/in_adc.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;		None
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, status,2
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;Total ram usage:        0 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    4
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_main
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text69
 11772  002722                     __ptext69:
 11773                           	opt stack 0
 11774  002722                     _in_adc_init:
 11775                           	opt stack 26
 11776                           
 11777                           ;in_adc.c: 11: ADCON1=0b00001101;
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;incstack = 0
 11781  002722  0E0D               	movlw	13
 11782  002724  6EC1               	movwf	4033,c	;volatile
 11783                           
 11784                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 11785  002726  8EC0               	bsf	4032,7,c	;volatile
 11786                           
 11787                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 11788  002728  86C0               	bsf	4032,3,c	;volatile
 11789  00272A  88C0               	bsf	4032,4,c	;volatile
 11790  00272C  8AC0               	bsf	4032,5,c	;volatile
 11791                           
 11792                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 11793  00272E  80C0               	bsf	4032,0,c	;volatile
 11794  002730  82C0               	bsf	4032,1,c	;volatile
 11795  002732  84C0               	bsf	4032,2,c	;volatile
 11796                           
 11797                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 11798  002734  8EC2               	bsf	4034,7,c	;volatile
 11799                           
 11800                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 11801  002736  50C2               	movf	4034,w,c	;volatile
 11802  002738  0BC3               	andlw	-61
 11803  00273A  090C               	iorlw	12
 11804  00273C  6EC2               	movwf	4034,c	;volatile
 11805                           
 11806                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 11807  00273E  9C9E               	bcf	3998,6,c	;volatile
 11808                           
 11809                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 11810  002740  9C9D               	bcf	3997,6,c	;volatile
 11811                           
 11812                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 11813  002742  9C9F               	bcf	3999,6,c	;volatile
 11814  002744  0012               	return		;funcret
 11815  002746                     __end_of_in_adc_init:
 11816                           	opt stack 0
 11817                           tblptru	equ	0xFF8
 11818                           tblptrh	equ	0xFF7
 11819                           tblptrl	equ	0xFF6
 11820                           tablat	equ	0xFF5
 11821                           prodh	equ	0xFF4
 11822                           prodl	equ	0xFF3
 11823                           intcon	equ	0xFF2
 11824                           indf0	equ	0xFEF
 11825                           postinc0	equ	0xFEE
 11826                           fsr0h	equ	0xFEA
 11827                           fsr0l	equ	0xFE9
 11828                           wreg	equ	0xFE8
 11829                           postdec1	equ	0xFE5
 11830                           plusw1	equ	0xFE3
 11831                           fsr1h	equ	0xFE2
 11832                           fsr1l	equ	0xFE1
 11833                           indf2	equ	0xFDF
 11834                           postinc2	equ	0xFDE
 11835                           postdec2	equ	0xFDD
 11836                           plusw2	equ	0xFDB
 11837                           fsr2h	equ	0xFDA
 11838                           fsr2l	equ	0xFD9
 11839                           status	equ	0xFD8
 11840                           
 11841 ;; *************** function _ads1115_start_conversion *****************
 11842 ;; Defined at:
 11843 ;;		line 122 in file "src/driver/ads1115.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;  pAds1115        2    7[BANK0 ] PTR struct .
 11846 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;Total ram usage:        2 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    8
 11865 ;; This function calls:
 11866 ;;		_ads1115_write_reg
 11867 ;; This function is called by:
 11868 ;;		_main
 11869 ;;		_diff_pr_chip_sample_fast
 11870 ;;		_diff_pr_chip_sample_slow
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text70
 11875  0026AE                     __ptext70:
 11876                           	opt stack 0
 11877  0026AE                     _ads1115_start_conversion:
 11878                           	opt stack 22
 11879                           
 11880                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 11881                           
 11882                           ;incstack = 0
 11883  0026AE  C0E0  F0DB         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 11884  0026B2  C0E1  F0DC         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 11885  0026B6  0E01               	movlw	1
 11886  0026B8  0100               	movlb	0	; () banked
 11887  0026BA  6FDD               	movwf	ads1115_write_reg@addr& (0+255),b
 11888  0026BC  0100               	movlb	0	; () banked
 11889  0026BE  EE20 F002          	lfsr	2,2
 11890  0026C2  51E0               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 11891  0026C4  26D9               	addwf	fsr2l,f,c
 11892  0026C6  51E1               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 11893  0026C8  22DA               	addwfc	fsr2h,f,c
 11894  0026CA  CFDE F0DE          	movff	postinc2,ads1115_write_reg@value
 11895  0026CE  CFDD F0DF          	movff	postdec2,ads1115_write_reg@value+1
 11896  0026D2  ECE9  F004         	call	_ads1115_write_reg	;wreg free
 11897  0026D6  0012               	return		;funcret
 11898  0026D8                     __end_of_ads1115_start_conversion:
 11899                           	opt stack 0
 11900                           tblptru	equ	0xFF8
 11901                           tblptrh	equ	0xFF7
 11902                           tblptrl	equ	0xFF6
 11903                           tablat	equ	0xFF5
 11904                           prodh	equ	0xFF4
 11905                           prodl	equ	0xFF3
 11906                           intcon	equ	0xFF2
 11907                           indf0	equ	0xFEF
 11908                           postinc0	equ	0xFEE
 11909                           fsr0h	equ	0xFEA
 11910                           fsr0l	equ	0xFE9
 11911                           wreg	equ	0xFE8
 11912                           postdec1	equ	0xFE5
 11913                           plusw1	equ	0xFE3
 11914                           fsr1h	equ	0xFE2
 11915                           fsr1l	equ	0xFE1
 11916                           indf2	equ	0xFDF
 11917                           postinc2	equ	0xFDE
 11918                           postdec2	equ	0xFDD
 11919                           plusw2	equ	0xFDB
 11920                           fsr2h	equ	0xFDA
 11921                           fsr2l	equ	0xFD9
 11922                           status	equ	0xFD8
 11923                           
 11924 ;; *************** function _ads1115_write_reg *****************
 11925 ;; Defined at:
 11926 ;;		line 17 in file "src/driver/ads1115.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  pAds1115        2    2[BANK0 ] PTR struct .
 11929 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 11930 ;;  addr            1    4[BANK0 ] unsigned char 
 11931 ;;  value           2    5[BANK0 ] unsigned int 
 11932 ;; Auto vars:     Size  Location     Type
 11933 ;;		None
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  1    wreg      void 
 11936 ;; Registers used:
 11937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11943 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;Total ram usage:        5 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    7
 11950 ;; This function calls:
 11951 ;;		_iic_send_byte
 11952 ;;		_iic_start
 11953 ;;		_iic_stop
 11954 ;; This function is called by:
 11955 ;;		_ads1115_start_conversion
 11956 ;;		_ads1115_set_threshold_lo
 11957 ;;		_ads1115_set_threshold_hi
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           	psect	text71
 11962  0009D2                     __ptext71:
 11963                           	opt stack 0
 11964  0009D2                     _ads1115_write_reg:
 11965                           	opt stack 22
 11966                           
 11967                           ;ads1115.c: 19: pAds1115->iic_start();
 11968                           
 11969                           ;incstack = 0
 11970  0009D2  0100               	movlb	0	; () banked
 11971  0009D4  EE20 F006          	lfsr	2,6
 11972  0009D8  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11973  0009DA  26D9               	addwf	fsr2l,f,c
 11974  0009DC  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11975  0009DE  22DA               	addwfc	fsr2h,f,c
 11976  0009E0  D801               	call	u6728
 11977  0009E2  D00A               	goto	u6729
 11978  0009E4                     u6728:
 11979  0009E4  0005               	push	
 11980  0009E6  6EFA               	movwf	pclath,c
 11981  0009E8  50DE               	movf	postinc2,w,c
 11982  0009EA  6EFD               	movwf	tosl,c
 11983  0009EC  50DE               	movf	postinc2,w,c
 11984  0009EE  6EFE               	movwf	tosh,c
 11985  0009F0  50F8               	movf	tblptru,w,c
 11986  0009F2  6EFF               	movwf	tosu,c
 11987  0009F4  50FA               	movf	pclath,w,c
 11988  0009F6  0012               	return		;indir
 11989  0009F8                     u6729:
 11990                           
 11991                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 11992  0009F8  0100               	movlb	0	; () banked
 11993  0009FA  EE20 F00A          	lfsr	2,10
 11994  0009FE  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11995  000A00  26D9               	addwf	fsr2l,f,c
 11996  000A02  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11997  000A04  22DA               	addwfc	fsr2h,f,c
 11998  000A06  D801               	call	u6738
 11999  000A08  D012               	goto	u6739
 12000  000A0A                     u6738:
 12001  000A0A  0005               	push	
 12002  000A0C  6EFA               	movwf	pclath,c
 12003  000A0E  50DE               	movf	postinc2,w,c
 12004  000A10  6EFD               	movwf	tosl,c
 12005  000A12  50DE               	movf	postinc2,w,c
 12006  000A14  6EFE               	movwf	tosh,c
 12007  000A16  50F8               	movf	tblptru,w,c
 12008  000A18  6EFF               	movwf	tosu,c
 12009  000A1A  50FA               	movf	pclath,w,c
 12010  000A1C  0100               	movlb	0	; () banked
 12011  000A1E  EE20 F001          	lfsr	2,1
 12012  000A22  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 12013  000A24  26D9               	addwf	fsr2l,f,c
 12014  000A26  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 12015  000A28  22DA               	addwfc	fsr2h,f,c
 12016  000A2A  50DF               	movf	indf2,w,c
 12017  000A2C  0012               	return		;indir
 12018  000A2E                     u6739:
 12019                           
 12020                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 12021  000A2E  0100               	movlb	0	; () banked
 12022  000A30  EE20 F00A          	lfsr	2,10
 12023  000A34  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 12024  000A36  26D9               	addwf	fsr2l,f,c
 12025  000A38  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 12026  000A3A  22DA               	addwfc	fsr2h,f,c
 12027  000A3C  D801               	call	u6748
 12028  000A3E  D00C               	goto	u6749
 12029  000A40                     u6748:
 12030  000A40  0005               	push	
 12031  000A42  6EFA               	movwf	pclath,c
 12032  000A44  50DE               	movf	postinc2,w,c
 12033  000A46  6EFD               	movwf	tosl,c
 12034  000A48  50DE               	movf	postinc2,w,c
 12035  000A4A  6EFE               	movwf	tosh,c
 12036  000A4C  50F8               	movf	tblptru,w,c
 12037  000A4E  6EFF               	movwf	tosu,c
 12038  000A50  50FA               	movf	pclath,w,c
 12039  000A52  0100               	movlb	0	; () banked
 12040  000A54  51DD               	movf	ads1115_write_reg@addr& (0+255),w,b
 12041  000A56  0012               	return		;indir
 12042  000A58                     u6749:
 12043                           
 12044                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 12045  000A58  0100               	movlb	0	; () banked
 12046  000A5A  EE20 F00A          	lfsr	2,10
 12047  000A5E  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 12048  000A60  26D9               	addwf	fsr2l,f,c
 12049  000A62  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 12050  000A64  22DA               	addwfc	fsr2h,f,c
 12051  000A66  D801               	call	u6758
 12052  000A68  D00C               	goto	u6759
 12053  000A6A                     u6758:
 12054  000A6A  0005               	push	
 12055  000A6C  6EFA               	movwf	pclath,c
 12056  000A6E  50DE               	movf	postinc2,w,c
 12057  000A70  6EFD               	movwf	tosl,c
 12058  000A72  50DE               	movf	postinc2,w,c
 12059  000A74  6EFE               	movwf	tosh,c
 12060  000A76  50F8               	movf	tblptru,w,c
 12061  000A78  6EFF               	movwf	tosu,c
 12062  000A7A  50FA               	movf	pclath,w,c
 12063  000A7C  0100               	movlb	0	; () banked
 12064  000A7E  51DF               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 12065  000A80  0012               	return		;indir
 12066  000A82                     u6759:
 12067                           
 12068                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 12069  000A82  0100               	movlb	0	; () banked
 12070  000A84  EE20 F00A          	lfsr	2,10
 12071  000A88  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 12072  000A8A  26D9               	addwf	fsr2l,f,c
 12073  000A8C  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 12074  000A8E  22DA               	addwfc	fsr2h,f,c
 12075  000A90  D801               	call	u6768
 12076  000A92  D00C               	goto	u6769
 12077  000A94                     u6768:
 12078  000A94  0005               	push	
 12079  000A96  6EFA               	movwf	pclath,c
 12080  000A98  50DE               	movf	postinc2,w,c
 12081  000A9A  6EFD               	movwf	tosl,c
 12082  000A9C  50DE               	movf	postinc2,w,c
 12083  000A9E  6EFE               	movwf	tosh,c
 12084  000AA0  50F8               	movf	tblptru,w,c
 12085  000AA2  6EFF               	movwf	tosu,c
 12086  000AA4  50FA               	movf	pclath,w,c
 12087  000AA6  0100               	movlb	0	; () banked
 12088  000AA8  51DE               	movf	ads1115_write_reg@value& (0+255),w,b
 12089  000AAA  0012               	return		;indir
 12090  000AAC                     u6769:
 12091                           
 12092                           ;ads1115.c: 26: pAds1115->iic_stop();
 12093  000AAC  0100               	movlb	0	; () banked
 12094  000AAE  EE20 F008          	lfsr	2,8
 12095  000AB2  51DB               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 12096  000AB4  26D9               	addwf	fsr2l,f,c
 12097  000AB6  51DC               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 12098  000AB8  22DA               	addwfc	fsr2h,f,c
 12099  000ABA  D801               	call	u6778
 12100  000ABC  0012               	return	
 12101  000ABE                     u6778:
 12102  000ABE  0005               	push	
 12103  000AC0  6EFA               	movwf	pclath,c
 12104  000AC2  50DE               	movf	postinc2,w,c
 12105  000AC4  6EFD               	movwf	tosl,c
 12106  000AC6  50DE               	movf	postinc2,w,c
 12107  000AC8  6EFE               	movwf	tosh,c
 12108  000ACA  50F8               	movf	tblptru,w,c
 12109  000ACC  6EFF               	movwf	tosu,c
 12110  000ACE  50FA               	movf	pclath,w,c
 12111  000AD0  0012               	return		;indir
 12112  000AD2                     __end_of_ads1115_write_reg:
 12113                           	opt stack 0
 12114                           tosu	equ	0xFFF
 12115                           tosh	equ	0xFFE
 12116                           tosl	equ	0xFFD
 12117                           pclath	equ	0xFFA
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           indf0	equ	0xFEF
 12126                           postinc0	equ	0xFEE
 12127                           fsr0h	equ	0xFEA
 12128                           fsr0l	equ	0xFE9
 12129                           wreg	equ	0xFE8
 12130                           postdec1	equ	0xFE5
 12131                           plusw1	equ	0xFE3
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           plusw2	equ	0xFDB
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function _ads1115_read_conversion *****************
 12143 ;; Defined at:
 12144 ;;		line 127 in file "src/driver/ads1115.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  pAds1115        2   10[BANK0 ] PTR struct .
 12147 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;  result          2   13[BANK0 ] unsigned int 
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  2   10[BANK0 ] unsigned int 
 12152 ;; Registers used:
 12153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;Total ram usage:        5 bytes
 12164 ;; Hardware stack levels used:    1
 12165 ;; Hardware stack levels required when called:    8
 12166 ;; This function calls:
 12167 ;;		_ads1115_read_reg
 12168 ;; This function is called by:
 12169 ;;		_main
 12170 ;;		_diff_pr_chip_sample_fast
 12171 ;;		_diff_pr_chip_sample_slow
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text72
 12176  002148                     __ptext72:
 12177                           	opt stack 0
 12178  002148                     _ads1115_read_conversion:
 12179                           	opt stack 22
 12180                           
 12181                           ;ads1115.c: 129: uint16_t result;
 12182                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 12183                           
 12184                           ;incstack = 0
 12185  002148  C0E3  F0DD         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 12186  00214C  C0E4  F0DE         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 12187  002150  0E00               	movlw	0
 12188  002152  0100               	movlb	0	; () banked
 12189  002154  6FDF               	movwf	ads1115_read_reg@addr& (0+255),b
 12190  002156  ECD9  F002         	call	_ads1115_read_reg
 12191  00215A  C0DD  F0E6         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 12192  00215E  C0DE  F0E7         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 12193                           
 12194                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 12195  002162  C0E3  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 12196  002166  C0E4  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 12197  00216A  0E03               	movlw	3
 12198  00216C  60DF               	cpfslt	indf2,c
 12199  00216E  D00A               	goto	l9129
 12200                           
 12201                           ;ads1115.c: 132: result >>= 4;
 12202  002170  0100               	movlb	0	; () banked
 12203  002172  3BE6               	swapf	ads1115_read_conversion@result& (0+255),f,b
 12204  002174  3BE7               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 12205  002176  0E0F               	movlw	15
 12206  002178  17E6               	andwf	ads1115_read_conversion@result& (0+255),f,b
 12207  00217A  51E7               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 12208  00217C  0BF0               	andlw	240
 12209  00217E  13E6               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 12210  002180  0E0F               	movlw	15
 12211  002182  17E7               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 12212  002184                     l9129:
 12213                           
 12214                           ;ads1115.c: 133: }
 12215                           ;ads1115.c: 134: return result;
 12216  002184  C0E6  F0E3         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 12217  002188  C0E7  F0E4         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 12218  00218C  0012               	return	
 12219  00218E                     __end_of_ads1115_read_conversion:
 12220                           	opt stack 0
 12221                           tosu	equ	0xFFF
 12222                           tosh	equ	0xFFE
 12223                           tosl	equ	0xFFD
 12224                           pclath	equ	0xFFA
 12225                           tblptru	equ	0xFF8
 12226                           tblptrh	equ	0xFF7
 12227                           tblptrl	equ	0xFF6
 12228                           tablat	equ	0xFF5
 12229                           prodh	equ	0xFF4
 12230                           prodl	equ	0xFF3
 12231                           intcon	equ	0xFF2
 12232                           indf0	equ	0xFEF
 12233                           postinc0	equ	0xFEE
 12234                           fsr0h	equ	0xFEA
 12235                           fsr0l	equ	0xFE9
 12236                           wreg	equ	0xFE8
 12237                           postdec1	equ	0xFE5
 12238                           plusw1	equ	0xFE3
 12239                           fsr1h	equ	0xFE2
 12240                           fsr1l	equ	0xFE1
 12241                           indf2	equ	0xFDF
 12242                           postinc2	equ	0xFDE
 12243                           postdec2	equ	0xFDD
 12244                           plusw2	equ	0xFDB
 12245                           fsr2h	equ	0xFDA
 12246                           fsr2l	equ	0xFD9
 12247                           status	equ	0xFD8
 12248                           
 12249 ;; *************** function _ads1115_read_reg *****************
 12250 ;; Defined at:
 12251 ;;		line 29 in file "src/driver/ads1115.c"
 12252 ;; Parameters:    Size  Location     Type
 12253 ;;  pAds1115        2    4[BANK0 ] PTR struct .
 12254 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 12255 ;;  addr            1    6[BANK0 ] unsigned char 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;  t16             2    8[BANK0 ] unsigned int 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2    4[BANK0 ] unsigned int 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12267 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;Total ram usage:        6 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    7
 12274 ;; This function calls:
 12275 ;;		_iic_received_byte_if_ack
 12276 ;;		_iic_send_byte
 12277 ;;		_iic_start
 12278 ;;		_iic_stop
 12279 ;; This function is called by:
 12280 ;;		_main
 12281 ;;		_ads1115_read_conversion
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text73
 12286  0005B2                     __ptext73:
 12287                           	opt stack 0
 12288  0005B2                     _ads1115_read_reg:
 12289                           	opt stack 23
 12290                           
 12291                           ;ads1115.c: 31: uint16_t t16=0;
 12292                           
 12293                           ;incstack = 0
 12294  0005B2  0E00               	movlw	0
 12295  0005B4  0100               	movlb	0	; () banked
 12296  0005B6  6FE2               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 12297  0005B8  0E00               	movlw	0
 12298  0005BA  6FE1               	movwf	ads1115_read_reg@t16& (0+255),b
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;ads1115.c: 32: pAds1115->iic_start();
 12302  0005BC  0100               	movlb	0	; () banked
 12303  0005BE  EE20 F006          	lfsr	2,6
 12304  0005C2  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12305  0005C4  26D9               	addwf	fsr2l,f,c
 12306  0005C6  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12307  0005C8  22DA               	addwfc	fsr2h,f,c
 12308  0005CA  D801               	call	u6638
 12309  0005CC  D00A               	goto	l8889
 12310  0005CE                     u6638:
 12311  0005CE  0005               	push	
 12312  0005D0  6EFA               	movwf	pclath,c
 12313  0005D2  50DE               	movf	postinc2,w,c
 12314  0005D4  6EFD               	movwf	tosl,c
 12315  0005D6  50DE               	movf	postinc2,w,c
 12316  0005D8  6EFE               	movwf	tosh,c
 12317  0005DA  50F8               	movf	tblptru,w,c
 12318  0005DC  6EFF               	movwf	tosu,c
 12319  0005DE  50FA               	movf	pclath,w,c
 12320  0005E0  0012               	return		;indir
 12321  0005E2                     l8889:
 12322                           
 12323                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 12324  0005E2  0100               	movlb	0	; () banked
 12325  0005E4  EE20 F00A          	lfsr	2,10
 12326  0005E8  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12327  0005EA  26D9               	addwf	fsr2l,f,c
 12328  0005EC  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12329  0005EE  22DA               	addwfc	fsr2h,f,c
 12330  0005F0  D801               	call	u6648
 12331  0005F2  D012               	goto	l8891
 12332  0005F4                     u6648:
 12333  0005F4  0005               	push	
 12334  0005F6  6EFA               	movwf	pclath,c
 12335  0005F8  50DE               	movf	postinc2,w,c
 12336  0005FA  6EFD               	movwf	tosl,c
 12337  0005FC  50DE               	movf	postinc2,w,c
 12338  0005FE  6EFE               	movwf	tosh,c
 12339  000600  50F8               	movf	tblptru,w,c
 12340  000602  6EFF               	movwf	tosu,c
 12341  000604  50FA               	movf	pclath,w,c
 12342  000606  0100               	movlb	0	; () banked
 12343  000608  EE20 F001          	lfsr	2,1
 12344  00060C  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12345  00060E  26D9               	addwf	fsr2l,f,c
 12346  000610  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12347  000612  22DA               	addwfc	fsr2h,f,c
 12348  000614  50DF               	movf	indf2,w,c
 12349  000616  0012               	return		;indir
 12350  000618                     l8891:
 12351                           
 12352                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 12353  000618  0100               	movlb	0	; () banked
 12354  00061A  EE20 F00A          	lfsr	2,10
 12355  00061E  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12356  000620  26D9               	addwf	fsr2l,f,c
 12357  000622  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12358  000624  22DA               	addwfc	fsr2h,f,c
 12359  000626  D801               	call	u6658
 12360  000628  D00C               	goto	l8893
 12361  00062A                     u6658:
 12362  00062A  0005               	push	
 12363  00062C  6EFA               	movwf	pclath,c
 12364  00062E  50DE               	movf	postinc2,w,c
 12365  000630  6EFD               	movwf	tosl,c
 12366  000632  50DE               	movf	postinc2,w,c
 12367  000634  6EFE               	movwf	tosh,c
 12368  000636  50F8               	movf	tblptru,w,c
 12369  000638  6EFF               	movwf	tosu,c
 12370  00063A  50FA               	movf	pclath,w,c
 12371  00063C  0100               	movlb	0	; () banked
 12372  00063E  51DF               	movf	ads1115_read_reg@addr& (0+255),w,b
 12373  000640  0012               	return		;indir
 12374  000642                     l8893:
 12375                           
 12376                           ;ads1115.c: 36: pAds1115->iic_stop();
 12377  000642  0100               	movlb	0	; () banked
 12378  000644  EE20 F008          	lfsr	2,8
 12379  000648  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12380  00064A  26D9               	addwf	fsr2l,f,c
 12381  00064C  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12382  00064E  22DA               	addwfc	fsr2h,f,c
 12383  000650  D801               	call	u6668
 12384  000652  D00A               	goto	l8895
 12385  000654                     u6668:
 12386  000654  0005               	push	
 12387  000656  6EFA               	movwf	pclath,c
 12388  000658  50DE               	movf	postinc2,w,c
 12389  00065A  6EFD               	movwf	tosl,c
 12390  00065C  50DE               	movf	postinc2,w,c
 12391  00065E  6EFE               	movwf	tosh,c
 12392  000660  50F8               	movf	tblptru,w,c
 12393  000662  6EFF               	movwf	tosu,c
 12394  000664  50FA               	movf	pclath,w,c
 12395  000666  0012               	return		;indir
 12396  000668                     l8895:
 12397                           
 12398                           ;ads1115.c: 38: pAds1115->iic_start();
 12399  000668  0100               	movlb	0	; () banked
 12400  00066A  EE20 F006          	lfsr	2,6
 12401  00066E  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12402  000670  26D9               	addwf	fsr2l,f,c
 12403  000672  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12404  000674  22DA               	addwfc	fsr2h,f,c
 12405  000676  D801               	call	u6678
 12406  000678  D00A               	goto	l8897
 12407  00067A                     u6678:
 12408  00067A  0005               	push	
 12409  00067C  6EFA               	movwf	pclath,c
 12410  00067E  50DE               	movf	postinc2,w,c
 12411  000680  6EFD               	movwf	tosl,c
 12412  000682  50DE               	movf	postinc2,w,c
 12413  000684  6EFE               	movwf	tosh,c
 12414  000686  50F8               	movf	tblptru,w,c
 12415  000688  6EFF               	movwf	tosu,c
 12416  00068A  50FA               	movf	pclath,w,c
 12417  00068C  0012               	return		;indir
 12418  00068E                     l8897:
 12419                           
 12420                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 12421  00068E  0100               	movlb	0	; () banked
 12422  000690  EE20 F00A          	lfsr	2,10
 12423  000694  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12424  000696  26D9               	addwf	fsr2l,f,c
 12425  000698  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12426  00069A  22DA               	addwfc	fsr2h,f,c
 12427  00069C  D801               	call	u6688
 12428  00069E  D016               	goto	l8899
 12429  0006A0                     u6688:
 12430  0006A0  0005               	push	
 12431  0006A2  6EFA               	movwf	pclath,c
 12432  0006A4  50DE               	movf	postinc2,w,c
 12433  0006A6  6EFD               	movwf	tosl,c
 12434  0006A8  50DE               	movf	postinc2,w,c
 12435  0006AA  6EFE               	movwf	tosh,c
 12436  0006AC  50F8               	movf	tblptru,w,c
 12437  0006AE  6EFF               	movwf	tosu,c
 12438  0006B0  50FA               	movf	pclath,w,c
 12439  0006B2  0100               	movlb	0	; () banked
 12440  0006B4  EE20 F001          	lfsr	2,1
 12441  0006B8  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12442  0006BA  26D9               	addwf	fsr2l,f,c
 12443  0006BC  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12444  0006BE  22DA               	addwfc	fsr2h,f,c
 12445  0006C0  50DF               	movf	indf2,w,c
 12446  0006C2  0100               	movlb	0	; () banked
 12447  0006C4  6FE0               	movwf	??_ads1115_read_reg& (0+255),b
 12448  0006C6  0100               	movlb	0	; () banked
 12449  0006C8  29E0               	incf	??_ads1115_read_reg& (0+255),w,b
 12450  0006CA  0012               	return		;indir
 12451  0006CC                     l8899:
 12452                           
 12453                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 12454  0006CC  0100               	movlb	0	; () banked
 12455  0006CE  EE20 F00E          	lfsr	2,14
 12456  0006D2  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12457  0006D4  26D9               	addwf	fsr2l,f,c
 12458  0006D6  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12459  0006D8  22DA               	addwfc	fsr2h,f,c
 12460  0006DA  D801               	call	u6698
 12461  0006DC  D00B               	goto	u6699
 12462  0006DE                     u6698:
 12463  0006DE  0005               	push	
 12464  0006E0  6EFA               	movwf	pclath,c
 12465  0006E2  50DE               	movf	postinc2,w,c
 12466  0006E4  6EFD               	movwf	tosl,c
 12467  0006E6  50DE               	movf	postinc2,w,c
 12468  0006E8  6EFE               	movwf	tosh,c
 12469  0006EA  50F8               	movf	tblptru,w,c
 12470  0006EC  6EFF               	movwf	tosu,c
 12471  0006EE  50FA               	movf	pclath,w,c
 12472  0006F0  0E00               	movlw	0
 12473  0006F2  0012               	return		;indir
 12474  0006F4                     u6699:
 12475  0006F4  0100               	movlb	0	; () banked
 12476  0006F6  6FE0               	movwf	??_ads1115_read_reg& (0+255),b
 12477  0006F8  0100               	movlb	0	; () banked
 12478  0006FA  51E0               	movf	??_ads1115_read_reg& (0+255),w,b
 12479  0006FC  0100               	movlb	0	; () banked
 12480  0006FE  6FE1               	movwf	ads1115_read_reg@t16& (0+255),b
 12481  000700  6BE2               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;ads1115.c: 41: t16<<=8;
 12485  000702  0100               	movlb	0	; () banked
 12486  000704  51E1               	movf	ads1115_read_reg@t16& (0+255),w,b
 12487  000706  6FE2               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 12488  000708  6BE1               	clrf	ads1115_read_reg@t16& (0+255),b
 12489                           
 12490                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 12491  00070A  0100               	movlb	0	; () banked
 12492  00070C  EE20 F00E          	lfsr	2,14
 12493  000710  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12494  000712  26D9               	addwf	fsr2l,f,c
 12495  000714  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12496  000716  22DA               	addwfc	fsr2h,f,c
 12497  000718  D801               	call	u6708
 12498  00071A  D00B               	goto	u6709
 12499  00071C                     u6708:
 12500  00071C  0005               	push	
 12501  00071E  6EFA               	movwf	pclath,c
 12502  000720  50DE               	movf	postinc2,w,c
 12503  000722  6EFD               	movwf	tosl,c
 12504  000724  50DE               	movf	postinc2,w,c
 12505  000726  6EFE               	movwf	tosh,c
 12506  000728  50F8               	movf	tblptru,w,c
 12507  00072A  6EFF               	movwf	tosu,c
 12508  00072C  50FA               	movf	pclath,w,c
 12509  00072E  0E00               	movlw	0
 12510  000730  0012               	return		;indir
 12511  000732                     u6709:
 12512  000732  0100               	movlb	0	; () banked
 12513  000734  6FE0               	movwf	??_ads1115_read_reg& (0+255),b
 12514  000736  0100               	movlb	0	; () banked
 12515  000738  51E0               	movf	??_ads1115_read_reg& (0+255),w,b
 12516  00073A  0100               	movlb	0	; () banked
 12517  00073C  13E1               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 12518                           
 12519                           ;ads1115.c: 44: pAds1115->iic_stop();
 12520  00073E  0100               	movlb	0	; () banked
 12521  000740  EE20 F008          	lfsr	2,8
 12522  000744  51DD               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 12523  000746  26D9               	addwf	fsr2l,f,c
 12524  000748  51DE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 12525  00074A  22DA               	addwfc	fsr2h,f,c
 12526  00074C  D801               	call	u6718
 12527  00074E  D00A               	goto	l8903
 12528  000750                     u6718:
 12529  000750  0005               	push	
 12530  000752  6EFA               	movwf	pclath,c
 12531  000754  50DE               	movf	postinc2,w,c
 12532  000756  6EFD               	movwf	tosl,c
 12533  000758  50DE               	movf	postinc2,w,c
 12534  00075A  6EFE               	movwf	tosh,c
 12535  00075C  50F8               	movf	tblptru,w,c
 12536  00075E  6EFF               	movwf	tosu,c
 12537  000760  50FA               	movf	pclath,w,c
 12538  000762  0012               	return		;indir
 12539  000764                     l8903:
 12540                           
 12541                           ;ads1115.c: 45: return t16;
 12542  000764  C0E1  F0DD         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 12543  000768  C0E2  F0DE         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 12544  00076C  0012               	return	
 12545  00076E                     __end_of_ads1115_read_reg:
 12546                           	opt stack 0
 12547                           tosu	equ	0xFFF
 12548                           tosh	equ	0xFFE
 12549                           tosl	equ	0xFFD
 12550                           pclath	equ	0xFFA
 12551                           tblptru	equ	0xFF8
 12552                           tblptrh	equ	0xFF7
 12553                           tblptrl	equ	0xFF6
 12554                           tablat	equ	0xFF5
 12555                           prodh	equ	0xFF4
 12556                           prodl	equ	0xFF3
 12557                           intcon	equ	0xFF2
 12558                           indf0	equ	0xFEF
 12559                           postinc0	equ	0xFEE
 12560                           fsr0h	equ	0xFEA
 12561                           fsr0l	equ	0xFE9
 12562                           wreg	equ	0xFE8
 12563                           postdec1	equ	0xFE5
 12564                           plusw1	equ	0xFE3
 12565                           fsr1h	equ	0xFE2
 12566                           fsr1l	equ	0xFE1
 12567                           indf2	equ	0xFDF
 12568                           postinc2	equ	0xFDE
 12569                           postdec2	equ	0xFDD
 12570                           plusw2	equ	0xFDB
 12571                           fsr2h	equ	0xFDA
 12572                           fsr2l	equ	0xFD9
 12573                           status	equ	0xFD8
 12574                           
 12575 ;; *************** function _iic_start *****************
 12576 ;; Defined at:
 12577 ;;		line 18 in file "src/driver/i2c.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;		None
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		status,2, status,0
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12595 ;;Total ram usage:        0 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    4
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_ads1115_init
 12602 ;;		_at24c02_init
 12603 ;;		_pcf8574_init
 12604 ;;		_ads1115_read_reg
 12605 ;;		_ads1115_write_reg
 12606 ;;		_pcf8574_write_singel
 12607 ;;		_at24c02_read_n_byte
 12608 ;;		_at24c02_write_n_byte
 12609 ;;		_ad421_write_via_pcf8574
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text74
 12614  0022D8                     __ptext74:
 12615                           	opt stack 0
 12616  0022D8                     _iic_start:
 12617                           	opt stack 24
 12618                           
 12619                           ;incstack = 0
 12620                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 12621  0022D8  9694               	bcf	3988,3,c	;volatile
 12622                           
 12623                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 12624  0022DA  9894               	bcf	3988,4,c	;volatile
 12625                           
 12626                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 12627  0022DC  888B               	bsf	3979,4,c	;volatile
 12628                           
 12629                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 12630  0022DE  868B               	bsf	3979,3,c	;volatile
 12631                           
 12632                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12633  0022E0  F000               	nop	
 12634  0022E2  F000               	nop	
 12635  0022E4  F000               	nop	
 12636  0022E6  F000               	nop	
 12637  0022E8  F000               	nop	
 12638  0022EA  F000               	nop	
 12639  0022EC  F000               	nop	
 12640  0022EE  F000               	nop	
 12641  0022F0  F000               	nop	
 12642  0022F2  F000               	nop	
 12643  0022F4  F000               	nop	
 12644  0022F6  F000               	nop	
 12645                           
 12646                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 12647  0022F8  988B               	bcf	3979,4,c	;volatile
 12648                           
 12649                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12650  0022FA  F000               	nop	
 12651  0022FC  F000               	nop	
 12652  0022FE  F000               	nop	
 12653  002300  F000               	nop	
 12654  002302  F000               	nop	
 12655  002304  F000               	nop	
 12656  002306  F000               	nop	
 12657  002308  F000               	nop	
 12658  00230A  F000               	nop	
 12659  00230C  F000               	nop	
 12660  00230E  F000               	nop	
 12661  002310  F000               	nop	
 12662                           
 12663                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 12664  002312  968B               	bcf	3979,3,c	;volatile
 12665  002314  0012               	return	
 12666  002316                     __end_of_iic_start:
 12667                           	opt stack 0
 12668                           tosu	equ	0xFFF
 12669                           tosh	equ	0xFFE
 12670                           tosl	equ	0xFFD
 12671                           pclath	equ	0xFFA
 12672                           tblptru	equ	0xFF8
 12673                           tblptrh	equ	0xFF7
 12674                           tblptrl	equ	0xFF6
 12675                           tablat	equ	0xFF5
 12676                           prodh	equ	0xFF4
 12677                           prodl	equ	0xFF3
 12678                           intcon	equ	0xFF2
 12679                           indf0	equ	0xFEF
 12680                           postinc0	equ	0xFEE
 12681                           fsr0h	equ	0xFEA
 12682                           fsr0l	equ	0xFE9
 12683                           wreg	equ	0xFE8
 12684                           postdec1	equ	0xFE5
 12685                           plusw1	equ	0xFE3
 12686                           fsr1h	equ	0xFE2
 12687                           fsr1l	equ	0xFE1
 12688                           indf2	equ	0xFDF
 12689                           postinc2	equ	0xFDE
 12690                           postdec2	equ	0xFDD
 12691                           plusw2	equ	0xFDB
 12692                           fsr2h	equ	0xFDA
 12693                           fsr2l	equ	0xFD9
 12694                           status	equ	0xFD8
 12695                           
 12696 ;; *************** function _iic_send_byte *****************
 12697 ;; Defined at:
 12698 ;;		line 80 in file "src/driver/i2c.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;  x               1    wreg     unsigned char 
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;  x               1    0[BANK0 ] unsigned char 
 12703 ;;  i               1    1[BANK0 ] unsigned char 
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      unsigned char 
 12706 ;; Registers used:
 12707 ;;		wreg, status,2, status,0, cstack
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12717 ;;Total ram usage:        2 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:    6
 12720 ;; This function calls:
 12721 ;;		_iic_waite_ack
 12722 ;; This function is called by:
 12723 ;;		_ads1115_init
 12724 ;;		_at24c02_init
 12725 ;;		_pcf8574_init
 12726 ;;		_ads1115_read_reg
 12727 ;;		_ads1115_write_reg
 12728 ;;		_pcf8574_write_singel
 12729 ;;		_at24c02_read_n_byte
 12730 ;;		_at24c02_write_n_byte
 12731 ;;		_ad421_write_via_pcf8574
 12732 ;; This function uses a non-reentrant model
 12733 ;;
 12734                           
 12735                           	psect	text75
 12736  001BC8                     __ptext75:
 12737                           	opt stack 0
 12738  001BC8                     _iic_send_byte:
 12739                           	opt stack 22
 12740                           
 12741                           ;incstack = 0
 12742                           ;iic_send_byte@x stored from wreg
 12743  001BC8  0100               	movlb	0	; () banked
 12744  001BCA  6FD9               	movwf	iic_send_byte@x& (0+255),b
 12745                           
 12746                           ;i2c.c: 82: uint8_t i;
 12747                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 12748  001BCC  9694               	bcf	3988,3,c	;volatile
 12749                           
 12750                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 12751  001BCE  9894               	bcf	3988,4,c	;volatile
 12752                           
 12753                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 12754  001BD0  968B               	bcf	3979,3,c	;volatile
 12755                           
 12756                           ;i2c.c: 86: for(i=0;i<8;i++){
 12757  001BD2  0E00               	movlw	0
 12758  001BD4  0100               	movlb	0	; () banked
 12759  001BD6  6FDA               	movwf	iic_send_byte@i& (0+255),b
 12760  001BD8                     l8519:
 12761                           
 12762                           ; BSR set to: 0
 12763  001BD8  0E07               	movlw	7
 12764  001BDA  0100               	movlb	0	; () banked
 12765  001BDC  65DA               	cpfsgt	iic_send_byte@i& (0+255),b
 12766  001BDE  D001               	goto	l865
 12767  001BE0  D026               	goto	l8579
 12768  001BE2                     l865:
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;i2c.c: 87: if(x&0x80){
 12772  001BE2  0100               	movlb	0	; () banked
 12773  001BE4  AFD9               	btfss	iic_send_byte@x& (0+255),7,b
 12774  001BE6  D002               	goto	l8525
 12775                           
 12776                           ; BSR set to: 0
 12777                           
 12778                           ; BSR set to: 0
 12779                           
 12780                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 12781  001BE8  888B               	bsf	3979,4,c	;volatile
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;i2c.c: 89: }
 12785  001BEA  D001               	goto	l873
 12786  001BEC                     l8525:
 12787                           
 12788                           ; BSR set to: 0
 12789  001BEC  988B               	bcf	3979,4,c	;volatile
 12790  001BEE                     l873:
 12791                           
 12792                           ; BSR set to: 0
 12793  001BEE  868B               	bsf	3979,3,c	;volatile
 12794                           
 12795                           ; BSR set to: 0
 12796                           
 12797                           ; BSR set to: 0
 12798                           
 12799                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12800                           
 12801                           ; BSR set to: 0
 12802  001BF0  F000               	nop	
 12803  001BF2  F000               	nop	
 12804  001BF4  F000               	nop	
 12805  001BF6  F000               	nop	
 12806  001BF8  F000               	nop	
 12807  001BFA  F000               	nop	
 12808  001BFC  F000               	nop	
 12809  001BFE  F000               	nop	
 12810  001C00  F000               	nop	
 12811  001C02  F000               	nop	
 12812  001C04  F000               	nop	
 12813  001C06  F000               	nop	
 12814                           
 12815                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 12816  001C08  968B               	bcf	3979,3,c	;volatile
 12817                           
 12818                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12819  001C0A  F000               	nop	
 12820  001C0C  F000               	nop	
 12821  001C0E  F000               	nop	
 12822  001C10  F000               	nop	
 12823  001C12  F000               	nop	
 12824  001C14  F000               	nop	
 12825  001C16  F000               	nop	
 12826  001C18  F000               	nop	
 12827  001C1A  F000               	nop	
 12828  001C1C  F000               	nop	
 12829  001C1E  F000               	nop	
 12830  001C20  F000               	nop	
 12831                           
 12832                           ;i2c.c: 97: x<<=1;
 12833  001C22  0100               	movlb	0	; () banked
 12834  001C24  90D8               	bcf	status,0,c
 12835  001C26  37D9               	rlcf	iic_send_byte@x& (0+255),f,b
 12836                           
 12837                           ; BSR set to: 0
 12838  001C28  0100               	movlb	0	; () banked
 12839  001C2A  2BDA               	incf	iic_send_byte@i& (0+255),f,b
 12840  001C2C  D7D5               	goto	l8519
 12841  001C2E                     l8579:
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;i2c.c: 98: }
 12845                           ;i2c.c: 99: return iic_waite_ack();
 12846                           ;	Return value of _iic_send_byte is never used
 12847  001C2E  EC44  F00F         	call	_iic_waite_ack
 12848  001C32  0012               	return	
 12849  001C34                     __end_of_iic_send_byte:
 12850                           	opt stack 0
 12851                           tosu	equ	0xFFF
 12852                           tosh	equ	0xFFE
 12853                           tosl	equ	0xFFD
 12854                           pclath	equ	0xFFA
 12855                           tblptru	equ	0xFF8
 12856                           tblptrh	equ	0xFF7
 12857                           tblptrl	equ	0xFF6
 12858                           tablat	equ	0xFF5
 12859                           prodh	equ	0xFF4
 12860                           prodl	equ	0xFF3
 12861                           intcon	equ	0xFF2
 12862                           indf0	equ	0xFEF
 12863                           postinc0	equ	0xFEE
 12864                           fsr0h	equ	0xFEA
 12865                           fsr0l	equ	0xFE9
 12866                           wreg	equ	0xFE8
 12867                           postdec1	equ	0xFE5
 12868                           plusw1	equ	0xFE3
 12869                           fsr1h	equ	0xFE2
 12870                           fsr1l	equ	0xFE1
 12871                           indf2	equ	0xFDF
 12872                           postinc2	equ	0xFDE
 12873                           postdec2	equ	0xFDD
 12874                           plusw2	equ	0xFDB
 12875                           fsr2h	equ	0xFDA
 12876                           fsr2l	equ	0xFD9
 12877                           status	equ	0xFD8
 12878                           
 12879 ;; *************** function _iic_waite_ack *****************
 12880 ;; Defined at:
 12881 ;;		line 60 in file "src/driver/i2c.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  timeout         1   31[COMRAM] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      unsigned char 
 12888 ;; Registers used:
 12889 ;;		wreg, status,2, status,0, cstack
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;Total ram usage:        1 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:    5
 12902 ;; This function calls:
 12903 ;;		_iic_stop
 12904 ;; This function is called by:
 12905 ;;		_ads1115_init
 12906 ;;		_iic_send_byte
 12907 ;;		_at24c02_init
 12908 ;;		_pcf8574_init
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text76
 12913  001E88                     __ptext76:
 12914                           	opt stack 0
 12915  001E88                     _iic_waite_ack:
 12916                           	opt stack 22
 12917                           
 12918                           ;i2c.c: 62: uint8_t timeout=200;
 12919                           
 12920                           ;incstack = 0
 12921  001E88  0EC8               	movlw	200
 12922  001E8A  6E20               	movwf	iic_waite_ack@timeout,c
 12923                           
 12924                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 12925  001E8C  9694               	bcf	3988,3,c	;volatile
 12926                           
 12927                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 12928  001E8E  8894               	bsf	3988,4,c	;volatile
 12929                           
 12930                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 12931  001E90  968B               	bcf	3979,3,c	;volatile
 12932                           
 12933                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12934  001E92  F000               	nop	
 12935  001E94  F000               	nop	
 12936  001E96  F000               	nop	
 12937  001E98  F000               	nop	
 12938  001E9A  F000               	nop	
 12939  001E9C  F000               	nop	
 12940  001E9E  F000               	nop	
 12941  001EA0  F000               	nop	
 12942  001EA2  F000               	nop	
 12943  001EA4  F000               	nop	
 12944  001EA6  F000               	nop	
 12945  001EA8  F000               	nop	
 12946                           
 12947                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 12948  001EAA  868B               	bsf	3979,3,c	;volatile
 12949                           
 12950                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12951  001EAC  F000               	nop	
 12952  001EAE  F000               	nop	
 12953  001EB0  F000               	nop	
 12954  001EB2  F000               	nop	
 12955  001EB4  F000               	nop	
 12956  001EB6  F000               	nop	
 12957  001EB8  F000               	nop	
 12958  001EBA  F000               	nop	
 12959  001EBC  F000               	nop	
 12960  001EBE  F000               	nop	
 12961  001EC0  F000               	nop	
 12962  001EC2  F000               	nop	
 12963                           
 12964                           ;i2c.c: 69: while(timeout--){
 12965  001EC4  D002               	goto	l8235
 12966  001EC6                     l850:
 12967                           
 12968                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 12969  001EC6  A882               	btfss	3970,4,c	;volatile
 12970  001EC8  D004               	goto	l8237
 12971  001ECA                     l8235:
 12972  001ECA  0620               	decf	iic_waite_ack@timeout,f,c
 12973  001ECC  2820               	incf	iic_waite_ack@timeout,w,c
 12974  001ECE  A4D8               	btfss	status,2,c
 12975  001ED0  D7FA               	goto	l850
 12976  001ED2                     l8237:
 12977                           
 12978                           ;i2c.c: 71: }
 12979                           ;i2c.c: 72: if(!timeout){
 12980  001ED2  5020               	movf	iic_waite_ack@timeout,w,c
 12981  001ED4  A4D8               	btfss	status,2,c
 12982  001ED6  D004               	goto	l8245
 12983                           
 12984                           ;i2c.c: 73: iic_stop();
 12985  001ED8  ECC7  F011         	call	_iic_stop	;wreg free
 12986                           
 12987                           ;i2c.c: 74: return 0;
 12988  001EDC  0E00               	movlw	0
 12989  001EDE  0012               	return	
 12990  001EE0                     l8245:
 12991  001EE0  968B               	bcf	3979,3,c	;volatile
 12992                           
 12993                           ;i2c.c: 77: return 1;
 12994  001EE2  0E01               	movlw	1
 12995  001EE4  0012               	return	
 12996  001EE6                     __end_of_iic_waite_ack:
 12997                           	opt stack 0
 12998                           tosu	equ	0xFFF
 12999                           tosh	equ	0xFFE
 13000                           tosl	equ	0xFFD
 13001                           pclath	equ	0xFFA
 13002                           tblptru	equ	0xFF8
 13003                           tblptrh	equ	0xFF7
 13004                           tblptrl	equ	0xFF6
 13005                           tablat	equ	0xFF5
 13006                           prodh	equ	0xFF4
 13007                           prodl	equ	0xFF3
 13008                           intcon	equ	0xFF2
 13009                           indf0	equ	0xFEF
 13010                           postinc0	equ	0xFEE
 13011                           fsr0h	equ	0xFEA
 13012                           fsr0l	equ	0xFE9
 13013                           wreg	equ	0xFE8
 13014                           postdec1	equ	0xFE5
 13015                           plusw1	equ	0xFE3
 13016                           fsr1h	equ	0xFE2
 13017                           fsr1l	equ	0xFE1
 13018                           indf2	equ	0xFDF
 13019                           postinc2	equ	0xFDE
 13020                           postdec2	equ	0xFDD
 13021                           plusw2	equ	0xFDB
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8
 13025                           
 13026 ;; *************** function _iic_stop *****************
 13027 ;; Defined at:
 13028 ;;		line 32 in file "src/driver/i2c.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		status,2, status,0
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:    4
 13049 ;; This function calls:
 13050 ;;		Nothing
 13051 ;; This function is called by:
 13052 ;;		_ads1115_init
 13053 ;;		_iic_waite_ack
 13054 ;;		_at24c02_init
 13055 ;;		_pcf8574_init
 13056 ;;		_ads1115_read_reg
 13057 ;;		_ads1115_write_reg
 13058 ;;		_pcf8574_write_singel
 13059 ;;		_at24c02_read_n_byte
 13060 ;;		_at24c02_write_n_byte
 13061 ;;		_ad421_write_via_pcf8574
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text77
 13066  00238E                     __ptext77:
 13067                           	opt stack 0
 13068  00238E                     _iic_stop:
 13069                           	opt stack 24
 13070                           
 13071                           ;incstack = 0
 13072                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 13073  00238E  9694               	bcf	3988,3,c	;volatile
 13074                           
 13075                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 13076  002390  9894               	bcf	3988,4,c	;volatile
 13077                           
 13078                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 13079  002392  988B               	bcf	3979,4,c	;volatile
 13080                           
 13081                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 13082  002394  F000               	nop	
 13083  002396  F000               	nop	
 13084  002398  F000               	nop	
 13085  00239A  F000               	nop	
 13086  00239C  F000               	nop	
 13087  00239E  F000               	nop	
 13088  0023A0  F000               	nop	
 13089  0023A2  F000               	nop	
 13090  0023A4  F000               	nop	
 13091  0023A6  F000               	nop	
 13092  0023A8  F000               	nop	
 13093  0023AA  F000               	nop	
 13094                           
 13095                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 13096  0023AC  868B               	bsf	3979,3,c	;volatile
 13097                           
 13098                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 13099  0023AE  F000               	nop	
 13100  0023B0  F000               	nop	
 13101  0023B2  F000               	nop	
 13102  0023B4  F000               	nop	
 13103  0023B6  F000               	nop	
 13104  0023B8  F000               	nop	
 13105  0023BA  F000               	nop	
 13106  0023BC  F000               	nop	
 13107  0023BE  F000               	nop	
 13108  0023C0  F000               	nop	
 13109  0023C2  F000               	nop	
 13110  0023C4  F000               	nop	
 13111                           
 13112                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 13113  0023C6  888B               	bsf	3979,4,c	;volatile
 13114  0023C8  0012               	return	
 13115  0023CA                     __end_of_iic_stop:
 13116                           	opt stack 0
 13117                           tosu	equ	0xFFF
 13118                           tosh	equ	0xFFE
 13119                           tosl	equ	0xFFD
 13120                           pclath	equ	0xFFA
 13121                           tblptru	equ	0xFF8
 13122                           tblptrh	equ	0xFF7
 13123                           tblptrl	equ	0xFF6
 13124                           tablat	equ	0xFF5
 13125                           prodh	equ	0xFF4
 13126                           prodl	equ	0xFF3
 13127                           intcon	equ	0xFF2
 13128                           indf0	equ	0xFEF
 13129                           postinc0	equ	0xFEE
 13130                           fsr0h	equ	0xFEA
 13131                           fsr0l	equ	0xFE9
 13132                           wreg	equ	0xFE8
 13133                           postdec1	equ	0xFE5
 13134                           plusw1	equ	0xFE3
 13135                           fsr1h	equ	0xFE2
 13136                           fsr1l	equ	0xFE1
 13137                           indf2	equ	0xFDF
 13138                           postinc2	equ	0xFDE
 13139                           postdec2	equ	0xFDD
 13140                           plusw2	equ	0xFDB
 13141                           fsr2h	equ	0xFDA
 13142                           fsr2l	equ	0xFD9
 13143                           status	equ	0xFD8
 13144                           
 13145 ;; *************** function _iic_received_byte_if_ack *****************
 13146 ;; Defined at:
 13147 ;;		line 121 in file "src/driver/i2c.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;  ack             1    wreg     unsigned char 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;  ack             1    2[BANK0 ] unsigned char 
 13152 ;;  ret             1    3[BANK0 ] unsigned char 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      unsigned char 
 13155 ;; Registers used:
 13156 ;;		wreg, status,2, status,0, cstack
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;Total ram usage:        2 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:    5
 13169 ;; This function calls:
 13170 ;;		_iic_received_byte
 13171 ;;		_iic_send_ack
 13172 ;; This function is called by:
 13173 ;;		_ads1115_init
 13174 ;;		_at24c02_init
 13175 ;;		_pcf8574_init
 13176 ;;		_ads1115_read_reg
 13177 ;;		_at24c02_read_n_byte
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           	psect	text78
 13182  002746                     __ptext78:
 13183                           	opt stack 0
 13184  002746                     _iic_received_byte_if_ack:
 13185                           	opt stack 24
 13186                           
 13187                           ;incstack = 0
 13188                           ;iic_received_byte_if_ack@ack stored from wreg
 13189  002746  0100               	movlb	0	; () banked
 13190  002748  6FDB               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 13191                           
 13192                           ;i2c.c: 123: uint8_t ret=0;
 13193  00274A  0E00               	movlw	0
 13194  00274C  0100               	movlb	0	; () banked
 13195  00274E  6FDC               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;i2c.c: 124: ret=iic_received_byte();
 13199  002750  EC4F  F00E         	call	_iic_received_byte	;wreg free
 13200  002754  0100               	movlb	0	; () banked
 13201  002756  6FDC               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;i2c.c: 125: iic_send_ack(ack);
 13205  002758  0100               	movlb	0	; () banked
 13206  00275A  51DB               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 13207  00275C  EC7F  F010         	call	_iic_send_ack
 13208                           
 13209                           ;i2c.c: 126: return ret;
 13210  002760  0100               	movlb	0	; () banked
 13211  002762  51DC               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 13212  002764  0012               	return	
 13213  002766                     __end_of_iic_received_byte_if_ack:
 13214                           	opt stack 0
 13215                           tosu	equ	0xFFF
 13216                           tosh	equ	0xFFE
 13217                           tosl	equ	0xFFD
 13218                           pclath	equ	0xFFA
 13219                           tblptru	equ	0xFF8
 13220                           tblptrh	equ	0xFF7
 13221                           tblptrl	equ	0xFF6
 13222                           tablat	equ	0xFF5
 13223                           prodh	equ	0xFF4
 13224                           prodl	equ	0xFF3
 13225                           intcon	equ	0xFF2
 13226                           indf0	equ	0xFEF
 13227                           postinc0	equ	0xFEE
 13228                           fsr0h	equ	0xFEA
 13229                           fsr0l	equ	0xFE9
 13230                           wreg	equ	0xFE8
 13231                           postdec1	equ	0xFE5
 13232                           plusw1	equ	0xFE3
 13233                           fsr1h	equ	0xFE2
 13234                           fsr1l	equ	0xFE1
 13235                           indf2	equ	0xFDF
 13236                           postinc2	equ	0xFDE
 13237                           postdec2	equ	0xFDD
 13238                           plusw2	equ	0xFDB
 13239                           fsr2h	equ	0xFDA
 13240                           fsr2l	equ	0xFD9
 13241                           status	equ	0xFD8
 13242                           
 13243 ;; *************** function _iic_send_ack *****************
 13244 ;; Defined at:
 13245 ;;		line 44 in file "src/driver/i2c.c"
 13246 ;; Parameters:    Size  Location     Type
 13247 ;;  ack             1    wreg     char 
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;  ack             1   31[COMRAM] char 
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  1    wreg      void 
 13252 ;; Registers used:
 13253 ;;		wreg, status,2, status,0
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;Total ram usage:        1 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    4
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_iic_received_byte_if_ack
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text79
 13274  0020FE                     __ptext79:
 13275                           	opt stack 0
 13276  0020FE                     _iic_send_ack:
 13277                           	opt stack 24
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;incstack = 0
 13281                           ;iic_send_ack@ack stored from wreg
 13282  0020FE  6E20               	movwf	iic_send_ack@ack,c
 13283                           
 13284                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 13285  002100  9694               	bcf	3988,3,c	;volatile
 13286                           
 13287                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 13288  002102  9894               	bcf	3988,4,c	;volatile
 13289                           
 13290                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 13291  002104  968B               	bcf	3979,3,c	;volatile
 13292                           
 13293                           ;i2c.c: 49: if(ack){
 13294  002106  5020               	movf	iic_send_ack@ack,w,c
 13295  002108  B4D8               	btfsc	status,2,c
 13296  00210A  D002               	goto	l8125
 13297                           
 13298                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 13299  00210C  888B               	bsf	3979,4,c	;volatile
 13300                           
 13301                           ;i2c.c: 51: }else{
 13302  00210E  D001               	goto	l8127
 13303  002110                     l8125:
 13304  002110  988B               	bcf	3979,4,c	;volatile
 13305  002112                     l8127:
 13306  002112  F000               	nop	
 13307  002114  F000               	nop	
 13308  002116  F000               	nop	
 13309  002118  F000               	nop	
 13310  00211A  F000               	nop	
 13311  00211C  F000               	nop	
 13312  00211E  F000               	nop	
 13313  002120  F000               	nop	
 13314  002122  F000               	nop	
 13315  002124  F000               	nop	
 13316  002126  F000               	nop	
 13317  002128  F000               	nop	
 13318                           
 13319                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 13320  00212A  868B               	bsf	3979,3,c	;volatile
 13321                           
 13322                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 13323  00212C  F000               	nop	
 13324  00212E  F000               	nop	
 13325  002130  F000               	nop	
 13326  002132  F000               	nop	
 13327  002134  F000               	nop	
 13328  002136  F000               	nop	
 13329  002138  F000               	nop	
 13330  00213A  F000               	nop	
 13331  00213C  F000               	nop	
 13332  00213E  F000               	nop	
 13333  002140  F000               	nop	
 13334  002142  F000               	nop	
 13335                           
 13336                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 13337  002144  968B               	bcf	3979,3,c	;volatile
 13338  002146  0012               	return	
 13339  002148                     __end_of_iic_send_ack:
 13340                           	opt stack 0
 13341                           tosu	equ	0xFFF
 13342                           tosh	equ	0xFFE
 13343                           tosl	equ	0xFFD
 13344                           pclath	equ	0xFFA
 13345                           tblptru	equ	0xFF8
 13346                           tblptrh	equ	0xFF7
 13347                           tblptrl	equ	0xFF6
 13348                           tablat	equ	0xFF5
 13349                           prodh	equ	0xFF4
 13350                           prodl	equ	0xFF3
 13351                           intcon	equ	0xFF2
 13352                           indf0	equ	0xFEF
 13353                           postinc0	equ	0xFEE
 13354                           fsr0h	equ	0xFEA
 13355                           fsr0l	equ	0xFE9
 13356                           wreg	equ	0xFE8
 13357                           postdec1	equ	0xFE5
 13358                           plusw1	equ	0xFE3
 13359                           fsr1h	equ	0xFE2
 13360                           fsr1l	equ	0xFE1
 13361                           indf2	equ	0xFDF
 13362                           postinc2	equ	0xFDE
 13363                           postdec2	equ	0xFDD
 13364                           plusw2	equ	0xFDB
 13365                           fsr2h	equ	0xFDA
 13366                           fsr2l	equ	0xFD9
 13367                           status	equ	0xFD8
 13368                           
 13369 ;; *************** function _iic_received_byte *****************
 13370 ;; Defined at:
 13371 ;;		line 102 in file "src/driver/i2c.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;		None
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;  i               1    1[BANK0 ] unsigned char 
 13376 ;;  ret             1    0[BANK0 ] unsigned char 
 13377 ;; Return value:  Size  Location     Type
 13378 ;;                  1    wreg      unsigned char 
 13379 ;; Registers used:
 13380 ;;		wreg, status,2, status,0
 13381 ;; Tracked objects:
 13382 ;;		On entry : 0/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;Total ram usage:        2 bytes
 13391 ;; Hardware stack levels used:    1
 13392 ;; Hardware stack levels required when called:    4
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		_iic_received_byte_if_ack
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text80
 13401  001C9E                     __ptext80:
 13402                           	opt stack 0
 13403  001C9E                     _iic_received_byte:
 13404                           	opt stack 24
 13405                           
 13406                           ;i2c.c: 104: uint8_t i;
 13407                           ;i2c.c: 105: uint8_t ret=0;
 13408                           
 13409                           ;incstack = 0
 13410  001C9E  0E00               	movlw	0
 13411  001CA0  0100               	movlb	0	; () banked
 13412  001CA2  6FD9               	movwf	iic_received_byte@ret& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415                           
 13416                           ; BSR set to: 0
 13417                           
 13418                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 13419  001CA4  9694               	bcf	3988,3,c	;volatile
 13420                           
 13421                           ; BSR set to: 0
 13422                           
 13423                           ; BSR set to: 0
 13424                           
 13425                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 13426                           
 13427                           ; BSR set to: 0
 13428  001CA6  8894               	bsf	3988,4,c	;volatile
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;i2c.c: 108: for(i=0;i<8;i++){
 13432  001CA8  0E00               	movlw	0
 13433  001CAA  0100               	movlb	0	; () banked
 13434  001CAC  6FDA               	movwf	iic_received_byte@i& (0+255),b
 13435  001CAE                     l8257:
 13436                           
 13437                           ; BSR set to: 0
 13438  001CAE  0E07               	movlw	7
 13439  001CB0  0100               	movlb	0	; () banked
 13440  001CB2  65DA               	cpfsgt	iic_received_byte@i& (0+255),b
 13441  001CB4  D001               	goto	l8261
 13442  001CB6  D024               	goto	l8321
 13443  001CB8                     l8261:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;i2c.c: 109: ret<<=1;
 13447  001CB8  0100               	movlb	0	; () banked
 13448  001CBA  90D8               	bcf	status,0,c
 13449  001CBC  37D9               	rlcf	iic_received_byte@ret& (0+255),f,b
 13450                           
 13451                           ; BSR set to: 0
 13452                           
 13453                           ; BSR set to: 0
 13454                           
 13455                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 13456  001CBE  968B               	bcf	3979,3,c	;volatile
 13457                           
 13458                           ; BSR set to: 0
 13459                           
 13460                           ; BSR set to: 0
 13461                           
 13462                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 13463                           
 13464                           ; BSR set to: 0
 13465  001CC0  F000               	nop	
 13466  001CC2  F000               	nop	
 13467  001CC4  F000               	nop	
 13468  001CC6  F000               	nop	
 13469  001CC8  F000               	nop	
 13470  001CCA  F000               	nop	
 13471  001CCC  F000               	nop	
 13472  001CCE  F000               	nop	
 13473  001CD0  F000               	nop	
 13474  001CD2  F000               	nop	
 13475  001CD4  F000               	nop	
 13476  001CD6  F000               	nop	
 13477                           
 13478                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 13479  001CD8  868B               	bsf	3979,3,c	;volatile
 13480                           
 13481                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 13482  001CDA  F000               	nop	
 13483  001CDC  F000               	nop	
 13484  001CDE  F000               	nop	
 13485  001CE0  F000               	nop	
 13486  001CE2  F000               	nop	
 13487  001CE4  F000               	nop	
 13488  001CE6  F000               	nop	
 13489  001CE8  F000               	nop	
 13490  001CEA  F000               	nop	
 13491  001CEC  F000               	nop	
 13492  001CEE  F000               	nop	
 13493  001CF0  F000               	nop	
 13494                           
 13495                           ;i2c.c: 114: if((PORTC & (1<<4))){
 13496  001CF2  A882               	btfss	3970,4,c	;volatile
 13497  001CF4  D002               	goto	l898
 13498                           
 13499                           ;i2c.c: 115: ret|=1;
 13500  001CF6  0100               	movlb	0	; () banked
 13501  001CF8  81D9               	bsf	iic_received_byte@ret& (0+255),0,b
 13502  001CFA                     l898:
 13503  001CFA  0100               	movlb	0	; () banked
 13504  001CFC  2BDA               	incf	iic_received_byte@i& (0+255),f,b
 13505  001CFE  D7D7               	goto	l8257
 13506  001D00                     l8321:
 13507                           
 13508                           ; BSR set to: 0
 13509  001D00  968B               	bcf	3979,3,c	;volatile
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;i2c.c: 119: return ret;
 13513                           
 13514                           ; BSR set to: 0
 13515  001D02  0100               	movlb	0	; () banked
 13516  001D04  51D9               	movf	iic_received_byte@ret& (0+255),w,b
 13517  001D06  0012               	return	
 13518  001D08                     __end_of_iic_received_byte:
 13519                           	opt stack 0
 13520                           tosu	equ	0xFFF
 13521                           tosh	equ	0xFFE
 13522                           tosl	equ	0xFFD
 13523                           pclath	equ	0xFFA
 13524                           tblptru	equ	0xFF8
 13525                           tblptrh	equ	0xFF7
 13526                           tblptrl	equ	0xFF6
 13527                           tablat	equ	0xFF5
 13528                           prodh	equ	0xFF4
 13529                           prodl	equ	0xFF3
 13530                           intcon	equ	0xFF2
 13531                           indf0	equ	0xFEF
 13532                           postinc0	equ	0xFEE
 13533                           fsr0h	equ	0xFEA
 13534                           fsr0l	equ	0xFE9
 13535                           wreg	equ	0xFE8
 13536                           postdec1	equ	0xFE5
 13537                           plusw1	equ	0xFE3
 13538                           fsr1h	equ	0xFE2
 13539                           fsr1l	equ	0xFE1
 13540                           indf2	equ	0xFDF
 13541                           postinc2	equ	0xFDE
 13542                           postdec2	equ	0xFDD
 13543                           plusw2	equ	0xFDB
 13544                           fsr2h	equ	0xFDA
 13545                           fsr2l	equ	0xFD9
 13546                           status	equ	0xFD8
 13547                           
 13548 ;; *************** function _ads1115_init_all_chip *****************
 13549 ;; Defined at:
 13550 ;;		line 112 in file "src/driver/ads1115.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;		None
 13553 ;; Auto vars:     Size  Location     Type
 13554 ;;		None
 13555 ;; Return value:  Size  Location     Type
 13556 ;;                  1    wreg      void 
 13557 ;; Registers used:
 13558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13559 ;; Tracked objects:
 13560 ;;		On entry : 0/0
 13561 ;;		On exit  : 0/0
 13562 ;;		Unchanged: 0/0
 13563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;Total ram usage:        0 bytes
 13569 ;; Hardware stack levels used:    1
 13570 ;; Hardware stack levels required when called:    5
 13571 ;; This function calls:
 13572 ;;		_ads1115_init
 13573 ;; This function is called by:
 13574 ;;		_main
 13575 ;; This function uses a non-reentrant model
 13576 ;;
 13577                           
 13578                           	psect	text81
 13579  002438                     __ptext81:
 13580                           	opt stack 0
 13581  002438                     _ads1115_init_all_chip:
 13582                           	opt stack 25
 13583                           
 13584                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;incstack = 0
 13588  002438  0EB2               	movlw	low _ads1115Chip0
 13589  00243A  6E27               	movwf	_pAds1115PrObj,c
 13590  00243C  0E01               	movlw	high _ads1115Chip0
 13591  00243E  6E28               	movwf	_pAds1115PrObj+1,c
 13592                           
 13593                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 13594  002440  C027  F0D9         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 13595  002444  C028  F0DA         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 13596  002448  0E90               	movlw	144
 13597  00244A  0100               	movlb	0	; () banked
 13598  00244C  6FDB               	movwf	ads1115_init@slvaddr& (0+255),b
 13599  00244E  EC39  F009         	call	_ads1115_init	;wreg free
 13600                           
 13601                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 13602  002452  0EA2               	movlw	low _ads1115Chip1
 13603  002454  6E2B               	movwf	_pAds1115DiffPrObj,c
 13604  002456  0E01               	movlw	high _ads1115Chip1
 13605  002458  6E2C               	movwf	_pAds1115DiffPrObj+1,c
 13606                           
 13607                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 13608  00245A  C02B  F0D9         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 13609  00245E  C02C  F0DA         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 13610  002462  0E92               	movlw	146
 13611  002464  0100               	movlb	0	; () banked
 13612  002466  6FDB               	movwf	ads1115_init@slvaddr& (0+255),b
 13613  002468  EC39  F009         	call	_ads1115_init	;wreg free
 13614  00246C  0012               	return		;funcret
 13615  00246E                     __end_of_ads1115_init_all_chip:
 13616                           	opt stack 0
 13617                           tosu	equ	0xFFF
 13618                           tosh	equ	0xFFE
 13619                           tosl	equ	0xFFD
 13620                           pclath	equ	0xFFA
 13621                           tblptru	equ	0xFF8
 13622                           tblptrh	equ	0xFF7
 13623                           tblptrl	equ	0xFF6
 13624                           tablat	equ	0xFF5
 13625                           prodh	equ	0xFF4
 13626                           prodl	equ	0xFF3
 13627                           intcon	equ	0xFF2
 13628                           indf0	equ	0xFEF
 13629                           postinc0	equ	0xFEE
 13630                           fsr0h	equ	0xFEA
 13631                           fsr0l	equ	0xFE9
 13632                           wreg	equ	0xFE8
 13633                           postdec1	equ	0xFE5
 13634                           plusw1	equ	0xFE3
 13635                           fsr1h	equ	0xFE2
 13636                           fsr1l	equ	0xFE1
 13637                           indf2	equ	0xFDF
 13638                           postinc2	equ	0xFDE
 13639                           postdec2	equ	0xFDD
 13640                           plusw2	equ	0xFDB
 13641                           fsr2h	equ	0xFDA
 13642                           fsr2l	equ	0xFD9
 13643                           status	equ	0xFD8
 13644                           
 13645 ;; *************** function _ads1115_init *****************
 13646 ;; Defined at:
 13647 ;;		line 5 in file "src/driver/ads1115.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 13650 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 13651 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;		None
 13654 ;; Return value:  Size  Location     Type
 13655 ;;                  1    wreg      void 
 13656 ;; Registers used:
 13657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13663 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;Total ram usage:        3 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; Hardware stack levels required when called:    4
 13670 ;; This function calls:
 13671 ;;		Nothing
 13672 ;; This function is called by:
 13673 ;;		_ads1115_init_all_chip
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           	psect	text82
 13678  001272                     __ptext82:
 13679                           	opt stack 0
 13680  001272                     _ads1115_init:
 13681                           	opt stack 25
 13682                           
 13683                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 13684                           
 13685                           ;incstack = 0
 13686  001272  C0D9  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 13687  001276  C0DA  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 13688  00127A  0E05               	movlw	5
 13689  00127C  6EDF               	movwf	indf2,c
 13690                           
 13691                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 13692  00127E  0100               	movlb	0	; () banked
 13693  001280  EE20 F001          	lfsr	2,1
 13694  001284  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13695  001286  26D9               	addwf	fsr2l,f,c
 13696  001288  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13697  00128A  22DA               	addwfc	fsr2h,f,c
 13698  00128C  C0DB  FFDF         	movff	ads1115_init@slvaddr,indf2
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 13702  001290  0100               	movlb	0	; () banked
 13703  001292  EE20 F002          	lfsr	2,2
 13704  001296  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13705  001298  26D9               	addwf	fsr2l,f,c
 13706  00129A  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13707  00129C  22DA               	addwfc	fsr2h,f,c
 13708  00129E  0E83               	movlw	131
 13709  0012A0  6EDE               	movwf	postinc2,c
 13710  0012A2  0E85               	movlw	133
 13711  0012A4  6EDD               	movwf	postdec2,c
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 13715  0012A6  0100               	movlb	0	; () banked
 13716  0012A8  EE20 F006          	lfsr	2,6
 13717  0012AC  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13718  0012AE  26D9               	addwf	fsr2l,f,c
 13719  0012B0  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13720  0012B2  22DA               	addwfc	fsr2h,f,c
 13721  0012B4  0ED8               	movlw	low _iic_start
 13722  0012B6  6EDE               	movwf	postinc2,c
 13723  0012B8  0E22               	movlw	high _iic_start
 13724  0012BA  6EDD               	movwf	postdec2,c
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 13728  0012BC  0100               	movlb	0	; () banked
 13729  0012BE  EE20 F008          	lfsr	2,8
 13730  0012C2  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13731  0012C4  26D9               	addwf	fsr2l,f,c
 13732  0012C6  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13733  0012C8  22DA               	addwfc	fsr2h,f,c
 13734  0012CA  0E8E               	movlw	low _iic_stop
 13735  0012CC  6EDE               	movwf	postinc2,c
 13736  0012CE  0E23               	movlw	high _iic_stop
 13737  0012D0  6EDD               	movwf	postdec2,c
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 13741  0012D2  0100               	movlb	0	; () banked
 13742  0012D4  EE20 F00A          	lfsr	2,10
 13743  0012D8  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13744  0012DA  26D9               	addwf	fsr2l,f,c
 13745  0012DC  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13746  0012DE  22DA               	addwfc	fsr2h,f,c
 13747  0012E0  0EC8               	movlw	low _iic_send_byte
 13748  0012E2  6EDE               	movwf	postinc2,c
 13749  0012E4  0E1B               	movlw	high _iic_send_byte
 13750  0012E6  6EDD               	movwf	postdec2,c
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 13754  0012E8  0100               	movlb	0	; () banked
 13755  0012EA  EE20 F00C          	lfsr	2,12
 13756  0012EE  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13757  0012F0  26D9               	addwf	fsr2l,f,c
 13758  0012F2  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13759  0012F4  22DA               	addwfc	fsr2h,f,c
 13760  0012F6  0E88               	movlw	low _iic_waite_ack
 13761  0012F8  6EDE               	movwf	postinc2,c
 13762  0012FA  0E1E               	movlw	high _iic_waite_ack
 13763  0012FC  6EDD               	movwf	postdec2,c
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 13767  0012FE  0100               	movlb	0	; () banked
 13768  001300  EE20 F00E          	lfsr	2,14
 13769  001304  51D9               	movf	ads1115_init@pAds1115& (0+255),w,b
 13770  001306  26D9               	addwf	fsr2l,f,c
 13771  001308  51DA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 13772  00130A  22DA               	addwfc	fsr2h,f,c
 13773  00130C  0E46               	movlw	low _iic_received_byte_if_ack
 13774  00130E  6EDE               	movwf	postinc2,c
 13775  001310  0E27               	movlw	high _iic_received_byte_if_ack
 13776  001312  6EDD               	movwf	postdec2,c
 13777                           
 13778                           ; BSR set to: 0
 13779  001314  0012               	return		;funcret
 13780  001316                     __end_of_ads1115_init:
 13781                           	opt stack 0
 13782                           tosu	equ	0xFFF
 13783                           tosh	equ	0xFFE
 13784                           tosl	equ	0xFFD
 13785                           pclath	equ	0xFFA
 13786                           tblptru	equ	0xFF8
 13787                           tblptrh	equ	0xFF7
 13788                           tblptrl	equ	0xFF6
 13789                           tablat	equ	0xFF5
 13790                           prodh	equ	0xFF4
 13791                           prodl	equ	0xFF3
 13792                           intcon	equ	0xFF2
 13793                           indf0	equ	0xFEF
 13794                           postinc0	equ	0xFEE
 13795                           fsr0h	equ	0xFEA
 13796                           fsr0l	equ	0xFE9
 13797                           wreg	equ	0xFE8
 13798                           postdec1	equ	0xFE5
 13799                           plusw1	equ	0xFE3
 13800                           fsr1h	equ	0xFE2
 13801                           fsr1l	equ	0xFE1
 13802                           indf2	equ	0xFDF
 13803                           postinc2	equ	0xFDE
 13804                           postdec2	equ	0xFDD
 13805                           plusw2	equ	0xFDB
 13806                           fsr2h	equ	0xFDA
 13807                           fsr2l	equ	0xFD9
 13808                           status	equ	0xFD8
 13809                           
 13810 ;; *************** function _handler_interrupt_low *****************
 13811 ;; Defined at:
 13812 ;;		line 38 in file "src/soc/int.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, status,2, status,0, cstack
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13828 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13829 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13830 ;;Total ram usage:       17 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    3
 13833 ;; This function calls:
 13834 ;;		_rtc_alrm_irq_hook
 13835 ;;		_sys_ticker_irq_hook
 13836 ;; This function is called by:
 13837 ;;		Interrupt level 1
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           	psect	intcodelo
 13842  000018                     __pintcodelo:
 13843                           	opt stack 0
 13844  000018                     _handler_interrupt_low:
 13845                           	opt stack 17
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;incstack = 0
 13849  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13850  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 13851  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 13852  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 13853  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 13854  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 13855  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 13856  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 13857  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 13858  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 13859  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 13860  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 13861  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 13862  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 13863  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 13864  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 13865  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 13866  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 13867                           
 13868                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 13869  00005E  B29D               	btfsc	3997,1,c	;volatile
 13870  000060  A29E               	btfss	3998,1,c	;volatile
 13871  000062  D00E               	goto	i1l7615
 13872  000064  B29F               	btfsc	3999,1,c	;volatile
 13873  000066  D00C               	goto	i1l7615
 13874                           
 13875                           ;int.c: 41: PIR1bits.TMR2IF=0;
 13876  000068  929E               	bcf	3998,1,c	;volatile
 13877                           
 13878                           ;int.c: 42: glTicker++;
 13879  00006A  0E01               	movlw	1
 13880  00006C  0100               	movlb	0	; () banked
 13881  00006E  278A               	addwf	_glTicker& (0+255),f,b	;volatile
 13882  000070  0E00               	movlw	0
 13883  000072  238B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 13884  000074  238C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 13885  000076  238D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;int.c: 43: glbEvent |= (0x01);
 13889  000078  0100               	movlb	0	; () banked
 13890  00007A  81C4               	bsf	_glbEvent& (0+255),0,b	;volatile
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;int.c: 44: sys_ticker_irq_hook();
 13894  00007C  ECC2  F013         	call	_sys_ticker_irq_hook	;wreg free
 13895  000080                     i1l7615:
 13896                           
 13897                           ;int.c: 45: }
 13898                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 13899  000080  B0A3               	btfsc	4003,0,c	;volatile
 13900  000082  A0A4               	btfss	4004,0,c	;volatile
 13901  000084  D007               	goto	i1l1509
 13902  000086  B0A5               	btfsc	4005,0,c	;volatile
 13903  000088  D005               	goto	i1l1509
 13904                           
 13905                           ;int.c: 47: PIR3bits.RTCCIF=0;
 13906  00008A  90A4               	bcf	4004,0,c	;volatile
 13907                           
 13908                           ;int.c: 48: glbEvent |= (0x02);
 13909  00008C  0100               	movlb	0	; () banked
 13910  00008E  83C4               	bsf	_glbEvent& (0+255),1,b	;volatile
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;int.c: 49: rtc_alrm_irq_hook();
 13914  000090  EC08  F014         	call	_rtc_alrm_irq_hook	;wreg free
 13915  000094                     i1l1509:
 13916  000094  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 13917  000098  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 13918  00009C  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 13919  0000A0  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 13920  0000A4  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 13921  0000A8  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 13922  0000AC  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 13923  0000B0  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 13924  0000B4  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 13925  0000B8  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 13926  0000BC  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 13927  0000C0  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 13928  0000C4  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 13929  0000C8  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 13930  0000CC  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 13931  0000D0  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 13932  0000D4  C00F  FFD8         	movff	??_handler_interrupt_low,status
 13933  0000D8  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13934  0000DA  0010               	retfie	
 13935  0000DC                     __end_of_handler_interrupt_low:
 13936                           	opt stack 0
 13937                           tosu	equ	0xFFF
 13938                           tosh	equ	0xFFE
 13939                           tosl	equ	0xFFD
 13940                           pclatu	equ	0xFFB
 13941                           pclath	equ	0xFFA
 13942                           tblptru	equ	0xFF8
 13943                           tblptrh	equ	0xFF7
 13944                           tblptrl	equ	0xFF6
 13945                           tablat	equ	0xFF5
 13946                           prodh	equ	0xFF4
 13947                           prodl	equ	0xFF3
 13948                           intcon	equ	0xFF2
 13949                           indf0	equ	0xFEF
 13950                           postinc0	equ	0xFEE
 13951                           fsr0h	equ	0xFEA
 13952                           fsr0l	equ	0xFE9
 13953                           wreg	equ	0xFE8
 13954                           postdec1	equ	0xFE5
 13955                           plusw1	equ	0xFE3
 13956                           fsr1h	equ	0xFE2
 13957                           fsr1l	equ	0xFE1
 13958                           bsr	equ	0xFE0
 13959                           indf2	equ	0xFDF
 13960                           postinc2	equ	0xFDE
 13961                           postdec2	equ	0xFDD
 13962                           plusw2	equ	0xFDB
 13963                           fsr2h	equ	0xFDA
 13964                           fsr2l	equ	0xFD9
 13965                           status	equ	0xFD8
 13966                           
 13967 ;; *************** function _sys_ticker_irq_hook *****************
 13968 ;; Defined at:
 13969 ;;		line 38 in file "src/soc/ticker.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;		None
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;		None
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      void 
 13976 ;; Registers used:
 13977 ;;		wreg, status,2, status,0
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;Total ram usage:        0 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:    2
 13990 ;; This function calls:
 13991 ;;		Nothing
 13992 ;; This function is called by:
 13993 ;;		_handler_interrupt_low
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text84
 13998  002784                     __ptext84:
 13999                           	opt stack 0
 14000  002784                     _sys_ticker_irq_hook:
 14001                           	opt stack 17
 14002                           
 14003                           ;ticker.c: 40: if(dlyTickerEn){
 14004                           
 14005                           ;incstack = 0
 14006  002784  5033               	movf	_dlyTickerEn,w,c
 14007  002786  B4D8               	btfsc	status,2,c
 14008  002788  D004               	goto	i1l1608
 14009                           
 14010                           ;ticker.c: 41: dlyTicker+=10;
 14011  00278A  0E0A               	movlw	10
 14012  00278C  2625               	addwf	_dlyTicker,f,c
 14013  00278E  0E00               	movlw	0
 14014  002790  2226               	addwfc	_dlyTicker+1,f,c
 14015  002792                     i1l1608:
 14016                           
 14017                           ;ticker.c: 42: }
 14018                           ;ticker.c: 43: userTicker_ms+=10;
 14019  002792  0E0A               	movlw	10
 14020  002794  262D               	addwf	_userTicker_ms,f,c	;volatile
 14021  002796  0E00               	movlw	0
 14022  002798  222E               	addwfc	_userTicker_ms+1,f,c	;volatile
 14023  00279A  0012               	return		;funcret
 14024  00279C                     __end_of_sys_ticker_irq_hook:
 14025                           	opt stack 0
 14026                           tosu	equ	0xFFF
 14027                           tosh	equ	0xFFE
 14028                           tosl	equ	0xFFD
 14029                           pclatu	equ	0xFFB
 14030                           pclath	equ	0xFFA
 14031                           tblptru	equ	0xFF8
 14032                           tblptrh	equ	0xFF7
 14033                           tblptrl	equ	0xFF6
 14034                           tablat	equ	0xFF5
 14035                           prodh	equ	0xFF4
 14036                           prodl	equ	0xFF3
 14037                           intcon	equ	0xFF2
 14038                           indf0	equ	0xFEF
 14039                           postinc0	equ	0xFEE
 14040                           fsr0h	equ	0xFEA
 14041                           fsr0l	equ	0xFE9
 14042                           wreg	equ	0xFE8
 14043                           postdec1	equ	0xFE5
 14044                           plusw1	equ	0xFE3
 14045                           fsr1h	equ	0xFE2
 14046                           fsr1l	equ	0xFE1
 14047                           bsr	equ	0xFE0
 14048                           indf2	equ	0xFDF
 14049                           postinc2	equ	0xFDE
 14050                           postdec2	equ	0xFDD
 14051                           plusw2	equ	0xFDB
 14052                           fsr2h	equ	0xFDA
 14053                           fsr2l	equ	0xFD9
 14054                           status	equ	0xFD8
 14055                           
 14056 ;; *************** function _rtc_alrm_irq_hook *****************
 14057 ;; Defined at:
 14058 ;;		line 103 in file "src/soc/rtc.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;		None
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;		None
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      void 
 14065 ;; Registers used:
 14066 ;;		None
 14067 ;; Tracked objects:
 14068 ;;		On entry : 0/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;Total ram usage:        0 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:    2
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_handler_interrupt_low
 14083 ;; This function uses a non-reentrant model
 14084 ;;
 14085                           
 14086                           	psect	text85
 14087  002810                     __ptext85:
 14088                           	opt stack 0
 14089  002810                     _rtc_alrm_irq_hook:
 14090                           	opt stack 17
 14091                           
 14092                           ;incstack = 0
 14093  002810  0012               	return		;funcret
 14094  002812                     __end_of_rtc_alrm_irq_hook:
 14095                           	opt stack 0
 14096                           tosu	equ	0xFFF
 14097                           tosh	equ	0xFFE
 14098                           tosl	equ	0xFFD
 14099                           pclatu	equ	0xFFB
 14100                           pclath	equ	0xFFA
 14101                           tblptru	equ	0xFF8
 14102                           tblptrh	equ	0xFF7
 14103                           tblptrl	equ	0xFF6
 14104                           tablat	equ	0xFF5
 14105                           prodh	equ	0xFF4
 14106                           prodl	equ	0xFF3
 14107                           intcon	equ	0xFF2
 14108                           indf0	equ	0xFEF
 14109                           postinc0	equ	0xFEE
 14110                           fsr0h	equ	0xFEA
 14111                           fsr0l	equ	0xFE9
 14112                           wreg	equ	0xFE8
 14113                           postdec1	equ	0xFE5
 14114                           plusw1	equ	0xFE3
 14115                           fsr1h	equ	0xFE2
 14116                           fsr1l	equ	0xFE1
 14117                           bsr	equ	0xFE0
 14118                           indf2	equ	0xFDF
 14119                           postinc2	equ	0xFDE
 14120                           postdec2	equ	0xFDD
 14121                           plusw2	equ	0xFDB
 14122                           fsr2h	equ	0xFDA
 14123                           fsr2l	equ	0xFD9
 14124                           status	equ	0xFD8
 14125                           
 14126 ;; *************** function _handler_interrupt_hight *****************
 14127 ;; Defined at:
 14128 ;;		line 9 in file "src/soc/int.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;		None
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      void 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0, cstack
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;Total ram usage:       14 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    1
 14149 ;; This function calls:
 14150 ;;		i2_rtc_alrm_irq_hook
 14151 ;;		i2_sys_ticker_irq_hook
 14152 ;; This function is called by:
 14153 ;;		Interrupt level 2
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           	psect	intcode
 14158  000008                     __pintcode:
 14159                           	opt stack 0
 14160  000008                     _handler_interrupt_hight:
 14161                           	opt stack 17
 14162                           
 14163                           ;incstack = 0
 14164  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14165  00000A  EFDE  F005         	goto	int_func
 14166                           tosu	equ	0xFFF
 14167                           tosh	equ	0xFFE
 14168                           tosl	equ	0xFFD
 14169                           pclatu	equ	0xFFB
 14170                           pclath	equ	0xFFA
 14171                           tblptru	equ	0xFF8
 14172                           tblptrh	equ	0xFF7
 14173                           tblptrl	equ	0xFF6
 14174                           tablat	equ	0xFF5
 14175                           prodh	equ	0xFF4
 14176                           prodl	equ	0xFF3
 14177                           intcon	equ	0xFF2
 14178                           indf0	equ	0xFEF
 14179                           postinc0	equ	0xFEE
 14180                           fsr0h	equ	0xFEA
 14181                           fsr0l	equ	0xFE9
 14182                           wreg	equ	0xFE8
 14183                           postdec1	equ	0xFE5
 14184                           plusw1	equ	0xFE3
 14185                           fsr1h	equ	0xFE2
 14186                           fsr1l	equ	0xFE1
 14187                           bsr	equ	0xFE0
 14188                           indf2	equ	0xFDF
 14189                           postinc2	equ	0xFDE
 14190                           postdec2	equ	0xFDD
 14191                           plusw2	equ	0xFDB
 14192                           fsr2h	equ	0xFDA
 14193                           fsr2l	equ	0xFD9
 14194                           status	equ	0xFD8
 14195                           
 14196                           	psect	intcode_body
 14197  000BBC                     __pintcode_body:
 14198                           	opt stack 17
 14199  000BBC                     int_func:
 14200                           	opt stack 17
 14201  000BBC  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 14202  000BC0  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 14203  000BC4  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 14204  000BC8  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 14205  000BCC  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 14206  000BD0  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 14207  000BD4  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 14208  000BD8  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 14209  000BDC  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 14210  000BE0  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 14211  000BE4  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 14212  000BE8  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 14213  000BEC  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 14214  000BF0  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 14215                           
 14216                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 14217  000BF4  BAF2               	btfsc	intcon,5,c	;volatile
 14218  000BF6  A4F2               	btfss	intcon,2,c	;volatile
 14219  000BF8  D002               	goto	i2l1498
 14220  000BFA  B4F1               	btfsc	intcon2,2,c	;volatile
 14221                           
 14222                           ;int.c: 13: __nop();
 14223  000BFC  F000               	nop	
 14224  000BFE                     i2l1498:
 14225                           
 14226                           ;int.c: 14: }
 14227                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 14228  000BFE  BCF2               	btfsc	intcon,6,c	;volatile
 14229  000C00  A89D               	btfss	3997,4,c	;volatile
 14230  000C02  D001               	goto	i2l1499
 14231  000C04  509E               	movf	3998,w,c	;volatile
 14232  000C06                     i2l1499:
 14233                           
 14234                           ;int.c: 17: }
 14235                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 14236  000C06  BCF2               	btfsc	intcon,6,c	;volatile
 14237  000C08  AA9D               	btfss	3997,5,c	;volatile
 14238  000C0A  D001               	goto	i2l1500
 14239  000C0C  509E               	movf	3998,w,c	;volatile
 14240  000C0E                     i2l1500:
 14241                           
 14242                           ;int.c: 20: }
 14243                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 14244  000C0E  BCF2               	btfsc	intcon,6,c	;volatile
 14245  000C10  A09D               	btfss	3997,0,c	;volatile
 14246  000C12  D001               	goto	i2l1501
 14247  000C14  509E               	movf	3998,w,c	;volatile
 14248  000C16                     i2l1501:
 14249                           
 14250                           ;int.c: 23: }
 14251                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 14252  000C16  B29D               	btfsc	3997,1,c	;volatile
 14253  000C18  A29E               	btfss	3998,1,c	;volatile
 14254  000C1A  D00E               	goto	i2l7589
 14255  000C1C  A29F               	btfss	3999,1,c	;volatile
 14256  000C1E  D00C               	goto	i2l7589
 14257                           
 14258                           ;int.c: 26: PIR1bits.TMR2IF=0;
 14259  000C20  929E               	bcf	3998,1,c	;volatile
 14260                           
 14261                           ;int.c: 27: glTicker++;
 14262  000C22  0E01               	movlw	1
 14263  000C24  0100               	movlb	0	; () banked
 14264  000C26  278A               	addwf	_glTicker& (0+255),f,b	;volatile
 14265  000C28  0E00               	movlw	0
 14266  000C2A  238B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 14267  000C2C  238C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 14268  000C2E  238D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;int.c: 28: glbEvent |= (0x01);
 14272  000C30  0100               	movlb	0	; () banked
 14273  000C32  81C4               	bsf	_glbEvent& (0+255),0,b	;volatile
 14274                           
 14275                           ; BSR set to: 0
 14276                           ;int.c: 29: sys_ticker_irq_hook();
 14277  000C34  ECCE  F013         	call	i2_sys_ticker_irq_hook	;wreg free
 14278  000C38                     i2l7589:
 14279                           
 14280                           ;int.c: 30: }
 14281                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 14282  000C38  B0A3               	btfsc	4003,0,c	;volatile
 14283  000C3A  A0A4               	btfss	4004,0,c	;volatile
 14284  000C3C  D007               	goto	i2l1504
 14285  000C3E  A0A5               	btfss	4005,0,c	;volatile
 14286  000C40  D005               	goto	i2l1504
 14287                           
 14288                           ;int.c: 32: PIR3bits.RTCCIF=0;
 14289  000C42  90A4               	bcf	4004,0,c	;volatile
 14290                           
 14291                           ;int.c: 33: glbEvent |= (0x02);
 14292  000C44  0100               	movlb	0	; () banked
 14293  000C46  83C4               	bsf	_glbEvent& (0+255),1,b	;volatile
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;int.c: 34: rtc_alrm_irq_hook();
 14297  000C48  EC09  F014         	call	i2_rtc_alrm_irq_hook	;wreg free
 14298  000C4C                     i2l1504:
 14299  000C4C  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 14300  000C50  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 14301  000C54  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 14302  000C58  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 14303  000C5C  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 14304  000C60  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 14305  000C64  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 14306  000C68  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 14307  000C6C  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 14308  000C70  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 14309  000C74  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 14310  000C78  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 14311  000C7C  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 14312  000C80  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 14313  000C84  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14314  000C86  0011               	retfie		f
 14315  000C88                     __end_of_handler_interrupt_hight:
 14316                           	opt stack 0
 14317                           tosu	equ	0xFFF
 14318                           tosh	equ	0xFFE
 14319                           tosl	equ	0xFFD
 14320                           pclatu	equ	0xFFB
 14321                           pclath	equ	0xFFA
 14322                           tblptru	equ	0xFF8
 14323                           tblptrh	equ	0xFF7
 14324                           tblptrl	equ	0xFF6
 14325                           tablat	equ	0xFF5
 14326                           prodh	equ	0xFF4
 14327                           prodl	equ	0xFF3
 14328                           intcon	equ	0xFF2
 14329                           intcon2	equ	0xFF1
 14330                           indf0	equ	0xFEF
 14331                           postinc0	equ	0xFEE
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           postdec1	equ	0xFE5
 14336                           plusw1	equ	0xFE3
 14337                           fsr1h	equ	0xFE2
 14338                           fsr1l	equ	0xFE1
 14339                           bsr	equ	0xFE0
 14340                           indf2	equ	0xFDF
 14341                           postinc2	equ	0xFDE
 14342                           postdec2	equ	0xFDD
 14343                           plusw2	equ	0xFDB
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           
 14348 ;; *************** function i2_sys_ticker_irq_hook *****************
 14349 ;; Defined at:
 14350 ;;		line 38 in file "src/soc/ticker.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14368 ;;Total ram usage:        0 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; This function calls:
 14371 ;;		Nothing
 14372 ;; This function is called by:
 14373 ;;		_handler_interrupt_hight
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text87
 14378  00279C                     __ptext87:
 14379                           	opt stack 0
 14380  00279C                     i2_sys_ticker_irq_hook:
 14381                           	opt stack 17
 14382                           
 14383                           ;ticker.c: 40: if(dlyTickerEn){
 14384                           
 14385                           ;incstack = 0
 14386  00279C  5033               	movf	_dlyTickerEn,w,c
 14387  00279E  B4D8               	btfsc	status,2,c
 14388  0027A0  D004               	goto	i2l1608
 14389                           
 14390                           ;ticker.c: 41: dlyTicker+=10;
 14391  0027A2  0E0A               	movlw	10
 14392  0027A4  2625               	addwf	_dlyTicker,f,c
 14393  0027A6  0E00               	movlw	0
 14394  0027A8  2226               	addwfc	_dlyTicker+1,f,c
 14395  0027AA                     i2l1608:
 14396                           
 14397                           ;ticker.c: 42: }
 14398                           ;ticker.c: 43: userTicker_ms+=10;
 14399  0027AA  0E0A               	movlw	10
 14400  0027AC  262D               	addwf	_userTicker_ms,f,c	;volatile
 14401  0027AE  0E00               	movlw	0
 14402  0027B0  222E               	addwfc	_userTicker_ms+1,f,c	;volatile
 14403  0027B2  0012               	return		;funcret
 14404  0027B4                     __end_ofi2_sys_ticker_irq_hook:
 14405                           	opt stack 0
 14406                           tosu	equ	0xFFF
 14407                           tosh	equ	0xFFE
 14408                           tosl	equ	0xFFD
 14409                           pclatu	equ	0xFFB
 14410                           pclath	equ	0xFFA
 14411                           tblptru	equ	0xFF8
 14412                           tblptrh	equ	0xFF7
 14413                           tblptrl	equ	0xFF6
 14414                           tablat	equ	0xFF5
 14415                           prodh	equ	0xFF4
 14416                           prodl	equ	0xFF3
 14417                           intcon	equ	0xFF2
 14418                           intcon2	equ	0xFF1
 14419                           indf0	equ	0xFEF
 14420                           postinc0	equ	0xFEE
 14421                           fsr0h	equ	0xFEA
 14422                           fsr0l	equ	0xFE9
 14423                           wreg	equ	0xFE8
 14424                           postdec1	equ	0xFE5
 14425                           plusw1	equ	0xFE3
 14426                           fsr1h	equ	0xFE2
 14427                           fsr1l	equ	0xFE1
 14428                           bsr	equ	0xFE0
 14429                           indf2	equ	0xFDF
 14430                           postinc2	equ	0xFDE
 14431                           postdec2	equ	0xFDD
 14432                           plusw2	equ	0xFDB
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function i2_rtc_alrm_irq_hook *****************
 14438 ;; Defined at:
 14439 ;;		line 103 in file "src/soc/rtc.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;		None
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      void 
 14446 ;; Registers used:
 14447 ;;		None
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;Total ram usage:        0 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_handler_interrupt_hight
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text88
 14467  002812                     __ptext88:
 14468                           	opt stack 0
 14469  002812                     i2_rtc_alrm_irq_hook:
 14470                           	opt stack 17
 14471                           
 14472                           ;incstack = 0
 14473  002812  0012               	return		;funcret
 14474  002814                     __end_ofi2_rtc_alrm_irq_hook:
 14475                           	opt stack 0
 14476                           tosu	equ	0xFFF
 14477                           tosh	equ	0xFFE
 14478                           tosl	equ	0xFFD
 14479                           pclatu	equ	0xFFB
 14480                           pclath	equ	0xFFA
 14481                           tblptru	equ	0xFF8
 14482                           tblptrh	equ	0xFF7
 14483                           tblptrl	equ	0xFF6
 14484                           tablat	equ	0xFF5
 14485                           prodh	equ	0xFF4
 14486                           prodl	equ	0xFF3
 14487                           intcon	equ	0xFF2
 14488                           intcon2	equ	0xFF1
 14489                           indf0	equ	0xFEF
 14490                           postinc0	equ	0xFEE
 14491                           fsr0h	equ	0xFEA
 14492                           fsr0l	equ	0xFE9
 14493                           wreg	equ	0xFE8
 14494                           postdec1	equ	0xFE5
 14495                           plusw1	equ	0xFE3
 14496                           fsr1h	equ	0xFE2
 14497                           fsr1l	equ	0xFE1
 14498                           bsr	equ	0xFE0
 14499                           indf2	equ	0xFDF
 14500                           postinc2	equ	0xFDE
 14501                           postdec2	equ	0xFDD
 14502                           plusw2	equ	0xFDB
 14503                           fsr2h	equ	0xFDA
 14504                           fsr2l	equ	0xFD9
 14505                           status	equ	0xFD8
 14506                           tosu	equ	0xFFF
 14507                           tosh	equ	0xFFE
 14508                           tosl	equ	0xFFD
 14509                           pclatu	equ	0xFFB
 14510                           pclath	equ	0xFFA
 14511                           tblptru	equ	0xFF8
 14512                           tblptrh	equ	0xFF7
 14513                           tblptrl	equ	0xFF6
 14514                           tablat	equ	0xFF5
 14515                           prodh	equ	0xFF4
 14516                           prodl	equ	0xFF3
 14517                           intcon	equ	0xFF2
 14518                           intcon2	equ	0xFF1
 14519                           indf0	equ	0xFEF
 14520                           postinc0	equ	0xFEE
 14521                           fsr0h	equ	0xFEA
 14522                           fsr0l	equ	0xFE9
 14523                           wreg	equ	0xFE8
 14524                           postdec1	equ	0xFE5
 14525                           plusw1	equ	0xFE3
 14526                           fsr1h	equ	0xFE2
 14527                           fsr1l	equ	0xFE1
 14528                           bsr	equ	0xFE0
 14529                           indf2	equ	0xFDF
 14530                           postinc2	equ	0xFDE
 14531                           postdec2	equ	0xFDD
 14532                           plusw2	equ	0xFDB
 14533                           fsr2h	equ	0xFDA
 14534                           fsr2l	equ	0xFD9
 14535                           status	equ	0xFD8
 14536                           
 14537                           	psect	text89
 14538  000000                     __ptext89:
 14539                           	opt stack 0
 14540                           tosu	equ	0xFFF
 14541                           tosh	equ	0xFFE
 14542                           tosl	equ	0xFFD
 14543                           pclatu	equ	0xFFB
 14544                           pclath	equ	0xFFA
 14545                           tblptru	equ	0xFF8
 14546                           tblptrh	equ	0xFF7
 14547                           tblptrl	equ	0xFF6
 14548                           tablat	equ	0xFF5
 14549                           prodh	equ	0xFF4
 14550                           prodl	equ	0xFF3
 14551                           intcon	equ	0xFF2
 14552                           intcon2	equ	0xFF1
 14553                           indf0	equ	0xFEF
 14554                           postinc0	equ	0xFEE
 14555                           fsr0h	equ	0xFEA
 14556                           fsr0l	equ	0xFE9
 14557                           wreg	equ	0xFE8
 14558                           postdec1	equ	0xFE5
 14559                           plusw1	equ	0xFE3
 14560                           fsr1h	equ	0xFE2
 14561                           fsr1l	equ	0xFE1
 14562                           bsr	equ	0xFE0
 14563                           indf2	equ	0xFDF
 14564                           postinc2	equ	0xFDE
 14565                           postdec2	equ	0xFDD
 14566                           plusw2	equ	0xFDB
 14567                           fsr2h	equ	0xFDA
 14568                           fsr2l	equ	0xFD9
 14569                           status	equ	0xFD8
 14570                           
 14571                           	psect	rparam
 14572  0000                     tosu	equ	0xFFF
 14573                           tosh	equ	0xFFE
 14574                           tosl	equ	0xFFD
 14575                           pclatu	equ	0xFFB
 14576                           pclath	equ	0xFFA
 14577                           tblptru	equ	0xFF8
 14578                           tblptrh	equ	0xFF7
 14579                           tblptrl	equ	0xFF6
 14580                           tablat	equ	0xFF5
 14581                           prodh	equ	0xFF4
 14582                           prodl	equ	0xFF3
 14583                           intcon	equ	0xFF2
 14584                           intcon2	equ	0xFF1
 14585                           indf0	equ	0xFEF
 14586                           postinc0	equ	0xFEE
 14587                           fsr0h	equ	0xFEA
 14588                           fsr0l	equ	0xFE9
 14589                           wreg	equ	0xFE8
 14590                           postdec1	equ	0xFE5
 14591                           plusw1	equ	0xFE3
 14592                           fsr1h	equ	0xFE2
 14593                           fsr1l	equ	0xFE1
 14594                           bsr	equ	0xFE0
 14595                           indf2	equ	0xFDF
 14596                           postinc2	equ	0xFDE
 14597                           postdec2	equ	0xFDD
 14598                           plusw2	equ	0xFDB
 14599                           fsr2h	equ	0xFDA
 14600                           fsr2l	equ	0xFD9
 14601                           status	equ	0xFD8
 14602                           
 14603                           	psect	temp
 14604  000040                     btemp:
 14605                           	opt stack 0
 14606  000040                     	ds	1
 14607  0000                     int$flags	set	btemp
 14608                           tosu	equ	0xFFF
 14609                           tosh	equ	0xFFE
 14610                           tosl	equ	0xFFD
 14611                           pclatu	equ	0xFFB
 14612                           pclath	equ	0xFFA
 14613                           tblptru	equ	0xFF8
 14614                           tblptrh	equ	0xFF7
 14615                           tblptrl	equ	0xFF6
 14616                           tablat	equ	0xFF5
 14617                           prodh	equ	0xFF4
 14618                           prodl	equ	0xFF3
 14619                           intcon	equ	0xFF2
 14620                           intcon2	equ	0xFF1
 14621                           indf0	equ	0xFEF
 14622                           postinc0	equ	0xFEE
 14623                           fsr0h	equ	0xFEA
 14624                           fsr0l	equ	0xFE9
 14625                           wreg	equ	0xFE8
 14626                           postdec1	equ	0xFE5
 14627                           plusw1	equ	0xFE3
 14628                           fsr1h	equ	0xFE2
 14629                           fsr1l	equ	0xFE1
 14630                           bsr	equ	0xFE0
 14631                           indf2	equ	0xFDF
 14632                           postinc2	equ	0xFDE
 14633                           postdec2	equ	0xFDD
 14634                           plusw2	equ	0xFDB
 14635                           fsr2h	equ	0xFDA
 14636                           fsr2l	equ	0xFD9
 14637                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    1617
    Data        16
    BSS         1063
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     23     160
    BANK1           256     19     256
    BANK2           256      3     165
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(BANK1[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK1[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(BANK1[10]), ui_disp_start_cs600@buf(BANK1[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S772$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S772$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S772$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S772$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S772$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), NULL(NULL[0]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK2[1]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK0[11]), NULL(NULL[0]), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S58$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S58$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S58$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S58$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S58$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _main->_in_adc_start_and_read
    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _ui_disp_rtc_mm_ss->_m_int8_2_hex
    _ui_disp_rtc_mm_ss->_rtc_get
    _lcd_disp_level->_lcd_disp_level_bar
    _key_process->_key_waite_release
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _key_adj_value_fixed_point->___exp_10
    ___wmul->___exp_10
    ___lwmod->___exp_10
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_pose
    _key_process_down->_key_shift_loc_fixed_point
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_rtc_mm_ss->_lcd_show_string
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _m_int16_2_str_4->___awdiv
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _delay_ms->_delay_us
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    ___wmul->___exp_10
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_base_zero
    ___enter_menu_set_base_zero->___int32_2_mflot32
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc_fixed_point
    _in_adc_start_and_read->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    ___enter_menu_set_base_zero->___int32_2_mflot32

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_key_process

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1469477
                                             17 BANK1      2     2      0
              _ads1115_init_all_chip
            _ads1115_read_conversion
                   _ads1115_read_reg
           _ads1115_start_conversion
                        _in_adc_init
              _in_adc_start_and_read
                        _key_polling
                        _key_process
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                         _ticker_dly
                  _ui_disp_rtc_mm_ss
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522248
                                              0 BANK1      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _ui_disp_rtc_mm_ss                                   11    11      0  349708
                                              0 BANK1     11    11      0
                     _lcd_disp_level
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                       _m_int8_2_hex
                            _rtc_get
 ---------------------------------------------------------------------------------
 (2) _rtc_get                                              1     1      0       3
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                             18 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             31 COMRAM     1     0      1
                                             16 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0  559506
                                              0 BANK2      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0  553420
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  553420
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  553420
                                              0 BANK1     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  317629
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string                                      3     1      2  230976
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_show_dp                                          2     1      1   86653
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    3062
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1153
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     614
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4    1305
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0     998
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2     822
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0    3075
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_adj_value_fixed_point                            7     4      3    3075
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1672
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_set_down_long                            2     2      0    1077
                                              8 BANK1      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_pose                                3     3      0      34
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           2     2      0    1009
                                             21 BANK0      2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___int32_2_mflot32                                   16    12      4     975
                                             13 BANK0      8     4      4
                                              0 BANK1      8     8      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc_fixed_point                            5     1      4     527
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _in_adc_start_and_read                                6     4      2     412
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2     338
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ads1115_start_conversion                             2     0      2    1799
                                              7 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (2) _ads1115_write_reg                                    5     0      5    1287
                                              2 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_conversion                              5     3      2    1698
                                             10 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_reg                                     6     3      3    1149
                                              4 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _iic_send_byte                                        2     2      0     167
                                              0 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (4) _iic_waite_ack                                        1     1      0      65
                                             31 COMRAM     1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (3) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _iic_received_byte_if_ack                             2     2      0     207
                                              2 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (3) _iic_send_ack                                         1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _iic_received_byte                                    2     2      0     108
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _ads1115_read_conversion
     _ads1115_read_reg
       _iic_received_byte_if_ack *
         _iic_received_byte
         _iic_send_ack
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _ads1115_read_reg
     _iic_received_byte_if_ack *
       _iic_received_byte
       _iic_send_ack
     _iic_send_byte *
       _iic_waite_ack
         _iic_stop
     _iic_start *
     _iic_stop *
   _ads1115_start_conversion
     _ads1115_write_reg
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _in_adc_init
   _in_adc_start_and_read
     _delay_us
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       _key_shift_loc_fixed_point
     _key_process_set
     _key_process_set_down_long
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
       ___enter_menu_set_pose
     _key_process_set_long
     _key_process_up
       _key_adj_value_fixed_point
         ___exp_10
         ___lwdiv
           ___exp_10 (ARG)
         ___lwmod
           ___exp_10 (ARG)
           ___lwdiv (ARG)
             ___exp_10 (ARG)
         ___wmul
           ___exp_10 (ARG)
     _key_waite_release
       _key_polling
         _delay_ms
           _delay_us
     _ui_disp_menu
       _ui_disp_menu_psw_adj
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ticker_dly
   _ui_disp_rtc_mm_ss
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_refresh
     _lcd_show_dp
       _lcd_disp_dp_loc_0
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_1
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_2
         _lcd_set_com_seg
           ___awdiv
     _lcd_show_string
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _rtc_get
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      3      A5       9       64.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     484      12        0.0%
DATA                 0      0     484       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 15 09:58:59 2017

              lcd_show_string_l0@str 00EC                       ?_iic_waite_ack 0001  
              lcd_show_string_l1@str 00EC                         ?_lcd_show_dp 00E9  
                ?_lcd_show_string_l0 00EC                  ?_lcd_show_string_l1 00EC  
         __end_of_rtcc_reg_wr_enable 27FE                         ?_in_adc_init 0001  
                      ?_m_int8_2_hex 00D9               ??_ui_disp_menu_psw_adj 0021  
                       ___awdiv@sign 00DE                                   bsr 000FE0  
                      ?_lcd_show_chr 00E9                  ___wmul@multiplicand 00DD  
        __end_of_rtcc_reg_wr_disable 280A                    _pAds1115DiffPrObj 002B  
                       __CFG_CP0$OFF 000000                          __CFG_OSC$HS 000000  
                                l850 1EC6                                  l873 1BEE  
                                l865 1BE2                                  l976 1C6A  
                                l977 1C68                                  l898 1CFA  
                                _PR2 000FCB                     ??_key_process_up 0021  
                       ___awmod@sign 00DE                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
          __size_of_ads1115_read_reg 01BC              __end_of___x_arrange_str 1E88  
               ??_lcd_disp_level_bar 0021           ?_key_shift_loc_fixed_point 00D9  
               ??_lcd_show_string_l0 0021                 ??_lcd_show_string_l1 0021  
                 m_int16_2_str_4@buf 00E1                                 l2018 1AE4  
                               l2028 1DC2                                 l1461 23D6  
                               l1613 2608                                 l1965 1040  
                               l8021 0FDA                                 l8103 117C  
                               l8009 23EC                                 l8017 0FC4  
                               l8113 26DA                                 l8019 0FD4  
                               l8051 1F76                                 l8043 1F5E  
                               l8035 1F46                                 l8107 11AA  
                               l8125 2110                                 l8029 102E  
                               l8117 26F0                                 l8127 2112  
                               l8047 1F6A                                 l8039 1F52  
                               l8321 1D00                                 l8081 09B8  
                               l8057 1F82                                 l9041 1A36  
                               l8235 1ECA                                 l8067 092E  
                               l8075 0972                                 l8261 1CB8  
                               l8245 1EE0                                 l8237 1ED2  
                               l8077 098C                                 l8341 1AA0  
                               l8093 1128                                 l9053 1A64  
                               l9045 1A46                                 l8351 1AD6  
                               l8343 1AA6                                 l7711 0E6A  
                               l9119 1266                                 l8257 1CAE  
                               l9129 2184                                 l8361 1D8A  
                               l7713 0E76                                 l7705 0E4C  
                               l7801 25B6                                 l9049 1A54  
                               l9057 1A70                                 l8601 010E  
                               l9073 1400                                 l8339 1A94  
                               l8363 1D90                                 l8427 0B7E  
                               l7731 0ECE                                 l7723 0EAC  
                               l7715 0E7C                                 l7811 1468  
                               l8611 0168                                 l8603 0120  
                               l8525 1BEC                                 l7821 149A  
                               l7813 1472                                 l8453 2544  
                               l8621 01C2                                 l8613 017A  
                               l8605 0132                                 l8701 0480  
                               l9093 11D4                                 l8519 1BD8  
                               l8367 1DB4                                 l8359 1D7E  
                               l7903 1E62                                 l7727 0EBA  
                               l7751 0DDA                                 l7743 0D6A  
                               l7807 2586                                 l7823 14A4  
                               l7815 147C                                 l8631 021C  
                               l8623 01D4                                 l8615 018C  
                               l8607 0144                                 l9087 144A  
                               l8393 1F32                                 l7905 1E64  
                               l7841 1B8A                                 l7833 1B62  
                               l7825 14AE                                 l7817 1486  
                               l8457 254E                                 l8641 0276  
                               l8633 022E                                 l8625 01E6  
                               l8617 019E                                 l8609 0156  
                               l8715 232C                                 l7739 0D60  
                               l7843 1B94                                 l7835 1B6C  
                               l7771 1DD6                                 l7819 1490  
                               l7851 1AF6                                 l8651 02D0  
                               l8643 0288                                 l8635 0240  
                               l8627 01F8                                 l8619 01B0  
                               l8725 2354                                 l8733 2470  
                               l8389 1F28                                 l8397 1F3C  
                               l8717 233C                                 l8709 2320  
                               l7941 078E                                 l7933 21F6  
                               l7837 1B76                                 l7829 14B8  
                               l8661 032A                                 l8653 02E2  
                               l8645 029A                                 l8637 0252  
                               l8629 020A                                 l8813 2526  
                               l8805 21B6                                 l8903 0764  
                               l8751 0EF6                                 l8743 0EE2  
                               l7927 21D4                                 l7839 1B80  
                               l7847 1B9E                                 l7783 1E04  
                               l7775 1DE0                                 l8671 0384  
                               l8663 033C                                 l8655 02F4  
                               l8647 02AC                                 l8639 0264  
                               l9543 0D1E                                 l8729 2372  
                               l8761 0F12                                 l8737 2486  
                               l7881 1368                                 l7873 1342  
                               l7857 1B2C                                 l8681 03DE  
                               l8673 0396                                 l8665 034E  
                               l8657 0306                                 l8649 02BE  
                               l8841 2064                                 l8833 2240  
                               l9553 0D30                                 l8579 1C2E  
                               l8771 0F30                                 l8763 0F18  
                               l8755 0F00                                 l8747 0EEC  
                               l7699 0E36                                 l7795 25E6  
                               l7787 1E24                                 l8691 0438  
                               l8683 03F0                                 l8675 03A8  
                               l8667 0360                                 l8659 0318  
                               l8851 208E                                 l8827 221E  
                               l8765 0F1E                                 l8757 0F06  
                               l7893 13AE                                 l7885 138C  
                               l7877 1356                                 l7869 1332  
                               l8693 044A                                 l8685 0402  
                               l8677 03BA                                 l8669 0372  
                               l8597 00EE                                 l8845 2072  
                               l8783 2686                                 l8767 0F24  
                               l8759 0F0C                                 l8775 0F36  
                               l7879 1362                                 l8791 2700  
                               l8695 045C                                 l8687 0414  
                               l8679 03CC                                 l8599 00FC  
                               l8855 2098                                 l8863 260A  
                               l9559 0D3C                                 l8769 0F2A  
                               l7889 139A                                 l8697 046E  
                               l8689 0426                                 l8849 2082  
                               l8891 0618                                 l8787 2698  
                               l7899 1E30                                 l8795 2706  
                               l8893 0642                                 l8895 0668  
                               l8799 2196                                 STR_1 FFED  
                               STR_2 FFE4                                 l8897 068E  
                               l8889 05E2                                 STR_3 FFF2  
                               l8899 06CC                                 _LATB 000F8A  
                               _LATC 000F8B                                 u6190 09A6  
                               u6430 0B74                                 u5904 0DF0  
                               u5905 0DEA                                 u6708 071C  
                               u6709 0732                                 u6718 0750  
                               u6638 05CE                                 u6648 05F4  
                               u6728 09E4                                 u6729 09F8  
                               u6921 13C6                                 u6658 062A  
                               u6738 0A0A                                 u6739 0A2E  
                               u6668 0654                                 u6748 0A40  
                               u5980 1B16                                 u6749 0A58  
                               u6678 067A                                 u6758 0A6A  
                               u5894 0DBA                                 u5990 1B4C  
                               u6759 0A82                                 u5895 0DB4  
                               u6688 06A0                                 u6768 0A94  
                               u6769 0AAC                                 u6698 06DE  
                               u6778 0ABE                                 u6699 06F4  
                               u5987 1B0C                                 u5997 1B42  
                     ??_lcd_disp_all 0020                    ??_key_process_set 0020  
                               _pLCD 0060                                 _hKel F993  
       __end_of_LCDDigitalIndexTable FEE4                                 _hKcy FB27  
          __size_of_lcd_disp_refresh 0062                                 _main 0C88  
                               _menu 003C                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0040  
            _handler_interrupt_hight 0008                                 prodh 000FF4  
                               prodl 000FF3                                 start 00DC  
                     ??_iic_send_ack 0020                        _globleBuffer0 0300  
                      _globleBuffer1 0400                        __CFG_IESO$OFF 000000  
        key_shift_loc_fixed_point@t8 0020                    _key_waite_release 2316  
   __end_of_iic_received_byte_if_ack 2766                         ___param_bank 000000  
                   ?_lcd_set_com_seg 00E1                   ?_key_waite_release 00E1  
                              EECON2 000FA7                       ??_m_int8_2_hex 0020  
         ??_ads1115_start_conversion 0021                       ??_lcd_show_chr 0021  
                      lcd_disp_all@i 00DA                        lcd_disp_all@x 00D9  
                              RTCCFG 000F5F                                ?_main 0001  
                  ?_key_process_down 0001                      __end_of___awdiv 0ED8  
                    __end_of___awmod 13B8                      __end_of___lldiv 1052  
                ??_key_waite_release 0020                      ___awdiv@divisor 00DB  
                              _T2CON 000FCA                                _FSR0H 000FEA  
                              _FSR0L 000FE9                      __end_of___lwdiv 1AEE  
                    __end_of___lwmod 1DCC                      ___awdiv@counter 00DD  
                              _PORTB 000F81                                _PORTC 000F82  
          _key_adj_value_fixed_point 0AD2                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISG 000F98  
                 ??_key_process_down 0021                      ??_lcd_disp_logo 0020  
                       ?_key_polling 0001                  lcd_disp_dp_loc_0@dp 0020  
                lcd_disp_dp_loc_1@dp 0020                  lcd_disp_dp_loc_2@dp 0020  
                       ?_key_process 0001                       __CFG_FCMEN$OFF 000000  
                              _glRtc 0083                                _st_Bj 0034  
                     __CFG_T1DIG$OFF 000000         ??___enter_menu_set_base_zero 0020  
                              pclath 000FFA                                tablat 000FF5  
                    __end_of_rtc_get 229A                      __end_of_rtc_set 110A  
                              plusw1 000FE3                                plusw2 000FDB  
                              status 000FD8                      ??_iic_send_byte 0021  
                 _diff_prCalibTabDef 0100            __end_of_key_waite_release 2352  
                   ?_lcd_show_string 00EC                      ??_iic_waite_ack 0020  
                   __end_of_HexTable FF1D                      __initialization 196E  
                       __end_of_hKel FB27                         __end_of_hKcy FCBB  
                       __end_of_main 0D52                        _prCalibTabDef 0200  
               iic_received_byte@ret 00D9                        _userTicker_ms 002D  
                             ??_main 0021                        __activetblptr 000002  
                         _at24c02Ch0 01E2                           _at24c02Ch1 00C6  
              ___enter_menu_set_pose 2656         __end_of_key_process_set_long 2810  
                   ?___x_arrange_str 00D9                               _ADCON1 000FC1  
   __size_of_ads1115_read_conversion 0046                               _ADRESH 000FC4  
                             _ADRESL 000FC3                     __end_of___exp_10 1F9E  
                   ___awdiv@dividend 00D9                               _LCDCON 000FA8  
                             _LCDSE0 000FA9                               _LCDSE1 000FB6  
                             _LCDSE2 000FB7                               _LCDSE3 000FB8  
                             _LCDSE4 000FB9                               _LCDSE5 000FBA  
                             _LCDREG 000FD2            ??_handler_interrupt_hight 0001  
                             i1l1509 0094                               i1l1608 2792  
                             i2l1500 0C0E                               i2l1501 0C16  
                             i2l1504 0C4C                               i2l1608 27AA  
                     __CFG_WDTEN$OFF 000000                               i2l1498 0BFE  
                             i2l1499 0C06                               i1l7615 0080  
                             _INTCON 000FF2                               _TABLAT 000FF5  
                             i2l7589 0C38          ??_key_process_set_down_long 01F5  
                      m_int8_2_hex@b 00DB         __size_of_sys_ticker_irq_hook 0018  
                   ??_lcd_disp_level 0021                       _x_DiffPressure 00A6  
          ___enter_menu_set_pose@fps 00D9                     __end_of_delay_ms 26FE  
                   __end_of_delay_us 2402                 __size_of_lcd_bl_init 0004  
                     __CFG_XINST$OFF 000000                     __end_of_lcd_init 27F2  
                   __end_of_iic_stop 23CA                               _adc_Pr 00B6  
                             ___wmul 2402                            ??___awdiv 0020  
                          ??___awmod 0020                 __end_of_flashTestbuf FFE4  
                          ??___lldiv 0020                            ??___lwdiv 0021  
                          ??___lwmod 0021                  lcd_disp_level@level 00EB  
                             clear_0 1996                               clear_1 19AA  
                             clear_2 19BC                               clear_3 19C8  
                             clear_4 19D4                               clear_5 19E0  
                   ___awdiv@quotient 00DF                      ___awmod@divisor 00DB  
               __size_of_lcd_show_dp 006C                 __end_of_lcd_disp_all 256A  
                    ___awmod@counter 00DD                 __size_of_in_adc_init 0024  
              i2_sys_ticker_irq_hook 279C                 _LCDDigitalIndexTable FEBB  
            ??_in_adc_start_and_read 0020                     key_polling@ktemp 00DF  
                   __end_of_soc_init 27D4                 __end_of_iic_send_ack 2148  
                   _ads1115_read_reg 05B2                         __mediumconst F992  
                   __end_of_rtc_init 22D8                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
  __size_of_iic_received_byte_if_ack 0020                 lcd_disp_get_code@chr 00D9  
               lcd_disp_get_code@ret 00DA            ?_iic_received_byte_if_ack 0001  
                          ??_rtc_get 0020                            ??_rtc_set 0020  
           ui_disp_start_cs600@F7614 00F0                 __end_of_m_int8_2_hex 1FF8  
               __end_of_lcd_show_chr 14EE                         _pcf8574Value 0035  
                   _lcd_disp_refresh 1D08                           __accesstop 0060  
            __end_of__initialization 19E6                    _sampBufDiffPr_D01 01D2  
                  _sampBufDiffPr_D23 01C2                           ___exp_10@n 0020  
           __size_of_m_int16_2_str_4 015E           __size_of_key_waite_release 003C  
       __size_ofi2_rtc_alrm_irq_hook 0002                        ___rparam_used 000001  
              _handler_interrupt_low 0018                           _adc_iPrEx0 00B4  
                         _adc_iPrEx1 00B2                        _p_prEepromObj 002F  
                     iic_send_byte@i 00DA                       iic_send_byte@x 00D9  
                     __pcstackCOMRAM 0001                           _adc_diffPr 00C2  
                       __pidataBANK0 27B4       __size_of_ui_disp_adj_xfixed_pt 00B6  
      __end_of_ui_disp_adj_xfixed_pt 11C0      __end_of_handler_interrupt_hight 0C88  
          _key_process_set_down_long 0ED8             ___enter_menu_set_density 24A2  
       __end_of_ui_disp_clear_num_dp 2052               ?___enter_menu_set_pose 0001  
                    _key_process_set 2684                _ads1115_init_all_chip 2438  
            in_adc_start_and_read@ch 00DF                   _rtcc_reg_wr_enable 27F2  
                 __size_of_iic_start 003E                 __size_of_key_polling 005C  
               __size_of_key_process 0082          ??_key_shift_loc_fixed_point 0020  
                  lcd_disp_logo@show 0020                   __size_of_m_mem_cpy 0044  
                  lcd_show_string@t8 00EE                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                         __pbssBANK3 0300                           __pbssBANK4 0400  
 __size_of_key_adj_value_fixed_point 00EA                           _defalutRtc 00F9  
                ?_rtcc_reg_wr_enable 0001             __size_of_sys_ticker_init 0010  
                  _pdiff_prEepromObj 0031                           _diffSampCh 0037  
                    lcd_disp_level@i 00EC          __size_of_lcd_disp_chr_loc_0 0090  
        __size_of_lcd_disp_chr_loc_1 0090          __size_of_lcd_disp_chr_loc_2 0090  
        __size_of_lcd_disp_chr_loc_3 0090          __size_of_lcd_disp_chr_loc_4 0090  
        __size_of_lcd_disp_chr_loc_5 0090          __size_of_lcd_disp_chr_loc_6 0090  
        __size_of_lcd_disp_chr_loc_7 0090                 _key_process_set_long 280E  
     ___enter_menu_set_base_zero@fps 00EE                        _x_Pemperature 0096  
                            ?___wmul 00DB         __size_of_ui_disp_start_cs600 009E  
                          ?___exp_10 00D9               ?i2_sys_ticker_irq_hook 0001  
               ??_rtcc_reg_wr_enable 0020                              _ALRMRPT 000F5A  
      __size_of_ui_disp_menu_psw_adj 001E                  ui_disp_rtc_mm_ss@t8 01F7  
                      ?_ads1115_init 00D9                           _lcd_config 2628  
                          ?_delay_ms 00DD                            ?_delay_us 00D9  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8              _ads1115_read_conversion 2148  
        __size_of_lcd_disp_level_bar 04D2         __size_of_rtcc_reg_wr_disable 000C  
                            _RTCVALH 000F5D                              _RTCVALL 000F5C  
               ___int32_2_mflot32@mf 01F1                       m_int8_2_hex@t8 0020  
                          ?_lcd_init 0001          __size_of_lcd_show_string_l0 0044  
        __size_of_lcd_show_string_l1 0042                            ?_iic_stop 0001  
                  __end_of_auchCRCHi FEBB                    __end_of_auchCRCLo FDBB  
          __size_of_key_process_down 003C                    _ui_disp_rtc_mm_ss 11C0  
                      ?_ui_disp_menu 0001    __end_of_key_adj_value_fixed_point 0BBC  
             ?_handler_interrupt_low 0001                   ?_ui_disp_rtc_mm_ss 0001  
                            __Hparam 0000                              __Lparam 0000  
              ?_key_process_set_long 0001                       lcd_show_dp@loc 00EA  
                          ?_soc_init 0001                __size_of_lcd_disp_all 0030  
                          ?_rtc_init 0001            _key_shift_loc_fixed_point 24D6  
                  __end_of_iic_start 2316                    ??_m_int16_2_str_4 0020  
                            ___awdiv 0E1A                              ___awmod 1316  
                ??_ui_disp_rtc_mm_ss 0021                              ___lldiv 0F96  
                    __size_of___wmul 0036              __end_of_key_process_set 26AE  
                            ___lwdiv 1A76                              ___lwmod 1D6A  
                  __end_of_m_mem_cpy 2216                            _LCDDATA10 000F70  
                          _LCDDATA11 000F71                            _LCDDATA12 000F72  
                          _LCDDATA20 000F7A                            _LCDDATA13 000F73  
                          _LCDDATA21 000F7B                            _LCDDATA14 000F74  
                          _LCDDATA22 000F7C                            _LCDDATA15 000F75  
                          _LCDDATA23 000F7D                            _LCDDATA16 000F76  
                          _LCDDATA17 000F77                            _LCDDATA18 000F78  
                          _LCDDATA19 000F79                      __CFG_STVREN$OFF 000000  
                         ??___exp_10 0020                              _pcf8574 0078  
                            __pcinit 196E                __size_of_iic_send_ack 004A  
                            __ramtop 1000                              __ptext0 0C88  
                            __ptext1 13B8                              __ptext2 25FA  
                            __ptext3 2216                              __ptext4 218E  
                            __ptext5 250A                              __ptext6 11C0  
                            __ptext7 2258                              __ptext8 1F9E  
                            __ptext9 2052               ?_ads1115_init_all_chip 0001  
                     ??_ads1115_init 0020                  _sys_ticker_irq_hook 2784  
                  ___int32_2_mflot32 08CC             __size_of_lcd_set_com_seg 00C8  
                          _T1CONbits 000FCD                              _x_Hight 00A2  
                lcd_set_com_seg@bits 00E8                  lcd_set_com_seg@show 00E2  
                   ___awmod@dividend 00D9                           _x_Pressure 009A  
                 ?___int32_2_mflot32 00E6                __size_of_m_int8_2_hex 005A  
                          _LCDPSbits 000FAA                           ??_delay_ms 0020  
                         ??_delay_us 0020                __size_of_lcd_show_chr 0098  
              __end_of_lcd_disp_logo 253A                              _rtc_get 2258  
                            _rtc_set 1052                              main@t16 01FE  
      key_adj_value_fixed_point@dloc 00EA     ads1115_start_conversion@pAds1115 00E0  
  __size_of_ads1115_start_conversion 002A                           ??_lcd_init 0020  
          ?_ads1115_start_conversion 00E0                       __pintcode_body 0BBC  
                         ??_iic_stop 0020            __end_of_ui_disp_rtc_mm_ss 1272  
                       _flashTestbuf FFA3                 end_of_initialization 19E6  
                ??___int32_2_mflot32 00EA              __size_of_key_process_up 0034  
                     ??_ui_disp_menu 0021                         _lcd_disp_all 253A  
                      __Lmediumconst F992                              int_func 0BBC  
               ?_sys_ticker_irq_hook 0001                 _ui_disp_clear_num_dp 1FF8  
                    ___lldiv@divisor 00DD                __end_of_iic_send_byte 1C34  
                    ___lldiv@counter 00E5             __end_of_ads1115_read_reg 076E  
                       _iic_send_ack 20FE                           _ticker_dly 25FA  
                         ??_soc_init 0020                    ??_sys_ticker_init 0020  
     key_adj_value_fixed_point@value 00E7                           ??_rtc_init 0020  
                            postdec1 000FE5                              postdec2 000FDD  
              __end_of_iic_waite_ack 1EE6                              postinc0 000FEE  
                            postinc2 000FDE                    _lcd_disp_dp_loc_0 25CA  
                  _lcd_disp_dp_loc_1 259A                    _lcd_disp_dp_loc_2 256A  
                  _lcd_disp_get_code 1DCC             __size_of_lcd_show_string 006E  
                       _m_int8_2_hex 1F9E            __end_of___int32_2_mflot32 09D2  
                       _lcd_show_chr 1456                     _defultSystemData FF1D  
           __end_of_lcd_disp_refresh 1D6A                   ?_lcd_disp_dp_loc_0 0001  
                 ?_lcd_disp_dp_loc_1 0001                   ?_lcd_disp_dp_loc_2 0001  
                 ?_lcd_disp_get_code 0001                  i2_rtc_alrm_irq_hook 2812  
          ??_ads1115_read_conversion 00E5                          ?_lcd_config 0001  
     __size_of_in_adc_start_and_read 006A        __end_of_in_adc_start_and_read 1C9E  
                ??_lcd_disp_dp_loc_0 0020                  ??_lcd_disp_dp_loc_1 0020  
                ??_lcd_disp_dp_loc_2 0020                 lcd_show_string_l0@t8 00EE  
               lcd_show_string_l1@t8 00EE                  ??_lcd_disp_get_code 0020  
        iic_received_byte_if_ack@ack 00DB            ads1115_write_reg@pAds1115 00DB  
        iic_received_byte_if_ack@ret 00DC   __size_of_key_process_set_down_long 00BE  
                    iic_send_ack@ack 0020                ??_sys_ticker_irq_hook 000F  
                      ??_lcd_bl_init 0020             __size_of___x_arrange_str 005E  
               ?i2_rtc_alrm_irq_hook 0001                ?_ui_disp_clear_num_dp 0001  
                  _ads1115_write_reg 09D2               ??_key_process_set_long 0020  
                 ?_ads1115_write_reg 00DB           ??___enter_menu_set_density 00D9  
          __end_of_lcd_disp_dp_loc_0 25FA            __end_of_lcd_disp_dp_loc_1 25CA  
          __end_of_lcd_disp_dp_loc_2 259A                   iic_received_byte@i 00DA  
          __end_of_lcd_disp_get_code 1E2A                          _adc_diffBrg 00C0  
                        _adc_diffGnd 00BC                          _adc_diffVcc 00BE  
                      ??_lcd_show_dp 0021                          _adc_exPt100 00BA  
                        _adjLocation 003F                        ??_in_adc_init 0020  
                   ?_key_process_set 0001                           m_mem_cpy@d 00D9  
                         m_mem_cpy@s 00DB              ??___enter_menu_set_pose 0020  
                     __end_of___wmul 2438                  ??_ads1115_write_reg 0021  
                 lcd_disp_get_code@i 00DB                  start_initialization 196E  
             ui_disp_start_cs600@buf 01ED               ui_disp_start_cs600@dly 01F3  
           ?_handler_interrupt_hight 0001                      _LCDDigitalTable FEE4  
                  ??_lcd_set_com_seg 00E3          ?___enter_menu_set_base_zero 0001  
         __size_of_ui_disp_rtc_mm_ss 00B2               lcd_disp_chr_loc_0@code 0020  
             lcd_disp_chr_loc_1@code 0020               lcd_disp_chr_loc_2@code 0020  
  __end_of_key_process_set_down_long 0F96               lcd_disp_chr_loc_3@code 0020  
             lcd_disp_chr_loc_4@code 0020                  _ui_disp_start_cs600 13B8  
             lcd_disp_chr_loc_5@code 0020               lcd_disp_chr_loc_6@code 0020  
             lcd_disp_chr_loc_7@code 0020                     _key_process_down 2352  
          __end_of_ads1115_write_reg 0AD2                ??i2_rtc_alrm_irq_hook 0001  
           in_adc_start_and_read@ret 00E0                 __end_of_ads1115_init 1316  
            lcd_disp_level_bar@__bar 00E9                     lcd_show_chr@code 00EB  
           ads1115_read_reg@pAds1115 00DD                          ?_ticker_dly 00D9  
                __size_of_lcd_config 002E                 key_waite_release@key 00E3  
                _rtcc_reg_wr_disable 27FE                  __end_of_lcd_bl_init 280E  
            ??i2_sys_ticker_irq_hook 0001                             ??___wmul 0021  
                        __pdataBANK0 00F0                     __CFG_LPT1OSC$OFF 000000  
               ?_ui_disp_start_cs600 0001           __size_of___int32_2_mflot32 0106  
            __size_of_lcd_disp_level 0058                      _adc_exPt100Line 00B8  
              _ui_disp_adj_xfixed_pt 110A                 __end_of_ui_disp_menu 2722  
           _iic_received_byte_if_ack 2746                    __size_of___exp_10 005C  
                        _ALRMCFGbits 000F5B                  __end_of_lcd_show_dp 1BC8  
                 lcd_show_string@str 00EC                  __end_of_in_adc_init 2746  
 __size_of_key_shift_loc_fixed_point 0034                        ??_key_polling 0020  
                   _sampBufDiffPr_S1 00AA                            _pAdjValue 00AC  
                      ??_key_process 0021                          __pbssCOMRAM 0021  
                  ??_lcd_show_string 0021                        __pcstackBANK0 00D9  
                      __pcstackBANK1 01ED                        __pcstackBANK2 02A2  
               ?_rtcc_reg_wr_disable 0001                         _stRTCCFGbits 000F5F  
           key_waite_release@timeout 00E1                    __size_of_delay_ms 0026  
                  __size_of_delay_us 0038                  __CFG_CCP2MX$DEFAULT 000000  
                     _key_process_up 246E              ??_handler_interrupt_low 000F  
       __end_of_ui_disp_menu_psw_adj 2784                  ___x_arrange_str@len 00DB  
                    _m_int16_2_str_4 076E                  ___x_arrange_str@str 00D9  
                  __size_of_lcd_init 000E               ??_ui_disp_clear_num_dp 0021  
                  __size_of_iic_stop 003C           __end_of_lcd_disp_chr_loc_0 196E  
         __end_of_lcd_disp_chr_loc_1 18DE           __end_of_lcd_disp_chr_loc_2 184E  
         __end_of_lcd_disp_chr_loc_3 17BE           __end_of_lcd_disp_chr_loc_4 172E  
         __end_of_lcd_disp_chr_loc_5 169E           __end_of_lcd_disp_chr_loc_6 160E  
         __end_of_lcd_disp_chr_loc_7 157E                            _auchCRCHi FDBB  
                          _auchCRCLo FCBB                    ___x_arrange_str@i 0020  
                   ___lwdiv@dividend 00DB        ads1115_read_conversion@result 00E6  
       ___enter_menu_set_density@fps 00DB           __size_of_lcd_disp_dp_loc_0 0030  
         __size_of_lcd_disp_dp_loc_1 0030           __size_of_lcd_disp_dp_loc_2 0030  
                          __pintcode 0008           __size_of_lcd_disp_get_code 005E  
                      __pmediumconst F992                    ??___x_arrange_str 0020  
                           ?___awdiv 00D9                             ?___awmod 00D9  
                           ?___lldiv 00D9              ___mflot32_2_int32@F7605 008E  
            ??_ads1115_init_all_chip 0020                ??_ui_disp_start_cs600 0021  
                           ?___lwdiv 00DB                             ?___lwmod 00E2  
                          _fpSysData 00F6                    __size_of_soc_init 0010  
                        __pintcodelo 0018                    __size_of_rtc_init 003E  
   __end_of_ads1115_start_conversion 26D8                            _dlyTicker 0025  
        __size_of_rtcc_reg_wr_enable 000C                            _iic_start 22D8  
                ___int32_2_mflot32@x 00E6              __end_of_LCDDigitalTable FF0C  
                          _m_mem_cpy 21D2           __end_of_lcd_disp_level_bar 05B2  
              ??_rtcc_reg_wr_disable 0020           __end_of_lcd_show_string_l0 21D2  
         __end_of_lcd_show_string_l1 2258    __end_of_key_shift_loc_fixed_point 250A  
                        _PADCFG1bits 000F54                             ?_rtc_get 0001  
                           ?_rtc_set 00D9               __end_of_key_process_up 24A2  
                __size_of_ticker_dly 002E                     ___lwdiv@quotient 00E0  
               ads1115_init@pAds1115 00D9                             _LCDDATA0 000FBB  
                           _LCDDATA1 000FBC                             _LCDDATA2 000FBD  
                           _LCDDATA3 000FBE                             _LCDDATA4 000FBF  
                           _LCDDATA5 000F6B                             _LCDDATA6 000F6C  
                           _LCDDATA7 000F6D                             _LCDDATA8 000F6E  
                           _LCDDATA9 000F6F                lcd_set_com_seg@offset 00E7  
                __end_of_key_polling 1F42                  __end_of_key_process 1A76  
                 lcd_set_com_seg@com 00E6                      _sys_ticker_init 27D4  
                 lcd_set_com_seg@seg 00E1                 ui_disp_rtc_mm_ss@buf 01ED  
         __size_of_ads1115_write_reg 0100             __end_of_defultSystemData FFA3  
       key_adj_value_fixed_point@t16 00EC         key_shift_loc_fixed_point@max 00DC  
       key_shift_loc_fixed_point@loc 00D9         key_shift_loc_fixed_point@min 00DB  
       key_adj_value_fixed_point@loc 00E9                       ___wmul@product 00DF  
                        _lcd_bl_init 280A                            delay_us@i 00DB  
                  _iic_received_byte 1C9E                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D                             _IPR3bits 000FA5  
                           _PIE3bits 000FA3           ?_key_adj_value_fixed_point 00E7  
   __end_of___enter_menu_set_density 24D6                          _dlyTickerEn 0033  
                 ?_iic_received_byte 0001                             _PIR1bits 000F9E  
                           _PIR3bits 000FA4                    ?_ads1115_read_reg 00DD  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                        _lcd_show_dp 1B5C                   ??_ads1115_read_reg 00E0  
                        _in_adc_init 2722                ___int32_2_mflot32@t32 01ED  
             ?_ui_disp_adj_xfixed_pt 01ED                  ??_iic_received_byte 0020  
             ui_disp_adj_xfixed_pt@x 01EF  __size_of___enter_menu_set_base_zero 0054  
                    m_int8_2_hex@str 00D9                           ?_iic_start 0001  
                         _ADCON0bits 000FC2                           _ADCON2bits 000FC0  
                  ___wmul@multiplier 00DB                        _pAds1115PrObj 0027  
                  ?_lcd_disp_refresh 0001                           ?_m_mem_cpy 00D9  
                   m_int16_2_str_4@x 00E3                           rtc_set@rtc 00D9  
                         rtc_set@stp 00DB                         ??_lcd_config 0020  
                 ??_lcd_disp_refresh 0020                        _fastSampTimer 0029  
            __end_of_m_int16_2_str_4 08CC                      ?_key_process_up 0001  
                           _HexTable FF0C      ads1115_read_conversion@pAds1115 00E3  
                        _INTCON2bits 000FF1                            copy_data0 1982  
              __size_of_ads1115_init 00A4                ui_disp_start_cs600@t8 01F4  
          __end_of_iic_received_byte 1D08                    _rtc_alrm_irq_hook 2810  
                         _EECON1bits 000FA6                             __Hrparam 0000  
                    lcd_show_dp@show 00E9                   ?_rtc_alrm_irq_hook 0001  
                    lcd_show_chr@chr 00E9                      lcd_show_chr@loc 00EA  
                key_waite_release@t8 0020               lcd_disp_level_bar@show 0020  
                           __Lrparam 0000                   __end_of_lcd_config 2656  
              __size_of_ui_disp_menu 0024               __size_of_lcd_disp_logo 0030  
                   __size_of___awdiv 00BE                       _lcd_disp_level 2052  
                   __size_of___awmod 00A2                     __size_of___lldiv 00BC  
                           ___exp_10 1F42                     __size_of___lwdiv 0078  
                ??_rtc_alrm_irq_hook 000F                     __size_of___lwmod 0062  
           __end_of_key_process_down 238E                             _adc_iRef 00AE  
                    _lcd_set_com_seg 0D52                             _adc_ibat 00B0  
                       _ads1115Chip0 01B2                         _ads1115Chip1 01A2  
                           _adjValue 0021       __size_of___enter_menu_set_pose 002E  
               _ui_disp_menu_psw_adj 2766        __end_of___enter_menu_set_pose 2684  
                           _calibCol 003A                             _calibRow 003B  
                       _ads1115_init 1272                       key_process@key 02A4  
           _ads1115_start_conversion 26AE                          _key_polling 1EE6  
            __end_of_sys_ticker_init 27E4                          _key_process 19F4  
                           _delay_ms 26D8                             _delay_us 23CA  
             __size_of_iic_send_byte 006C                             _glTicker 008A  
                    ___lwdiv@divisor 00DD                             _glbEvent 00C4  
                    ___lwdiv@counter 00DF          __end_of_sys_ticker_irq_hook 279C  
                           __ptext10 00E0                             __ptext11 27C4  
                           __ptext20 280A                             __ptext12 27D4  
                           __ptext21 19F4                             __ptext13 229A  
                           __ptext30 157E                             __ptext22 26FE  
                           __ptext14 1052                             __ptext31 160E  
                           __ptext23 2766                             __ptext15 27F2  
                           __ptext40 25CA                             __ptext32 169E  
                           __ptext24 110A                             __ptext16 27FE  
                           __ptext41 0D52                             __ptext33 172E  
                           __ptext25 1FF8                             __ptext17 27E4  
                           __ptext50 26D8                             __ptext42 21D2  
                           __ptext34 17BE                             __ptext26 1AEE  
                           __ptext18 2628                             __ptext51 246E  
                           __ptext43 076E                             __ptext35 184E  
                           __ptext27 1456                             __ptext19 253A  
                           __ptext60 24A2                             __ptext52 0AD2  
                           __ptext44 1316                             __ptext36 18DE  
                           __ptext28 1DCC                             __ptext61 20AA  
                           __ptext53 2402                             __ptext45 0E1A  
                           __ptext37 1B5C                             __ptext29 14EE  
                           __ptext70 26AE                             __ptext62 08CC  
                           __ptext54 1D6A                             __ptext46 1D08  
                           __ptext38 256A                             __ptext71 09D2  
                           __ptext63 0F96                             __ptext55 1A76  
                           __ptext47 1E2A                             __ptext39 259A  
                           __ptext80 1C9E                             __ptext72 2148  
                           __ptext64 2684                             __ptext56 1F42  
                           __ptext48 2316                             __ptext81 2438  
                           __ptext73 05B2                             __ptext65 2352  
                           __ptext57 280E                             __ptext49 1EE6  
                           __ptext82 1272                             __ptext74 22D8  
                           __ptext66 24D6                             __ptext58 0ED8  
                           __ptext75 1BC8                             __ptext67 1C34  
                           __ptext59 2656                             __ptext84 2784  
                           __ptext76 1E88                             __ptext68 23CA  
                           __ptext85 2810                             __ptext77 238E  
                           __ptext69 2722                             __ptext78 2746  
                           __ptext87 279C                             __ptext79 20FE  
                           __ptext88 2812                             __ptext89 0000  
                   __size_of_rtc_get 0042                     __size_of_rtc_set 00B8  
                           _lcd_init 27E4                _in_adc_start_and_read 1C34  
                           _iic_stop 238E               __size_of_iic_waite_ack 005E  
                           _keyValue 00C5            __end_of_rtc_alrm_irq_hook 2812  
                      __size_of_main 00CA                         _ui_disp_menu 26FE  
                           _x_Weight 009E                             _passWord 003D  
   __size_of_handler_interrupt_hight 0C80                         ??_ticker_dly 0020  
      __size_of_key_process_set_long 0002                             _soc_init 27C4  
                       ticker_dly@ms 00D9           ??_iic_received_byte_if_ack 0021  
             __end_of_lcd_disp_level 20AA                             _rtc_init 229A  
             ads1115_write_reg@value 00DE                            rtc_get@t8 0020  
                           int$flags 0040                      _lcd_show_string 1AEE  
     __size_ofi2_sys_ticker_irq_hook 0018        __end_ofi2_sys_ticker_irq_hook 27B4  
           ?_ads1115_read_conversion 00E3                ?_ui_disp_menu_psw_adj 0001  
                        ??_iic_start 0020                          delay_ms@dly 00DD  
                ads1115_init@slvaddr 00DB                          ??_m_mem_cpy 0020  
                        delay_us@dly 00D9                         _x_prDiffData 00D1  
                         _INTCONbits 000FF2   __end_of___enter_menu_set_base_zero 20FE  
         ___enter_menu_set_base_zero 20AA             __size_of_key_process_set 002A  
  __size_of___enter_menu_set_density 0034                lcd_disp_level_bar@bar 00EA  
          ?___enter_menu_set_density 0001                 iic_waite_ack@timeout 0020  
              __CFG_RTCSOSC$T1OSCREF 000000                     ?_m_int16_2_str_4 00E1  
                      key_polling@t8 00E0          __end_ofi2_rtc_alrm_irq_hook 2814  
                      _lcd_disp_logo 250A                   __end_of_ticker_dly 2628  
                           intlevel1 0000                             intlevel2 0000  
               ads1115_read_reg@addr 00DF                        key_process@tm 02A2  
         __size_of_iic_received_byte 006A                      ___x_arrange_str 1E2A  
                   ___lwmod@dividend 00E2                      _slowSampleTimer 0036  
         ?_key_process_set_down_long 0001                     ___lldiv@dividend 00D9  
     __size_of_handler_interrupt_low 00C4        __end_of_handler_interrupt_low 00DC  
                         _OSCCONbits 000FD3                        _iic_send_byte 1BC8  
              ads1115_write_reg@addr 00DD              __end_of_lcd_set_com_seg 0E1A  
                    ?_lcd_disp_level 0001                    _diffSampCount_D01 0039  
                  _diffSampCount_D23 0038                        _iic_waite_ack 1E88  
                 _lcd_disp_chr_loc_0 18DE                   _lcd_disp_chr_loc_1 184E  
                 _lcd_disp_chr_loc_2 17BE                   _lcd_disp_chr_loc_3 172E  
                 _lcd_disp_chr_loc_4 169E                   _lcd_disp_chr_loc_5 160E  
                 _lcd_disp_chr_loc_6 157E                   _lcd_disp_chr_loc_7 14EE  
     __size_of_ads1115_init_all_chip 0036        __end_of_ads1115_init_all_chip 246E  
                         _RTCCFGbits 000F5F                  ads1115_read_reg@t16 00E1  
                   ___lldiv@quotient 00E1                      ___lwmod@divisor 00E4  
            ___int32_2_mflot32@F7600 0092                      ___lwmod@counter 00E6  
                ?_lcd_disp_chr_loc_0 0001                  ?_lcd_disp_chr_loc_1 0001  
                ?_lcd_disp_chr_loc_2 0001                  ?_lcd_disp_chr_loc_3 0001  
                ?_lcd_disp_chr_loc_4 0001                  ?_lcd_disp_chr_loc_5 0001  
                ?_lcd_disp_chr_loc_6 0001                  ?_lcd_disp_chr_loc_7 0001  
                   ?_sys_ticker_init 0001                       ?_lcd_disp_logo 0001  
             ?_in_adc_start_and_read 00DD           __size_of_rtc_alrm_irq_hook 0002  
                      ?_lcd_disp_all 0001                   _lcd_disp_level_bar 00E0  
                       ?_lcd_bl_init 0001             ui_disp_adj_xfixed_pt@buf 01F4  
           ui_disp_adj_xfixed_pt@loc 01F1              __end_of_lcd_show_string 1B5C  
           ui_disp_adj_xfixed_pt@str 01ED                   _lcd_show_string_l0 218E  
                 _lcd_show_string_l1 2216        __size_of_ui_disp_clear_num_dp 005A  
        __end_of_ui_disp_start_cs600 1456                 ??_lcd_disp_chr_loc_0 0020  
               ??_lcd_disp_chr_loc_1 0020                 ??_lcd_disp_chr_loc_2 0020  
               ??_lcd_disp_chr_loc_3 0020                 ??_lcd_disp_chr_loc_4 0020  
               ??_lcd_disp_chr_loc_5 0020                 ??_lcd_disp_chr_loc_6 0020  
               ??_lcd_disp_chr_loc_7 0020                       ?_iic_send_byte 0001  
        ??_key_adj_value_fixed_point 0021                        ?_iic_send_ack 0001  
    __end_of_ads1115_read_conversion 218E              ??_ui_disp_adj_xfixed_pt 01F2  
                ?_lcd_disp_level_bar 0020  
