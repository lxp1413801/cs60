

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Sep 17 13:56:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   167                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   173                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   174  0000                     
   175                           ; Version 1.41
   176                           ; Generated 25/01/2017 GMT
   177                           ; 
   178                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC18F86J93 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     
   210                           	psect	idataCOMRAM
   211  008226                     __pidataCOMRAM:
   212                           	opt stack 0
   213                           
   214                           ;initializer for _fpSysData
   215  008226  00                 	db	0
   216  008227  F4                 	db	244
   217  008228  00                 	db	0
   218                           
   219                           ;initializer for _glNoEventTimeOut
   220  008229  1E                 	db	30
   221                           
   222                           	psect	idataBANK1
   223  0081F6                     __pidataBANK1:
   224                           	opt stack 0
   225                           
   226                           ;initializer for ui_disp_start_cs600@F7655
   227  0081F6  2D                 	db	45
   228  0081F7  30                 	db	48
   229  0081F8  30                 	db	48
   230  0081F9  2D                 	db	45
   231  0081FA  00                 	db	0
   232  0081FB  00                 	db	0
   233                           
   234                           ;initializer for _defalutRtc
   235  0081FC  17                 	db	23
   236  0081FD  07                 	db	7
   237  0081FE  31                 	db	49
   238  0081FF  23                 	db	35
   239  008200  55                 	db	85
   240  008201  55                 	db	85
   241  008202  02                 	db	2
   242                           
   243                           	psect	mediumconst
   244  00ED8A                     __pmediumconst:
   245                           	opt stack 0
   246  00ED8A  00                 	db	0
   247  00ED8B                     _auchCRCLo:
   248                           	opt stack 0
   249  00ED8B  00                 	db	0
   250  00ED8C  C0                 	db	192
   251  00ED8D  C1                 	db	193
   252  00ED8E  01                 	db	1
   253  00ED8F  C3                 	db	195
   254  00ED90  03                 	db	3
   255  00ED91  02                 	db	2
   256  00ED92  C2                 	db	194
   257  00ED93  C6                 	db	198
   258  00ED94  06                 	db	6
   259  00ED95  07                 	db	7
   260  00ED96  C7                 	db	199
   261  00ED97  05                 	db	5
   262  00ED98  C5                 	db	197
   263  00ED99  C4                 	db	196
   264  00ED9A  04                 	db	4
   265  00ED9B  CC                 	db	204
   266  00ED9C  0C                 	db	12
   267  00ED9D  0D                 	db	13
   268  00ED9E  CD                 	db	205
   269  00ED9F  0F                 	db	15
   270  00EDA0  CF                 	db	207
   271  00EDA1  CE                 	db	206
   272  00EDA2  0E                 	db	14
   273  00EDA3  0A                 	db	10
   274  00EDA4  CA                 	db	202
   275  00EDA5  CB                 	db	203
   276  00EDA6  0B                 	db	11
   277  00EDA7  C9                 	db	201
   278  00EDA8  09                 	db	9
   279  00EDA9  08                 	db	8
   280  00EDAA  C8                 	db	200
   281  00EDAB  D8                 	db	216
   282  00EDAC  18                 	db	24
   283  00EDAD  19                 	db	25
   284  00EDAE  D9                 	db	217
   285  00EDAF  1B                 	db	27
   286  00EDB0  DB                 	db	219
   287  00EDB1  DA                 	db	218
   288  00EDB2  1A                 	db	26
   289  00EDB3  1E                 	db	30
   290  00EDB4  DE                 	db	222
   291  00EDB5  DF                 	db	223
   292  00EDB6  1F                 	db	31
   293  00EDB7  DD                 	db	221
   294  00EDB8  1D                 	db	29
   295  00EDB9  1C                 	db	28
   296  00EDBA  DC                 	db	220
   297  00EDBB  14                 	db	20
   298  00EDBC  D4                 	db	212
   299  00EDBD  D5                 	db	213
   300  00EDBE  15                 	db	21
   301  00EDBF  D7                 	db	215
   302  00EDC0  17                 	db	23
   303  00EDC1  16                 	db	22
   304  00EDC2  D6                 	db	214
   305  00EDC3  D2                 	db	210
   306  00EDC4  12                 	db	18
   307  00EDC5  13                 	db	19
   308  00EDC6  D3                 	db	211
   309  00EDC7  11                 	db	17
   310  00EDC8  D1                 	db	209
   311  00EDC9  D0                 	db	208
   312  00EDCA  10                 	db	16
   313  00EDCB  F0                 	db	240
   314  00EDCC  30                 	db	48
   315  00EDCD  31                 	db	49
   316  00EDCE  F1                 	db	241
   317  00EDCF  33                 	db	51
   318  00EDD0  F3                 	db	243
   319  00EDD1  F2                 	db	242
   320  00EDD2  32                 	db	50
   321  00EDD3  36                 	db	54
   322  00EDD4  F6                 	db	246
   323  00EDD5  F7                 	db	247
   324  00EDD6  37                 	db	55
   325  00EDD7  F5                 	db	245
   326  00EDD8  35                 	db	53
   327  00EDD9  34                 	db	52
   328  00EDDA  F4                 	db	244
   329  00EDDB  3C                 	db	60
   330  00EDDC  FC                 	db	252
   331  00EDDD  FD                 	db	253
   332  00EDDE  3D                 	db	61
   333  00EDDF  FF                 	db	255
   334  00EDE0  3F                 	db	63
   335  00EDE1  3E                 	db	62
   336  00EDE2  FE                 	db	254
   337  00EDE3  FA                 	db	250
   338  00EDE4  3A                 	db	58
   339  00EDE5  3B                 	db	59
   340  00EDE6  FB                 	db	251
   341  00EDE7  39                 	db	57
   342  00EDE8  F9                 	db	249
   343  00EDE9  F8                 	db	248
   344  00EDEA  38                 	db	56
   345  00EDEB  28                 	db	40
   346  00EDEC  E8                 	db	232
   347  00EDED  E9                 	db	233
   348  00EDEE  29                 	db	41
   349  00EDEF  EB                 	db	235
   350  00EDF0  2B                 	db	43
   351  00EDF1  2A                 	db	42
   352  00EDF2  EA                 	db	234
   353  00EDF3  EE                 	db	238
   354  00EDF4  2E                 	db	46
   355  00EDF5  2F                 	db	47
   356  00EDF6  EF                 	db	239
   357  00EDF7  2D                 	db	45
   358  00EDF8  ED                 	db	237
   359  00EDF9  EC                 	db	236
   360  00EDFA  2C                 	db	44
   361  00EDFB  E4                 	db	228
   362  00EDFC  24                 	db	36
   363  00EDFD  25                 	db	37
   364  00EDFE  E5                 	db	229
   365  00EDFF  27                 	db	39
   366  00EE00  E7                 	db	231
   367  00EE01  E6                 	db	230
   368  00EE02  26                 	db	38
   369  00EE03  22                 	db	34
   370  00EE04  E2                 	db	226
   371  00EE05  E3                 	db	227
   372  00EE06  23                 	db	35
   373  00EE07  E1                 	db	225
   374  00EE08  21                 	db	33
   375  00EE09  20                 	db	32
   376  00EE0A  E0                 	db	224
   377  00EE0B  A0                 	db	160
   378  00EE0C  60                 	db	96
   379  00EE0D  61                 	db	97
   380  00EE0E  A1                 	db	161
   381  00EE0F  63                 	db	99
   382  00EE10  A3                 	db	163
   383  00EE11  A2                 	db	162
   384  00EE12  62                 	db	98
   385  00EE13  66                 	db	102
   386  00EE14  A6                 	db	166
   387  00EE15  A7                 	db	167
   388  00EE16  67                 	db	103
   389  00EE17  A5                 	db	165
   390  00EE18  65                 	db	101
   391  00EE19  64                 	db	100
   392  00EE1A  A4                 	db	164
   393  00EE1B  6C                 	db	108
   394  00EE1C  AC                 	db	172
   395  00EE1D  AD                 	db	173
   396  00EE1E  6D                 	db	109
   397  00EE1F  AF                 	db	175
   398  00EE20  6F                 	db	111
   399  00EE21  6E                 	db	110
   400  00EE22  AE                 	db	174
   401  00EE23  AA                 	db	170
   402  00EE24  6A                 	db	106
   403  00EE25  6B                 	db	107
   404  00EE26  AB                 	db	171
   405  00EE27  69                 	db	105
   406  00EE28  A9                 	db	169
   407  00EE29  A8                 	db	168
   408  00EE2A  68                 	db	104
   409  00EE2B  78                 	db	120
   410  00EE2C  B8                 	db	184
   411  00EE2D  B9                 	db	185
   412  00EE2E  79                 	db	121
   413  00EE2F  BB                 	db	187
   414  00EE30  7B                 	db	123
   415  00EE31  7A                 	db	122
   416  00EE32  BA                 	db	186
   417  00EE33  BE                 	db	190
   418  00EE34  7E                 	db	126
   419  00EE35  7F                 	db	127
   420  00EE36  BF                 	db	191
   421  00EE37  7D                 	db	125
   422  00EE38  BD                 	db	189
   423  00EE39  BC                 	db	188
   424  00EE3A  7C                 	db	124
   425  00EE3B  B4                 	db	180
   426  00EE3C  74                 	db	116
   427  00EE3D  75                 	db	117
   428  00EE3E  B5                 	db	181
   429  00EE3F  77                 	db	119
   430  00EE40  B7                 	db	183
   431  00EE41  B6                 	db	182
   432  00EE42  76                 	db	118
   433  00EE43  72                 	db	114
   434  00EE44  B2                 	db	178
   435  00EE45  B3                 	db	179
   436  00EE46  73                 	db	115
   437  00EE47  B1                 	db	177
   438  00EE48  71                 	db	113
   439  00EE49  70                 	db	112
   440  00EE4A  B0                 	db	176
   441  00EE4B  50                 	db	80
   442  00EE4C  90                 	db	144
   443  00EE4D  91                 	db	145
   444  00EE4E  51                 	db	81
   445  00EE4F  93                 	db	147
   446  00EE50  53                 	db	83
   447  00EE51  52                 	db	82
   448  00EE52  92                 	db	146
   449  00EE53  96                 	db	150
   450  00EE54  56                 	db	86
   451  00EE55  57                 	db	87
   452  00EE56  97                 	db	151
   453  00EE57  55                 	db	85
   454  00EE58  95                 	db	149
   455  00EE59  94                 	db	148
   456  00EE5A  54                 	db	84
   457  00EE5B  9C                 	db	156
   458  00EE5C  5C                 	db	92
   459  00EE5D  5D                 	db	93
   460  00EE5E  9D                 	db	157
   461  00EE5F  5F                 	db	95
   462  00EE60  9F                 	db	159
   463  00EE61  9E                 	db	158
   464  00EE62  5E                 	db	94
   465  00EE63  5A                 	db	90
   466  00EE64  9A                 	db	154
   467  00EE65  9B                 	db	155
   468  00EE66  5B                 	db	91
   469  00EE67  99                 	db	153
   470  00EE68  59                 	db	89
   471  00EE69  58                 	db	88
   472  00EE6A  98                 	db	152
   473  00EE6B  88                 	db	136
   474  00EE6C  48                 	db	72
   475  00EE6D  49                 	db	73
   476  00EE6E  89                 	db	137
   477  00EE6F  4B                 	db	75
   478  00EE70  8B                 	db	139
   479  00EE71  8A                 	db	138
   480  00EE72  4A                 	db	74
   481  00EE73  4E                 	db	78
   482  00EE74  8E                 	db	142
   483  00EE75  8F                 	db	143
   484  00EE76  4F                 	db	79
   485  00EE77  8D                 	db	141
   486  00EE78  4D                 	db	77
   487  00EE79  4C                 	db	76
   488  00EE7A  8C                 	db	140
   489  00EE7B  44                 	db	68
   490  00EE7C  84                 	db	132
   491  00EE7D  85                 	db	133
   492  00EE7E  45                 	db	69
   493  00EE7F  87                 	db	135
   494  00EE80  47                 	db	71
   495  00EE81  46                 	db	70
   496  00EE82  86                 	db	134
   497  00EE83  82                 	db	130
   498  00EE84  42                 	db	66
   499  00EE85  43                 	db	67
   500  00EE86  83                 	db	131
   501  00EE87  41                 	db	65
   502  00EE88  81                 	db	129
   503  00EE89  80                 	db	128
   504  00EE8A  40                 	db	64
   505  00EE8B                     __end_of_auchCRCLo:
   506                           	opt stack 0
   507  00EE8B                     _auchCRCHi:
   508                           	opt stack 0
   509  00EE8B  00                 	db	0
   510  00EE8C  C1                 	db	193
   511  00EE8D  81                 	db	129
   512  00EE8E  40                 	db	64
   513  00EE8F  01                 	db	1
   514  00EE90  C0                 	db	192
   515  00EE91  80                 	db	128
   516  00EE92  41                 	db	65
   517  00EE93  01                 	db	1
   518  00EE94  C0                 	db	192
   519  00EE95  80                 	db	128
   520  00EE96  41                 	db	65
   521  00EE97  00                 	db	0
   522  00EE98  C1                 	db	193
   523  00EE99  81                 	db	129
   524  00EE9A  40                 	db	64
   525  00EE9B  01                 	db	1
   526  00EE9C  C0                 	db	192
   527  00EE9D  80                 	db	128
   528  00EE9E  41                 	db	65
   529  00EE9F  00                 	db	0
   530  00EEA0  C1                 	db	193
   531  00EEA1  81                 	db	129
   532  00EEA2  40                 	db	64
   533  00EEA3  00                 	db	0
   534  00EEA4  C1                 	db	193
   535  00EEA5  81                 	db	129
   536  00EEA6  40                 	db	64
   537  00EEA7  01                 	db	1
   538  00EEA8  C0                 	db	192
   539  00EEA9  80                 	db	128
   540  00EEAA  41                 	db	65
   541  00EEAB  01                 	db	1
   542  00EEAC  C0                 	db	192
   543  00EEAD  80                 	db	128
   544  00EEAE  41                 	db	65
   545  00EEAF  00                 	db	0
   546  00EEB0  C1                 	db	193
   547  00EEB1  81                 	db	129
   548  00EEB2  40                 	db	64
   549  00EEB3  00                 	db	0
   550  00EEB4  C1                 	db	193
   551  00EEB5  81                 	db	129
   552  00EEB6  40                 	db	64
   553  00EEB7  01                 	db	1
   554  00EEB8  C0                 	db	192
   555  00EEB9  80                 	db	128
   556  00EEBA  41                 	db	65
   557  00EEBB  00                 	db	0
   558  00EEBC  C1                 	db	193
   559  00EEBD  81                 	db	129
   560  00EEBE  40                 	db	64
   561  00EEBF  01                 	db	1
   562  00EEC0  C0                 	db	192
   563  00EEC1  80                 	db	128
   564  00EEC2  41                 	db	65
   565  00EEC3  01                 	db	1
   566  00EEC4  C0                 	db	192
   567  00EEC5  80                 	db	128
   568  00EEC6  41                 	db	65
   569  00EEC7  00                 	db	0
   570  00EEC8  C1                 	db	193
   571  00EEC9  81                 	db	129
   572  00EECA  40                 	db	64
   573  00EECB  01                 	db	1
   574  00EECC  C0                 	db	192
   575  00EECD  80                 	db	128
   576  00EECE  41                 	db	65
   577  00EECF  00                 	db	0
   578  00EED0  C1                 	db	193
   579  00EED1  81                 	db	129
   580  00EED2  40                 	db	64
   581  00EED3  00                 	db	0
   582  00EED4  C1                 	db	193
   583  00EED5  81                 	db	129
   584  00EED6  40                 	db	64
   585  00EED7  01                 	db	1
   586  00EED8  C0                 	db	192
   587  00EED9  80                 	db	128
   588  00EEDA  41                 	db	65
   589  00EEDB  00                 	db	0
   590  00EEDC  C1                 	db	193
   591  00EEDD  81                 	db	129
   592  00EEDE  40                 	db	64
   593  00EEDF  01                 	db	1
   594  00EEE0  C0                 	db	192
   595  00EEE1  80                 	db	128
   596  00EEE2  41                 	db	65
   597  00EEE3  01                 	db	1
   598  00EEE4  C0                 	db	192
   599  00EEE5  80                 	db	128
   600  00EEE6  41                 	db	65
   601  00EEE7  00                 	db	0
   602  00EEE8  C1                 	db	193
   603  00EEE9  81                 	db	129
   604  00EEEA  40                 	db	64
   605  00EEEB  00                 	db	0
   606  00EEEC  C1                 	db	193
   607  00EEED  81                 	db	129
   608  00EEEE  40                 	db	64
   609  00EEEF  01                 	db	1
   610  00EEF0  C0                 	db	192
   611  00EEF1  80                 	db	128
   612  00EEF2  41                 	db	65
   613  00EEF3  01                 	db	1
   614  00EEF4  C0                 	db	192
   615  00EEF5  80                 	db	128
   616  00EEF6  41                 	db	65
   617  00EEF7  00                 	db	0
   618  00EEF8  C1                 	db	193
   619  00EEF9  81                 	db	129
   620  00EEFA  40                 	db	64
   621  00EEFB  01                 	db	1
   622  00EEFC  C0                 	db	192
   623  00EEFD  80                 	db	128
   624  00EEFE  41                 	db	65
   625  00EEFF  00                 	db	0
   626  00EF00  C1                 	db	193
   627  00EF01  81                 	db	129
   628  00EF02  40                 	db	64
   629  00EF03  00                 	db	0
   630  00EF04  C1                 	db	193
   631  00EF05  81                 	db	129
   632  00EF06  40                 	db	64
   633  00EF07  01                 	db	1
   634  00EF08  C0                 	db	192
   635  00EF09  80                 	db	128
   636  00EF0A  41                 	db	65
   637  00EF0B  01                 	db	1
   638  00EF0C  C0                 	db	192
   639  00EF0D  80                 	db	128
   640  00EF0E  41                 	db	65
   641  00EF0F  00                 	db	0
   642  00EF10  C1                 	db	193
   643  00EF11  81                 	db	129
   644  00EF12  40                 	db	64
   645  00EF13  00                 	db	0
   646  00EF14  C1                 	db	193
   647  00EF15  81                 	db	129
   648  00EF16  40                 	db	64
   649  00EF17  01                 	db	1
   650  00EF18  C0                 	db	192
   651  00EF19  80                 	db	128
   652  00EF1A  41                 	db	65
   653  00EF1B  00                 	db	0
   654  00EF1C  C1                 	db	193
   655  00EF1D  81                 	db	129
   656  00EF1E  40                 	db	64
   657  00EF1F  01                 	db	1
   658  00EF20  C0                 	db	192
   659  00EF21  80                 	db	128
   660  00EF22  41                 	db	65
   661  00EF23  01                 	db	1
   662  00EF24  C0                 	db	192
   663  00EF25  80                 	db	128
   664  00EF26  41                 	db	65
   665  00EF27  00                 	db	0
   666  00EF28  C1                 	db	193
   667  00EF29  81                 	db	129
   668  00EF2A  40                 	db	64
   669  00EF2B  00                 	db	0
   670  00EF2C  C1                 	db	193
   671  00EF2D  81                 	db	129
   672  00EF2E  40                 	db	64
   673  00EF2F  01                 	db	1
   674  00EF30  C0                 	db	192
   675  00EF31  80                 	db	128
   676  00EF32  41                 	db	65
   677  00EF33  01                 	db	1
   678  00EF34  C0                 	db	192
   679  00EF35  80                 	db	128
   680  00EF36  41                 	db	65
   681  00EF37  00                 	db	0
   682  00EF38  C1                 	db	193
   683  00EF39  81                 	db	129
   684  00EF3A  40                 	db	64
   685  00EF3B  01                 	db	1
   686  00EF3C  C0                 	db	192
   687  00EF3D  80                 	db	128
   688  00EF3E  41                 	db	65
   689  00EF3F  00                 	db	0
   690  00EF40  C1                 	db	193
   691  00EF41  81                 	db	129
   692  00EF42  40                 	db	64
   693  00EF43  00                 	db	0
   694  00EF44  C1                 	db	193
   695  00EF45  81                 	db	129
   696  00EF46  40                 	db	64
   697  00EF47  01                 	db	1
   698  00EF48  C0                 	db	192
   699  00EF49  80                 	db	128
   700  00EF4A  41                 	db	65
   701  00EF4B  00                 	db	0
   702  00EF4C  C1                 	db	193
   703  00EF4D  81                 	db	129
   704  00EF4E  40                 	db	64
   705  00EF4F  01                 	db	1
   706  00EF50  C0                 	db	192
   707  00EF51  80                 	db	128
   708  00EF52  41                 	db	65
   709  00EF53  01                 	db	1
   710  00EF54  C0                 	db	192
   711  00EF55  80                 	db	128
   712  00EF56  41                 	db	65
   713  00EF57  00                 	db	0
   714  00EF58  C1                 	db	193
   715  00EF59  81                 	db	129
   716  00EF5A  40                 	db	64
   717  00EF5B  01                 	db	1
   718  00EF5C  C0                 	db	192
   719  00EF5D  80                 	db	128
   720  00EF5E  41                 	db	65
   721  00EF5F  00                 	db	0
   722  00EF60  C1                 	db	193
   723  00EF61  81                 	db	129
   724  00EF62  40                 	db	64
   725  00EF63  00                 	db	0
   726  00EF64  C1                 	db	193
   727  00EF65  81                 	db	129
   728  00EF66  40                 	db	64
   729  00EF67  01                 	db	1
   730  00EF68  C0                 	db	192
   731  00EF69  80                 	db	128
   732  00EF6A  41                 	db	65
   733  00EF6B  01                 	db	1
   734  00EF6C  C0                 	db	192
   735  00EF6D  80                 	db	128
   736  00EF6E  41                 	db	65
   737  00EF6F  00                 	db	0
   738  00EF70  C1                 	db	193
   739  00EF71  81                 	db	129
   740  00EF72  40                 	db	64
   741  00EF73  00                 	db	0
   742  00EF74  C1                 	db	193
   743  00EF75  81                 	db	129
   744  00EF76  40                 	db	64
   745  00EF77  01                 	db	1
   746  00EF78  C0                 	db	192
   747  00EF79  80                 	db	128
   748  00EF7A  41                 	db	65
   749  00EF7B  00                 	db	0
   750  00EF7C  C1                 	db	193
   751  00EF7D  81                 	db	129
   752  00EF7E  40                 	db	64
   753  00EF7F  01                 	db	1
   754  00EF80  C0                 	db	192
   755  00EF81  80                 	db	128
   756  00EF82  41                 	db	65
   757  00EF83  01                 	db	1
   758  00EF84  C0                 	db	192
   759  00EF85  80                 	db	128
   760  00EF86  41                 	db	65
   761  00EF87  00                 	db	0
   762  00EF88  C1                 	db	193
   763  00EF89  81                 	db	129
   764  00EF8A  40                 	db	64
   765  00EF8B                     __end_of_auchCRCHi:
   766                           	opt stack 0
   767  00EF8B                     _LCDDigitalIndexTable:
   768                           	opt stack 0
   769  00EF8B  30                 	db	48
   770  00EF8C  31                 	db	49
   771  00EF8D  32                 	db	50
   772  00EF8E  33                 	db	51
   773  00EF8F  34                 	db	52
   774  00EF90  35                 	db	53
   775  00EF91  36                 	db	54
   776  00EF92  37                 	db	55
   777  00EF93  38                 	db	56
   778  00EF94  39                 	db	57
   779  00EF95  61                 	db	97
   780  00EF96  62                 	db	98
   781  00EF97  63                 	db	99
   782  00EF98  64                 	db	100
   783  00EF99  65                 	db	101
   784  00EF9A  66                 	db	102
   785  00EF9B  67                 	db	103
   786  00EF9C  68                 	db	104
   787  00EF9D  69                 	db	105
   788  00EF9E  6A                 	db	106
   789  00EF9F  6B                 	db	107
   790  00EFA0  6C                 	db	108
   791  00EFA1  6D                 	db	109
   792  00EFA2  6E                 	db	110
   793  00EFA3  6F                 	db	111
   794  00EFA4  70                 	db	112
   795  00EFA5  71                 	db	113
   796  00EFA6  72                 	db	114
   797  00EFA7  73                 	db	115
   798  00EFA8  74                 	db	116
   799  00EFA9  75                 	db	117
   800  00EFAA  76                 	db	118
   801  00EFAB  77                 	db	119
   802  00EFAC  78                 	db	120
   803  00EFAD  79                 	db	121
   804  00EFAE  7A                 	db	122
   805  00EFAF  2E                 	db	46
   806  00EFB0  2D                 	db	45
   807  00EFB1  3A                 	db	58
   808  00EFB2  20                 	db	32
   809  00EFB3  00                 	db	0
   810  00EFB4                     __end_of_LCDDigitalIndexTable:
   811                           	opt stack 0
   812  00EFB4                     _LCDDigitalTable:
   813                           	opt stack 0
   814  00EFB4  3F                 	db	63
   815  00EFB5  06                 	db	6
   816  00EFB6  5B                 	db	91
   817  00EFB7  4F                 	db	79
   818  00EFB8  66                 	db	102
   819  00EFB9  6D                 	db	109
   820  00EFBA  7D                 	db	125
   821  00EFBB  07                 	db	7
   822  00EFBC  7F                 	db	127
   823  00EFBD  6F                 	db	111
   824  00EFBE  77                 	db	119
   825  00EFBF  7C                 	db	124
   826  00EFC0  39                 	db	57
   827  00EFC1  5E                 	db	94
   828  00EFC2  79                 	db	121
   829  00EFC3  71                 	db	113
   830  00EFC4  6F                 	db	111
   831  00EFC5  76                 	db	118
   832  00EFC6  06                 	db	6
   833  00EFC7  0E                 	db	14
   834  00EFC8  7A                 	db	122
   835  00EFC9  38                 	db	56
   836  00EFCA  00                 	db	0
   837  00EFCB  37                 	db	55
   838  00EFCC  5C                 	db	92
   839  00EFCD  73                 	db	115
   840  00EFCE  67                 	db	103
   841  00EFCF  50                 	db	80
   842  00EFD0  6D                 	db	109
   843  00EFD1  78                 	db	120
   844  00EFD2  3E                 	db	62
   845  00EFD3  00                 	db	0
   846  00EFD4  00                 	db	0
   847  00EFD5  00                 	db	0
   848  00EFD6  6E                 	db	110
   849  00EFD7  5B                 	db	91
   850  00EFD8  40                 	db	64
   851  00EFD9  40                 	db	64
   852  00EFDA  48                 	db	72
   853  00EFDB  00                 	db	0
   854  00EFDC                     __end_of_LCDDigitalTable:
   855                           	opt stack 0
   856  00EFDC                     _HexTable:
   857                           	opt stack 0
   858  00EFDC  30                 	db	48
   859  00EFDD  31                 	db	49
   860  00EFDE  32                 	db	50
   861  00EFDF  33                 	db	51
   862  00EFE0  34                 	db	52
   863  00EFE1  35                 	db	53
   864  00EFE2  36                 	db	54
   865  00EFE3  37                 	db	55
   866  00EFE4  38                 	db	56
   867  00EFE5  39                 	db	57
   868  00EFE6  61                 	db	97
   869  00EFE7  62                 	db	98
   870  00EFE8  63                 	db	99
   871  00EFE9  64                 	db	100
   872  00EFEA  65                 	db	101
   873  00EFEB  66                 	db	102
   874  00EFEC  00                 	db	0
   875  00EFED                     __end_of_HexTable:
   876                           	opt stack 0
   877  00EFED                     _hKel:
   878                           	opt stack 0
   879  00EFED  0000               	dw	0
   880  00EFEF  0000               	dw	0
   881  00EFF1  4952               	dw	18770
   882  00EFF3  399D               	dw	14749
   883  00EFF5  4952               	dw	18770
   884  00EFF7  3A9D               	dw	15005
   885  00EFF9  64C3               	dw	25795
   886  00EFFB  3B2A               	dw	15146
   887  00EFFD  0275               	dw	629
   888  00EFFF  3B9A               	dw	15258
   889  00F001  34D7               	dw	13527
   890  00F003  3BEF               	dw	15343
   891  00F005  64C3               	dw	25795
   892  00F007  3C2A               	dw	15402
   893  00F009  6042               	dw	24642
   894  00F00B  3C65               	dw	15461
   895  00F00D  182B               	dw	6187
   896  00F00F  3C95               	dw	15509
   897  00F011  C711               	dw	50961
   898  00F013  3CBA               	dw	15546
   899  00F015  6042               	dw	24642
   900  00F017  3CE5               	dw	15589
   901  00F019  A027               	dw	40999
   902  00F01B  3D09               	dw	15625
   903  00F01D  9C78               	dw	40056
   904  00F01F  3D22               	dw	15650
   905  00F021  A512               	dw	42258
   906  00F023  3D3D               	dw	15677
   907  00F025  511A               	dw	20762
   908  00F027  3D5A               	dw	15706
   909  00F029  A090               	dw	41104
   910  00F02B  3D78               	dw	15736
   911  00F02D  7E28               	dw	32296
   912  00F02F  3D8C               	dw	15756
   913  00F031  7DBF               	dw	32191
   914  00F033  3D9D               	dw	15773
   915  00F035  1AA0               	dw	6816
   916  00F037  3DAF               	dw	15791
   917  00F039  BDA5               	dw	48549
   918  00F03B  3DC1               	dw	15809
   919  00F03D  FDF4               	dw	65012
   920  00F03F  3DD4               	dw	15828
   921  00F041  0FF9               	dw	4089
   922  00F043  3DE9               	dw	15849
   923  00F045  BF48               	dw	48968
   924  00F047  3DFD               	dw	15869
   925  00F049  A027               	dw	40999
   926  00F04B  3E09               	dw	15881
   927  00F04D  AF4F               	dw	44879
   928  00F04F  3E14               	dw	15892
   929  00F051  0D1B               	dw	3355
   930  00F053  3E20               	dw	15904
   931  00F055  9F56               	dw	40790
   932  00F057  3E2B               	dw	15915
   933  00F059  9A6B               	dw	39531
   934  00F05B  3E37               	dw	15927
   935  00F05D  E426               	dw	58406
   936  00F05F  3E43               	dw	15939
   937  00F061  624E               	dw	25166
   938  00F063  3E50               	dw	15952
   939  00F065  2F1B               	dw	12059
   940  00F067  3E5D               	dw	15965
   941  00F069  3055               	dw	12373
   942  00F06B  3E6A               	dw	15978
   943  00F06D  8034               	dw	32820
   944  00F06F  3E77               	dw	15991
   945  00F071  7525               	dw	29989
   946  00F073  3E82               	dw	16002
   947  00F075  5183               	dw	20867
   948  00F077  3E89               	dw	16009
   949  00F079  4817               	dw	18455
   950  00F07B  3E90               	dw	16016
   951  00F07D  4BC7               	dw	19399
   952  00F07F  3E97               	dw	16023
   953  00F081  69AD               	dw	27053
   954  00F083  3E9E               	dw	16030
   955  00F085  A1CB               	dw	41419
   956  00F087  3EA5               	dw	16037
   957  00F089  E704               	dw	59140
   958  00F08B  3EAC               	dw	16044
   959  00F08D  3958               	dw	14680
   960  00F08F  3EB4               	dw	16052
   961  00F091  A5E3               	dw	42467
   962  00F093  3EBB               	dw	16059
   963  00F095  126F               	dw	4719
   964  00F097  3EC3               	dw	16067
   965  00F099  9931               	dw	39217
   966  00F09B  3ECA               	dw	16074
   967  00F09D  1FF3               	dw	8179
   968  00F09F  3ED2               	dw	16082
   969  00F0A1  C0EC               	dw	49388
   970  00F0A3  3ED9               	dw	16089
   971  00F0A5  54CA               	dw	21706
   972  00F0A7  3EE1               	dw	16097
   973  00F0A9  02DE               	dw	734
   974  00F0AB  3EE9               	dw	16105
   975  00F0AD  A3D7               	dw	41943
   976  00F0AF  3EF0               	dw	16112
   977  00F0B1  51EC               	dw	20972
   978  00F0B3  3EF8               	dw	16120
   979  00F0B5  0000               	dw	0
   980  00F0B7  3F00               	dw	16128
   981  00F0B9  D70A               	dw	55050
   982  00F0BB  3F03               	dw	16131
   983  00F0BD  AE14               	dw	44564
   984  00F0BF  3F07               	dw	16135
   985  00F0C1  7E91               	dw	32401
   986  00F0C3  3F0B               	dw	16139
   987  00F0C5  559B               	dw	21915
   988  00F0C7  3F0F               	dw	16143
   989  00F0C9  2618               	dw	9752
   990  00F0CB  3F13               	dw	16147
   991  00F0CD  F007               	dw	61447
   992  00F0CF  3F16               	dw	16150
   993  00F0D1  B368               	dw	45928
   994  00F0D3  3F1A               	dw	16154
   995  00F0D5  76C9               	dw	30409
   996  00F0D7  3F1E               	dw	16158
   997  00F0D9  2D0E               	dw	11534
   998  00F0DB  3F22               	dw	16162
   999  00F0DD  E354               	dw	58196
  1000  00F0DF  3F25               	dw	16165
  1001  00F0E1  8C7E               	dw	35966
  1002  00F0E3  3F29               	dw	16169
  1003  00F0E5  2F1B               	dw	12059
  1004  00F0E7  3F2D               	dw	16173
  1005  00F0E9  CB29               	dw	52009
  1006  00F0EB  3F30               	dw	16176
  1007  00F0ED  5A1D               	dw	23069
  1008  00F0EF  3F34               	dw	16180
  1009  00F0F1  E282               	dw	57986
  1010  00F0F3  3F37               	dw	16183
  1011  00F0F5  573F               	dw	22335
  1012  00F0F7  3F3B               	dw	16187
  1013  00F0F9  C56D               	dw	50541
  1014  00F0FB  3F3E               	dw	16190
  1015  00F0FD  1FF3               	dw	8179
  1016  00F0FF  3F42               	dw	16194
  1017  00F101  73EB               	dw	29675
  1018  00F103  3F45               	dw	16197
  1019  00F105  B439               	dw	46137
  1020  00F107  3F48               	dw	16200
  1021  00F109  E76D               	dw	59245
  1022  00F10B  3F4B               	dw	16203
  1023  00F10D  06F7               	dw	1783
  1024  00F10F  3F4F               	dw	16207
  1025  00F111  1965               	dw	6501
  1026  00F113  3F52               	dw	16210
  1027  00F115  182B               	dw	6187
  1028  00F117  3F55               	dw	16213
  1029  00F119  0347               	dw	839
  1030  00F11B  3F58               	dw	16216
  1031  00F11D  D42C               	dw	54316
  1032  00F11F  3F5A               	dw	16218
  1033  00F121  97F6               	dw	38902
  1034  00F123  3F5D               	dw	16221
  1035  00F125  4817               	dw	18455
  1036  00F127  3F60               	dw	16224
  1037  00F129  DE01               	dw	56833
  1038  00F12B  3F62               	dw	16226
  1039  00F12D  6042               	dw	24642
  1040  00F12F  3F65               	dw	16229
  1041  00F131  C84B               	dw	51275
  1042  00F133  3F67               	dw	16231
  1043  00F135  1CAC               	dw	7340
  1044  00F137  3F6A               	dw	16234
  1045  00F139  5048               	dw	20552
  1046  00F13B  3F6C               	dw	16236
  1047  00F13D  703B               	dw	28731
  1048  00F13F  3F6E               	dw	16238
  1049  00F141  6F69               	dw	28521
  1050  00F143  3F70               	dw	16240
  1051  00F145  5AEE               	dw	23278
  1052  00F147  3F72               	dw	16242
  1053  00F149  25AF               	dw	9647
  1054  00F14B  3F74               	dw	16244
  1055  00F14D  D639               	dw	54841
  1056  00F14F  3F75               	dw	16245
  1057  00F151  65FE               	dw	26110
  1058  00F153  3F77               	dw	16247
  1059  00F155  D4FE               	dw	54526
  1060  00F157  3F78               	dw	16248
  1061  00F159  29C7               	dw	10695
  1062  00F15B  3F7A               	dw	16250
  1063  00F15D  573F               	dw	22335
  1064  00F15F  3F7B               	dw	16251
  1065  00F161  6A7F               	dw	27263
  1066  00F163  3F7C               	dw	16252
  1067  00F165  566D               	dw	22125
  1068  00F167  3F7D               	dw	16253
  1069  00F169  2824               	dw	10276
  1070  00F16B  3F7E               	dw	16254
  1071  00F16D  CBFB               	dw	52219
  1072  00F16F  3F7E               	dw	16254
  1073  00F171  559B               	dw	21915
  1074  00F173  3F7F               	dw	16255
  1075  00F175  B15B               	dw	45403
  1076  00F177  3F7F               	dw	16255
  1077  00F179  EC57               	dw	60503
  1078  00F17B  3F7F               	dw	16255
  1079  00F17D  0000               	dw	0
  1080  00F17F  3F80               	dw	16256
  1081  00F181                     __end_of_hKel:
  1082                           	opt stack 0
  1083  00F181                     _hKcy:
  1084                           	opt stack 0
  1085  00F181  0000               	dw	0
  1086  00F183  0000               	dw	0
  1087  00F185  D289               	dw	53897
  1088  00F187  3ADE               	dw	15070
  1089  00F189  4952               	dw	18770
  1090  00F18B  3B9D               	dw	15261
  1091  00F18D  8A72               	dw	35442
  1092  00F18F  3C0E               	dw	15374
  1093  00F191  8BAC               	dw	35756
  1094  00F193  3C5B               	dw	15451
  1095  00F195  30BE               	dw	12478
  1096  00F197  3C99               	dw	15513
  1097  00F199  B439               	dw	46137
  1098  00F19B  3CC8               	dw	15560
  1099  00F19D  5048               	dw	20552
  1100  00F19F  3CFC               	dw	15612
  1101  00F1A1  999A               	dw	39322
  1102  00F1A3  3D19               	dw	15641
  1103  00F1A5  AE7D               	dw	44669
  1104  00F1A7  3D36               	dw	15670
  1105  00F1A9  FDF4               	dw	65012
  1106  00F1AB  3D54               	dw	15700
  1107  00F1AD  F0D8               	dw	61656
  1108  00F1AF  3D74               	dw	15732
  1109  00F1B1  4396               	dw	17302
  1110  00F1B3  3D8B               	dw	15755
  1111  00F1B5  779A               	dw	30618
  1112  00F1B7  3D9C               	dw	15772
  1113  00F1B9  48E9               	dw	18665
  1114  00F1BB  3DAE               	dw	15790
  1115  00F1BD  B780               	dw	46976
  1116  00F1BF  3DC0               	dw	15808
  1117  00F1C1  8EF3               	dw	36595
  1118  00F1C3  3DD3               	dw	15827
  1119  00F1C5  CF42               	dw	53058
  1120  00F1C7  3DE6               	dw	15846
  1121  00F1C9  ACDA               	dw	44250
  1122  00F1CB  3DFA               	dw	15866
  1123  00F1CD  79A7               	dw	31143
  1124  00F1CF  3E07               	dw	15879
  1125  00F1D1  D14E               	dw	53582
  1126  00F1D3  3E11               	dw	15889
  1127  00F1D5  5D64               	dw	23908
  1128  00F1D7  3E1C               	dw	15900
  1129  00F1D9  03B0               	dw	944
  1130  00F1DB  3E27               	dw	15911
  1131  00F1DD  F8A1               	dw	63649
  1132  00F1DF  3E31               	dw	15921
  1133  00F1E1  ED91               	dw	60817
  1134  00F1E3  3E3C               	dw	15932
  1135  00F1E5  3127               	dw	12583
  1136  00F1E7  3E48               	dw	15944
  1137  00F1E9  8EF3               	dw	36595
  1138  00F1EB  3E53               	dw	15955
  1139  00F1ED  06F7               	dw	1783
  1140  00F1EF  3E5F               	dw	15967
  1141  00F1F1  B368               	dw	45928
  1142  00F1F3  3E6A               	dw	15978
  1143  00F1F5  7A10               	dw	31248
  1144  00F1F7  3E76               	dw	15990
  1145  00F1F9  2D77               	dw	11639
  1146  00F1FB  3E81               	dw	16001
  1147  00F1FD  2B02               	dw	11010
  1148  00F1FF  3E87               	dw	16007
  1149  00F201  42C4               	dw	17092
  1150  00F203  3E8D               	dw	16013
  1151  00F205  5A86               	dw	23174
  1152  00F207  3E93               	dw	16019
  1153  00F209  7F63               	dw	32611
  1154  00F20B  3E99               	dw	16025
  1155  00F20D  B15B               	dw	45403
  1156  00F20F  3E9F               	dw	16031
  1157  00F211  F06F               	dw	61551
  1158  00F213  3EA5               	dw	16037
  1159  00F215  3C9F               	dw	15519
  1160  00F217  3EAC               	dw	16044
  1161  00F219  88CE               	dw	35022
  1162  00F21B  3EB2               	dw	16050
  1163  00F21D  E219               	dw	57881
  1164  00F21F  3EB8               	dw	16056
  1165  00F221  3B64               	dw	15204
  1166  00F223  3EBF               	dw	16063
  1167  00F225  A1CB               	dw	41419
  1168  00F227  3EC5               	dw	16069
  1169  00F229  154D               	dw	5453
  1170  00F22B  3ECC               	dw	16076
  1171  00F22D  88CE               	dw	35022
  1172  00F22F  3ED2               	dw	16082
  1173  00F231  FC50               	dw	64592
  1174  00F233  3ED8               	dw	16088
  1175  00F235  6FD2               	dw	28626
  1176  00F237  3EDF               	dw	16095
  1177  00F239  F06F               	dw	61551
  1178  00F23B  3EE5               	dw	16101
  1179  00F23D  710D               	dw	28941
  1180  00F23F  3EEC               	dw	16108
  1181  00F241  F1AA               	dw	61866
  1182  00F243  3EF2               	dw	16114
  1183  00F245  7F63               	dw	32611
  1184  00F247  3EF9               	dw	16121
  1185  00F249  0000               	dw	0
  1186  00F24B  3F00               	dw	16128
  1187  00F24D  404F               	dw	16463
  1188  00F24F  3F03               	dw	16131
  1189  00F251  872B               	dw	34603
  1190  00F253  3F06               	dw	16134
  1191  00F255  C77A               	dw	51066
  1192  00F257  3F09               	dw	16137
  1193  00F259  07C8               	dw	1992
  1194  00F25B  3F0D               	dw	16141
  1195  00F25D  4817               	dw	18455
  1196  00F25F  3F10               	dw	16144
  1197  00F261  81D8               	dw	33240
  1198  00F263  3F13               	dw	16147
  1199  00F265  BB99               	dw	48025
  1200  00F267  3F16               	dw	16150
  1201  00F269  F55A               	dw	62810
  1202  00F26B  3F19               	dw	16153
  1203  00F26D  2F1B               	dw	12059
  1204  00F26F  3F1D               	dw	16157
  1205  00F271  624E               	dw	25166
  1206  00F273  3F20               	dw	16160
  1207  00F275  8EF3               	dw	36595
  1208  00F277  3F23               	dw	16163
  1209  00F279  BB99               	dw	48025
  1210  00F27B  3F26               	dw	16166
  1211  00F27D  E1B1               	dw	57777
  1212  00F27F  3F29               	dw	16169
  1213  00F281  07C8               	dw	1992
  1214  00F283  3F2D               	dw	16173
  1215  00F285  2752               	dw	10066
  1216  00F287  3F30               	dw	16176
  1217  00F289  404F               	dw	16463
  1218  00F28B  3F33               	dw	16179
  1219  00F28D  52BD               	dw	21181
  1220  00F28F  3F36               	dw	16182
  1221  00F291  5E9E               	dw	24222
  1222  00F293  3F39               	dw	16185
  1223  00F295  6A7F               	dw	27263
  1224  00F297  3F3C               	dw	16188
  1225  00F299  6944               	dw	26948
  1226  00F29B  3F3F               	dw	16191
  1227  00F29D  617C               	dw	24956
  1228  00F29F  3F42               	dw	16194
  1229  00F2A1  5326               	dw	21286
  1230  00F2A3  3F45               	dw	16197
  1231  00F2A5  3E42               	dw	15938
  1232  00F2A7  3F48               	dw	16200
  1233  00F2A9  1C43               	dw	7235
  1234  00F2AB  3F4B               	dw	16203
  1235  00F2AD  F3B6               	dw	62390
  1236  00F2AF  3F4D               	dw	16205
  1237  00F2B1  C49C               	dw	50332
  1238  00F2B3  3F50               	dw	16208
  1239  00F2B5  81D8               	dw	33240
  1240  00F2B7  3F53               	dw	16211
  1241  00F2B9  3F14               	dw	16148
  1242  00F2BB  3F56               	dw	16214
  1243  00F2BD  E8A7               	dw	59559
  1244  00F2BF  3F58               	dw	16216
  1245  00F2C1  8BAC               	dw	35756
  1246  00F2C3  3F5B               	dw	16219
  1247  00F2C5  2196               	dw	8598
  1248  00F2C7  3F5E               	dw	16222
  1249  00F2C9  AA65               	dw	43621
  1250  00F2CB  3F60               	dw	16224
  1251  00F2CD  2618               	dw	9752
  1252  00F2CF  3F63               	dw	16227
  1253  00F2D1  8E22               	dw	36386
  1254  00F2D3  3F65               	dw	16229
  1255  00F2D5  E910               	dw	59664
  1256  00F2D7  3F67               	dw	16231
  1257  00F2D9  36E3               	dw	14051
  1258  00F2DB  3F6A               	dw	16234
  1259  00F2DD  710D               	dw	28941
  1260  00F2DF  3F6C               	dw	16236
  1261  00F2E1  978D               	dw	38797
  1262  00F2E3  3F6E               	dw	16238
  1263  00F2E5  B0F2               	dw	45298
  1264  00F2E7  3F70               	dw	16240
  1265  00F2E9  B021               	dw	45089
  1266  00F2EB  3F72               	dw	16242
  1267  00F2ED  9518               	dw	38168
  1268  00F2EF  3F74               	dw	16244
  1269  00F2F1  6666               	dw	26214
  1270  00F2F3  3F76               	dw	16246
  1271  00F2F5  1D7E               	dw	7550
  1272  00F2F7  3F78               	dw	16248
  1273  00F2F9  BA5E               	dw	47710
  1274  00F2FB  3F79               	dw	16249
  1275  00F2FD  367A               	dw	13946
  1276  00F2FF  3F7B               	dw	16251
  1277  00F301  91D1               	dw	37329
  1278  00F303  3F7C               	dw	16252
  1279  00F305  C5D6               	dw	50646
  1280  00F307  3F7D               	dw	16253
  1281  00F309  C56D               	dw	50541
  1282  00F30B  3F7E               	dw	16254
  1283  00F30D  9097               	dw	37015
  1284  00F30F  3F7F               	dw	16255
  1285  00F311  0000               	dw	0
  1286  00F313  3F80               	dw	16256
  1287  00F315                     __end_of_hKcy:
  1288                           	opt stack 0
  1289  00F315                     _defultSystemData:
  1290                           	opt stack 0
  1291  00F315  0000               	dw	0
  1292  00F317  0000               	dw	0
  1293  00F319  00                 	db	0
  1294  00F31A  5F                 	db	95
  1295  00F31B  03E8               	dw	1000
  1296  00F31D  2710               	dw	10000
  1297  00F31F  0000               	dw	0
  1298  00F321  1388               	dw	5000
  1299  00F323  0000               	dw	0
  1300  00F325  0000               	dw	0
  1301  00F327  0000               	dw	0
  1302  00F329  0000               	dw	0
  1303  00F32B  0000               	dw	0
  1304  00F32D  FF38               	dw	65336
  1305  00F32F  FFFF               	dw	65535
  1306  00F331  0000               	dw	0
  1307  00F333  0000               	dw	0
  1308  00F335  00                 	db	0
  1309  00F336  00                 	db	0
  1310  00F337  00                 	db	0
  1311  00F338  00                 	db	0
  1312  00F339  00                 	db	0
  1313  00F33A  00                 	db	0
  1314  00F33B  00                 	db	0
  1315  00F33C  00                 	db	0
  1316  00F33D  00                 	db	0
  1317  00F33E  00                 	db	0
  1318  00F33F  00                 	db	0
  1319  00F340  00                 	db	0
  1320  00F341  00                 	db	0
  1321  00F342  00                 	db	0
  1322  00F343  00                 	db	0
  1323  00F344  00                 	db	0
  1324  00F345  00                 	db	0
  1325  00F346  00                 	db	0
  1326  00F347  00                 	db	0
  1327  00F348  00                 	db	0
  1328  00F349  00                 	db	0
  1329  00F34A  00                 	db	0
  1330  00F34B  00                 	db	0
  1331  00F34C  00                 	db	0
  1332  00F34D  00                 	db	0
  1333  00F34E  00                 	db	0
  1334  00F34F  00                 	db	0
  1335  00F350  00                 	db	0
  1336  00F351  00                 	db	0
  1337  00F352  00                 	db	0
  1338  00F353  00                 	db	0
  1339  00F354  00                 	db	0
  1340  00F355  00                 	db	0
  1341  00F356  00                 	db	0
  1342  00F357  00                 	db	0
  1343  00F358  00                 	db	0
  1344  00F359  00                 	db	0
  1345  00F35A  00                 	db	0
  1346  00F35B  00                 	db	0
  1347  00F35C  00                 	db	0
  1348  00F35D  00                 	db	0
  1349  00F35E  00                 	db	0
  1350  00F35F  00                 	db	0
  1351  00F360  00                 	db	0
  1352  00F361  0000               	dw	0
  1353  00F363  0000               	dw	0
  1354  00F365  00                 	db	0
  1355  00F366  00                 	db	0
  1356  00F367  00                 	db	0
  1357  00F368  00                 	db	0
  1358  00F369  00                 	db	0
  1359  00F36A  00                 	db	0
  1360  00F36B  00                 	db	0
  1361  00F36C  00                 	db	0
  1362  00F36D  28                 	db	40
  1363  00F36E  1E                 	db	30
  1364  00F36F  14                 	db	20
  1365  00F370  0A                 	db	10
  1366  00F371  03E8               	dw	1000
  1367  00F373  0000               	dw	0
  1368  00F375  03E8               	dw	1000
  1369  00F377  0000               	dw	0
  1370  00F379  0000               	dw	0
  1371  00F37B  0000               	dw	0
  1372  00F37D  00                 	db	0
  1373  00F37E  00                 	db	0
  1374  00F37F  00                 	db	0
  1375  00F380  00                 	db	0
  1376  00F381  03E8               	dw	1000
  1377  00F383  0000               	dw	0
  1378  00F385  03E8               	dw	1000
  1379  00F387  0000               	dw	0
  1380  00F389  0000               	dw	0
  1381  00F38B  0000               	dw	0
  1382  00F38D  00                 	db	0
  1383  00F38E  00                 	db	0
  1384  00F38F  00                 	db	0
  1385  00F390  00                 	db	0
  1386  00F391  03E8               	dw	1000
  1387  00F393  0000               	dw	0
  1388  00F395  03E8               	dw	1000
  1389  00F397  0000               	dw	0
  1390  00F399  0000               	dw	0
  1391  00F39B  0000               	dw	0
  1392  00F39D  03E8               	dw	1000
  1393  00F39F  0000               	dw	0
  1394  00F3A1  0000               	dw	0
  1395  00F3A3  0000               	dw	0
  1396  00F3A5  03E8               	dw	1000
  1397  00F3A7  0000               	dw	0
  1398  00F3A9  0000               	dw	0
  1399  00F3AB                     __end_of_defultSystemData:
  1400                           	opt stack 0
  1401  00F3AB                     _flashTestbuf:
  1402                           	opt stack 0
  1403  00F3AB  30                 	db	48
  1404  00F3AC  31                 	db	49
  1405  00F3AD  32                 	db	50
  1406  00F3AE  33                 	db	51
  1407  00F3AF  34                 	db	52
  1408  00F3B0  35                 	db	53
  1409  00F3B1  36                 	db	54
  1410  00F3B2  37                 	db	55
  1411  00F3B3  38                 	db	56
  1412  00F3B4  39                 	db	57
  1413  00F3B5  30                 	db	48
  1414  00F3B6  31                 	db	49
  1415  00F3B7  32                 	db	50
  1416  00F3B8  33                 	db	51
  1417  00F3B9  34                 	db	52
  1418  00F3BA  35                 	db	53
  1419  00F3BB  36                 	db	54
  1420  00F3BC  37                 	db	55
  1421  00F3BD  38                 	db	56
  1422  00F3BE  39                 	db	57
  1423  00F3BF  30                 	db	48
  1424  00F3C0  31                 	db	49
  1425  00F3C1  32                 	db	50
  1426  00F3C2  33                 	db	51
  1427  00F3C3  34                 	db	52
  1428  00F3C4  35                 	db	53
  1429  00F3C5  36                 	db	54
  1430  00F3C6  37                 	db	55
  1431  00F3C7  38                 	db	56
  1432  00F3C8  39                 	db	57
  1433  00F3C9  30                 	db	48
  1434  00F3CA  31                 	db	49
  1435  00F3CB  32                 	db	50
  1436  00F3CC  33                 	db	51
  1437  00F3CD  34                 	db	52
  1438  00F3CE  35                 	db	53
  1439  00F3CF  36                 	db	54
  1440  00F3D0  37                 	db	55
  1441  00F3D1  38                 	db	56
  1442  00F3D2  39                 	db	57
  1443  00F3D3  30                 	db	48
  1444  00F3D4  31                 	db	49
  1445  00F3D5  32                 	db	50
  1446  00F3D6  33                 	db	51
  1447  00F3D7  34                 	db	52
  1448  00F3D8  35                 	db	53
  1449  00F3D9  36                 	db	54
  1450  00F3DA  37                 	db	55
  1451  00F3DB  38                 	db	56
  1452  00F3DC  39                 	db	57
  1453  00F3DD  30                 	db	48
  1454  00F3DE  31                 	db	49
  1455  00F3DF  32                 	db	50
  1456  00F3E0  33                 	db	51
  1457  00F3E1  34                 	db	52
  1458  00F3E2  35                 	db	53
  1459  00F3E3  36                 	db	54
  1460  00F3E4  37                 	db	55
  1461  00F3E5  38                 	db	56
  1462  00F3E6  39                 	db	57
  1463  00F3E7  30                 	db	48
  1464  00F3E8  31                 	db	49
  1465  00F3E9  32                 	db	50
  1466  00F3EA  33                 	db	51
  1467  00F3EB  00                 	db	0
  1468  00F3EC                     __end_of_flashTestbuf:
  1469                           	opt stack 0
  1470  0000                     _RTCVALH	set	3933
  1471  0000                     _RTCVALL	set	3932
  1472  0000                     _stRTCCFGbits	set	3935
  1473  0000                     _ALRMCFGbits	set	3931
  1474  0000                     _ALRMRPT	set	3930
  1475  0000                     _PADCFG1bits	set	3924
  1476  0000                     _RTCCFGbits	set	3935
  1477  0000                     _PR2	set	4043
  1478  0000                     _T2CON	set	4042
  1479  0000                     _RCONbits	set	4048
  1480  0000                     _T1CONbits	set	4045
  1481  0000                     _IPR3bits	set	4005
  1482  0000                     _PIR3bits	set	4004
  1483  0000                     _PIE3bits	set	4003
  1484  0000                     _INTCON2bits	set	4081
  1485  0000                     _OSCCONbits	set	4051
  1486  0000                     _FSR0H	set	4074
  1487  0000                     _FSR0L	set	4073
  1488  0000                     _TABLAT	set	4085
  1489  0000                     _TBLPTRU	set	4088
  1490  0000                     _TBLPTRH	set	4087
  1491  0000                     _TBLPTRL	set	4086
  1492  0000                     _EECON1bits	set	4006
  1493  0000                     _INTCONbits	set	4082
  1494  0000                     _INTCON	set	4082
  1495  0000                     _LCDCON	set	4008
  1496  0000                     _LATG	set	3983
  1497  0000                     _TRISG	set	3992
  1498  0000                     _LCDSE5	set	4026
  1499  0000                     _LCDSE4	set	4025
  1500  0000                     _LCDSE3	set	4024
  1501  0000                     _LCDSE2	set	4023
  1502  0000                     _LCDSE1	set	4022
  1503  0000                     _LCDSE0	set	4009
  1504  0000                     _LCDPSbits	set	4010
  1505  0000                     _LCDREG	set	4050
  1506  0000                     _LCDDATA23	set	3965
  1507  0000                     _LCDDATA22	set	3964
  1508  0000                     _LCDDATA21	set	3963
  1509  0000                     _LCDDATA20	set	3962
  1510  0000                     _LCDDATA19	set	3961
  1511  0000                     _LCDDATA18	set	3960
  1512  0000                     _LCDDATA17	set	3959
  1513  0000                     _LCDDATA16	set	3958
  1514  0000                     _LCDDATA15	set	3957
  1515  0000                     _LCDDATA14	set	3956
  1516  0000                     _LCDDATA13	set	3955
  1517  0000                     _LCDDATA12	set	3954
  1518  0000                     _LCDDATA11	set	3953
  1519  0000                     _LCDDATA10	set	3952
  1520  0000                     _LCDDATA9	set	3951
  1521  0000                     _LCDDATA8	set	3950
  1522  0000                     _LCDDATA7	set	3949
  1523  0000                     _LCDDATA6	set	3948
  1524  0000                     _LCDDATA5	set	3947
  1525  0000                     _LCDDATA4	set	4031
  1526  0000                     _LCDDATA3	set	4030
  1527  0000                     _LCDDATA2	set	4029
  1528  0000                     _LCDDATA1	set	4028
  1529  0000                     _LCDDATA0	set	4027
  1530  0000                     _PORTB	set	3969
  1531  0000                     _ADRESL	set	4035
  1532  0000                     _ADRESH	set	4036
  1533  0000                     _IPR1bits	set	3999
  1534  0000                     _PIE1bits	set	3997
  1535  0000                     _PIR1bits	set	3998
  1536  0000                     _ADCON0bits	set	4034
  1537  0000                     _ADCON2bits	set	4032
  1538  0000                     _ADCON1	set	4033
  1539  0000                     _PORTC	set	3970
  1540  0000                     _LATC	set	3979
  1541  0000                     _TRISC	set	3988
  1542  0000                     _LATB	set	3978
  1543  0000                     _TRISB	set	3987
  1544  00F3EC                     STR_2:
  1545  00F3EC  20                 	db	32
  1546  00F3ED  20                 	db	32
  1547  00F3EE  20                 	db	32
  1548  00F3EF  20                 	db	32
  1549  00F3F0  20                 	db	32
  1550  00F3F1  20                 	db	32
  1551  00F3F2  20                 	db	32
  1552  00F3F3  20                 	db	32
  1553  00F3F4  00                 	db	0
  1554  00F3F5                     STR_1:
  1555  00F3F5  63                 	db	99	;'c'
  1556  00F3F6  73                 	db	115	;'s'
  1557  00F3F7  36                 	db	54	;'6'
  1558  00F3F8  36                 	db	54	;'6'
  1559  00F3F9  00                 	db	0
  1560  00F3FA                     STR_3:
  1561  00F3FA  20                 	db	32
  1562  00F3FB  70                 	db	112	;'p'
  1563  00F3FC  73                 	db	115	;'s'
  1564  00F3FD  64                 	db	100	;'d'
  1565  00F3FE  00                 	db	0
  1566                           
  1567                           ; #config settings
  1568  00F3FF  00                 	db	0	; dummy byte at the end
  1569  0000                     
  1570                           	psect	cinit
  1571  0062AA                     __pcinit:
  1572                           	opt stack 0
  1573  0062AA                     start_initialization:
  1574                           	opt stack 0
  1575  0062AA                     __initialization:
  1576                           	opt stack 0
  1577                           
  1578                           ; Initialize objects allocated to BANK1 (13 bytes)
  1579                           ; load TBLPTR registers with __pidataBANK1
  1580  0062AA  0EF6               	movlw	low __pidataBANK1
  1581  0062AC  6EF6               	movwf	tblptrl,c
  1582  0062AE  0E81               	movlw	high __pidataBANK1
  1583  0062B0  6EF7               	movwf	tblptrh,c
  1584  0062B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1585  0062B4  6EF8               	movwf	tblptru,c
  1586  0062B6  EE01  F0E6         	lfsr	0,__pdataBANK1
  1587  0062BA  EE10 F00D          	lfsr	1,13
  1588  0062BE                     copy_data0:
  1589  0062BE  0009               	tblrd		*+
  1590  0062C0  CFF5 FFEE          	movff	tablat,postinc0
  1591  0062C4  50E5               	movf	postdec1,w,c
  1592  0062C6  50E1               	movf	fsr1l,w,c
  1593  0062C8  E1FA               	bnz	copy_data0
  1594                           
  1595                           ; Initialize objects allocated to COMRAM (4 bytes)
  1596                           ; load TBLPTR registers with __pidataCOMRAM
  1597  0062CA  0E26               	movlw	low __pidataCOMRAM
  1598  0062CC  6EF6               	movwf	tblptrl,c
  1599  0062CE  0E82               	movlw	high __pidataCOMRAM
  1600  0062D0  6EF7               	movwf	tblptrh,c
  1601  0062D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1602  0062D4  6EF8               	movwf	tblptru,c
  1603  0062D6  EE00  F03C         	lfsr	0,__pdataCOMRAM
  1604  0062DA  EE10 F004          	lfsr	1,4
  1605  0062DE                     copy_data1:
  1606  0062DE  0009               	tblrd		*+
  1607  0062E0  CFF5 FFEE          	movff	tablat,postinc0
  1608  0062E4  50E5               	movf	postdec1,w,c
  1609  0062E6  50E1               	movf	fsr1l,w,c
  1610  0062E8  E1FA               	bnz	copy_data1
  1611                           
  1612                           ; Clear objects allocated to BANK5 (256 bytes)
  1613  0062EA  EE05  F000         	lfsr	0,__pbssBANK5
  1614  0062EE  EE11 F000          	lfsr	1,256
  1615  0062F2                     clear_0:
  1616  0062F2  6AEE               	clrf	postinc0,c
  1617  0062F4  50E5               	movf	postdec1,w,c
  1618  0062F6  50E1               	movf	fsr1l,w,c
  1619  0062F8  E1FC               	bnz	clear_0
  1620  0062FA  50E2               	movf	fsr1h,w,c
  1621  0062FC  E1FA               	bnz	clear_0
  1622                           
  1623                           ; Clear objects allocated to BANK4 (256 bytes)
  1624  0062FE  EE04  F000         	lfsr	0,__pbssBANK4
  1625  006302  EE11 F000          	lfsr	1,256
  1626  006306                     clear_1:
  1627  006306  6AEE               	clrf	postinc0,c
  1628  006308  50E5               	movf	postdec1,w,c
  1629  00630A  50E1               	movf	fsr1l,w,c
  1630  00630C  E1FC               	bnz	clear_1
  1631  00630E  50E2               	movf	fsr1h,w,c
  1632  006310  E1FA               	bnz	clear_1
  1633                           
  1634                           ; Clear objects allocated to BANK3 (162 bytes)
  1635  006312  EE03  F000         	lfsr	0,__pbssBANK3
  1636  006316  0EA2               	movlw	162
  1637  006318                     clear_2:
  1638  006318  6AEE               	clrf	postinc0,c
  1639  00631A  06E8               	decf	wreg,f,c
  1640  00631C  E1FD               	bnz	clear_2
  1641                           
  1642                           ; Clear objects allocated to BANK2 (194 bytes)
  1643  00631E  EE02  F000         	lfsr	0,__pbssBANK2
  1644  006322  0EC2               	movlw	194
  1645  006324                     clear_3:
  1646  006324  6AEE               	clrf	postinc0,c
  1647  006326  06E8               	decf	wreg,f,c
  1648  006328  E1FD               	bnz	clear_3
  1649                           
  1650                           ; Clear objects allocated to BANK1 (230 bytes)
  1651  00632A  EE01  F000         	lfsr	0,__pbssBANK1
  1652  00632E  0EE6               	movlw	230
  1653  006330                     clear_4:
  1654  006330  6AEE               	clrf	postinc0,c
  1655  006332  06E8               	decf	wreg,f,c
  1656  006334  E1FD               	bnz	clear_4
  1657                           
  1658                           ; Clear objects allocated to BANK0 (2 bytes)
  1659  006336  0100               	movlb	0
  1660  006338  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  1661  00633A  6BFE               	clrf	__pbssBANK0& (0+255),b
  1662                           
  1663                           ; Clear objects allocated to COMRAM (27 bytes)
  1664  00633C  EE00  F021         	lfsr	0,__pbssCOMRAM
  1665  006340  0E1B               	movlw	27
  1666  006342                     clear_5:
  1667  006342  6AEE               	clrf	postinc0,c
  1668  006344  06E8               	decf	wreg,f,c
  1669  006346  E1FD               	bnz	clear_5
  1670  006348                     end_of_initialization:
  1671                           	opt stack 0
  1672  006348                     __end_of__initialization:
  1673                           	opt stack 0
  1674  006348  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1675  00634A  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1676  00634C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1677  00634E  6EF8               	movwf	tblptru,c
  1678  006350  0100               	movlb	0
  1679  006352  EF54  F03E         	goto	_main	;jump to C main() function
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           
  1690                           	psect	bssCOMRAM
  1691  000021                     __pbssCOMRAM:
  1692                           	opt stack 0
  1693  000021                     _rtHight:
  1694                           	opt stack 0
  1695  000021                     	ds	4
  1696  000025                     _rtDiffPressure:
  1697                           	opt stack 0
  1698  000025                     	ds	4
  1699  000029                     _pAds1115PrObj:
  1700                           	opt stack 0
  1701  000029                     	ds	2
  1702  00002B                     _pAds1115DiffPrObj:
  1703                           	opt stack 0
  1704  00002B                     	ds	2
  1705  00002D                     _inSocSampleTimer:
  1706                           	opt stack 0
  1707  00002D                     	ds	1
  1708  00002E                     _commonSampleTimer:
  1709                           	opt stack 0
  1710  00002E                     	ds	1
  1711  00002F                     _slowSampleTimer:
  1712                           	opt stack 0
  1713  00002F                     	ds	1
  1714  000030                     _diffSampCh:
  1715                           	opt stack 0
  1716  000030                     	ds	1
  1717  000031                     _diffSampCount_D23:
  1718                           	opt stack 0
  1719  000031                     	ds	1
  1720  000032                     _diffSampCount_D01:
  1721                           	opt stack 0
  1722  000032                     	ds	1
  1723  000033                     _dlyTickerEn:
  1724                           	opt stack 0
  1725  000033                     	ds	1
  1726  000034                     _pcf8574Value:
  1727                           	opt stack 0
  1728  000034                     	ds	1
  1729  000035                     _glbEvent:
  1730                           	opt stack 0
  1731  000035                     	ds	1
  1732  000036                     _lcdTwinkle:
  1733                           	opt stack 0
  1734  000036                     	ds	1
  1735  000037                     _menu:
  1736                           	opt stack 0
  1737  000037                     	ds	1
  1738  000038                     _rtLevel:
  1739                           	opt stack 0
  1740  000038                     	ds	1
  1741  000039                     _passWord:
  1742                           	opt stack 0
  1743  000039                     	ds	2
  1744  00003B                     _adjLocation:
  1745                           	opt stack 0
  1746  00003B                     	ds	1
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           postdec1	equ	0xFE5
  1754                           fsr1h	equ	0xFE2
  1755                           fsr1l	equ	0xFE1
  1756                           
  1757                           	psect	dataCOMRAM
  1758  00003C                     __pdataCOMRAM:
  1759                           	opt stack 0
  1760  00003C                     _fpSysData:
  1761                           	opt stack 0
  1762  00003C                     	ds	3
  1763  00003F                     _glNoEventTimeOut:
  1764                           	opt stack 0
  1765  00003F                     	ds	1
  1766                           tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1h	equ	0xFE2
  1774                           fsr1l	equ	0xFE1
  1775                           
  1776                           	psect	bssBANK0
  1777  0000FE                     __pbssBANK0:
  1778                           	opt stack 0
  1779  0000FE                     _keyValue:
  1780                           	opt stack 0
  1781  0000FE                     	ds	1
  1782  0000FF                     _dwm:
  1783                           	opt stack 0
  1784  0000FF                     	ds	1
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           
  1795                           	psect	bssBANK1
  1796  000100                     __pbssBANK1:
  1797                           	opt stack 0
  1798  000100                     _pLCD:
  1799                           	opt stack 0
  1800  000100                     	ds	24
  1801  000118                     _pcf8574:
  1802                           	opt stack 0
  1803  000118                     	ds	11
  1804  000123                     cal_press@F7793:
  1805                           	opt stack 0
  1806  000123                     	ds	8
  1807  00012B                     _rtExPressure:
  1808                           	opt stack 0
  1809  00012B                     	ds	8
  1810  000133                     _glRtc:
  1811                           	opt stack 0
  1812  000133                     	ds	7
  1813  00013A                     _glTicker:
  1814                           	opt stack 0
  1815  00013A                     	ds	4
  1816  00013E                     ___mflot32_2_int32@F7646:
  1817                           	opt stack 0
  1818  00013E                     	ds	4
  1819  000142                     ___int32_2_mflot32@F7641:
  1820                           	opt stack 0
  1821  000142                     	ds	4
  1822  000146                     _adjValue:
  1823                           	opt stack 0
  1824  000146                     	ds	4
  1825  00014A                     _x_Pemperature:
  1826                           	opt stack 0
  1827  00014A                     	ds	4
  1828  00014E                     _rtExTemperatureIn:
  1829                           	opt stack 0
  1830  00014E                     	ds	4
  1831  000152                     _rtPressure:
  1832                           	opt stack 0
  1833  000152                     	ds	4
  1834  000156                     _rtTemperatureIn:
  1835                           	opt stack 0
  1836  000156                     	ds	4
  1837  00015A                     _rtVolume:
  1838                           	opt stack 0
  1839  00015A                     	ds	4
  1840  00015E                     _rtWeight:
  1841                           	opt stack 0
  1842  00015E                     	ds	4
  1843  000162                     _adc_iPrEx:
  1844                           	opt stack 0
  1845  000162                     	ds	4
  1846  000166                     _fastSampTimer:
  1847                           	opt stack 0
  1848  000166                     	ds	2
  1849  000168                     _sampBufRefInSoc:
  1850                           	opt stack 0
  1851  000168                     	ds	2
  1852  00016A                     _sampBufBatInSoc:
  1853                           	opt stack 0
  1854  00016A                     	ds	2
  1855  00016C                     _sampBufExPr1InSoc:
  1856                           	opt stack 0
  1857  00016C                     	ds	2
  1858  00016E                     _sampBufExPr0InSoc:
  1859                           	opt stack 0
  1860  00016E                     	ds	2
  1861  000170                     _sampBufDiffPr_S1:
  1862                           	opt stack 0
  1863  000170                     	ds	2
  1864  000172                     _dlyTicker:
  1865                           	opt stack 0
  1866  000172                     	ds	2
  1867  000174                     _lcdTwinkle_ms:
  1868                           	opt stack 0
  1869  000174                     	ds	2
  1870  000176                     _pAdjValue:
  1871                           	opt stack 0
  1872  000176                     	ds	2
  1873  000178                     _userTicker_ms:
  1874                           	opt stack 0
  1875  000178                     	ds	2
  1876  00017A                     _adc_iRef:
  1877                           	opt stack 0
  1878  00017A                     	ds	2
  1879  00017C                     _adc_ibat:
  1880                           	opt stack 0
  1881  00017C                     	ds	2
  1882  00017E                     _adc_exPt100:
  1883                           	opt stack 0
  1884  00017E                     	ds	2
  1885  000180                     _adc_pressure:
  1886                           	opt stack 0
  1887  000180                     	ds	2
  1888  000182                     _adc_inPt100:
  1889                           	opt stack 0
  1890  000182                     	ds	2
  1891  000184                     _p_prEepromObj:
  1892                           	opt stack 0
  1893  000184                     	ds	2
  1894  000186                     _pdiff_prEepromObj:
  1895                           	opt stack 0
  1896  000186                     	ds	2
  1897  000188                     _st_Bj:
  1898                           	opt stack 0
  1899  000188                     	ds	1
  1900  000189                     _inSocAdcSampleUpdate:
  1901                           	opt stack 0
  1902  000189                     	ds	1
  1903  00018A                     _ex_pt100SampleUpdate:
  1904                           	opt stack 0
  1905  00018A                     	ds	1
  1906  00018B                     _prSampleUpdate:
  1907                           	opt stack 0
  1908  00018B                     	ds	1
  1909  00018C                     _in_pt100SampleUpdate:
  1910                           	opt stack 0
  1911  00018C                     	ds	1
  1912  00018D                     _diffPrSampleUpdate:
  1913                           	opt stack 0
  1914  00018D                     	ds	1
  1915  00018E                     _calibCol:
  1916                           	opt stack 0
  1917  00018E                     	ds	1
  1918  00018F                     _calibRow:
  1919                           	opt stack 0
  1920  00018F                     	ds	1
  1921  000190                     _sampBufDiffPr_D23:
  1922                           	opt stack 0
  1923  000190                     	ds	16
  1924  0001A0                     _sampBufDiffPr_D01:
  1925                           	opt stack 0
  1926  0001A0                     	ds	16
  1927  0001B0                     _at24c02Ch0:
  1928                           	opt stack 0
  1929  0001B0                     	ds	11
  1930  0001BB                     _at24c02Ch1:
  1931                           	opt stack 0
  1932  0001BB                     	ds	11
  1933  0001C6                     _sampBufPr:
  1934                           	opt stack 0
  1935  0001C6                     	ds	8
  1936  0001CE                     _sampBufPt100ExB:
  1937                           	opt stack 0
  1938  0001CE                     	ds	8
  1939  0001D6                     _sampBufPt100ExA:
  1940                           	opt stack 0
  1941  0001D6                     	ds	8
  1942  0001DE                     _x_prDiffData:
  1943                           	opt stack 0
  1944  0001DE                     	ds	8
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           
  1955                           	psect	dataBANK1
  1956  0001E6                     __pdataBANK1:
  1957                           	opt stack 0
  1958  0001E6                     ui_disp_start_cs600@F7655:
  1959                           	opt stack 0
  1960  0001E6                     	ds	6
  1961  0001EC                     _defalutRtc:
  1962                           	opt stack 0
  1963  0001EC                     	ds	7
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postdec1	equ	0xFE5
  1971                           fsr1h	equ	0xFE2
  1972                           fsr1l	equ	0xFE1
  1973                           
  1974                           	psect	bssBANK2
  1975  000200                     __pbssBANK2:
  1976                           	opt stack 0
  1977  000200                     _diff_prCalibTabDef:
  1978                           	opt stack 0
  1979  000200                     	ds	162
  1980  0002A2                     _ads1115Chip1:
  1981                           	opt stack 0
  1982  0002A2                     	ds	16
  1983  0002B2                     _ads1115Chip0:
  1984                           	opt stack 0
  1985  0002B2                     	ds	16
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postdec1	equ	0xFE5
  1993                           fsr1h	equ	0xFE2
  1994                           fsr1l	equ	0xFE1
  1995                           
  1996                           	psect	bssBANK3
  1997  000300                     __pbssBANK3:
  1998                           	opt stack 0
  1999  000300                     _prCalibTabDef:
  2000                           	opt stack 0
  2001  000300                     	ds	162
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           
  2012                           	psect	bssBANK4
  2013  000400                     __pbssBANK4:
  2014                           	opt stack 0
  2015  000400                     _globleBuffer0:
  2016                           	opt stack 0
  2017  000400                     	ds	256
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1h	equ	0xFE2
  2026                           fsr1l	equ	0xFE1
  2027                           
  2028                           	psect	bssBANK5
  2029  000500                     __pbssBANK5:
  2030                           	opt stack 0
  2031  000500                     _globleBuffer1:
  2032                           	opt stack 0
  2033  000500                     	ds	256
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           
  2044                           	psect	cstackBANK2
  2045  0002C2                     __pcstackBANK2:
  2046                           	opt stack 0
  2047  0002C2                     cal_diff_press@tabrow:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x0
  2051  0002C2                     	ds	2
  2052  0002C4                     cal_diff_press@tmpx:
  2053                           	opt stack 0
  2054                           
  2055                           ; 24 bytes @ 0x2
  2056  0002C4                     	ds	24
  2057  0002DC                     cal_diff_press@xin:
  2058                           	opt stack 0
  2059                           
  2060                           ; 2 bytes @ 0x1A
  2061  0002DC                     	ds	2
  2062  0002DE                     cal_diff_press@i:
  2063                           	opt stack 0
  2064                           
  2065                           ; 1 bytes @ 0x1C
  2066  0002DE                     	ds	1
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1h	equ	0xFE2
  2075                           fsr1l	equ	0xFE1
  2076                           
  2077                           	psect	cstackBANK1
  2078  0001F3                     __pcstackBANK1:
  2079                           	opt stack 0
  2080  0001F3                     event_process_rtc@ret:
  2081                           	opt stack 0
  2082                           
  2083                           ; 1 bytes @ 0x0
  2084  0001F3                     	ds	1
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           
  2095                           	psect	cstackBANK0
  2096  000060                     __pcstackBANK0:
  2097                           	opt stack 0
  2098  000060                     ??___enter_menu_set_density:
  2099  000060                     ?___exp_10:
  2100                           	opt stack 0
  2101  000060                     ?_crc_sum:
  2102                           	opt stack 0
  2103  000060                     ?___awdiv:
  2104                           	opt stack 0
  2105  000060                     ?___awmod:
  2106                           	opt stack 0
  2107  000060                     ?___aldiv:
  2108                           	opt stack 0
  2109  000060                     ?___lldiv:
  2110                           	opt stack 0
  2111  000060                     ?___xxtofl:
  2112                           	opt stack 0
  2113  000060                     iic_send_byte@x:
  2114                           	opt stack 0
  2115  000060                     iic_received_byte@ret:
  2116                           	opt stack 0
  2117  000060                     lcd_disp_get_code@chr:
  2118                           	opt stack 0
  2119  000060                     lcd_disp_all@x:
  2120                           	opt stack 0
  2121  000060                     key_shift_loc_fixed_point@loc:
  2122                           	opt stack 0
  2123  000060                     ___enter_menu_set_pose@fps:
  2124                           	opt stack 0
  2125  000060                     ___x_arrange_str@str:
  2126                           	opt stack 0
  2127  000060                     crc_sum@puchMsg:
  2128                           	opt stack 0
  2129  000060                     m_mem_cpy_len@d:
  2130                           	opt stack 0
  2131  000060                     m_mem_cpy@d:
  2132                           	opt stack 0
  2133  000060                     m_int8_2_hex@str:
  2134                           	opt stack 0
  2135  000060                     ads1115_init@pAds1115:
  2136                           	opt stack 0
  2137  000060                     ads1115_set_mux@pAds1115:
  2138                           	opt stack 0
  2139  000060                     at24c02_init@pAt24c02:
  2140                           	opt stack 0
  2141  000060                     delay_us@dly:
  2142                           	opt stack 0
  2143  000060                     rtc_set@rtc:
  2144                           	opt stack 0
  2145  000060                     ticker_dly@ms:
  2146                           	opt stack 0
  2147  000060                     ___awdiv@dividend:
  2148                           	opt stack 0
  2149  000060                     ___awmod@dividend:
  2150                           	opt stack 0
  2151  000060                     m_flash_erase@addr:
  2152                           	opt stack 0
  2153  000060                     m_flash_read@addr:
  2154                           	opt stack 0
  2155  000060                     ___aldiv@dividend:
  2156                           	opt stack 0
  2157  000060                     ___lldiv@dividend:
  2158                           	opt stack 0
  2159  000060                     ___xxtofl@val:
  2160                           	opt stack 0
  2161                           
  2162                           ; 4 bytes @ 0x0
  2163  000060                     	ds	1
  2164  000061                     iic_send_byte@i:
  2165                           	opt stack 0
  2166  000061                     iic_received_byte@i:
  2167                           	opt stack 0
  2168  000061                     lcd_disp_get_code@ret:
  2169                           	opt stack 0
  2170  000061                     lcd_disp_all@i:
  2171                           	opt stack 0
  2172                           
  2173                           ; 1 bytes @ 0x1
  2174  000061                     	ds	1
  2175  000062                     ?___wmul:
  2176                           	opt stack 0
  2177  000062                     ?___lwdiv:
  2178                           	opt stack 0
  2179  000062                     key_shift_loc_fixed_point@min:
  2180                           	opt stack 0
  2181  000062                     ___x_arrange_str@len:
  2182                           	opt stack 0
  2183  000062                     m_int8_2_hex@b:
  2184                           	opt stack 0
  2185  000062                     ads1115_init@slvaddr:
  2186                           	opt stack 0
  2187  000062                     ads1115_set_mux@mux:
  2188                           	opt stack 0
  2189  000062                     at24c02_init@slv:
  2190                           	opt stack 0
  2191  000062                     iic_received_byte_if_ack@ack:
  2192                           	opt stack 0
  2193  000062                     lcd_disp_get_code@i:
  2194                           	opt stack 0
  2195  000062                     ___enter_menu_set_density@fps:
  2196                           	opt stack 0
  2197  000062                     crc_sum@usDataLen:
  2198                           	opt stack 0
  2199  000062                     m_mem_cpy_len@s:
  2200                           	opt stack 0
  2201  000062                     m_mem_cpy@s:
  2202                           	opt stack 0
  2203  000062                     ads1115_write_reg@pAds1115:
  2204                           	opt stack 0
  2205  000062                     at24c02_write_n_byte@pAt24c02:
  2206                           	opt stack 0
  2207  000062                     delay_us@i:
  2208                           	opt stack 0
  2209  000062                     rtc_set@stp:
  2210                           	opt stack 0
  2211  000062                     ___wmul@multiplier:
  2212                           	opt stack 0
  2213  000062                     ___awdiv@divisor:
  2214                           	opt stack 0
  2215  000062                     ___awmod@divisor:
  2216                           	opt stack 0
  2217  000062                     ___lwdiv@dividend:
  2218                           	opt stack 0
  2219                           
  2220                           ; 2 bytes @ 0x2
  2221  000062                     	ds	1
  2222  000063                     key_shift_loc_fixed_point@max:
  2223                           	opt stack 0
  2224  000063                     iic_received_byte_if_ack@ret:
  2225                           	opt stack 0
  2226                           
  2227                           ; 1 bytes @ 0x3
  2228  000063                     	ds	1
  2229  000064                     ??_crc_sum:
  2230  000064                     ??___xxtofl:
  2231  000064                     ?_ads1115_read_reg:
  2232                           	opt stack 0
  2233  000064                     ?_in_adc_start_and_read:
  2234                           	opt stack 0
  2235  000064                     ads1115_write_reg@addr:
  2236                           	opt stack 0
  2237  000064                     at24c02_write_n_byte@addr:
  2238                           	opt stack 0
  2239  000064                     ___awdiv@counter:
  2240                           	opt stack 0
  2241  000064                     ___awmod@counter:
  2242                           	opt stack 0
  2243  000064                     m_mem_cpy_len@len:
  2244                           	opt stack 0
  2245  000064                     ads1115_read_reg@pAds1115:
  2246                           	opt stack 0
  2247  000064                     at24c02_read_n_byte@pAt24c02:
  2248                           	opt stack 0
  2249  000064                     m_flash_read@buf:
  2250                           	opt stack 0
  2251  000064                     delay_ms@dly:
  2252                           	opt stack 0
  2253  000064                     ___wmul@multiplicand:
  2254                           	opt stack 0
  2255  000064                     ___lwdiv@divisor:
  2256                           	opt stack 0
  2257  000064                     m_flash_erase@t32:
  2258                           	opt stack 0
  2259  000064                     ___aldiv@divisor:
  2260                           	opt stack 0
  2261  000064                     ___lldiv@divisor:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x4
  2265  000064                     	ds	1
  2266  000065                     ___awdiv@sign:
  2267                           	opt stack 0
  2268  000065                     ___awmod@sign:
  2269                           	opt stack 0
  2270  000065                     ads1115_write_reg@value:
  2271                           	opt stack 0
  2272  000065                     at24c02_write_n_byte@buf:
  2273                           	opt stack 0
  2274                           
  2275                           ; 2 bytes @ 0x5
  2276  000065                     	ds	1
  2277  000066                     ads1115_read_reg@addr:
  2278                           	opt stack 0
  2279  000066                     at24c02_read_n_byte@addr:
  2280                           	opt stack 0
  2281  000066                     in_adc_start_and_read@ch:
  2282                           	opt stack 0
  2283  000066                     key_polling@ktemp:
  2284                           	opt stack 0
  2285  000066                     ___lwdiv@counter:
  2286                           	opt stack 0
  2287  000066                     crc_sum@len:
  2288                           	opt stack 0
  2289  000066                     m_flash_read@len:
  2290                           	opt stack 0
  2291  000066                     ___wmul@product:
  2292                           	opt stack 0
  2293  000066                     ___awdiv@quotient:
  2294                           	opt stack 0
  2295                           
  2296                           ; 2 bytes @ 0x6
  2297  000066                     	ds	1
  2298  000067                     ??_ads1115_read_reg:
  2299  000067                     key_polling@t8:
  2300                           	opt stack 0
  2301  000067                     ads1115_start_conversion@pAds1115:
  2302                           	opt stack 0
  2303  000067                     at24c02_read_n_byte@buf:
  2304                           	opt stack 0
  2305  000067                     at24c02_write_n_byte@len:
  2306                           	opt stack 0
  2307  000067                     in_adc_start_and_read@ret:
  2308                           	opt stack 0
  2309  000067                     ___lwdiv@quotient:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x7
  2313  000067                     	ds	1
  2314  000068                     ??_calib_data_set_default_diff_pr:
  2315  000068                     ??_calib_data_set_default_pr:
  2316  000068                     ?_key_waite_release:
  2317                           	opt stack 0
  2318  000068                     lcd_set_com_seg@seg:
  2319                           	opt stack 0
  2320  000068                     ___aldiv@counter:
  2321                           	opt stack 0
  2322  000068                     ___xxtofl@sign:
  2323                           	opt stack 0
  2324  000068                     key_waite_release@timeout:
  2325                           	opt stack 0
  2326  000068                     crc_sum@uIndex:
  2327                           	opt stack 0
  2328  000068                     m_int16_2_str_4@buf:
  2329                           	opt stack 0
  2330  000068                     ads1115_read_reg@t16:
  2331                           	opt stack 0
  2332  000068                     m_flash_read@i:
  2333                           	opt stack 0
  2334  000068                     ___lldiv@quotient:
  2335                           	opt stack 0
  2336                           
  2337                           ; 4 bytes @ 0x8
  2338  000068                     	ds	1
  2339  000069                     ??_sample_in_soc_adc_ch:
  2340  000069                     ?___lwmod:
  2341                           	opt stack 0
  2342  000069                     lcd_set_com_seg@show:
  2343                           	opt stack 0
  2344  000069                     ___aldiv@sign:
  2345                           	opt stack 0
  2346  000069                     ___xxtofl@exp:
  2347                           	opt stack 0
  2348  000069                     at24c02_read_n_byte@len:
  2349                           	opt stack 0
  2350  000069                     at24c02_write_n_byte@i:
  2351                           	opt stack 0
  2352  000069                     ___lwmod@dividend:
  2353                           	opt stack 0
  2354                           
  2355                           ; 2 bytes @ 0x9
  2356  000069                     	ds	1
  2357  00006A                     ??_lcd_set_com_seg:
  2358  00006A                     ?_ads1115_read_conversion:
  2359                           	opt stack 0
  2360  00006A                     crc_sum@uchCRCHi:
  2361                           	opt stack 0
  2362  00006A                     key_waite_release@key:
  2363                           	opt stack 0
  2364  00006A                     m_int16_2_str_4@x:
  2365                           	opt stack 0
  2366  00006A                     ads1115_read_conversion@pAds1115:
  2367                           	opt stack 0
  2368  00006A                     m_flash_read@t32:
  2369                           	opt stack 0
  2370  00006A                     ___aldiv@quotient:
  2371                           	opt stack 0
  2372  00006A                     ___xxtofl@arg:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0xA
  2376  00006A                     	ds	1
  2377  00006B                     ??_at24c02_read_n_byte:
  2378  00006B                     crc_sum@uchCRCLo:
  2379                           	opt stack 0
  2380  00006B                     ___lwmod@divisor:
  2381                           	opt stack 0
  2382                           
  2383                           ; 2 bytes @ 0xB
  2384  00006B                     	ds	1
  2385  00006C                     ___lldiv@counter:
  2386                           	opt stack 0
  2387  00006C                     crc_verify@message:
  2388                           	opt stack 0
  2389  00006C                     crc_append@message:
  2390                           	opt stack 0
  2391                           
  2392                           ; 2 bytes @ 0xC
  2393  00006C                     	ds	1
  2394  00006D                     ?___int32_2_mflot32:
  2395                           	opt stack 0
  2396  00006D                     lcd_set_com_seg@com:
  2397                           	opt stack 0
  2398  00006D                     ___lwmod@counter:
  2399                           	opt stack 0
  2400  00006D                     ads1115_read_conversion@result:
  2401                           	opt stack 0
  2402  00006D                     sample_in_soc_adc_ch@t16:
  2403                           	opt stack 0
  2404  00006D                     ___int32_2_mflot32@x:
  2405                           	opt stack 0
  2406                           
  2407                           ; 4 bytes @ 0xD
  2408  00006D                     	ds	1
  2409  00006E                     ?___x_sample_fliter:
  2410                           	opt stack 0
  2411  00006E                     ?___x_sample_fifo:
  2412                           	opt stack 0
  2413  00006E                     ?___flmul:
  2414                           	opt stack 0
  2415  00006E                     ?___lmul:
  2416                           	opt stack 0
  2417  00006E                     calib_data_set_default_diff_pr@j:
  2418                           	opt stack 0
  2419  00006E                     calib_data_set_default_pr@i:
  2420                           	opt stack 0
  2421  00006E                     lcd_set_com_seg@offset:
  2422                           	opt stack 0
  2423  00006E                     key_adj_value_fixed_point@value:
  2424                           	opt stack 0
  2425  00006E                     crc_verify@n:
  2426                           	opt stack 0
  2427  00006E                     crc_append@n:
  2428                           	opt stack 0
  2429  00006E                     ___x_sample_fliter@buf:
  2430                           	opt stack 0
  2431  00006E                     ___x_sample_fifo@buf:
  2432                           	opt stack 0
  2433  00006E                     m_flash_write@addr:
  2434                           	opt stack 0
  2435  00006E                     ___lmul@multiplier:
  2436                           	opt stack 0
  2437  00006E                     ___flmul@b:
  2438                           	opt stack 0
  2439                           
  2440                           ; 4 bytes @ 0xE
  2441  00006E                     	ds	1
  2442  00006F                     calib_data_set_default_diff_pr@i:
  2443                           	opt stack 0
  2444  00006F                     calib_data_set_default_pr@j:
  2445                           	opt stack 0
  2446  00006F                     lcd_set_com_seg@bits:
  2447                           	opt stack 0
  2448  00006F                     at24c02_read_n_byte@i:
  2449                           	opt stack 0
  2450  00006F                     sample_in_soc_adc_ch@ret:
  2451                           	opt stack 0
  2452                           
  2453                           ; 4 bytes @ 0xF
  2454  00006F                     	ds	1
  2455  000070                     ??_crc_verify:
  2456  000070                     ??_crc_append:
  2457  000070                     key_adj_value_fixed_point@loc:
  2458                           	opt stack 0
  2459  000070                     lcd_disp_level_bar@__bar:
  2460                           	opt stack 0
  2461  000070                     lcd_show_dp@show:
  2462                           	opt stack 0
  2463  000070                     lcd_show_chr@chr:
  2464                           	opt stack 0
  2465  000070                     ___x_sample_fliter@len:
  2466                           	opt stack 0
  2467  000070                     ___x_sample_fifo@x:
  2468                           	opt stack 0
  2469                           
  2470                           ; 2 bytes @ 0x10
  2471  000070                     	ds	1
  2472  000071                     ??___int32_2_mflot32:
  2473  000071                     lcd_disp_level_bar@bar:
  2474                           	opt stack 0
  2475  000071                     lcd_show_dp@loc:
  2476                           	opt stack 0
  2477  000071                     lcd_show_chr@loc:
  2478                           	opt stack 0
  2479  000071                     ___x_sample_fliter@loop:
  2480                           	opt stack 0
  2481  000071                     key_adj_value_fixed_point@dloc:
  2482                           	opt stack 0
  2483                           
  2484                           ; 2 bytes @ 0x11
  2485  000071                     	ds	1
  2486  000072                     ??___x_sample_fliter:
  2487  000072                     lcd_disp_level@level:
  2488                           	opt stack 0
  2489  000072                     lcd_show_chr@code:
  2490                           	opt stack 0
  2491  000072                     ___x_sample_fifo@len:
  2492                           	opt stack 0
  2493  000072                     crc_verify@crccal:
  2494                           	opt stack 0
  2495  000072                     crc_append@crc:
  2496                           	opt stack 0
  2497  000072                     m_flash_write@buf:
  2498                           	opt stack 0
  2499  000072                     ___lmul@multiplicand:
  2500                           	opt stack 0
  2501  000072                     ___flmul@a:
  2502                           	opt stack 0
  2503                           
  2504                           ; 4 bytes @ 0x12
  2505  000072                     	ds	1
  2506  000073                     ??___x_sample_fifo:
  2507  000073                     lcd_disp_level@i:
  2508                           	opt stack 0
  2509  000073                     sample_in_soc_adc_ch@i:
  2510                           	opt stack 0
  2511  000073                     key_adj_value_fixed_point@t16:
  2512                           	opt stack 0
  2513  000073                     lcd_show_string_l0@str:
  2514                           	opt stack 0
  2515  000073                     lcd_show_string_l1@str:
  2516                           	opt stack 0
  2517  000073                     lcd_show_string@str:
  2518                           	opt stack 0
  2519                           
  2520                           ; 2 bytes @ 0x13
  2521  000073                     	ds	1
  2522  000074                     crc_verify@expected:
  2523                           	opt stack 0
  2524  000074                     m_flash_write@len:
  2525                           	opt stack 0
  2526                           
  2527                           ; 2 bytes @ 0x14
  2528  000074                     	ds	1
  2529  000075                     lcd_show_string_l0@t8:
  2530                           	opt stack 0
  2531  000075                     lcd_show_string_l1@t8:
  2532                           	opt stack 0
  2533  000075                     lcd_show_string@t8:
  2534                           	opt stack 0
  2535  000075                     ___int32_2_mflot32@t32:
  2536                           	opt stack 0
  2537                           
  2538                           ; 4 bytes @ 0x15
  2539  000075                     	ds	1
  2540  000076                     ??_m_flash_write:
  2541  000076                     ??___flmul:
  2542  000076                     calib_data_init_diff_pr@ret:
  2543                           	opt stack 0
  2544  000076                     calib_data_init_pr@ret:
  2545                           	opt stack 0
  2546  000076                     ui_disp_adj_xfixed_pt@str:
  2547                           	opt stack 0
  2548  000076                     ui_disp_xfloat_pt@xpf:
  2549                           	opt stack 0
  2550  000076                     ___lmul@product:
  2551                           	opt stack 0
  2552  000076                     ui_disp_start_cs600@buf:
  2553                           	opt stack 0
  2554                           
  2555                           ; 6 bytes @ 0x16
  2556  000076                     	ds	1
  2557  000077                     calib_data_init_diff_pr@t16:
  2558                           	opt stack 0
  2559  000077                     calib_data_init_pr@t16:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x17
  2563  000077                     	ds	1
  2564  000078                     ui_disp_xfloat_pt@line:
  2565                           	opt stack 0
  2566  000078                     m_flash_write@writeTimes:
  2567                           	opt stack 0
  2568  000078                     ___x_sample_fliter@maxLoc:
  2569                           	opt stack 0
  2570  000078                     ui_disp_adj_xfixed_pt@x:
  2571                           	opt stack 0
  2572                           
  2573                           ; 2 bytes @ 0x18
  2574  000078                     	ds	1
  2575  000079                     m_flash_write@i:
  2576                           	opt stack 0
  2577  000079                     ___x_sample_fliter@minLoc:
  2578                           	opt stack 0
  2579  000079                     calib_data_init_diff_pr@buf:
  2580                           	opt stack 0
  2581  000079                     calib_data_init_pr@buf:
  2582                           	opt stack 0
  2583  000079                     ___int32_2_mflot32@mf:
  2584                           	opt stack 0
  2585  000079                     ___x_sample_fifo@ret:
  2586                           	opt stack 0
  2587  000079                     ui_disp_xfloat_pt@buf:
  2588                           	opt stack 0
  2589                           
  2590                           ; 10 bytes @ 0x19
  2591  000079                     	ds	1
  2592  00007A                     ui_disp_adj_xfixed_pt@loc:
  2593                           	opt stack 0
  2594  00007A                     ___flmul@sign:
  2595                           	opt stack 0
  2596  00007A                     m_interp1_cal_p_v@tabrow:
  2597                           	opt stack 0
  2598  00007A                     m_interp1_cal_p_t@tmpx:
  2599                           	opt stack 0
  2600  00007A                     ___x_sample_fliter@max:
  2601                           	opt stack 0
  2602  00007A                     m_flash_write@pageAddr:
  2603                           	opt stack 0
  2604                           
  2605                           ; 4 bytes @ 0x1A
  2606  00007A                     	ds	1
  2607  00007B                     ??_ui_disp_adj_xfixed_pt:
  2608  00007B                     ___flmul@aexp:
  2609                           	opt stack 0
  2610                           
  2611                           ; 1 bytes @ 0x1B
  2612  00007B                     	ds	1
  2613  00007C                     ui_disp_start_cs600@dly:
  2614                           	opt stack 0
  2615  00007C                     m_interp1_cal_p_v@xin:
  2616                           	opt stack 0
  2617  00007C                     m_interp1_cal_p_t@xin:
  2618                           	opt stack 0
  2619  00007C                     ___x_sample_fliter@min:
  2620                           	opt stack 0
  2621  00007C                     ___flmul@grs:
  2622                           	opt stack 0
  2623                           
  2624                           ; 4 bytes @ 0x1C
  2625  00007C                     	ds	1
  2626  00007D                     ui_disp_start_cs600@t8:
  2627                           	opt stack 0
  2628  00007D                     ___x_sample_fifo@i:
  2629                           	opt stack 0
  2630  00007D                     ___enter_menu_set_base_zero@fps:
  2631                           	opt stack 0
  2632  00007D                     ui_disp_adj_xfixed_pt@buf:
  2633                           	opt stack 0
  2634                           
  2635                           ; 10 bytes @ 0x1D
  2636  00007D                     	ds	1
  2637  00007E                     ?_sample_pr_chip_comm:
  2638                           	opt stack 0
  2639  00007E                     m_interp1_cal_p_t@tmpxLen:
  2640                           	opt stack 0
  2641  00007E                     m_flash_write@j:
  2642                           	opt stack 0
  2643  00007E                     m_interp1_cal_p_v@xout:
  2644                           	opt stack 0
  2645  00007E                     ___x_sample_fliter@t32:
  2646                           	opt stack 0
  2647                           
  2648                           ; 4 bytes @ 0x1E
  2649  00007E                     	ds	1
  2650  00007F                     ??_m_interp1_cal_p_t:
  2651  00007F                     ??_key_process_set_down_long:
  2652  00007F                     m_flash_write@tmpBuf:
  2653                           	opt stack 0
  2654                           
  2655                           ; 2 bytes @ 0x1F
  2656  00007F                     	ds	1
  2657  000080                     ??_sample_pr_chip_comm:
  2658  000080                     ??_m_interp1_cal_p_v:
  2659  000080                     ___flmul@bexp:
  2660                           	opt stack 0
  2661                           
  2662                           ; 1 bytes @ 0x20
  2663  000080                     	ds	1
  2664  000081                     m_flash_write@t16:
  2665                           	opt stack 0
  2666  000081                     ___flmul@prod:
  2667                           	opt stack 0
  2668                           
  2669                           ; 4 bytes @ 0x21
  2670  000081                     	ds	1
  2671  000082                     ___x_sample_fliter@i:
  2672                           	opt stack 0
  2673  000082                     sample_pr_chip_comm@ret:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x22
  2677  000082                     	ds	1
  2678  000083                     ui_disp_xfloat_pt@t8:
  2679                           	opt stack 0
  2680  000083                     sample_diff_pr_fliter@xin:
  2681                           	opt stack 0
  2682  000083                     sample_pr_chip_comm@t16:
  2683                           	opt stack 0
  2684                           
  2685                           ; 2 bytes @ 0x23
  2686  000083                     	ds	1
  2687  000084                     ui_disp_xfloat_pt@x:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x24
  2691  000084                     	ds	1
  2692  000085                     ?_sample_diff_pr_chip_slow:
  2693                           	opt stack 0
  2694  000085                     sample_diff_pr_chip_fast@ret:
  2695                           	opt stack 0
  2696  000085                     ___flmul@temp:
  2697                           	opt stack 0
  2698                           
  2699                           ; 2 bytes @ 0x25
  2700  000085                     	ds	1
  2701  000086                     sample_diff_pr_chip_fast@t16:
  2702                           	opt stack 0
  2703                           
  2704                           ; 2 bytes @ 0x26
  2705  000086                     	ds	1
  2706  000087                     ?___fldiv:
  2707                           	opt stack 0
  2708  000087                     sample_diff_pr_chip_slow@ret:
  2709                           	opt stack 0
  2710  000087                     ___fldiv@b:
  2711                           	opt stack 0
  2712                           
  2713                           ; 4 bytes @ 0x27
  2714  000087                     	ds	1
  2715  000088                     sample_diff_pr_chip_slow@t16:
  2716                           	opt stack 0
  2717                           
  2718                           ; 2 bytes @ 0x28
  2719  000088                     	ds	3
  2720  00008B                     ___fldiv@a:
  2721                           	opt stack 0
  2722                           
  2723                           ; 4 bytes @ 0x2B
  2724  00008B                     	ds	2
  2725  00008D                     m_interp1_cal_p_t@y:
  2726                           	opt stack 0
  2727                           
  2728                           ; 4 bytes @ 0x2D
  2729  00008D                     	ds	1
  2730  00008E                     m_interp1_cal_p_v@y:
  2731                           	opt stack 0
  2732                           
  2733                           ; 4 bytes @ 0x2E
  2734  00008E                     	ds	1
  2735  00008F                     ??___fldiv:
  2736                           
  2737                           ; 1 bytes @ 0x2F
  2738  00008F                     	ds	2
  2739  000091                     m_interp1_cal_p_t@x:
  2740                           	opt stack 0
  2741                           
  2742                           ; 4 bytes @ 0x31
  2743  000091                     	ds	1
  2744  000092                     m_interp1_cal_p_v@x:
  2745                           	opt stack 0
  2746                           
  2747                           ; 4 bytes @ 0x32
  2748  000092                     	ds	1
  2749  000093                     ___fldiv@sign:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x33
  2753  000093                     	ds	1
  2754  000094                     ___fldiv@rem:
  2755                           	opt stack 0
  2756                           
  2757                           ; 4 bytes @ 0x34
  2758  000094                     	ds	1
  2759  000095                     m_interp1_cal_p_t@i:
  2760                           	opt stack 0
  2761                           
  2762                           ; 1 bytes @ 0x35
  2763  000095                     	ds	1
  2764  000096                     m_interp1_cal_p_v@i:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x36
  2768  000096                     	ds	1
  2769  000097                     cal_press@ret:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x37
  2773  000097                     	ds	1
  2774  000098                     cal_press@tabrow:
  2775                           	opt stack 0
  2776  000098                     ___fldiv@new_exp:
  2777                           	opt stack 0
  2778                           
  2779                           ; 2 bytes @ 0x38
  2780  000098                     	ds	2
  2781  00009A                     ___fldiv@grs:
  2782                           	opt stack 0
  2783  00009A                     cal_press@xin:
  2784                           	opt stack 0
  2785                           
  2786                           ; 8 bytes @ 0x3A
  2787  00009A                     	ds	4
  2788  00009E                     ___fldiv@bexp:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0x3E
  2792  00009E                     	ds	1
  2793  00009F                     ___fldiv@aexp:
  2794                           	opt stack 0
  2795                           
  2796                           ; 1 bytes @ 0x3F
  2797  00009F                     	ds	1
  2798  0000A0                     ?___flneg:
  2799                           	opt stack 0
  2800  0000A0                     ___flneg@f1:
  2801                           	opt stack 0
  2802                           
  2803                           ; 4 bytes @ 0x40
  2804  0000A0                     	ds	4
  2805  0000A4                     ?___fladd:
  2806                           	opt stack 0
  2807  0000A4                     ___fladd@b:
  2808                           	opt stack 0
  2809                           
  2810                           ; 4 bytes @ 0x44
  2811  0000A4                     	ds	4
  2812  0000A8                     ___fladd@a:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x48
  2816  0000A8                     	ds	4
  2817  0000AC                     ??___fladd:
  2818                           
  2819                           ; 1 bytes @ 0x4C
  2820  0000AC                     	ds	8
  2821  0000B4                     ___fladd@signs:
  2822                           	opt stack 0
  2823                           
  2824                           ; 1 bytes @ 0x54
  2825  0000B4                     	ds	1
  2826  0000B5                     ___fladd@aexp:
  2827                           	opt stack 0
  2828                           
  2829                           ; 1 bytes @ 0x55
  2830  0000B5                     	ds	1
  2831  0000B6                     ___fladd@bexp:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0x56
  2835  0000B6                     	ds	1
  2836  0000B7                     ___fladd@grs:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x57
  2840  0000B7                     	ds	1
  2841  0000B8                     ?___fltol:
  2842                           	opt stack 0
  2843  0000B8                     ___flge@ff1:
  2844                           	opt stack 0
  2845  0000B8                     ___fltol@f1:
  2846                           	opt stack 0
  2847                           
  2848                           ; 4 bytes @ 0x58
  2849  0000B8                     	ds	4
  2850  0000BC                     ??___fltol:
  2851  0000BC                     ___flge@ff2:
  2852                           	opt stack 0
  2853                           
  2854                           ; 4 bytes @ 0x5C
  2855  0000BC                     	ds	4
  2856  0000C0                     ??___flge:
  2857  0000C0                     ___fltol@sign1:
  2858                           	opt stack 0
  2859                           
  2860                           ; 1 bytes @ 0x60
  2861  0000C0                     	ds	1
  2862  0000C1                     ___fltol@exp1:
  2863                           	opt stack 0
  2864                           
  2865                           ; 1 bytes @ 0x61
  2866  0000C1                     	ds	1
  2867  0000C2                     ??_cal_pt100_temperature_ex:
  2868  0000C2                     ??_cal_additional_pressute:
  2869  0000C2                     ?_data_sys_cal_v1:
  2870                           	opt stack 0
  2871  0000C2                     ?_data_sys_cal_v2:
  2872                           	opt stack 0
  2873  0000C2                     data_sys_cal_v1@stp:
  2874                           	opt stack 0
  2875  0000C2                     data_sys_cal_v2@stp:
  2876                           	opt stack 0
  2877  0000C2                     cal_diff_p_to_h@xin:
  2878                           	opt stack 0
  2879  0000C2                     _cal_pt100_temperature_in$4417:
  2880                           	opt stack 0
  2881                           
  2882                           ; 4 bytes @ 0x62
  2883  0000C2                     	ds	2
  2884  0000C4                     ??_cal_diff_p_to_h:
  2885  0000C4                     ?_m_interp1_float_fast:
  2886                           	opt stack 0
  2887  0000C4                     m_interp1_float_fast@tab:
  2888                           	opt stack 0
  2889  0000C4                     cal_diff_hight_level@f2:
  2890                           	opt stack 0
  2891                           
  2892                           ; 4 bytes @ 0x64
  2893  0000C4                     	ds	1
  2894  0000C5                     cal_additional_pressute@f1:
  2895                           	opt stack 0
  2896                           
  2897                           ; 4 bytes @ 0x65
  2898  0000C5                     	ds	1
  2899  0000C6                     m_interp1_float_fast@in:
  2900                           	opt stack 0
  2901  0000C6                     cal_diff_p_to_h@f2:
  2902                           	opt stack 0
  2903  0000C6                     cal_pt100_temperature_in@f2:
  2904                           	opt stack 0
  2905  0000C6                     _data_sys_cal_v1$4408:
  2906                           	opt stack 0
  2907  0000C6                     _data_sys_cal_v2$4411:
  2908                           	opt stack 0
  2909                           
  2910                           ; 4 bytes @ 0x66
  2911  0000C6                     	ds	1
  2912  0000C7                     _cal_pt100_temperature_ex$4418:
  2913                           	opt stack 0
  2914                           
  2915                           ; 4 bytes @ 0x67
  2916  0000C7                     	ds	1
  2917  0000C8                     _cal_diff_hight_level$4414:
  2918                           	opt stack 0
  2919                           
  2920                           ; 4 bytes @ 0x68
  2921  0000C8                     	ds	1
  2922  0000C9                     cal_additional_pressute@f2:
  2923                           	opt stack 0
  2924                           
  2925                           ; 4 bytes @ 0x69
  2926  0000C9                     	ds	1
  2927  0000CA                     m_interp1_float_fast@len:
  2928                           	opt stack 0
  2929  0000CA                     cal_diff_p_to_h@f1:
  2930                           	opt stack 0
  2931  0000CA                     cal_pt100_temperature_in@f1:
  2932                           	opt stack 0
  2933  0000CA                     _data_sys_cal_v1$4409:
  2934                           	opt stack 0
  2935  0000CA                     _data_sys_cal_v2$4412:
  2936                           	opt stack 0
  2937                           
  2938                           ; 4 bytes @ 0x6A
  2939  0000CA                     	ds	1
  2940  0000CB                     cal_pt100_temperature_ex@f2:
  2941                           	opt stack 0
  2942                           
  2943                           ; 4 bytes @ 0x6B
  2944  0000CB                     	ds	1
  2945  0000CC                     ??_m_interp1_float_fast:
  2946  0000CC                     _cal_diff_hight_level$4415:
  2947                           	opt stack 0
  2948                           
  2949                           ; 4 bytes @ 0x6C
  2950  0000CC                     	ds	1
  2951  0000CD                     cal_additional_pressute@index:
  2952                           	opt stack 0
  2953                           
  2954                           ; 1 bytes @ 0x6D
  2955  0000CD                     	ds	1
  2956  0000CE                     data_sys_cal_v2@f:
  2957                           	opt stack 0
  2958  0000CE                     _data_sys_cal_v1$4410:
  2959                           	opt stack 0
  2960                           
  2961                           ; 4 bytes @ 0x6E
  2962  0000CE                     	ds	1
  2963  0000CF                     cal_pt100_temperature_ex@f1:
  2964                           	opt stack 0
  2965                           
  2966                           ; 4 bytes @ 0x6F
  2967  0000CF                     	ds	1
  2968  0000D0                     cal_diff_hight_level@f1:
  2969                           	opt stack 0
  2970                           
  2971                           ; 4 bytes @ 0x70
  2972  0000D0                     	ds	2
  2973  0000D2                     data_sys_cal_v1@h:
  2974                           	opt stack 0
  2975  0000D2                     data_sys_cal_v2@d:
  2976                           	opt stack 0
  2977                           
  2978                           ; 4 bytes @ 0x72
  2979  0000D2                     	ds	2
  2980  0000D4                     ui_disp_menu_home_00@t8:
  2981                           	opt stack 0
  2982  0000D4                     ui_disp_menu_home_01@t8:
  2983                           	opt stack 0
  2984  0000D4                     ui_disp_menu_home_02@t8:
  2985                           	opt stack 0
  2986  0000D4                     m_interp1_float_fast@x:
  2987                           	opt stack 0
  2988                           
  2989                           ; 4 bytes @ 0x74
  2990  0000D4                     	ds	1
  2991  0000D5                     ui_disp_menu_home_00@mf:
  2992                           	opt stack 0
  2993  0000D5                     ui_disp_menu_home_01@mf:
  2994                           	opt stack 0
  2995  0000D5                     ui_disp_menu_home_02@mf:
  2996                           	opt stack 0
  2997                           
  2998                           ; 4 bytes @ 0x75
  2999  0000D5                     	ds	1
  3000  0000D6                     data_sys_cal_v1@f:
  3001                           	opt stack 0
  3002                           
  3003                           ; 4 bytes @ 0x76
  3004  0000D6                     	ds	2
  3005  0000D8                     m_interp1_float_fast@y:
  3006                           	opt stack 0
  3007                           
  3008                           ; 4 bytes @ 0x78
  3009  0000D8                     	ds	1
  3010  0000D9                     key_process@tm:
  3011                           	opt stack 0
  3012                           
  3013                           ; 2 bytes @ 0x79
  3014  0000D9                     	ds	1
  3015  0000DA                     data_sys_cal_v1@r:
  3016                           	opt stack 0
  3017                           
  3018                           ; 4 bytes @ 0x7A
  3019  0000DA                     	ds	1
  3020  0000DB                     key_process@key:
  3021                           	opt stack 0
  3022                           
  3023                           ; 1 bytes @ 0x7B
  3024  0000DB                     	ds	1
  3025  0000DC                     _m_interp1_float_fast$4413:
  3026                           	opt stack 0
  3027                           
  3028                           ; 4 bytes @ 0x7C
  3029  0000DC                     	ds	2
  3030  0000DE                     data_sys_init@ret:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0x7E
  3034  0000DE                     	ds	1
  3035  0000DF                     data_sys_init@stp:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x7F
  3039  0000DF                     	ds	1
  3040  0000E0                     m_interp1_float_fast@f:
  3041                           	opt stack 0
  3042                           
  3043                           ; 4 bytes @ 0x80
  3044  0000E0                     	ds	1
  3045  0000E1                     data_sys_init@buf:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x81
  3049  0000E1                     	ds	3
  3050  0000E4                     m_interp1_float_fast@i:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0x84
  3054  0000E4                     	ds	2
  3055  0000E6                     ?_cal_diff_hight_to_vol_h:
  3056                           	opt stack 0
  3057  0000E6                     ?_cal_diff_hight_to_vol_v:
  3058                           	opt stack 0
  3059  0000E6                     cal_diff_hight_to_vol_h@h:
  3060                           	opt stack 0
  3061  0000E6                     cal_diff_hight_to_vol_v@h:
  3062                           	opt stack 0
  3063                           
  3064                           ; 4 bytes @ 0x86
  3065  0000E6                     	ds	4
  3066  0000EA                     cal_diff_hight_to_vol_h@v2:
  3067                           	opt stack 0
  3068  0000EA                     _cal_diff_hight_to_vol_v$4416:
  3069                           	opt stack 0
  3070                           
  3071                           ; 4 bytes @ 0x8A
  3072  0000EA                     	ds	4
  3073  0000EE                     cal_diff_hight_to_vol_h@f2:
  3074                           	opt stack 0
  3075  0000EE                     cal_diff_hight_to_vol_v@v1:
  3076                           	opt stack 0
  3077                           
  3078                           ; 4 bytes @ 0x8E
  3079  0000EE                     	ds	4
  3080  0000F2                     cal_diff_hight_to_vol_h@v1:
  3081                           	opt stack 0
  3082  0000F2                     cal_diff_hight_to_vol_v@v2:
  3083                           	opt stack 0
  3084                           
  3085                           ; 4 bytes @ 0x92
  3086  0000F2                     	ds	4
  3087  0000F6                     cal_diff_hight_to_vol_h@f1:
  3088                           	opt stack 0
  3089  0000F6                     cal_diff_hight_to_vol_v@D:
  3090                           	opt stack 0
  3091                           
  3092                           ; 4 bytes @ 0x96
  3093  0000F6                     	ds	4
  3094  0000FA                     cal_diff_hight_to_vol_v@f1:
  3095                           	opt stack 0
  3096                           
  3097                           ; 4 bytes @ 0x9A
  3098  0000FA                     	ds	4
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           postdec1	equ	0xFE5
  3106                           fsr1h	equ	0xFE2
  3107                           fsr1l	equ	0xFE1
  3108                           
  3109                           	psect	cstackCOMRAM
  3110  000001                     __pcstackCOMRAM:
  3111                           	opt stack 0
  3112  000001                     ??_handler_interrupt_hight:
  3113  000001                     
  3114                           ; 2 bytes @ 0x0
  3115  000001                     	ds	14
  3116  00000F                     ??_handler_interrupt_low:
  3117                           
  3118                           ; 1 bytes @ 0xE
  3119  00000F                     	ds	17
  3120  000020                     ??___enter_menu_set_pose:
  3121  000020                     ??_ads1115_set_mux:
  3122  000020                     ??_in_adc_start_and_read:
  3123  000020                     ___exp_10@n:
  3124                           	opt stack 0
  3125  000020                     key_waite_release@t8:
  3126                           	opt stack 0
  3127  000020                     key_shift_loc_fixed_point@t8:
  3128                           	opt stack 0
  3129  000020                     ___x_arrange_str@i:
  3130                           	opt stack 0
  3131  000020                     m_int8_2_hex@t8:
  3132                           	opt stack 0
  3133  000020                     iic_send_ack@ack:
  3134                           	opt stack 0
  3135  000020                     iic_waite_ack@timeout:
  3136                           	opt stack 0
  3137  000020                     lcd_disp_level_bar@show:
  3138                           	opt stack 0
  3139  000020                     lcd_disp_chr_loc_0@code:
  3140                           	opt stack 0
  3141  000020                     lcd_disp_dp_loc_0@dp:
  3142                           	opt stack 0
  3143  000020                     lcd_disp_chr_loc_1@code:
  3144                           	opt stack 0
  3145  000020                     lcd_disp_dp_loc_1@dp:
  3146                           	opt stack 0
  3147  000020                     lcd_disp_chr_loc_2@code:
  3148                           	opt stack 0
  3149  000020                     lcd_disp_dp_loc_2@dp:
  3150                           	opt stack 0
  3151  000020                     lcd_disp_chr_loc_3@code:
  3152                           	opt stack 0
  3153  000020                     lcd_disp_chr_loc_4@code:
  3154                           	opt stack 0
  3155  000020                     lcd_disp_chr_loc_5@code:
  3156                           	opt stack 0
  3157  000020                     lcd_disp_chr_loc_6@code:
  3158                           	opt stack 0
  3159  000020                     lcd_disp_chr_loc_7@code:
  3160                           	opt stack 0
  3161  000020                     lcd_disp_logo@show:
  3162                           	opt stack 0
  3163  000020                     lcd_disp_unit_t@show:
  3164                           	opt stack 0
  3165  000020                     lcd_disp_unit_1st_m@show:
  3166                           	opt stack 0
  3167  000020                     lcd_disp_unit_1st_m3@show:
  3168                           	opt stack 0
  3169  000020                     lcd_disp_unit_mpa@show:
  3170                           	opt stack 0
  3171  000020                     m_flash_unlock@oldGIE:
  3172                           	opt stack 0
  3173                           
  3174                           ; 1 bytes @ 0x1F
  3175  000020                     	ds	1
  3176  000021                     tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           postinc0	equ	0xFEE
  3181                           wreg	equ	0xFE8
  3182                           postdec1	equ	0xFE5
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           
  3186                           ; 1 bytes @ 0x20
  3187 ;;
  3188 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3189 ;;
  3190 ;; *************** function _main *****************
  3191 ;; Defined at:
  3192 ;;		line 5 in file "src/app/main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  t16             2    0        unsigned int 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2  590[None  ] int 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels required when called:   15
  3212 ;; This function calls:
  3213 ;;		_ads1115_init_all_chip
  3214 ;;		_data_init_all
  3215 ;;		_event_process
  3216 ;;		_in_adc_init
  3217 ;;		_lcd_init
  3218 ;;		_rtc_set
  3219 ;;		_soc_init
  3220 ;;		_ui_disp_start_cs600
  3221 ;; This function is called by:
  3222 ;;		Startup code after reset
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text0
  3227  007CA8                     __ptext0:
  3228                           	opt stack 0
  3229  007CA8                     _main:
  3230                           	opt stack 16
  3231                           
  3232                           ;main.c: 7: uint16_t t16;
  3233                           ;main.c: 8: __nop();
  3234                           
  3235                           ;incstack = 0
  3236  007CA8  F000               	nop	
  3237                           
  3238                           ;main.c: 10: soc_init();
  3239  007CAA  ECCF  F040         	call	_soc_init	;wreg free
  3240                           
  3241                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  3242  007CAE  0EEC               	movlw	low _defalutRtc
  3243  007CB0  0100               	movlb	0	; () banked
  3244  007CB2  6F60               	movwf	rtc_set@rtc& (0+255),b
  3245  007CB4  0E01               	movlw	high _defalutRtc
  3246  007CB6  0100               	movlb	0	; () banked
  3247  007CB8  6F61               	movwf	(rtc_set@rtc+1)& (0+255),b
  3248  007CBA  EC47  F030         	call	_rtc_set	;wreg free
  3249                           
  3250                           ;main.c: 12: lcd_init();
  3251  007CBE  ECDF  F040         	call	_lcd_init	;wreg free
  3252                           
  3253                           ;main.c: 14: ads1115_init_all_chip();
  3254  007CC2  EC14  F03F         	call	_ads1115_init_all_chip	;wreg free
  3255                           
  3256                           ;main.c: 15: data_init_all();
  3257  007CC6  ECF4  F040         	call	_data_init_all	;wreg free
  3258                           
  3259                           ;main.c: 16: in_adc_init();
  3260  007CCA  EC8E  F040         	call	_in_adc_init	;wreg free
  3261                           
  3262                           ;main.c: 18: ui_disp_start_cs600(4);
  3263  007CCE  0E04               	movlw	4
  3264  007CD0  ECD2  F033         	call	_ui_disp_start_cs600
  3265                           
  3266                           ;main.c: 22: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  3267  007CD4  9893               	bcf	3987,4,c	;volatile
  3268  007CD6  888A               	bsf	3978,4,c	;volatile
  3269                           
  3270                           ;main.c: 23: __nop();
  3271  007CD8  F000               	nop	
  3272  007CDA                     l14061:
  3273                           
  3274                           ;main.c: 25: event_process();
  3275  007CDA  EC2F  F03F         	call	_event_process	;wreg free
  3276  007CDE  D7FD               	goto	l14061
  3277  007CE0                     __end_of_main:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           
  3289 ;; *************** function _ui_disp_start_cs600 *****************
  3290 ;; Defined at:
  3291 ;;		line 115 in file "src/api/ui.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  dly             1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  dly             1   28[BANK0 ] unsigned char 
  3296 ;;  buf             6   22[BANK0 ] unsigned char [6]
  3297 ;;  t8              1   29[BANK0 ] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;Total ram usage:        8 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    9
  3314 ;; This function calls:
  3315 ;;		_lcd_disp_all
  3316 ;;		_lcd_disp_logo
  3317 ;;		_lcd_disp_refresh
  3318 ;;		_lcd_show_string_l0
  3319 ;;		_lcd_show_string_l1
  3320 ;;		_m_int8_2_hex
  3321 ;;		_ticker_dly
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text1
  3328  0067A4                     __ptext1:
  3329                           	opt stack 0
  3330  0067A4                     _ui_disp_start_cs600:
  3331                           	opt stack 21
  3332                           
  3333                           ;incstack = 0
  3334                           ;ui_disp_start_cs600@dly stored from wreg
  3335  0067A4  0100               	movlb	0	; () banked
  3336  0067A6  6F7C               	movwf	ui_disp_start_cs600@dly& (0+255),b
  3337                           
  3338                           ;ui.c: 117: uint8_t t8;
  3339                           ;ui.c: 118: uint8_t buf[6]="-00-";
  3340  0067A8  EE21  F0E6         	lfsr	2,ui_disp_start_cs600@F7655
  3341  0067AC  EE10  F076         	lfsr	1,ui_disp_start_cs600@buf
  3342  0067B0  0E05               	movlw	5
  3343  0067B2                     u12401:
  3344  0067B2  CFDB FFE3          	movff	plusw2,plusw1
  3345  0067B6  06E8               	decf	wreg,f,c
  3346  0067B8  E2FC               	bc	u12401
  3347                           
  3348                           ;ui.c: 119: lcd_disp_all(0);;
  3349  0067BA  0E00               	movlw	0
  3350  0067BC  ECC5  F03F         	call	_lcd_disp_all
  3351                           
  3352                           ;ui.c: 120: lcd_show_string_l0((uint8_t*)("cs66"));
  3353  0067C0  0EF5               	movlw	low STR_1
  3354  0067C2  0100               	movlb	0	; () banked
  3355  0067C4  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  3356  0067C6  0EF3               	movlw	high STR_1
  3357  0067C8  0100               	movlb	0	; () banked
  3358  0067CA  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  3359  0067CC  EC61  F038         	call	_lcd_show_string_l0	;wreg free
  3360                           
  3361                           ;ui.c: 121: lcd_disp_logo(1);
  3362  0067D0  0E01               	movlw	1
  3363  0067D2  ECAD  F03F         	call	_lcd_disp_logo
  3364                           
  3365                           ;ui.c: 122: t8=dly;
  3366  0067D6  C07C  F07D         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  3367                           
  3368                           ;ui.c: 123: if(t8<1)t8=1;
  3369  0067DA  0100               	movlb	0	; () banked
  3370  0067DC  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3371  0067DE  0100               	movlb	0	; () banked
  3372  0067E0  A4D8               	btfss	status,2,c
  3373  0067E2  D026               	goto	l13745
  3374                           
  3375                           ; BSR set to: 0
  3376  0067E4  0E01               	movlw	1
  3377  0067E6  0100               	movlb	0	; () banked
  3378  0067E8  6F7D               	movwf	ui_disp_start_cs600@t8& (0+255),b
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;ui.c: 124: while(t8){
  3382  0067EA  D022               	goto	l13745
  3383  0067EC                     l13733:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;ui.c: 125: m_int8_2_hex(buf+1,t8-1);
  3387  0067EC  0E77               	movlw	low (ui_disp_start_cs600@buf+1)
  3388  0067EE  0100               	movlb	0	; () banked
  3389  0067F0  6F60               	movwf	m_int8_2_hex@str& (0+255),b
  3390  0067F2  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  3391  0067F4  0100               	movlb	0	; () banked
  3392  0067F6  6F61               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3393  0067F8  0100               	movlb	0	; () banked
  3394  0067FA  057D               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  3395  0067FC  0100               	movlb	0	; () banked
  3396  0067FE  6F62               	movwf	m_int8_2_hex@b& (0+255),b
  3397  006800  EC88  F03B         	call	_m_int8_2_hex	;wreg free
  3398                           
  3399                           ;ui.c: 126: buf[4]='\0';
  3400  006804  0E00               	movlw	0
  3401  006806  0100               	movlb	0	; () banked
  3402  006808  6F7A               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;ui.c: 127: lcd_show_string_l1(buf);
  3406  00680A  0E76               	movlw	low ui_disp_start_cs600@buf
  3407  00680C  0100               	movlb	0	; () banked
  3408  00680E  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  3409  006810  0E00               	movlw	high ui_disp_start_cs600@buf
  3410  006812  0100               	movlb	0	; () banked
  3411  006814  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  3412  006816  ECB9  F03D         	call	_lcd_show_string_l1	;wreg free
  3413                           
  3414                           ;ui.c: 129: lcd_disp_refresh();
  3415  00681A  EC6E  F03A         	call	_lcd_disp_refresh	;wreg free
  3416                           
  3417                           ;ui.c: 130: ticker_dly(1000);
  3418  00681E  0E03               	movlw	3
  3419  006820  0100               	movlb	0	; () banked
  3420  006822  6F61               	movwf	(ticker_dly@ms+1)& (0+255),b
  3421  006824  0EE8               	movlw	232
  3422  006826  6F60               	movwf	ticker_dly@ms& (0+255),b
  3423  006828  ECA8  F03E         	call	_ticker_dly	;wreg free
  3424                           
  3425                           ;ui.c: 131: t8--;
  3426  00682C  0100               	movlb	0	; () banked
  3427  00682E  077D               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  3428  006830                     l13745:
  3429                           
  3430                           ; BSR set to: 0
  3431  006830  0100               	movlb	0	; () banked
  3432  006832  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3433  006834  0100               	movlb	0	; () banked
  3434  006836  B4D8               	btfsc	status,2,c
  3435  006838  0012               	return	
  3436  00683A  D7D8               	goto	l13733
  3437  00683C                     __end_of_ui_disp_start_cs600:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postdec1	equ	0xFE5
  3446                           plusw1	equ	0xFE3
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           plusw2	equ	0xFDB
  3450                           status	equ	0xFD8
  3451                           
  3452 ;; *************** function _ticker_dly *****************
  3453 ;; Defined at:
  3454 ;;		line 53 in file "src/soc/ticker.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  ms              2    0[BANK0 ] unsigned int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        2 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    4
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_ui_disp_start_cs600
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text2
  3483  007D50                     __ptext2:
  3484                           	opt stack 0
  3485  007D50                     _ticker_dly:
  3486                           	opt stack 25
  3487                           
  3488                           ;ticker.c: 55: dlyTicker=0;
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;incstack = 0
  3492  007D50  0E00               	movlw	0
  3493  007D52  0101               	movlb	1	; () banked
  3494  007D54  6F73               	movwf	(_dlyTicker+1)& (0+255),b
  3495  007D56  0E00               	movlw	0
  3496  007D58  6F72               	movwf	_dlyTicker& (0+255),b
  3497                           
  3498                           ;ticker.c: 56: dlyTickerEn=1;
  3499  007D5A  0E01               	movlw	1
  3500  007D5C  6E33               	movwf	_dlyTickerEn,c
  3501                           
  3502                           ;ticker.c: 57: while(dlyTicker<ms){
  3503  007D5E  D001               	goto	l13587
  3504  007D60                     l1705:
  3505                           
  3506                           ; BSR set to: 1
  3507                           ;ticker.c: 58: __nop();
  3508  007D60  F000               	nop	
  3509  007D62                     l13587:
  3510  007D62  0100               	movlb	0	; () banked
  3511  007D64  5160               	movf	ticker_dly@ms& (0+255),w,b
  3512  007D66  0101               	movlb	1	; () banked
  3513  007D68  5D72               	subwf	_dlyTicker& (0+255),w,b
  3514  007D6A  0100               	movlb	0	; () banked
  3515  007D6C  5161               	movf	(ticker_dly@ms+1)& (0+255),w,b
  3516  007D6E  0101               	movlb	1	; () banked
  3517  007D70  5973               	subwfb	(_dlyTicker+1)& (0+255),w,b
  3518  007D72  A0D8               	btfss	status,0,c
  3519  007D74  D7F5               	goto	l1705
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;ticker.c: 59: }
  3523                           ;ticker.c: 60: dlyTickerEn=0;
  3524                           
  3525                           ; BSR set to: 1
  3526  007D76  0E00               	movlw	0
  3527  007D78  6E33               	movwf	_dlyTickerEn,c
  3528                           
  3529                           ;ticker.c: 61: dlyTicker=0;
  3530  007D7A  0E00               	movlw	0
  3531  007D7C  0101               	movlb	1	; () banked
  3532  007D7E  6F73               	movwf	(_dlyTicker+1)& (0+255),b
  3533  007D80  0E00               	movlw	0
  3534  007D82  6F72               	movwf	_dlyTicker& (0+255),b
  3535                           
  3536                           ; BSR set to: 1
  3537  007D84  0012               	return		;funcret
  3538  007D86                     __end_of_ticker_dly:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           tblptrh	equ	0xFF7
  3542                           tblptrl	equ	0xFF6
  3543                           tablat	equ	0xFF5
  3544                           postinc0	equ	0xFEE
  3545                           wreg	equ	0xFE8
  3546                           postdec1	equ	0xFE5
  3547                           plusw1	equ	0xFE3
  3548                           fsr1h	equ	0xFE2
  3549                           fsr1l	equ	0xFE1
  3550                           plusw2	equ	0xFDB
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _m_int8_2_hex *****************
  3554 ;; Defined at:
  3555 ;;		line 243 in file "src/depend/m_string.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  str             2    0[BANK0 ] PTR unsigned char 
  3558 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  3559 ;;  b               1    2[BANK0 ] unsigned char 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  t8              1   31[COMRAM] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3571 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;Total ram usage:        4 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    4
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_ui_disp_start_cs600
  3582 ;;		_ui_disp_rtc_mm_ss
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text3
  3587  007710                     __ptext3:
  3588                           	opt stack 0
  3589  007710                     _m_int8_2_hex:
  3590                           	opt stack 25
  3591                           
  3592                           ;m_string.c: 245: uint8_t t8;
  3593                           ;m_string.c: 246: t8=b;
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;incstack = 0
  3597  007710  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3598                           
  3599                           ;m_string.c: 247: t8>>=4;
  3600  007714  3A20               	swapf	m_int8_2_hex@t8,f,c
  3601  007716  0E0F               	movlw	15
  3602  007718  1620               	andwf	m_int8_2_hex@t8,f,c
  3603                           
  3604                           ;m_string.c: 248: t8 &= 0x0f;
  3605  00771A  0E0F               	movlw	15
  3606  00771C  1620               	andwf	m_int8_2_hex@t8,f,c
  3607                           
  3608                           ;m_string.c: 249: str[0]=HexTable[t8];
  3609  00771E  5020               	movf	m_int8_2_hex@t8,w,c
  3610  007720  0D01               	mullw	1
  3611  007722  0EDC               	movlw	low _HexTable
  3612  007724  24F3               	addwf	prodl,w,c
  3613  007726  6EF6               	movwf	tblptrl,c
  3614  007728  0EEF               	movlw	high _HexTable
  3615  00772A  20F4               	addwfc	prodh,w,c
  3616  00772C  6EF7               	movwf	tblptrh,c
  3617  00772E                     	if	0	;There are less than 3 active tblptr bytes
  3618  00772E                     	endif
  3619  00772E  C060  FFD9         	movff	m_int8_2_hex@str,fsr2l
  3620  007732  C061  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  3621  007736  0008               	tblrd		*
  3622  007738  CFF5 FFDF          	movff	tablat,indf2
  3623                           
  3624                           ;m_string.c: 251: t8=b;
  3625  00773C  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3626                           
  3627                           ;m_string.c: 253: t8 &= 0x0f;
  3628  007740  0E0F               	movlw	15
  3629  007742  1620               	andwf	m_int8_2_hex@t8,f,c
  3630                           
  3631                           ;m_string.c: 254: str[1]=HexTable[t8];
  3632  007744  5020               	movf	m_int8_2_hex@t8,w,c
  3633  007746  0D01               	mullw	1
  3634  007748  0EDC               	movlw	low _HexTable
  3635  00774A  24F3               	addwf	prodl,w,c
  3636  00774C  6EF6               	movwf	tblptrl,c
  3637  00774E  0EEF               	movlw	high _HexTable
  3638  007750  20F4               	addwfc	prodh,w,c
  3639  007752  6EF7               	movwf	tblptrh,c
  3640  007754                     	if	0	;There are less than 3 active tblptr bytes
  3641  007754                     	endif
  3642  007754  0100               	movlb	0	; () banked
  3643  007756  EE20 F001          	lfsr	2,1
  3644  00775A  5160               	movf	m_int8_2_hex@str& (0+255),w,b
  3645  00775C  26D9               	addwf	fsr2l,f,c
  3646  00775E  5161               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  3647  007760  22DA               	addwfc	fsr2h,f,c
  3648  007762  0008               	tblrd		*
  3649  007764  CFF5 FFDF          	movff	tablat,indf2
  3650                           
  3651                           ; BSR set to: 0
  3652  007768  0012               	return		;funcret
  3653  00776A                     __end_of_m_int8_2_hex:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           plusw1	equ	0xFE3
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           plusw2	equ	0xFDB
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _soc_init *****************
  3674 ;; Defined at:
  3675 ;;		line 2 in file "src/soc/soc.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    6
  3696 ;; This function calls:
  3697 ;;		_rtc_init
  3698 ;;		_sys_ticker_init
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text4
  3705  00819E                     __ptext4:
  3706                           	opt stack 0
  3707  00819E                     _soc_init:
  3708                           	opt stack 24
  3709                           
  3710                           ;soc.c: 5: sys_ticker_init();
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;incstack = 0
  3714  00819E  ECD7  F040         	call	_sys_ticker_init	;wreg free
  3715                           
  3716                           ;soc.c: 6: rtc_init();
  3717  0081A2  ECDA  F03D         	call	_rtc_init	;wreg free
  3718                           
  3719                           ;soc.c: 8: INTCONbits.PEIE = 1;
  3720  0081A6  8CF2               	bsf	intcon,6,c	;volatile
  3721                           
  3722                           ;soc.c: 9: INTCONbits.GIE = 1;
  3723  0081A8  8EF2               	bsf	intcon,7,c	;volatile
  3724                           
  3725                           ;soc.c: 11: RCONbits.IPEN=0;
  3726  0081AA  9ED0               	bcf	4048,7,c	;volatile
  3727  0081AC  0012               	return		;funcret
  3728  0081AE                     __end_of_soc_init:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           postdec1	equ	0xFE5
  3740                           plusw1	equ	0xFE3
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           indf2	equ	0xFDF
  3744                           plusw2	equ	0xFDB
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _sys_ticker_init *****************
  3750 ;; Defined at:
  3751 ;;		line 29 in file "src/soc/ticker.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    4
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_soc_init
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text5
  3780  0081AE                     __ptext5:
  3781                           	opt stack 0
  3782  0081AE                     _sys_ticker_init:
  3783                           	opt stack 25
  3784                           
  3785                           ;ticker.c: 32: PR2=(uint8_t)((11059200/4/16/16/100));
  3786                           
  3787                           ;incstack = 0
  3788  0081AE  0E6C               	movlw	108
  3789  0081B0  6ECB               	movwf	4043,c	;volatile
  3790                           
  3791                           ;ticker.c: 33: IPR1bits.TMR2IP=1;
  3792  0081B2  829F               	bsf	3999,1,c	;volatile
  3793                           
  3794                           ;ticker.c: 34: PIR1bits.TMR2IF=0;
  3795  0081B4  929E               	bcf	3998,1,c	;volatile
  3796                           
  3797                           ;ticker.c: 35: PIE1bits.TMR2IE=1;
  3798  0081B6  829D               	bsf	3997,1,c	;volatile
  3799                           
  3800                           ;ticker.c: 37: T2CON=0x7f;
  3801  0081B8  0E7F               	movlw	127
  3802  0081BA  6ECA               	movwf	4042,c	;volatile
  3803  0081BC  0012               	return		;funcret
  3804  0081BE                     __end_of_sys_ticker_init:
  3805                           	opt stack 0
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           postdec1	equ	0xFE5
  3816                           plusw1	equ	0xFE3
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           indf2	equ	0xFDF
  3820                           plusw2	equ	0xFDB
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _rtc_init *****************
  3826 ;; Defined at:
  3827 ;;		line 25 in file "src/soc/rtc.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    5
  3848 ;; This function calls:
  3849 ;;		_rtcc_reg_wr_disable
  3850 ;;		_rtcc_reg_wr_enable
  3851 ;; This function is called by:
  3852 ;;		_soc_init
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text6
  3857  007BB4                     __ptext6:
  3858                           	opt stack 0
  3859  007BB4                     _rtc_init:
  3860                           	opt stack 24
  3861                           
  3862                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  3863                           
  3864                           ;incstack = 0
  3865  007BB4  010F               	movlb	15	; () banked
  3866  007BB6  9554               	bcf	84,2,b	;volatile
  3867                           
  3868                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  3869  007BB8  010F               	movlb	15	; () banked
  3870  007BBA  8354               	bsf	84,1,b	;volatile
  3871                           
  3872                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  3873  007BBC  010F               	movlb	15	; () banked
  3874  007BBE  955F               	bcf	95,2,b	;volatile
  3875                           
  3876                           ;rtc.c: 31: ALRMRPT=0xff;
  3877  007BC0  010F               	movlb	15	; () banked
  3878  007BC2  695A               	setf	90,b	;volatile
  3879                           
  3880                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  3881  007BC4  010F               	movlb	15	; () banked
  3882  007BC6  8F5B               	bsf	91,7,b	;volatile
  3883                           
  3884                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  3885  007BC8  010F               	movlb	15	; () banked
  3886  007BCA  8D5B               	bsf	91,6,b	;volatile
  3887                           
  3888                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  3889  007BCC  010F               	movlb	15	; () banked
  3890  007BCE  955B               	bcf	91,2,b	;volatile
  3891  007BD0  975B               	bcf	91,3,b	;volatile
  3892  007BD2  995B               	bcf	91,4,b	;volatile
  3893  007BD4  9B5B               	bcf	91,5,b	;volatile
  3894                           
  3895                           ;rtc.c: 37: __nop();
  3896  007BD6  F000               	nop	
  3897                           
  3898                           ;rtc.c: 38: rtcc_reg_wr_enable();
  3899  007BD8  EC02  F041         	call	_rtcc_reg_wr_enable	;wreg free
  3900                           
  3901                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  3902  007BDC  010F               	movlb	15	; () banked
  3903  007BDE  8F5F               	bsf	95,7,b	;volatile
  3904                           
  3905                           ;rtc.c: 42: rtcc_reg_wr_disable();
  3906  007BE0  EC08  F041         	call	_rtcc_reg_wr_disable	;wreg free
  3907                           
  3908                           ;rtc.c: 43: __nop();
  3909  007BE4  F000               	nop	
  3910                           
  3911                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  3912  007BE6  80A5               	bsf	4005,0,c	;volatile
  3913                           
  3914                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  3915  007BE8  90A4               	bcf	4004,0,c	;volatile
  3916                           
  3917                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  3918  007BEA  80A3               	bsf	4003,0,c	;volatile
  3919                           
  3920                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  3921  007BEC  86CD               	bsf	4045,3,c	;volatile
  3922                           
  3923                           ;rtc.c: 51: __nop();
  3924  007BEE  F000               	nop	
  3925  007BF0  0012               	return		;funcret
  3926  007BF2                     __end_of_rtc_init:
  3927                           	opt stack 0
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           prodh	equ	0xFF4
  3933                           prodl	equ	0xFF3
  3934                           intcon	equ	0xFF2
  3935                           postinc0	equ	0xFEE
  3936                           wreg	equ	0xFE8
  3937                           postdec1	equ	0xFE5
  3938                           plusw1	equ	0xFE3
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           plusw2	equ	0xFDB
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function _rtc_set *****************
  3948 ;; Defined at:
  3949 ;;		line 54 in file "src/soc/rtc.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  3952 ;;		 -> defalutRtc(7), 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  stp             2    2[BANK0 ] PTR struct .
  3955 ;;		 -> defalutRtc(7), 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:        4 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    5
  3972 ;; This function calls:
  3973 ;;		_rtcc_reg_wr_disable
  3974 ;;		_rtcc_reg_wr_enable
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text7
  3981  00608E                     __ptext7:
  3982                           	opt stack 0
  3983  00608E                     _rtc_set:
  3984                           	opt stack 25
  3985                           
  3986                           ;rtc.c: 56: st_RtcDef* stp;
  3987                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  3988                           
  3989                           ;incstack = 0
  3990  00608E  C060  F062         	movff	rtc_set@rtc,rtc_set@stp
  3991  006092  C061  F063         	movff	rtc_set@rtc+1,rtc_set@stp+1
  3992                           
  3993                           ;rtc.c: 58: rtcc_reg_wr_enable();
  3994  006096  EC02  F041         	call	_rtcc_reg_wr_enable	;wreg free
  3995                           
  3996                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  3997  00609A  0EFC               	movlw	-4
  3998  00609C  010F               	movlb	15	; () banked
  3999  00609E  175F               	andwf	95,f,b	;volatile
  4000                           
  4001                           ; BSR set to: 15
  4002                           ;rtc.c: 61: RTCVALL=stp->second;
  4003  0060A0  0100               	movlb	0	; () banked
  4004  0060A2  EE20 F005          	lfsr	2,5
  4005  0060A6  5162               	movf	rtc_set@stp& (0+255),w,b
  4006  0060A8  26D9               	addwf	fsr2l,f,c
  4007  0060AA  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4008  0060AC  22DA               	addwfc	fsr2h,f,c
  4009  0060AE  50DF               	movf	indf2,w,c
  4010  0060B0  010F               	movlb	15	; () banked
  4011  0060B2  6F5C               	movwf	92,b	;volatile
  4012                           
  4013                           ; BSR set to: 15
  4014                           ;rtc.c: 62: RTCVALH=stp->minute;
  4015  0060B4  0100               	movlb	0	; () banked
  4016  0060B6  EE20 F004          	lfsr	2,4
  4017  0060BA  5162               	movf	rtc_set@stp& (0+255),w,b
  4018  0060BC  26D9               	addwf	fsr2l,f,c
  4019  0060BE  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4020  0060C0  22DA               	addwfc	fsr2h,f,c
  4021  0060C2  50DF               	movf	indf2,w,c
  4022  0060C4  010F               	movlb	15	; () banked
  4023  0060C6  6F5D               	movwf	93,b	;volatile
  4024                           
  4025                           ; BSR set to: 15
  4026                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4027  0060C8  010F               	movlb	15	; () banked
  4028  0060CA  515F               	movf	95,w,b	;volatile
  4029  0060CC  0BFC               	andlw	-4
  4030  0060CE  0901               	iorlw	1
  4031  0060D0  6F5F               	movwf	95,b	;volatile
  4032                           
  4033                           ; BSR set to: 15
  4034                           ;rtc.c: 64: RTCVALL=stp->hour;
  4035  0060D2  0100               	movlb	0	; () banked
  4036  0060D4  EE20 F003          	lfsr	2,3
  4037  0060D8  5162               	movf	rtc_set@stp& (0+255),w,b
  4038  0060DA  26D9               	addwf	fsr2l,f,c
  4039  0060DC  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4040  0060DE  22DA               	addwfc	fsr2h,f,c
  4041  0060E0  50DF               	movf	indf2,w,c
  4042  0060E2  010F               	movlb	15	; () banked
  4043  0060E4  6F5C               	movwf	92,b	;volatile
  4044                           
  4045                           ; BSR set to: 15
  4046                           ;rtc.c: 65: RTCVALH=stp->day;
  4047  0060E6  0100               	movlb	0	; () banked
  4048  0060E8  EE20 F006          	lfsr	2,6
  4049  0060EC  5162               	movf	rtc_set@stp& (0+255),w,b
  4050  0060EE  26D9               	addwf	fsr2l,f,c
  4051  0060F0  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4052  0060F2  22DA               	addwfc	fsr2h,f,c
  4053  0060F4  50DF               	movf	indf2,w,c
  4054  0060F6  010F               	movlb	15	; () banked
  4055  0060F8  6F5D               	movwf	93,b	;volatile
  4056                           
  4057                           ; BSR set to: 15
  4058                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4059  0060FA  010F               	movlb	15	; () banked
  4060  0060FC  515F               	movf	95,w,b	;volatile
  4061  0060FE  0BFC               	andlw	-4
  4062  006100  0902               	iorlw	2
  4063  006102  6F5F               	movwf	95,b	;volatile
  4064                           
  4065                           ; BSR set to: 15
  4066                           ;rtc.c: 67: RTCVALL=stp->date;
  4067  006104  0100               	movlb	0	; () banked
  4068  006106  EE20 F002          	lfsr	2,2
  4069  00610A  5162               	movf	rtc_set@stp& (0+255),w,b
  4070  00610C  26D9               	addwf	fsr2l,f,c
  4071  00610E  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4072  006110  22DA               	addwfc	fsr2h,f,c
  4073  006112  50DF               	movf	indf2,w,c
  4074  006114  010F               	movlb	15	; () banked
  4075  006116  6F5C               	movwf	92,b	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078                           ;rtc.c: 68: RTCVALH=stp->month;
  4079  006118  0100               	movlb	0	; () banked
  4080  00611A  EE20 F001          	lfsr	2,1
  4081  00611E  5162               	movf	rtc_set@stp& (0+255),w,b
  4082  006120  26D9               	addwf	fsr2l,f,c
  4083  006122  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4084  006124  22DA               	addwfc	fsr2h,f,c
  4085  006126  50DF               	movf	indf2,w,c
  4086  006128  010F               	movlb	15	; () banked
  4087  00612A  6F5D               	movwf	93,b	;volatile
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4091  00612C  0E03               	movlw	3
  4092  00612E  010F               	movlb	15	; () banked
  4093  006130  135F               	iorwf	95,f,b	;volatile
  4094                           
  4095                           ; BSR set to: 15
  4096                           ;rtc.c: 70: RTCVALL=stp->year;
  4097  006132  C062  FFD9         	movff	rtc_set@stp,fsr2l
  4098  006136  C063  FFDA         	movff	rtc_set@stp+1,fsr2h
  4099  00613A  50DF               	movf	indf2,w,c
  4100  00613C  010F               	movlb	15	; () banked
  4101  00613E  6F5C               	movwf	92,b	;volatile
  4102                           
  4103                           ; BSR set to: 15
  4104                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4105  006140  EC08  F041         	call	_rtcc_reg_wr_disable	;wreg free
  4106  006144  0012               	return		;funcret
  4107  006146                     __end_of_rtc_set:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           plusw1	equ	0xFE3
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           indf2	equ	0xFDF
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _rtcc_reg_wr_enable *****************
  4129 ;; Defined at:
  4130 ;;		line 9 in file "src/soc/rtc.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		None
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    4
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_rtc_init
  4155 ;;		_rtc_set
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text8
  4160  008204                     __ptext8:
  4161                           	opt stack 0
  4162  008204                     _rtcc_reg_wr_enable:
  4163                           	opt stack 24
  4164                           
  4165                           ;incstack = 0
  4166  008204  0E55               	movlw	85	;# 
  4167  008206  6EA7               	movwf	4007,c	;# 
  4168  008208  0EAA               	movlw	170	;# 
  4169  00820A  6EA7               	movwf	4007,c	;# 
  4170  00820C  8B5F               	bsf	3935,5,b	;# 
  4171  00820E  0012               	return		;funcret
  4172  008210                     __end_of_rtcc_reg_wr_enable:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           prodh	equ	0xFF4
  4179                           prodl	equ	0xFF3
  4180                           intcon	equ	0xFF2
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           postdec1	equ	0xFE5
  4184                           plusw1	equ	0xFE3
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           plusw2	equ	0xFDB
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _rtcc_reg_wr_disable *****************
  4194 ;; Defined at:
  4195 ;;		line 17 in file "src/soc/rtc.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		None
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    4
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_rtc_init
  4220 ;;		_rtc_set
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text9
  4225  008210                     __ptext9:
  4226                           	opt stack 0
  4227  008210                     _rtcc_reg_wr_disable:
  4228                           	opt stack 24
  4229                           
  4230                           ;incstack = 0
  4231  008210  0E55               	movlw	85	;# 
  4232  008212  6EA7               	movwf	4007,c	;# 
  4233  008214  0EAA               	movlw	170	;# 
  4234  008216  6EA7               	movwf	4007,c	;# 
  4235  008218  9B5F               	bcf	3935,5,b	;# 
  4236  00821A  0012               	return		;funcret
  4237  00821C                     __end_of_rtcc_reg_wr_disable:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           intcon	equ	0xFF2
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           postdec1	equ	0xFE5
  4249                           plusw1	equ	0xFE3
  4250                           fsr1h	equ	0xFE2
  4251                           fsr1l	equ	0xFE1
  4252                           indf2	equ	0xFDF
  4253                           plusw2	equ	0xFDB
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function _lcd_init *****************
  4259 ;; Defined at:
  4260 ;;		line 663 in file "src/driver/lcd.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    6
  4281 ;; This function calls:
  4282 ;;		_lcd_bl_on
  4283 ;;		_lcd_config
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text10
  4290  0081BE                     __ptext10:
  4291                           	opt stack 0
  4292  0081BE                     _lcd_init:
  4293                           	opt stack 24
  4294                           
  4295                           ;lcd.c: 665: lcd_config();
  4296                           
  4297                           ;incstack = 0
  4298  0081BE  EC25  F040         	call	_lcd_config	;wreg free
  4299                           
  4300                           ;lcd.c: 667: LCDCON=0x8f;;
  4301  0081C2  0E8F               	movlw	143
  4302  0081C4  6EA8               	movwf	4008,c	;volatile
  4303                           
  4304                           ;lcd.c: 668: lcd_bl_on();
  4305  0081C6  EC0E  F041         	call	_lcd_bl_on	;wreg free
  4306  0081CA  0012               	return		;funcret
  4307  0081CC                     __end_of_lcd_init:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon	equ	0xFF2
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           postdec1	equ	0xFE5
  4319                           plusw1	equ	0xFE3
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           indf2	equ	0xFDF
  4323                           plusw2	equ	0xFDB
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function _lcd_config *****************
  4329 ;; Defined at:
  4330 ;;		line 609 in file "src/driver/lcd.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    5
  4351 ;; This function calls:
  4352 ;;		_lcd_disp_all
  4353 ;; This function is called by:
  4354 ;;		_lcd_init
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text11
  4359  00804A                     __ptext11:
  4360                           	opt stack 0
  4361  00804A                     _lcd_config:
  4362                           	opt stack 24
  4363                           
  4364                           ;lcd.c: 615: LCDREG=0x3f;
  4365                           
  4366                           ;incstack = 0
  4367  00804A  0E3F               	movlw	63
  4368  00804C  6ED2               	movwf	4050,c	;volatile
  4369                           
  4370                           ;lcd.c: 623: LCDPSbits.WFT = 0;
  4371  00804E  9EAA               	bcf	4010,7,c	;volatile
  4372                           
  4373                           ;lcd.c: 624: LCDPSbits.BIASMD = 0;
  4374  008050  9CAA               	bcf	4010,6,c	;volatile
  4375                           
  4376                           ;lcd.c: 625: LCDPSbits.LP3 = 0;
  4377  008052  96AA               	bcf	4010,3,c	;volatile
  4378                           
  4379                           ;lcd.c: 626: LCDPSbits.LP2 = 1;
  4380  008054  84AA               	bsf	4010,2,c	;volatile
  4381                           
  4382                           ;lcd.c: 627: LCDPSbits.LP1 = 0;
  4383  008056  92AA               	bcf	4010,1,c	;volatile
  4384                           
  4385                           ;lcd.c: 628: LCDPSbits.LP0 = 0;
  4386  008058  90AA               	bcf	4010,0,c	;volatile
  4387                           
  4388                           ;lcd.c: 631: LCDSE0 = 0b11111111;
  4389  00805A  68A9               	setf	4009,c	;volatile
  4390                           
  4391                           ;lcd.c: 632: LCDSE1 = 0b11100000;
  4392  00805C  0EE0               	movlw	224
  4393  00805E  6EB6               	movwf	4022,c	;volatile
  4394                           
  4395                           ;lcd.c: 633: LCDSE2 = 0b11111000;
  4396  008060  0EF8               	movlw	248
  4397  008062  6EB7               	movwf	4023,c	;volatile
  4398                           
  4399                           ;lcd.c: 634: LCDSE3 = 0b11000011;
  4400  008064  0EC3               	movlw	195
  4401  008066  6EB8               	movwf	4024,c	;volatile
  4402                           
  4403                           ;lcd.c: 635: LCDSE4 = 0b11111110;
  4404  008068  0EFE               	movlw	254
  4405  00806A  6EB9               	movwf	4025,c	;volatile
  4406                           
  4407                           ;lcd.c: 636: LCDSE5 = 0b11001111;
  4408  00806C  0ECF               	movlw	207
  4409  00806E  6EBA               	movwf	4026,c	;volatile
  4410                           
  4411                           ;lcd.c: 639: lcd_disp_all(0x00);;
  4412  008070  0E00               	movlw	0
  4413  008072  ECC5  F03F         	call	_lcd_disp_all
  4414  008076  0012               	return		;funcret
  4415  008078                     __end_of_lcd_config:
  4416                           	opt stack 0
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           postdec1	equ	0xFE5
  4427                           plusw1	equ	0xFE3
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           plusw2	equ	0xFDB
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _lcd_bl_on *****************
  4437 ;; Defined at:
  4438 ;;		line 644 in file "src/driver/lcd.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    4
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_lcd_init
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text12
  4467  00821C                     __ptext12:
  4468                           	opt stack 0
  4469  00821C                     _lcd_bl_on:
  4470                           	opt stack 25
  4471                           
  4472                           ;incstack = 0
  4473                           ;lcd.c: 646: do{TRISG &= ~(1<<4);}while(0);;
  4474  00821C  9898               	bcf	3992,4,c	;volatile
  4475                           
  4476                           ;lcd.c: 647: RTCCFGbits.RTCOE=1;
  4477  00821E  010F               	movlb	15	; () banked
  4478  008220  855F               	bsf	95,2,b	;volatile
  4479                           
  4480                           ; BSR set to: 15
  4481                           
  4482                           ;lcd.c: 648: do{LATG |= (1<<4);}while(0);;
  4483  008222  888F               	bsf	3983,4,c	;volatile
  4484  008224  0012               	return	
  4485  008226                     __end_of_lcd_bl_on:
  4486                           	opt stack 0
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           postdec1	equ	0xFE5
  4497                           plusw1	equ	0xFE3
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           plusw2	equ	0xFDB
  4502                           fsr2h	equ	0xFDA
  4503                           fsr2l	equ	0xFD9
  4504                           status	equ	0xFD8
  4505                           
  4506 ;; *************** function _event_process *****************
  4507 ;; Defined at:
  4508 ;;		line 68 in file "src/app/event.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      char 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:   14
  4529 ;; This function calls:
  4530 ;;		_event_process_rtc
  4531 ;;		_event_process_ticker
  4532 ;;		_event_process_time_out
  4533 ;;		_key_polling
  4534 ;;		_key_process
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text13
  4541  007E5E                     __ptext13:
  4542                           	opt stack 0
  4543  007E5E                     _event_process:
  4544                           	opt stack 16
  4545                           
  4546                           ;event.c: 70: if(glbEvent & (1<<1)){
  4547                           
  4548                           ; BSR set to: 15
  4549                           ;incstack = 0
  4550  007E5E  A235               	btfss	_glbEvent,1,c	;volatile
  4551  007E60  D003               	goto	l13753
  4552                           
  4553                           ;event.c: 71: glbEvent &= ~(1<<1);
  4554  007E62  9235               	bcf	_glbEvent,1,c	;volatile
  4555                           
  4556                           ;event.c: 73: event_process_rtc();
  4557  007E64  ECA3  F030         	call	_event_process_rtc	;wreg free
  4558  007E68                     l13753:
  4559                           
  4560                           ;event.c: 74: }
  4561                           ;event.c: 75: if(glbEvent & (1<<0)){
  4562  007E68  A035               	btfss	_glbEvent,0,c	;volatile
  4563  007E6A  D003               	goto	l13759
  4564                           
  4565                           ;event.c: 76: glbEvent &= ~(1<<0);
  4566  007E6C  9035               	bcf	_glbEvent,0,c	;volatile
  4567                           
  4568                           ;event.c: 77: event_process_ticker();
  4569  007E6E  ECED  F040         	call	_event_process_ticker	;wreg free
  4570  007E72                     l13759:
  4571                           
  4572                           ;event.c: 78: }
  4573                           ;event.c: 79: if(glbEvent & (1<<2)){
  4574  007E72  A435               	btfss	_glbEvent,2,c	;volatile
  4575  007E74  D003               	goto	l13765
  4576                           
  4577                           ;event.c: 80: glbEvent &= ~(1<<2);
  4578  007E76  9435               	bcf	_glbEvent,2,c	;volatile
  4579                           
  4580                           ;event.c: 81: event_process_time_out();
  4581  007E78  ECE6  F040         	call	_event_process_time_out	;wreg free
  4582  007E7C                     l13765:
  4583                           
  4584                           ;event.c: 82: }
  4585                           ;event.c: 84: keyValue=key_polling();
  4586  007E7C  EC2C  F03B         	call	_key_polling	;wreg free
  4587  007E80  0100               	movlb	0	; () banked
  4588  007E82  6FFE               	movwf	_keyValue& (0+255),b	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;event.c: 85: if(keyValue!=(0x0)){
  4592  007E84  0100               	movlb	0	; () banked
  4593  007E86  51FE               	movf	_keyValue& (0+255),w,b	;volatile
  4594  007E88  B4D8               	btfsc	status,2,c
  4595  007E8A  0012               	return	
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;event.c: 86: key_process();
  4599  007E8C  EC9D  F032         	call	_key_process	;wreg free
  4600  007E90  0012               	return	
  4601  007E92                     __end_of_event_process:
  4602                           	opt stack 0
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           intcon	equ	0xFF2
  4610                           postinc0	equ	0xFEE
  4611                           wreg	equ	0xFE8
  4612                           postdec1	equ	0xFE5
  4613                           plusw1	equ	0xFE3
  4614                           fsr1h	equ	0xFE2
  4615                           fsr1l	equ	0xFE1
  4616                           indf2	equ	0xFDF
  4617                           plusw2	equ	0xFDB
  4618                           fsr2h	equ	0xFDA
  4619                           fsr2l	equ	0xFD9
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function _key_process *****************
  4623 ;; Defined at:
  4624 ;;		line 162 in file "src/api/key_menu.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  tm              2  121[BANK0 ] unsigned int 
  4629 ;;  key             1  123[BANK0 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;Total ram usage:        3 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:   13
  4646 ;; This function calls:
  4647 ;;		_key_process_down
  4648 ;;		_key_process_set
  4649 ;;		_key_process_set_down_long
  4650 ;;		_key_process_set_long
  4651 ;;		_key_process_up
  4652 ;;		_key_waite_release
  4653 ;;		_ui_disp_menu
  4654 ;; This function is called by:
  4655 ;;		_event_process
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text14
  4660  00653A                     __ptext14:
  4661                           	opt stack 0
  4662  00653A                     _key_process:
  4663                           	opt stack 16
  4664                           
  4665                           ;key_menu.c: 164: uint16_t tm;
  4666                           ;key_menu.c: 165: uint8_t key;
  4667                           ;key_menu.c: 166: tm=key_waite_release(2000,&key);
  4668                           
  4669                           ;incstack = 0
  4670  00653A  0E07               	movlw	7
  4671  00653C  0100               	movlb	0	; () banked
  4672  00653E  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  4673  006540  0ED0               	movlw	208
  4674  006542  6F68               	movwf	key_waite_release@timeout& (0+255),b
  4675  006544  0EDB               	movlw	low key_process@key
  4676  006546  0100               	movlb	0	; () banked
  4677  006548  6F6A               	movwf	key_waite_release@key& (0+255),b
  4678  00654A  0E00               	movlw	high key_process@key
  4679  00654C  0100               	movlb	0	; () banked
  4680  00654E  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  4681  006550  EC98  F03D         	call	_key_waite_release	;wreg free
  4682  006554  C068  F0D9         	movff	?_key_waite_release,key_process@tm
  4683  006558  C069  F0DA         	movff	?_key_waite_release+1,key_process@tm+1
  4684                           
  4685                           ;key_menu.c: 167: if(tm>=2000){
  4686  00655C  0ED0               	movlw	208
  4687  00655E  0100               	movlb	0	; () banked
  4688  006560  5DD9               	subwf	key_process@tm& (0+255),w,b
  4689  006562  0E07               	movlw	7
  4690  006564  0100               	movlb	0	; () banked
  4691  006566  59DA               	subwfb	(key_process@tm+1)& (0+255),w,b
  4692  006568  A0D8               	btfss	status,0,c
  4693  00656A  D010               	goto	l13559
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;key_menu.c: 169: if(key==(0x01<<0x02)){
  4697  00656C  0E04               	movlw	4
  4698  00656E  0100               	movlb	0	; () banked
  4699  006570  19DB               	xorwf	key_process@key& (0+255),w,b
  4700  006572  A4D8               	btfss	status,2,c
  4701  006574  D003               	goto	l13555
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;key_menu.c: 170: key_process_set_long();
  4705  006576  EC7D  F03F         	call	_key_process_set_long	;wreg free
  4706                           
  4707                           ;key_menu.c: 171: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  4708  00657A  D01D               	goto	l13571
  4709  00657C                     l13555:
  4710  00657C  0E05               	movlw	5
  4711  00657E  0100               	movlb	0	; () banked
  4712  006580  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  4713  006582  A4D8               	btfss	status,2,c
  4714  006584  D018               	goto	l13571
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;key_menu.c: 172: key_process_set_down_long();
  4718  006586  EC2B  F02F         	call	_key_process_set_down_long	;wreg free
  4719                           
  4720                           ;key_menu.c: 173: }
  4721                           ;key_menu.c: 174: }else{
  4722  00658A  D015               	goto	l13571
  4723  00658C                     l13559:
  4724                           
  4725                           ;key_menu.c: 176: if(keyValue == (0x01<<0x0)){
  4726  00658C  0100               	movlb	0	; () banked
  4727  00658E  05FE               	decf	_keyValue& (0+255),w,b	;volatile
  4728  006590  A4D8               	btfss	status,2,c
  4729  006592  D003               	goto	l13563
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;key_menu.c: 177: key_process_down();
  4733  006594  EC18  F03E         	call	_key_process_down	;wreg free
  4734                           
  4735                           ;key_menu.c: 178: }else if(keyValue == (0x01<<0x01)){
  4736  006598  D00E               	goto	l13571
  4737  00659A                     l13563:
  4738  00659A  0E02               	movlw	2
  4739  00659C  0100               	movlb	0	; () banked
  4740  00659E  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  4741  0065A0  A4D8               	btfss	status,2,c
  4742  0065A2  D003               	goto	l13567
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;key_menu.c: 179: key_process_up();
  4746  0065A4  EC49  F03F         	call	_key_process_up	;wreg free
  4747                           
  4748                           ;key_menu.c: 180: }else if(keyValue == (0x01<<0x02)){
  4749  0065A8  D006               	goto	l13571
  4750  0065AA                     l13567:
  4751  0065AA  0E04               	movlw	4
  4752  0065AC  0100               	movlb	0	; () banked
  4753  0065AE  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  4754  0065B0  B4D8               	btfsc	status,2,c
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;key_menu.c: 181: key_process_set();
  4758  0065B2  EC3C  F040         	call	_key_process_set	;wreg free
  4759  0065B6                     l13571:
  4760                           
  4761                           ;key_menu.c: 182: }
  4762                           ;key_menu.c: 183: }
  4763                           ;key_menu.c: 187: ui_disp_menu();
  4764  0065B6  ECDE  F03E         	call	_ui_disp_menu	;wreg free
  4765                           
  4766                           ;key_menu.c: 188: key_waite_release(2000,&key);
  4767  0065BA  0E07               	movlw	7
  4768  0065BC  0100               	movlb	0	; () banked
  4769  0065BE  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  4770  0065C0  0ED0               	movlw	208
  4771  0065C2  6F68               	movwf	key_waite_release@timeout& (0+255),b
  4772  0065C4  0EDB               	movlw	low key_process@key
  4773  0065C6  0100               	movlb	0	; () banked
  4774  0065C8  6F6A               	movwf	key_waite_release@key& (0+255),b
  4775  0065CA  0E00               	movlw	high key_process@key
  4776  0065CC  0100               	movlb	0	; () banked
  4777  0065CE  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  4778  0065D0  EC98  F03D         	call	_key_waite_release	;wreg free
  4779  0065D4  0012               	return		;funcret
  4780  0065D6                     __end_of_key_process:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           postdec1	equ	0xFE5
  4792                           plusw1	equ	0xFE3
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           indf2	equ	0xFDF
  4796                           plusw2	equ	0xFDB
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function _key_waite_release *****************
  4802 ;; Defined at:
  4803 ;;		line 26 in file "src/api/key_menu.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  timeout         2    8[BANK0 ] unsigned int 
  4806 ;;  key             2   10[BANK0 ] PTR unsigned char 
  4807 ;;		 -> key_process@key(1), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  t8              1   31[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    8[BANK0 ] unsigned int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;Total ram usage:        5 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    7
  4826 ;; This function calls:
  4827 ;;		_key_polling
  4828 ;; This function is called by:
  4829 ;;		_key_process
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text15
  4834  007B30                     __ptext15:
  4835                           	opt stack 0
  4836  007B30                     _key_waite_release:
  4837                           	opt stack 21
  4838                           
  4839                           ;key_menu.c: 28: uint8_t t8;
  4840                           ;key_menu.c: 30: userTicker_ms=0;
  4841                           
  4842                           ;incstack = 0
  4843  007B30  0E00               	movlw	0
  4844  007B32  0101               	movlb	1	; () banked
  4845  007B34  6F79               	movwf	(_userTicker_ms+1)& (0+255),b	;volatile
  4846  007B36  0E00               	movlw	0
  4847  007B38  6F78               	movwf	_userTicker_ms& (0+255),b	;volatile
  4848                           
  4849                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  4850  007B3A  D006               	goto	l13097
  4851  007B3C                     l13091:
  4852                           
  4853                           ; BSR set to: 1
  4854                           ;key_menu.c: 32: t8=key_polling();
  4855  007B3C  EC2C  F03B         	call	_key_polling	;wreg free
  4856  007B40  6E20               	movwf	key_waite_release@t8,c
  4857                           
  4858                           ;key_menu.c: 33: if(t8==(0x0))break;
  4859  007B42  5020               	movf	key_waite_release@t8,w,c
  4860  007B44  B4D8               	btfsc	status,2,c
  4861  007B46  D00A               	goto	l13099
  4862  007B48                     l13097:
  4863  007B48  0100               	movlb	0	; () banked
  4864  007B4A  5168               	movf	key_waite_release@timeout& (0+255),w,b
  4865  007B4C  0101               	movlb	1	; () banked
  4866  007B4E  5D78               	subwf	_userTicker_ms& (0+255),w,b	;volatile
  4867  007B50  0100               	movlb	0	; () banked
  4868  007B52  5169               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  4869  007B54  0101               	movlb	1	; () banked
  4870  007B56  5979               	subwfb	(_userTicker_ms+1)& (0+255),w,b	;volatile
  4871  007B58  A0D8               	btfss	status,0,c
  4872  007B5A  D7F0               	goto	l13091
  4873  007B5C                     l13099:
  4874                           
  4875                           ;key_menu.c: 34: }
  4876                           ;key_menu.c: 35: *key=t8;
  4877  007B5C  C06A  FFD9         	movff	key_waite_release@key,fsr2l
  4878  007B60  C06B  FFDA         	movff	key_waite_release@key+1,fsr2h
  4879  007B64  C020  FFDF         	movff	key_waite_release@t8,indf2
  4880                           
  4881                           ;key_menu.c: 36: return userTicker_ms;
  4882  007B68  C178  F068         	movff	_userTicker_ms,?_key_waite_release	;volatile
  4883  007B6C  C179  F069         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  4884  007B70  0012               	return	
  4885  007B72                     __end_of_key_waite_release:
  4886                           	opt stack 0
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           prodh	equ	0xFF4
  4892                           prodl	equ	0xFF3
  4893                           intcon	equ	0xFF2
  4894                           postinc0	equ	0xFEE
  4895                           wreg	equ	0xFE8
  4896                           postdec1	equ	0xFE5
  4897                           plusw1	equ	0xFE3
  4898                           fsr1h	equ	0xFE2
  4899                           fsr1l	equ	0xFE1
  4900                           indf2	equ	0xFDF
  4901                           plusw2	equ	0xFDB
  4902                           fsr2h	equ	0xFDA
  4903                           fsr2l	equ	0xFD9
  4904                           status	equ	0xFD8
  4905                           
  4906 ;; *************** function _key_polling *****************
  4907 ;; Defined at:
  4908 ;;		line 8 in file "src/driver/key.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  t8              1    7[BANK0 ] unsigned char 
  4913 ;;  ktemp           1    6[BANK0 ] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      unsigned char 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;Total ram usage:        2 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    6
  4930 ;; This function calls:
  4931 ;;		_delay_ms
  4932 ;; This function is called by:
  4933 ;;		_key_waite_release
  4934 ;;		_event_process
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text16
  4939  007658                     __ptext16:
  4940                           	opt stack 0
  4941  007658                     _key_polling:
  4942                           	opt stack 21
  4943                           
  4944                           ;key.c: 10: uint8_t ktemp=(0x0);
  4945                           
  4946                           ;incstack = 0
  4947  007658  0E00               	movlw	0
  4948  00765A  0100               	movlb	0	; () banked
  4949  00765C  6F66               	movwf	key_polling@ktemp& (0+255),b
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;key.c: 11: uint8_t t8=0xff;
  4953  00765E  0100               	movlb	0	; () banked
  4954  007660  6967               	setf	key_polling@t8& (0+255),b
  4955                           
  4956                           ; BSR set to: 0
  4957                           
  4958                           ; BSR set to: 0
  4959                           
  4960                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  4961  007662  0E0E               	movlw	14
  4962  007664  1293               	iorwf	3987,f,c	;volatile
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  4966                           
  4967                           ; BSR set to: 0
  4968  007666  5081               	movf	3969,w,c	;volatile
  4969  007668  0B0E               	andlw	14
  4970  00766A  0100               	movlb	0	; () banked
  4971  00766C  6F67               	movwf	key_polling@t8& (0+255),b
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  4975  00766E  0100               	movlb	0	; () banked
  4976  007670  5167               	movf	key_polling@t8& (0+255),w,b
  4977  007672  0B0E               	andlw	14
  4978  007674  0A0E               	xorlw	14
  4979  007676  B4D8               	btfsc	status,2,c
  4980  007678  D01A               	goto	l12553
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;key.c: 16: delay_ms(10);
  4984  00767A  0E00               	movlw	0
  4985  00767C  0100               	movlb	0	; () banked
  4986  00767E  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  4987  007680  0E0A               	movlw	10
  4988  007682  6F64               	movwf	delay_ms@dly& (0+255),b
  4989  007684  EC7B  F040         	call	_delay_ms	;wreg free
  4990                           
  4991                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  4992  007688  5081               	movf	3969,w,c	;volatile
  4993  00768A  0B0E               	andlw	14
  4994  00768C  0100               	movlb	0	; () banked
  4995  00768E  6F67               	movwf	key_polling@t8& (0+255),b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;key.c: 18: if(!( t8 & (1<<3))){
  4999  007690  0100               	movlb	0	; () banked
  5000  007692  B767               	btfsc	key_polling@t8& (0+255),3,b
  5001  007694  D002               	goto	l12545
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;key.c: 19: ktemp |= (0x01<<0x0);
  5005  007696  0100               	movlb	0	; () banked
  5006  007698  8166               	bsf	key_polling@ktemp& (0+255),0,b
  5007  00769A                     l12545:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;key.c: 20: }
  5011                           ;key.c: 21: if(!( t8 & (1<<2))){
  5012  00769A  0100               	movlb	0	; () banked
  5013  00769C  B567               	btfsc	key_polling@t8& (0+255),2,b
  5014  00769E  D002               	goto	l12549
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;key.c: 22: ktemp |= (0x01<<0x01);
  5018  0076A0  0100               	movlb	0	; () banked
  5019  0076A2  8366               	bsf	key_polling@ktemp& (0+255),1,b
  5020  0076A4                     l12549:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;key.c: 23: }
  5024                           ;key.c: 24: if(!( t8 & (1<<1))){
  5025  0076A4  0100               	movlb	0	; () banked
  5026  0076A6  B367               	btfsc	key_polling@t8& (0+255),1,b
  5027  0076A8  D002               	goto	l12553
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;key.c: 25: ktemp |= (0x01<<0x02);
  5031  0076AA  0100               	movlb	0	; () banked
  5032  0076AC  8566               	bsf	key_polling@ktemp& (0+255),2,b
  5033  0076AE                     l12553:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;key.c: 26: }
  5037                           ;key.c: 27: }
  5038                           ;key.c: 29: return ktemp;
  5039  0076AE  0100               	movlb	0	; () banked
  5040  0076B0  5166               	movf	key_polling@ktemp& (0+255),w,b
  5041  0076B2  0012               	return	
  5042  0076B4                     __end_of_key_polling:
  5043                           	opt stack 0
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           prodh	equ	0xFF4
  5049                           prodl	equ	0xFF3
  5050                           intcon	equ	0xFF2
  5051                           postinc0	equ	0xFEE
  5052                           wreg	equ	0xFE8
  5053                           postdec1	equ	0xFE5
  5054                           plusw1	equ	0xFE3
  5055                           fsr1h	equ	0xFE2
  5056                           fsr1l	equ	0xFE1
  5057                           indf2	equ	0xFDF
  5058                           plusw2	equ	0xFDB
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _key_process_up *****************
  5064 ;; Defined at:
  5065 ;;		line 70 in file "src/api/key_menu.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    6
  5086 ;; This function calls:
  5087 ;;		_key_adj_value_fixed_point
  5088 ;; This function is called by:
  5089 ;;		_key_process
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text17
  5094  007E92                     __ptext17:
  5095                           	opt stack 0
  5096  007E92                     _key_process_up:
  5097                           	opt stack 22
  5098                           
  5099                           ;key_menu.c: 72: switch(menu){
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;incstack = 0
  5103  007E92  D00B               	goto	l13119
  5104  007E94                     l13115:
  5105  007E94  0E39               	movlw	low _passWord
  5106  007E96  0100               	movlb	0	; () banked
  5107  007E98  6F6E               	movwf	key_adj_value_fixed_point@value& (0+255),b
  5108  007E9A  0E00               	movlw	high _passWord
  5109  007E9C  0100               	movlb	0	; () banked
  5110  007E9E  6F6F               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  5111  007EA0  C03B  F070         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  5112  007EA4  EC0E  F02D         	call	_key_adj_value_fixed_point	;wreg free
  5113                           
  5114                           ;key_menu.c: 78: }
  5115                           
  5116                           ;key_menu.c: 77: default:break;
  5117  007EA8  0012               	return	
  5118  007EAA                     l13119:
  5119  007EAA  5037               	movf	_menu,w,c	;volatile
  5120                           
  5121                           ; Switch size 1, requested type "space"
  5122                           ; Number of cases is 4, Range of values is 0 to 16
  5123                           ; switch strategies available:
  5124                           ; Name         Instructions Cycles
  5125                           ; simple_byte           13     7 (average)
  5126                           ;	Chosen strategy is simple_byte
  5127  007EAC  0A00               	xorlw	0	; case 0
  5128  007EAE  B4D8               	btfsc	status,2,c
  5129  007EB0  0012               	return	
  5130  007EB2  0A01               	xorlw	1	; case 1
  5131  007EB4  B4D8               	btfsc	status,2,c
  5132  007EB6  0012               	return	
  5133  007EB8  0A03               	xorlw	3	; case 2
  5134  007EBA  B4D8               	btfsc	status,2,c
  5135  007EBC  0012               	return	
  5136  007EBE  0A12               	xorlw	18	; case 16
  5137  007EC0  A4D8               	btfss	status,2,c
  5138  007EC2  0012               	return	
  5139  007EC4  D7E7               	goto	l13115
  5140  007EC6                     __end_of_key_process_up:
  5141                           	opt stack 0
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           prodh	equ	0xFF4
  5147                           prodl	equ	0xFF3
  5148                           intcon	equ	0xFF2
  5149                           postinc0	equ	0xFEE
  5150                           wreg	equ	0xFE8
  5151                           postdec1	equ	0xFE5
  5152                           plusw1	equ	0xFE3
  5153                           fsr1h	equ	0xFE2
  5154                           fsr1l	equ	0xFE1
  5155                           indf2	equ	0xFDF
  5156                           plusw2	equ	0xFDB
  5157                           fsr2h	equ	0xFDA
  5158                           fsr2l	equ	0xFD9
  5159                           status	equ	0xFD8
  5160                           
  5161 ;; *************** function _key_adj_value_fixed_point *****************
  5162 ;; Defined at:
  5163 ;;		line 58 in file "src/api/key_menu.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  value           2   14[BANK0 ] PTR unsigned int 
  5166 ;;		 -> passWord(2), 
  5167 ;;  loc             1   16[BANK0 ] unsigned char 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  t16             2   19[BANK0 ] unsigned int 
  5170 ;;  dloc            2   17[BANK0 ] unsigned int 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:        7 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    5
  5187 ;; This function calls:
  5188 ;;		___exp_10
  5189 ;;		___lwdiv
  5190 ;;		___lwmod
  5191 ;;		___wmul
  5192 ;; This function is called by:
  5193 ;;		_key_process_up
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text18
  5198  005A1C                     __ptext18:
  5199                           	opt stack 0
  5200  005A1C                     _key_adj_value_fixed_point:
  5201                           	opt stack 22
  5202                           
  5203                           ;key_menu.c: 60: uint16_t dloc;
  5204                           ;key_menu.c: 61: uint16_t t16=*value;
  5205                           
  5206                           ;incstack = 0
  5207  005A1C  C06E  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  5208  005A20  C06F  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  5209  005A24  CFDE F073          	movff	postinc2,key_adj_value_fixed_point@t16
  5210  005A28  CFDD F074          	movff	postdec2,key_adj_value_fixed_point@t16+1
  5211                           
  5212                           ;key_menu.c: 62: if(loc>3)loc=3;
  5213  005A2C  0E03               	movlw	3
  5214  005A2E  0100               	movlb	0	; () banked
  5215  005A30  6570               	cpfsgt	key_adj_value_fixed_point@loc& (0+255),b
  5216  005A32  D003               	goto	l12577
  5217                           
  5218                           ; BSR set to: 0
  5219  005A34  0E03               	movlw	3
  5220  005A36  0100               	movlb	0	; () banked
  5221  005A38  6F70               	movwf	key_adj_value_fixed_point@loc& (0+255),b
  5222  005A3A                     l12577:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;key_menu.c: 63: dloc=(t16/__exp_10(loc))%10;
  5226  005A3A  0100               	movlb	0	; () banked
  5227  005A3C  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5228  005A3E  EC5A  F03B         	call	___exp_10
  5229  005A42  C060  F064         	movff	?___exp_10,___lwdiv@divisor
  5230  005A46  C061  F065         	movff	?___exp_10+1,___lwdiv@divisor+1
  5231  005A4A  C073  F062         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  5232  005A4E  C074  F063         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  5233  005A52  ECEA  F037         	call	___lwdiv	;wreg free
  5234  005A56  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  5235  005A5A  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  5236  005A5E  0E00               	movlw	0
  5237  005A60  0100               	movlb	0	; () banked
  5238  005A62  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  5239  005A64  0E0A               	movlw	10
  5240  005A66  6F6B               	movwf	___lwmod@divisor& (0+255),b
  5241  005A68  EC3D  F03A         	call	___lwmod	;wreg free
  5242  005A6C  C069  F071         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  5243  005A70  C06A  F072         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  5244                           
  5245                           ;key_menu.c: 64: t16=t16-dloc*__exp_10(loc);
  5246  005A74  0100               	movlb	0	; () banked
  5247  005A76  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5248  005A78  EC5A  F03B         	call	___exp_10
  5249  005A7C  C060  F062         	movff	?___exp_10,___wmul@multiplier
  5250  005A80  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  5251  005A84  C071  F064         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  5252  005A88  C072  F065         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  5253  005A8C  ECF9  F03E         	call	___wmul	;wreg free
  5254  005A90  0100               	movlb	0	; () banked
  5255  005A92  1F62               	comf	?___wmul& (0+255),f,b
  5256  005A94  0100               	movlb	0	; () banked
  5257  005A96  1F63               	comf	(?___wmul+1)& (0+255),f,b
  5258  005A98  0100               	movlb	0	; () banked
  5259  005A9A  4B62               	infsnz	?___wmul& (0+255),f,b
  5260  005A9C  2B63               	incf	(?___wmul+1)& (0+255),f,b
  5261  005A9E  0100               	movlb	0	; () banked
  5262  005AA0  5173               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  5263  005AA2  0100               	movlb	0	; () banked
  5264  005AA4  2562               	addwf	?___wmul& (0+255),w,b
  5265  005AA6  0100               	movlb	0	; () banked
  5266  005AA8  6F73               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  5267  005AAA  0100               	movlb	0	; () banked
  5268  005AAC  5174               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  5269  005AAE  0100               	movlb	0	; () banked
  5270  005AB0  2163               	addwfc	(?___wmul+1)& (0+255),w,b
  5271  005AB2  0100               	movlb	0	; () banked
  5272  005AB4  6F74               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;key_menu.c: 65: dloc++;
  5276  005AB6  0100               	movlb	0	; () banked
  5277  005AB8  4B71               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  5278  005ABA  2B72               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;key_menu.c: 66: if(dloc>9)dloc=0;
  5282  005ABC  0100               	movlb	0	; () banked
  5283  005ABE  5172               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  5284  005AC0  E105               	bnz	u11510
  5285  005AC2  0E0A               	movlw	10
  5286  005AC4  0100               	movlb	0	; () banked
  5287  005AC6  5D71               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  5288  005AC8  A0D8               	btfss	status,0,c
  5289  005ACA  D005               	goto	l12587
  5290  005ACC                     u11510:
  5291                           
  5292                           ; BSR set to: 0
  5293  005ACC  0E00               	movlw	0
  5294  005ACE  0100               	movlb	0	; () banked
  5295  005AD0  6F72               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  5296  005AD2  0E00               	movlw	0
  5297  005AD4  6F71               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  5298  005AD6                     l12587:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;key_menu.c: 67: t16+=(dloc*__exp_10(loc));
  5302  005AD6  0100               	movlb	0	; () banked
  5303  005AD8  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5304  005ADA  EC5A  F03B         	call	___exp_10
  5305  005ADE  C060  F062         	movff	?___exp_10,___wmul@multiplier
  5306  005AE2  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  5307  005AE6  C071  F064         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  5308  005AEA  C072  F065         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  5309  005AEE  ECF9  F03E         	call	___wmul	;wreg free
  5310  005AF2  0100               	movlb	0	; () banked
  5311  005AF4  5162               	movf	?___wmul& (0+255),w,b
  5312  005AF6  0100               	movlb	0	; () banked
  5313  005AF8  2773               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  5314  005AFA  0100               	movlb	0	; () banked
  5315  005AFC  5163               	movf	(?___wmul+1)& (0+255),w,b
  5316  005AFE  0100               	movlb	0	; () banked
  5317  005B00  2374               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;key_menu.c: 68: *value=t16;
  5321  005B02  C06E  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  5322  005B06  C06F  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  5323  005B0A  C073  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  5324  005B0E  C074  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  5325                           
  5326                           ; BSR set to: 0
  5327  005B12  0012               	return		;funcret
  5328  005B14                     __end_of_key_adj_value_fixed_point:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           plusw1	equ	0xFE3
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           plusw2	equ	0xFDB
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function ___lwmod *****************
  5352 ;; Defined at:
  5353 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  dividend        2    9[BANK0 ] unsigned int 
  5356 ;;  divisor         2   11[BANK0 ] unsigned int 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  counter         1   13[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  2    9[BANK0 ] unsigned int 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;Total ram usage:        5 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    4
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_key_adj_value_fixed_point
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text19
  5383  00747A                     __ptext19:
  5384                           	opt stack 0
  5385  00747A                     ___lwmod:
  5386                           	opt stack 22
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;incstack = 0
  5390  00747A  0100               	movlb	0	; () banked
  5391  00747C  516B               	movf	___lwmod@divisor& (0+255),w,b
  5392  00747E  0100               	movlb	0	; () banked
  5393  007480  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5394  007482  B4D8               	btfsc	status,2,c
  5395  007484  D026               	goto	l2292
  5396                           
  5397                           ; BSR set to: 0
  5398  007486  0E01               	movlw	1
  5399  007488  0100               	movlb	0	; () banked
  5400  00748A  6F6D               	movwf	___lwmod@counter& (0+255),b
  5401  00748C  D006               	goto	l12335
  5402  00748E                     l12333:
  5403                           
  5404                           ; BSR set to: 0
  5405  00748E  0100               	movlb	0	; () banked
  5406  007490  90D8               	bcf	status,0,c
  5407  007492  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  5408  007494  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5409  007496  0100               	movlb	0	; () banked
  5410  007498  2B6D               	incf	___lwmod@counter& (0+255),f,b
  5411  00749A                     l12335:
  5412                           
  5413                           ; BSR set to: 0
  5414  00749A  0100               	movlb	0	; () banked
  5415  00749C  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5416  00749E  D7F7               	goto	l12333
  5417  0074A0                     l12337:
  5418                           
  5419                           ; BSR set to: 0
  5420  0074A0  0100               	movlb	0	; () banked
  5421  0074A2  516B               	movf	___lwmod@divisor& (0+255),w,b
  5422  0074A4  0100               	movlb	0	; () banked
  5423  0074A6  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  5424  0074A8  0100               	movlb	0	; () banked
  5425  0074AA  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5426  0074AC  0100               	movlb	0	; () banked
  5427  0074AE  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5428  0074B0  A0D8               	btfss	status,0,c
  5429  0074B2  D008               	goto	l12341
  5430                           
  5431                           ; BSR set to: 0
  5432  0074B4  0100               	movlb	0	; () banked
  5433  0074B6  516B               	movf	___lwmod@divisor& (0+255),w,b
  5434  0074B8  0100               	movlb	0	; () banked
  5435  0074BA  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  5436  0074BC  0100               	movlb	0	; () banked
  5437  0074BE  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5438  0074C0  0100               	movlb	0	; () banked
  5439  0074C2  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5440  0074C4                     l12341:
  5441                           
  5442                           ; BSR set to: 0
  5443  0074C4  0100               	movlb	0	; () banked
  5444  0074C6  90D8               	bcf	status,0,c
  5445  0074C8  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5446  0074CA  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  5447                           
  5448                           ; BSR set to: 0
  5449  0074CC  0100               	movlb	0	; () banked
  5450  0074CE  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  5451  0074D0  D7E7               	goto	l12337
  5452  0074D2                     l2292:
  5453                           
  5454                           ; BSR set to: 0
  5455  0074D2  C069  F069         	movff	___lwmod@dividend,?___lwmod
  5456  0074D6  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  5457                           
  5458                           ; BSR set to: 0
  5459  0074DA  0012               	return		;funcret
  5460  0074DC                     __end_of___lwmod:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           prodh	equ	0xFF4
  5467                           prodl	equ	0xFF3
  5468                           intcon	equ	0xFF2
  5469                           postinc0	equ	0xFEE
  5470                           wreg	equ	0xFE8
  5471                           postdec1	equ	0xFE5
  5472                           plusw1	equ	0xFE3
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           plusw2	equ	0xFDB
  5479                           fsr2h	equ	0xFDA
  5480                           fsr2l	equ	0xFD9
  5481                           status	equ	0xFD8
  5482                           
  5483 ;; *************** function ___lwdiv *****************
  5484 ;; Defined at:
  5485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  dividend        2    2[BANK0 ] unsigned int 
  5488 ;;  divisor         2    4[BANK0 ] unsigned int 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  quotient        2    7[BANK0 ] unsigned int 
  5491 ;;  counter         1    6[BANK0 ] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  2    2[BANK0 ] unsigned int 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        7 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    4
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_key_adj_value_fixed_point
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text20
  5516  006FD4                     __ptext20:
  5517                           	opt stack 0
  5518  006FD4                     ___lwdiv:
  5519                           	opt stack 22
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;incstack = 0
  5523  006FD4  0E00               	movlw	0
  5524  006FD6  0100               	movlb	0	; () banked
  5525  006FD8  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5526  006FDA  0E00               	movlw	0
  5527  006FDC  6F67               	movwf	___lwdiv@quotient& (0+255),b
  5528                           
  5529                           ; BSR set to: 0
  5530  006FDE  0100               	movlb	0	; () banked
  5531  006FE0  5164               	movf	___lwdiv@divisor& (0+255),w,b
  5532  006FE2  0100               	movlb	0	; () banked
  5533  006FE4  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5534  006FE6  B4D8               	btfsc	status,2,c
  5535  006FE8  D02C               	goto	l2282
  5536                           
  5537                           ; BSR set to: 0
  5538  006FEA  0E01               	movlw	1
  5539  006FEC  0100               	movlb	0	; () banked
  5540  006FEE  6F66               	movwf	___lwdiv@counter& (0+255),b
  5541  006FF0  D006               	goto	l12315
  5542  006FF2                     l12313:
  5543                           
  5544                           ; BSR set to: 0
  5545  006FF2  0100               	movlb	0	; () banked
  5546  006FF4  90D8               	bcf	status,0,c
  5547  006FF6  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
  5548  006FF8  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5549  006FFA  0100               	movlb	0	; () banked
  5550  006FFC  2B66               	incf	___lwdiv@counter& (0+255),f,b
  5551  006FFE                     l12315:
  5552                           
  5553                           ; BSR set to: 0
  5554  006FFE  0100               	movlb	0	; () banked
  5555  007000  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5556  007002  D7F7               	goto	l12313
  5557  007004                     l12317:
  5558                           
  5559                           ; BSR set to: 0
  5560  007004  0100               	movlb	0	; () banked
  5561  007006  90D8               	bcf	status,0,c
  5562  007008  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
  5563  00700A  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5564                           
  5565                           ; BSR set to: 0
  5566  00700C  0100               	movlb	0	; () banked
  5567  00700E  5164               	movf	___lwdiv@divisor& (0+255),w,b
  5568  007010  0100               	movlb	0	; () banked
  5569  007012  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
  5570  007014  0100               	movlb	0	; () banked
  5571  007016  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5572  007018  0100               	movlb	0	; () banked
  5573  00701A  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5574  00701C  A0D8               	btfss	status,0,c
  5575  00701E  D00A               	goto	l12325
  5576                           
  5577                           ; BSR set to: 0
  5578  007020  0100               	movlb	0	; () banked
  5579  007022  5164               	movf	___lwdiv@divisor& (0+255),w,b
  5580  007024  0100               	movlb	0	; () banked
  5581  007026  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
  5582  007028  0100               	movlb	0	; () banked
  5583  00702A  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5584  00702C  0100               	movlb	0	; () banked
  5585  00702E  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5586                           
  5587                           ; BSR set to: 0
  5588  007030  0100               	movlb	0	; () banked
  5589  007032  8167               	bsf	___lwdiv@quotient& (0+255),0,b
  5590  007034                     l12325:
  5591                           
  5592                           ; BSR set to: 0
  5593  007034  0100               	movlb	0	; () banked
  5594  007036  90D8               	bcf	status,0,c
  5595  007038  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5596  00703A  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
  5597                           
  5598                           ; BSR set to: 0
  5599  00703C  0100               	movlb	0	; () banked
  5600  00703E  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  5601  007040  D7E1               	goto	l12317
  5602  007042                     l2282:
  5603                           
  5604                           ; BSR set to: 0
  5605  007042  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
  5606  007046  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5607                           
  5608                           ; BSR set to: 0
  5609  00704A  0012               	return		;funcret
  5610  00704C                     __end_of___lwdiv:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           postinc0	equ	0xFEE
  5620                           wreg	equ	0xFE8
  5621                           postdec1	equ	0xFE5
  5622                           plusw1	equ	0xFE3
  5623                           fsr1h	equ	0xFE2
  5624                           fsr1l	equ	0xFE1
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           plusw2	equ	0xFDB
  5629                           fsr2h	equ	0xFDA
  5630                           fsr2l	equ	0xFD9
  5631                           status	equ	0xFD8
  5632                           
  5633 ;; *************** function ___exp_10 *****************
  5634 ;; Defined at:
  5635 ;;		line 15 in file "src/api/key_menu.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  n               1    wreg     unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  n               1   31[COMRAM] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    0[BANK0 ] unsigned int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;Total ram usage:        3 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    4
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_key_adj_value_fixed_point
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text21
  5664  0076B4                     __ptext21:
  5665                           	opt stack 0
  5666  0076B4                     ___exp_10:
  5667                           	opt stack 22
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;incstack = 0
  5671                           ;___exp_10@n stored from wreg
  5672  0076B4  6E20               	movwf	___exp_10@n,c
  5673                           
  5674                           ;key_menu.c: 17: switch(n){
  5675  0076B6  D01E               	goto	l12061
  5676  0076B8                     l12039:
  5677  0076B8  0E00               	movlw	0
  5678  0076BA  0100               	movlb	0	; () banked
  5679  0076BC  6F61               	movwf	(?___exp_10+1)& (0+255),b
  5680  0076BE  0E01               	movlw	1
  5681  0076C0  6F60               	movwf	?___exp_10& (0+255),b
  5682                           
  5683                           ; BSR set to: 0
  5684  0076C2  0012               	return	
  5685  0076C4                     l12043:
  5686  0076C4  0E00               	movlw	0
  5687  0076C6  0100               	movlb	0	; () banked
  5688  0076C8  6F61               	movwf	(?___exp_10+1)& (0+255),b
  5689  0076CA  0E0A               	movlw	10
  5690  0076CC  6F60               	movwf	?___exp_10& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693  0076CE  0012               	return	
  5694  0076D0                     l12047:
  5695  0076D0  0E00               	movlw	0
  5696  0076D2  0100               	movlb	0	; () banked
  5697  0076D4  6F61               	movwf	(?___exp_10+1)& (0+255),b
  5698  0076D6  0E64               	movlw	100
  5699  0076D8  6F60               	movwf	?___exp_10& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702  0076DA  0012               	return	
  5703  0076DC                     l12051:
  5704  0076DC  0E03               	movlw	3
  5705  0076DE  0100               	movlb	0	; () banked
  5706  0076E0  6F61               	movwf	(?___exp_10+1)& (0+255),b
  5707  0076E2  0EE8               	movlw	232
  5708  0076E4  6F60               	movwf	?___exp_10& (0+255),b
  5709                           
  5710                           ; BSR set to: 0
  5711  0076E6  0012               	return	
  5712  0076E8                     l12055:
  5713  0076E8  0E27               	movlw	39
  5714  0076EA  0100               	movlb	0	; () banked
  5715  0076EC  6F61               	movwf	(?___exp_10+1)& (0+255),b
  5716  0076EE  0E10               	movlw	16
  5717  0076F0  6F60               	movwf	?___exp_10& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;key_menu.c: 23: }
  5721                           
  5722                           ; BSR set to: 0
  5723  0076F2  0012               	return	
  5724  0076F4                     l12061:
  5725  0076F4  5020               	movf	___exp_10@n,w,c
  5726                           
  5727                           ; Switch size 1, requested type "space"
  5728                           ; Number of cases is 4, Range of values is 0 to 4
  5729                           ; switch strategies available:
  5730                           ; Name         Instructions Cycles
  5731                           ; simple_byte           13     7 (average)
  5732                           ;	Chosen strategy is simple_byte
  5733  0076F6  0A00               	xorlw	0	; case 0
  5734  0076F8  B4D8               	btfsc	status,2,c
  5735  0076FA  D7DE               	goto	l12039
  5736  0076FC  0A02               	xorlw	2	; case 2
  5737  0076FE  B4D8               	btfsc	status,2,c
  5738  007700  D7E1               	goto	l12043
  5739  007702  0A01               	xorlw	1	; case 3
  5740  007704  B4D8               	btfsc	status,2,c
  5741  007706  D7E4               	goto	l12047
  5742  007708  0A07               	xorlw	7	; case 4
  5743  00770A  B4D8               	btfsc	status,2,c
  5744  00770C  D7E7               	goto	l12051
  5745  00770E  D7EC               	goto	l12055
  5746  007710                     __end_of___exp_10:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           postdec1	equ	0xFE5
  5758                           plusw1	equ	0xFE3
  5759                           fsr1h	equ	0xFE2
  5760                           fsr1l	equ	0xFE1
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           plusw2	equ	0xFDB
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _key_process_set_long *****************
  5770 ;; Defined at:
  5771 ;;		line 140 in file "src/api/key_menu.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    4
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_key_process
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text22
  5800  007EFA                     __ptext22:
  5801                           	opt stack 0
  5802  007EFA                     _key_process_set_long:
  5803                           	opt stack 24
  5804                           
  5805                           ;key_menu.c: 142: switch(menu){
  5806                           
  5807                           ;incstack = 0
  5808  007EFA  D009               	goto	l9233
  5809  007EFC                     l9229:
  5810                           
  5811                           ;key_menu.c: 144: case 0x01:
  5812                           ;key_menu.c: 145: case 0x02:
  5813                           ;key_menu.c: 146: case 0x10:
  5814                           ;key_menu.c: 147: {passWord=0x00;adjLocation=0x00;menu=0x00;break;}
  5815  007EFC  0E00               	movlw	0
  5816  007EFE  6E3A               	movwf	_passWord+1,c	;volatile
  5817  007F00  0E00               	movlw	0
  5818  007F02  6E39               	movwf	_passWord,c	;volatile
  5819  007F04  0E00               	movlw	0
  5820  007F06  6E3B               	movwf	_adjLocation,c	;volatile
  5821  007F08  0E00               	movlw	0
  5822  007F0A  6E37               	movwf	_menu,c	;volatile
  5823                           
  5824                           ;key_menu.c: 149: }
  5825                           
  5826                           ;key_menu.c: 148: default:break;
  5827  007F0C  0012               	return	
  5828  007F0E                     l9233:
  5829  007F0E  5037               	movf	_menu,w,c	;volatile
  5830                           
  5831                           ; Switch size 1, requested type "space"
  5832                           ; Number of cases is 4, Range of values is 0 to 16
  5833                           ; switch strategies available:
  5834                           ; Name         Instructions Cycles
  5835                           ; simple_byte           13     7 (average)
  5836                           ;	Chosen strategy is simple_byte
  5837  007F10  0A00               	xorlw	0	; case 0
  5838  007F12  B4D8               	btfsc	status,2,c
  5839  007F14  D7F3               	goto	l9229
  5840  007F16  0A01               	xorlw	1	; case 1
  5841  007F18  B4D8               	btfsc	status,2,c
  5842  007F1A  D7F0               	goto	l9229
  5843  007F1C  0A03               	xorlw	3	; case 2
  5844  007F1E  B4D8               	btfsc	status,2,c
  5845  007F20  D7ED               	goto	l9229
  5846  007F22  0A12               	xorlw	18	; case 16
  5847  007F24  A4D8               	btfss	status,2,c
  5848  007F26  0012               	return	
  5849  007F28  D7E9               	goto	l9229
  5850  007F2A                     __end_of_key_process_set_long:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postdec1	equ	0xFE5
  5862                           plusw1	equ	0xFE3
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           plusw2	equ	0xFDB
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function _key_process_set_down_long *****************
  5874 ;; Defined at:
  5875 ;;		line 107 in file "src/api/key_menu.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        2 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    7
  5896 ;; This function calls:
  5897 ;;		___enter_menu_set_base_zero
  5898 ;;		___enter_menu_set_density
  5899 ;;		___enter_menu_set_pose
  5900 ;; This function is called by:
  5901 ;;		_key_process
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text23
  5906  005E56                     __ptext23:
  5907                           	opt stack 0
  5908  005E56                     _key_process_set_down_long:
  5909                           	opt stack 21
  5910                           
  5911                           ;key_menu.c: 109: if(menu==0x10){
  5912                           
  5913                           ;incstack = 0
  5914  005E56  0E10               	movlw	16
  5915  005E58  1837               	xorwf	_menu,w,c	;volatile
  5916  005E5A  A4D8               	btfss	status,2,c
  5917  005E5C  0012               	return	
  5918  005E5E  D02A               	goto	l13157
  5919  005E60                     l13125:
  5920                           
  5921                           ;key_menu.c: 112: menu=0x20; __enter_menu_set_density(); break;
  5922  005E60  0E20               	movlw	32
  5923  005E62  6E37               	movwf	_menu,c	;volatile
  5924  005E64  ECC3  F03E         	call	___enter_menu_set_density	;wreg free
  5925  005E68  0012               	return	
  5926  005E6A                     l13129:
  5927                           
  5928                           ;key_menu.c: 114: menu=0x30; __enter_menu_set_pose(); break;
  5929  005E6A  0E30               	movlw	48
  5930  005E6C  6E37               	movwf	_menu,c	;volatile
  5931  005E6E  EC95  F03F         	call	___enter_menu_set_pose	;wreg free
  5932  005E72  0012               	return	
  5933  005E74                     l13133:
  5934                           
  5935                           ;key_menu.c: 116: menu=0x40;__enter_menu_set_base_zero(); break;
  5936  005E74  0E40               	movlw	64
  5937  005E76  6E37               	movwf	_menu,c	;volatile
  5938  005E78  EC3B  F03C         	call	___enter_menu_set_base_zero	;wreg free
  5939  005E7C  0012               	return	
  5940  005E7E                     l13137:
  5941                           
  5942                           ;key_menu.c: 118: menu=0x50; break;
  5943  005E7E  0E50               	movlw	80
  5944  005E80  6E37               	movwf	_menu,c	;volatile
  5945  005E82  0012               	return	
  5946  005E84                     l13139:
  5947                           
  5948                           ;key_menu.c: 120: menu=0x60; break;
  5949  005E84  0E60               	movlw	96
  5950  005E86  6E37               	movwf	_menu,c	;volatile
  5951  005E88  0012               	return	
  5952  005E8A                     l13141:
  5953                           
  5954                           ;key_menu.c: 122: menu=0x70; break;
  5955  005E8A  0E70               	movlw	112
  5956  005E8C  6E37               	movwf	_menu,c	;volatile
  5957  005E8E  0012               	return	
  5958  005E90                     l13143:
  5959                           
  5960                           ;key_menu.c: 124: menu=0x80; break;
  5961  005E90  0E80               	movlw	128
  5962  005E92  6E37               	movwf	_menu,c	;volatile
  5963  005E94  0012               	return	
  5964  005E96                     l13145:
  5965                           
  5966                           ;key_menu.c: 126: menu=0x90; break;
  5967  005E96  0E90               	movlw	144
  5968  005E98  6E37               	movwf	_menu,c	;volatile
  5969  005E9A  0012               	return	
  5970  005E9C                     l13147:
  5971                           
  5972                           ;key_menu.c: 128: menu=0xa0; break;
  5973  005E9C  0EA0               	movlw	160
  5974  005E9E  6E37               	movwf	_menu,c	;volatile
  5975  005EA0  0012               	return	
  5976  005EA2                     l13149:
  5977                           
  5978                           ;key_menu.c: 130: menu=0xb0; break;
  5979  005EA2  0EB0               	movlw	176
  5980  005EA4  6E37               	movwf	_menu,c	;volatile
  5981  005EA6  0012               	return	
  5982  005EA8                     l13151:
  5983                           
  5984                           ;key_menu.c: 132: menu=0xc0; break;
  5985  005EA8  0EC0               	movlw	192
  5986  005EAA  6E37               	movwf	_menu,c	;volatile
  5987  005EAC  0012               	return	
  5988  005EAE                     l13153:
  5989                           
  5990                           ;key_menu.c: 134: menu=0xf0; break;
  5991  005EAE  0EF0               	movlw	240
  5992  005EB0  6E37               	movwf	_menu,c	;volatile
  5993                           
  5994                           ;key_menu.c: 136: }
  5995                           
  5996                           ;key_menu.c: 135: default:break;
  5997  005EB2  0012               	return	
  5998  005EB4                     l13157:
  5999  005EB4  C039  F07F         	movff	_passWord,??_key_process_set_down_long	;volatile
  6000  005EB8  C03A  F080         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  6001                           
  6002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6003                           ; Switch size 1, requested type "space"
  6004                           ; Number of cases is 1, Range of values is 0 to 0
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte            4     3 (average)
  6008                           ;	Chosen strategy is simple_byte
  6009  005EBC  0100               	movlb	0	; () banked
  6010  005EBE  5180               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  6011  005EC0  0A00               	xorlw	0	; case 0
  6012  005EC2  A4D8               	btfss	status,2,c
  6013  005EC4  0012               	return	
  6014                           
  6015                           ; BSR set to: 0
  6016                           ; Switch size 1, requested type "space"
  6017                           ; Number of cases is 12, Range of values is 6 to 188
  6018                           ; switch strategies available:
  6019                           ; Name         Instructions Cycles
  6020                           ; simple_byte           37    19 (average)
  6021                           ;	Chosen strategy is simple_byte
  6022  005EC6  0100               	movlb	0	; () banked
  6023  005EC8  517F               	movf	??_key_process_set_down_long& (0+255),w,b
  6024  005ECA  0A06               	xorlw	6	; case 6
  6025  005ECC  B4D8               	btfsc	status,2,c
  6026  005ECE  D7E0               	goto	l13143
  6027  005ED0  0A16               	xorlw	22	; case 16
  6028  005ED2  B4D8               	btfsc	status,2,c
  6029  005ED4  D7E0               	goto	l13145
  6030  005ED6  0A02               	xorlw	2	; case 18
  6031  005ED8  B4D8               	btfsc	status,2,c
  6032  005EDA  D7E9               	goto	l13153
  6033  005EDC  0A36               	xorlw	54	; case 36
  6034  005EDE  B4D8               	btfsc	status,2,c
  6035  005EE0  D7BF               	goto	l13125
  6036  005EE2  0A1C               	xorlw	28	; case 56
  6037  005EE4  B4D8               	btfsc	status,2,c
  6038  005EE6  D7C6               	goto	l13133
  6039  005EE8  0A7A               	xorlw	122	; case 66
  6040  005EEA  B4D8               	btfsc	status,2,c
  6041  005EEC  D7BE               	goto	l13129
  6042  005EEE  0AC7               	xorlw	199	; case 133
  6043  005EF0  B4D8               	btfsc	status,2,c
  6044  005EF2  D7CB               	goto	l13141
  6045  005EF4  0A0F               	xorlw	15	; case 138
  6046  005EF6  B4D8               	btfsc	status,2,c
  6047  005EF8  D7D1               	goto	l13147
  6048  005EFA  0A01               	xorlw	1	; case 139
  6049  005EFC  B4D8               	btfsc	status,2,c
  6050  005EFE  D7D1               	goto	l13149
  6051  005F00  0A23               	xorlw	35	; case 168
  6052  005F02  B4D8               	btfsc	status,2,c
  6053  005F04  D7BC               	goto	l13137
  6054  005F06  0A01               	xorlw	1	; case 169
  6055  005F08  B4D8               	btfsc	status,2,c
  6056  005F0A  D7BC               	goto	l13139
  6057  005F0C  0A15               	xorlw	21	; case 188
  6058  005F0E  A4D8               	btfss	status,2,c
  6059                           
  6060                           ; BSR set to: 0
  6061  005F10  0012               	return	
  6062  005F12  D7CA               	goto	l13151
  6063  005F14                     __end_of_key_process_set_down_long:
  6064                           	opt stack 0
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           prodh	equ	0xFF4
  6070                           prodl	equ	0xFF3
  6071                           intcon	equ	0xFF2
  6072                           postinc0	equ	0xFEE
  6073                           wreg	equ	0xFE8
  6074                           postdec1	equ	0xFE5
  6075                           plusw1	equ	0xFE3
  6076                           fsr1h	equ	0xFE2
  6077                           fsr1l	equ	0xFE1
  6078                           indf2	equ	0xFDF
  6079                           postinc2	equ	0xFDE
  6080                           postdec2	equ	0xFDD
  6081                           plusw2	equ	0xFDB
  6082                           fsr2h	equ	0xFDA
  6083                           fsr2l	equ	0xFD9
  6084                           status	equ	0xFD8
  6085                           
  6086 ;; *************** function ___enter_menu_set_pose *****************
  6087 ;; Defined at:
  6088 ;;		line 88 in file "src/api/key_menu.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  fps             2    0[BANK0 ] PTR struct .
  6093 ;;		 -> RAM(3923), 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;Total ram usage:        3 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    4
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_key_process_set_down_long
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text24
  6118  007F2A                     __ptext24:
  6119                           	opt stack 0
  6120  007F2A                     ___enter_menu_set_pose:
  6121                           	opt stack 23
  6122                           
  6123                           ;key_menu.c: 89: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6124                           
  6125                           ;incstack = 0
  6126  007F2A  0E00               	movlw	0
  6127  007F2C  0100               	movlb	0	; () banked
  6128  007F2E  6F60               	movwf	___enter_menu_set_pose@fps& (0+255),b
  6129  007F30  0EF4               	movlw	244
  6130  007F32  0100               	movlb	0	; () banked
  6131  007F34  6F61               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;key_menu.c: 90: adjValue=(uint8_t)(fps->pos);
  6135  007F36  0100               	movlb	0	; () banked
  6136  007F38  EE20 F004          	lfsr	2,4
  6137  007F3C  5160               	movf	___enter_menu_set_pose@fps& (0+255),w,b
  6138  007F3E  26D9               	addwf	fsr2l,f,c
  6139  007F40  5161               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
  6140  007F42  22DA               	addwfc	fsr2h,f,c
  6141  007F44  50DF               	movf	indf2,w,c
  6142  007F46  6E20               	movwf	??___enter_menu_set_pose& (0+255),c
  6143  007F48  5020               	movf	??___enter_menu_set_pose,w,c
  6144  007F4A  0101               	movlb	1	; () banked
  6145  007F4C  6F46               	movwf	_adjValue& (0+255),b	;volatile
  6146  007F4E  6B47               	clrf	(_adjValue+1)& (0+255),b	;volatile
  6147  007F50  6B48               	clrf	(_adjValue+2)& (0+255),b	;volatile
  6148  007F52  6B49               	clrf	(_adjValue+3)& (0+255),b	;volatile
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;key_menu.c: 91: adjLocation=0;
  6152  007F54  0E00               	movlw	0
  6153  007F56  6E3B               	movwf	_adjLocation,c	;volatile
  6154                           
  6155                           ; BSR set to: 1
  6156  007F58  0012               	return		;funcret
  6157  007F5A                     __end_of___enter_menu_set_pose:
  6158                           	opt stack 0
  6159                           tblptru	equ	0xFF8
  6160                           tblptrh	equ	0xFF7
  6161                           tblptrl	equ	0xFF6
  6162                           tablat	equ	0xFF5
  6163                           prodh	equ	0xFF4
  6164                           prodl	equ	0xFF3
  6165                           intcon	equ	0xFF2
  6166                           postinc0	equ	0xFEE
  6167                           wreg	equ	0xFE8
  6168                           postdec1	equ	0xFE5
  6169                           plusw1	equ	0xFE3
  6170                           fsr1h	equ	0xFE2
  6171                           fsr1l	equ	0xFE1
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           plusw2	equ	0xFDB
  6176                           fsr2h	equ	0xFDA
  6177                           fsr2l	equ	0xFD9
  6178                           status	equ	0xFD8
  6179                           
  6180 ;; *************** function ___enter_menu_set_density *****************
  6181 ;; Defined at:
  6182 ;;		line 82 in file "src/api/key_menu.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  fps             2    2[BANK0 ] PTR struct .
  6187 ;;		 -> RAM(3923), 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;Total ram usage:        4 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    4
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_key_process_set_down_long
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text25
  6212  007D86                     __ptext25:
  6213                           	opt stack 0
  6214  007D86                     ___enter_menu_set_density:
  6215                           	opt stack 23
  6216                           
  6217                           ;key_menu.c: 83: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;incstack = 0
  6221  007D86  0E00               	movlw	0
  6222  007D88  0100               	movlb	0	; () banked
  6223  007D8A  6F62               	movwf	___enter_menu_set_density@fps& (0+255),b
  6224  007D8C  0EF4               	movlw	244
  6225  007D8E  0100               	movlb	0	; () banked
  6226  007D90  6F63               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;key_menu.c: 84: adjValue=fps->density;
  6230  007D92  0100               	movlb	0	; () banked
  6231  007D94  EE20 F006          	lfsr	2,6
  6232  007D98  5162               	movf	___enter_menu_set_density@fps& (0+255),w,b
  6233  007D9A  26D9               	addwf	fsr2l,f,c
  6234  007D9C  5163               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  6235  007D9E  22DA               	addwfc	fsr2h,f,c
  6236  007DA0  CFDE F060          	movff	postinc2,??___enter_menu_set_density
  6237  007DA4  CFDD F061          	movff	postdec2,??___enter_menu_set_density+1
  6238  007DA8  C060  F146         	movff	??___enter_menu_set_density,_adjValue	;volatile
  6239  007DAC  C061  F147         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
  6240  007DB0  0101               	movlb	1	; () banked
  6241  007DB2  6B48               	clrf	(_adjValue+2)& (0+255),b	;volatile
  6242  007DB4  6B49               	clrf	(_adjValue+3)& (0+255),b	;volatile
  6243                           
  6244                           ; BSR set to: 1
  6245                           ;key_menu.c: 85: adjLocation=0;
  6246  007DB6  0E00               	movlw	0
  6247  007DB8  6E3B               	movwf	_adjLocation,c	;volatile
  6248                           
  6249                           ; BSR set to: 1
  6250  007DBA  0012               	return		;funcret
  6251  007DBC                     __end_of___enter_menu_set_density:
  6252                           	opt stack 0
  6253                           tblptru	equ	0xFF8
  6254                           tblptrh	equ	0xFF7
  6255                           tblptrl	equ	0xFF6
  6256                           tablat	equ	0xFF5
  6257                           prodh	equ	0xFF4
  6258                           prodl	equ	0xFF3
  6259                           intcon	equ	0xFF2
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postdec1	equ	0xFE5
  6263                           plusw1	equ	0xFE3
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           plusw2	equ	0xFDB
  6270                           fsr2h	equ	0xFDA
  6271                           fsr2l	equ	0xFD9
  6272                           status	equ	0xFD8
  6273                           
  6274 ;; *************** function ___enter_menu_set_base_zero *****************
  6275 ;; Defined at:
  6276 ;;		line 93 in file "src/api/key_menu.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  fps             2   29[BANK0 ] PTR struct .
  6281 ;;		 -> RAM(3923), 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    6
  6298 ;; This function calls:
  6299 ;;		___int32_2_mflot32
  6300 ;; This function is called by:
  6301 ;;		_key_process_set_down_long
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text26
  6306  007876                     __ptext26:
  6307                           	opt stack 0
  6308  007876                     ___enter_menu_set_base_zero:
  6309                           	opt stack 21
  6310                           
  6311                           ;key_menu.c: 94: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;incstack = 0
  6315  007876  0E00               	movlw	0
  6316  007878  0100               	movlb	0	; () banked
  6317  00787A  6F7D               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  6318  00787C  0EF4               	movlw	244
  6319  00787E  0100               	movlb	0	; () banked
  6320  007880  6F7E               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;key_menu.c: 95: adjValue=(fps->baseZero);
  6324  007882  0100               	movlb	0	; () banked
  6325  007884  EE20 F018          	lfsr	2,24
  6326  007888  517D               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  6327  00788A  26D9               	addwf	fsr2l,f,c
  6328  00788C  517E               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  6329  00788E  22DA               	addwfc	fsr2h,f,c
  6330  007890  CFDE F146          	movff	postinc2,_adjValue	;volatile
  6331  007894  CFDE F147          	movff	postinc2,_adjValue+1	;volatile
  6332  007898  CFDE F148          	movff	postinc2,_adjValue+2	;volatile
  6333  00789C  CFDE F149          	movff	postinc2,_adjValue+3	;volatile
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;key_menu.c: 96: adjValue=__int32_2_mflot32(adjValue);
  6337  0078A0  C146  F06D         	movff	_adjValue,___int32_2_mflot32@x	;volatile
  6338  0078A4  C147  F06E         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
  6339  0078A8  C148  F06F         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
  6340  0078AC  C149  F070         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
  6341  0078B0  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  6342  0078B4  C06D  F146         	movff	?___int32_2_mflot32,_adjValue	;volatile
  6343  0078B8  C06E  F147         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
  6344  0078BC  C06F  F148         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
  6345  0078C0  C070  F149         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
  6346                           
  6347                           ;key_menu.c: 97: adjLocation=0;
  6348  0078C4  0E00               	movlw	0
  6349  0078C6  6E3B               	movwf	_adjLocation,c	;volatile
  6350  0078C8  0012               	return		;funcret
  6351  0078CA                     __end_of___enter_menu_set_base_zero:
  6352                           	opt stack 0
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           postinc0	equ	0xFEE
  6361                           wreg	equ	0xFE8
  6362                           postdec1	equ	0xFE5
  6363                           plusw1	equ	0xFE3
  6364                           fsr1h	equ	0xFE2
  6365                           fsr1l	equ	0xFE1
  6366                           indf2	equ	0xFDF
  6367                           postinc2	equ	0xFDE
  6368                           postdec2	equ	0xFDD
  6369                           plusw2	equ	0xFDB
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           
  6374 ;; *************** function _key_process_set *****************
  6375 ;; Defined at:
  6376 ;;		line 152 in file "src/api/key_menu.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;Total ram usage:        0 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    4
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_key_process
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text27
  6405  008078                     __ptext27:
  6406                           	opt stack 0
  6407  008078                     _key_process_set:
  6408                           	opt stack 24
  6409                           
  6410                           ;key_menu.c: 154: switch(menu){
  6411                           
  6412                           ;incstack = 0
  6413  008078  D009               	goto	l9241
  6414  00807A                     l9237:
  6415                           
  6416                           ;key_menu.c: 156: case 0x01:
  6417                           ;key_menu.c: 157: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
  6418  00807A  0E00               	movlw	0
  6419  00807C  6E3A               	movwf	_passWord+1,c	;volatile
  6420  00807E  0E00               	movlw	0
  6421  008080  6E39               	movwf	_passWord,c	;volatile
  6422  008082  0E00               	movlw	0
  6423  008084  6E3B               	movwf	_adjLocation,c	;volatile
  6424  008086  0E10               	movlw	16
  6425  008088  6E37               	movwf	_menu,c	;volatile
  6426                           
  6427                           ;key_menu.c: 159: }
  6428                           
  6429                           ;key_menu.c: 158: default:break;
  6430  00808A  0012               	return	
  6431  00808C                     l9241:
  6432  00808C  5037               	movf	_menu,w,c	;volatile
  6433                           
  6434                           ; Switch size 1, requested type "space"
  6435                           ; Number of cases is 3, Range of values is 0 to 2
  6436                           ; switch strategies available:
  6437                           ; Name         Instructions Cycles
  6438                           ; simple_byte           10     6 (average)
  6439                           ;	Chosen strategy is simple_byte
  6440  00808E  0A00               	xorlw	0	; case 0
  6441  008090  B4D8               	btfsc	status,2,c
  6442  008092  D7F3               	goto	l9237
  6443  008094  0A01               	xorlw	1	; case 1
  6444  008096  B4D8               	btfsc	status,2,c
  6445  008098  D7F0               	goto	l9237
  6446  00809A  0A03               	xorlw	3	; case 2
  6447  00809C  A4D8               	btfss	status,2,c
  6448  00809E  0012               	return	
  6449  0080A0  D7EC               	goto	l9237
  6450  0080A2                     __end_of_key_process_set:
  6451                           	opt stack 0
  6452                           tblptru	equ	0xFF8
  6453                           tblptrh	equ	0xFF7
  6454                           tblptrl	equ	0xFF6
  6455                           tablat	equ	0xFF5
  6456                           prodh	equ	0xFF4
  6457                           prodl	equ	0xFF3
  6458                           intcon	equ	0xFF2
  6459                           postinc0	equ	0xFEE
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           plusw1	equ	0xFE3
  6463                           fsr1h	equ	0xFE2
  6464                           fsr1l	equ	0xFE1
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           plusw2	equ	0xFDB
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _key_process_down *****************
  6474 ;; Defined at:
  6475 ;;		line 47 in file "src/api/key_menu.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;Total ram usage:        0 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    5
  6496 ;; This function calls:
  6497 ;;		_key_shift_loc_fixed_point
  6498 ;; This function is called by:
  6499 ;;		_key_process
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text28
  6504  007C30                     __ptext28:
  6505                           	opt stack 0
  6506  007C30                     _key_process_down:
  6507                           	opt stack 23
  6508                           
  6509                           ;key_menu.c: 49: switch(menu){
  6510                           
  6511                           ;incstack = 0
  6512  007C30  D00F               	goto	l13111
  6513  007C32                     l13107:
  6514  007C32  0E3B               	movlw	low _adjLocation
  6515  007C34  0100               	movlb	0	; () banked
  6516  007C36  6F60               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
  6517  007C38  0E00               	movlw	high _adjLocation
  6518  007C3A  0100               	movlb	0	; () banked
  6519  007C3C  6F61               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
  6520  007C3E  0E00               	movlw	0
  6521  007C40  0100               	movlb	0	; () banked
  6522  007C42  6F62               	movwf	key_shift_loc_fixed_point@min& (0+255),b
  6523  007C44  0E03               	movlw	3
  6524  007C46  0100               	movlb	0	; () banked
  6525  007C48  6F63               	movwf	key_shift_loc_fixed_point@max& (0+255),b
  6526  007C4A  EC63  F03F         	call	_key_shift_loc_fixed_point	;wreg free
  6527                           
  6528                           ;key_menu.c: 55: }
  6529                           
  6530                           ;key_menu.c: 54: default:break;
  6531  007C4E  0012               	return	
  6532  007C50                     l13111:
  6533  007C50  5037               	movf	_menu,w,c	;volatile
  6534                           
  6535                           ; Switch size 1, requested type "space"
  6536                           ; Number of cases is 4, Range of values is 0 to 16
  6537                           ; switch strategies available:
  6538                           ; Name         Instructions Cycles
  6539                           ; simple_byte           13     7 (average)
  6540                           ;	Chosen strategy is simple_byte
  6541  007C52  0A00               	xorlw	0	; case 0
  6542  007C54  B4D8               	btfsc	status,2,c
  6543  007C56  0012               	return	
  6544  007C58  0A01               	xorlw	1	; case 1
  6545  007C5A  B4D8               	btfsc	status,2,c
  6546  007C5C  0012               	return	
  6547  007C5E  0A03               	xorlw	3	; case 2
  6548  007C60  B4D8               	btfsc	status,2,c
  6549  007C62  0012               	return	
  6550  007C64  0A12               	xorlw	18	; case 16
  6551  007C66  A4D8               	btfss	status,2,c
  6552  007C68  0012               	return	
  6553  007C6A  D7E3               	goto	l13107
  6554  007C6C                     __end_of_key_process_down:
  6555                           	opt stack 0
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           prodh	equ	0xFF4
  6561                           prodl	equ	0xFF3
  6562                           intcon	equ	0xFF2
  6563                           postinc0	equ	0xFEE
  6564                           wreg	equ	0xFE8
  6565                           postdec1	equ	0xFE5
  6566                           plusw1	equ	0xFE3
  6567                           fsr1h	equ	0xFE2
  6568                           fsr1l	equ	0xFE1
  6569                           indf2	equ	0xFDF
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           plusw2	equ	0xFDB
  6573                           fsr2h	equ	0xFDA
  6574                           fsr2l	equ	0xFD9
  6575                           status	equ	0xFD8
  6576                           
  6577 ;; *************** function _key_shift_loc_fixed_point *****************
  6578 ;; Defined at:
  6579 ;;		line 39 in file "src/api/key_menu.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  loc             2    0[BANK0 ] PTR unsigned char 
  6582 ;;		 -> adjLocation(1), 
  6583 ;;  min             1    2[BANK0 ] unsigned char 
  6584 ;;  max             1    3[BANK0 ] unsigned char 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  t8              1   31[COMRAM] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;Total ram usage:        5 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    4
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_key_process_down
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text29
  6611  007EC6                     __ptext29:
  6612                           	opt stack 0
  6613  007EC6                     _key_shift_loc_fixed_point:
  6614                           	opt stack 23
  6615                           
  6616                           ;key_menu.c: 41: uint8_t t8=*loc;
  6617                           
  6618                           ;incstack = 0
  6619  007EC6  C060  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  6620  007ECA  C061  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  6621  007ECE  50DF               	movf	indf2,w,c
  6622  007ED0  6E20               	movwf	key_shift_loc_fixed_point@t8,c
  6623                           
  6624                           ;key_menu.c: 42: if(min<max)return;
  6625  007ED2  0100               	movlb	0	; () banked
  6626  007ED4  5163               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
  6627  007ED6  0100               	movlb	0	; () banked
  6628  007ED8  5D62               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
  6629  007EDA  A0D8               	btfss	status,0,c
  6630  007EDC  0012               	return	
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;key_menu.c: 43: t8++;
  6634                           
  6635                           ; BSR set to: 0
  6636                           
  6637                           ; BSR set to: 0
  6638  007EDE  2A20               	incf	key_shift_loc_fixed_point@t8,f,c
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;key_menu.c: 44: if(t8>max)t8=min;
  6642  007EE0  5020               	movf	key_shift_loc_fixed_point@t8,w,c
  6643  007EE2  0100               	movlb	0	; () banked
  6644  007EE4  5D63               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
  6645  007EE6  A0D8               	btfss	status,0,c
  6646                           
  6647                           ; BSR set to: 0
  6648  007EE8  C062  F020         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;key_menu.c: 45: *loc=t8;
  6652                           
  6653                           ; BSR set to: 0
  6654  007EEC  C060  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  6655  007EF0  C061  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  6656  007EF4  C020  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
  6657                           
  6658                           ; BSR set to: 0
  6659  007EF8  0012               	return		;funcret
  6660  007EFA                     __end_of_key_shift_loc_fixed_point:
  6661                           	opt stack 0
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           intcon	equ	0xFF2
  6669                           postinc0	equ	0xFEE
  6670                           wreg	equ	0xFE8
  6671                           postdec1	equ	0xFE5
  6672                           plusw1	equ	0xFE3
  6673                           fsr1h	equ	0xFE2
  6674                           fsr1l	equ	0xFE1
  6675                           indf2	equ	0xFDF
  6676                           postinc2	equ	0xFDE
  6677                           postdec2	equ	0xFDD
  6678                           plusw2	equ	0xFDB
  6679                           fsr2h	equ	0xFDA
  6680                           fsr2l	equ	0xFD9
  6681                           status	equ	0xFD8
  6682                           
  6683 ;; *************** function _event_process_time_out *****************
  6684 ;; Defined at:
  6685 ;;		line 61 in file "src/app/event.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      char 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   10
  6706 ;; This function calls:
  6707 ;;		_sample_diff_pr_chip_fast
  6708 ;; This function is called by:
  6709 ;;		_event_process
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text30
  6714  0081CC                     __ptext30:
  6715                           	opt stack 0
  6716  0081CC                     _event_process_time_out:
  6717                           	opt stack 19
  6718                           
  6719                           ;event.c: 63: if(dwm!=WORK_MODE){
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;incstack = 0
  6723  0081CC  0100               	movlb	0	; () banked
  6724  0081CE  05FF               	decf	_dwm& (0+255),w,b	;volatile
  6725  0081D0  B4D8               	btfsc	status,2,c
  6726  0081D2  0012               	return	
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;event.c: 64: sample_diff_pr_chip_fast();
  6730  0081D4  EC5D  F029         	call	_sample_diff_pr_chip_fast	;wreg free
  6731  0081D8  0012               	return	
  6732  0081DA                     __end_of_event_process_time_out:
  6733                           	opt stack 0
  6734                           tblptru	equ	0xFF8
  6735                           tblptrh	equ	0xFF7
  6736                           tblptrl	equ	0xFF6
  6737                           tablat	equ	0xFF5
  6738                           prodh	equ	0xFF4
  6739                           prodl	equ	0xFF3
  6740                           intcon	equ	0xFF2
  6741                           postinc0	equ	0xFEE
  6742                           wreg	equ	0xFE8
  6743                           postdec1	equ	0xFE5
  6744                           plusw1	equ	0xFE3
  6745                           fsr1h	equ	0xFE2
  6746                           fsr1l	equ	0xFE1
  6747                           indf2	equ	0xFDF
  6748                           postinc2	equ	0xFDE
  6749                           postdec2	equ	0xFDD
  6750                           plusw2	equ	0xFDB
  6751                           fsr2h	equ	0xFDA
  6752                           fsr2l	equ	0xFD9
  6753                           status	equ	0xFD8
  6754                           
  6755 ;; *************** function _event_process_ticker *****************
  6756 ;; Defined at:
  6757 ;;		line 53 in file "src/app/event.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      char 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;Total ram usage:        0 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:   10
  6778 ;; This function calls:
  6779 ;;		_sample_diff_pr_chip_fast
  6780 ;; This function is called by:
  6781 ;;		_event_process
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text31
  6786  0081DA                     __ptext31:
  6787                           	opt stack 0
  6788  0081DA                     _event_process_ticker:
  6789                           	opt stack 19
  6790                           
  6791                           ;event.c: 55: if(dwm!=WORK_MODE){
  6792                           
  6793                           ;incstack = 0
  6794  0081DA  0100               	movlb	0	; () banked
  6795  0081DC  05FF               	decf	_dwm& (0+255),w,b	;volatile
  6796  0081DE  B4D8               	btfsc	status,2,c
  6797  0081E0  0012               	return	
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;event.c: 56: sample_diff_pr_chip_fast();
  6801  0081E2  EC5D  F029         	call	_sample_diff_pr_chip_fast	;wreg free
  6802  0081E6  0012               	return	
  6803  0081E8                     __end_of_event_process_ticker:
  6804                           	opt stack 0
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           postinc0	equ	0xFEE
  6813                           wreg	equ	0xFE8
  6814                           postdec1	equ	0xFE5
  6815                           plusw1	equ	0xFE3
  6816                           fsr1h	equ	0xFE2
  6817                           fsr1l	equ	0xFE1
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           plusw2	equ	0xFDB
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _sample_diff_pr_chip_fast *****************
  6827 ;; Defined at:
  6828 ;;		line 82 in file "src/api/sample.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  t16             2   38[BANK0 ] int 
  6833 ;;  ret             1   37[BANK0 ] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  2  526[None  ] int 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:        3 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    9
  6850 ;; This function calls:
  6851 ;;		_ads1115_read_conversion
  6852 ;;		_ads1115_set_mux
  6853 ;;		_ads1115_start_conversion
  6854 ;;		_sample_diff_pr_fliter
  6855 ;; This function is called by:
  6856 ;;		_event_process_ticker
  6857 ;;		_event_process_time_out
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text32
  6862  0052BA                     __ptext32:
  6863                           	opt stack 0
  6864  0052BA                     _sample_diff_pr_chip_fast:
  6865                           	opt stack 19
  6866                           
  6867                           ;sample.c: 84: uint8_t ret=0;
  6868                           
  6869                           ;incstack = 0
  6870  0052BA  0E00               	movlw	0
  6871  0052BC  0100               	movlb	0	; () banked
  6872  0052BE  6F85               	movwf	sample_diff_pr_chip_fast@ret& (0+255),b
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;sample.c: 85: int16_t t16;
  6876                           ;sample.c: 86: fastSampTimer+=100;
  6877  0052C0  0E64               	movlw	100
  6878  0052C2  0101               	movlb	1	; () banked
  6879  0052C4  2766               	addwf	_fastSampTimer& (0+255),f,b	;volatile
  6880  0052C6  0E00               	movlw	0
  6881  0052C8  2367               	addwfc	(_fastSampTimer+1)& (0+255),f,b	;volatile
  6882                           
  6883                           ; BSR set to: 1
  6884                           ;sample.c: 87: if(fastSampTimer>(1000/20)){
  6885  0052CA  0101               	movlb	1	; () banked
  6886  0052CC  5167               	movf	(_fastSampTimer+1)& (0+255),w,b	;volatile
  6887  0052CE  E105               	bnz	u12090
  6888  0052D0  0E33               	movlw	51
  6889  0052D2  0101               	movlb	1	; () banked
  6890  0052D4  5D66               	subwf	_fastSampTimer& (0+255),w,b	;volatile
  6891  0052D6  A0D8               	btfss	status,0,c
  6892  0052D8  0012               	return	
  6893  0052DA                     u12090:
  6894                           
  6895                           ; BSR set to: 1
  6896                           ;sample.c: 88: fastSampTimer=0;
  6897  0052DA  0E00               	movlw	0
  6898  0052DC  0101               	movlb	1	; () banked
  6899  0052DE  6F67               	movwf	(_fastSampTimer+1)& (0+255),b	;volatile
  6900  0052E0  0E00               	movlw	0
  6901  0052E2  6F66               	movwf	_fastSampTimer& (0+255),b	;volatile
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;sample.c: 89: t16=ads1115_read_conversion(pAds1115DiffPrObj);
  6905  0052E4  C02B  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
  6906  0052E8  C02C  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
  6907  0052EC  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
  6908  0052F0  C06A  F086         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
  6909  0052F4  C06B  F087         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
  6910                           
  6911                           ;sample.c: 90: if(diffSampCh==0){
  6912  0052F8  5030               	movf	_diffSampCh,w,c
  6913  0052FA  A4D8               	btfss	status,2,c
  6914  0052FC  D01B               	goto	l13417
  6915                           
  6916                           ;sample.c: 91: if(diffSampCount_D01<20/3){
  6917  0052FE  0E06               	movlw	6
  6918  005300  6032               	cpfslt	_diffSampCount_D01,c
  6919  005302  D00D               	goto	l13413
  6920                           
  6921                           ;sample.c: 92: sampBufDiffPr_D01[diffSampCount_D01]=t16;
  6922  005304  5032               	movf	_diffSampCount_D01,w,c
  6923  005306  0D02               	mullw	2
  6924  005308  0EA0               	movlw	low _sampBufDiffPr_D01
  6925  00530A  24F3               	addwf	prodl,w,c
  6926  00530C  6ED9               	movwf	fsr2l,c
  6927  00530E  0E01               	movlw	high _sampBufDiffPr_D01
  6928  005310  20F4               	addwfc	prodh,w,c
  6929  005312  6EDA               	movwf	fsr2h,c
  6930  005314  C086  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  6931  005318  C087  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  6932                           
  6933                           ;sample.c: 93: diffSampCount_D01++;
  6934  00531C  2A32               	incf	_diffSampCount_D01,f,c
  6935  00531E                     l13413:
  6936                           
  6937                           ;sample.c: 94: }
  6938                           ;sample.c: 95: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
  6939  00531E  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  6940  005322  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  6941  005326  0E03               	movlw	3
  6942  005328  0100               	movlb	0	; () banked
  6943  00532A  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  6944  00532C  ECA0  F040         	call	_ads1115_set_mux	;wreg free
  6945                           
  6946                           ;sample.c: 96: diffSampCh=1;
  6947  005330  0E01               	movlw	1
  6948  005332  D030               	goto	L2
  6949  005334                     l13417:
  6950  005334  0430               	decf	_diffSampCh,w,c
  6951  005336  A4D8               	btfss	status,2,c
  6952  005338  D01B               	goto	l1812
  6953                           
  6954                           ;sample.c: 98: if(diffSampCount_D23<20/3){
  6955  00533A  0E06               	movlw	6
  6956  00533C  6031               	cpfslt	_diffSampCount_D23,c
  6957  00533E  D00D               	goto	l13425
  6958                           
  6959                           ;sample.c: 99: sampBufDiffPr_D23[diffSampCount_D23]=t16;
  6960  005340  5031               	movf	_diffSampCount_D23,w,c
  6961  005342  0D02               	mullw	2
  6962  005344  0E90               	movlw	low _sampBufDiffPr_D23
  6963  005346  24F3               	addwf	prodl,w,c
  6964  005348  6ED9               	movwf	fsr2l,c
  6965  00534A  0E01               	movlw	high _sampBufDiffPr_D23
  6966  00534C  20F4               	addwfc	prodh,w,c
  6967  00534E  6EDA               	movwf	fsr2h,c
  6968  005350  C086  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  6969  005354  C087  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  6970                           
  6971                           ;sample.c: 100: diffSampCount_D23++;
  6972  005358  2A31               	incf	_diffSampCount_D23,f,c
  6973  00535A                     l13425:
  6974                           
  6975                           ;sample.c: 101: }
  6976                           ;sample.c: 102: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
  6977  00535A  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  6978  00535E  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  6979  005362  0E05               	movlw	5
  6980  005364  0100               	movlb	0	; () banked
  6981  005366  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  6982  005368  ECA0  F040         	call	_ads1115_set_mux	;wreg free
  6983                           
  6984                           ;sample.c: 103: diffSampCh=2;
  6985  00536C  0E02               	movlw	2
  6986  00536E  D012               	goto	L2
  6987  005370                     l1812:
  6988                           
  6989                           ;sample.c: 105: sampBufDiffPr_S1=t16;
  6990  005370  C086  F170         	movff	sample_diff_pr_chip_fast@t16,_sampBufDiffPr_S1	;volatile
  6991  005374  C087  F171         	movff	sample_diff_pr_chip_fast@t16+1,_sampBufDiffPr_S1+1	;volatile
  6992                           
  6993                           ;sample.c: 106: adc_inPt100=t16;
  6994  005378  C086  F182         	movff	sample_diff_pr_chip_fast@t16,_adc_inPt100	;volatile
  6995  00537C  C087  F183         	movff	sample_diff_pr_chip_fast@t16+1,_adc_inPt100+1	;volatile
  6996                           
  6997                           ;sample.c: 107: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
  6998  005380  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  6999  005384  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  7000  005388  0E00               	movlw	0
  7001  00538A  0100               	movlb	0	; () banked
  7002  00538C  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  7003  00538E  ECA0  F040         	call	_ads1115_set_mux	;wreg free
  7004                           
  7005                           ;sample.c: 108: diffSampCh=0;
  7006  005392  0E00               	movlw	0
  7007  005394                     L2:
  7008  005394  6E30               	movwf	_diffSampCh,c
  7009                           
  7010                           ;sample.c: 109: }
  7011                           ;sample.c: 111: ads1115_start_conversion(pAds1115DiffPrObj);
  7012  005396  C02B  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
  7013  00539A  C02C  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
  7014  00539E  EC66  F040         	call	_ads1115_start_conversion	;wreg free
  7015                           
  7016                           ;sample.c: 113: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
  7017  0053A2  5031               	movf	_diffSampCount_D23,w,c
  7018  0053A4  5C32               	subwf	_diffSampCount_D01,w,c
  7019  0053A6  A0D8               	btfss	status,0,c
  7020  0053A8  0012               	return	
  7021  0053AA  0E05               	movlw	5
  7022  0053AC  6432               	cpfsgt	_diffSampCount_D01,c
  7023  0053AE  0012               	return	
  7024                           
  7025                           ;sample.c: 114: sample_diff_pr_fliter(&x_prDiffData);
  7026  0053B0  0EDE               	movlw	low _x_prDiffData
  7027  0053B2  0100               	movlb	0	; () banked
  7028  0053B4  6F83               	movwf	sample_diff_pr_fliter@xin& (0+255),b
  7029  0053B6  0E01               	movlw	high _x_prDiffData
  7030  0053B8  0100               	movlb	0	; () banked
  7031  0053BA  6F84               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
  7032  0053BC  ECF0  F036         	call	_sample_diff_pr_fliter	;wreg free
  7033                           
  7034                           ;sample.c: 115: diffSampCount_D01=diffSampCount_D23=0;
  7035  0053C0  0E00               	movlw	0
  7036  0053C2  6E31               	movwf	_diffSampCount_D23,c
  7037  0053C4  C031  F032         	movff	_diffSampCount_D23,_diffSampCount_D01
  7038                           
  7039                           ;sample.c: 116: diffPrSampleUpdate=1;
  7040  0053C8  0E01               	movlw	1
  7041  0053CA  0101               	movlb	1	; () banked
  7042  0053CC  6F8D               	movwf	_diffPrSampleUpdate& (0+255),b
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;sample.c: 118: in_pt100SampleUpdate=1;
  7046  0053CE  0E01               	movlw	1
  7047  0053D0  0101               	movlb	1	; () banked
  7048  0053D2  6F8C               	movwf	_in_pt100SampleUpdate& (0+255),b
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;sample.c: 120: }
  7052                           ;sample.c: 121: return 1;
  7053                           ;	Return value of _sample_diff_pr_chip_fast is never used
  7054                           
  7055                           ; BSR set to: 1
  7056  0053D4  0012               	return	
  7057  0053D6                     __end_of_sample_diff_pr_chip_fast:
  7058                           	opt stack 0
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           postinc0	equ	0xFEE
  7067                           wreg	equ	0xFE8
  7068                           postdec1	equ	0xFE5
  7069                           plusw1	equ	0xFE3
  7070                           fsr1h	equ	0xFE2
  7071                           fsr1l	equ	0xFE1
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           postdec2	equ	0xFDD
  7075                           plusw2	equ	0xFDB
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _event_process_rtc *****************
  7081 ;; Defined at:
  7082 ;;		line 6 in file "src/app/event.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  ret             1    0[BANK1 ] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      char 
  7089 ;; Registers used:
  7090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;Total ram usage:        1 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:   13
  7103 ;; This function calls:
  7104 ;;		_cal_additional_pressute
  7105 ;;		_cal_diff_press
  7106 ;;		_cal_press
  7107 ;;		_cal_pt100_temperature_ex
  7108 ;;		_cal_pt100_temperature_in
  7109 ;;		_sample_diff_pr_chip_slow
  7110 ;;		_sample_in_soc_adc_ch
  7111 ;;		_sample_pr_chip_comm
  7112 ;;		_ui_disp_menu
  7113 ;; This function is called by:
  7114 ;;		_event_process
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text33
  7119  006146                     __ptext33:
  7120                           	opt stack 0
  7121  006146                     _event_process_rtc:
  7122                           	opt stack 16
  7123                           
  7124                           ;event.c: 8: uint8_t ret=0;
  7125                           
  7126                           ;incstack = 0
  7127  006146  0E00               	movlw	0
  7128  006148  0101               	movlb	1	; () banked
  7129  00614A  6FF3               	movwf	event_process_rtc@ret& (0+255),b
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;event.c: 9: if(dwm==WORK_MODE){
  7133  00614C  0100               	movlb	0	; () banked
  7134  00614E  05FF               	decf	_dwm& (0+255),w,b	;volatile
  7135  006150  A4D8               	btfss	status,2,c
  7136  006152  D006               	goto	l13597
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;event.c: 10: ret=sample_diff_pr_chip_slow();
  7140  006154  EC14  F024         	call	_sample_diff_pr_chip_slow	;wreg free
  7141  006158  0100               	movlb	0	; () banked
  7142  00615A  5185               	movf	?_sample_diff_pr_chip_slow& (0+255),w,b
  7143  00615C  0101               	movlb	1	; () banked
  7144  00615E  6FF3               	movwf	event_process_rtc@ret& (0+255),b
  7145  006160                     l13597:
  7146                           
  7147                           ;event.c: 11: }
  7148                           ;event.c: 12: if(!ret){
  7149  006160  0101               	movlb	1	; () banked
  7150  006162  51F3               	movf	event_process_rtc@ret& (0+255),w,b
  7151  006164  0101               	movlb	1	; () banked
  7152  006166  A4D8               	btfss	status,2,c
  7153  006168  D006               	goto	l13601
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;event.c: 13: ret=sample_pr_chip_comm();
  7157  00616A  EC94  F021         	call	_sample_pr_chip_comm	;wreg free
  7158  00616E  0100               	movlb	0	; () banked
  7159  006170  517E               	movf	?_sample_pr_chip_comm& (0+255),w,b
  7160  006172  0101               	movlb	1	; () banked
  7161  006174  6FF3               	movwf	event_process_rtc@ret& (0+255),b
  7162  006176                     l13601:
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;event.c: 14: }
  7166                           ;event.c: 15: if(!ret){
  7167  006176  0101               	movlb	1	; () banked
  7168  006178  51F3               	movf	event_process_rtc@ret& (0+255),w,b
  7169  00617A  0101               	movlb	1	; () banked
  7170  00617C  B4D8               	btfsc	status,2,c
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;event.c: 16: sample_in_soc_adc_ch();
  7174  00617E  ECE7  F01A         	call	_sample_in_soc_adc_ch	;wreg free
  7175                           
  7176                           ;event.c: 17: }
  7177                           ;event.c: 19: if(glNoEventTimeOut){
  7178  006182  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  7179  006184  B4D8               	btfsc	status,2,c
  7180  006186  D004               	goto	l13613
  7181                           
  7182                           ;event.c: 20: glNoEventTimeOut--;
  7183  006188  063F               	decf	_glNoEventTimeOut,f,c	;volatile
  7184                           
  7185                           ;event.c: 21: if(!glNoEventTimeOut){
  7186  00618A  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  7187  00618C  B4D8               	btfsc	status,2,c
  7188                           
  7189                           ;event.c: 22: glbEvent |= (1<<2);
  7190  00618E  8435               	bsf	_glbEvent,2,c	;volatile
  7191  006190                     l13613:
  7192                           
  7193                           ;event.c: 23: }
  7194                           ;event.c: 24: }
  7195                           ;event.c: 25: if(diffPrSampleUpdate){
  7196  006190  0101               	movlb	1	; () banked
  7197  006192  518D               	movf	_diffPrSampleUpdate& (0+255),w,b
  7198  006194  B4D8               	btfsc	status,2,c
  7199  006196  D005               	goto	l13619
  7200                           
  7201                           ; BSR set to: 1
  7202                           ;event.c: 27: diffPrSampleUpdate=0;
  7203  006198  0E00               	movlw	0
  7204  00619A  0101               	movlb	1	; () banked
  7205  00619C  6F8D               	movwf	_diffPrSampleUpdate& (0+255),b
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;event.c: 28: cal_diff_press();
  7209  00619E  EC78  F02A         	call	_cal_diff_press	;wreg free
  7210  0061A2                     l13619:
  7211                           
  7212                           ;event.c: 29: }
  7213                           ;event.c: 30: if(in_pt100SampleUpdate){
  7214  0061A2  0101               	movlb	1	; () banked
  7215  0061A4  518C               	movf	_in_pt100SampleUpdate& (0+255),w,b
  7216  0061A6  B4D8               	btfsc	status,2,c
  7217  0061A8  D005               	goto	l13625
  7218                           
  7219                           ; BSR set to: 1
  7220                           ;event.c: 31: in_pt100SampleUpdate=0;
  7221  0061AA  0E00               	movlw	0
  7222  0061AC  0101               	movlb	1	; () banked
  7223  0061AE  6F8C               	movwf	_in_pt100SampleUpdate& (0+255),b
  7224                           
  7225                           ; BSR set to: 1
  7226                           ;event.c: 32: cal_pt100_temperature_in();
  7227  0061B0  EC6A  F018         	call	_cal_pt100_temperature_in	;wreg free
  7228  0061B4                     l13625:
  7229                           
  7230                           ;event.c: 33: }
  7231                           ;event.c: 34: if(prSampleUpdate){
  7232  0061B4  0101               	movlb	1	; () banked
  7233  0061B6  518B               	movf	_prSampleUpdate& (0+255),w,b
  7234  0061B8  B4D8               	btfsc	status,2,c
  7235  0061BA  D005               	goto	l13631
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;event.c: 35: prSampleUpdate=0;
  7239  0061BC  0E00               	movlw	0
  7240  0061BE  0101               	movlb	1	; () banked
  7241  0061C0  6F8B               	movwf	_prSampleUpdate& (0+255),b
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;event.c: 36: cal_press();
  7245  0061C2  EC6E  F037         	call	_cal_press	;wreg free
  7246  0061C6                     l13631:
  7247                           
  7248                           ;event.c: 37: }
  7249                           ;event.c: 38: if(ex_pt100SampleUpdate){
  7250  0061C6  0101               	movlb	1	; () banked
  7251  0061C8  518A               	movf	_ex_pt100SampleUpdate& (0+255),w,b
  7252  0061CA  B4D8               	btfsc	status,2,c
  7253  0061CC  D005               	goto	l13637
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;event.c: 39: ex_pt100SampleUpdate=0;
  7257  0061CE  0E00               	movlw	0
  7258  0061D0  0101               	movlb	1	; () banked
  7259  0061D2  6F8A               	movwf	_ex_pt100SampleUpdate& (0+255),b
  7260                           
  7261                           ; BSR set to: 1
  7262                           ;event.c: 40: cal_pt100_temperature_ex();
  7263  0061D4  ECAB  F015         	call	_cal_pt100_temperature_ex	;wreg free
  7264  0061D8                     l13637:
  7265                           
  7266                           ;event.c: 41: }
  7267                           ;event.c: 42: if(inSocAdcSampleUpdate){
  7268  0061D8  0101               	movlb	1	; () banked
  7269  0061DA  5189               	movf	_inSocAdcSampleUpdate& (0+255),w,b
  7270  0061DC  B4D8               	btfsc	status,2,c
  7271  0061DE  D009               	goto	l13645
  7272                           
  7273                           ; BSR set to: 1
  7274                           ;event.c: 43: inSocAdcSampleUpdate=0;
  7275  0061E0  0E00               	movlw	0
  7276  0061E2  0101               	movlb	1	; () banked
  7277  0061E4  6F89               	movwf	_inSocAdcSampleUpdate& (0+255),b
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;event.c: 44: cal_additional_pressute(0);
  7281  0061E6  0E00               	movlw	0
  7282  0061E8  ECFA  F01C         	call	_cal_additional_pressute
  7283                           
  7284                           ;event.c: 45: cal_additional_pressute(1);
  7285  0061EC  0E01               	movlw	1
  7286  0061EE  ECFA  F01C         	call	_cal_additional_pressute
  7287  0061F2                     l13645:
  7288                           
  7289                           ;event.c: 46: }
  7290                           ;event.c: 49: ui_disp_menu();
  7291  0061F2  ECDE  F03E         	call	_ui_disp_menu	;wreg free
  7292  0061F6  0012               	return	
  7293  0061F8                     __end_of_event_process_rtc:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           postdec1	equ	0xFE5
  7305                           plusw1	equ	0xFE3
  7306                           fsr1h	equ	0xFE2
  7307                           fsr1l	equ	0xFE1
  7308                           indf2	equ	0xFDF
  7309                           postinc2	equ	0xFDE
  7310                           postdec2	equ	0xFDD
  7311                           plusw2	equ	0xFDB
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function _ui_disp_menu *****************
  7317 ;; Defined at:
  7318 ;;		line 297 in file "src/api/ui.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:   12
  7339 ;; This function calls:
  7340 ;;		_ui_disp_menu_home_00
  7341 ;;		_ui_disp_menu_home_01
  7342 ;;		_ui_disp_menu_home_02
  7343 ;;		_ui_disp_menu_psw_adj
  7344 ;; This function is called by:
  7345 ;;		_key_process
  7346 ;;		_event_process_rtc
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text34
  7351  007DBC                     __ptext34:
  7352                           	opt stack 0
  7353  007DBC                     _ui_disp_menu:
  7354                           	opt stack 16
  7355                           
  7356                           ;ui.c: 299: switch(menu){
  7357                           
  7358                           ;incstack = 0
  7359  007DBC  D00C               	goto	l13175
  7360  007DBE                     l13165:
  7361  007DBE  EC85  F033         	call	_ui_disp_menu_home_00	;wreg free
  7362  007DC2  0012               	return	
  7363  007DC4                     l13167:
  7364  007DC4  EC38  F033         	call	_ui_disp_menu_home_01	;wreg free
  7365  007DC8  0012               	return	
  7366  007DCA                     l13169:
  7367  007DCA  ECEB  F032         	call	_ui_disp_menu_home_02	;wreg free
  7368  007DCE  0012               	return	
  7369  007DD0                     l13171:
  7370  007DD0  EC51  F040         	call	_ui_disp_menu_psw_adj	;wreg free
  7371                           
  7372                           ;ui.c: 307: }
  7373                           
  7374                           ;ui.c: 305: default:break;
  7375  007DD4  0012               	return	
  7376  007DD6                     l13175:
  7377  007DD6  5037               	movf	_menu,w,c	;volatile
  7378                           
  7379                           ; Switch size 1, requested type "space"
  7380                           ; Number of cases is 4, Range of values is 0 to 16
  7381                           ; switch strategies available:
  7382                           ; Name         Instructions Cycles
  7383                           ; simple_byte           13     7 (average)
  7384                           ;	Chosen strategy is simple_byte
  7385  007DD8  0A00               	xorlw	0	; case 0
  7386  007DDA  B4D8               	btfsc	status,2,c
  7387  007DDC  D7F0               	goto	l13165
  7388  007DDE  0A01               	xorlw	1	; case 1
  7389  007DE0  B4D8               	btfsc	status,2,c
  7390  007DE2  D7F0               	goto	l13167
  7391  007DE4  0A03               	xorlw	3	; case 2
  7392  007DE6  B4D8               	btfsc	status,2,c
  7393  007DE8  D7F0               	goto	l13169
  7394  007DEA  0A12               	xorlw	18	; case 16
  7395  007DEC  A4D8               	btfss	status,2,c
  7396  007DEE  0012               	return	
  7397  007DF0  D7EF               	goto	l13171
  7398  007DF2                     __end_of_ui_disp_menu:
  7399                           	opt stack 0
  7400                           tblptru	equ	0xFF8
  7401                           tblptrh	equ	0xFF7
  7402                           tblptrl	equ	0xFF6
  7403                           tablat	equ	0xFF5
  7404                           prodh	equ	0xFF4
  7405                           prodl	equ	0xFF3
  7406                           intcon	equ	0xFF2
  7407                           postinc0	equ	0xFEE
  7408                           wreg	equ	0xFE8
  7409                           postdec1	equ	0xFE5
  7410                           plusw1	equ	0xFE3
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           plusw2	equ	0xFDB
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           
  7421 ;; *************** function _ui_disp_menu_psw_adj *****************
  7422 ;; Defined at:
  7423 ;;		line 229 in file "src/api/ui.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;Total ram usage:        0 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:   11
  7444 ;; This function calls:
  7445 ;;		_lcd_disp_all
  7446 ;;		_lcd_disp_logo
  7447 ;;		_ui_disp_adj_xfixed_pt
  7448 ;; This function is called by:
  7449 ;;		_ui_disp_menu
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text35
  7454  0080A2                     __ptext35:
  7455                           	opt stack 0
  7456  0080A2                     _ui_disp_menu_psw_adj:
  7457                           	opt stack 16
  7458                           
  7459                           ;ui.c: 231: lcd_disp_all(0x00);;
  7460                           
  7461                           ;incstack = 0
  7462  0080A2  0E00               	movlw	0
  7463  0080A4  ECC5  F03F         	call	_lcd_disp_all
  7464                           
  7465                           ;ui.c: 232: lcd_disp_logo(1);
  7466  0080A8  0E01               	movlw	1
  7467  0080AA  ECAD  F03F         	call	_lcd_disp_logo
  7468                           
  7469                           ;ui.c: 233: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  7470  0080AE  0EFA               	movlw	low STR_3
  7471  0080B0  0100               	movlb	0	; () banked
  7472  0080B2  6F76               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  7473  0080B4  0EF3               	movlw	high STR_3
  7474  0080B6  0100               	movlb	0	; () banked
  7475  0080B8  6F77               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  7476  0080BA  C039  F078         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  7477  0080BE  C03A  F079         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  7478  0080C2  C03B  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  7479  0080C6  ECCA  F02E         	call	_ui_disp_adj_xfixed_pt	;wreg free
  7480  0080CA  0012               	return		;funcret
  7481  0080CC                     __end_of_ui_disp_menu_psw_adj:
  7482                           	opt stack 0
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           intcon	equ	0xFF2
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           postdec1	equ	0xFE5
  7493                           plusw1	equ	0xFE3
  7494                           fsr1h	equ	0xFE2
  7495                           fsr1l	equ	0xFE1
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           plusw2	equ	0xFDB
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  7505 ;; Defined at:
  7506 ;;		line 192 in file "src/api/ui.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  str             2   22[BANK0 ] PTR unsigned char 
  7509 ;;		 -> STR_3(5), 
  7510 ;;  x               2   24[BANK0 ] unsigned int 
  7511 ;;  loc             1   26[BANK0 ] unsigned char 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  buf            10   29[BANK0 ] unsigned char [10]
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7523 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;Total ram usage:       17 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:   10
  7530 ;; This function calls:
  7531 ;;		___x_arrange_str
  7532 ;;		_lcd_disp_refresh
  7533 ;;		_lcd_show_string
  7534 ;;		_m_int16_2_str_4
  7535 ;;		_m_mem_cpy
  7536 ;;		_ui_disp_clear_num_dp
  7537 ;; This function is called by:
  7538 ;;		_ui_disp_menu_psw_adj
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text36
  7543  005D94                     __ptext36:
  7544                           	opt stack 0
  7545  005D94                     _ui_disp_adj_xfixed_pt:
  7546                           	opt stack 16
  7547                           
  7548                           ;ui.c: 194: uint8_t buf[10];
  7549                           ;ui.c: 195: ui_disp_clear_num_dp();
  7550                           
  7551                           ;incstack = 0
  7552  005D94  ECB5  F03B         	call	_ui_disp_clear_num_dp	;wreg free
  7553                           
  7554                           ;ui.c: 196: if(x>9999)x=9999;
  7555  005D98  0E10               	movlw	16
  7556  005D9A  0100               	movlb	0	; () banked
  7557  005D9C  5D78               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  7558  005D9E  0E27               	movlw	39
  7559  005DA0  0100               	movlb	0	; () banked
  7560  005DA2  5979               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  7561  005DA4  A0D8               	btfss	status,0,c
  7562  005DA6  D005               	goto	l12139
  7563                           
  7564                           ; BSR set to: 0
  7565  005DA8  0E27               	movlw	39
  7566  005DAA  0100               	movlb	0	; () banked
  7567  005DAC  6F79               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  7568  005DAE  0E0F               	movlw	15
  7569  005DB0  6F78               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  7570  005DB2                     l12139:
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;ui.c: 197: m_mem_cpy(buf,str);
  7574  005DB2  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  7575  005DB4  0100               	movlb	0	; () banked
  7576  005DB6  6F60               	movwf	m_mem_cpy@d& (0+255),b
  7577  005DB8  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  7578  005DBA  0100               	movlb	0	; () banked
  7579  005DBC  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
  7580  005DBE  C076  F062         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  7581  005DC2  C077  F063         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  7582  005DC6  EC76  F03D         	call	_m_mem_cpy	;wreg free
  7583                           
  7584                           ;ui.c: 198: m_int16_2_str_4(buf+4,x);
  7585  005DCA  0E81               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  7586  005DCC  0100               	movlb	0	; () banked
  7587  005DCE  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
  7588  005DD0  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  7589  005DD2  0100               	movlb	0	; () banked
  7590  005DD4  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  7591  005DD6  C078  F06A         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  7592  005DDA  C079  F06B         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  7593  005DDE  ECE5  F026         	call	_m_int16_2_str_4	;wreg free
  7594                           
  7595                           ;ui.c: 199: __x_arrange_str(buf,8);
  7596  005DE2  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  7597  005DE4  0100               	movlb	0	; () banked
  7598  005DE6  6F60               	movwf	___x_arrange_str@str& (0+255),b
  7599  005DE8  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  7600  005DEA  0100               	movlb	0	; () banked
  7601  005DEC  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
  7602  005DEE  0E08               	movlw	8
  7603  005DF0  0100               	movlb	0	; () banked
  7604  005DF2  6F62               	movwf	___x_arrange_str@len& (0+255),b
  7605  005DF4  EC9F  F03A         	call	___x_arrange_str	;wreg free
  7606                           
  7607                           ;ui.c: 200: if(loc>3)loc=3;
  7608  005DF8  0E03               	movlw	3
  7609  005DFA  0100               	movlb	0	; () banked
  7610  005DFC  657A               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  7611  005DFE  D003               	goto	l12149
  7612                           
  7613                           ; BSR set to: 0
  7614  005E00  0E03               	movlw	3
  7615  005E02  0100               	movlb	0	; () banked
  7616  005E04  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  7617  005E06                     l12149:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;ui.c: 201: loc=3-loc;
  7621  005E06  0100               	movlb	0	; () banked
  7622  005E08  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  7623  005E0A  0800               	sublw	0
  7624  005E0C  0F03               	addlw	3
  7625  005E0E  0100               	movlb	0	; () banked
  7626  005E10  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;ui.c: 203: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  7630  005E12  010F               	movlb	15	; () banked
  7631  005E14  B75F               	btfsc	95,3,b	;volatile
  7632  005E16  D014               	goto	l12155
  7633                           
  7634                           ; BSR set to: 15
  7635  005E18  0100               	movlb	0	; () banked
  7636  005E1A  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  7637  005E1C  0100               	movlb	0	; () banked
  7638  005E1E  6F7B               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  7639  005E20  6B7C               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  7640  005E22  0E04               	movlw	4
  7641  005E24  0100               	movlb	0	; () banked
  7642  005E26  277B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  7643  005E28  0E00               	movlw	0
  7644  005E2A  237C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  7645  005E2C  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  7646  005E2E  0100               	movlb	0	; () banked
  7647  005E30  257B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  7648  005E32  6ED9               	movwf	fsr2l,c
  7649  005E34  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  7650  005E36  0100               	movlb	0	; () banked
  7651  005E38  217C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  7652  005E3A  6EDA               	movwf	fsr2h,c
  7653  005E3C  0E20               	movlw	32
  7654  005E3E  6EDF               	movwf	indf2,c
  7655  005E40                     l12155:
  7656                           
  7657                           ;ui.c: 205: lcd_show_string(buf);
  7658  005E40  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  7659  005E42  0100               	movlb	0	; () banked
  7660  005E44  6F73               	movwf	lcd_show_string@str& (0+255),b
  7661  005E46  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  7662  005E48  0100               	movlb	0	; () banked
  7663  005E4A  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
  7664  005E4C  EC98  F038         	call	_lcd_show_string	;wreg free
  7665                           
  7666                           ;ui.c: 206: lcd_disp_refresh();
  7667  005E50  EC6E  F03A         	call	_lcd_disp_refresh	;wreg free
  7668  005E54  0012               	return		;funcret
  7669  005E56                     __end_of_ui_disp_adj_xfixed_pt:
  7670                           	opt stack 0
  7671                           tblptru	equ	0xFF8
  7672                           tblptrh	equ	0xFF7
  7673                           tblptrl	equ	0xFF6
  7674                           tablat	equ	0xFF5
  7675                           prodh	equ	0xFF4
  7676                           prodl	equ	0xFF3
  7677                           intcon	equ	0xFF2
  7678                           postinc0	equ	0xFEE
  7679                           wreg	equ	0xFE8
  7680                           postdec1	equ	0xFE5
  7681                           plusw1	equ	0xFE3
  7682                           fsr1h	equ	0xFE2
  7683                           fsr1l	equ	0xFE1
  7684                           indf2	equ	0xFDF
  7685                           postinc2	equ	0xFDE
  7686                           postdec2	equ	0xFDD
  7687                           plusw2	equ	0xFDB
  7688                           fsr2h	equ	0xFDA
  7689                           fsr2l	equ	0xFD9
  7690                           status	equ	0xFD8
  7691                           
  7692 ;; *************** function _m_mem_cpy *****************
  7693 ;; Defined at:
  7694 ;;		line 51 in file "src/depend/m_string.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  d               2    0[BANK0 ] PTR unsigned char 
  7697 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7698 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7699 ;;		 -> STR_3(5), 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;Total ram usage:        4 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    4
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_ui_disp_adj_xfixed_pt
  7722 ;;		_ui_disp_adj_xfloat_pt
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text37
  7727  007AEC                     __ptext37:
  7728                           	opt stack 0
  7729  007AEC                     _m_mem_cpy:
  7730                           	opt stack 21
  7731                           
  7732                           ;m_string.c: 53: while(*s!='\0')
  7733                           
  7734                           ;incstack = 0
  7735  007AEC  D011               	goto	l11065
  7736  007AEE                     l11059:
  7737                           
  7738                           ;m_string.c: 54: {
  7739                           ;m_string.c: 55: *d++=*s++;
  7740  007AEE  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
  7741  007AF2  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7742  007AF6                     	if	0	;tblptru may be non-zero
  7743  007AF6                     	endif
  7744  007AF6                     	if	0	;tblptru may be non-zero
  7745  007AF6                     	endif
  7746  007AF6  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
  7747  007AFA  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7748  007AFE  0008               	tblrd		*
  7749  007B00  CFF5 FFDF          	movff	tablat,indf2
  7750  007B04  0100               	movlb	0	; () banked
  7751  007B06  4B62               	infsnz	m_mem_cpy@s& (0+255),f,b
  7752  007B08  2B63               	incf	(m_mem_cpy@s+1)& (0+255),f,b
  7753                           
  7754                           ; BSR set to: 0
  7755  007B0A  0100               	movlb	0	; () banked
  7756  007B0C  4B60               	infsnz	m_mem_cpy@d& (0+255),f,b
  7757  007B0E  2B61               	incf	(m_mem_cpy@d+1)& (0+255),f,b
  7758  007B10                     l11065:
  7759  007B10  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
  7760  007B14  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7761  007B18                     	if	0	;tblptru may be non-zero
  7762  007B18                     	endif
  7763  007B18                     	if	0	;tblptru may be non-zero
  7764  007B18                     	endif
  7765  007B18  0008               	tblrd		*
  7766  007B1A  50F5               	movf	tablat,w,c
  7767  007B1C  0900               	iorlw	0
  7768  007B1E  A4D8               	btfss	status,2,c
  7769  007B20  D7E6               	goto	l11059
  7770                           
  7771                           ;m_string.c: 56: }
  7772                           ;m_string.c: 57: *d='\0';
  7773  007B22  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
  7774  007B26  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7775  007B2A  0E00               	movlw	0
  7776  007B2C  6EDF               	movwf	indf2,c
  7777  007B2E  0012               	return		;funcret
  7778  007B30                     __end_of_m_mem_cpy:
  7779                           	opt stack 0
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodh	equ	0xFF4
  7785                           prodl	equ	0xFF3
  7786                           intcon	equ	0xFF2
  7787                           postinc0	equ	0xFEE
  7788                           wreg	equ	0xFE8
  7789                           postdec1	equ	0xFE5
  7790                           plusw1	equ	0xFE3
  7791                           fsr1h	equ	0xFE2
  7792                           fsr1l	equ	0xFE1
  7793                           indf2	equ	0xFDF
  7794                           postinc2	equ	0xFDE
  7795                           postdec2	equ	0xFDD
  7796                           plusw2	equ	0xFDB
  7797                           fsr2h	equ	0xFDA
  7798                           fsr2l	equ	0xFD9
  7799                           status	equ	0xFD8
  7800                           
  7801 ;; *************** function ___x_arrange_str *****************
  7802 ;; Defined at:
  7803 ;;		line 11 in file "src/api/ui.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  str             2    0[BANK0 ] PTR unsigned char 
  7806 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7807 ;;  len             1    2[BANK0 ] unsigned char 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  i               1   31[COMRAM] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      void 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7819 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;Total ram usage:        4 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    4
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_ui_disp_adj_xfixed_pt
  7830 ;;		_ui_disp_adj_xfloat_pt
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text38
  7835  00753E                     __ptext38:
  7836                           	opt stack 0
  7837  00753E                     ___x_arrange_str:
  7838                           	opt stack 21
  7839                           
  7840                           ;ui.c: 13: uint8_t i;
  7841                           ;ui.c: 14: for(i=0;i<len;i++){
  7842                           
  7843                           ;incstack = 0
  7844  00753E  0E00               	movlw	0
  7845  007540  6E20               	movwf	___x_arrange_str@i,c
  7846  007542  D01A               	goto	l11013
  7847  007544                     l11007:
  7848                           
  7849                           ;ui.c: 15: if(str[i]=='\0')str[i]=' ';
  7850  007544  5020               	movf	___x_arrange_str@i,w,c
  7851  007546  0D01               	mullw	1
  7852  007548  50F3               	movf	prodl,w,c
  7853  00754A  0100               	movlb	0	; () banked
  7854  00754C  2560               	addwf	___x_arrange_str@str& (0+255),w,b
  7855  00754E  6ED9               	movwf	fsr2l,c
  7856  007550  50F4               	movf	prodh,w,c
  7857  007552  0100               	movlb	0	; () banked
  7858  007554  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  7859  007556  6EDA               	movwf	fsr2h,c
  7860  007558  50DF               	movf	indf2,w,c
  7861  00755A  A4D8               	btfss	status,2,c
  7862  00755C  D00C               	goto	l11011
  7863                           
  7864                           ; BSR set to: 0
  7865  00755E  5020               	movf	___x_arrange_str@i,w,c
  7866  007560  0D01               	mullw	1
  7867  007562  50F3               	movf	prodl,w,c
  7868  007564  0100               	movlb	0	; () banked
  7869  007566  2560               	addwf	___x_arrange_str@str& (0+255),w,b
  7870  007568  6ED9               	movwf	fsr2l,c
  7871  00756A  50F4               	movf	prodh,w,c
  7872  00756C  0100               	movlb	0	; () banked
  7873  00756E  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  7874  007570  6EDA               	movwf	fsr2h,c
  7875  007572  0E20               	movlw	32
  7876  007574  6EDF               	movwf	indf2,c
  7877  007576                     l11011:
  7878                           
  7879                           ; BSR set to: 0
  7880  007576  2A20               	incf	___x_arrange_str@i,f,c
  7881  007578                     l11013:
  7882  007578  0100               	movlb	0	; () banked
  7883  00757A  5162               	movf	___x_arrange_str@len& (0+255),w,b
  7884  00757C  5C20               	subwf	___x_arrange_str@i,w,c
  7885  00757E  A0D8               	btfss	status,0,c
  7886  007580  D7E1               	goto	l11007
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;ui.c: 16: }
  7890                           ;ui.c: 17: str[i]='\0';
  7891                           
  7892                           ; BSR set to: 0
  7893  007582  5020               	movf	___x_arrange_str@i,w,c
  7894  007584  0D01               	mullw	1
  7895  007586  50F3               	movf	prodl,w,c
  7896  007588  0100               	movlb	0	; () banked
  7897  00758A  2560               	addwf	___x_arrange_str@str& (0+255),w,b
  7898  00758C  6ED9               	movwf	fsr2l,c
  7899  00758E  50F4               	movf	prodh,w,c
  7900  007590  0100               	movlb	0	; () banked
  7901  007592  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  7902  007594  6EDA               	movwf	fsr2h,c
  7903  007596  0E00               	movlw	0
  7904  007598  6EDF               	movwf	indf2,c
  7905                           
  7906                           ; BSR set to: 0
  7907  00759A  0012               	return		;funcret
  7908  00759C                     __end_of___x_arrange_str:
  7909                           	opt stack 0
  7910                           tblptru	equ	0xFF8
  7911                           tblptrh	equ	0xFF7
  7912                           tblptrl	equ	0xFF6
  7913                           tablat	equ	0xFF5
  7914                           prodh	equ	0xFF4
  7915                           prodl	equ	0xFF3
  7916                           intcon	equ	0xFF2
  7917                           postinc0	equ	0xFEE
  7918                           wreg	equ	0xFE8
  7919                           postdec1	equ	0xFE5
  7920                           plusw1	equ	0xFE3
  7921                           fsr1h	equ	0xFE2
  7922                           fsr1l	equ	0xFE1
  7923                           indf2	equ	0xFDF
  7924                           postinc2	equ	0xFDE
  7925                           postdec2	equ	0xFDD
  7926                           plusw2	equ	0xFDB
  7927                           fsr2h	equ	0xFDA
  7928                           fsr2l	equ	0xFD9
  7929                           status	equ	0xFD8
  7930                           
  7931 ;; *************** function _lcd_disp_logo *****************
  7932 ;; Defined at:
  7933 ;;		line 378 in file "src/driver/lcd.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  show            1    wreg     unsigned char 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  show            1   31[COMRAM] unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;Total ram usage:        1 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    6
  7954 ;; This function calls:
  7955 ;;		_lcd_set_com_seg
  7956 ;; This function is called by:
  7957 ;;		_ui_disp_start_cs600
  7958 ;;		_ui_disp_menu_psw_adj
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text39
  7963  007F5A                     __ptext39:
  7964                           	opt stack 0
  7965  007F5A                     _lcd_disp_logo:
  7966                           	opt stack 23
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;incstack = 0
  7970                           ;lcd_disp_logo@show stored from wreg
  7971  007F5A  6E20               	movwf	lcd_disp_logo@show,c
  7972                           
  7973                           ;lcd.c: 380: if(show)
  7974  007F5C  5020               	movf	lcd_disp_logo@show,w,c
  7975  007F5E  B4D8               	btfsc	status,2,c
  7976  007F60  D00A               	goto	l12107
  7977                           
  7978                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  7979  007F62  0E0D               	movlw	13
  7980  007F64  0100               	movlb	0	; () banked
  7981  007F66  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  7982  007F68  0E01               	movlw	1
  7983  007F6A  0100               	movlb	0	; () banked
  7984  007F6C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  7985  007F6E  0E02               	movlw	2
  7986  007F70  EC02  F02E         	call	_lcd_set_com_seg
  7987  007F74  0012               	return	
  7988  007F76                     l12107:
  7989                           
  7990                           ;lcd.c: 382: else
  7991                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  7992  007F76  0E0D               	movlw	13
  7993  007F78  0100               	movlb	0	; () banked
  7994  007F7A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  7995  007F7C  0E00               	movlw	0
  7996  007F7E  0100               	movlb	0	; () banked
  7997  007F80  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  7998  007F82  0E02               	movlw	2
  7999  007F84  EC02  F02E         	call	_lcd_set_com_seg
  8000  007F88  0012               	return	
  8001  007F8A                     __end_of_lcd_disp_logo:
  8002                           	opt stack 0
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           intcon	equ	0xFF2
  8010                           postinc0	equ	0xFEE
  8011                           wreg	equ	0xFE8
  8012                           postdec1	equ	0xFE5
  8013                           plusw1	equ	0xFE3
  8014                           fsr1h	equ	0xFE2
  8015                           fsr1l	equ	0xFE1
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           plusw2	equ	0xFDB
  8020                           fsr2h	equ	0xFDA
  8021                           fsr2l	equ	0xFD9
  8022                           status	equ	0xFD8
  8023                           
  8024 ;; *************** function _lcd_disp_all *****************
  8025 ;; Defined at:
  8026 ;;		line 599 in file "src/driver/lcd.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  x               1    wreg     unsigned char 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  x               1    0[BANK0 ] unsigned char 
  8031 ;;  i               1    1[BANK0 ] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;Total ram usage:        2 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    4
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_ui_disp_start_cs600
  8052 ;;		_ui_disp_menu_psw_adj
  8053 ;;		_lcd_config
  8054 ;;		_ui_disp_all_on
  8055 ;;		_ui_disp_all_off
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text40
  8060  007F8A                     __ptext40:
  8061                           	opt stack 0
  8062  007F8A                     _lcd_disp_all:
  8063                           	opt stack 25
  8064                           
  8065                           ;incstack = 0
  8066                           ;lcd_disp_all@x stored from wreg
  8067  007F8A  0100               	movlb	0	; () banked
  8068  007F8C  6F60               	movwf	lcd_disp_all@x& (0+255),b
  8069                           
  8070                           ;lcd.c: 601: uint8_t i;
  8071                           ;lcd.c: 602: for(i=0;i<24;i++)
  8072  007F8E  0E00               	movlw	0
  8073  007F90  0100               	movlb	0	; () banked
  8074  007F92  6F61               	movwf	lcd_disp_all@i& (0+255),b
  8075  007F94                     l12093:
  8076                           
  8077                           ; BSR set to: 0
  8078  007F94  0E17               	movlw	23
  8079  007F96  0100               	movlb	0	; () banked
  8080  007F98  6561               	cpfsgt	lcd_disp_all@i& (0+255),b
  8081  007F9A  D001               	goto	l12097
  8082  007F9C  0012               	return	
  8083  007F9E                     l12097:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;lcd.c: 603: {
  8087                           ;lcd.c: 604: pLCD[i]=x;
  8088  007F9E  0100               	movlb	0	; () banked
  8089  007FA0  5161               	movf	lcd_disp_all@i& (0+255),w,b
  8090  007FA2  0D01               	mullw	1
  8091  007FA4  0E00               	movlw	low _pLCD
  8092  007FA6  24F3               	addwf	prodl,w,c
  8093  007FA8  6ED9               	movwf	fsr2l,c
  8094  007FAA  0E01               	movlw	high _pLCD
  8095  007FAC  20F4               	addwfc	prodh,w,c
  8096  007FAE  6EDA               	movwf	fsr2h,c
  8097  007FB0  C060  FFDF         	movff	lcd_disp_all@x,indf2
  8098                           
  8099                           ; BSR set to: 0
  8100  007FB4  0100               	movlb	0	; () banked
  8101  007FB6  2B61               	incf	lcd_disp_all@i& (0+255),f,b
  8102  007FB8  D7ED               	goto	l12093
  8103  007FBA                     __end_of_lcd_disp_all:
  8104                           	opt stack 0
  8105                           tblptru	equ	0xFF8
  8106                           tblptrh	equ	0xFF7
  8107                           tblptrl	equ	0xFF6
  8108                           tablat	equ	0xFF5
  8109                           prodh	equ	0xFF4
  8110                           prodl	equ	0xFF3
  8111                           intcon	equ	0xFF2
  8112                           postinc0	equ	0xFEE
  8113                           wreg	equ	0xFE8
  8114                           postdec1	equ	0xFE5
  8115                           plusw1	equ	0xFE3
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           indf2	equ	0xFDF
  8119                           postinc2	equ	0xFDE
  8120                           postdec2	equ	0xFDD
  8121                           plusw2	equ	0xFDB
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function _ui_disp_menu_home_02 *****************
  8127 ;; Defined at:
  8128 ;;		line 277 in file "src/api/ui.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;  mf              4  117[BANK0 ] struct .
  8133 ;;  t8              1  116[BANK0 ] unsigned char 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;Total ram usage:        5 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:   10
  8150 ;; This function calls:
  8151 ;;		___int32_2_mflot32
  8152 ;;		_cal_diff_hight_level
  8153 ;;		_lcd_disp_level
  8154 ;;		_lcd_disp_refresh
  8155 ;;		_lcd_disp_unit_mpa
  8156 ;;		_lcd_disp_unit_t
  8157 ;;		_ui_disp_clear_num_dp
  8158 ;;		_ui_disp_xfloat_pt
  8159 ;; This function is called by:
  8160 ;;		_ui_disp_menu
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text41
  8165  0065D6                     __ptext41:
  8166                           	opt stack 0
  8167  0065D6                     _ui_disp_menu_home_02:
  8168                           	opt stack 17
  8169                           
  8170                           ;ui.c: 280: uint8_t t8;
  8171                           ;ui.c: 281: st_float32 mf;
  8172                           ;ui.c: 282: ui_disp_clear_num_dp();
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;incstack = 0
  8176  0065D6  ECB5  F03B         	call	_ui_disp_clear_num_dp	;wreg free
  8177                           
  8178                           ;ui.c: 283: mf.t32=__int32_2_mflot32(rtWeight);
  8179  0065DA  C15E  F06D         	movff	_rtWeight,___int32_2_mflot32@x	;volatile
  8180  0065DE  C15F  F06E         	movff	_rtWeight+1,___int32_2_mflot32@x+1	;volatile
  8181  0065E2  C160  F06F         	movff	_rtWeight+2,___int32_2_mflot32@x+2	;volatile
  8182  0065E6  C161  F070         	movff	_rtWeight+3,___int32_2_mflot32@x+3	;volatile
  8183  0065EA  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8184  0065EE  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_02@mf
  8185  0065F2  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_02@mf+1
  8186  0065F6  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_02@mf+2
  8187  0065FA  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_02@mf+3
  8188                           
  8189                           ;ui.c: 284: ui_disp_xfloat_pt(&mf,0);
  8190  0065FE  0ED5               	movlw	low ui_disp_menu_home_02@mf
  8191  006600  0100               	movlb	0	; () banked
  8192  006602  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8193  006604  0E00               	movlw	high ui_disp_menu_home_02@mf
  8194  006606  0100               	movlb	0	; () banked
  8195  006608  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8196  00660A  0E00               	movlw	0
  8197  00660C  0100               	movlb	0	; () banked
  8198  00660E  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8199  006610  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8200                           
  8201                           ;ui.c: 286: lcd_disp_unit_t(1);
  8202  006614  0E01               	movlw	1
  8203  006616  EC65  F03C         	call	_lcd_disp_unit_t
  8204                           
  8205                           ;ui.c: 288: mf.t32=__int32_2_mflot32(rtDiffPressure);
  8206  00661A  C025  F06D         	movff	_rtDiffPressure,___int32_2_mflot32@x	;volatile
  8207  00661E  C026  F06E         	movff	_rtDiffPressure+1,___int32_2_mflot32@x+1	;volatile
  8208  006622  C027  F06F         	movff	_rtDiffPressure+2,___int32_2_mflot32@x+2	;volatile
  8209  006626  C028  F070         	movff	_rtDiffPressure+3,___int32_2_mflot32@x+3	;volatile
  8210  00662A  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8211  00662E  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_02@mf
  8212  006632  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_02@mf+1
  8213  006636  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_02@mf+2
  8214  00663A  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_02@mf+3
  8215                           
  8216                           ;ui.c: 289: ui_disp_xfloat_pt(&mf,1);
  8217  00663E  0ED5               	movlw	low ui_disp_menu_home_02@mf
  8218  006640  0100               	movlb	0	; () banked
  8219  006642  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8220  006644  0E00               	movlw	high ui_disp_menu_home_02@mf
  8221  006646  0100               	movlb	0	; () banked
  8222  006648  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8223  00664A  0E01               	movlw	1
  8224  00664C  0100               	movlb	0	; () banked
  8225  00664E  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8226  006650  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8227                           
  8228                           ;ui.c: 290: lcd_disp_unit_mpa(1);
  8229  006654  0E01               	movlw	1
  8230  006656  ECD8  F039         	call	_lcd_disp_unit_mpa
  8231                           
  8232                           ;ui.c: 291: t8=cal_diff_hight_level();
  8233  00665A  EC28  F014         	call	_cal_diff_hight_level	;wreg free
  8234  00665E  0100               	movlb	0	; () banked
  8235  006660  6FD4               	movwf	ui_disp_menu_home_02@t8& (0+255),b
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;ui.c: 292: lcd_disp_level(t8);
  8239  006662  0100               	movlb	0	; () banked
  8240  006664  51D4               	movf	ui_disp_menu_home_02@t8& (0+255),w,b
  8241  006666  EC0F  F03C         	call	_lcd_disp_level
  8242                           
  8243                           ;ui.c: 294: lcd_disp_refresh();
  8244  00666A  EC6E  F03A         	call	_lcd_disp_refresh	;wreg free
  8245  00666E  0012               	return		;funcret
  8246  006670                     __end_of_ui_disp_menu_home_02:
  8247                           	opt stack 0
  8248                           tblptru	equ	0xFF8
  8249                           tblptrh	equ	0xFF7
  8250                           tblptrl	equ	0xFF6
  8251                           tablat	equ	0xFF5
  8252                           prodh	equ	0xFF4
  8253                           prodl	equ	0xFF3
  8254                           intcon	equ	0xFF2
  8255                           postinc0	equ	0xFEE
  8256                           wreg	equ	0xFE8
  8257                           postdec1	equ	0xFE5
  8258                           plusw1	equ	0xFE3
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           indf2	equ	0xFDF
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           plusw2	equ	0xFDB
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _lcd_disp_unit_t *****************
  8270 ;; Defined at:
  8271 ;;		line 386 in file "src/driver/lcd.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  show            1    wreg     unsigned char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  show            1   31[COMRAM] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;Total ram usage:        1 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    6
  8292 ;; This function calls:
  8293 ;;		_lcd_set_com_seg
  8294 ;; This function is called by:
  8295 ;;		_ui_disp_menu_home_02
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text42
  8300  0078CA                     __ptext42:
  8301                           	opt stack 0
  8302  0078CA                     _lcd_disp_unit_t:
  8303                           	opt stack 20
  8304                           
  8305                           ;incstack = 0
  8306                           ;lcd_disp_unit_t@show stored from wreg
  8307  0078CA  6E20               	movwf	lcd_disp_unit_t@show,c
  8308                           
  8309                           ;lcd.c: 388: lcd_set_com_seg(3,41,0);
  8310  0078CC  0E29               	movlw	41
  8311  0078CE  0100               	movlb	0	; () banked
  8312  0078D0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8313  0078D2  0E00               	movlw	0
  8314  0078D4  0100               	movlb	0	; () banked
  8315  0078D6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8316  0078D8  0E03               	movlw	3
  8317  0078DA  EC02  F02E         	call	_lcd_set_com_seg
  8318                           
  8319                           ;lcd.c: 389: lcd_set_com_seg(2,41,0);
  8320  0078DE  0E29               	movlw	41
  8321  0078E0  0100               	movlb	0	; () banked
  8322  0078E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8323  0078E4  0E00               	movlw	0
  8324  0078E6  0100               	movlb	0	; () banked
  8325  0078E8  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8326  0078EA  0E02               	movlw	2
  8327  0078EC  EC02  F02E         	call	_lcd_set_com_seg
  8328                           
  8329                           ;lcd.c: 390: if(show)
  8330  0078F0  5020               	movf	lcd_disp_unit_t@show,w,c
  8331  0078F2  B4D8               	btfsc	status,2,c
  8332  0078F4  D00A               	goto	l12215
  8333                           
  8334                           ;lcd.c: 391: lcd_set_com_seg(3,42,1);
  8335  0078F6  0E2A               	movlw	42
  8336  0078F8  0100               	movlb	0	; () banked
  8337  0078FA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8338  0078FC  0E01               	movlw	1
  8339  0078FE  0100               	movlb	0	; () banked
  8340  007900  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8341  007902  0E03               	movlw	3
  8342  007904  EC02  F02E         	call	_lcd_set_com_seg
  8343  007908  0012               	return	
  8344  00790A                     l12215:
  8345                           
  8346                           ;lcd.c: 392: else
  8347                           ;lcd.c: 393: lcd_set_com_seg(3,42,0);
  8348  00790A  0E2A               	movlw	42
  8349  00790C  0100               	movlb	0	; () banked
  8350  00790E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8351  007910  0E00               	movlw	0
  8352  007912  0100               	movlb	0	; () banked
  8353  007914  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8354  007916  0E03               	movlw	3
  8355  007918  EC02  F02E         	call	_lcd_set_com_seg
  8356  00791C  0012               	return	
  8357  00791E                     __end_of_lcd_disp_unit_t:
  8358                           	opt stack 0
  8359                           tblptru	equ	0xFF8
  8360                           tblptrh	equ	0xFF7
  8361                           tblptrl	equ	0xFF6
  8362                           tablat	equ	0xFF5
  8363                           prodh	equ	0xFF4
  8364                           prodl	equ	0xFF3
  8365                           intcon	equ	0xFF2
  8366                           postinc0	equ	0xFEE
  8367                           wreg	equ	0xFE8
  8368                           postdec1	equ	0xFE5
  8369                           plusw1	equ	0xFE3
  8370                           fsr1h	equ	0xFE2
  8371                           fsr1l	equ	0xFE1
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           postdec2	equ	0xFDD
  8375                           plusw2	equ	0xFDB
  8376                           fsr2h	equ	0xFDA
  8377                           fsr2l	equ	0xFD9
  8378                           status	equ	0xFD8
  8379                           
  8380 ;; *************** function _ui_disp_menu_home_01 *****************
  8381 ;; Defined at:
  8382 ;;		line 257 in file "src/api/ui.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  mf              4  117[BANK0 ] struct .
  8387 ;;  t8              1  116[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        5 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:   10
  8404 ;; This function calls:
  8405 ;;		___int32_2_mflot32
  8406 ;;		_cal_diff_hight_level
  8407 ;;		_lcd_disp_level
  8408 ;;		_lcd_disp_refresh
  8409 ;;		_lcd_disp_unit_1st_m3
  8410 ;;		_lcd_disp_unit_mpa
  8411 ;;		_ui_disp_clear_num_dp
  8412 ;;		_ui_disp_xfloat_pt
  8413 ;; This function is called by:
  8414 ;;		_ui_disp_menu
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text43
  8419  006670                     __ptext43:
  8420                           	opt stack 0
  8421  006670                     _ui_disp_menu_home_01:
  8422                           	opt stack 17
  8423                           
  8424                           ;ui.c: 260: uint8_t t8;
  8425                           ;ui.c: 261: st_float32 mf;
  8426                           ;ui.c: 262: ui_disp_clear_num_dp();
  8427                           
  8428                           ;incstack = 0
  8429  006670  ECB5  F03B         	call	_ui_disp_clear_num_dp	;wreg free
  8430                           
  8431                           ;ui.c: 263: mf.t32=__int32_2_mflot32(rtVolume);
  8432  006674  C15A  F06D         	movff	_rtVolume,___int32_2_mflot32@x	;volatile
  8433  006678  C15B  F06E         	movff	_rtVolume+1,___int32_2_mflot32@x+1	;volatile
  8434  00667C  C15C  F06F         	movff	_rtVolume+2,___int32_2_mflot32@x+2	;volatile
  8435  006680  C15D  F070         	movff	_rtVolume+3,___int32_2_mflot32@x+3	;volatile
  8436  006684  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8437  006688  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_01@mf
  8438  00668C  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_01@mf+1
  8439  006690  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_01@mf+2
  8440  006694  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_01@mf+3
  8441                           
  8442                           ;ui.c: 264: ui_disp_xfloat_pt(&mf,0);
  8443  006698  0ED5               	movlw	low ui_disp_menu_home_01@mf
  8444  00669A  0100               	movlb	0	; () banked
  8445  00669C  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8446  00669E  0E00               	movlw	high ui_disp_menu_home_01@mf
  8447  0066A0  0100               	movlb	0	; () banked
  8448  0066A2  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8449  0066A4  0E00               	movlw	0
  8450  0066A6  0100               	movlb	0	; () banked
  8451  0066A8  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8452  0066AA  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8453                           
  8454                           ;ui.c: 265: lcd_disp_unit_1st_m3(1);
  8455  0066AE  0E01               	movlw	1
  8456  0066B0  ECA5  F039         	call	_lcd_disp_unit_1st_m3
  8457                           
  8458                           ;ui.c: 267: mf.t32=__int32_2_mflot32(rtDiffPressure);
  8459  0066B4  C025  F06D         	movff	_rtDiffPressure,___int32_2_mflot32@x	;volatile
  8460  0066B8  C026  F06E         	movff	_rtDiffPressure+1,___int32_2_mflot32@x+1	;volatile
  8461  0066BC  C027  F06F         	movff	_rtDiffPressure+2,___int32_2_mflot32@x+2	;volatile
  8462  0066C0  C028  F070         	movff	_rtDiffPressure+3,___int32_2_mflot32@x+3	;volatile
  8463  0066C4  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8464  0066C8  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_01@mf
  8465  0066CC  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_01@mf+1
  8466  0066D0  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_01@mf+2
  8467  0066D4  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_01@mf+3
  8468                           
  8469                           ;ui.c: 268: ui_disp_xfloat_pt(&mf,1);
  8470  0066D8  0ED5               	movlw	low ui_disp_menu_home_01@mf
  8471  0066DA  0100               	movlb	0	; () banked
  8472  0066DC  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8473  0066DE  0E00               	movlw	high ui_disp_menu_home_01@mf
  8474  0066E0  0100               	movlb	0	; () banked
  8475  0066E2  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8476  0066E4  0E01               	movlw	1
  8477  0066E6  0100               	movlb	0	; () banked
  8478  0066E8  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8479  0066EA  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8480                           
  8481                           ;ui.c: 269: lcd_disp_unit_mpa(1);
  8482  0066EE  0E01               	movlw	1
  8483  0066F0  ECD8  F039         	call	_lcd_disp_unit_mpa
  8484                           
  8485                           ;ui.c: 270: t8=cal_diff_hight_level();
  8486  0066F4  EC28  F014         	call	_cal_diff_hight_level	;wreg free
  8487  0066F8  0100               	movlb	0	; () banked
  8488  0066FA  6FD4               	movwf	ui_disp_menu_home_01@t8& (0+255),b
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;ui.c: 271: lcd_disp_level(t8);
  8492  0066FC  0100               	movlb	0	; () banked
  8493  0066FE  51D4               	movf	ui_disp_menu_home_01@t8& (0+255),w,b
  8494  006700  EC0F  F03C         	call	_lcd_disp_level
  8495                           
  8496                           ;ui.c: 273: lcd_disp_refresh();
  8497  006704  EC6E  F03A         	call	_lcd_disp_refresh	;wreg free
  8498  006708  0012               	return		;funcret
  8499  00670A                     __end_of_ui_disp_menu_home_01:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           postinc0	equ	0xFEE
  8509                           wreg	equ	0xFE8
  8510                           postdec1	equ	0xFE5
  8511                           plusw1	equ	0xFE3
  8512                           fsr1h	equ	0xFE2
  8513                           fsr1l	equ	0xFE1
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           plusw2	equ	0xFDB
  8518                           fsr2h	equ	0xFDA
  8519                           fsr2l	equ	0xFD9
  8520                           status	equ	0xFD8
  8521                           
  8522 ;; *************** function _lcd_disp_unit_1st_m3 *****************
  8523 ;; Defined at:
  8524 ;;		line 408 in file "src/driver/lcd.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  show            1    wreg     unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  show            1   31[COMRAM] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;Total ram usage:        1 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    6
  8545 ;; This function calls:
  8546 ;;		_lcd_set_com_seg
  8547 ;; This function is called by:
  8548 ;;		_ui_disp_menu_home_01
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text44
  8553  00734A                     __ptext44:
  8554                           	opt stack 0
  8555  00734A                     _lcd_disp_unit_1st_m3:
  8556                           	opt stack 20
  8557                           
  8558                           ;incstack = 0
  8559                           ;lcd_disp_unit_1st_m3@show stored from wreg
  8560  00734A  6E20               	movwf	lcd_disp_unit_1st_m3@show,c
  8561                           
  8562                           ;lcd.c: 411: lcd_set_com_seg(3,42,0);
  8563  00734C  0E2A               	movlw	42
  8564  00734E  0100               	movlb	0	; () banked
  8565  007350  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8566  007352  0E00               	movlw	0
  8567  007354  0100               	movlb	0	; () banked
  8568  007356  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8569  007358  0E03               	movlw	3
  8570  00735A  EC02  F02E         	call	_lcd_set_com_seg
  8571                           
  8572                           ;lcd.c: 412: if(show){
  8573  00735E  5020               	movf	lcd_disp_unit_1st_m3@show,w,c
  8574  007360  B4D8               	btfsc	status,2,c
  8575  007362  D013               	goto	l12207
  8576                           
  8577                           ;lcd.c: 413: lcd_set_com_seg(2,41,1);
  8578  007364  0E29               	movlw	41
  8579  007366  0100               	movlb	0	; () banked
  8580  007368  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8581  00736A  0E01               	movlw	1
  8582  00736C  0100               	movlb	0	; () banked
  8583  00736E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8584  007370  0E02               	movlw	2
  8585  007372  EC02  F02E         	call	_lcd_set_com_seg
  8586                           
  8587                           ;lcd.c: 414: lcd_set_com_seg(3,41,1);
  8588  007376  0E29               	movlw	41
  8589  007378  0100               	movlb	0	; () banked
  8590  00737A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8591  00737C  0E01               	movlw	1
  8592  00737E  0100               	movlb	0	; () banked
  8593  007380  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8594  007382  0E03               	movlw	3
  8595  007384  EC02  F02E         	call	_lcd_set_com_seg
  8596                           
  8597                           ;lcd.c: 415: }else{
  8598  007388  0012               	return	
  8599  00738A                     l12207:
  8600                           
  8601                           ;lcd.c: 416: lcd_set_com_seg(2,41,0);
  8602  00738A  0E29               	movlw	41
  8603  00738C  0100               	movlb	0	; () banked
  8604  00738E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8605  007390  0E00               	movlw	0
  8606  007392  0100               	movlb	0	; () banked
  8607  007394  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8608  007396  0E02               	movlw	2
  8609  007398  EC02  F02E         	call	_lcd_set_com_seg
  8610                           
  8611                           ;lcd.c: 417: lcd_set_com_seg(3,41,0);
  8612  00739C  0E29               	movlw	41
  8613  00739E  0100               	movlb	0	; () banked
  8614  0073A0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  8615  0073A2  0E00               	movlw	0
  8616  0073A4  0100               	movlb	0	; () banked
  8617  0073A6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  8618  0073A8  0E03               	movlw	3
  8619  0073AA  EC02  F02E         	call	_lcd_set_com_seg
  8620  0073AE  0012               	return	
  8621  0073B0                     __end_of_lcd_disp_unit_1st_m3:
  8622                           	opt stack 0
  8623                           tblptru	equ	0xFF8
  8624                           tblptrh	equ	0xFF7
  8625                           tblptrl	equ	0xFF6
  8626                           tablat	equ	0xFF5
  8627                           prodh	equ	0xFF4
  8628                           prodl	equ	0xFF3
  8629                           intcon	equ	0xFF2
  8630                           postinc0	equ	0xFEE
  8631                           wreg	equ	0xFE8
  8632                           postdec1	equ	0xFE5
  8633                           plusw1	equ	0xFE3
  8634                           fsr1h	equ	0xFE2
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           plusw2	equ	0xFDB
  8640                           fsr2h	equ	0xFDA
  8641                           fsr2l	equ	0xFD9
  8642                           status	equ	0xFD8
  8643                           
  8644 ;; *************** function _ui_disp_menu_home_00 *****************
  8645 ;; Defined at:
  8646 ;;		line 237 in file "src/api/ui.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  mf              4  117[BANK0 ] struct .
  8651 ;;  t8              1  116[BANK0 ] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;Total ram usage:        5 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:   10
  8668 ;; This function calls:
  8669 ;;		___int32_2_mflot32
  8670 ;;		_cal_diff_hight_level
  8671 ;;		_lcd_disp_level
  8672 ;;		_lcd_disp_refresh
  8673 ;;		_lcd_disp_unit_1st_m
  8674 ;;		_lcd_disp_unit_mpa
  8675 ;;		_ui_disp_clear_num_dp
  8676 ;;		_ui_disp_xfloat_pt
  8677 ;; This function is called by:
  8678 ;;		_ui_disp_menu
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text45
  8683  00670A                     __ptext45:
  8684                           	opt stack 0
  8685  00670A                     _ui_disp_menu_home_00:
  8686                           	opt stack 17
  8687                           
  8688                           ;ui.c: 240: uint8_t t8;
  8689                           ;ui.c: 241: st_float32 mf;
  8690                           ;ui.c: 242: ui_disp_clear_num_dp();
  8691                           
  8692                           ;incstack = 0
  8693  00670A  ECB5  F03B         	call	_ui_disp_clear_num_dp	;wreg free
  8694                           
  8695                           ;ui.c: 243: mf.t32=__int32_2_mflot32(rtHight);
  8696  00670E  C021  F06D         	movff	_rtHight,___int32_2_mflot32@x	;volatile
  8697  006712  C022  F06E         	movff	_rtHight+1,___int32_2_mflot32@x+1	;volatile
  8698  006716  C023  F06F         	movff	_rtHight+2,___int32_2_mflot32@x+2	;volatile
  8699  00671A  C024  F070         	movff	_rtHight+3,___int32_2_mflot32@x+3	;volatile
  8700  00671E  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8701  006722  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_00@mf
  8702  006726  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_00@mf+1
  8703  00672A  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_00@mf+2
  8704  00672E  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_00@mf+3
  8705                           
  8706                           ;ui.c: 244: ui_disp_xfloat_pt(&mf,0);
  8707  006732  0ED5               	movlw	low ui_disp_menu_home_00@mf
  8708  006734  0100               	movlb	0	; () banked
  8709  006736  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8710  006738  0E00               	movlw	high ui_disp_menu_home_00@mf
  8711  00673A  0100               	movlb	0	; () banked
  8712  00673C  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8713  00673E  0E00               	movlw	0
  8714  006740  0100               	movlb	0	; () banked
  8715  006742  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8716  006744  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8717                           
  8718                           ;ui.c: 245: lcd_disp_unit_1st_m(1);
  8719  006748  0E01               	movlw	1
  8720  00674A  EC8F  F03C         	call	_lcd_disp_unit_1st_m
  8721                           
  8722                           ;ui.c: 247: mf.t32=__int32_2_mflot32(rtDiffPressure);
  8723  00674E  C025  F06D         	movff	_rtDiffPressure,___int32_2_mflot32@x	;volatile
  8724  006752  C026  F06E         	movff	_rtDiffPressure+1,___int32_2_mflot32@x+1	;volatile
  8725  006756  C027  F06F         	movff	_rtDiffPressure+2,___int32_2_mflot32@x+2	;volatile
  8726  00675A  C028  F070         	movff	_rtDiffPressure+3,___int32_2_mflot32@x+3	;volatile
  8727  00675E  EC0B  F02C         	call	___int32_2_mflot32	;wreg free
  8728  006762  C06D  F0D5         	movff	?___int32_2_mflot32,ui_disp_menu_home_00@mf
  8729  006766  C06E  F0D6         	movff	?___int32_2_mflot32+1,ui_disp_menu_home_00@mf+1
  8730  00676A  C06F  F0D7         	movff	?___int32_2_mflot32+2,ui_disp_menu_home_00@mf+2
  8731  00676E  C070  F0D8         	movff	?___int32_2_mflot32+3,ui_disp_menu_home_00@mf+3
  8732                           
  8733                           ;ui.c: 248: ui_disp_xfloat_pt(&mf,1);
  8734  006772  0ED5               	movlw	low ui_disp_menu_home_00@mf
  8735  006774  0100               	movlb	0	; () banked
  8736  006776  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
  8737  006778  0E00               	movlw	high ui_disp_menu_home_00@mf
  8738  00677A  0100               	movlb	0	; () banked
  8739  00677C  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
  8740  00677E  0E01               	movlw	1
  8741  006780  0100               	movlb	0	; () banked
  8742  006782  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
  8743  006784  ECFC  F030         	call	_ui_disp_xfloat_pt	;wreg free
  8744                           
  8745                           ;ui.c: 249: lcd_disp_unit_mpa(1);
  8746  006788  0E01               	movlw	1
  8747  00678A  ECD8  F039         	call	_lcd_disp_unit_mpa
  8748                           
  8749                           ;ui.c: 250: t8=cal_diff_hight_level();
  8750  00678E  EC28  F014         	call	_cal_diff_hight_level	;wreg free
  8751  006792  0100               	movlb	0	; () banked
  8752  006794  6FD4               	movwf	ui_disp_menu_home_00@t8& (0+255),b
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;ui.c: 251: lcd_disp_level(t8);
  8756  006796  0100               	movlb	0	; () banked
  8757  006798  51D4               	movf	ui_disp_menu_home_00@t8& (0+255),w,b
  8758  00679A  EC0F  F03C         	call	_lcd_disp_level
  8759                           
  8760                           ;ui.c: 253: lcd_disp_refresh();
  8761  00679E  EC6E  F03A         	call	_lcd_disp_refresh	;wreg free
  8762  0067A2  0012               	return		;funcret
  8763  0067A4                     __end_of_ui_disp_menu_home_00:
  8764                           	opt stack 0
  8765                           tblptru	equ	0xFF8
  8766                           tblptrh	equ	0xFF7
  8767                           tblptrl	equ	0xFF6
  8768                           tablat	equ	0xFF5
  8769                           prodh	equ	0xFF4
  8770                           prodl	equ	0xFF3
  8771                           intcon	equ	0xFF2
  8772                           postinc0	equ	0xFEE
  8773                           wreg	equ	0xFE8
  8774                           postdec1	equ	0xFE5
  8775                           plusw1	equ	0xFE3
  8776                           fsr1h	equ	0xFE2
  8777                           fsr1l	equ	0xFE1
  8778                           indf2	equ	0xFDF
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           plusw2	equ	0xFDB
  8782                           fsr2h	equ	0xFDA
  8783                           fsr2l	equ	0xFD9
  8784                           status	equ	0xFD8
  8785                           
  8786 ;; *************** function _ui_disp_xfloat_pt *****************
  8787 ;; Defined at:
  8788 ;;		line 209 in file "src/api/ui.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  xpf             2   22[BANK0 ] PTR struct .
  8791 ;;		 -> ui_disp_menu_home_02@mf(4), ui_disp_menu_home_01@mf(4), ui_disp_menu_home_00@mf(4), 
  8792 ;;  line            1   24[BANK0 ] unsigned char 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  buf            10   25[BANK0 ] unsigned char [10]
  8795 ;;  x               2   36[BANK0 ] unsigned int 
  8796 ;;  t8              1   35[BANK0 ] unsigned char 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8806 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;Total ram usage:       16 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    9
  8813 ;; This function calls:
  8814 ;;		_lcd_show_dp
  8815 ;;		_lcd_show_string_l0
  8816 ;;		_lcd_show_string_l1
  8817 ;;		_m_int16_2_str_4
  8818 ;; This function is called by:
  8819 ;;		_ui_disp_menu_home_00
  8820 ;;		_ui_disp_menu_home_01
  8821 ;;		_ui_disp_menu_home_02
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text46
  8826  0061F8                     __ptext46:
  8827                           	opt stack 0
  8828  0061F8                     _ui_disp_xfloat_pt:
  8829                           	opt stack 17
  8830                           
  8831                           ;ui.c: 211: uint8_t buf[10];
  8832                           ;ui.c: 212: uint8_t t8;
  8833                           ;ui.c: 213: uint16_t x;
  8834                           ;ui.c: 214: if(line>1)return;
  8835                           
  8836                           ;incstack = 0
  8837  0061F8  0E01               	movlw	1
  8838  0061FA  0100               	movlb	0	; () banked
  8839  0061FC  6578               	cpfsgt	ui_disp_xfloat_pt@line& (0+255),b
  8840  0061FE  D001               	goto	l12163
  8841  006200  0012               	return	
  8842  006202                     l12163:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;ui.c: 215: x=xpf->stru.significand;
  8846  006202  C076  FFD9         	movff	ui_disp_xfloat_pt@xpf,fsr2l
  8847  006206  C077  FFDA         	movff	ui_disp_xfloat_pt@xpf+1,fsr2h
  8848  00620A  CFDE F084          	movff	postinc2,ui_disp_xfloat_pt@x
  8849  00620E  CFDD F085          	movff	postdec2,ui_disp_xfloat_pt@x+1
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;ui.c: 216: if(x>9999)x=9999;
  8853  006212  0E10               	movlw	16
  8854  006214  0100               	movlb	0	; () banked
  8855  006216  5D84               	subwf	ui_disp_xfloat_pt@x& (0+255),w,b
  8856  006218  0E27               	movlw	39
  8857  00621A  0100               	movlb	0	; () banked
  8858  00621C  5985               	subwfb	(ui_disp_xfloat_pt@x+1)& (0+255),w,b
  8859  00621E  A0D8               	btfss	status,0,c
  8860  006220  D005               	goto	l12169
  8861                           
  8862                           ; BSR set to: 0
  8863  006222  0E27               	movlw	39
  8864  006224  0100               	movlb	0	; () banked
  8865  006226  6F85               	movwf	(ui_disp_xfloat_pt@x+1)& (0+255),b
  8866  006228  0E0F               	movlw	15
  8867  00622A  6F84               	movwf	ui_disp_xfloat_pt@x& (0+255),b
  8868  00622C                     l12169:
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;ui.c: 217: m_int16_2_str_4(buf,x);
  8872  00622C  0E79               	movlw	low ui_disp_xfloat_pt@buf
  8873  00622E  0100               	movlb	0	; () banked
  8874  006230  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
  8875  006232  0E00               	movlw	high ui_disp_xfloat_pt@buf
  8876  006234  0100               	movlb	0	; () banked
  8877  006236  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  8878  006238  C084  F06A         	movff	ui_disp_xfloat_pt@x,m_int16_2_str_4@x
  8879  00623C  C085  F06B         	movff	ui_disp_xfloat_pt@x+1,m_int16_2_str_4@x+1
  8880  006240  ECE5  F026         	call	_m_int16_2_str_4	;wreg free
  8881                           
  8882                           ;ui.c: 218: buf[5]='\0';
  8883  006244  0E00               	movlw	0
  8884  006246  0100               	movlb	0	; () banked
  8885  006248  6F7E               	movwf	(ui_disp_xfloat_pt@buf+5)& (0+255),b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;ui.c: 219: if(line==0){
  8889  00624A  0100               	movlb	0	; () banked
  8890  00624C  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
  8891  00624E  0100               	movlb	0	; () banked
  8892  006250  A4D8               	btfss	status,2,c
  8893  006252  D009               	goto	l12177
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;ui.c: 220: lcd_show_string_l0(buf);
  8897  006254  0E79               	movlw	low ui_disp_xfloat_pt@buf
  8898  006256  0100               	movlb	0	; () banked
  8899  006258  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  8900  00625A  0E00               	movlw	high ui_disp_xfloat_pt@buf
  8901  00625C  0100               	movlb	0	; () banked
  8902  00625E  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  8903  006260  EC61  F038         	call	_lcd_show_string_l0	;wreg free
  8904                           
  8905                           ;ui.c: 221: }else{
  8906  006264  D008               	goto	l12179
  8907  006266                     l12177:
  8908                           
  8909                           ;ui.c: 222: lcd_show_string_l1(buf);
  8910  006266  0E79               	movlw	low ui_disp_xfloat_pt@buf
  8911  006268  0100               	movlb	0	; () banked
  8912  00626A  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  8913  00626C  0E00               	movlw	high ui_disp_xfloat_pt@buf
  8914  00626E  0100               	movlb	0	; () banked
  8915  006270  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  8916  006272  ECB9  F03D         	call	_lcd_show_string_l1	;wreg free
  8917  006276                     l12179:
  8918                           
  8919                           ;ui.c: 223: }
  8920                           ;ui.c: 224: t8=xpf->stru.exponent;
  8921  006276  0100               	movlb	0	; () banked
  8922  006278  EE20 F002          	lfsr	2,2
  8923  00627C  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
  8924  00627E  26D9               	addwf	fsr2l,f,c
  8925  006280  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
  8926  006282  22DA               	addwfc	fsr2h,f,c
  8927  006284  50DF               	movf	indf2,w,c
  8928  006286  0100               	movlb	0	; () banked
  8929  006288  6F83               	movwf	ui_disp_xfloat_pt@t8& (0+255),b
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;ui.c: 225: if(t8<3)lcd_show_dp(t8+4*line,1);
  8933  00628A  0E03               	movlw	3
  8934  00628C  0100               	movlb	0	; () banked
  8935  00628E  6183               	cpfslt	ui_disp_xfloat_pt@t8& (0+255),b
  8936  006290  0012               	return	
  8937                           
  8938                           ; BSR set to: 0
  8939  006292  0E01               	movlw	1
  8940  006294  0100               	movlb	0	; () banked
  8941  006296  6F70               	movwf	lcd_show_dp@show& (0+255),b
  8942  006298  0100               	movlb	0	; () banked
  8943  00629A  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
  8944  00629C  0D04               	mullw	4
  8945  00629E  50F3               	movf	prodl,w,c
  8946  0062A0  0100               	movlb	0	; () banked
  8947  0062A2  2583               	addwf	ui_disp_xfloat_pt@t8& (0+255),w,b
  8948  0062A4  ECCF  F038         	call	_lcd_show_dp
  8949  0062A8  0012               	return	
  8950  0062AA                     __end_of_ui_disp_xfloat_pt:
  8951                           	opt stack 0
  8952                           tblptru	equ	0xFF8
  8953                           tblptrh	equ	0xFF7
  8954                           tblptrl	equ	0xFF6
  8955                           tablat	equ	0xFF5
  8956                           prodh	equ	0xFF4
  8957                           prodl	equ	0xFF3
  8958                           intcon	equ	0xFF2
  8959                           postinc0	equ	0xFEE
  8960                           wreg	equ	0xFE8
  8961                           postdec1	equ	0xFE5
  8962                           plusw1	equ	0xFE3
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           indf2	equ	0xFDF
  8966                           postinc2	equ	0xFDE
  8967                           postdec2	equ	0xFDD
  8968                           plusw2	equ	0xFDB
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           
  8973 ;; *************** function _m_int16_2_str_4 *****************
  8974 ;; Defined at:
  8975 ;;		line 260 in file "src/depend/m_string.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  8978 ;;		 -> ui_disp_xfloat_pt@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8979 ;;  x               2   10[BANK0 ] int 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;Total ram usage:        4 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    5
  8998 ;; This function calls:
  8999 ;;		___awdiv
  9000 ;;		___awmod
  9001 ;; This function is called by:
  9002 ;;		_ui_disp_adj_xfixed_pt
  9003 ;;		_ui_disp_xfloat_pt
  9004 ;;		_ui_disp_adj_xfloat_pt
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text47
  9009  004DCA                     __ptext47:
  9010                           	opt stack 0
  9011  004DCA                     _m_int16_2_str_4:
  9012                           	opt stack 20
  9013                           
  9014                           ;m_string.c: 262: if(x>9999)x=9999;
  9015                           
  9016                           ;incstack = 0
  9017  004DCA  0100               	movlb	0	; () banked
  9018  004DCC  BF6B               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
  9019  004DCE  D00D               	goto	l11073
  9020  004DD0  0E10               	movlw	16
  9021  004DD2  0100               	movlb	0	; () banked
  9022  004DD4  5D6A               	subwf	m_int16_2_str_4@x& (0+255),w,b
  9023  004DD6  0E27               	movlw	39
  9024  004DD8  0100               	movlb	0	; () banked
  9025  004DDA  596B               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
  9026  004DDC  A0D8               	btfss	status,0,c
  9027  004DDE  D005               	goto	l11073
  9028                           
  9029                           ; BSR set to: 0
  9030  004DE0  0E27               	movlw	39
  9031  004DE2  0100               	movlb	0	; () banked
  9032  004DE4  6F6B               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
  9033  004DE6  0E0F               	movlw	15
  9034  004DE8  6F6A               	movwf	m_int16_2_str_4@x& (0+255),b
  9035  004DEA                     l11073:
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;m_string.c: 263: buf[3]=HexTable[x%10];
  9039  004DEA  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
  9040  004DEE  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  9041  004DF2  0E00               	movlw	0
  9042  004DF4  0100               	movlb	0	; () banked
  9043  004DF6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9044  004DF8  0E0A               	movlw	10
  9045  004DFA  6F62               	movwf	___awmod@divisor& (0+255),b
  9046  004DFC  ECFD  F031         	call	___awmod	;wreg free
  9047  004E00  0EDC               	movlw	low _HexTable
  9048  004E02  0100               	movlb	0	; () banked
  9049  004E04  2560               	addwf	?___awmod& (0+255),w,b
  9050  004E06  6EF6               	movwf	tblptrl,c
  9051  004E08  0EEF               	movlw	high _HexTable
  9052  004E0A  0100               	movlb	0	; () banked
  9053  004E0C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  9054  004E0E  6EF7               	movwf	tblptrh,c
  9055  004E10                     	if	0	;There are less than 3 active tblptr bytes
  9056  004E10                     	endif
  9057  004E10  0100               	movlb	0	; () banked
  9058  004E12  EE20 F003          	lfsr	2,3
  9059  004E16  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
  9060  004E18  26D9               	addwf	fsr2l,f,c
  9061  004E1A  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  9062  004E1C  22DA               	addwfc	fsr2h,f,c
  9063  004E1E  0008               	tblrd		*
  9064  004E20  CFF5 FFDF          	movff	tablat,indf2
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;m_string.c: 264: x/=10;
  9068  004E24  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
  9069  004E28  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  9070  004E2C  0E00               	movlw	0
  9071  004E2E  0100               	movlb	0	; () banked
  9072  004E30  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9073  004E32  0E0A               	movlw	10
  9074  004E34  6F62               	movwf	___awdiv@divisor& (0+255),b
  9075  004E36  EC8A  F02F         	call	___awdiv	;wreg free
  9076  004E3A  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
  9077  004E3E  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  9078                           
  9079                           ;m_string.c: 265: buf[2]=HexTable[x%10];
  9080  004E42  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
  9081  004E46  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  9082  004E4A  0E00               	movlw	0
  9083  004E4C  0100               	movlb	0	; () banked
  9084  004E4E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9085  004E50  0E0A               	movlw	10
  9086  004E52  6F62               	movwf	___awmod@divisor& (0+255),b
  9087  004E54  ECFD  F031         	call	___awmod	;wreg free
  9088  004E58  0EDC               	movlw	low _HexTable
  9089  004E5A  0100               	movlb	0	; () banked
  9090  004E5C  2560               	addwf	?___awmod& (0+255),w,b
  9091  004E5E  6EF6               	movwf	tblptrl,c
  9092  004E60  0EEF               	movlw	high _HexTable
  9093  004E62  0100               	movlb	0	; () banked
  9094  004E64  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  9095  004E66  6EF7               	movwf	tblptrh,c
  9096  004E68                     	if	0	;There are less than 3 active tblptr bytes
  9097  004E68                     	endif
  9098  004E68  0100               	movlb	0	; () banked
  9099  004E6A  EE20 F002          	lfsr	2,2
  9100  004E6E  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
  9101  004E70  26D9               	addwf	fsr2l,f,c
  9102  004E72  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  9103  004E74  22DA               	addwfc	fsr2h,f,c
  9104  004E76  0008               	tblrd		*
  9105  004E78  CFF5 FFDF          	movff	tablat,indf2
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;m_string.c: 266: x/=10;
  9109  004E7C  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
  9110  004E80  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  9111  004E84  0E00               	movlw	0
  9112  004E86  0100               	movlb	0	; () banked
  9113  004E88  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9114  004E8A  0E0A               	movlw	10
  9115  004E8C  6F62               	movwf	___awdiv@divisor& (0+255),b
  9116  004E8E  EC8A  F02F         	call	___awdiv	;wreg free
  9117  004E92  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
  9118  004E96  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  9119                           
  9120                           ;m_string.c: 267: buf[1]=HexTable[x%10];
  9121  004E9A  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
  9122  004E9E  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  9123  004EA2  0E00               	movlw	0
  9124  004EA4  0100               	movlb	0	; () banked
  9125  004EA6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9126  004EA8  0E0A               	movlw	10
  9127  004EAA  6F62               	movwf	___awmod@divisor& (0+255),b
  9128  004EAC  ECFD  F031         	call	___awmod	;wreg free
  9129  004EB0  0EDC               	movlw	low _HexTable
  9130  004EB2  0100               	movlb	0	; () banked
  9131  004EB4  2560               	addwf	?___awmod& (0+255),w,b
  9132  004EB6  6EF6               	movwf	tblptrl,c
  9133  004EB8  0EEF               	movlw	high _HexTable
  9134  004EBA  0100               	movlb	0	; () banked
  9135  004EBC  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  9136  004EBE  6EF7               	movwf	tblptrh,c
  9137  004EC0                     	if	0	;There are less than 3 active tblptr bytes
  9138  004EC0                     	endif
  9139  004EC0  0100               	movlb	0	; () banked
  9140  004EC2  EE20 F001          	lfsr	2,1
  9141  004EC6  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
  9142  004EC8  26D9               	addwf	fsr2l,f,c
  9143  004ECA  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  9144  004ECC  22DA               	addwfc	fsr2h,f,c
  9145  004ECE  0008               	tblrd		*
  9146  004ED0  CFF5 FFDF          	movff	tablat,indf2
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;m_string.c: 268: x/=10;
  9150  004ED4  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
  9151  004ED8  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  9152  004EDC  0E00               	movlw	0
  9153  004EDE  0100               	movlb	0	; () banked
  9154  004EE0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9155  004EE2  0E0A               	movlw	10
  9156  004EE4  6F62               	movwf	___awdiv@divisor& (0+255),b
  9157  004EE6  EC8A  F02F         	call	___awdiv	;wreg free
  9158  004EEA  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
  9159  004EEE  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  9160                           
  9161                           ;m_string.c: 269: buf[0]=HexTable[x%10];
  9162  004EF2  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
  9163  004EF6  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  9164  004EFA  0E00               	movlw	0
  9165  004EFC  0100               	movlb	0	; () banked
  9166  004EFE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9167  004F00  0E0A               	movlw	10
  9168  004F02  6F62               	movwf	___awmod@divisor& (0+255),b
  9169  004F04  ECFD  F031         	call	___awmod	;wreg free
  9170  004F08  0EDC               	movlw	low _HexTable
  9171  004F0A  0100               	movlb	0	; () banked
  9172  004F0C  2560               	addwf	?___awmod& (0+255),w,b
  9173  004F0E  6EF6               	movwf	tblptrl,c
  9174  004F10  0EEF               	movlw	high _HexTable
  9175  004F12  0100               	movlb	0	; () banked
  9176  004F14  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  9177  004F16  6EF7               	movwf	tblptrh,c
  9178  004F18                     	if	0	;There are less than 3 active tblptr bytes
  9179  004F18                     	endif
  9180  004F18  C068  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
  9181  004F1C  C069  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
  9182  004F20  0008               	tblrd		*
  9183  004F22  CFF5 FFDF          	movff	tablat,indf2
  9184                           
  9185                           ; BSR set to: 0
  9186  004F26  0012               	return		;funcret
  9187  004F28                     __end_of_m_int16_2_str_4:
  9188                           	opt stack 0
  9189                           tblptru	equ	0xFF8
  9190                           tblptrh	equ	0xFF7
  9191                           tblptrl	equ	0xFF6
  9192                           tablat	equ	0xFF5
  9193                           prodh	equ	0xFF4
  9194                           prodl	equ	0xFF3
  9195                           intcon	equ	0xFF2
  9196                           postinc0	equ	0xFEE
  9197                           wreg	equ	0xFE8
  9198                           postdec1	equ	0xFE5
  9199                           plusw1	equ	0xFE3
  9200                           fsr1h	equ	0xFE2
  9201                           fsr1l	equ	0xFE1
  9202                           indf2	equ	0xFDF
  9203                           postinc2	equ	0xFDE
  9204                           postdec2	equ	0xFDD
  9205                           plusw2	equ	0xFDB
  9206                           fsr2h	equ	0xFDA
  9207                           fsr2l	equ	0xFD9
  9208                           status	equ	0xFD8
  9209                           
  9210 ;; *************** function ___awmod *****************
  9211 ;; Defined at:
  9212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  dividend        2    0[BANK0 ] int 
  9215 ;;  divisor         2    2[BANK0 ] int 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  sign            1    5[BANK0 ] unsigned char 
  9218 ;;  counter         1    4[BANK0 ] unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  2    0[BANK0 ] int 
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;Total ram usage:        6 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    4
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_m_int16_2_str_4
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text48
  9243  0063FA                     __ptext48:
  9244                           	opt stack 0
  9245  0063FA                     ___awmod:
  9246                           	opt stack 20
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  0063FA  0E00               	movlw	0
  9251  0063FC  0100               	movlb	0	; () banked
  9252  0063FE  6F65               	movwf	___awmod@sign& (0+255),b
  9253                           
  9254                           ; BSR set to: 0
  9255  006400  0100               	movlb	0	; () banked
  9256  006402  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9257  006404  D008               	goto	l10977
  9258                           
  9259                           ; BSR set to: 0
  9260  006406  0100               	movlb	0	; () banked
  9261  006408  6D60               	negf	___awmod@dividend& (0+255),b
  9262  00640A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9263  00640C  B0D8               	btfsc	status,0,c
  9264  00640E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9265                           
  9266                           ; BSR set to: 0
  9267  006410  0E01               	movlw	1
  9268  006412  0100               	movlb	0	; () banked
  9269  006414  6F65               	movwf	___awmod@sign& (0+255),b
  9270  006416                     l10977:
  9271                           
  9272                           ; BSR set to: 0
  9273  006416  0100               	movlb	0	; () banked
  9274  006418  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9275  00641A  D005               	goto	l10981
  9276                           
  9277                           ; BSR set to: 0
  9278  00641C  0100               	movlb	0	; () banked
  9279  00641E  6D62               	negf	___awmod@divisor& (0+255),b
  9280  006420  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  9281  006422  B0D8               	btfsc	status,0,c
  9282  006424  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  9283  006426                     l10981:
  9284                           
  9285                           ; BSR set to: 0
  9286  006426  0100               	movlb	0	; () banked
  9287  006428  5162               	movf	___awmod@divisor& (0+255),w,b
  9288  00642A  0100               	movlb	0	; () banked
  9289  00642C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9290  00642E  B4D8               	btfsc	status,2,c
  9291  006430  D026               	goto	l10997
  9292                           
  9293                           ; BSR set to: 0
  9294  006432  0E01               	movlw	1
  9295  006434  0100               	movlb	0	; () banked
  9296  006436  6F64               	movwf	___awmod@counter& (0+255),b
  9297  006438  D006               	goto	l10987
  9298  00643A                     l10985:
  9299                           
  9300                           ; BSR set to: 0
  9301  00643A  0100               	movlb	0	; () banked
  9302  00643C  90D8               	bcf	status,0,c
  9303  00643E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  9304  006440  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9305  006442  0100               	movlb	0	; () banked
  9306  006444  2B64               	incf	___awmod@counter& (0+255),f,b
  9307  006446                     l10987:
  9308                           
  9309                           ; BSR set to: 0
  9310  006446  0100               	movlb	0	; () banked
  9311  006448  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9312  00644A  D7F7               	goto	l10985
  9313  00644C                     l10989:
  9314                           
  9315                           ; BSR set to: 0
  9316  00644C  0100               	movlb	0	; () banked
  9317  00644E  5162               	movf	___awmod@divisor& (0+255),w,b
  9318  006450  0100               	movlb	0	; () banked
  9319  006452  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9320  006454  0100               	movlb	0	; () banked
  9321  006456  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9322  006458  0100               	movlb	0	; () banked
  9323  00645A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9324  00645C  A0D8               	btfss	status,0,c
  9325  00645E  D008               	goto	l10993
  9326                           
  9327                           ; BSR set to: 0
  9328  006460  0100               	movlb	0	; () banked
  9329  006462  5162               	movf	___awmod@divisor& (0+255),w,b
  9330  006464  0100               	movlb	0	; () banked
  9331  006466  5F60               	subwf	___awmod@dividend& (0+255),f,b
  9332  006468  0100               	movlb	0	; () banked
  9333  00646A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9334  00646C  0100               	movlb	0	; () banked
  9335  00646E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9336  006470                     l10993:
  9337                           
  9338                           ; BSR set to: 0
  9339  006470  0100               	movlb	0	; () banked
  9340  006472  90D8               	bcf	status,0,c
  9341  006474  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9342  006476  3362               	rrcf	___awmod@divisor& (0+255),f,b
  9343                           
  9344                           ; BSR set to: 0
  9345  006478  0100               	movlb	0	; () banked
  9346  00647A  2F64               	decfsz	___awmod@counter& (0+255),f,b
  9347  00647C  D7E7               	goto	l10989
  9348  00647E                     l10997:
  9349                           
  9350                           ; BSR set to: 0
  9351  00647E  0100               	movlb	0	; () banked
  9352  006480  5165               	movf	___awmod@sign& (0+255),w,b
  9353  006482  0100               	movlb	0	; () banked
  9354  006484  B4D8               	btfsc	status,2,c
  9355  006486  D005               	goto	l11001
  9356                           
  9357                           ; BSR set to: 0
  9358  006488  0100               	movlb	0	; () banked
  9359  00648A  6D60               	negf	___awmod@dividend& (0+255),b
  9360  00648C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9361  00648E  B0D8               	btfsc	status,0,c
  9362  006490  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9363  006492                     l11001:
  9364                           
  9365                           ; BSR set to: 0
  9366  006492  C060  F060         	movff	___awmod@dividend,?___awmod
  9367  006496  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  9368  00649A  0012               	return	
  9369  00649C                     __end_of___awmod:
  9370                           	opt stack 0
  9371                           tblptru	equ	0xFF8
  9372                           tblptrh	equ	0xFF7
  9373                           tblptrl	equ	0xFF6
  9374                           tablat	equ	0xFF5
  9375                           prodh	equ	0xFF4
  9376                           prodl	equ	0xFF3
  9377                           intcon	equ	0xFF2
  9378                           postinc0	equ	0xFEE
  9379                           wreg	equ	0xFE8
  9380                           postdec1	equ	0xFE5
  9381                           plusw1	equ	0xFE3
  9382                           fsr1h	equ	0xFE2
  9383                           fsr1l	equ	0xFE1
  9384                           indf2	equ	0xFDF
  9385                           postinc2	equ	0xFDE
  9386                           postdec2	equ	0xFDD
  9387                           plusw2	equ	0xFDB
  9388                           fsr2h	equ	0xFDA
  9389                           fsr2l	equ	0xFD9
  9390                           status	equ	0xFD8
  9391                           
  9392 ;; *************** function _lcd_show_string_l1 *****************
  9393 ;; Defined at:
  9394 ;;		line 545 in file "src/driver/lcd.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;  str             2   19[BANK0 ] PTR unsigned char 
  9397 ;;		 -> ui_disp_xfloat_pt@buf(10), ui_disp_start_cs600@buf(6), 
  9398 ;; Auto vars:     Size  Location     Type
  9399 ;;  t8              1   21[BANK0 ] unsigned char 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  1    wreg      void 
  9402 ;; Registers used:
  9403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;Total ram usage:        3 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; Hardware stack levels required when called:    8
  9416 ;; This function calls:
  9417 ;;		_lcd_show_chr
  9418 ;; This function is called by:
  9419 ;;		_ui_disp_start_cs600
  9420 ;;		_ui_disp_xfloat_pt
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text49
  9425  007B72                     __ptext49:
  9426                           	opt stack 0
  9427  007B72                     _lcd_show_string_l1:
  9428                           	opt stack 21
  9429                           
  9430                           ;lcd.c: 547: uint8_t t8=0;
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;incstack = 0
  9434  007B72  0E00               	movlw	0
  9435  007B74  0100               	movlb	0	; () banked
  9436  007B76  6F75               	movwf	lcd_show_string_l1@t8& (0+255),b
  9437                           
  9438                           ;lcd.c: 548: while(*str!='\0' && t8<4){
  9439  007B78  D011               	goto	l11039
  9440  007B7A                     l11033:
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;lcd.c: 549: lcd_show_chr(t8+4,*str);
  9444  007B7A  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  9445  007B7E  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  9446  007B82  50DF               	movf	indf2,w,c
  9447  007B84  0100               	movlb	0	; () banked
  9448  007B86  6F70               	movwf	lcd_show_chr@chr& (0+255),b
  9449  007B88  0100               	movlb	0	; () banked
  9450  007B8A  5175               	movf	lcd_show_string_l1@t8& (0+255),w,b
  9451  007B8C  0F04               	addlw	4
  9452  007B8E  EC1E  F034         	call	_lcd_show_chr
  9453                           
  9454                           ;lcd.c: 550: str++;
  9455  007B92  0100               	movlb	0	; () banked
  9456  007B94  4B73               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  9457  007B96  2B74               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;lcd.c: 551: t8++;
  9461  007B98  0100               	movlb	0	; () banked
  9462  007B9A  2B75               	incf	lcd_show_string_l1@t8& (0+255),f,b
  9463  007B9C                     l11039:
  9464                           
  9465                           ; BSR set to: 0
  9466  007B9C  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  9467  007BA0  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  9468  007BA4  50DF               	movf	indf2,w,c
  9469  007BA6  B4D8               	btfsc	status,2,c
  9470  007BA8  0012               	return	
  9471                           
  9472                           ; BSR set to: 0
  9473  007BAA  0E03               	movlw	3
  9474  007BAC  0100               	movlb	0	; () banked
  9475  007BAE  6575               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  9476  007BB0  D7E4               	goto	l11033
  9477  007BB2  0012               	return	
  9478  007BB4                     __end_of_lcd_show_string_l1:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           intcon	equ	0xFF2
  9487                           postinc0	equ	0xFEE
  9488                           wreg	equ	0xFE8
  9489                           postdec1	equ	0xFE5
  9490                           plusw1	equ	0xFE3
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           postinc2	equ	0xFDE
  9495                           postdec2	equ	0xFDD
  9496                           plusw2	equ	0xFDB
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           
  9501 ;; *************** function _lcd_show_string_l0 *****************
  9502 ;; Defined at:
  9503 ;;		line 535 in file "src/driver/lcd.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  str             2   19[BANK0 ] PTR unsigned char 
  9506 ;;		 -> ui_disp_xfloat_pt@buf(10), STR_1(5), 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  t8              1   21[BANK0 ] unsigned char 
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;Total ram usage:        3 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:    8
  9525 ;; This function calls:
  9526 ;;		_lcd_show_chr
  9527 ;; This function is called by:
  9528 ;;		_ui_disp_start_cs600
  9529 ;;		_ui_disp_xfloat_pt
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text50
  9534  0070C2                     __ptext50:
  9535                           	opt stack 0
  9536  0070C2                     _lcd_show_string_l0:
  9537                           	opt stack 21
  9538                           
  9539                           ;lcd.c: 537: uint8_t t8=0;
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;incstack = 0
  9543  0070C2  0E00               	movlw	0
  9544  0070C4  0100               	movlb	0	; () banked
  9545  0070C6  6F75               	movwf	lcd_show_string_l0@t8& (0+255),b
  9546                           
  9547                           ;lcd.c: 538: while(*str!='\0' && t8<4){
  9548  0070C8  D01B               	goto	l11027
  9549  0070CA                     l11021:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;lcd.c: 539: lcd_show_chr(t8,*str);
  9553  0070CA  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  9554  0070CE  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  9555  0070D2  6AF8               	clrf	tblptru,c
  9556  0070D4  0E0F               	movlw	(high __ramtop+-1)
  9557  0070D6  64F7               	cpfsgt	tblptrh,c
  9558  0070D8  D003               	bra	u9437
  9559  0070DA  0008               	tblrd		*
  9560  0070DC  50F5               	movf	tablat,w,c
  9561  0070DE  D005               	bra	u9430
  9562  0070E0                     u9437:
  9563  0070E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  9564  0070E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  9565  0070E8  50EF               	movf	indf0,w,c
  9566  0070EA                     u9430:
  9567  0070EA  0100               	movlb	0	; () banked
  9568  0070EC  6F70               	movwf	lcd_show_chr@chr& (0+255),b
  9569  0070EE  0100               	movlb	0	; () banked
  9570  0070F0  5175               	movf	lcd_show_string_l0@t8& (0+255),w,b
  9571  0070F2  EC1E  F034         	call	_lcd_show_chr
  9572                           
  9573                           ;lcd.c: 540: str++;
  9574  0070F6  0100               	movlb	0	; () banked
  9575  0070F8  4B73               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  9576  0070FA  2B74               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;lcd.c: 541: t8++;
  9580  0070FC  0100               	movlb	0	; () banked
  9581  0070FE  2B75               	incf	lcd_show_string_l0@t8& (0+255),f,b
  9582  007100                     l11027:
  9583                           
  9584                           ; BSR set to: 0
  9585  007100  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  9586  007104  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  9587  007108  6AF8               	clrf	tblptru,c
  9588  00710A  0E0F               	movlw	(high __ramtop+-1)
  9589  00710C  64F7               	cpfsgt	tblptrh,c
  9590  00710E  D003               	bra	u9447
  9591  007110  0008               	tblrd		*
  9592  007112  50F5               	movf	tablat,w,c
  9593  007114  D005               	bra	u9440
  9594  007116                     u9447:
  9595  007116  CFF6 FFE9          	movff	tblptrl,fsr0l
  9596  00711A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9597  00711E  50EF               	movf	indf0,w,c
  9598  007120                     u9440:
  9599  007120  0900               	iorlw	0
  9600  007122  B4D8               	btfsc	status,2,c
  9601  007124  0012               	return	
  9602  007126  0E03               	movlw	3
  9603  007128  0100               	movlb	0	; () banked
  9604  00712A  6575               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  9605  00712C  D7CE               	goto	l11021
  9606  00712E  0012               	return	
  9607  007130                     __end_of_lcd_show_string_l0:
  9608                           	opt stack 0
  9609                           tblptru	equ	0xFF8
  9610                           tblptrh	equ	0xFF7
  9611                           tblptrl	equ	0xFF6
  9612                           tablat	equ	0xFF5
  9613                           prodh	equ	0xFF4
  9614                           prodl	equ	0xFF3
  9615                           intcon	equ	0xFF2
  9616                           indf0	equ	0xFEF
  9617                           postinc0	equ	0xFEE
  9618                           fsr0h	equ	0xFEA
  9619                           fsr0l	equ	0xFE9
  9620                           wreg	equ	0xFE8
  9621                           postdec1	equ	0xFE5
  9622                           plusw1	equ	0xFE3
  9623                           fsr1h	equ	0xFE2
  9624                           fsr1l	equ	0xFE1
  9625                           indf2	equ	0xFDF
  9626                           postinc2	equ	0xFDE
  9627                           postdec2	equ	0xFDD
  9628                           plusw2	equ	0xFDB
  9629                           fsr2h	equ	0xFDA
  9630                           fsr2l	equ	0xFD9
  9631                           status	equ	0xFD8
  9632                           
  9633 ;; *************** function _ui_disp_clear_num_dp *****************
  9634 ;; Defined at:
  9635 ;;		line 161 in file "src/api/ui.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    9
  9656 ;; This function calls:
  9657 ;;		_lcd_show_dp
  9658 ;;		_lcd_show_string
  9659 ;; This function is called by:
  9660 ;;		_ui_disp_adj_xfixed_pt
  9661 ;;		_ui_disp_menu_home_00
  9662 ;;		_ui_disp_menu_home_01
  9663 ;;		_ui_disp_menu_home_02
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text51
  9668  00776A                     __ptext51:
  9669                           	opt stack 0
  9670  00776A                     _ui_disp_clear_num_dp:
  9671                           	opt stack 16
  9672                           
  9673                           ;ui.c: 163: lcd_show_string((uint8_t*)"        ");
  9674                           
  9675                           ;incstack = 0
  9676  00776A  0EEC               	movlw	low STR_2
  9677  00776C  0100               	movlb	0	; () banked
  9678  00776E  6F73               	movwf	lcd_show_string@str& (0+255),b
  9679  007770  0EF3               	movlw	high STR_2
  9680  007772  0100               	movlb	0	; () banked
  9681  007774  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
  9682  007776  EC98  F038         	call	_lcd_show_string	;wreg free
  9683                           
  9684                           ;ui.c: 164: lcd_show_dp(0,0);
  9685  00777A  0E00               	movlw	0
  9686  00777C  0100               	movlb	0	; () banked
  9687  00777E  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9688  007780  0E00               	movlw	0
  9689  007782  ECCF  F038         	call	_lcd_show_dp
  9690                           
  9691                           ;ui.c: 165: lcd_show_dp(1,0);
  9692  007786  0E00               	movlw	0
  9693  007788  0100               	movlb	0	; () banked
  9694  00778A  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9695  00778C  0E01               	movlw	1
  9696  00778E  ECCF  F038         	call	_lcd_show_dp
  9697                           
  9698                           ;ui.c: 166: lcd_show_dp(2,0);
  9699  007792  0E00               	movlw	0
  9700  007794  0100               	movlb	0	; () banked
  9701  007796  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9702  007798  0E02               	movlw	2
  9703  00779A  ECCF  F038         	call	_lcd_show_dp
  9704                           
  9705                           ;ui.c: 167: lcd_show_dp(4,0);
  9706  00779E  0E00               	movlw	0
  9707  0077A0  0100               	movlb	0	; () banked
  9708  0077A2  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9709  0077A4  0E04               	movlw	4
  9710  0077A6  ECCF  F038         	call	_lcd_show_dp
  9711                           
  9712                           ;ui.c: 168: lcd_show_dp(5,0);
  9713  0077AA  0E00               	movlw	0
  9714  0077AC  0100               	movlb	0	; () banked
  9715  0077AE  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9716  0077B0  0E05               	movlw	5
  9717  0077B2  ECCF  F038         	call	_lcd_show_dp
  9718                           
  9719                           ;ui.c: 169: lcd_show_dp(6,0);
  9720  0077B6  0E00               	movlw	0
  9721  0077B8  0100               	movlb	0	; () banked
  9722  0077BA  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9723  0077BC  0E06               	movlw	6
  9724  0077BE  ECCF  F038         	call	_lcd_show_dp
  9725  0077C2  0012               	return		;funcret
  9726  0077C4                     __end_of_ui_disp_clear_num_dp:
  9727                           	opt stack 0
  9728                           tblptru	equ	0xFF8
  9729                           tblptrh	equ	0xFF7
  9730                           tblptrl	equ	0xFF6
  9731                           tablat	equ	0xFF5
  9732                           prodh	equ	0xFF4
  9733                           prodl	equ	0xFF3
  9734                           intcon	equ	0xFF2
  9735                           indf0	equ	0xFEF
  9736                           postinc0	equ	0xFEE
  9737                           fsr0h	equ	0xFEA
  9738                           fsr0l	equ	0xFE9
  9739                           wreg	equ	0xFE8
  9740                           postdec1	equ	0xFE5
  9741                           plusw1	equ	0xFE3
  9742                           fsr1h	equ	0xFE2
  9743                           fsr1l	equ	0xFE1
  9744                           indf2	equ	0xFDF
  9745                           postinc2	equ	0xFDE
  9746                           postdec2	equ	0xFDD
  9747                           plusw2	equ	0xFDB
  9748                           fsr2h	equ	0xFDA
  9749                           fsr2l	equ	0xFD9
  9750                           status	equ	0xFD8
  9751                           
  9752 ;; *************** function _lcd_show_string *****************
  9753 ;; Defined at:
  9754 ;;		line 555 in file "src/driver/lcd.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  str             2   19[BANK0 ] PTR unsigned char 
  9757 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  t8              1   21[BANK0 ] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;Total ram usage:        3 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    8
  9776 ;; This function calls:
  9777 ;;		_lcd_show_chr
  9778 ;; This function is called by:
  9779 ;;		_ui_disp_clear_num_dp
  9780 ;;		_ui_disp_adj_xfixed_pt
  9781 ;;		_ui_disp_rtc_mm_ss
  9782 ;;		_ui_disp_adj_xfloat_pt
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text52
  9787  007130                     __ptext52:
  9788                           	opt stack 0
  9789  007130                     _lcd_show_string:
  9790                           	opt stack 16
  9791                           
  9792                           ;lcd.c: 557: uint8_t t8=0;
  9793                           
  9794                           ;incstack = 0
  9795  007130  0E00               	movlw	0
  9796  007132  0100               	movlb	0	; () banked
  9797  007134  6F75               	movwf	lcd_show_string@t8& (0+255),b
  9798                           
  9799                           ;lcd.c: 558: while(*str!='\0' && t8<8){
  9800  007136  D01B               	goto	l10757
  9801  007138                     l10751:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;lcd.c: 559: lcd_show_chr(t8,*str);
  9805  007138  C073  FFF6         	movff	lcd_show_string@str,tblptrl
  9806  00713C  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
  9807  007140  6AF8               	clrf	tblptru,c
  9808  007142  0E0F               	movlw	(high __ramtop+-1)
  9809  007144  64F7               	cpfsgt	tblptrh,c
  9810  007146  D003               	bra	u9247
  9811  007148  0008               	tblrd		*
  9812  00714A  50F5               	movf	tablat,w,c
  9813  00714C  D005               	bra	u9240
  9814  00714E                     u9247:
  9815  00714E  CFF6 FFE9          	movff	tblptrl,fsr0l
  9816  007152  CFF7 FFEA          	movff	tblptrh,fsr0h
  9817  007156  50EF               	movf	indf0,w,c
  9818  007158                     u9240:
  9819  007158  0100               	movlb	0	; () banked
  9820  00715A  6F70               	movwf	lcd_show_chr@chr& (0+255),b
  9821  00715C  0100               	movlb	0	; () banked
  9822  00715E  5175               	movf	lcd_show_string@t8& (0+255),w,b
  9823  007160  EC1E  F034         	call	_lcd_show_chr
  9824                           
  9825                           ;lcd.c: 560: str++;
  9826  007164  0100               	movlb	0	; () banked
  9827  007166  4B73               	infsnz	lcd_show_string@str& (0+255),f,b
  9828  007168  2B74               	incf	(lcd_show_string@str+1)& (0+255),f,b
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;lcd.c: 561: t8++;
  9832  00716A  0100               	movlb	0	; () banked
  9833  00716C  2B75               	incf	lcd_show_string@t8& (0+255),f,b
  9834  00716E                     l10757:
  9835                           
  9836                           ; BSR set to: 0
  9837  00716E  C073  FFF6         	movff	lcd_show_string@str,tblptrl
  9838  007172  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
  9839  007176  6AF8               	clrf	tblptru,c
  9840  007178  0E0F               	movlw	(high __ramtop+-1)
  9841  00717A  64F7               	cpfsgt	tblptrh,c
  9842  00717C  D003               	bra	u9257
  9843  00717E  0008               	tblrd		*
  9844  007180  50F5               	movf	tablat,w,c
  9845  007182  D005               	bra	u9250
  9846  007184                     u9257:
  9847  007184  CFF6 FFE9          	movff	tblptrl,fsr0l
  9848  007188  CFF7 FFEA          	movff	tblptrh,fsr0h
  9849  00718C  50EF               	movf	indf0,w,c
  9850  00718E                     u9250:
  9851  00718E  0900               	iorlw	0
  9852  007190  B4D8               	btfsc	status,2,c
  9853  007192  0012               	return	
  9854  007194  0E07               	movlw	7
  9855  007196  0100               	movlb	0	; () banked
  9856  007198  6575               	cpfsgt	lcd_show_string@t8& (0+255),b
  9857  00719A  D7CE               	goto	l10751
  9858  00719C  0012               	return	
  9859  00719E                     __end_of_lcd_show_string:
  9860                           	opt stack 0
  9861                           tblptru	equ	0xFF8
  9862                           tblptrh	equ	0xFF7
  9863                           tblptrl	equ	0xFF6
  9864                           tablat	equ	0xFF5
  9865                           prodh	equ	0xFF4
  9866                           prodl	equ	0xFF3
  9867                           intcon	equ	0xFF2
  9868                           indf0	equ	0xFEF
  9869                           postinc0	equ	0xFEE
  9870                           fsr0h	equ	0xFEA
  9871                           fsr0l	equ	0xFE9
  9872                           wreg	equ	0xFE8
  9873                           postdec1	equ	0xFE5
  9874                           plusw1	equ	0xFE3
  9875                           fsr1h	equ	0xFE2
  9876                           fsr1l	equ	0xFE1
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           plusw2	equ	0xFDB
  9881                           fsr2h	equ	0xFDA
  9882                           fsr2l	equ	0xFD9
  9883                           status	equ	0xFD8
  9884                           
  9885 ;; *************** function _lcd_show_chr *****************
  9886 ;; Defined at:
  9887 ;;		line 510 in file "src/driver/lcd.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  loc             1    wreg     unsigned char 
  9890 ;;  chr             1   16[BANK0 ] unsigned char 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  loc             1   17[BANK0 ] unsigned char 
  9893 ;;  code            1   18[BANK0 ] unsigned char 
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9903 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;Total ram usage:        3 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    7
  9910 ;; This function calls:
  9911 ;;		_lcd_disp_chr_loc_0
  9912 ;;		_lcd_disp_chr_loc_1
  9913 ;;		_lcd_disp_chr_loc_2
  9914 ;;		_lcd_disp_chr_loc_3
  9915 ;;		_lcd_disp_chr_loc_4
  9916 ;;		_lcd_disp_chr_loc_5
  9917 ;;		_lcd_disp_chr_loc_6
  9918 ;;		_lcd_disp_chr_loc_7
  9919 ;;		_lcd_disp_get_code
  9920 ;; This function is called by:
  9921 ;;		_lcd_show_string_l0
  9922 ;;		_lcd_show_string_l1
  9923 ;;		_lcd_show_string
  9924 ;;		_lcd_show_chr_lc
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text53
  9929  00683C                     __ptext53:
  9930                           	opt stack 0
  9931  00683C                     _lcd_show_chr:
  9932                           	opt stack 21
  9933                           
  9934                           ;incstack = 0
  9935                           ;lcd_show_chr@loc stored from wreg
  9936  00683C  0100               	movlb	0	; () banked
  9937  00683E  6F71               	movwf	lcd_show_chr@loc& (0+255),b
  9938                           
  9939                           ;lcd.c: 512: uint8_t code=lcd_disp_get_code(chr);
  9940  006840  0100               	movlb	0	; () banked
  9941  006842  5170               	movf	lcd_show_chr@chr& (0+255),w,b
  9942  006844  ECCE  F03A         	call	_lcd_disp_get_code
  9943  006848  0100               	movlb	0	; () banked
  9944  00684A  6F72               	movwf	lcd_show_chr@code& (0+255),b
  9945                           
  9946                           ;lcd.c: 513: switch(loc){
  9947  00684C  D028               	goto	l10729
  9948  00684E                     l10711:
  9949                           
  9950                           ; BSR set to: 0
  9951  00684E  0100               	movlb	0	; () banked
  9952  006850  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9953  006852  EC62  F036         	call	_lcd_disp_chr_loc_0
  9954  006856  0012               	return	
  9955  006858                     l10713:
  9956  006858  0100               	movlb	0	; () banked
  9957  00685A  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9958  00685C  EC1A  F036         	call	_lcd_disp_chr_loc_1
  9959  006860  0012               	return	
  9960  006862                     l10715:
  9961  006862  0100               	movlb	0	; () banked
  9962  006864  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9963  006866  ECD2  F035         	call	_lcd_disp_chr_loc_2
  9964  00686A  0012               	return	
  9965  00686C                     l10717:
  9966  00686C  0100               	movlb	0	; () banked
  9967  00686E  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9968  006870  EC8A  F035         	call	_lcd_disp_chr_loc_3
  9969  006874  0012               	return	
  9970  006876                     l10719:
  9971  006876  0100               	movlb	0	; () banked
  9972  006878  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9973  00687A  EC42  F035         	call	_lcd_disp_chr_loc_4
  9974  00687E  0012               	return	
  9975  006880                     l10721:
  9976  006880  0100               	movlb	0	; () banked
  9977  006882  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9978  006884  ECFA  F034         	call	_lcd_disp_chr_loc_5
  9979  006888  0012               	return	
  9980  00688A                     l10723:
  9981  00688A  0100               	movlb	0	; () banked
  9982  00688C  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9983  00688E  ECB2  F034         	call	_lcd_disp_chr_loc_6
  9984  006892  0012               	return	
  9985  006894                     l10725:
  9986  006894  0100               	movlb	0	; () banked
  9987  006896  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9988  006898  EC6A  F034         	call	_lcd_disp_chr_loc_7
  9989                           
  9990                           ;lcd.c: 523: }
  9991                           
  9992                           ;lcd.c: 522: default:break;
  9993  00689C  0012               	return	
  9994  00689E                     l10729:
  9995  00689E  0100               	movlb	0	; () banked
  9996  0068A0  5171               	movf	lcd_show_chr@loc& (0+255),w,b
  9997                           
  9998                           ; Switch size 1, requested type "space"
  9999                           ; Number of cases is 8, Range of values is 0 to 7
 10000                           ; switch strategies available:
 10001                           ; Name         Instructions Cycles
 10002                           ; simple_byte           25    13 (average)
 10003                           ;	Chosen strategy is simple_byte
 10004  0068A2  0A00               	xorlw	0	; case 0
 10005  0068A4  B4D8               	btfsc	status,2,c
 10006  0068A6  D7D3               	goto	l10711
 10007  0068A8  0A01               	xorlw	1	; case 1
 10008  0068AA  B4D8               	btfsc	status,2,c
 10009  0068AC  D7D5               	goto	l10713
 10010  0068AE  0A03               	xorlw	3	; case 2
 10011  0068B0  B4D8               	btfsc	status,2,c
 10012  0068B2  D7D7               	goto	l10715
 10013  0068B4  0A01               	xorlw	1	; case 3
 10014  0068B6  B4D8               	btfsc	status,2,c
 10015  0068B8  D7D9               	goto	l10717
 10016  0068BA  0A07               	xorlw	7	; case 4
 10017  0068BC  B4D8               	btfsc	status,2,c
 10018  0068BE  D7DB               	goto	l10719
 10019  0068C0  0A01               	xorlw	1	; case 5
 10020  0068C2  B4D8               	btfsc	status,2,c
 10021  0068C4  D7DD               	goto	l10721
 10022  0068C6  0A03               	xorlw	3	; case 6
 10023  0068C8  B4D8               	btfsc	status,2,c
 10024  0068CA  D7DF               	goto	l10723
 10025  0068CC  0A01               	xorlw	1	; case 7
 10026  0068CE  A4D8               	btfss	status,2,c
 10027  0068D0  0012               	return	
 10028  0068D2  D7E0               	goto	l10725
 10029  0068D4                     __end_of_lcd_show_chr:
 10030                           	opt stack 0
 10031                           tblptru	equ	0xFF8
 10032                           tblptrh	equ	0xFF7
 10033                           tblptrl	equ	0xFF6
 10034                           tablat	equ	0xFF5
 10035                           prodh	equ	0xFF4
 10036                           prodl	equ	0xFF3
 10037                           intcon	equ	0xFF2
 10038                           indf0	equ	0xFEF
 10039                           postinc0	equ	0xFEE
 10040                           fsr0h	equ	0xFEA
 10041                           fsr0l	equ	0xFE9
 10042                           wreg	equ	0xFE8
 10043                           postdec1	equ	0xFE5
 10044                           plusw1	equ	0xFE3
 10045                           fsr1h	equ	0xFE2
 10046                           fsr1l	equ	0xFE1
 10047                           indf2	equ	0xFDF
 10048                           postinc2	equ	0xFDE
 10049                           postdec2	equ	0xFDD
 10050                           plusw2	equ	0xFDB
 10051                           fsr2h	equ	0xFDA
 10052                           fsr2l	equ	0xFD9
 10053                           status	equ	0xFD8
 10054                           
 10055 ;; *************** function _lcd_disp_get_code *****************
 10056 ;; Defined at:
 10057 ;;		line 472 in file "src/driver/lcd.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  chr             1    wreg     unsigned char 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  chr             1    0[BANK0 ] unsigned char 
 10062 ;;  i               1    2[BANK0 ] unsigned char 
 10063 ;;  ret             1    1[BANK0 ] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      unsigned char 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;Total ram usage:        3 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; Hardware stack levels required when called:    4
 10080 ;; This function calls:
 10081 ;;		Nothing
 10082 ;; This function is called by:
 10083 ;;		_lcd_show_chr
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           	psect	text54
 10088  00759C                     __ptext54:
 10089                           	opt stack 0
 10090  00759C                     _lcd_disp_get_code:
 10091                           	opt stack 23
 10092                           
 10093                           ;incstack = 0
 10094                           ;lcd_disp_get_code@chr stored from wreg
 10095  00759C  0100               	movlb	0	; () banked
 10096  00759E  6F60               	movwf	lcd_disp_get_code@chr& (0+255),b
 10097                           
 10098                           ;lcd.c: 474: uint8_t i;
 10099                           ;lcd.c: 475: uint8_t ret;
 10100                           ;lcd.c: 476: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
 10101  0075A0  0E00               	movlw	0
 10102  0075A2  0100               	movlb	0	; () banked
 10103  0075A4  6F62               	movwf	lcd_disp_get_code@i& (0+255),b
 10104  0075A6                     l10621:
 10105                           
 10106                           ; BSR set to: 0
 10107  0075A6  0E28               	movlw	40
 10108  0075A8  0100               	movlb	0	; () banked
 10109  0075AA  6562               	cpfsgt	lcd_disp_get_code@i& (0+255),b
 10110  0075AC  D001               	goto	l10625
 10111  0075AE  D012               	goto	l10633
 10112  0075B0                     l10625:
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;lcd.c: 477: if(chr==LCDDigitalIndexTable[i])break;
 10116  0075B0  0100               	movlb	0	; () banked
 10117  0075B2  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 10118  0075B4  0D01               	mullw	1
 10119  0075B6  0E8B               	movlw	low _LCDDigitalIndexTable
 10120  0075B8  24F3               	addwf	prodl,w,c
 10121  0075BA  6EF6               	movwf	tblptrl,c
 10122  0075BC  0EEF               	movlw	high _LCDDigitalIndexTable
 10123  0075BE  20F4               	addwfc	prodh,w,c
 10124  0075C0  6EF7               	movwf	tblptrh,c
 10125  0075C2                     	if	0	;There are less than 3 active tblptr bytes
 10126  0075C2                     	endif
 10127  0075C2  0008               	tblrd		*
 10128  0075C4  50F5               	movf	tablat,w,c
 10129  0075C6  0100               	movlb	0	; () banked
 10130  0075C8  1960               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
 10131  0075CA  B4D8               	btfsc	status,2,c
 10132  0075CC  D003               	goto	l10633
 10133                           
 10134                           ; BSR set to: 0
 10135                           
 10136                           ; BSR set to: 0
 10137                           
 10138                           ; BSR set to: 0
 10139  0075CE  0100               	movlb	0	; () banked
 10140  0075D0  2B62               	incf	lcd_disp_get_code@i& (0+255),f,b
 10141  0075D2  D7E9               	goto	l10621
 10142  0075D4                     l10633:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;lcd.c: 478: }
 10146                           ;lcd.c: 479: if(i<sizeof(LCDDigitalIndexTable)){
 10147  0075D4  0E29               	movlw	41
 10148  0075D6  0100               	movlb	0	; () banked
 10149  0075D8  6162               	cpfslt	lcd_disp_get_code@i& (0+255),b
 10150  0075DA  D00C               	goto	l10637
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;lcd.c: 480: ret= LCDDigitalTable[i];
 10154  0075DC  0100               	movlb	0	; () banked
 10155  0075DE  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 10156  0075E0  0D01               	mullw	1
 10157  0075E2  0EB4               	movlw	low _LCDDigitalTable
 10158  0075E4  24F3               	addwf	prodl,w,c
 10159  0075E6  6EF6               	movwf	tblptrl,c
 10160  0075E8  0EEF               	movlw	high _LCDDigitalTable
 10161  0075EA  20F4               	addwfc	prodh,w,c
 10162  0075EC  6EF7               	movwf	tblptrh,c
 10163  0075EE                     	if	0	;There are less than 3 active tblptr bytes
 10164  0075EE                     	endif
 10165  0075EE  0008               	tblrd		*
 10166  0075F0  CFF5 F061          	movff	tablat,lcd_disp_get_code@ret
 10167  0075F4                     l10637:
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;lcd.c: 481: }
 10171                           ;lcd.c: 482: return ret;
 10172  0075F4  0100               	movlb	0	; () banked
 10173  0075F6  5161               	movf	lcd_disp_get_code@ret& (0+255),w,b
 10174  0075F8  0012               	return	
 10175  0075FA                     __end_of_lcd_disp_get_code:
 10176                           	opt stack 0
 10177                           tblptru	equ	0xFF8
 10178                           tblptrh	equ	0xFF7
 10179                           tblptrl	equ	0xFF6
 10180                           tablat	equ	0xFF5
 10181                           prodh	equ	0xFF4
 10182                           prodl	equ	0xFF3
 10183                           intcon	equ	0xFF2
 10184                           indf0	equ	0xFEF
 10185                           postinc0	equ	0xFEE
 10186                           fsr0h	equ	0xFEA
 10187                           fsr0l	equ	0xFE9
 10188                           wreg	equ	0xFE8
 10189                           postdec1	equ	0xFE5
 10190                           plusw1	equ	0xFE3
 10191                           fsr1h	equ	0xFE2
 10192                           fsr1l	equ	0xFE1
 10193                           indf2	equ	0xFDF
 10194                           postinc2	equ	0xFDE
 10195                           postdec2	equ	0xFDD
 10196                           plusw2	equ	0xFDB
 10197                           fsr2h	equ	0xFDA
 10198                           fsr2l	equ	0xFD9
 10199                           status	equ	0xFD8
 10200                           
 10201 ;; *************** function _lcd_disp_chr_loc_7 *****************
 10202 ;; Defined at:
 10203 ;;		line 353 in file "src/driver/lcd.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  code            1    wreg     unsigned char 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  code            1   31[COMRAM] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        1 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    6
 10224 ;; This function calls:
 10225 ;;		_lcd_set_com_seg
 10226 ;; This function is called by:
 10227 ;;		_lcd_show_chr
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           	psect	text55
 10232  0068D4                     __ptext55:
 10233                           	opt stack 0
 10234  0068D4                     _lcd_disp_chr_loc_7:
 10235                           	opt stack 21
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;incstack = 0
 10239                           ;lcd_disp_chr_loc_7@code stored from wreg
 10240  0068D4  6E20               	movwf	lcd_disp_chr_loc_7@code,c
 10241                           
 10242                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
 10243  0068D6  0E13               	movlw	19
 10244  0068D8  0100               	movlb	0	; () banked
 10245  0068DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10246  0068DC  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10247  0068DE  0B08               	andlw	8
 10248  0068E0  0100               	movlb	0	; () banked
 10249  0068E2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10250  0068E4  0E00               	movlw	0
 10251  0068E6  EC02  F02E         	call	_lcd_set_com_seg
 10252                           
 10253                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
 10254  0068EA  0E13               	movlw	19
 10255  0068EC  0100               	movlb	0	; () banked
 10256  0068EE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10257  0068F0  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10258  0068F2  0B10               	andlw	16
 10259  0068F4  0100               	movlb	0	; () banked
 10260  0068F6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10261  0068F8  0E01               	movlw	1
 10262  0068FA  EC02  F02E         	call	_lcd_set_com_seg
 10263                           
 10264                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
 10265  0068FE  0E13               	movlw	19
 10266  006900  0100               	movlb	0	; () banked
 10267  006902  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10268  006904  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10269  006906  0B20               	andlw	32
 10270  006908  0100               	movlb	0	; () banked
 10271  00690A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10272  00690C  0E02               	movlw	2
 10273  00690E  EC02  F02E         	call	_lcd_set_com_seg
 10274                           
 10275                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
 10276  006912  0E13               	movlw	19
 10277  006914  0100               	movlb	0	; () banked
 10278  006916  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10279  006918  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10280  00691A  0B01               	andlw	1
 10281  00691C  0100               	movlb	0	; () banked
 10282  00691E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10283  006920  0E03               	movlw	3
 10284  006922  EC02  F02E         	call	_lcd_set_com_seg
 10285                           
 10286                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
 10287  006926  0E28               	movlw	40
 10288  006928  0100               	movlb	0	; () banked
 10289  00692A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10290  00692C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10291  00692E  0B04               	andlw	4
 10292  006930  0100               	movlb	0	; () banked
 10293  006932  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10294  006934  0E01               	movlw	1
 10295  006936  EC02  F02E         	call	_lcd_set_com_seg
 10296                           
 10297                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
 10298  00693A  0E28               	movlw	40
 10299  00693C  0100               	movlb	0	; () banked
 10300  00693E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10301  006940  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10302  006942  0B40               	andlw	64
 10303  006944  0100               	movlb	0	; () banked
 10304  006946  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10305  006948  0E02               	movlw	2
 10306  00694A  EC02  F02E         	call	_lcd_set_com_seg
 10307                           
 10308                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
 10309  00694E  0E28               	movlw	40
 10310  006950  0100               	movlb	0	; () banked
 10311  006952  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10312  006954  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 10313  006956  0B02               	andlw	2
 10314  006958  0100               	movlb	0	; () banked
 10315  00695A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10316  00695C  0E03               	movlw	3
 10317  00695E  EC02  F02E         	call	_lcd_set_com_seg
 10318  006962  0012               	return		;funcret
 10319  006964                     __end_of_lcd_disp_chr_loc_7:
 10320                           	opt stack 0
 10321                           tblptru	equ	0xFF8
 10322                           tblptrh	equ	0xFF7
 10323                           tblptrl	equ	0xFF6
 10324                           tablat	equ	0xFF5
 10325                           prodh	equ	0xFF4
 10326                           prodl	equ	0xFF3
 10327                           intcon	equ	0xFF2
 10328                           indf0	equ	0xFEF
 10329                           postinc0	equ	0xFEE
 10330                           fsr0h	equ	0xFEA
 10331                           fsr0l	equ	0xFE9
 10332                           wreg	equ	0xFE8
 10333                           postdec1	equ	0xFE5
 10334                           plusw1	equ	0xFE3
 10335                           fsr1h	equ	0xFE2
 10336                           fsr1l	equ	0xFE1
 10337                           indf2	equ	0xFDF
 10338                           postinc2	equ	0xFDE
 10339                           postdec2	equ	0xFDD
 10340                           plusw2	equ	0xFDB
 10341                           fsr2h	equ	0xFDA
 10342                           fsr2l	equ	0xFD9
 10343                           status	equ	0xFD8
 10344                           
 10345 ;; *************** function _lcd_disp_chr_loc_6 *****************
 10346 ;; Defined at:
 10347 ;;		line 334 in file "src/driver/lcd.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  code            1    wreg     unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  code            1   31[COMRAM] unsigned char 
 10352 ;; Return value:  Size  Location     Type
 10353 ;;                  1    wreg      void 
 10354 ;; Registers used:
 10355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;Total ram usage:        1 bytes
 10366 ;; Hardware stack levels used:    1
 10367 ;; Hardware stack levels required when called:    6
 10368 ;; This function calls:
 10369 ;;		_lcd_set_com_seg
 10370 ;; This function is called by:
 10371 ;;		_lcd_show_chr
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text56
 10376  006964                     __ptext56:
 10377                           	opt stack 0
 10378  006964                     _lcd_disp_chr_loc_6:
 10379                           	opt stack 21
 10380                           
 10381                           ;incstack = 0
 10382                           ;lcd_disp_chr_loc_6@code stored from wreg
 10383  006964  6E20               	movwf	lcd_disp_chr_loc_6@code,c
 10384                           
 10385                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
 10386  006966  0E0E               	movlw	14
 10387  006968  0100               	movlb	0	; () banked
 10388  00696A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10389  00696C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10390  00696E  0B08               	andlw	8
 10391  006970  0100               	movlb	0	; () banked
 10392  006972  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10393  006974  0E00               	movlw	0
 10394  006976  EC02  F02E         	call	_lcd_set_com_seg
 10395                           
 10396                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
 10397  00697A  0E0E               	movlw	14
 10398  00697C  0100               	movlb	0	; () banked
 10399  00697E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10400  006980  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10401  006982  0B10               	andlw	16
 10402  006984  0100               	movlb	0	; () banked
 10403  006986  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10404  006988  0E01               	movlw	1
 10405  00698A  EC02  F02E         	call	_lcd_set_com_seg
 10406                           
 10407                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
 10408  00698E  0E0E               	movlw	14
 10409  006990  0100               	movlb	0	; () banked
 10410  006992  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10411  006994  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10412  006996  0B20               	andlw	32
 10413  006998  0100               	movlb	0	; () banked
 10414  00699A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10415  00699C  0E02               	movlw	2
 10416  00699E  EC02  F02E         	call	_lcd_set_com_seg
 10417                           
 10418                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
 10419  0069A2  0E0E               	movlw	14
 10420  0069A4  0100               	movlb	0	; () banked
 10421  0069A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10422  0069A8  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10423  0069AA  0B01               	andlw	1
 10424  0069AC  0100               	movlb	0	; () banked
 10425  0069AE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10426  0069B0  0E03               	movlw	3
 10427  0069B2  EC02  F02E         	call	_lcd_set_com_seg
 10428                           
 10429                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
 10430  0069B6  0E0F               	movlw	15
 10431  0069B8  0100               	movlb	0	; () banked
 10432  0069BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10433  0069BC  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10434  0069BE  0B04               	andlw	4
 10435  0069C0  0100               	movlb	0	; () banked
 10436  0069C2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10437  0069C4  0E01               	movlw	1
 10438  0069C6  EC02  F02E         	call	_lcd_set_com_seg
 10439                           
 10440                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
 10441  0069CA  0E0F               	movlw	15
 10442  0069CC  0100               	movlb	0	; () banked
 10443  0069CE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10444  0069D0  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10445  0069D2  0B40               	andlw	64
 10446  0069D4  0100               	movlb	0	; () banked
 10447  0069D6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10448  0069D8  0E02               	movlw	2
 10449  0069DA  EC02  F02E         	call	_lcd_set_com_seg
 10450                           
 10451                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
 10452  0069DE  0E0F               	movlw	15
 10453  0069E0  0100               	movlb	0	; () banked
 10454  0069E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10455  0069E4  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 10456  0069E6  0B02               	andlw	2
 10457  0069E8  0100               	movlb	0	; () banked
 10458  0069EA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10459  0069EC  0E03               	movlw	3
 10460  0069EE  EC02  F02E         	call	_lcd_set_com_seg
 10461  0069F2  0012               	return		;funcret
 10462  0069F4                     __end_of_lcd_disp_chr_loc_6:
 10463                           	opt stack 0
 10464                           tblptru	equ	0xFF8
 10465                           tblptrh	equ	0xFF7
 10466                           tblptrl	equ	0xFF6
 10467                           tablat	equ	0xFF5
 10468                           prodh	equ	0xFF4
 10469                           prodl	equ	0xFF3
 10470                           intcon	equ	0xFF2
 10471                           indf0	equ	0xFEF
 10472                           postinc0	equ	0xFEE
 10473                           fsr0h	equ	0xFEA
 10474                           fsr0l	equ	0xFE9
 10475                           wreg	equ	0xFE8
 10476                           postdec1	equ	0xFE5
 10477                           plusw1	equ	0xFE3
 10478                           fsr1h	equ	0xFE2
 10479                           fsr1l	equ	0xFE1
 10480                           indf2	equ	0xFDF
 10481                           postinc2	equ	0xFDE
 10482                           postdec2	equ	0xFDD
 10483                           plusw2	equ	0xFDB
 10484                           fsr2h	equ	0xFDA
 10485                           fsr2l	equ	0xFD9
 10486                           status	equ	0xFD8
 10487                           
 10488 ;; *************** function _lcd_disp_chr_loc_5 *****************
 10489 ;; Defined at:
 10490 ;;		line 315 in file "src/driver/lcd.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  code            1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  code            1   31[COMRAM] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10508 ;;Total ram usage:        1 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    6
 10511 ;; This function calls:
 10512 ;;		_lcd_set_com_seg
 10513 ;; This function is called by:
 10514 ;;		_lcd_show_chr
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text57
 10519  0069F4                     __ptext57:
 10520                           	opt stack 0
 10521  0069F4                     _lcd_disp_chr_loc_5:
 10522                           	opt stack 21
 10523                           
 10524                           ;incstack = 0
 10525                           ;lcd_disp_chr_loc_5@code stored from wreg
 10526  0069F4  6E20               	movwf	lcd_disp_chr_loc_5@code,c
 10527                           
 10528                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
 10529  0069F6  0E26               	movlw	38
 10530  0069F8  0100               	movlb	0	; () banked
 10531  0069FA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10532  0069FC  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10533  0069FE  0B08               	andlw	8
 10534  006A00  0100               	movlb	0	; () banked
 10535  006A02  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10536  006A04  0E00               	movlw	0
 10537  006A06  EC02  F02E         	call	_lcd_set_com_seg
 10538                           
 10539                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
 10540  006A0A  0E26               	movlw	38
 10541  006A0C  0100               	movlb	0	; () banked
 10542  006A0E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10543  006A10  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10544  006A12  0B10               	andlw	16
 10545  006A14  0100               	movlb	0	; () banked
 10546  006A16  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10547  006A18  0E01               	movlw	1
 10548  006A1A  EC02  F02E         	call	_lcd_set_com_seg
 10549                           
 10550                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
 10551  006A1E  0E26               	movlw	38
 10552  006A20  0100               	movlb	0	; () banked
 10553  006A22  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10554  006A24  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10555  006A26  0B20               	andlw	32
 10556  006A28  0100               	movlb	0	; () banked
 10557  006A2A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10558  006A2C  0E02               	movlw	2
 10559  006A2E  EC02  F02E         	call	_lcd_set_com_seg
 10560                           
 10561                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
 10562  006A32  0E26               	movlw	38
 10563  006A34  0100               	movlb	0	; () banked
 10564  006A36  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10565  006A38  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10566  006A3A  0B01               	andlw	1
 10567  006A3C  0100               	movlb	0	; () banked
 10568  006A3E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10569  006A40  0E03               	movlw	3
 10570  006A42  EC02  F02E         	call	_lcd_set_com_seg
 10571                           
 10572                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
 10573  006A46  0E27               	movlw	39
 10574  006A48  0100               	movlb	0	; () banked
 10575  006A4A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10576  006A4C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10577  006A4E  0B04               	andlw	4
 10578  006A50  0100               	movlb	0	; () banked
 10579  006A52  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10580  006A54  0E01               	movlw	1
 10581  006A56  EC02  F02E         	call	_lcd_set_com_seg
 10582                           
 10583                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
 10584  006A5A  0E27               	movlw	39
 10585  006A5C  0100               	movlb	0	; () banked
 10586  006A5E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10587  006A60  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10588  006A62  0B40               	andlw	64
 10589  006A64  0100               	movlb	0	; () banked
 10590  006A66  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10591  006A68  0E02               	movlw	2
 10592  006A6A  EC02  F02E         	call	_lcd_set_com_seg
 10593                           
 10594                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
 10595  006A6E  0E27               	movlw	39
 10596  006A70  0100               	movlb	0	; () banked
 10597  006A72  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10598  006A74  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 10599  006A76  0B02               	andlw	2
 10600  006A78  0100               	movlb	0	; () banked
 10601  006A7A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10602  006A7C  0E03               	movlw	3
 10603  006A7E  EC02  F02E         	call	_lcd_set_com_seg
 10604  006A82  0012               	return		;funcret
 10605  006A84                     __end_of_lcd_disp_chr_loc_5:
 10606                           	opt stack 0
 10607                           tblptru	equ	0xFF8
 10608                           tblptrh	equ	0xFF7
 10609                           tblptrl	equ	0xFF6
 10610                           tablat	equ	0xFF5
 10611                           prodh	equ	0xFF4
 10612                           prodl	equ	0xFF3
 10613                           intcon	equ	0xFF2
 10614                           indf0	equ	0xFEF
 10615                           postinc0	equ	0xFEE
 10616                           fsr0h	equ	0xFEA
 10617                           fsr0l	equ	0xFE9
 10618                           wreg	equ	0xFE8
 10619                           postdec1	equ	0xFE5
 10620                           plusw1	equ	0xFE3
 10621                           fsr1h	equ	0xFE2
 10622                           fsr1l	equ	0xFE1
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           plusw2	equ	0xFDB
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function _lcd_disp_chr_loc_4 *****************
 10632 ;; Defined at:
 10633 ;;		line 296 in file "src/driver/lcd.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  code            1    wreg     unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  code            1   31[COMRAM] unsigned char 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;Total ram usage:        1 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    6
 10654 ;; This function calls:
 10655 ;;		_lcd_set_com_seg
 10656 ;; This function is called by:
 10657 ;;		_lcd_show_chr
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text58
 10662  006A84                     __ptext58:
 10663                           	opt stack 0
 10664  006A84                     _lcd_disp_chr_loc_4:
 10665                           	opt stack 21
 10666                           
 10667                           ;incstack = 0
 10668                           ;lcd_disp_chr_loc_4@code stored from wreg
 10669  006A84  6E20               	movwf	lcd_disp_chr_loc_4@code,c
 10670                           
 10671                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
 10672  006A86  0E24               	movlw	36
 10673  006A88  0100               	movlb	0	; () banked
 10674  006A8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10675  006A8C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10676  006A8E  0B08               	andlw	8
 10677  006A90  0100               	movlb	0	; () banked
 10678  006A92  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10679  006A94  0E00               	movlw	0
 10680  006A96  EC02  F02E         	call	_lcd_set_com_seg
 10681                           
 10682                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
 10683  006A9A  0E24               	movlw	36
 10684  006A9C  0100               	movlb	0	; () banked
 10685  006A9E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10686  006AA0  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10687  006AA2  0B10               	andlw	16
 10688  006AA4  0100               	movlb	0	; () banked
 10689  006AA6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10690  006AA8  0E01               	movlw	1
 10691  006AAA  EC02  F02E         	call	_lcd_set_com_seg
 10692                           
 10693                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
 10694  006AAE  0E24               	movlw	36
 10695  006AB0  0100               	movlb	0	; () banked
 10696  006AB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10697  006AB4  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10698  006AB6  0B20               	andlw	32
 10699  006AB8  0100               	movlb	0	; () banked
 10700  006ABA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10701  006ABC  0E02               	movlw	2
 10702  006ABE  EC02  F02E         	call	_lcd_set_com_seg
 10703                           
 10704                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
 10705  006AC2  0E24               	movlw	36
 10706  006AC4  0100               	movlb	0	; () banked
 10707  006AC6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10708  006AC8  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10709  006ACA  0B01               	andlw	1
 10710  006ACC  0100               	movlb	0	; () banked
 10711  006ACE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10712  006AD0  0E03               	movlw	3
 10713  006AD2  EC02  F02E         	call	_lcd_set_com_seg
 10714                           
 10715                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
 10716  006AD6  0E25               	movlw	37
 10717  006AD8  0100               	movlb	0	; () banked
 10718  006ADA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10719  006ADC  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10720  006ADE  0B04               	andlw	4
 10721  006AE0  0100               	movlb	0	; () banked
 10722  006AE2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10723  006AE4  0E01               	movlw	1
 10724  006AE6  EC02  F02E         	call	_lcd_set_com_seg
 10725                           
 10726                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
 10727  006AEA  0E25               	movlw	37
 10728  006AEC  0100               	movlb	0	; () banked
 10729  006AEE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10730  006AF0  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10731  006AF2  0B40               	andlw	64
 10732  006AF4  0100               	movlb	0	; () banked
 10733  006AF6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10734  006AF8  0E02               	movlw	2
 10735  006AFA  EC02  F02E         	call	_lcd_set_com_seg
 10736                           
 10737                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
 10738  006AFE  0E25               	movlw	37
 10739  006B00  0100               	movlb	0	; () banked
 10740  006B02  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10741  006B04  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10742  006B06  0B02               	andlw	2
 10743  006B08  0100               	movlb	0	; () banked
 10744  006B0A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10745  006B0C  0E03               	movlw	3
 10746  006B0E  EC02  F02E         	call	_lcd_set_com_seg
 10747  006B12  0012               	return		;funcret
 10748  006B14                     __end_of_lcd_disp_chr_loc_4:
 10749                           	opt stack 0
 10750                           tblptru	equ	0xFF8
 10751                           tblptrh	equ	0xFF7
 10752                           tblptrl	equ	0xFF6
 10753                           tablat	equ	0xFF5
 10754                           prodh	equ	0xFF4
 10755                           prodl	equ	0xFF3
 10756                           intcon	equ	0xFF2
 10757                           indf0	equ	0xFEF
 10758                           postinc0	equ	0xFEE
 10759                           fsr0h	equ	0xFEA
 10760                           fsr0l	equ	0xFE9
 10761                           wreg	equ	0xFE8
 10762                           postdec1	equ	0xFE5
 10763                           plusw1	equ	0xFE3
 10764                           fsr1h	equ	0xFE2
 10765                           fsr1l	equ	0xFE1
 10766                           indf2	equ	0xFDF
 10767                           postinc2	equ	0xFDE
 10768                           postdec2	equ	0xFDD
 10769                           plusw2	equ	0xFDB
 10770                           fsr2h	equ	0xFDA
 10771                           fsr2l	equ	0xFD9
 10772                           status	equ	0xFD8
 10773                           
 10774 ;; *************** function _lcd_disp_chr_loc_3 *****************
 10775 ;; Defined at:
 10776 ;;		line 284 in file "src/driver/lcd.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  code            1    wreg     unsigned char 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  code            1   31[COMRAM] unsigned char 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;Total ram usage:        1 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    6
 10797 ;; This function calls:
 10798 ;;		_lcd_set_com_seg
 10799 ;; This function is called by:
 10800 ;;		_lcd_show_chr
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804                           	psect	text59
 10805  006B14                     __ptext59:
 10806                           	opt stack 0
 10807  006B14                     _lcd_disp_chr_loc_3:
 10808                           	opt stack 21
 10809                           
 10810                           ;incstack = 0
 10811                           ;lcd_disp_chr_loc_3@code stored from wreg
 10812  006B14  6E20               	movwf	lcd_disp_chr_loc_3@code,c
 10813                           
 10814                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
 10815  006B16  0E2B               	movlw	43
 10816  006B18  0100               	movlb	0	; () banked
 10817  006B1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10818  006B1C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10819  006B1E  0B01               	andlw	1
 10820  006B20  0100               	movlb	0	; () banked
 10821  006B22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10822  006B24  0E00               	movlw	0
 10823  006B26  EC02  F02E         	call	_lcd_set_com_seg
 10824                           
 10825                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
 10826  006B2A  0E2B               	movlw	43
 10827  006B2C  0100               	movlb	0	; () banked
 10828  006B2E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10829  006B30  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10830  006B32  0B20               	andlw	32
 10831  006B34  0100               	movlb	0	; () banked
 10832  006B36  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10833  006B38  0E01               	movlw	1
 10834  006B3A  EC02  F02E         	call	_lcd_set_com_seg
 10835                           
 10836                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
 10837  006B3E  0E2B               	movlw	43
 10838  006B40  0100               	movlb	0	; () banked
 10839  006B42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10840  006B44  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10841  006B46  0B10               	andlw	16
 10842  006B48  0100               	movlb	0	; () banked
 10843  006B4A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10844  006B4C  0E02               	movlw	2
 10845  006B4E  EC02  F02E         	call	_lcd_set_com_seg
 10846                           
 10847                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
 10848  006B52  0E2B               	movlw	43
 10849  006B54  0100               	movlb	0	; () banked
 10850  006B56  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10851  006B58  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10852  006B5A  0B08               	andlw	8
 10853  006B5C  0100               	movlb	0	; () banked
 10854  006B5E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10855  006B60  0E03               	movlw	3
 10856  006B62  EC02  F02E         	call	_lcd_set_com_seg
 10857                           
 10858                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
 10859  006B66  0E2A               	movlw	42
 10860  006B68  0100               	movlb	0	; () banked
 10861  006B6A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10862  006B6C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10863  006B6E  0B02               	andlw	2
 10864  006B70  0100               	movlb	0	; () banked
 10865  006B72  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10866  006B74  0E00               	movlw	0
 10867  006B76  EC02  F02E         	call	_lcd_set_com_seg
 10868                           
 10869                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
 10870  006B7A  0E2A               	movlw	42
 10871  006B7C  0100               	movlb	0	; () banked
 10872  006B7E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10873  006B80  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10874  006B82  0B40               	andlw	64
 10875  006B84  0100               	movlb	0	; () banked
 10876  006B86  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10877  006B88  0E01               	movlw	1
 10878  006B8A  EC02  F02E         	call	_lcd_set_com_seg
 10879                           
 10880                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
 10881  006B8E  0E2A               	movlw	42
 10882  006B90  0100               	movlb	0	; () banked
 10883  006B92  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10884  006B94  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10885  006B96  0B04               	andlw	4
 10886  006B98  0100               	movlb	0	; () banked
 10887  006B9A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10888  006B9C  0E02               	movlw	2
 10889  006B9E  EC02  F02E         	call	_lcd_set_com_seg
 10890  006BA2  0012               	return		;funcret
 10891  006BA4                     __end_of_lcd_disp_chr_loc_3:
 10892                           	opt stack 0
 10893                           tblptru	equ	0xFF8
 10894                           tblptrh	equ	0xFF7
 10895                           tblptrl	equ	0xFF6
 10896                           tablat	equ	0xFF5
 10897                           prodh	equ	0xFF4
 10898                           prodl	equ	0xFF3
 10899                           intcon	equ	0xFF2
 10900                           indf0	equ	0xFEF
 10901                           postinc0	equ	0xFEE
 10902                           fsr0h	equ	0xFEA
 10903                           fsr0l	equ	0xFE9
 10904                           wreg	equ	0xFE8
 10905                           postdec1	equ	0xFE5
 10906                           plusw1	equ	0xFE3
 10907                           fsr1h	equ	0xFE2
 10908                           fsr1l	equ	0xFE1
 10909                           indf2	equ	0xFDF
 10910                           postinc2	equ	0xFDE
 10911                           postdec2	equ	0xFDD
 10912                           plusw2	equ	0xFDB
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917 ;; *************** function _lcd_disp_chr_loc_2 *****************
 10918 ;; Defined at:
 10919 ;;		line 265 in file "src/driver/lcd.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  code            1    wreg     unsigned char 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  code            1   31[COMRAM] unsigned char 
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;Total ram usage:        1 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:    6
 10940 ;; This function calls:
 10941 ;;		_lcd_set_com_seg
 10942 ;; This function is called by:
 10943 ;;		_lcd_show_chr
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text60
 10948  006BA4                     __ptext60:
 10949                           	opt stack 0
 10950  006BA4                     _lcd_disp_chr_loc_2:
 10951                           	opt stack 21
 10952                           
 10953                           ;incstack = 0
 10954                           ;lcd_disp_chr_loc_2@code stored from wreg
 10955  006BA4  6E20               	movwf	lcd_disp_chr_loc_2@code,c
 10956                           
 10957                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
 10958  006BA6  0E15               	movlw	21
 10959  006BA8  0100               	movlb	0	; () banked
 10960  006BAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10961  006BAC  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10962  006BAE  0B01               	andlw	1
 10963  006BB0  0100               	movlb	0	; () banked
 10964  006BB2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10965  006BB4  0E00               	movlw	0
 10966  006BB6  EC02  F02E         	call	_lcd_set_com_seg
 10967                           
 10968                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
 10969  006BBA  0E15               	movlw	21
 10970  006BBC  0100               	movlb	0	; () banked
 10971  006BBE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10972  006BC0  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10973  006BC2  0B20               	andlw	32
 10974  006BC4  0100               	movlb	0	; () banked
 10975  006BC6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10976  006BC8  0E01               	movlw	1
 10977  006BCA  EC02  F02E         	call	_lcd_set_com_seg
 10978                           
 10979                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
 10980  006BCE  0E15               	movlw	21
 10981  006BD0  0100               	movlb	0	; () banked
 10982  006BD2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10983  006BD4  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10984  006BD6  0B10               	andlw	16
 10985  006BD8  0100               	movlb	0	; () banked
 10986  006BDA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10987  006BDC  0E02               	movlw	2
 10988  006BDE  EC02  F02E         	call	_lcd_set_com_seg
 10989                           
 10990                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
 10991  006BE2  0E15               	movlw	21
 10992  006BE4  0100               	movlb	0	; () banked
 10993  006BE6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10994  006BE8  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10995  006BEA  0B08               	andlw	8
 10996  006BEC  0100               	movlb	0	; () banked
 10997  006BEE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10998  006BF0  0E03               	movlw	3
 10999  006BF2  EC02  F02E         	call	_lcd_set_com_seg
 11000                           
 11001                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
 11002  006BF6  0E14               	movlw	20
 11003  006BF8  0100               	movlb	0	; () banked
 11004  006BFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11005  006BFC  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 11006  006BFE  0B02               	andlw	2
 11007  006C00  0100               	movlb	0	; () banked
 11008  006C02  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11009  006C04  0E00               	movlw	0
 11010  006C06  EC02  F02E         	call	_lcd_set_com_seg
 11011                           
 11012                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
 11013  006C0A  0E14               	movlw	20
 11014  006C0C  0100               	movlb	0	; () banked
 11015  006C0E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11016  006C10  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 11017  006C12  0B40               	andlw	64
 11018  006C14  0100               	movlb	0	; () banked
 11019  006C16  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11020  006C18  0E01               	movlw	1
 11021  006C1A  EC02  F02E         	call	_lcd_set_com_seg
 11022                           
 11023                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
 11024  006C1E  0E14               	movlw	20
 11025  006C20  0100               	movlb	0	; () banked
 11026  006C22  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11027  006C24  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 11028  006C26  0B04               	andlw	4
 11029  006C28  0100               	movlb	0	; () banked
 11030  006C2A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11031  006C2C  0E02               	movlw	2
 11032  006C2E  EC02  F02E         	call	_lcd_set_com_seg
 11033  006C32  0012               	return		;funcret
 11034  006C34                     __end_of_lcd_disp_chr_loc_2:
 11035                           	opt stack 0
 11036                           tblptru	equ	0xFF8
 11037                           tblptrh	equ	0xFF7
 11038                           tblptrl	equ	0xFF6
 11039                           tablat	equ	0xFF5
 11040                           prodh	equ	0xFF4
 11041                           prodl	equ	0xFF3
 11042                           intcon	equ	0xFF2
 11043                           indf0	equ	0xFEF
 11044                           postinc0	equ	0xFEE
 11045                           fsr0h	equ	0xFEA
 11046                           fsr0l	equ	0xFE9
 11047                           wreg	equ	0xFE8
 11048                           postdec1	equ	0xFE5
 11049                           plusw1	equ	0xFE3
 11050                           fsr1h	equ	0xFE2
 11051                           fsr1l	equ	0xFE1
 11052                           indf2	equ	0xFDF
 11053                           postinc2	equ	0xFDE
 11054                           postdec2	equ	0xFDD
 11055                           plusw2	equ	0xFDB
 11056                           fsr2h	equ	0xFDA
 11057                           fsr2l	equ	0xFD9
 11058                           status	equ	0xFD8
 11059                           
 11060 ;; *************** function _lcd_disp_chr_loc_1 *****************
 11061 ;; Defined at:
 11062 ;;		line 246 in file "src/driver/lcd.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;  code            1    wreg     unsigned char 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  code            1   31[COMRAM] unsigned char 
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;Total ram usage:        1 bytes
 11081 ;; Hardware stack levels used:    1
 11082 ;; Hardware stack levels required when called:    6
 11083 ;; This function calls:
 11084 ;;		_lcd_set_com_seg
 11085 ;; This function is called by:
 11086 ;;		_lcd_show_chr
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text61
 11091  006C34                     __ptext61:
 11092                           	opt stack 0
 11093  006C34                     _lcd_disp_chr_loc_1:
 11094                           	opt stack 21
 11095                           
 11096                           ;incstack = 0
 11097                           ;lcd_disp_chr_loc_1@code stored from wreg
 11098  006C34  6E20               	movwf	lcd_disp_chr_loc_1@code,c
 11099                           
 11100                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
 11101  006C36  0E17               	movlw	23
 11102  006C38  0100               	movlb	0	; () banked
 11103  006C3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11104  006C3C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11105  006C3E  0B01               	andlw	1
 11106  006C40  0100               	movlb	0	; () banked
 11107  006C42  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11108  006C44  0E00               	movlw	0
 11109  006C46  EC02  F02E         	call	_lcd_set_com_seg
 11110                           
 11111                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
 11112  006C4A  0E17               	movlw	23
 11113  006C4C  0100               	movlb	0	; () banked
 11114  006C4E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11115  006C50  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11116  006C52  0B20               	andlw	32
 11117  006C54  0100               	movlb	0	; () banked
 11118  006C56  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11119  006C58  0E01               	movlw	1
 11120  006C5A  EC02  F02E         	call	_lcd_set_com_seg
 11121                           
 11122                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
 11123  006C5E  0E17               	movlw	23
 11124  006C60  0100               	movlb	0	; () banked
 11125  006C62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11126  006C64  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11127  006C66  0B10               	andlw	16
 11128  006C68  0100               	movlb	0	; () banked
 11129  006C6A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11130  006C6C  0E02               	movlw	2
 11131  006C6E  EC02  F02E         	call	_lcd_set_com_seg
 11132                           
 11133                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
 11134  006C72  0E17               	movlw	23
 11135  006C74  0100               	movlb	0	; () banked
 11136  006C76  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11137  006C78  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11138  006C7A  0B08               	andlw	8
 11139  006C7C  0100               	movlb	0	; () banked
 11140  006C7E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11141  006C80  0E03               	movlw	3
 11142  006C82  EC02  F02E         	call	_lcd_set_com_seg
 11143                           
 11144                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
 11145  006C86  0E16               	movlw	22
 11146  006C88  0100               	movlb	0	; () banked
 11147  006C8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11148  006C8C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11149  006C8E  0B02               	andlw	2
 11150  006C90  0100               	movlb	0	; () banked
 11151  006C92  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11152  006C94  0E00               	movlw	0
 11153  006C96  EC02  F02E         	call	_lcd_set_com_seg
 11154                           
 11155                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
 11156  006C9A  0E16               	movlw	22
 11157  006C9C  0100               	movlb	0	; () banked
 11158  006C9E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11159  006CA0  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11160  006CA2  0B40               	andlw	64
 11161  006CA4  0100               	movlb	0	; () banked
 11162  006CA6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11163  006CA8  0E01               	movlw	1
 11164  006CAA  EC02  F02E         	call	_lcd_set_com_seg
 11165                           
 11166                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
 11167  006CAE  0E16               	movlw	22
 11168  006CB0  0100               	movlb	0	; () banked
 11169  006CB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11170  006CB4  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 11171  006CB6  0B04               	andlw	4
 11172  006CB8  0100               	movlb	0	; () banked
 11173  006CBA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11174  006CBC  0E02               	movlw	2
 11175  006CBE  EC02  F02E         	call	_lcd_set_com_seg
 11176  006CC2  0012               	return		;funcret
 11177  006CC4                     __end_of_lcd_disp_chr_loc_1:
 11178                           	opt stack 0
 11179                           tblptru	equ	0xFF8
 11180                           tblptrh	equ	0xFF7
 11181                           tblptrl	equ	0xFF6
 11182                           tablat	equ	0xFF5
 11183                           prodh	equ	0xFF4
 11184                           prodl	equ	0xFF3
 11185                           intcon	equ	0xFF2
 11186                           indf0	equ	0xFEF
 11187                           postinc0	equ	0xFEE
 11188                           fsr0h	equ	0xFEA
 11189                           fsr0l	equ	0xFE9
 11190                           wreg	equ	0xFE8
 11191                           postdec1	equ	0xFE5
 11192                           plusw1	equ	0xFE3
 11193                           fsr1h	equ	0xFE2
 11194                           fsr1l	equ	0xFE1
 11195                           indf2	equ	0xFDF
 11196                           postinc2	equ	0xFDE
 11197                           postdec2	equ	0xFDD
 11198                           plusw2	equ	0xFDB
 11199                           fsr2h	equ	0xFDA
 11200                           fsr2l	equ	0xFD9
 11201                           status	equ	0xFD8
 11202                           
 11203 ;; *************** function _lcd_disp_chr_loc_0 *****************
 11204 ;; Defined at:
 11205 ;;		line 226 in file "src/driver/lcd.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  code            1    wreg     unsigned char 
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;  code            1   31[COMRAM] unsigned char 
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  1    wreg      void 
 11212 ;; Registers used:
 11213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11214 ;; Tracked objects:
 11215 ;;		On entry : 0/0
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;Total ram usage:        1 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:    6
 11226 ;; This function calls:
 11227 ;;		_lcd_set_com_seg
 11228 ;; This function is called by:
 11229 ;;		_lcd_show_chr
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text62
 11234  006CC4                     __ptext62:
 11235                           	opt stack 0
 11236  006CC4                     _lcd_disp_chr_loc_0:
 11237                           	opt stack 21
 11238                           
 11239                           ;incstack = 0
 11240                           ;lcd_disp_chr_loc_0@code stored from wreg
 11241  006CC4  6E20               	movwf	lcd_disp_chr_loc_0@code,c
 11242                           
 11243                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
 11244  006CC6  0E19               	movlw	25
 11245  006CC8  0100               	movlb	0	; () banked
 11246  006CCA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11247  006CCC  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11248  006CCE  0B01               	andlw	1
 11249  006CD0  0100               	movlb	0	; () banked
 11250  006CD2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11251  006CD4  0E00               	movlw	0
 11252  006CD6  EC02  F02E         	call	_lcd_set_com_seg
 11253                           
 11254                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
 11255  006CDA  0E19               	movlw	25
 11256  006CDC  0100               	movlb	0	; () banked
 11257  006CDE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11258  006CE0  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11259  006CE2  0B20               	andlw	32
 11260  006CE4  0100               	movlb	0	; () banked
 11261  006CE6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11262  006CE8  0E01               	movlw	1
 11263  006CEA  EC02  F02E         	call	_lcd_set_com_seg
 11264                           
 11265                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
 11266  006CEE  0E19               	movlw	25
 11267  006CF0  0100               	movlb	0	; () banked
 11268  006CF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11269  006CF4  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11270  006CF6  0B10               	andlw	16
 11271  006CF8  0100               	movlb	0	; () banked
 11272  006CFA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11273  006CFC  0E02               	movlw	2
 11274  006CFE  EC02  F02E         	call	_lcd_set_com_seg
 11275                           
 11276                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
 11277  006D02  0E19               	movlw	25
 11278  006D04  0100               	movlb	0	; () banked
 11279  006D06  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11280  006D08  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11281  006D0A  0B08               	andlw	8
 11282  006D0C  0100               	movlb	0	; () banked
 11283  006D0E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11284  006D10  0E03               	movlw	3
 11285  006D12  EC02  F02E         	call	_lcd_set_com_seg
 11286                           
 11287                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
 11288  006D16  0E18               	movlw	24
 11289  006D18  0100               	movlb	0	; () banked
 11290  006D1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11291  006D1C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11292  006D1E  0B02               	andlw	2
 11293  006D20  0100               	movlb	0	; () banked
 11294  006D22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11295  006D24  0E00               	movlw	0
 11296  006D26  EC02  F02E         	call	_lcd_set_com_seg
 11297                           
 11298                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
 11299  006D2A  0E18               	movlw	24
 11300  006D2C  0100               	movlb	0	; () banked
 11301  006D2E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11302  006D30  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11303  006D32  0B40               	andlw	64
 11304  006D34  0100               	movlb	0	; () banked
 11305  006D36  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11306  006D38  0E01               	movlw	1
 11307  006D3A  EC02  F02E         	call	_lcd_set_com_seg
 11308                           
 11309                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
 11310  006D3E  0E18               	movlw	24
 11311  006D40  0100               	movlb	0	; () banked
 11312  006D42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11313  006D44  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 11314  006D46  0B04               	andlw	4
 11315  006D48  0100               	movlb	0	; () banked
 11316  006D4A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11317  006D4C  0E02               	movlw	2
 11318  006D4E  EC02  F02E         	call	_lcd_set_com_seg
 11319  006D52  0012               	return		;funcret
 11320  006D54                     __end_of_lcd_disp_chr_loc_0:
 11321                           	opt stack 0
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           indf0	equ	0xFEF
 11330                           postinc0	equ	0xFEE
 11331                           fsr0h	equ	0xFEA
 11332                           fsr0l	equ	0xFE9
 11333                           wreg	equ	0xFE8
 11334                           postdec1	equ	0xFE5
 11335                           plusw1	equ	0xFE3
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           plusw2	equ	0xFDB
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function _lcd_show_dp *****************
 11347 ;; Defined at:
 11348 ;;		line 495 in file "src/driver/lcd.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  loc             1    wreg     unsigned char 
 11351 ;;  show            1   16[BANK0 ] unsigned char 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  loc             1   17[BANK0 ] unsigned char 
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11363 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;Total ram usage:        2 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; Hardware stack levels required when called:    7
 11370 ;; This function calls:
 11371 ;;		_lcd_disp_dp_loc_0
 11372 ;;		_lcd_disp_dp_loc_1
 11373 ;;		_lcd_disp_dp_loc_2
 11374 ;; This function is called by:
 11375 ;;		_ui_disp_clear_num_dp
 11376 ;;		_ui_disp_xfloat_pt
 11377 ;;		_ui_disp_rtc_mm_ss
 11378 ;;		_ui_disp_adj_xfloat_pt
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text63
 11383  00719E                     __ptext63:
 11384                           	opt stack 0
 11385  00719E                     _lcd_show_dp:
 11386                           	opt stack 17
 11387                           
 11388                           ;incstack = 0
 11389                           ;lcd_show_dp@loc stored from wreg
 11390  00719E  0100               	movlb	0	; () banked
 11391  0071A0  6F71               	movwf	lcd_show_dp@loc& (0+255),b
 11392                           
 11393                           ;lcd.c: 497: switch(loc){
 11394  0071A2  D01E               	goto	l10747
 11395  0071A4                     l10733:
 11396  0071A4  0100               	movlb	0	; () banked
 11397  0071A6  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11398  0071A8  EC0D  F040         	call	_lcd_disp_dp_loc_0
 11399  0071AC  0012               	return	
 11400  0071AE                     l10735:
 11401  0071AE  0100               	movlb	0	; () banked
 11402  0071B0  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11403  0071B2  ECF5  F03F         	call	_lcd_disp_dp_loc_1
 11404  0071B6  0012               	return	
 11405  0071B8                     l10737:
 11406  0071B8  0100               	movlb	0	; () banked
 11407  0071BA  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11408  0071BC  ECDD  F03F         	call	_lcd_disp_dp_loc_2
 11409  0071C0  0012               	return	
 11410  0071C2                     l10739:
 11411  0071C2  0100               	movlb	0	; () banked
 11412  0071C4  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11413  0071C6  EC0D  F040         	call	_lcd_disp_dp_loc_0
 11414  0071CA  0012               	return	
 11415  0071CC                     l10741:
 11416  0071CC  0100               	movlb	0	; () banked
 11417  0071CE  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11418  0071D0  ECF5  F03F         	call	_lcd_disp_dp_loc_1
 11419  0071D4  0012               	return	
 11420  0071D6                     l10743:
 11421  0071D6  0100               	movlb	0	; () banked
 11422  0071D8  5170               	movf	lcd_show_dp@show& (0+255),w,b
 11423  0071DA  ECDD  F03F         	call	_lcd_disp_dp_loc_2
 11424                           
 11425                           ;lcd.c: 507: }
 11426                           
 11427                           ;lcd.c: 506: default:break;
 11428  0071DE  0012               	return	
 11429  0071E0                     l10747:
 11430  0071E0  0100               	movlb	0	; () banked
 11431  0071E2  5171               	movf	lcd_show_dp@loc& (0+255),w,b
 11432                           
 11433                           ; Switch size 1, requested type "space"
 11434                           ; Number of cases is 6, Range of values is 0 to 6
 11435                           ; switch strategies available:
 11436                           ; Name         Instructions Cycles
 11437                           ; simple_byte           19    10 (average)
 11438                           ;	Chosen strategy is simple_byte
 11439  0071E4  0A00               	xorlw	0	; case 0
 11440  0071E6  B4D8               	btfsc	status,2,c
 11441  0071E8  D7DD               	goto	l10733
 11442  0071EA  0A01               	xorlw	1	; case 1
 11443  0071EC  B4D8               	btfsc	status,2,c
 11444  0071EE  D7DF               	goto	l10735
 11445  0071F0  0A03               	xorlw	3	; case 2
 11446  0071F2  B4D8               	btfsc	status,2,c
 11447  0071F4  D7E1               	goto	l10737
 11448  0071F6  0A06               	xorlw	6	; case 4
 11449  0071F8  B4D8               	btfsc	status,2,c
 11450  0071FA  D7E3               	goto	l10739
 11451  0071FC  0A01               	xorlw	1	; case 5
 11452  0071FE  B4D8               	btfsc	status,2,c
 11453  007200  D7E5               	goto	l10741
 11454  007202  0A03               	xorlw	3	; case 6
 11455  007204  A4D8               	btfss	status,2,c
 11456  007206  0012               	return	
 11457  007208  D7E6               	goto	l10743
 11458  00720A                     __end_of_lcd_show_dp:
 11459                           	opt stack 0
 11460                           tblptru	equ	0xFF8
 11461                           tblptrh	equ	0xFF7
 11462                           tblptrl	equ	0xFF6
 11463                           tablat	equ	0xFF5
 11464                           prodh	equ	0xFF4
 11465                           prodl	equ	0xFF3
 11466                           intcon	equ	0xFF2
 11467                           indf0	equ	0xFEF
 11468                           postinc0	equ	0xFEE
 11469                           fsr0h	equ	0xFEA
 11470                           fsr0l	equ	0xFE9
 11471                           wreg	equ	0xFE8
 11472                           postdec1	equ	0xFE5
 11473                           plusw1	equ	0xFE3
 11474                           fsr1h	equ	0xFE2
 11475                           fsr1l	equ	0xFE1
 11476                           indf2	equ	0xFDF
 11477                           postinc2	equ	0xFDE
 11478                           postdec2	equ	0xFDD
 11479                           plusw2	equ	0xFDB
 11480                           fsr2h	equ	0xFDA
 11481                           fsr2l	equ	0xFD9
 11482                           status	equ	0xFD8
 11483                           
 11484 ;; *************** function _lcd_disp_dp_loc_2 *****************
 11485 ;; Defined at:
 11486 ;;		line 276 in file "src/driver/lcd.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  dp              1    wreg     unsigned char 
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;  dp              1   31[COMRAM] unsigned char 
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;Total ram usage:        1 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:    6
 11507 ;; This function calls:
 11508 ;;		_lcd_set_com_seg
 11509 ;; This function is called by:
 11510 ;;		_lcd_show_dp
 11511 ;;		_lcd_clear_all_dp
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text64
 11516  007FBA                     __ptext64:
 11517                           	opt stack 0
 11518  007FBA                     _lcd_disp_dp_loc_2:
 11519                           	opt stack 17
 11520                           
 11521                           ;incstack = 0
 11522                           ;lcd_disp_dp_loc_2@dp stored from wreg
 11523  007FBA  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
 11524                           
 11525                           ;lcd.c: 278: if(dp)
 11526  007FBC  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
 11527  007FBE  B4D8               	btfsc	status,2,c
 11528  007FC0  D00A               	goto	l10707
 11529                           
 11530                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
 11531  007FC2  0E14               	movlw	20
 11532  007FC4  0100               	movlb	0	; () banked
 11533  007FC6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11534  007FC8  0E80               	movlw	128
 11535  007FCA  0100               	movlb	0	; () banked
 11536  007FCC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11537  007FCE  0E03               	movlw	3
 11538  007FD0  EC02  F02E         	call	_lcd_set_com_seg
 11539  007FD4  0012               	return	
 11540  007FD6                     l10707:
 11541                           
 11542                           ;lcd.c: 280: else
 11543                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
 11544  007FD6  0E14               	movlw	20
 11545  007FD8  0100               	movlb	0	; () banked
 11546  007FDA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11547  007FDC  0E00               	movlw	0
 11548  007FDE  0100               	movlb	0	; () banked
 11549  007FE0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11550  007FE2  0E03               	movlw	3
 11551  007FE4  EC02  F02E         	call	_lcd_set_com_seg
 11552  007FE8  0012               	return	
 11553  007FEA                     __end_of_lcd_disp_dp_loc_2:
 11554                           	opt stack 0
 11555                           tblptru	equ	0xFF8
 11556                           tblptrh	equ	0xFF7
 11557                           tblptrl	equ	0xFF6
 11558                           tablat	equ	0xFF5
 11559                           prodh	equ	0xFF4
 11560                           prodl	equ	0xFF3
 11561                           intcon	equ	0xFF2
 11562                           indf0	equ	0xFEF
 11563                           postinc0	equ	0xFEE
 11564                           fsr0h	equ	0xFEA
 11565                           fsr0l	equ	0xFE9
 11566                           wreg	equ	0xFE8
 11567                           postdec1	equ	0xFE5
 11568                           plusw1	equ	0xFE3
 11569                           fsr1h	equ	0xFE2
 11570                           fsr1l	equ	0xFE1
 11571                           indf2	equ	0xFDF
 11572                           postinc2	equ	0xFDE
 11573                           postdec2	equ	0xFDD
 11574                           plusw2	equ	0xFDB
 11575                           fsr2h	equ	0xFDA
 11576                           fsr2l	equ	0xFD9
 11577                           status	equ	0xFD8
 11578                           
 11579 ;; *************** function _lcd_disp_dp_loc_1 *****************
 11580 ;; Defined at:
 11581 ;;		line 257 in file "src/driver/lcd.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  dp              1    wreg     unsigned char 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  dp              1   31[COMRAM] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;Total ram usage:        1 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    6
 11602 ;; This function calls:
 11603 ;;		_lcd_set_com_seg
 11604 ;; This function is called by:
 11605 ;;		_lcd_show_dp
 11606 ;;		_lcd_clear_all_dp
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text65
 11611  007FEA                     __ptext65:
 11612                           	opt stack 0
 11613  007FEA                     _lcd_disp_dp_loc_1:
 11614                           	opt stack 17
 11615                           
 11616                           ;incstack = 0
 11617                           ;lcd_disp_dp_loc_1@dp stored from wreg
 11618  007FEA  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
 11619                           
 11620                           ;lcd.c: 259: if(dp)
 11621  007FEC  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
 11622  007FEE  B4D8               	btfsc	status,2,c
 11623  007FF0  D00A               	goto	l10701
 11624                           
 11625                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
 11626  007FF2  0E16               	movlw	22
 11627  007FF4  0100               	movlb	0	; () banked
 11628  007FF6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11629  007FF8  0E80               	movlw	128
 11630  007FFA  0100               	movlb	0	; () banked
 11631  007FFC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11632  007FFE  0E03               	movlw	3
 11633  008000  EC02  F02E         	call	_lcd_set_com_seg
 11634  008004  0012               	return	
 11635  008006                     l10701:
 11636                           
 11637                           ;lcd.c: 261: else
 11638                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
 11639  008006  0E16               	movlw	22
 11640  008008  0100               	movlb	0	; () banked
 11641  00800A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11642  00800C  0E00               	movlw	0
 11643  00800E  0100               	movlb	0	; () banked
 11644  008010  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11645  008012  0E03               	movlw	3
 11646  008014  EC02  F02E         	call	_lcd_set_com_seg
 11647  008018  0012               	return	
 11648  00801A                     __end_of_lcd_disp_dp_loc_1:
 11649                           	opt stack 0
 11650                           tblptru	equ	0xFF8
 11651                           tblptrh	equ	0xFF7
 11652                           tblptrl	equ	0xFF6
 11653                           tablat	equ	0xFF5
 11654                           prodh	equ	0xFF4
 11655                           prodl	equ	0xFF3
 11656                           intcon	equ	0xFF2
 11657                           indf0	equ	0xFEF
 11658                           postinc0	equ	0xFEE
 11659                           fsr0h	equ	0xFEA
 11660                           fsr0l	equ	0xFE9
 11661                           wreg	equ	0xFE8
 11662                           postdec1	equ	0xFE5
 11663                           plusw1	equ	0xFE3
 11664                           fsr1h	equ	0xFE2
 11665                           fsr1l	equ	0xFE1
 11666                           indf2	equ	0xFDF
 11667                           postinc2	equ	0xFDE
 11668                           postdec2	equ	0xFDD
 11669                           plusw2	equ	0xFDB
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function _lcd_disp_dp_loc_0 *****************
 11675 ;; Defined at:
 11676 ;;		line 238 in file "src/driver/lcd.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  dp              1    wreg     unsigned char 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  dp              1   31[COMRAM] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;Total ram usage:        1 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:    6
 11697 ;; This function calls:
 11698 ;;		_lcd_set_com_seg
 11699 ;; This function is called by:
 11700 ;;		_lcd_show_dp
 11701 ;;		_lcd_clear_all_dp
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text66
 11706  00801A                     __ptext66:
 11707                           	opt stack 0
 11708  00801A                     _lcd_disp_dp_loc_0:
 11709                           	opt stack 17
 11710                           
 11711                           ;incstack = 0
 11712                           ;lcd_disp_dp_loc_0@dp stored from wreg
 11713  00801A  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
 11714                           
 11715                           ;lcd.c: 240: if(dp)
 11716  00801C  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
 11717  00801E  B4D8               	btfsc	status,2,c
 11718  008020  D00A               	goto	l10695
 11719                           
 11720                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
 11721  008022  0E18               	movlw	24
 11722  008024  0100               	movlb	0	; () banked
 11723  008026  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11724  008028  0E80               	movlw	128
 11725  00802A  0100               	movlb	0	; () banked
 11726  00802C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11727  00802E  0E03               	movlw	3
 11728  008030  EC02  F02E         	call	_lcd_set_com_seg
 11729  008034  0012               	return	
 11730  008036                     l10695:
 11731                           
 11732                           ;lcd.c: 242: else
 11733                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
 11734  008036  0E18               	movlw	24
 11735  008038  0100               	movlb	0	; () banked
 11736  00803A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11737  00803C  0E00               	movlw	0
 11738  00803E  0100               	movlb	0	; () banked
 11739  008040  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11740  008042  0E03               	movlw	3
 11741  008044  EC02  F02E         	call	_lcd_set_com_seg
 11742  008048  0012               	return	
 11743  00804A                     __end_of_lcd_disp_dp_loc_0:
 11744                           	opt stack 0
 11745                           tblptru	equ	0xFF8
 11746                           tblptrh	equ	0xFF7
 11747                           tblptrl	equ	0xFF6
 11748                           tablat	equ	0xFF5
 11749                           prodh	equ	0xFF4
 11750                           prodl	equ	0xFF3
 11751                           intcon	equ	0xFF2
 11752                           indf0	equ	0xFEF
 11753                           postinc0	equ	0xFEE
 11754                           fsr0h	equ	0xFEA
 11755                           fsr0l	equ	0xFE9
 11756                           wreg	equ	0xFE8
 11757                           postdec1	equ	0xFE5
 11758                           plusw1	equ	0xFE3
 11759                           fsr1h	equ	0xFE2
 11760                           fsr1l	equ	0xFE1
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           plusw2	equ	0xFDB
 11765                           fsr2h	equ	0xFDA
 11766                           fsr2l	equ	0xFD9
 11767                           status	equ	0xFD8
 11768                           
 11769 ;; *************** function _lcd_disp_unit_mpa *****************
 11770 ;; Defined at:
 11771 ;;		line 458 in file "src/driver/lcd.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;  show            1    wreg     unsigned char 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  show            1   31[COMRAM] unsigned char 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;Total ram usage:        1 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; Hardware stack levels required when called:    6
 11792 ;; This function calls:
 11793 ;;		_lcd_set_com_seg
 11794 ;; This function is called by:
 11795 ;;		_ui_disp_menu_home_00
 11796 ;;		_ui_disp_menu_home_01
 11797 ;;		_ui_disp_menu_home_02
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text67
 11802  0073B0                     __ptext67:
 11803                           	opt stack 0
 11804  0073B0                     _lcd_disp_unit_mpa:
 11805                           	opt stack 20
 11806                           
 11807                           ;incstack = 0
 11808                           ;lcd_disp_unit_mpa@show stored from wreg
 11809  0073B0  6E20               	movwf	lcd_disp_unit_mpa@show,c
 11810                           
 11811                           ;lcd.c: 461: lcd_set_com_seg(3,13,0);
 11812  0073B2  0E0D               	movlw	13
 11813  0073B4  0100               	movlb	0	; () banked
 11814  0073B6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11815  0073B8  0E00               	movlw	0
 11816  0073BA  0100               	movlb	0	; () banked
 11817  0073BC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11818  0073BE  0E03               	movlw	3
 11819  0073C0  EC02  F02E         	call	_lcd_set_com_seg
 11820                           
 11821                           ;lcd.c: 462: lcd_set_com_seg(1,41,0);
 11822  0073C4  0E29               	movlw	41
 11823  0073C6  0100               	movlb	0	; () banked
 11824  0073C8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11825  0073CA  0E00               	movlw	0
 11826  0073CC  0100               	movlb	0	; () banked
 11827  0073CE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11828  0073D0  0E01               	movlw	1
 11829  0073D2  EC02  F02E         	call	_lcd_set_com_seg
 11830                           
 11831                           ;lcd.c: 463: lcd_set_com_seg(0,41,0);
 11832  0073D6  0E29               	movlw	41
 11833  0073D8  0100               	movlb	0	; () banked
 11834  0073DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11835  0073DC  0E00               	movlw	0
 11836  0073DE  0100               	movlb	0	; () banked
 11837  0073E0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11838  0073E2  0E00               	movlw	0
 11839  0073E4  EC02  F02E         	call	_lcd_set_com_seg
 11840                           
 11841                           ;lcd.c: 464: if(show){
 11842  0073E8  5020               	movf	lcd_disp_unit_mpa@show,w,c
 11843  0073EA  B4D8               	btfsc	status,2,c
 11844  0073EC  D00A               	goto	l12199
 11845                           
 11846                           ;lcd.c: 465: lcd_set_com_seg(0,40,1);
 11847  0073EE  0E28               	movlw	40
 11848  0073F0  0100               	movlb	0	; () banked
 11849  0073F2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11850  0073F4  0E01               	movlw	1
 11851  0073F6  0100               	movlb	0	; () banked
 11852  0073F8  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11853  0073FA  0E00               	movlw	0
 11854  0073FC  EC02  F02E         	call	_lcd_set_com_seg
 11855                           
 11856                           ;lcd.c: 466: }else{
 11857  007400  0012               	return	
 11858  007402                     l12199:
 11859                           
 11860                           ;lcd.c: 467: lcd_set_com_seg(0,40,0);
 11861  007402  0E28               	movlw	40
 11862  007404  0100               	movlb	0	; () banked
 11863  007406  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11864  007408  0E00               	movlw	0
 11865  00740A  0100               	movlb	0	; () banked
 11866  00740C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11867  00740E  0E00               	movlw	0
 11868  007410  EC02  F02E         	call	_lcd_set_com_seg
 11869  007414  0012               	return	
 11870  007416                     __end_of_lcd_disp_unit_mpa:
 11871                           	opt stack 0
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           indf0	equ	0xFEF
 11880                           postinc0	equ	0xFEE
 11881                           fsr0h	equ	0xFEA
 11882                           fsr0l	equ	0xFE9
 11883                           wreg	equ	0xFE8
 11884                           postdec1	equ	0xFE5
 11885                           plusw1	equ	0xFE3
 11886                           fsr1h	equ	0xFE2
 11887                           fsr1l	equ	0xFE1
 11888                           indf2	equ	0xFDF
 11889                           postinc2	equ	0xFDE
 11890                           postdec2	equ	0xFDD
 11891                           plusw2	equ	0xFDB
 11892                           fsr2h	equ	0xFDA
 11893                           fsr2l	equ	0xFD9
 11894                           status	equ	0xFD8
 11895                           
 11896 ;; *************** function _lcd_disp_unit_1st_m *****************
 11897 ;; Defined at:
 11898 ;;		line 396 in file "src/driver/lcd.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  show            1    wreg     unsigned char 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  show            1   31[COMRAM] unsigned char 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      void 
 11905 ;; Registers used:
 11906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;Total ram usage:        1 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    6
 11919 ;; This function calls:
 11920 ;;		_lcd_set_com_seg
 11921 ;; This function is called by:
 11922 ;;		_ui_disp_menu_home_00
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	text68
 11927  00791E                     __ptext68:
 11928                           	opt stack 0
 11929  00791E                     _lcd_disp_unit_1st_m:
 11930                           	opt stack 20
 11931                           
 11932                           ;incstack = 0
 11933                           ;lcd_disp_unit_1st_m@show stored from wreg
 11934  00791E  6E20               	movwf	lcd_disp_unit_1st_m@show,c
 11935                           
 11936                           ;lcd.c: 399: lcd_set_com_seg(3,42,0);
 11937  007920  0E2A               	movlw	42
 11938  007922  0100               	movlb	0	; () banked
 11939  007924  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11940  007926  0E00               	movlw	0
 11941  007928  0100               	movlb	0	; () banked
 11942  00792A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11943  00792C  0E03               	movlw	3
 11944  00792E  EC02  F02E         	call	_lcd_set_com_seg
 11945                           
 11946                           ;lcd.c: 400: lcd_set_com_seg(3,41,0);
 11947  007932  0E29               	movlw	41
 11948  007934  0100               	movlb	0	; () banked
 11949  007936  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11950  007938  0E00               	movlw	0
 11951  00793A  0100               	movlb	0	; () banked
 11952  00793C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11953  00793E  0E03               	movlw	3
 11954  007940  EC02  F02E         	call	_lcd_set_com_seg
 11955                           
 11956                           ;lcd.c: 401: if(show){
 11957  007944  5020               	movf	lcd_disp_unit_1st_m@show,w,c
 11958  007946  B4D8               	btfsc	status,2,c
 11959  007948  D00A               	goto	l12191
 11960                           
 11961                           ;lcd.c: 402: lcd_set_com_seg(2,41,1);
 11962  00794A  0E29               	movlw	41
 11963  00794C  0100               	movlb	0	; () banked
 11964  00794E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11965  007950  0E01               	movlw	1
 11966  007952  0100               	movlb	0	; () banked
 11967  007954  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11968  007956  0E02               	movlw	2
 11969  007958  EC02  F02E         	call	_lcd_set_com_seg
 11970                           
 11971                           ;lcd.c: 403: }else{
 11972  00795C  0012               	return	
 11973  00795E                     l12191:
 11974                           
 11975                           ;lcd.c: 404: lcd_set_com_seg(2,41,0);
 11976  00795E  0E29               	movlw	41
 11977  007960  0100               	movlb	0	; () banked
 11978  007962  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11979  007964  0E00               	movlw	0
 11980  007966  0100               	movlb	0	; () banked
 11981  007968  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11982  00796A  0E02               	movlw	2
 11983  00796C  EC02  F02E         	call	_lcd_set_com_seg
 11984  007970  0012               	return	
 11985  007972                     __end_of_lcd_disp_unit_1st_m:
 11986                           	opt stack 0
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodh	equ	0xFF4
 11992                           prodl	equ	0xFF3
 11993                           intcon	equ	0xFF2
 11994                           indf0	equ	0xFEF
 11995                           postinc0	equ	0xFEE
 11996                           fsr0h	equ	0xFEA
 11997                           fsr0l	equ	0xFE9
 11998                           wreg	equ	0xFE8
 11999                           postdec1	equ	0xFE5
 12000                           plusw1	equ	0xFE3
 12001                           fsr1h	equ	0xFE2
 12002                           fsr1l	equ	0xFE1
 12003                           indf2	equ	0xFDF
 12004                           postinc2	equ	0xFDE
 12005                           postdec2	equ	0xFDD
 12006                           plusw2	equ	0xFDB
 12007                           fsr2h	equ	0xFDA
 12008                           fsr2l	equ	0xFD9
 12009                           status	equ	0xFD8
 12010                           
 12011 ;; *************** function _lcd_disp_refresh *****************
 12012 ;; Defined at:
 12013 ;;		line 568 in file "src/driver/lcd.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		None
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    4
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_ui_disp_start_cs600
 12038 ;;		_ui_disp_adj_xfixed_pt
 12039 ;;		_ui_disp_menu_home_00
 12040 ;;		_ui_disp_menu_home_01
 12041 ;;		_ui_disp_menu_home_02
 12042 ;;		_ui_disp_all_on
 12043 ;;		_ui_disp_all_off
 12044 ;;		_ui_disp_rtc_mm_ss
 12045 ;;		_ui_disp_adj_xfloat_pt
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           	psect	text69
 12050  0074DC                     __ptext69:
 12051                           	opt stack 0
 12052  0074DC                     _lcd_disp_refresh:
 12053                           	opt stack 25
 12054                           
 12055                           ;lcd.c: 571: LCDDATA0=pLCD[0];
 12056                           
 12057                           ;incstack = 0
 12058  0074DC  C100  FFBB         	movff	_pLCD,4027	;volatile
 12059                           
 12060                           ;lcd.c: 572: LCDDATA1=pLCD[1];
 12061  0074E0  C101  FFBC         	movff	_pLCD+1,4028	;volatile
 12062                           
 12063                           ;lcd.c: 573: LCDDATA2=pLCD[2];
 12064  0074E4  C102  FFBD         	movff	_pLCD+2,4029	;volatile
 12065                           
 12066                           ;lcd.c: 574: LCDDATA3=pLCD[3];
 12067  0074E8  C103  FFBE         	movff	_pLCD+3,4030	;volatile
 12068                           
 12069                           ;lcd.c: 575: LCDDATA4=pLCD[4];
 12070  0074EC  C104  FFBF         	movff	_pLCD+4,4031	;volatile
 12071                           
 12072                           ;lcd.c: 576: LCDDATA5=pLCD[5];
 12073  0074F0  C105  FF6B         	movff	_pLCD+5,3947	;volatile
 12074                           
 12075                           ;lcd.c: 577: LCDDATA6=pLCD[6];
 12076  0074F4  C106  FF6C         	movff	_pLCD+6,3948	;volatile
 12077                           
 12078                           ;lcd.c: 578: LCDDATA7=pLCD[7];
 12079  0074F8  C107  FF6D         	movff	_pLCD+7,3949	;volatile
 12080                           
 12081                           ;lcd.c: 579: LCDDATA8=pLCD[8];
 12082  0074FC  C108  FF6E         	movff	_pLCD+8,3950	;volatile
 12083                           
 12084                           ;lcd.c: 580: LCDDATA9=pLCD[9];
 12085  007500  C109  FF6F         	movff	_pLCD+9,3951	;volatile
 12086                           
 12087                           ;lcd.c: 582: LCDDATA10=pLCD[10];
 12088  007504  C10A  FF70         	movff	_pLCD+10,3952	;volatile
 12089                           
 12090                           ;lcd.c: 583: LCDDATA11=pLCD[11];
 12091  007508  C10B  FF71         	movff	_pLCD+11,3953	;volatile
 12092                           
 12093                           ;lcd.c: 584: LCDDATA12=pLCD[12];
 12094  00750C  C10C  FF72         	movff	_pLCD+12,3954	;volatile
 12095                           
 12096                           ;lcd.c: 585: LCDDATA13=pLCD[13];
 12097  007510  C10D  FF73         	movff	_pLCD+13,3955	;volatile
 12098                           
 12099                           ;lcd.c: 586: LCDDATA14=pLCD[14];
 12100  007514  C10E  FF74         	movff	_pLCD+14,3956	;volatile
 12101                           
 12102                           ;lcd.c: 587: LCDDATA15=pLCD[15];
 12103  007518  C10F  FF75         	movff	_pLCD+15,3957	;volatile
 12104                           
 12105                           ;lcd.c: 588: LCDDATA16=pLCD[16];
 12106  00751C  C110  FF76         	movff	_pLCD+16,3958	;volatile
 12107                           
 12108                           ;lcd.c: 589: LCDDATA17=pLCD[17];
 12109  007520  C111  FF77         	movff	_pLCD+17,3959	;volatile
 12110                           
 12111                           ;lcd.c: 590: LCDDATA18=pLCD[18];
 12112  007524  C112  FF78         	movff	_pLCD+18,3960	;volatile
 12113                           
 12114                           ;lcd.c: 591: LCDDATA19=pLCD[19];
 12115  007528  C113  FF79         	movff	_pLCD+19,3961	;volatile
 12116                           
 12117                           ;lcd.c: 593: LCDDATA20=pLCD[20];
 12118  00752C  C114  FF7A         	movff	_pLCD+20,3962	;volatile
 12119                           
 12120                           ;lcd.c: 594: LCDDATA21=pLCD[21];
 12121  007530  C115  FF7B         	movff	_pLCD+21,3963	;volatile
 12122                           
 12123                           ;lcd.c: 595: LCDDATA22=pLCD[22];
 12124  007534  C116  FF7C         	movff	_pLCD+22,3964	;volatile
 12125                           
 12126                           ;lcd.c: 596: LCDDATA23=pLCD[23];
 12127  007538  C117  FF7D         	movff	_pLCD+23,3965	;volatile
 12128  00753C  0012               	return		;funcret
 12129  00753E                     __end_of_lcd_disp_refresh:
 12130                           	opt stack 0
 12131                           tblptru	equ	0xFF8
 12132                           tblptrh	equ	0xFF7
 12133                           tblptrl	equ	0xFF6
 12134                           tablat	equ	0xFF5
 12135                           prodh	equ	0xFF4
 12136                           prodl	equ	0xFF3
 12137                           intcon	equ	0xFF2
 12138                           indf0	equ	0xFEF
 12139                           postinc0	equ	0xFEE
 12140                           fsr0h	equ	0xFEA
 12141                           fsr0l	equ	0xFE9
 12142                           wreg	equ	0xFE8
 12143                           postdec1	equ	0xFE5
 12144                           plusw1	equ	0xFE3
 12145                           fsr1h	equ	0xFE2
 12146                           fsr1l	equ	0xFE1
 12147                           indf2	equ	0xFDF
 12148                           postinc2	equ	0xFDE
 12149                           postdec2	equ	0xFDD
 12150                           plusw2	equ	0xFDB
 12151                           fsr2h	equ	0xFDA
 12152                           fsr2l	equ	0xFD9
 12153                           status	equ	0xFD8
 12154                           
 12155 ;; *************** function _lcd_disp_level *****************
 12156 ;; Defined at:
 12157 ;;		line 118 in file "src/driver/lcd.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;  level           1    wreg     unsigned char 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  level           1   18[BANK0 ] unsigned char 
 12162 ;;  i               1   19[BANK0 ] unsigned char 
 12163 ;; Return value:  Size  Location     Type
 12164 ;;                  1    wreg      void 
 12165 ;; Registers used:
 12166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/0
 12169 ;;		On exit  : 0/0
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;Total ram usage:        2 bytes
 12177 ;; Hardware stack levels used:    1
 12178 ;; Hardware stack levels required when called:    7
 12179 ;; This function calls:
 12180 ;;		_lcd_disp_level_bar
 12181 ;; This function is called by:
 12182 ;;		_ui_disp_menu_home_00
 12183 ;;		_ui_disp_menu_home_01
 12184 ;;		_ui_disp_menu_home_02
 12185 ;;		_ui_disp_rtc_mm_ss
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text70
 12190  00781E                     __ptext70:
 12191                           	opt stack 0
 12192  00781E                     _lcd_disp_level:
 12193                           	opt stack 19
 12194                           
 12195                           ;incstack = 0
 12196                           ;lcd_disp_level@level stored from wreg
 12197  00781E  0100               	movlb	0	; () banked
 12198  007820  6F72               	movwf	lcd_disp_level@level& (0+255),b
 12199                           
 12200                           ;lcd.c: 120: uint8_t i;
 12201                           ;lcd.c: 121: if(level>=99)level=99;
 12202  007822  0E62               	movlw	98
 12203  007824  0100               	movlb	0	; () banked
 12204  007826  6572               	cpfsgt	lcd_disp_level@level& (0+255),b
 12205  007828  D003               	goto	l12113
 12206                           
 12207                           ; BSR set to: 0
 12208  00782A  0E63               	movlw	99
 12209  00782C  0100               	movlb	0	; () banked
 12210  00782E  6F72               	movwf	lcd_disp_level@level& (0+255),b
 12211  007830                     l12113:
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;lcd.c: 122: level/=2;
 12215  007830  0100               	movlb	0	; () banked
 12216  007832  90D8               	bcf	status,0,c
 12217  007834  3372               	rrcf	lcd_disp_level@level& (0+255),f,b
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;lcd.c: 123: for(i=0;i<level;i++){
 12221  007836  0E00               	movlw	0
 12222  007838  0100               	movlb	0	; () banked
 12223  00783A  6F73               	movwf	lcd_disp_level@i& (0+255),b
 12224  00783C  D008               	goto	l12121
 12225  00783E                     l12117:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
 12229  00783E  0E01               	movlw	1
 12230  007840  6E20               	movwf	lcd_disp_level_bar@show,c
 12231  007842  0100               	movlb	0	; () banked
 12232  007844  5173               	movf	lcd_disp_level@i& (0+255),w,b
 12233  007846  ECD7  F006         	call	_lcd_disp_level_bar
 12234  00784A  0100               	movlb	0	; () banked
 12235  00784C  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 12236  00784E                     l12121:
 12237                           
 12238                           ; BSR set to: 0
 12239  00784E  0100               	movlb	0	; () banked
 12240  007850  5172               	movf	lcd_disp_level@level& (0+255),w,b
 12241  007852  0100               	movlb	0	; () banked
 12242  007854  5D73               	subwf	lcd_disp_level@i& (0+255),w,b
 12243  007856  A0D8               	btfss	status,0,c
 12244  007858  D7F2               	goto	l12117
 12245  00785A                     l12123:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;lcd.c: 125: }
 12249                           ;lcd.c: 126: for(;i<50;i++){
 12250  00785A  0E31               	movlw	49
 12251  00785C  0100               	movlb	0	; () banked
 12252  00785E  6573               	cpfsgt	lcd_disp_level@i& (0+255),b
 12253  007860  D001               	goto	l12127
 12254  007862  0012               	return	
 12255  007864                     l12127:
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
 12259  007864  0E00               	movlw	0
 12260  007866  6E20               	movwf	lcd_disp_level_bar@show,c
 12261  007868  0100               	movlb	0	; () banked
 12262  00786A  5173               	movf	lcd_disp_level@i& (0+255),w,b
 12263  00786C  ECD7  F006         	call	_lcd_disp_level_bar
 12264  007870  0100               	movlb	0	; () banked
 12265  007872  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 12266  007874  D7F2               	goto	l12123
 12267  007876                     __end_of_lcd_disp_level:
 12268                           	opt stack 0
 12269                           tblptru	equ	0xFF8
 12270                           tblptrh	equ	0xFF7
 12271                           tblptrl	equ	0xFF6
 12272                           tablat	equ	0xFF5
 12273                           prodh	equ	0xFF4
 12274                           prodl	equ	0xFF3
 12275                           intcon	equ	0xFF2
 12276                           indf0	equ	0xFEF
 12277                           postinc0	equ	0xFEE
 12278                           fsr0h	equ	0xFEA
 12279                           fsr0l	equ	0xFE9
 12280                           wreg	equ	0xFE8
 12281                           postdec1	equ	0xFE5
 12282                           plusw1	equ	0xFE3
 12283                           fsr1h	equ	0xFE2
 12284                           fsr1l	equ	0xFE1
 12285                           indf2	equ	0xFDF
 12286                           postinc2	equ	0xFDE
 12287                           postdec2	equ	0xFDD
 12288                           plusw2	equ	0xFDB
 12289                           fsr2h	equ	0xFDA
 12290                           fsr2l	equ	0xFD9
 12291                           status	equ	0xFD8
 12292                           
 12293 ;; *************** function _lcd_disp_level_bar *****************
 12294 ;; Defined at:
 12295 ;;		line 46 in file "src/driver/lcd.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  bar             1    wreg     unsigned char 
 12298 ;;  show            1   31[COMRAM] unsigned char 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  bar             1   17[BANK0 ] unsigned char 
 12301 ;;  __bar           1   16[BANK0 ] unsigned char 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12311 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;Total ram usage:        3 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    6
 12318 ;; This function calls:
 12319 ;;		_lcd_set_com_seg
 12320 ;; This function is called by:
 12321 ;;		_lcd_disp_level
 12322 ;;		_lcd_disp_level_off
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text71
 12327  000DAE                     __ptext71:
 12328                           	opt stack 0
 12329  000DAE                     _lcd_disp_level_bar:
 12330                           	opt stack 19
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;incstack = 0
 12334                           ;lcd_disp_level_bar@bar stored from wreg
 12335  000DAE  0100               	movlb	0	; () banked
 12336  000DB0  6F71               	movwf	lcd_disp_level_bar@bar& (0+255),b
 12337                           
 12338                           ;lcd.c: 49: uint8_t __bar;
 12339                           ;lcd.c: 50: if(bar>49)return;
 12340  000DB2  0E31               	movlw	49
 12341  000DB4  0100               	movlb	0	; () banked
 12342  000DB6  6571               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
 12343  000DB8  D001               	goto	l11225
 12344  000DBA  0012               	return	
 12345  000DBC                     l11225:
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;lcd.c: 51: __bar=49-bar;
 12349  000DBC  0100               	movlb	0	; () banked
 12350  000DBE  5171               	movf	lcd_disp_level_bar@bar& (0+255),w,b
 12351  000DC0  0800               	sublw	0
 12352  000DC2  0F31               	addlw	49
 12353  000DC4  0100               	movlb	0	; () banked
 12354  000DC6  6F70               	movwf	lcd_disp_level_bar@__bar& (0+255),b
 12355                           
 12356                           ;lcd.c: 52: switch(__bar){
 12357  000DC8  D1C2               	goto	l11329
 12358  000DCA                     l11227:
 12359                           
 12360                           ; BSR set to: 0
 12361  000DCA  0E2E               	movlw	46
 12362  000DCC  0100               	movlb	0	; () banked
 12363  000DCE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12364  000DD0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12365  000DD4  0E00               	movlw	0
 12366  000DD6  EC02  F02E         	call	_lcd_set_com_seg
 12367  000DDA  0012               	return	
 12368  000DDC                     l11229:
 12369  000DDC  0E2E               	movlw	46
 12370  000DDE  0100               	movlb	0	; () banked
 12371  000DE0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12372  000DE2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12373  000DE6  0E01               	movlw	1
 12374  000DE8  EC02  F02E         	call	_lcd_set_com_seg
 12375  000DEC  0012               	return	
 12376  000DEE                     l11231:
 12377  000DEE  0E2E               	movlw	46
 12378  000DF0  0100               	movlb	0	; () banked
 12379  000DF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12380  000DF4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12381  000DF8  0E02               	movlw	2
 12382  000DFA  EC02  F02E         	call	_lcd_set_com_seg
 12383  000DFE  0012               	return	
 12384  000E00                     l11233:
 12385  000E00  0E2E               	movlw	46
 12386  000E02  0100               	movlb	0	; () banked
 12387  000E04  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12388  000E06  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12389  000E0A  0E03               	movlw	3
 12390  000E0C  EC02  F02E         	call	_lcd_set_com_seg
 12391  000E10  0012               	return	
 12392  000E12                     l11235:
 12393  000E12  0E2F               	movlw	47
 12394  000E14  0100               	movlb	0	; () banked
 12395  000E16  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12396  000E18  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12397  000E1C  0E03               	movlw	3
 12398  000E1E  EC02  F02E         	call	_lcd_set_com_seg
 12399  000E22  0012               	return	
 12400  000E24                     l11237:
 12401  000E24  0E2F               	movlw	47
 12402  000E26  0100               	movlb	0	; () banked
 12403  000E28  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12404  000E2A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12405  000E2E  0E02               	movlw	2
 12406  000E30  EC02  F02E         	call	_lcd_set_com_seg
 12407  000E34  0012               	return	
 12408  000E36                     l11239:
 12409  000E36  0E2F               	movlw	47
 12410  000E38  0100               	movlb	0	; () banked
 12411  000E3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12412  000E3C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12413  000E40  0E01               	movlw	1
 12414  000E42  EC02  F02E         	call	_lcd_set_com_seg
 12415  000E46  0012               	return	
 12416  000E48                     l11241:
 12417  000E48  0E2F               	movlw	47
 12418  000E4A  0100               	movlb	0	; () banked
 12419  000E4C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12420  000E4E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12421  000E52  0E00               	movlw	0
 12422  000E54  EC02  F02E         	call	_lcd_set_com_seg
 12423  000E58  0012               	return	
 12424  000E5A                     l11243:
 12425  000E5A  0E1F               	movlw	31
 12426  000E5C  0100               	movlb	0	; () banked
 12427  000E5E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12428  000E60  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12429  000E64  0E00               	movlw	0
 12430  000E66  EC02  F02E         	call	_lcd_set_com_seg
 12431  000E6A  0012               	return	
 12432  000E6C                     l11245:
 12433  000E6C  0E1F               	movlw	31
 12434  000E6E  0100               	movlb	0	; () banked
 12435  000E70  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12436  000E72  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12437  000E76  0E01               	movlw	1
 12438  000E78  EC02  F02E         	call	_lcd_set_com_seg
 12439  000E7C  0012               	return	
 12440  000E7E                     l11247:
 12441  000E7E  0E1F               	movlw	31
 12442  000E80  0100               	movlb	0	; () banked
 12443  000E82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12444  000E84  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12445  000E88  0E02               	movlw	2
 12446  000E8A  EC02  F02E         	call	_lcd_set_com_seg
 12447  000E8E  0012               	return	
 12448  000E90                     l11249:
 12449  000E90  0E1F               	movlw	31
 12450  000E92  0100               	movlb	0	; () banked
 12451  000E94  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12452  000E96  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12453  000E9A  0E03               	movlw	3
 12454  000E9C  EC02  F02E         	call	_lcd_set_com_seg
 12455  000EA0  0012               	return	
 12456  000EA2                     l11251:
 12457  000EA2  0E00               	movlw	0
 12458  000EA4  0100               	movlb	0	; () banked
 12459  000EA6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12460  000EA8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12461  000EAC  0E03               	movlw	3
 12462  000EAE  EC02  F02E         	call	_lcd_set_com_seg
 12463  000EB2  0012               	return	
 12464  000EB4                     l11253:
 12465  000EB4  0E00               	movlw	0
 12466  000EB6  0100               	movlb	0	; () banked
 12467  000EB8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12468  000EBA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12469  000EBE  0E02               	movlw	2
 12470  000EC0  EC02  F02E         	call	_lcd_set_com_seg
 12471  000EC4  0012               	return	
 12472  000EC6                     l11255:
 12473  000EC6  0E00               	movlw	0
 12474  000EC8  0100               	movlb	0	; () banked
 12475  000ECA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12476  000ECC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12477  000ED0  0E01               	movlw	1
 12478  000ED2  EC02  F02E         	call	_lcd_set_com_seg
 12479  000ED6  0012               	return	
 12480  000ED8                     l11257:
 12481  000ED8  0E00               	movlw	0
 12482  000EDA  0100               	movlb	0	; () banked
 12483  000EDC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12484  000EDE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12485  000EE2  0E00               	movlw	0
 12486  000EE4  EC02  F02E         	call	_lcd_set_com_seg
 12487  000EE8  0012               	return	
 12488  000EEA                     l11259:
 12489  000EEA  0E01               	movlw	1
 12490  000EEC  0100               	movlb	0	; () banked
 12491  000EEE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12492  000EF0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12493  000EF4  0E00               	movlw	0
 12494  000EF6  EC02  F02E         	call	_lcd_set_com_seg
 12495  000EFA  0012               	return	
 12496  000EFC                     l11261:
 12497  000EFC  0E01               	movlw	1
 12498  000EFE  0100               	movlb	0	; () banked
 12499  000F00  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12500  000F02  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12501  000F06  0E01               	movlw	1
 12502  000F08  EC02  F02E         	call	_lcd_set_com_seg
 12503  000F0C  0012               	return	
 12504  000F0E                     l11263:
 12505  000F0E  0E01               	movlw	1
 12506  000F10  0100               	movlb	0	; () banked
 12507  000F12  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12508  000F14  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12509  000F18  0E02               	movlw	2
 12510  000F1A  EC02  F02E         	call	_lcd_set_com_seg
 12511  000F1E  0012               	return	
 12512  000F20                     l11265:
 12513  000F20  0E01               	movlw	1
 12514  000F22  0100               	movlb	0	; () banked
 12515  000F24  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12516  000F26  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12517  000F2A  0E03               	movlw	3
 12518  000F2C  EC02  F02E         	call	_lcd_set_com_seg
 12519  000F30  0012               	return	
 12520  000F32                     l11267:
 12521  000F32  0E02               	movlw	2
 12522  000F34  0100               	movlb	0	; () banked
 12523  000F36  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12524  000F38  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12525  000F3C  0E03               	movlw	3
 12526  000F3E  EC02  F02E         	call	_lcd_set_com_seg
 12527  000F42  0012               	return	
 12528  000F44                     l11269:
 12529  000F44  0E02               	movlw	2
 12530  000F46  0100               	movlb	0	; () banked
 12531  000F48  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12532  000F4A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12533  000F4E  0E02               	movlw	2
 12534  000F50  EC02  F02E         	call	_lcd_set_com_seg
 12535  000F54  0012               	return	
 12536  000F56                     l11271:
 12537  000F56  0E02               	movlw	2
 12538  000F58  0100               	movlb	0	; () banked
 12539  000F5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12540  000F5C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12541  000F60  0E01               	movlw	1
 12542  000F62  EC02  F02E         	call	_lcd_set_com_seg
 12543  000F66  0012               	return	
 12544  000F68                     l11273:
 12545  000F68  0E02               	movlw	2
 12546  000F6A  0100               	movlb	0	; () banked
 12547  000F6C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12548  000F6E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12549  000F72  0E00               	movlw	0
 12550  000F74  EC02  F02E         	call	_lcd_set_com_seg
 12551  000F78  0012               	return	
 12552  000F7A                     l11275:
 12553  000F7A  0E03               	movlw	3
 12554  000F7C  0100               	movlb	0	; () banked
 12555  000F7E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12556  000F80  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12557  000F84  0E00               	movlw	0
 12558  000F86  EC02  F02E         	call	_lcd_set_com_seg
 12559  000F8A  0012               	return	
 12560  000F8C                     l11277:
 12561  000F8C  0E03               	movlw	3
 12562  000F8E  0100               	movlb	0	; () banked
 12563  000F90  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12564  000F92  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12565  000F96  0E01               	movlw	1
 12566  000F98  EC02  F02E         	call	_lcd_set_com_seg
 12567  000F9C  0012               	return	
 12568  000F9E                     l11279:
 12569  000F9E  0E03               	movlw	3
 12570  000FA0  0100               	movlb	0	; () banked
 12571  000FA2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12572  000FA4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12573  000FA8  0E02               	movlw	2
 12574  000FAA  EC02  F02E         	call	_lcd_set_com_seg
 12575  000FAE  0012               	return	
 12576  000FB0                     l11281:
 12577  000FB0  0E03               	movlw	3
 12578  000FB2  0100               	movlb	0	; () banked
 12579  000FB4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12580  000FB6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12581  000FBA  0E03               	movlw	3
 12582  000FBC  EC02  F02E         	call	_lcd_set_com_seg
 12583  000FC0  0012               	return	
 12584  000FC2                     l11283:
 12585  000FC2  0E04               	movlw	4
 12586  000FC4  0100               	movlb	0	; () banked
 12587  000FC6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12588  000FC8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12589  000FCC  0E03               	movlw	3
 12590  000FCE  EC02  F02E         	call	_lcd_set_com_seg
 12591  000FD2  0012               	return	
 12592  000FD4                     l11285:
 12593  000FD4  0E04               	movlw	4
 12594  000FD6  0100               	movlb	0	; () banked
 12595  000FD8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12596  000FDA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12597  000FDE  0E02               	movlw	2
 12598  000FE0  EC02  F02E         	call	_lcd_set_com_seg
 12599  000FE4  0012               	return	
 12600  000FE6                     l11287:
 12601  000FE6  0E04               	movlw	4
 12602  000FE8  0100               	movlb	0	; () banked
 12603  000FEA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12604  000FEC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12605  000FF0  0E01               	movlw	1
 12606  000FF2  EC02  F02E         	call	_lcd_set_com_seg
 12607  000FF6  0012               	return	
 12608  000FF8                     l11289:
 12609  000FF8  0E04               	movlw	4
 12610  000FFA  0100               	movlb	0	; () banked
 12611  000FFC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12612  000FFE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12613  001002  0E00               	movlw	0
 12614  001004  EC02  F02E         	call	_lcd_set_com_seg
 12615  001008  0012               	return	
 12616  00100A                     l11291:
 12617  00100A  0E05               	movlw	5
 12618  00100C  0100               	movlb	0	; () banked
 12619  00100E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12620  001010  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12621  001014  0E00               	movlw	0
 12622  001016  EC02  F02E         	call	_lcd_set_com_seg
 12623  00101A  0012               	return	
 12624  00101C                     l11293:
 12625  00101C  0E05               	movlw	5
 12626  00101E  0100               	movlb	0	; () banked
 12627  001020  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12628  001022  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12629  001026  0E01               	movlw	1
 12630  001028  EC02  F02E         	call	_lcd_set_com_seg
 12631  00102C  0012               	return	
 12632  00102E                     l11295:
 12633  00102E  0E05               	movlw	5
 12634  001030  0100               	movlb	0	; () banked
 12635  001032  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12636  001034  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12637  001038  0E02               	movlw	2
 12638  00103A  EC02  F02E         	call	_lcd_set_com_seg
 12639  00103E  0012               	return	
 12640  001040                     l11297:
 12641  001040  0E05               	movlw	5
 12642  001042  0100               	movlb	0	; () banked
 12643  001044  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12644  001046  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12645  00104A  0E03               	movlw	3
 12646  00104C  EC02  F02E         	call	_lcd_set_com_seg
 12647  001050  0012               	return	
 12648  001052                     l11299:
 12649  001052  0E06               	movlw	6
 12650  001054  0100               	movlb	0	; () banked
 12651  001056  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12652  001058  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12653  00105C  0E03               	movlw	3
 12654  00105E  EC02  F02E         	call	_lcd_set_com_seg
 12655  001062  0012               	return	
 12656  001064                     l11301:
 12657  001064  0E06               	movlw	6
 12658  001066  0100               	movlb	0	; () banked
 12659  001068  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12660  00106A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12661  00106E  0E02               	movlw	2
 12662  001070  EC02  F02E         	call	_lcd_set_com_seg
 12663  001074  0012               	return	
 12664  001076                     l11303:
 12665  001076  0E06               	movlw	6
 12666  001078  0100               	movlb	0	; () banked
 12667  00107A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12668  00107C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12669  001080  0E01               	movlw	1
 12670  001082  EC02  F02E         	call	_lcd_set_com_seg
 12671  001086  0012               	return	
 12672  001088                     l11305:
 12673  001088  0E06               	movlw	6
 12674  00108A  0100               	movlb	0	; () banked
 12675  00108C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12676  00108E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12677  001092  0E00               	movlw	0
 12678  001094  EC02  F02E         	call	_lcd_set_com_seg
 12679  001098  0012               	return	
 12680  00109A                     l11307:
 12681  00109A  0E07               	movlw	7
 12682  00109C  0100               	movlb	0	; () banked
 12683  00109E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12684  0010A0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12685  0010A4  0E00               	movlw	0
 12686  0010A6  EC02  F02E         	call	_lcd_set_com_seg
 12687  0010AA  0012               	return	
 12688  0010AC                     l11309:
 12689  0010AC  0E07               	movlw	7
 12690  0010AE  0100               	movlb	0	; () banked
 12691  0010B0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12692  0010B2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12693  0010B6  0E01               	movlw	1
 12694  0010B8  EC02  F02E         	call	_lcd_set_com_seg
 12695  0010BC  0012               	return	
 12696  0010BE                     l11311:
 12697  0010BE  0E07               	movlw	7
 12698  0010C0  0100               	movlb	0	; () banked
 12699  0010C2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12700  0010C4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12701  0010C8  0E02               	movlw	2
 12702  0010CA  EC02  F02E         	call	_lcd_set_com_seg
 12703  0010CE  0012               	return	
 12704  0010D0                     l11313:
 12705  0010D0  0E07               	movlw	7
 12706  0010D2  0100               	movlb	0	; () banked
 12707  0010D4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12708  0010D6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12709  0010DA  0E03               	movlw	3
 12710  0010DC  EC02  F02E         	call	_lcd_set_com_seg
 12711  0010E0  0012               	return	
 12712  0010E2                     l11315:
 12713  0010E2  0E21               	movlw	33
 12714  0010E4  0100               	movlb	0	; () banked
 12715  0010E6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12716  0010E8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12717  0010EC  0E03               	movlw	3
 12718  0010EE  EC02  F02E         	call	_lcd_set_com_seg
 12719  0010F2  0012               	return	
 12720  0010F4                     l11317:
 12721  0010F4  0E21               	movlw	33
 12722  0010F6  0100               	movlb	0	; () banked
 12723  0010F8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12724  0010FA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12725  0010FE  0E02               	movlw	2
 12726  001100  EC02  F02E         	call	_lcd_set_com_seg
 12727  001104  0012               	return	
 12728  001106                     l11319:
 12729  001106  0E21               	movlw	33
 12730  001108  0100               	movlb	0	; () banked
 12731  00110A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12732  00110C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12733  001110  0E01               	movlw	1
 12734  001112  EC02  F02E         	call	_lcd_set_com_seg
 12735  001116  0012               	return	
 12736  001118                     l11321:
 12737  001118  0E21               	movlw	33
 12738  00111A  0100               	movlb	0	; () banked
 12739  00111C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12740  00111E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12741  001122  0E00               	movlw	0
 12742  001124  EC02  F02E         	call	_lcd_set_com_seg
 12743  001128  0012               	return	
 12744  00112A                     l11323:
 12745  00112A  0E22               	movlw	34
 12746  00112C  0100               	movlb	0	; () banked
 12747  00112E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12748  001130  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12749  001134  0E00               	movlw	0
 12750  001136  EC02  F02E         	call	_lcd_set_com_seg
 12751  00113A  0012               	return	
 12752  00113C                     l11325:
 12753  00113C  0E22               	movlw	34
 12754  00113E  0100               	movlb	0	; () banked
 12755  001140  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 12756  001142  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 12757  001146  0E01               	movlw	1
 12758  001148  EC02  F02E         	call	_lcd_set_com_seg
 12759                           
 12760                           ;lcd.c: 115: }
 12761  00114C  0012               	return	
 12762  00114E                     l11329:
 12763  00114E  0100               	movlb	0	; () banked
 12764  001150  5170               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
 12765                           
 12766                           ; Switch size 1, requested type "space"
 12767                           ; Number of cases is 50, Range of values is 0 to 49
 12768                           ; switch strategies available:
 12769                           ; Name         Instructions Cycles
 12770                           ; simple_byte          151    76 (average)
 12771                           ;	Chosen strategy is simple_byte
 12772  001152  0A00               	xorlw	0	; case 0
 12773  001154  B4D8               	btfsc	status,2,c
 12774  001156  D639               	goto	l11227
 12775  001158  0A01               	xorlw	1	; case 1
 12776  00115A  B4D8               	btfsc	status,2,c
 12777  00115C  D63F               	goto	l11229
 12778  00115E  0A03               	xorlw	3	; case 2
 12779  001160  B4D8               	btfsc	status,2,c
 12780  001162  D645               	goto	l11231
 12781  001164  0A01               	xorlw	1	; case 3
 12782  001166  B4D8               	btfsc	status,2,c
 12783  001168  D64B               	goto	l11233
 12784  00116A  0A07               	xorlw	7	; case 4
 12785  00116C  B4D8               	btfsc	status,2,c
 12786  00116E  D651               	goto	l11235
 12787  001170  0A01               	xorlw	1	; case 5
 12788  001172  B4D8               	btfsc	status,2,c
 12789  001174  D657               	goto	l11237
 12790  001176  0A03               	xorlw	3	; case 6
 12791  001178  B4D8               	btfsc	status,2,c
 12792  00117A  D65D               	goto	l11239
 12793  00117C  0A01               	xorlw	1	; case 7
 12794  00117E  B4D8               	btfsc	status,2,c
 12795  001180  D663               	goto	l11241
 12796  001182  0A0F               	xorlw	15	; case 8
 12797  001184  B4D8               	btfsc	status,2,c
 12798  001186  D669               	goto	l11243
 12799  001188  0A01               	xorlw	1	; case 9
 12800  00118A  B4D8               	btfsc	status,2,c
 12801  00118C  D66F               	goto	l11245
 12802  00118E  0A03               	xorlw	3	; case 10
 12803  001190  B4D8               	btfsc	status,2,c
 12804  001192  D675               	goto	l11247
 12805  001194  0A01               	xorlw	1	; case 11
 12806  001196  B4D8               	btfsc	status,2,c
 12807  001198  D67B               	goto	l11249
 12808  00119A  0A07               	xorlw	7	; case 12
 12809  00119C  B4D8               	btfsc	status,2,c
 12810  00119E  D681               	goto	l11251
 12811  0011A0  0A01               	xorlw	1	; case 13
 12812  0011A2  B4D8               	btfsc	status,2,c
 12813  0011A4  D687               	goto	l11253
 12814  0011A6  0A03               	xorlw	3	; case 14
 12815  0011A8  B4D8               	btfsc	status,2,c
 12816  0011AA  D68D               	goto	l11255
 12817  0011AC  0A01               	xorlw	1	; case 15
 12818  0011AE  B4D8               	btfsc	status,2,c
 12819  0011B0  D693               	goto	l11257
 12820  0011B2  0A1F               	xorlw	31	; case 16
 12821  0011B4  B4D8               	btfsc	status,2,c
 12822  0011B6  D699               	goto	l11259
 12823  0011B8  0A01               	xorlw	1	; case 17
 12824  0011BA  B4D8               	btfsc	status,2,c
 12825  0011BC  D69F               	goto	l11261
 12826  0011BE  0A03               	xorlw	3	; case 18
 12827  0011C0  B4D8               	btfsc	status,2,c
 12828  0011C2  D6A5               	goto	l11263
 12829  0011C4  0A01               	xorlw	1	; case 19
 12830  0011C6  B4D8               	btfsc	status,2,c
 12831  0011C8  D6AB               	goto	l11265
 12832  0011CA  0A07               	xorlw	7	; case 20
 12833  0011CC  B4D8               	btfsc	status,2,c
 12834  0011CE  D6B1               	goto	l11267
 12835  0011D0  0A01               	xorlw	1	; case 21
 12836  0011D2  B4D8               	btfsc	status,2,c
 12837  0011D4  D6B7               	goto	l11269
 12838  0011D6  0A03               	xorlw	3	; case 22
 12839  0011D8  B4D8               	btfsc	status,2,c
 12840  0011DA  D6BD               	goto	l11271
 12841  0011DC  0A01               	xorlw	1	; case 23
 12842  0011DE  B4D8               	btfsc	status,2,c
 12843  0011E0  D6C3               	goto	l11273
 12844  0011E2  0A0F               	xorlw	15	; case 24
 12845  0011E4  B4D8               	btfsc	status,2,c
 12846  0011E6  D6C9               	goto	l11275
 12847  0011E8  0A01               	xorlw	1	; case 25
 12848  0011EA  B4D8               	btfsc	status,2,c
 12849  0011EC  D6CF               	goto	l11277
 12850  0011EE  0A03               	xorlw	3	; case 26
 12851  0011F0  B4D8               	btfsc	status,2,c
 12852  0011F2  D6D5               	goto	l11279
 12853  0011F4  0A01               	xorlw	1	; case 27
 12854  0011F6  B4D8               	btfsc	status,2,c
 12855  0011F8  D6DB               	goto	l11281
 12856  0011FA  0A07               	xorlw	7	; case 28
 12857  0011FC  B4D8               	btfsc	status,2,c
 12858  0011FE  D6E1               	goto	l11283
 12859  001200  0A01               	xorlw	1	; case 29
 12860  001202  B4D8               	btfsc	status,2,c
 12861  001204  D6E7               	goto	l11285
 12862  001206  0A03               	xorlw	3	; case 30
 12863  001208  B4D8               	btfsc	status,2,c
 12864  00120A  D6ED               	goto	l11287
 12865  00120C  0A01               	xorlw	1	; case 31
 12866  00120E  B4D8               	btfsc	status,2,c
 12867  001210  D6F3               	goto	l11289
 12868  001212  0A3F               	xorlw	63	; case 32
 12869  001214  B4D8               	btfsc	status,2,c
 12870  001216  D6F9               	goto	l11291
 12871  001218  0A01               	xorlw	1	; case 33
 12872  00121A  B4D8               	btfsc	status,2,c
 12873  00121C  D6FF               	goto	l11293
 12874  00121E  0A03               	xorlw	3	; case 34
 12875  001220  B4D8               	btfsc	status,2,c
 12876  001222  D705               	goto	l11295
 12877  001224  0A01               	xorlw	1	; case 35
 12878  001226  B4D8               	btfsc	status,2,c
 12879  001228  D70B               	goto	l11297
 12880  00122A  0A07               	xorlw	7	; case 36
 12881  00122C  B4D8               	btfsc	status,2,c
 12882  00122E  D711               	goto	l11299
 12883  001230  0A01               	xorlw	1	; case 37
 12884  001232  B4D8               	btfsc	status,2,c
 12885  001234  D717               	goto	l11301
 12886  001236  0A03               	xorlw	3	; case 38
 12887  001238  B4D8               	btfsc	status,2,c
 12888  00123A  D71D               	goto	l11303
 12889  00123C  0A01               	xorlw	1	; case 39
 12890  00123E  B4D8               	btfsc	status,2,c
 12891  001240  D723               	goto	l11305
 12892  001242  0A0F               	xorlw	15	; case 40
 12893  001244  B4D8               	btfsc	status,2,c
 12894  001246  D729               	goto	l11307
 12895  001248  0A01               	xorlw	1	; case 41
 12896  00124A  B4D8               	btfsc	status,2,c
 12897  00124C  D72F               	goto	l11309
 12898  00124E  0A03               	xorlw	3	; case 42
 12899  001250  B4D8               	btfsc	status,2,c
 12900  001252  D735               	goto	l11311
 12901  001254  0A01               	xorlw	1	; case 43
 12902  001256  B4D8               	btfsc	status,2,c
 12903  001258  D73B               	goto	l11313
 12904  00125A  0A07               	xorlw	7	; case 44
 12905  00125C  B4D8               	btfsc	status,2,c
 12906  00125E  D741               	goto	l11315
 12907  001260  0A01               	xorlw	1	; case 45
 12908  001262  B4D8               	btfsc	status,2,c
 12909  001264  D747               	goto	l11317
 12910  001266  0A03               	xorlw	3	; case 46
 12911  001268  B4D8               	btfsc	status,2,c
 12912  00126A  D74D               	goto	l11319
 12913  00126C  0A01               	xorlw	1	; case 47
 12914  00126E  B4D8               	btfsc	status,2,c
 12915  001270  D753               	goto	l11321
 12916  001272  0A1F               	xorlw	31	; case 48
 12917  001274  B4D8               	btfsc	status,2,c
 12918  001276  D759               	goto	l11323
 12919  001278  0A01               	xorlw	1	; case 49
 12920  00127A  A4D8               	btfss	status,2,c
 12921  00127C  0012               	return	
 12922  00127E  D75E               	goto	l11325
 12923  001280                     __end_of_lcd_disp_level_bar:
 12924                           	opt stack 0
 12925                           tblptru	equ	0xFF8
 12926                           tblptrh	equ	0xFF7
 12927                           tblptrl	equ	0xFF6
 12928                           tablat	equ	0xFF5
 12929                           prodh	equ	0xFF4
 12930                           prodl	equ	0xFF3
 12931                           intcon	equ	0xFF2
 12932                           indf0	equ	0xFEF
 12933                           postinc0	equ	0xFEE
 12934                           fsr0h	equ	0xFEA
 12935                           fsr0l	equ	0xFE9
 12936                           wreg	equ	0xFE8
 12937                           postdec1	equ	0xFE5
 12938                           plusw1	equ	0xFE3
 12939                           fsr1h	equ	0xFE2
 12940                           fsr1l	equ	0xFE1
 12941                           indf2	equ	0xFDF
 12942                           postinc2	equ	0xFDE
 12943                           postdec2	equ	0xFDD
 12944                           plusw2	equ	0xFDB
 12945                           fsr2h	equ	0xFDA
 12946                           fsr2l	equ	0xFD9
 12947                           status	equ	0xFD8
 12948                           
 12949 ;; *************** function _lcd_set_com_seg *****************
 12950 ;; Defined at:
 12951 ;;		line 32 in file "src/driver/lcd.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  com             1    wreg     unsigned char 
 12954 ;;  seg             1    8[BANK0 ] unsigned char 
 12955 ;;  show            1    9[BANK0 ] unsigned char 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  com             1   13[BANK0 ] unsigned char 
 12958 ;;  bits            1   15[BANK0 ] unsigned char 
 12959 ;;  offset          1   14[BANK0 ] unsigned char 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  1    wreg      void 
 12962 ;; Registers used:
 12963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:        8 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    5
 12976 ;; This function calls:
 12977 ;;		___awdiv
 12978 ;; This function is called by:
 12979 ;;		_lcd_disp_level_bar
 12980 ;;		_lcd_disp_chr_loc_0
 12981 ;;		_lcd_disp_dp_loc_0
 12982 ;;		_lcd_disp_chr_loc_1
 12983 ;;		_lcd_disp_dp_loc_1
 12984 ;;		_lcd_disp_chr_loc_2
 12985 ;;		_lcd_disp_dp_loc_2
 12986 ;;		_lcd_disp_chr_loc_3
 12987 ;;		_lcd_disp_chr_loc_4
 12988 ;;		_lcd_disp_chr_loc_5
 12989 ;;		_lcd_disp_chr_loc_6
 12990 ;;		_lcd_disp_chr_loc_7
 12991 ;;		_lcd_disp_logo
 12992 ;;		_lcd_disp_unit_t
 12993 ;;		_lcd_disp_unit_1st_m
 12994 ;;		_lcd_disp_unit_1st_m3
 12995 ;;		_lcd_disp_unit_mpa
 12996 ;;		_lcd_disp_battary_bar
 12997 ;;		_lcd_disp_rf_bar
 12998 ;;		_lcd_disp_light_bar
 12999 ;;		_lcd_disp_dp_loc_4
 13000 ;;		_lcd_disp_dp_loc_5
 13001 ;;		_lcd_disp_dp_loc_6
 13002 ;;		_lcd_disp_unit_temperature
 13003 ;;		_lcd_disp_unit_2nd_m
 13004 ;;		_lcd_disp_unit_2nd_m3
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           	psect	text72
 13009  005C04                     __ptext72:
 13010                           	opt stack 0
 13011  005C04                     _lcd_set_com_seg:
 13012                           	opt stack 21
 13013                           
 13014                           ;incstack = 0
 13015                           ;lcd_set_com_seg@com stored from wreg
 13016  005C04  0100               	movlb	0	; () banked
 13017  005C06  6F6D               	movwf	lcd_set_com_seg@com& (0+255),b
 13018                           
 13019                           ;lcd.c: 34: uint8_t offset;
 13020                           ;lcd.c: 35: uint8_t bits;
 13021                           ;lcd.c: 36: if(com>3)return;
 13022  005C08  0E03               	movlw	3
 13023  005C0A  0100               	movlb	0	; () banked
 13024  005C0C  656D               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 13025  005C0E  D001               	goto	l10589
 13026  005C10  0012               	return	
 13027  005C12                     l10589:
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;lcd.c: 37: if(seg>47)return;
 13031  005C12  0E2F               	movlw	47
 13032  005C14  0100               	movlb	0	; () banked
 13033  005C16  6568               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 13034  005C18  D001               	goto	l10593
 13035  005C1A  0012               	return	
 13036  005C1C                     l10593:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;lcd.c: 38: offset=com*6 + seg/8;
 13040  005C1C  C068  F060         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 13041  005C20  0100               	movlb	0	; () banked
 13042  005C22  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 13043  005C24  0E00               	movlw	0
 13044  005C26  0100               	movlb	0	; () banked
 13045  005C28  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13046  005C2A  0E08               	movlw	8
 13047  005C2C  6F62               	movwf	___awdiv@divisor& (0+255),b
 13048  005C2E  EC8A  F02F         	call	___awdiv	;wreg free
 13049  005C32  0100               	movlb	0	; () banked
 13050  005C34  516D               	movf	lcd_set_com_seg@com& (0+255),w,b
 13051  005C36  0D06               	mullw	6
 13052  005C38  50F3               	movf	prodl,w,c
 13053  005C3A  0100               	movlb	0	; () banked
 13054  005C3C  2560               	addwf	?___awdiv& (0+255),w,b
 13055  005C3E  0100               	movlb	0	; () banked
 13056  005C40  6F6E               	movwf	lcd_set_com_seg@offset& (0+255),b
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;lcd.c: 39: bits=seg%8;
 13060  005C42  0100               	movlb	0	; () banked
 13061  005C44  5168               	movf	lcd_set_com_seg@seg& (0+255),w,b
 13062  005C46  0B07               	andlw	7
 13063  005C48  0100               	movlb	0	; () banked
 13064  005C4A  6F6F               	movwf	lcd_set_com_seg@bits& (0+255),b
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;lcd.c: 40: if(show){
 13068  005C4C  0100               	movlb	0	; () banked
 13069  005C4E  5169               	movf	lcd_set_com_seg@show& (0+255),w,b
 13070  005C50  0100               	movlb	0	; () banked
 13071  005C52  B4D8               	btfsc	status,2,c
 13072  005C54  D01B               	goto	l10601
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
 13076  005C56  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 13077  005C5A  0E01               	movlw	1
 13078  005C5C  0100               	movlb	0	; () banked
 13079  005C5E  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 13080  005C60  0100               	movlb	0	; () banked
 13081  005C62  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 13082  005C64  D003               	goto	u9154
 13083  005C66                     u9155:
 13084  005C66  0100               	movlb	0	; () banked
 13085  005C68  90D8               	bcf	status,0,c
 13086  005C6A  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 13087  005C6C                     u9154:
 13088  005C6C  0100               	movlb	0	; () banked
 13089  005C6E  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 13090  005C70  D7FA               	goto	u9155
 13091  005C72  0100               	movlb	0	; () banked
 13092  005C74  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 13093  005C76  0D01               	mullw	1
 13094  005C78  0E00               	movlw	low _pLCD
 13095  005C7A  24F3               	addwf	prodl,w,c
 13096  005C7C  6ED9               	movwf	fsr2l,c
 13097  005C7E  0E01               	movlw	high _pLCD
 13098  005C80  20F4               	addwfc	prodh,w,c
 13099  005C82  6EDA               	movwf	fsr2h,c
 13100  005C84  0100               	movlb	0	; () banked
 13101  005C86  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 13102  005C88  12DF               	iorwf	indf2,f,c
 13103                           
 13104                           ;lcd.c: 42: }else{
 13105  005C8A  0012               	return	
 13106  005C8C                     l10601:
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
 13110  005C8C  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 13111  005C90  0E01               	movlw	1
 13112  005C92  0100               	movlb	0	; () banked
 13113  005C94  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 13114  005C96  0100               	movlb	0	; () banked
 13115  005C98  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 13116  005C9A  D003               	goto	u9164
 13117  005C9C                     u9165:
 13118  005C9C  0100               	movlb	0	; () banked
 13119  005C9E  90D8               	bcf	status,0,c
 13120  005CA0  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 13121  005CA2                     u9164:
 13122  005CA2  0100               	movlb	0	; () banked
 13123  005CA4  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 13124  005CA6  D7FA               	goto	u9165
 13125  005CA8  0100               	movlb	0	; () banked
 13126  005CAA  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 13127  005CAC  0AFF               	xorlw	255
 13128  005CAE  0100               	movlb	0	; () banked
 13129  005CB0  6F6C               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 13130  005CB2  0100               	movlb	0	; () banked
 13131  005CB4  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 13132  005CB6  0D01               	mullw	1
 13133  005CB8  0E00               	movlw	low _pLCD
 13134  005CBA  24F3               	addwf	prodl,w,c
 13135  005CBC  6ED9               	movwf	fsr2l,c
 13136  005CBE  0E01               	movlw	high _pLCD
 13137  005CC0  20F4               	addwfc	prodh,w,c
 13138  005CC2  6EDA               	movwf	fsr2h,c
 13139  005CC4  0100               	movlb	0	; () banked
 13140  005CC6  516C               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 13141  005CC8  16DF               	andwf	indf2,f,c
 13142  005CCA  0012               	return	
 13143  005CCC                     __end_of_lcd_set_com_seg:
 13144                           	opt stack 0
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           indf0	equ	0xFEF
 13153                           postinc0	equ	0xFEE
 13154                           fsr0h	equ	0xFEA
 13155                           fsr0l	equ	0xFE9
 13156                           wreg	equ	0xFE8
 13157                           postdec1	equ	0xFE5
 13158                           plusw1	equ	0xFE3
 13159                           fsr1h	equ	0xFE2
 13160                           fsr1l	equ	0xFE1
 13161                           indf2	equ	0xFDF
 13162                           postinc2	equ	0xFDE
 13163                           postdec2	equ	0xFDD
 13164                           plusw2	equ	0xFDB
 13165                           fsr2h	equ	0xFDA
 13166                           fsr2l	equ	0xFD9
 13167                           status	equ	0xFD8
 13168                           
 13169 ;; *************** function ___awdiv *****************
 13170 ;; Defined at:
 13171 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;  dividend        2    0[BANK0 ] int 
 13174 ;;  divisor         2    2[BANK0 ] int 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;  quotient        2    6[BANK0 ] int 
 13177 ;;  sign            1    5[BANK0 ] unsigned char 
 13178 ;;  counter         1    4[BANK0 ] unsigned char 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  2    0[BANK0 ] int 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;Total ram usage:        8 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    4
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_m_int16_2_str_4
 13199 ;;		_lcd_set_com_seg
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text73
 13204  005F14                     __ptext73:
 13205                           	opt stack 0
 13206  005F14                     ___awdiv:
 13207                           	opt stack 21
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;incstack = 0
 13211  005F14  0E00               	movlw	0
 13212  005F16  0100               	movlb	0	; () banked
 13213  005F18  6F65               	movwf	___awdiv@sign& (0+255),b
 13214                           
 13215                           ; BSR set to: 0
 13216  005F1A  0100               	movlb	0	; () banked
 13217  005F1C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13218  005F1E  D008               	goto	l10549
 13219                           
 13220                           ; BSR set to: 0
 13221  005F20  0100               	movlb	0	; () banked
 13222  005F22  6D62               	negf	___awdiv@divisor& (0+255),b
 13223  005F24  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13224  005F26  B0D8               	btfsc	status,0,c
 13225  005F28  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13226                           
 13227                           ; BSR set to: 0
 13228  005F2A  0E01               	movlw	1
 13229  005F2C  0100               	movlb	0	; () banked
 13230  005F2E  6F65               	movwf	___awdiv@sign& (0+255),b
 13231  005F30                     l10549:
 13232                           
 13233                           ; BSR set to: 0
 13234  005F30  0100               	movlb	0	; () banked
 13235  005F32  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13236  005F34  D008               	goto	l10555
 13237                           
 13238                           ; BSR set to: 0
 13239  005F36  0100               	movlb	0	; () banked
 13240  005F38  6D60               	negf	___awdiv@dividend& (0+255),b
 13241  005F3A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13242  005F3C  B0D8               	btfsc	status,0,c
 13243  005F3E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13244                           
 13245                           ; BSR set to: 0
 13246  005F40  0E01               	movlw	1
 13247  005F42  0100               	movlb	0	; () banked
 13248  005F44  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13249  005F46                     l10555:
 13250                           
 13251                           ; BSR set to: 0
 13252  005F46  0E00               	movlw	0
 13253  005F48  0100               	movlb	0	; () banked
 13254  005F4A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13255  005F4C  0E00               	movlw	0
 13256  005F4E  6F66               	movwf	___awdiv@quotient& (0+255),b
 13257                           
 13258                           ; BSR set to: 0
 13259  005F50  0100               	movlb	0	; () banked
 13260  005F52  5162               	movf	___awdiv@divisor& (0+255),w,b
 13261  005F54  0100               	movlb	0	; () banked
 13262  005F56  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13263  005F58  B4D8               	btfsc	status,2,c
 13264  005F5A  D02C               	goto	l10577
 13265                           
 13266                           ; BSR set to: 0
 13267  005F5C  0E01               	movlw	1
 13268  005F5E  0100               	movlb	0	; () banked
 13269  005F60  6F64               	movwf	___awdiv@counter& (0+255),b
 13270  005F62  D006               	goto	l10563
 13271  005F64                     l10561:
 13272                           
 13273                           ; BSR set to: 0
 13274  005F64  0100               	movlb	0	; () banked
 13275  005F66  90D8               	bcf	status,0,c
 13276  005F68  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13277  005F6A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13278  005F6C  0100               	movlb	0	; () banked
 13279  005F6E  2B64               	incf	___awdiv@counter& (0+255),f,b
 13280  005F70                     l10563:
 13281                           
 13282                           ; BSR set to: 0
 13283  005F70  0100               	movlb	0	; () banked
 13284  005F72  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13285  005F74  D7F7               	goto	l10561
 13286  005F76                     l10565:
 13287                           
 13288                           ; BSR set to: 0
 13289  005F76  0100               	movlb	0	; () banked
 13290  005F78  90D8               	bcf	status,0,c
 13291  005F7A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13292  005F7C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13293                           
 13294                           ; BSR set to: 0
 13295  005F7E  0100               	movlb	0	; () banked
 13296  005F80  5162               	movf	___awdiv@divisor& (0+255),w,b
 13297  005F82  0100               	movlb	0	; () banked
 13298  005F84  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13299  005F86  0100               	movlb	0	; () banked
 13300  005F88  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13301  005F8A  0100               	movlb	0	; () banked
 13302  005F8C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13303  005F8E  A0D8               	btfss	status,0,c
 13304  005F90  D00A               	goto	l10573
 13305                           
 13306                           ; BSR set to: 0
 13307  005F92  0100               	movlb	0	; () banked
 13308  005F94  5162               	movf	___awdiv@divisor& (0+255),w,b
 13309  005F96  0100               	movlb	0	; () banked
 13310  005F98  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13311  005F9A  0100               	movlb	0	; () banked
 13312  005F9C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13313  005F9E  0100               	movlb	0	; () banked
 13314  005FA0  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13315                           
 13316                           ; BSR set to: 0
 13317  005FA2  0100               	movlb	0	; () banked
 13318  005FA4  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13319  005FA6                     l10573:
 13320                           
 13321                           ; BSR set to: 0
 13322  005FA6  0100               	movlb	0	; () banked
 13323  005FA8  90D8               	bcf	status,0,c
 13324  005FAA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13325  005FAC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 0
 13328  005FAE  0100               	movlb	0	; () banked
 13329  005FB0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13330  005FB2  D7E1               	goto	l10565
 13331  005FB4                     l10577:
 13332                           
 13333                           ; BSR set to: 0
 13334  005FB4  0100               	movlb	0	; () banked
 13335  005FB6  5165               	movf	___awdiv@sign& (0+255),w,b
 13336  005FB8  0100               	movlb	0	; () banked
 13337  005FBA  B4D8               	btfsc	status,2,c
 13338  005FBC  D005               	goto	l10581
 13339                           
 13340                           ; BSR set to: 0
 13341  005FBE  0100               	movlb	0	; () banked
 13342  005FC0  6D66               	negf	___awdiv@quotient& (0+255),b
 13343  005FC2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13344  005FC4  B0D8               	btfsc	status,0,c
 13345  005FC6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13346  005FC8                     l10581:
 13347                           
 13348                           ; BSR set to: 0
 13349  005FC8  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13350  005FCC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13351  005FD0  0012               	return	
 13352  005FD2                     __end_of___awdiv:
 13353                           	opt stack 0
 13354                           tblptru	equ	0xFF8
 13355                           tblptrh	equ	0xFF7
 13356                           tblptrl	equ	0xFF6
 13357                           tablat	equ	0xFF5
 13358                           prodh	equ	0xFF4
 13359                           prodl	equ	0xFF3
 13360                           intcon	equ	0xFF2
 13361                           indf0	equ	0xFEF
 13362                           postinc0	equ	0xFEE
 13363                           fsr0h	equ	0xFEA
 13364                           fsr0l	equ	0xFE9
 13365                           wreg	equ	0xFE8
 13366                           postdec1	equ	0xFE5
 13367                           plusw1	equ	0xFE3
 13368                           fsr1h	equ	0xFE2
 13369                           fsr1l	equ	0xFE1
 13370                           indf2	equ	0xFDF
 13371                           postinc2	equ	0xFDE
 13372                           postdec2	equ	0xFDD
 13373                           plusw2	equ	0xFDB
 13374                           fsr2h	equ	0xFDA
 13375                           fsr2l	equ	0xFD9
 13376                           status	equ	0xFD8
 13377                           
 13378 ;; *************** function _cal_diff_hight_level *****************
 13379 ;; Defined at:
 13380 ;;		line 424 in file "src/api/data.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;		None
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;  f1              4  112[BANK0 ] float 
 13385 ;;  f2              4  100[BANK0 ] float 
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  1    wreg      unsigned char 
 13388 ;; Registers used:
 13389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/0
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13396 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;Total ram usage:       16 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:    5
 13402 ;; This function calls:
 13403 ;;		___fladd
 13404 ;;		___fldiv
 13405 ;;		___flge
 13406 ;;		___flmul
 13407 ;;		___fltol
 13408 ;;		___xxtofl
 13409 ;; This function is called by:
 13410 ;;		_ui_disp_menu_home_00
 13411 ;;		_ui_disp_menu_home_01
 13412 ;;		_ui_disp_menu_home_02
 13413 ;; This function uses a non-reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text74
 13417  002850                     __ptext74:
 13418                           	opt stack 0
 13419  002850                     _cal_diff_hight_level:
 13420                           	opt stack 21
 13421                           
 13422                           ;data.c: 426: float f1,f2;
 13423                           ;data.c: 427: if(fpSysData->pos==HOTIZONTAL){
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;incstack = 0
 13427  002850  0E04               	movlw	4
 13428  002852  243C               	addwf	_fpSysData,w,c
 13429  002854  6EF6               	movwf	tblptrl,c
 13430  002856  0E00               	movlw	0
 13431  002858  203D               	addwfc	_fpSysData+1,w,c
 13432  00285A  6EF7               	movwf	tblptrh,c
 13433  00285C  0E00               	movlw	0
 13434  00285E  203E               	addwfc	_fpSysData+2,w,c
 13435  002860  6EF8               	movwf	tblptru,c
 13436  002862  0008               	tblrd		*
 13437  002864  50F5               	movf	tablat,w,c
 13438  002866  0900               	iorlw	0
 13439  002868  A4D8               	btfss	status,2,c
 13440  00286A  D021               	goto	l12015
 13441                           
 13442                           ;data.c: 428: f1=(float)fpSysData->d;
 13443  00286C  0E0C               	movlw	12
 13444  00286E  243C               	addwf	_fpSysData,w,c
 13445  002870  6EF6               	movwf	tblptrl,c
 13446  002872  0E00               	movlw	0
 13447  002874  203D               	addwfc	_fpSysData+1,w,c
 13448  002876  6EF7               	movwf	tblptrh,c
 13449  002878  0E00               	movlw	0
 13450  00287A  203E               	addwfc	_fpSysData+2,w,c
 13451  00287C  6EF8               	movwf	tblptru,c
 13452  00287E  0009               	tblrd		*+
 13453  002880  CFF5 F060          	movff	tablat,___xxtofl@val
 13454  002884  0009               	tblrd		*+
 13455  002886  CFF5 F061          	movff	tablat,___xxtofl@val+1
 13456  00288A  0009               	tblrd		*+
 13457  00288C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 13458  002890  000A               	tblrd		*-
 13459  002892  CFF5 F063          	movff	tablat,___xxtofl@val+3
 13460  002896  0E00               	movlw	0
 13461  002898  ECED  F01E         	call	___xxtofl
 13462  00289C  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 13463  0028A0  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 13464  0028A4  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 13465  0028A8  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 13466                           
 13467                           ;data.c: 429: }else{
 13468  0028AC  D09E               	goto	l12021
 13469  0028AE                     l12015:
 13470                           
 13471                           ;data.c: 430: f1=(float)fpSysData->h;
 13472  0028AE  0E08               	movlw	8
 13473  0028B0  243C               	addwf	_fpSysData,w,c
 13474  0028B2  6EF6               	movwf	tblptrl,c
 13475  0028B4  0E00               	movlw	0
 13476  0028B6  203D               	addwfc	_fpSysData+1,w,c
 13477  0028B8  6EF7               	movwf	tblptrh,c
 13478  0028BA  0E00               	movlw	0
 13479  0028BC  203E               	addwfc	_fpSysData+2,w,c
 13480  0028BE  6EF8               	movwf	tblptru,c
 13481  0028C0  0009               	tblrd		*+
 13482  0028C2  CFF5 F060          	movff	tablat,___xxtofl@val
 13483  0028C6  0009               	tblrd		*+
 13484  0028C8  CFF5 F061          	movff	tablat,___xxtofl@val+1
 13485  0028CC  0009               	tblrd		*+
 13486  0028CE  CFF5 F062          	movff	tablat,___xxtofl@val+2
 13487  0028D2  000A               	tblrd		*-
 13488  0028D4  CFF5 F063          	movff	tablat,___xxtofl@val+3
 13489  0028D8  0E01               	movlw	1
 13490  0028DA  ECED  F01E         	call	___xxtofl
 13491  0028DE  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 13492  0028E2  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 13493  0028E6  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 13494  0028EA  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 13495                           
 13496                           ;data.c: 431: f1=(f1+fpSysData->d)+(f1+fpSysData->d);
 13497  0028EE  0E0C               	movlw	12
 13498  0028F0  243C               	addwf	_fpSysData,w,c
 13499  0028F2  6EF6               	movwf	tblptrl,c
 13500  0028F4  0E00               	movlw	0
 13501  0028F6  203D               	addwfc	_fpSysData+1,w,c
 13502  0028F8  6EF7               	movwf	tblptrh,c
 13503  0028FA  0E00               	movlw	0
 13504  0028FC  203E               	addwfc	_fpSysData+2,w,c
 13505  0028FE  6EF8               	movwf	tblptru,c
 13506  002900  0009               	tblrd		*+
 13507  002902  CFF5 F060          	movff	tablat,___xxtofl@val
 13508  002906  0009               	tblrd		*+
 13509  002908  CFF5 F061          	movff	tablat,___xxtofl@val+1
 13510  00290C  0009               	tblrd		*+
 13511  00290E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 13512  002912  000A               	tblrd		*-
 13513  002914  CFF5 F063          	movff	tablat,___xxtofl@val+3
 13514  002918  0E00               	movlw	0
 13515  00291A  ECED  F01E         	call	___xxtofl
 13516  00291E  C060  F0A8         	movff	?___xxtofl,___fladd@a
 13517  002922  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 13518  002926  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 13519  00292A  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 13520  00292E  0E0C               	movlw	12
 13521  002930  243C               	addwf	_fpSysData,w,c
 13522  002932  6EF6               	movwf	tblptrl,c
 13523  002934  0E00               	movlw	0
 13524  002936  203D               	addwfc	_fpSysData+1,w,c
 13525  002938  6EF7               	movwf	tblptrh,c
 13526  00293A  0E00               	movlw	0
 13527  00293C  203E               	addwfc	_fpSysData+2,w,c
 13528  00293E  6EF8               	movwf	tblptru,c
 13529  002940  0009               	tblrd		*+
 13530  002942  CFF5 F060          	movff	tablat,___xxtofl@val
 13531  002946  0009               	tblrd		*+
 13532  002948  CFF5 F061          	movff	tablat,___xxtofl@val+1
 13533  00294C  0009               	tblrd		*+
 13534  00294E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 13535  002952  000A               	tblrd		*-
 13536  002954  CFF5 F063          	movff	tablat,___xxtofl@val+3
 13537  002958  0E00               	movlw	0
 13538  00295A  ECED  F01E         	call	___xxtofl
 13539  00295E  C060  F0A4         	movff	?___xxtofl,___fladd@b
 13540  002962  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 13541  002966  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 13542  00296A  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 13543  00296E  EC40  F009         	call	___fladd	;wreg free
 13544  002972  C0A4  F0C8         	movff	?___fladd,_cal_diff_hight_level$4414
 13545  002976  C0A5  F0C9         	movff	?___fladd+1,_cal_diff_hight_level$4414+1
 13546  00297A  C0A6  F0CA         	movff	?___fladd+2,_cal_diff_hight_level$4414+2
 13547  00297E  C0A7  F0CB         	movff	?___fladd+3,_cal_diff_hight_level$4414+3
 13548                           
 13549                           ;data.c: 431: f1=(f1+fpSysData->d)+(f1+fpSysData->d);
 13550  002982  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 13551  002986  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 13552  00298A  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 13553  00298E  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 13554  002992  C0C8  F0A4         	movff	_cal_diff_hight_level$4414,___fladd@b
 13555  002996  C0C9  F0A5         	movff	_cal_diff_hight_level$4414+1,___fladd@b+1
 13556  00299A  C0CA  F0A6         	movff	_cal_diff_hight_level$4414+2,___fladd@b+2
 13557  00299E  C0CB  F0A7         	movff	_cal_diff_hight_level$4414+3,___fladd@b+3
 13558  0029A2  EC40  F009         	call	___fladd	;wreg free
 13559  0029A6  C0A4  F0CC         	movff	?___fladd,_cal_diff_hight_level$4415
 13560  0029AA  C0A5  F0CD         	movff	?___fladd+1,_cal_diff_hight_level$4415+1
 13561  0029AE  C0A6  F0CE         	movff	?___fladd+2,_cal_diff_hight_level$4415+2
 13562  0029B2  C0A7  F0CF         	movff	?___fladd+3,_cal_diff_hight_level$4415+3
 13563                           
 13564                           ;data.c: 431: f1=(f1+fpSysData->d)+(f1+fpSysData->d);
 13565  0029B6  C0CC  F0A4         	movff	_cal_diff_hight_level$4415,___fladd@b
 13566  0029BA  C0CD  F0A5         	movff	_cal_diff_hight_level$4415+1,___fladd@b+1
 13567  0029BE  C0CE  F0A6         	movff	_cal_diff_hight_level$4415+2,___fladd@b+2
 13568  0029C2  C0CF  F0A7         	movff	_cal_diff_hight_level$4415+3,___fladd@b+3
 13569  0029C6  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 13570  0029CA  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 13571  0029CE  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 13572  0029D2  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 13573  0029D6  EC40  F009         	call	___fladd	;wreg free
 13574  0029DA  C0A4  F0D0         	movff	?___fladd,cal_diff_hight_level@f1
 13575  0029DE  C0A5  F0D1         	movff	?___fladd+1,cal_diff_hight_level@f1+1
 13576  0029E2  C0A6  F0D2         	movff	?___fladd+2,cal_diff_hight_level@f1+2
 13577  0029E6  C0A7  F0D3         	movff	?___fladd+3,cal_diff_hight_level@f1+3
 13578  0029EA                     l12021:
 13579                           
 13580                           ;data.c: 432: }
 13581                           ;data.c: 433: f1=f1*(fpSysData->maxValueForlevelBar)/100;
 13582  0029EA  C0D0  F072         	movff	cal_diff_hight_level@f1,___flmul@a
 13583  0029EE  C0D1  F073         	movff	cal_diff_hight_level@f1+1,___flmul@a+1
 13584  0029F2  C0D2  F074         	movff	cal_diff_hight_level@f1+2,___flmul@a+2
 13585  0029F6  C0D3  F075         	movff	cal_diff_hight_level@f1+3,___flmul@a+3
 13586  0029FA  0E05               	movlw	5
 13587  0029FC  243C               	addwf	_fpSysData,w,c
 13588  0029FE  6EF6               	movwf	tblptrl,c
 13589  002A00  0E00               	movlw	0
 13590  002A02  203D               	addwfc	_fpSysData+1,w,c
 13591  002A04  6EF7               	movwf	tblptrh,c
 13592  002A06  0E00               	movlw	0
 13593  002A08  203E               	addwfc	_fpSysData+2,w,c
 13594  002A0A  6EF8               	movwf	tblptru,c
 13595  002A0C  0008               	tblrd		*
 13596  002A0E  50F5               	movf	tablat,w,c
 13597  002A10  0100               	movlb	0	; () banked
 13598  002A12  6F60               	movwf	___xxtofl@val& (0+255),b
 13599  002A14  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13600  002A16  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13601  002A18  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13602  002A1A  0E00               	movlw	0
 13603  002A1C  ECED  F01E         	call	___xxtofl
 13604  002A20  C060  F06E         	movff	?___xxtofl,___flmul@b
 13605  002A24  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 13606  002A28  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 13607  002A2C  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 13608  002A30  EC94  F00B         	call	___flmul	;wreg free
 13609  002A34  C06E  F087         	movff	?___flmul,___fldiv@b
 13610  002A38  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 13611  002A3C  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 13612  002A40  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 13613  002A44  0E00               	movlw	0
 13614  002A46  0100               	movlb	0	; () banked
 13615  002A48  6F8B               	movwf	___fldiv@a& (0+255),b
 13616  002A4A  0E00               	movlw	0
 13617  002A4C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 13618  002A4E  0EC8               	movlw	200
 13619  002A50  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 13620  002A52  0E42               	movlw	66
 13621  002A54  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 13622  002A56  EC48  F012         	call	___fldiv	;wreg free
 13623  002A5A  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 13624  002A5E  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 13625  002A62  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 13626  002A66  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 13627                           
 13628                           ;data.c: 434: f2=(float)rtHight;
 13629  002A6A  C021  F060         	movff	_rtHight,___xxtofl@val	;volatile
 13630  002A6E  C022  F061         	movff	_rtHight+1,___xxtofl@val+1	;volatile
 13631  002A72  C023  F062         	movff	_rtHight+2,___xxtofl@val+2	;volatile
 13632  002A76  C024  F063         	movff	_rtHight+3,___xxtofl@val+3	;volatile
 13633  002A7A  0E01               	movlw	1
 13634  002A7C  ECED  F01E         	call	___xxtofl
 13635  002A80  C060  F0C4         	movff	?___xxtofl,cal_diff_hight_level@f2
 13636  002A84  C061  F0C5         	movff	?___xxtofl+1,cal_diff_hight_level@f2+1
 13637  002A88  C062  F0C6         	movff	?___xxtofl+2,cal_diff_hight_level@f2+2
 13638  002A8C  C063  F0C7         	movff	?___xxtofl+3,cal_diff_hight_level@f2+3
 13639                           
 13640                           ;data.c: 435: f1=f2/f1;
 13641  002A90  C0C4  F087         	movff	cal_diff_hight_level@f2,___fldiv@b
 13642  002A94  C0C5  F088         	movff	cal_diff_hight_level@f2+1,___fldiv@b+1
 13643  002A98  C0C6  F089         	movff	cal_diff_hight_level@f2+2,___fldiv@b+2
 13644  002A9C  C0C7  F08A         	movff	cal_diff_hight_level@f2+3,___fldiv@b+3
 13645  002AA0  C0D0  F08B         	movff	cal_diff_hight_level@f1,___fldiv@a
 13646  002AA4  C0D1  F08C         	movff	cal_diff_hight_level@f1+1,___fldiv@a+1
 13647  002AA8  C0D2  F08D         	movff	cal_diff_hight_level@f1+2,___fldiv@a+2
 13648  002AAC  C0D3  F08E         	movff	cal_diff_hight_level@f1+3,___fldiv@a+3
 13649  002AB0  EC48  F012         	call	___fldiv	;wreg free
 13650  002AB4  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 13651  002AB8  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 13652  002ABC  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 13653  002AC0  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 13654                           
 13655                           ;data.c: 436: f1*=100;
 13656  002AC4  C0D0  F06E         	movff	cal_diff_hight_level@f1,___flmul@b
 13657  002AC8  C0D1  F06F         	movff	cal_diff_hight_level@f1+1,___flmul@b+1
 13658  002ACC  C0D2  F070         	movff	cal_diff_hight_level@f1+2,___flmul@b+2
 13659  002AD0  C0D3  F071         	movff	cal_diff_hight_level@f1+3,___flmul@b+3
 13660  002AD4  0E00               	movlw	0
 13661  002AD6  0100               	movlb	0	; () banked
 13662  002AD8  6F72               	movwf	___flmul@a& (0+255),b
 13663  002ADA  0E00               	movlw	0
 13664  002ADC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 13665  002ADE  0EC8               	movlw	200
 13666  002AE0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 13667  002AE2  0E42               	movlw	66
 13668  002AE4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 13669  002AE6  EC94  F00B         	call	___flmul	;wreg free
 13670  002AEA  C06E  F0D0         	movff	?___flmul,cal_diff_hight_level@f1
 13671  002AEE  C06F  F0D1         	movff	?___flmul+1,cal_diff_hight_level@f1+1
 13672  002AF2  C070  F0D2         	movff	?___flmul+2,cal_diff_hight_level@f1+2
 13673  002AF6  C071  F0D3         	movff	?___flmul+3,cal_diff_hight_level@f1+3
 13674                           
 13675                           ;data.c: 437: if(f1>100)f1=100;
 13676  002AFA  0E00               	movlw	0
 13677  002AFC  0100               	movlb	0	; () banked
 13678  002AFE  6FB8               	movwf	___flge@ff1& (0+255),b
 13679  002B00  0E00               	movlw	0
 13680  002B02  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 13681  002B04  0EC8               	movlw	200
 13682  002B06  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 13683  002B08  0E42               	movlw	66
 13684  002B0A  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 13685  002B0C  C0D0  F0BC         	movff	cal_diff_hight_level@f1,___flge@ff2
 13686  002B10  C0D1  F0BD         	movff	cal_diff_hight_level@f1+1,___flge@ff2+1
 13687  002B14  C0D2  F0BE         	movff	cal_diff_hight_level@f1+2,___flge@ff2+2
 13688  002B18  C0D3  F0BF         	movff	cal_diff_hight_level@f1+3,___flge@ff2+3
 13689  002B1C  EC4C  F023         	call	___flge	;wreg free
 13690  002B20  0100               	movlb	0	; () banked
 13691  002B22  B0D8               	btfsc	status,0,c
 13692  002B24  D009               	goto	l12031
 13693                           
 13694                           ; BSR set to: 0
 13695  002B26  0E00               	movlw	0
 13696  002B28  0100               	movlb	0	; () banked
 13697  002B2A  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 13698  002B2C  0E00               	movlw	0
 13699  002B2E  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 13700  002B30  0EC8               	movlw	200
 13701  002B32  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 13702  002B34  0E42               	movlw	66
 13703  002B36  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 13704  002B38                     l12031:
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;data.c: 438: rtLevel=(uint8_t)f1;
 13708  002B38  C0D0  F0B8         	movff	cal_diff_hight_level@f1,___fltol@f1
 13709  002B3C  C0D1  F0B9         	movff	cal_diff_hight_level@f1+1,___fltol@f1+1
 13710  002B40  C0D2  F0BA         	movff	cal_diff_hight_level@f1+2,___fltol@f1+2
 13711  002B44  C0D3  F0BB         	movff	cal_diff_hight_level@f1+3,___fltol@f1+3
 13712  002B48  EC01  F02B         	call	___fltol	;wreg free
 13713  002B4C  0100               	movlb	0	; () banked
 13714  002B4E  51B8               	movf	?___fltol& (0+255),w,b
 13715  002B50  6E38               	movwf	_rtLevel,c	;volatile
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;data.c: 439: return rtLevel;
 13719  002B52  5038               	movf	_rtLevel,w,c	;volatile
 13720  002B54  0012               	return	
 13721  002B56                     __end_of_cal_diff_hight_level:
 13722                           	opt stack 0
 13723                           tblptru	equ	0xFF8
 13724                           tblptrh	equ	0xFF7
 13725                           tblptrl	equ	0xFF6
 13726                           tablat	equ	0xFF5
 13727                           prodh	equ	0xFF4
 13728                           prodl	equ	0xFF3
 13729                           intcon	equ	0xFF2
 13730                           indf0	equ	0xFEF
 13731                           postinc0	equ	0xFEE
 13732                           fsr0h	equ	0xFEA
 13733                           fsr0l	equ	0xFE9
 13734                           wreg	equ	0xFE8
 13735                           postdec1	equ	0xFE5
 13736                           plusw1	equ	0xFE3
 13737                           fsr1h	equ	0xFE2
 13738                           fsr1l	equ	0xFE1
 13739                           indf2	equ	0xFDF
 13740                           postinc2	equ	0xFDE
 13741                           postdec2	equ	0xFDD
 13742                           plusw2	equ	0xFDB
 13743                           fsr2h	equ	0xFDA
 13744                           fsr2l	equ	0xFD9
 13745                           status	equ	0xFD8
 13746                           
 13747 ;; *************** function ___int32_2_mflot32 *****************
 13748 ;; Defined at:
 13749 ;;		line 26 in file "src/api/ui.c"
 13750 ;; Parameters:    Size  Location     Type
 13751 ;;  x               4   13[BANK0 ] long 
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;  mf              4   25[BANK0 ] struct .
 13754 ;;  t32             4   21[BANK0 ] unsigned long 
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  4   13[BANK0 ] long 
 13757 ;; Registers used:
 13758 ;;		wreg, status,2, status,0, cstack
 13759 ;; Tracked objects:
 13760 ;;		On entry : 0/0
 13761 ;;		On exit  : 0/0
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13767 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;Total ram usage:       16 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:    5
 13771 ;; This function calls:
 13772 ;;		___lldiv
 13773 ;; This function is called by:
 13774 ;;		___enter_menu_set_base_zero
 13775 ;;		_ui_disp_menu_home_00
 13776 ;;		_ui_disp_menu_home_01
 13777 ;;		_ui_disp_menu_home_02
 13778 ;;		___enter_menu_calib_press_diff
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text75
 13783  005816                     __ptext75:
 13784                           	opt stack 0
 13785  005816                     ___int32_2_mflot32:
 13786                           	opt stack 21
 13787                           
 13788                           ;ui.c: 28: st_float32 mf={0};
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;incstack = 0
 13792  005816  C142  F079         	movff	___int32_2_mflot32@F7641,___int32_2_mflot32@mf
 13793  00581A  C143  F07A         	movff	___int32_2_mflot32@F7641+1,___int32_2_mflot32@mf+1
 13794  00581E  C144  F07B         	movff	___int32_2_mflot32@F7641+2,___int32_2_mflot32@mf+2
 13795  005822  C145  F07C         	movff	___int32_2_mflot32@F7641+3,___int32_2_mflot32@mf+3
 13796                           
 13797                           ;ui.c: 29: uint32_t t32;
 13798                           ;ui.c: 30: t32=x;
 13799  005826  C06D  F075         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 13800  00582A  C06E  F076         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 13801  00582E  C06F  F077         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 13802  005832  C070  F078         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 13803                           
 13804                           ;ui.c: 31: if(x<0){
 13805  005836  0100               	movlb	0	; () banked
 13806  005838  AF70               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 13807  00583A  D040               	goto	l12079
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;ui.c: 32: t32 = ((~x) +1);
 13811  00583C  C06D  F071         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 13812  005840  C06E  F072         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 13813  005844  C06F  F073         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 13814  005848  C070  F074         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 13815  00584C  0100               	movlb	0	; () banked
 13816  00584E  1F71               	comf	??___int32_2_mflot32& (0+255),f,b
 13817  005850  1F72               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 13818  005852  1F73               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 13819  005854  1F74               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 13820  005856  2B71               	incf	??___int32_2_mflot32& (0+255),f,b
 13821  005858  0E00               	movlw	0
 13822  00585A  2372               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 13823  00585C  2373               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 13824  00585E  2374               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 13825  005860  C071  F075         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 13826  005864  C072  F076         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 13827  005868  C073  F077         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 13828  00586C  C074  F078         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;ui.c: 33: mf.stru.sign=1;
 13832  005870  0E01               	movlw	1
 13833  005872  0100               	movlb	0	; () banked
 13834  005874  6F7C               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;ui.c: 34: }
 13838                           ;ui.c: 35: while(t32>9999){
 13839  005876  D022               	goto	l12079
 13840  005878                     l12071:
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;ui.c: 36: mf.stru.exponent++;
 13844  005878  0100               	movlb	0	; () banked
 13845  00587A  2B7B               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;ui.c: 37: t32/=10;
 13849  00587C  C075  F060         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 13850  005880  C076  F061         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 13851  005884  C077  F062         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 13852  005888  C078  F063         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 13853  00588C  0E0A               	movlw	10
 13854  00588E  0100               	movlb	0	; () banked
 13855  005890  6F64               	movwf	___lldiv@divisor& (0+255),b
 13856  005892  0E00               	movlw	0
 13857  005894  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13858  005896  0E00               	movlw	0
 13859  005898  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13860  00589A  0E00               	movlw	0
 13861  00589C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13862  00589E  ECE9  F02F         	call	___lldiv	;wreg free
 13863  0058A2  C060  F075         	movff	?___lldiv,___int32_2_mflot32@t32
 13864  0058A6  C061  F076         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 13865  0058AA  C062  F077         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 13866  0058AE  C063  F078         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 13867                           
 13868                           ;ui.c: 38: if( mf.stru.exponent==3)break;
 13869  0058B2  0E03               	movlw	3
 13870  0058B4  0100               	movlb	0	; () banked
 13871  0058B6  197B               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
 13872  0058B8  B4D8               	btfsc	status,2,c
 13873  0058BA  D00D               	goto	l12081
 13874  0058BC                     l12079:
 13875                           
 13876                           ; BSR set to: 0
 13877  0058BC  0100               	movlb	0	; () banked
 13878  0058BE  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 13879  0058C0  0100               	movlb	0	; () banked
 13880  0058C2  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 13881  0058C4  E1D9               	bnz	l12071
 13882  0058C6  0E10               	movlw	16
 13883  0058C8  0100               	movlb	0	; () banked
 13884  0058CA  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 13885  0058CC  0E27               	movlw	39
 13886  0058CE  0100               	movlb	0	; () banked
 13887  0058D0  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 13888  0058D2  B0D8               	btfsc	status,0,c
 13889  0058D4  D7D1               	goto	l12071
 13890  0058D6                     l12081:
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;ui.c: 39: }
 13894                           ;ui.c: 40: if(t32>9999)t32=9999;
 13895  0058D6  0100               	movlb	0	; () banked
 13896  0058D8  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 13897  0058DA  0100               	movlb	0	; () banked
 13898  0058DC  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 13899  0058DE  E108               	bnz	u10780
 13900  0058E0  0E10               	movlw	16
 13901  0058E2  0100               	movlb	0	; () banked
 13902  0058E4  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 13903  0058E6  0E27               	movlw	39
 13904  0058E8  0100               	movlb	0	; () banked
 13905  0058EA  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 13906  0058EC  A0D8               	btfss	status,0,c
 13907  0058EE  D009               	goto	l12085
 13908  0058F0                     u10780:
 13909                           
 13910                           ; BSR set to: 0
 13911  0058F0  0E0F               	movlw	15
 13912  0058F2  0100               	movlb	0	; () banked
 13913  0058F4  6F75               	movwf	___int32_2_mflot32@t32& (0+255),b
 13914  0058F6  0E27               	movlw	39
 13915  0058F8  6F76               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 13916  0058FA  0E00               	movlw	0
 13917  0058FC  6F77               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 13918  0058FE  0E00               	movlw	0
 13919  005900  6F78               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 13920  005902                     l12085:
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;ui.c: 41: mf.stru.significand=t32;
 13924  005902  C075  F079         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 13925  005906  C076  F07A         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;ui.c: 42: return mf.t32;
 13929  00590A  C079  F06D         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 13930  00590E  C07A  F06E         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 13931  005912  C07B  F06F         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 13932  005916  C07C  F070         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 13933  00591A  0012               	return	
 13934  00591C                     __end_of___int32_2_mflot32:
 13935                           	opt stack 0
 13936                           tblptru	equ	0xFF8
 13937                           tblptrh	equ	0xFF7
 13938                           tblptrl	equ	0xFF6
 13939                           tablat	equ	0xFF5
 13940                           prodh	equ	0xFF4
 13941                           prodl	equ	0xFF3
 13942                           intcon	equ	0xFF2
 13943                           indf0	equ	0xFEF
 13944                           postinc0	equ	0xFEE
 13945                           fsr0h	equ	0xFEA
 13946                           fsr0l	equ	0xFE9
 13947                           wreg	equ	0xFE8
 13948                           postdec1	equ	0xFE5
 13949                           plusw1	equ	0xFE3
 13950                           fsr1h	equ	0xFE2
 13951                           fsr1l	equ	0xFE1
 13952                           indf2	equ	0xFDF
 13953                           postinc2	equ	0xFDE
 13954                           postdec2	equ	0xFDD
 13955                           plusw2	equ	0xFDB
 13956                           fsr2h	equ	0xFDA
 13957                           fsr2l	equ	0xFD9
 13958                           status	equ	0xFD8
 13959                           
 13960 ;; *************** function ___lldiv *****************
 13961 ;; Defined at:
 13962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 13963 ;; Parameters:    Size  Location     Type
 13964 ;;  dividend        4    0[BANK0 ] unsigned long 
 13965 ;;  divisor         4    4[BANK0 ] unsigned long 
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;  quotient        4    8[BANK0 ] unsigned long 
 13968 ;;  counter         1   12[BANK0 ] unsigned char 
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  4    0[BANK0 ] unsigned long 
 13971 ;; Registers used:
 13972 ;;		wreg, status,2, status,0
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13978 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;Total ram usage:       13 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:    4
 13985 ;; This function calls:
 13986 ;;		Nothing
 13987 ;; This function is called by:
 13988 ;;		___int32_2_mflot32
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text76
 13993  005FD2                     __ptext76:
 13994                           	opt stack 0
 13995  005FD2                     ___lldiv:
 13996                           	opt stack 21
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;incstack = 0
 14000  005FD2  0E00               	movlw	0
 14001  005FD4  0100               	movlb	0	; () banked
 14002  005FD6  6F68               	movwf	___lldiv@quotient& (0+255),b
 14003  005FD8  0E00               	movlw	0
 14004  005FDA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14005  005FDC  0E00               	movlw	0
 14006  005FDE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14007  005FE0  0E00               	movlw	0
 14008  005FE2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14009                           
 14010                           ; BSR set to: 0
 14011  005FE4  0100               	movlb	0	; () banked
 14012  005FE6  5164               	movf	___lldiv@divisor& (0+255),w,b
 14013  005FE8  0100               	movlb	0	; () banked
 14014  005FEA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14015  005FEC  0100               	movlb	0	; () banked
 14016  005FEE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14017  005FF0  0100               	movlb	0	; () banked
 14018  005FF2  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14019  005FF4  B4D8               	btfsc	status,2,c
 14020  005FF6  D042               	goto	l2229
 14021                           
 14022                           ; BSR set to: 0
 14023  005FF8  0E01               	movlw	1
 14024  005FFA  0100               	movlb	0	; () banked
 14025  005FFC  6F6C               	movwf	___lldiv@counter& (0+255),b
 14026  005FFE  D008               	goto	l11925
 14027  006000                     l11923:
 14028                           
 14029                           ; BSR set to: 0
 14030  006000  0100               	movlb	0	; () banked
 14031  006002  90D8               	bcf	status,0,c
 14032  006004  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14033  006006  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14034  006008  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14035  00600A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14036  00600C  0100               	movlb	0	; () banked
 14037  00600E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14038  006010                     l11925:
 14039                           
 14040                           ; BSR set to: 0
 14041  006010  0100               	movlb	0	; () banked
 14042  006012  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14043  006014  D7F5               	goto	l11923
 14044  006016                     l11927:
 14045                           
 14046                           ; BSR set to: 0
 14047  006016  0100               	movlb	0	; () banked
 14048  006018  90D8               	bcf	status,0,c
 14049  00601A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14050  00601C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14051  00601E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14052  006020  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14053                           
 14054                           ; BSR set to: 0
 14055  006022  0100               	movlb	0	; () banked
 14056  006024  5164               	movf	___lldiv@divisor& (0+255),w,b
 14057  006026  0100               	movlb	0	; () banked
 14058  006028  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14059  00602A  0100               	movlb	0	; () banked
 14060  00602C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14061  00602E  0100               	movlb	0	; () banked
 14062  006030  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14063  006032  0100               	movlb	0	; () banked
 14064  006034  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14065  006036  0100               	movlb	0	; () banked
 14066  006038  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14067  00603A  0100               	movlb	0	; () banked
 14068  00603C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14069  00603E  0100               	movlb	0	; () banked
 14070  006040  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14071  006042  A0D8               	btfss	status,0,c
 14072  006044  D012               	goto	l11935
 14073                           
 14074                           ; BSR set to: 0
 14075  006046  0100               	movlb	0	; () banked
 14076  006048  5164               	movf	___lldiv@divisor& (0+255),w,b
 14077  00604A  0100               	movlb	0	; () banked
 14078  00604C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14079  00604E  0100               	movlb	0	; () banked
 14080  006050  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14081  006052  0100               	movlb	0	; () banked
 14082  006054  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14083  006056  0100               	movlb	0	; () banked
 14084  006058  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14085  00605A  0100               	movlb	0	; () banked
 14086  00605C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14087  00605E  0100               	movlb	0	; () banked
 14088  006060  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14089  006062  0100               	movlb	0	; () banked
 14090  006064  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14091                           
 14092                           ; BSR set to: 0
 14093  006066  0100               	movlb	0	; () banked
 14094  006068  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14095  00606A                     l11935:
 14096                           
 14097                           ; BSR set to: 0
 14098  00606A  0100               	movlb	0	; () banked
 14099  00606C  90D8               	bcf	status,0,c
 14100  00606E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14101  006070  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14102  006072  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14103  006074  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14104                           
 14105                           ; BSR set to: 0
 14106  006076  0100               	movlb	0	; () banked
 14107  006078  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14108  00607A  D7CD               	goto	l11927
 14109  00607C                     l2229:
 14110                           
 14111                           ; BSR set to: 0
 14112  00607C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14113  006080  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14114  006084  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14115  006088  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14116                           
 14117                           ; BSR set to: 0
 14118  00608C  0012               	return		;funcret
 14119  00608E                     __end_of___lldiv:
 14120                           	opt stack 0
 14121                           tblptru	equ	0xFF8
 14122                           tblptrh	equ	0xFF7
 14123                           tblptrl	equ	0xFF6
 14124                           tablat	equ	0xFF5
 14125                           prodh	equ	0xFF4
 14126                           prodl	equ	0xFF3
 14127                           intcon	equ	0xFF2
 14128                           indf0	equ	0xFEF
 14129                           postinc0	equ	0xFEE
 14130                           fsr0h	equ	0xFEA
 14131                           fsr0l	equ	0xFE9
 14132                           wreg	equ	0xFE8
 14133                           postdec1	equ	0xFE5
 14134                           plusw1	equ	0xFE3
 14135                           fsr1h	equ	0xFE2
 14136                           fsr1l	equ	0xFE1
 14137                           indf2	equ	0xFDF
 14138                           postinc2	equ	0xFDE
 14139                           postdec2	equ	0xFDD
 14140                           plusw2	equ	0xFDB
 14141                           fsr2h	equ	0xFDA
 14142                           fsr2l	equ	0xFD9
 14143                           status	equ	0xFD8
 14144                           
 14145 ;; *************** function _sample_pr_chip_comm *****************
 14146 ;; Defined at:
 14147 ;;		line 180 in file "src/api/sample.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;		None
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  t16             2   35[BANK0 ] int 
 14152 ;;  ret             1   34[BANK0 ] unsigned char 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  2   30[BANK0 ] int 
 14155 ;; Registers used:
 14156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14162 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14163 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14165 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14166 ;;Total ram usage:        7 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    9
 14169 ;; This function calls:
 14170 ;;		___x_sample_fifo
 14171 ;;		_ads1115_read_conversion
 14172 ;;		_ads1115_set_mux
 14173 ;;		_ads1115_start_conversion
 14174 ;;		_delay_ms
 14175 ;; This function is called by:
 14176 ;;		_event_process_rtc
 14177 ;; This function uses a non-reentrant model
 14178 ;;
 14179                           
 14180                           	psect	text77
 14181  004328                     __ptext77:
 14182                           	opt stack 0
 14183  004328                     _sample_pr_chip_comm:
 14184                           	opt stack 19
 14185                           
 14186                           ;sample.c: 182: uint8_t ret=0;
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;incstack = 0
 14190  004328  0E00               	movlw	0
 14191  00432A  0100               	movlb	0	; () banked
 14192  00432C  6F82               	movwf	sample_pr_chip_comm@ret& (0+255),b
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;sample.c: 183: int16_t t16;
 14196                           ;sample.c: 184: commonSampleTimer++;
 14197  00432E  2A2E               	incf	_commonSampleTimer,f,c	;volatile
 14198                           
 14199                           ; BSR set to: 0
 14200                           ;sample.c: 185: if(commonSampleTimer>=60){
 14201  004330  0E3B               	movlw	59
 14202  004332  642E               	cpfsgt	_commonSampleTimer,c	;volatile
 14203  004334  D0CF               	goto	l13311
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;sample.c: 186: commonSampleTimer=0;
 14207  004336  0E00               	movlw	0
 14208  004338  6E2E               	movwf	_commonSampleTimer,c	;volatile
 14209                           
 14210                           ; BSR set to: 0
 14211                           
 14212                           ; BSR set to: 0
 14213                           
 14214                           ; BSR set to: 0
 14215                           
 14216                           ;sample.c: 187: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 14217  00433A  9893               	bcf	3987,4,c	;volatile
 14218                           
 14219                           ; BSR set to: 0
 14220                           
 14221                           ; BSR set to: 0
 14222                           
 14223                           ; BSR set to: 0
 14224  00433C  888A               	bsf	3978,4,c	;volatile
 14225                           
 14226                           ; BSR set to: 0
 14227                           
 14228                           ; BSR set to: 0
 14229                           
 14230                           ; BSR set to: 0
 14231                           
 14232                           ;sample.c: 188: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 14233                           
 14234                           ; BSR set to: 0
 14235                           
 14236                           ; BSR set to: 0
 14237  00433E  9A94               	bcf	3988,5,c	;volatile
 14238                           
 14239                           ; BSR set to: 0
 14240                           
 14241                           ; BSR set to: 0
 14242                           
 14243                           ; BSR set to: 0
 14244  004340  8A8B               	bsf	3979,5,c	;volatile
 14245                           
 14246                           ; BSR set to: 0
 14247                           ;sample.c: 189: delay_ms(20);
 14248                           
 14249                           ; BSR set to: 0
 14250                           
 14251                           ; BSR set to: 0
 14252  004342  0E00               	movlw	0
 14253  004344  0100               	movlb	0	; () banked
 14254  004346  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 14255  004348  0E14               	movlw	20
 14256  00434A  6F64               	movwf	delay_ms@dly& (0+255),b
 14257  00434C  EC7B  F040         	call	_delay_ms	;wreg free
 14258                           
 14259                           ;sample.c: 190: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 14260  004350  C029  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14261  004354  C02A  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14262  004358  0E04               	movlw	4
 14263  00435A  0100               	movlb	0	; () banked
 14264  00435C  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 14265  00435E  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 14266                           
 14267                           ;sample.c: 191: ads1115_start_conversion(pAds1115PrObj);
 14268  004362  C029  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14269  004366  C02A  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14270  00436A  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 14271                           
 14272                           ;sample.c: 192: delay_ms(20);
 14273  00436E  0E00               	movlw	0
 14274  004370  0100               	movlb	0	; () banked
 14275  004372  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 14276  004374  0E14               	movlw	20
 14277  004376  6F64               	movwf	delay_ms@dly& (0+255),b
 14278  004378  EC7B  F040         	call	_delay_ms	;wreg free
 14279                           
 14280                           ;sample.c: 193: t16=ads1115_read_conversion(pAds1115PrObj);
 14281  00437C  C029  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 14282  004380  C02A  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 14283  004384  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 14284  004388  C06A  F083         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 14285  00438C  C06B  F084         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 14286                           
 14287                           ;sample.c: 194: adc_exPt100=__x_sample_fifo(sampBufPt100ExA,t16,sizeof(sampBufPt100ExA)/
      +                          sizeof(int16_t));
 14288  004390  0ED6               	movlw	low _sampBufPt100ExA
 14289  004392  0100               	movlb	0	; () banked
 14290  004394  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 14291  004396  0E01               	movlw	high _sampBufPt100ExA
 14292  004398  0100               	movlb	0	; () banked
 14293  00439A  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14294  00439C  C083  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 14295  0043A0  C084  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 14296  0043A4  0E04               	movlw	4
 14297  0043A6  0100               	movlb	0	; () banked
 14298  0043A8  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 14299  0043AA  ECCA  F024         	call	___x_sample_fifo	;wreg free
 14300  0043AE  C06E  F17E         	movff	?___x_sample_fifo,_adc_exPt100	;volatile
 14301  0043B2  C06F  F17F         	movff	?___x_sample_fifo+1,_adc_exPt100+1	;volatile
 14302                           
 14303                           ;sample.c: 197: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 14304  0043B6  C029  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14305  0043BA  C02A  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14306  0043BE  0E04               	movlw	4
 14307  0043C0  0100               	movlb	0	; () banked
 14308  0043C2  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 14309  0043C4  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 14310                           
 14311                           ;sample.c: 198: ads1115_start_conversion(pAds1115PrObj);
 14312  0043C8  C029  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14313  0043CC  C02A  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14314  0043D0  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 14315                           
 14316                           ;sample.c: 199: delay_ms(20);
 14317  0043D4  0E00               	movlw	0
 14318  0043D6  0100               	movlb	0	; () banked
 14319  0043D8  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 14320  0043DA  0E14               	movlw	20
 14321  0043DC  6F64               	movwf	delay_ms@dly& (0+255),b
 14322  0043DE  EC7B  F040         	call	_delay_ms	;wreg free
 14323                           
 14324                           ;sample.c: 200: t16=ads1115_read_conversion(pAds1115PrObj);
 14325  0043E2  C029  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 14326  0043E6  C02A  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 14327  0043EA  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 14328  0043EE  C06A  F083         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 14329  0043F2  C06B  F084         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 14330                           
 14331                           ;sample.c: 201: t16=__x_sample_fifo(sampBufPt100ExB,t16,sizeof(sampBufPt100ExB)/sizeof(i
      +                          nt16_t));
 14332  0043F6  0ECE               	movlw	low _sampBufPt100ExB
 14333  0043F8  0100               	movlb	0	; () banked
 14334  0043FA  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 14335  0043FC  0E01               	movlw	high _sampBufPt100ExB
 14336  0043FE  0100               	movlb	0	; () banked
 14337  004400  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14338  004402  C083  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 14339  004406  C084  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 14340  00440A  0E04               	movlw	4
 14341  00440C  0100               	movlb	0	; () banked
 14342  00440E  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 14343  004410  ECCA  F024         	call	___x_sample_fifo	;wreg free
 14344  004414  C06E  F083         	movff	?___x_sample_fifo,sample_pr_chip_comm@t16
 14345  004418  C06F  F084         	movff	?___x_sample_fifo+1,sample_pr_chip_comm@t16+1
 14346                           
 14347                           ;sample.c: 202: adc_exPt100=adc_exPt100-t16-t16;
 14348  00441C  C083  F080         	movff	sample_pr_chip_comm@t16,??_sample_pr_chip_comm
 14349  004420  C084  F081         	movff	sample_pr_chip_comm@t16+1,??_sample_pr_chip_comm+1
 14350  004424  90D8               	bcf	status,0,c
 14351  004426  0100               	movlb	0	; () banked
 14352  004428  3780               	rlcf	??_sample_pr_chip_comm& (0+255),f,b
 14353  00442A  3781               	rlcf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 14354  00442C  0100               	movlb	0	; () banked
 14355  00442E  1F80               	comf	??_sample_pr_chip_comm& (0+255),f,b
 14356  004430  1F81               	comf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 14357  004432  4B80               	infsnz	??_sample_pr_chip_comm& (0+255),f,b
 14358  004434  2B81               	incf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 14359  004436  0101               	movlb	1	; () banked
 14360  004438  517E               	movf	_adc_exPt100& (0+255),w,b	;volatile
 14361  00443A  0100               	movlb	0	; () banked
 14362  00443C  2580               	addwf	??_sample_pr_chip_comm& (0+255),w,b
 14363  00443E  0101               	movlb	1	; () banked
 14364  004440  6F7E               	movwf	_adc_exPt100& (0+255),b	;volatile
 14365  004442  0101               	movlb	1	; () banked
 14366  004444  517F               	movf	(_adc_exPt100+1)& (0+255),w,b	;volatile
 14367  004446  0100               	movlb	0	; () banked
 14368  004448  2181               	addwfc	(??_sample_pr_chip_comm+1)& (0+255),w,b
 14369  00444A  0101               	movlb	1	; () banked
 14370  00444C  6F7F               	movwf	(_adc_exPt100+1)& (0+255),b	;volatile
 14371                           
 14372                           ; BSR set to: 1
 14373                           ;sample.c: 203: ex_pt100SampleUpdate=1;
 14374  00444E  0E01               	movlw	1
 14375  004450  0101               	movlb	1	; () banked
 14376  004452  6F8A               	movwf	_ex_pt100SampleUpdate& (0+255),b
 14377                           
 14378                           ; BSR set to: 1
 14379                           ;sample.c: 205: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_DIFF_2_3);
 14380  004454  C029  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14381  004458  C02A  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14382  00445C  0E03               	movlw	3
 14383  00445E  0100               	movlb	0	; () banked
 14384  004460  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 14385  004462  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 14386                           
 14387                           ;sample.c: 206: ads1115_start_conversion(pAds1115PrObj);
 14388  004466  C029  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14389  00446A  C02A  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14390  00446E  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 14391                           
 14392                           ;sample.c: 207: delay_ms(20);
 14393  004472  0E00               	movlw	0
 14394  004474  0100               	movlb	0	; () banked
 14395  004476  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 14396  004478  0E14               	movlw	20
 14397  00447A  6F64               	movwf	delay_ms@dly& (0+255),b
 14398  00447C  EC7B  F040         	call	_delay_ms	;wreg free
 14399                           
 14400                           ;sample.c: 208: t16=ads1115_read_conversion(pAds1115PrObj);
 14401  004480  C029  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 14402  004484  C02A  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 14403  004488  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 14404  00448C  C06A  F083         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 14405  004490  C06B  F084         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 14406                           
 14407                           ;sample.c: 209: adc_pressure=__x_sample_fifo(sampBufPr,t16,sizeof(sampBufPr)/sizeof(int1
      +                          6_t));
 14408  004494  0EC6               	movlw	low _sampBufPr
 14409  004496  0100               	movlb	0	; () banked
 14410  004498  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 14411  00449A  0E01               	movlw	high _sampBufPr
 14412  00449C  0100               	movlb	0	; () banked
 14413  00449E  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14414  0044A0  C083  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 14415  0044A4  C084  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 14416  0044A8  0E04               	movlw	4
 14417  0044AA  0100               	movlb	0	; () banked
 14418  0044AC  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 14419  0044AE  ECCA  F024         	call	___x_sample_fifo	;wreg free
 14420  0044B2  C06E  F180         	movff	?___x_sample_fifo,_adc_pressure	;volatile
 14421  0044B6  C06F  F181         	movff	?___x_sample_fifo+1,_adc_pressure+1	;volatile
 14422                           
 14423                           ;sample.c: 210: prSampleUpdate=1;
 14424  0044BA  0E01               	movlw	1
 14425  0044BC  0101               	movlb	1	; () banked
 14426  0044BE  6F8B               	movwf	_prSampleUpdate& (0+255),b
 14427                           
 14428                           ; BSR set to: 1
 14429                           
 14430                           ; BSR set to: 1
 14431                           
 14432                           ; BSR set to: 1
 14433                           
 14434                           ;sample.c: 212: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 14435  0044C0  9A94               	bcf	3988,5,c	;volatile
 14436                           
 14437                           ; BSR set to: 1
 14438                           
 14439                           ; BSR set to: 1
 14440                           
 14441                           ; BSR set to: 1
 14442  0044C2  9A8B               	bcf	3979,5,c	;volatile
 14443                           
 14444                           ; BSR set to: 1
 14445                           
 14446                           ; BSR set to: 1
 14447                           
 14448                           ; BSR set to: 1
 14449                           
 14450                           ;sample.c: 213: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB &= ~(1<<4);}while(0);; }whil
      +                          e(0);;
 14451                           
 14452                           ; BSR set to: 1
 14453                           
 14454                           ; BSR set to: 1
 14455  0044C4  9893               	bcf	3987,4,c	;volatile
 14456                           
 14457                           ; BSR set to: 1
 14458                           
 14459                           ; BSR set to: 1
 14460                           
 14461                           ; BSR set to: 1
 14462  0044C6  988A               	bcf	3978,4,c	;volatile
 14463                           
 14464                           ; BSR set to: 1
 14465                           ;sample.c: 214: return 1;
 14466                           
 14467                           ; BSR set to: 1
 14468                           
 14469                           ; BSR set to: 1
 14470  0044C8  0E00               	movlw	0
 14471  0044CA  0100               	movlb	0	; () banked
 14472  0044CC  6F7F               	movwf	(?_sample_pr_chip_comm+1)& (0+255),b
 14473  0044CE  0E01               	movlw	1
 14474  0044D0  6F7E               	movwf	?_sample_pr_chip_comm& (0+255),b
 14475                           
 14476                           ; BSR set to: 0
 14477  0044D2  0012               	return	
 14478  0044D4                     l13311:
 14479                           
 14480                           ; BSR set to: 0
 14481                           ;sample.c: 215: }
 14482                           ;sample.c: 216: return 0;
 14483  0044D4  0E00               	movlw	0
 14484  0044D6  0100               	movlb	0	; () banked
 14485  0044D8  6F7F               	movwf	(?_sample_pr_chip_comm+1)& (0+255),b
 14486  0044DA  0E00               	movlw	0
 14487  0044DC  6F7E               	movwf	?_sample_pr_chip_comm& (0+255),b
 14488  0044DE  0012               	return	
 14489  0044E0                     __end_of_sample_pr_chip_comm:
 14490                           	opt stack 0
 14491                           tblptru	equ	0xFF8
 14492                           tblptrh	equ	0xFF7
 14493                           tblptrl	equ	0xFF6
 14494                           tablat	equ	0xFF5
 14495                           prodh	equ	0xFF4
 14496                           prodl	equ	0xFF3
 14497                           intcon	equ	0xFF2
 14498                           indf0	equ	0xFEF
 14499                           postinc0	equ	0xFEE
 14500                           fsr0h	equ	0xFEA
 14501                           fsr0l	equ	0xFE9
 14502                           wreg	equ	0xFE8
 14503                           postdec1	equ	0xFE5
 14504                           plusw1	equ	0xFE3
 14505                           fsr1h	equ	0xFE2
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           postdec2	equ	0xFDD
 14510                           plusw2	equ	0xFDB
 14511                           fsr2h	equ	0xFDA
 14512                           fsr2l	equ	0xFD9
 14513                           status	equ	0xFD8
 14514                           
 14515 ;; *************** function _sample_in_soc_adc_ch *****************
 14516 ;; Defined at:
 14517 ;;		line 219 in file "src/api/sample.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;		None
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;  ret             4   15[BANK0 ] unsigned long 
 14522 ;;  t16             2   13[BANK0 ] unsigned int 
 14523 ;;  i               1   19[BANK0 ] unsigned char 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  2  500[None  ] int 
 14526 ;; Registers used:
 14527 ;;		wreg, status,2, status,0, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14536 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14537 ;;Total ram usage:       11 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    6
 14540 ;; This function calls:
 14541 ;;		_in_adc_init
 14542 ;;		_in_adc_start_and_read
 14543 ;; This function is called by:
 14544 ;;		_event_process_rtc
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           	psect	text78
 14549  0035CE                     __ptext78:
 14550                           	opt stack 0
 14551  0035CE                     _sample_in_soc_adc_ch:
 14552                           	opt stack 22
 14553                           
 14554                           ;sample.c: 221: uint8_t i;
 14555                           ;sample.c: 222: uint16_t t16;
 14556                           ;sample.c: 223: uint32_t ret=0;
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;incstack = 0
 14560  0035CE  0E00               	movlw	0
 14561  0035D0  0100               	movlb	0	; () banked
 14562  0035D2  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 14563  0035D4  0E00               	movlw	0
 14564  0035D6  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 14565  0035D8  0E00               	movlw	0
 14566  0035DA  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 14567  0035DC  0E00               	movlw	0
 14568  0035DE  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;sample.c: 224: inSocSampleTimer++;
 14572  0035E0  2A2D               	incf	_inSocSampleTimer,f,c	;volatile
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;sample.c: 225: if(inSocSampleTimer>=60){
 14576  0035E2  0E3B               	movlw	59
 14577  0035E4  642D               	cpfsgt	_inSocSampleTimer,c	;volatile
 14578  0035E6  0012               	return	
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;sample.c: 226: inSocSampleTimer=0;
 14582  0035E8  0E00               	movlw	0
 14583  0035EA  6E2D               	movwf	_inSocSampleTimer,c	;volatile
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;sample.c: 228: in_adc_init();
 14587  0035EC  EC8E  F040         	call	_in_adc_init	;wreg free
 14588                           
 14589                           ;sample.c: 229: ret=0;
 14590  0035F0  0E00               	movlw	0
 14591  0035F2  0100               	movlb	0	; () banked
 14592  0035F4  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 14593  0035F6  0E00               	movlw	0
 14594  0035F8  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 14595  0035FA  0E00               	movlw	0
 14596  0035FC  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 14597  0035FE  0E00               	movlw	0
 14598  003600  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 14599                           
 14600                           ; BSR set to: 0
 14601                           ;sample.c: 230: for(i=0;i<4;i++){
 14602  003602  0E00               	movlw	0
 14603  003604  0100               	movlb	0	; () banked
 14604  003606  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 14605  003608                     l13329:
 14606                           
 14607                           ; BSR set to: 0
 14608  003608  0E03               	movlw	3
 14609  00360A  0100               	movlb	0	; () banked
 14610  00360C  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 14611  00360E  D001               	goto	l13333
 14612  003610  D018               	goto	l13341
 14613  003612                     l13333:
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;sample.c: 231: t16=in_adc_start_and_read(2);
 14617  003612  0E02               	movlw	2
 14618  003614  EC3B  F039         	call	_in_adc_start_and_read
 14619  003618  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14620  00361C  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14621                           
 14622                           ;sample.c: 232: ret+=t16;
 14623  003620  0100               	movlb	0	; () banked
 14624  003622  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 14625  003624  0100               	movlb	0	; () banked
 14626  003626  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 14627  003628  0100               	movlb	0	; () banked
 14628  00362A  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 14629  00362C  0100               	movlb	0	; () banked
 14630  00362E  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 14631  003630  0E00               	movlw	0
 14632  003632  0100               	movlb	0	; () banked
 14633  003634  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 14634  003636  0E00               	movlw	0
 14635  003638  0100               	movlb	0	; () banked
 14636  00363A  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 14637                           
 14638                           ; BSR set to: 0
 14639  00363C  0100               	movlb	0	; () banked
 14640  00363E  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 14641  003640  D7E3               	goto	l13329
 14642  003642                     l13341:
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;sample.c: 233: }
 14646                           ;sample.c: 234: adc_iPrEx[0]=(uint16_t)(ret/4);
 14647  003642  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 14648  003646  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 14649  00364A  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 14650  00364E  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 14651  003652  0E03               	movlw	3
 14652  003654  D006               	goto	u11990
 14653  003656                     u11995:
 14654  003656  0100               	movlb	0	; () banked
 14655  003658  90D8               	bcf	status,0,c
 14656  00365A  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 14657  00365C  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 14658  00365E  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 14659  003660  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 14660  003662                     u11990:
 14661  003662  2EE8               	decfsz	wreg,f,c
 14662  003664  D7F8               	goto	u11995
 14663  003666  C069  F162         	movff	??_sample_in_soc_adc_ch,_adc_iPrEx	;volatile
 14664  00366A  C06A  F163         	movff	??_sample_in_soc_adc_ch+1,_adc_iPrEx+1	;volatile
 14665                           
 14666                           ; BSR set to: 0
 14667                           ;sample.c: 237: ret=0;
 14668  00366E  0E00               	movlw	0
 14669  003670  0100               	movlb	0	; () banked
 14670  003672  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 14671  003674  0E00               	movlw	0
 14672  003676  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 14673  003678  0E00               	movlw	0
 14674  00367A  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 14675  00367C  0E00               	movlw	0
 14676  00367E  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;sample.c: 238: for(i=0;i<4;i++){
 14680  003680  0E00               	movlw	0
 14681  003682  0100               	movlb	0	; () banked
 14682  003684  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 14683  003686  0E03               	movlw	3
 14684  003688  0100               	movlb	0	; () banked
 14685  00368A  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 14686  00368C  D001               	goto	l13349
 14687  00368E  D018               	goto	l13357
 14688  003690                     l13349:
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;sample.c: 239: t16=in_adc_start_and_read(1);
 14692  003690  0E01               	movlw	1
 14693  003692  EC3B  F039         	call	_in_adc_start_and_read
 14694  003696  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14695  00369A  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14696                           
 14697                           ;sample.c: 240: ret+=t16;
 14698  00369E  0100               	movlb	0	; () banked
 14699  0036A0  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 14700  0036A2  0100               	movlb	0	; () banked
 14701  0036A4  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 14702  0036A6  0100               	movlb	0	; () banked
 14703  0036A8  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 14704  0036AA  0100               	movlb	0	; () banked
 14705  0036AC  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 14706  0036AE  0E00               	movlw	0
 14707  0036B0  0100               	movlb	0	; () banked
 14708  0036B2  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 14709  0036B4  0E00               	movlw	0
 14710  0036B6  0100               	movlb	0	; () banked
 14711  0036B8  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 14712                           
 14713                           ; BSR set to: 0
 14714  0036BA  0100               	movlb	0	; () banked
 14715  0036BC  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 14716  0036BE  D7E3               	goto	L3
 14717  0036C0                     l13357:
 14718                           
 14719                           ; BSR set to: 0
 14720                           ;sample.c: 241: }
 14721                           ;sample.c: 242: adc_iPrEx[1]=(uint16_t)(ret/4);
 14722  0036C0  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 14723  0036C4  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 14724  0036C8  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 14725  0036CC  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 14726  0036D0  0E03               	movlw	3
 14727  0036D2  D006               	goto	u12020
 14728  0036D4                     u12025:
 14729  0036D4  0100               	movlb	0	; () banked
 14730  0036D6  90D8               	bcf	status,0,c
 14731  0036D8  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 14732  0036DA  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 14733  0036DC  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 14734  0036DE  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 14735  0036E0                     u12020:
 14736  0036E0  2EE8               	decfsz	wreg,f,c
 14737  0036E2  D7F8               	goto	u12025
 14738  0036E4  C069  F164         	movff	??_sample_in_soc_adc_ch,_adc_iPrEx+2	;volatile
 14739  0036E8  C06A  F165         	movff	??_sample_in_soc_adc_ch+1,_adc_iPrEx+3	;volatile
 14740                           
 14741                           ; BSR set to: 0
 14742                           ;sample.c: 244: ret=0;
 14743  0036EC  0E00               	movlw	0
 14744  0036EE  0100               	movlb	0	; () banked
 14745  0036F0  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 14746  0036F2  0E00               	movlw	0
 14747  0036F4  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 14748  0036F6  0E00               	movlw	0
 14749  0036F8  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 14750  0036FA  0E00               	movlw	0
 14751  0036FC  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;sample.c: 245: for(i=0;i<4;i++){
 14755  0036FE  0E00               	movlw	0
 14756  003700  0100               	movlb	0	; () banked
 14757  003702  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 14758  003704  0E03               	movlw	3
 14759  003706  0100               	movlb	0	; () banked
 14760  003708  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 14761  00370A  D001               	goto	l13365
 14762  00370C  D018               	goto	l13373
 14763  00370E                     l13365:
 14764                           
 14765                           ; BSR set to: 0
 14766                           ;sample.c: 246: t16=in_adc_start_and_read(0);
 14767  00370E  0E00               	movlw	0
 14768  003710  EC3B  F039         	call	_in_adc_start_and_read
 14769  003714  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14770  003718  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14771                           
 14772                           ;sample.c: 247: ret+=t16;
 14773  00371C  0100               	movlb	0	; () banked
 14774  00371E  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 14775  003720  0100               	movlb	0	; () banked
 14776  003722  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 14777  003724  0100               	movlb	0	; () banked
 14778  003726  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 14779  003728  0100               	movlb	0	; () banked
 14780  00372A  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 14781  00372C  0E00               	movlw	0
 14782  00372E  0100               	movlb	0	; () banked
 14783  003730  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 14784  003732  0E00               	movlw	0
 14785  003734  0100               	movlb	0	; () banked
 14786  003736  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 14787                           
 14788                           ; BSR set to: 0
 14789  003738  0100               	movlb	0	; () banked
 14790  00373A  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 14791  00373C  D7E3               	goto	L4
 14792  00373E                     l13373:
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;sample.c: 248: }
 14796                           ;sample.c: 249: sampBufBatInSoc=(uint16_t)(ret/4);
 14797  00373E  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 14798  003742  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 14799  003746  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 14800  00374A  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 14801  00374E  0E03               	movlw	3
 14802  003750  D006               	goto	u12050
 14803  003752                     u12055:
 14804  003752  0100               	movlb	0	; () banked
 14805  003754  90D8               	bcf	status,0,c
 14806  003756  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 14807  003758  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 14808  00375A  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 14809  00375C  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 14810  00375E                     u12050:
 14811  00375E  2EE8               	decfsz	wreg,f,c
 14812  003760  D7F8               	goto	u12055
 14813  003762  C069  F16A         	movff	??_sample_in_soc_adc_ch,_sampBufBatInSoc
 14814  003766  C06A  F16B         	movff	??_sample_in_soc_adc_ch+1,_sampBufBatInSoc+1
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;sample.c: 251: ret=0;
 14818  00376A  0E00               	movlw	0
 14819  00376C  0100               	movlb	0	; () banked
 14820  00376E  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 14821  003770  0E00               	movlw	0
 14822  003772  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 14823  003774  0E00               	movlw	0
 14824  003776  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 14825  003778  0E00               	movlw	0
 14826  00377A  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;sample.c: 252: for(i=0;i<4;i++){
 14830  00377C  0E00               	movlw	0
 14831  00377E  0100               	movlb	0	; () banked
 14832  003780  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 14833  003782  0E03               	movlw	3
 14834  003784  0100               	movlb	0	; () banked
 14835  003786  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 14836  003788  D001               	goto	l13381
 14837  00378A  D018               	goto	l13389
 14838  00378C                     l13381:
 14839                           
 14840                           ; BSR set to: 0
 14841                           ;sample.c: 253: t16=in_adc_start_and_read(3);
 14842  00378C  0E03               	movlw	3
 14843  00378E  EC3B  F039         	call	_in_adc_start_and_read
 14844  003792  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14845  003796  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14846                           
 14847                           ;sample.c: 254: ret+=t16;
 14848  00379A  0100               	movlb	0	; () banked
 14849  00379C  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 14850  00379E  0100               	movlb	0	; () banked
 14851  0037A0  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 14852  0037A2  0100               	movlb	0	; () banked
 14853  0037A4  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 14854  0037A6  0100               	movlb	0	; () banked
 14855  0037A8  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 14856  0037AA  0E00               	movlw	0
 14857  0037AC  0100               	movlb	0	; () banked
 14858  0037AE  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 14859  0037B0  0E00               	movlw	0
 14860  0037B2  0100               	movlb	0	; () banked
 14861  0037B4  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 14862                           
 14863                           ; BSR set to: 0
 14864  0037B6  0100               	movlb	0	; () banked
 14865  0037B8  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 14866  0037BA  D7E3               	goto	L5
 14867  0037BC                     l13389:
 14868                           
 14869                           ; BSR set to: 0
 14870                           ;sample.c: 255: }
 14871                           ;sample.c: 256: sampBufRefInSoc=(uint16_t)(ret/4);
 14872  0037BC  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 14873  0037C0  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 14874  0037C4  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 14875  0037C8  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 14876  0037CC  0E03               	movlw	3
 14877  0037CE  D006               	goto	u12080
 14878  0037D0                     u12085:
 14879  0037D0  0100               	movlb	0	; () banked
 14880  0037D2  90D8               	bcf	status,0,c
 14881  0037D4  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 14882  0037D6  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 14883  0037D8  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 14884  0037DA  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 14885  0037DC                     u12080:
 14886  0037DC  2EE8               	decfsz	wreg,f,c
 14887  0037DE  D7F8               	goto	u12085
 14888  0037E0  C069  F168         	movff	??_sample_in_soc_adc_ch,_sampBufRefInSoc
 14889  0037E4  C06A  F169         	movff	??_sample_in_soc_adc_ch+1,_sampBufRefInSoc+1
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;sample.c: 257: inSocAdcSampleUpdate=1;
 14893  0037E8  0E01               	movlw	1
 14894  0037EA  0101               	movlb	1	; () banked
 14895  0037EC  6F89               	movwf	_inSocAdcSampleUpdate& (0+255),b
 14896                           
 14897                           ; BSR set to: 1
 14898                           ;sample.c: 258: return 1;
 14899                           ;	Return value of _sample_in_soc_adc_ch is never used
 14900  0037EE  0012               	return	
 14901  0037F0                     __end_of_sample_in_soc_adc_ch:
 14902                           	opt stack 0
 14903                           tblptru	equ	0xFF8
 14904                           tblptrh	equ	0xFF7
 14905                           tblptrl	equ	0xFF6
 14906                           tablat	equ	0xFF5
 14907                           prodh	equ	0xFF4
 14908                           prodl	equ	0xFF3
 14909                           intcon	equ	0xFF2
 14910                           indf0	equ	0xFEF
 14911                           postinc0	equ	0xFEE
 14912                           fsr0h	equ	0xFEA
 14913                           fsr0l	equ	0xFE9
 14914                           wreg	equ	0xFE8
 14915                           postdec1	equ	0xFE5
 14916                           plusw1	equ	0xFE3
 14917                           fsr1h	equ	0xFE2
 14918                           fsr1l	equ	0xFE1
 14919                           indf2	equ	0xFDF
 14920                           postinc2	equ	0xFDE
 14921                           postdec2	equ	0xFDD
 14922                           plusw2	equ	0xFDB
 14923                           fsr2h	equ	0xFDA
 14924                           fsr2l	equ	0xFD9
 14925                           status	equ	0xFD8
 14926                           
 14927 ;; *************** function _in_adc_start_and_read *****************
 14928 ;; Defined at:
 14929 ;;		line 21 in file "src/driver/in_adc.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;  ch              1    wreg     unsigned char 
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;  ch              1    6[BANK0 ] unsigned char 
 14934 ;;  ret             2    7[BANK0 ] unsigned int 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  2    4[BANK0 ] unsigned int 
 14937 ;; Registers used:
 14938 ;;		wreg, status,2, status,0, cstack
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;Total ram usage:        6 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:    5
 14951 ;; This function calls:
 14952 ;;		_delay_us
 14953 ;; This function is called by:
 14954 ;;		_sample_in_soc_adc_ch
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text79
 14959  007276                     __ptext79:
 14960                           	opt stack 0
 14961  007276                     _in_adc_start_and_read:
 14962                           	opt stack 22
 14963                           
 14964                           ;incstack = 0
 14965                           ;in_adc_start_and_read@ch stored from wreg
 14966  007276  0100               	movlb	0	; () banked
 14967  007278  6F66               	movwf	in_adc_start_and_read@ch& (0+255),b
 14968                           
 14969                           ;in_adc.c: 23: uint16_t ret=0;
 14970  00727A  0E00               	movlw	0
 14971  00727C  0100               	movlb	0	; () banked
 14972  00727E  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 14973  007280  0E00               	movlw	0
 14974  007282  6F67               	movwf	in_adc_start_and_read@ret& (0+255),b
 14975                           
 14976                           ; BSR set to: 0
 14977                           
 14978                           ; BSR set to: 0
 14979                           
 14980                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 14981  007284  80C2               	bsf	4034,0,c	;volatile
 14982                           
 14983                           ; BSR set to: 0
 14984                           
 14985                           ; BSR set to: 0
 14986                           
 14987                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 14988                           
 14989                           ; BSR set to: 0
 14990  007286  C066  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 14991  00728A  4620               	rlncf	??_in_adc_start_and_read,f,c
 14992  00728C  4620               	rlncf	??_in_adc_start_and_read,f,c
 14993  00728E  50C2               	movf	4034,w,c	;volatile
 14994  007290  1820               	xorwf	??_in_adc_start_and_read,w,c
 14995  007292  0BC3               	andlw	-61
 14996  007294  1820               	xorwf	??_in_adc_start_and_read,w,c
 14997  007296  6EC2               	movwf	4034,c	;volatile
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;in_adc.c: 26: delay_us(2);
 15001                           
 15002                           ; BSR set to: 0
 15003  007298  0E00               	movlw	0
 15004  00729A  0100               	movlb	0	; () banked
 15005  00729C  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15006  00729E  0E02               	movlw	2
 15007  0072A0  6F60               	movwf	delay_us@dly& (0+255),b
 15008  0072A2  EC70  F03E         	call	_delay_us	;wreg free
 15009                           
 15010                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 15011  0072A6  82C2               	bsf	4034,1,c	;volatile
 15012                           
 15013                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 15014  0072A8  D001               	goto	l1042
 15015  0072AA                     l1043:
 15016  0072AA  F000               	nop	
 15017  0072AC                     l1042:
 15018  0072AC  B2C2               	btfsc	4034,1,c	;volatile
 15019  0072AE  D7FD               	goto	l1043
 15020                           
 15021                           ;in_adc.c: 30: ret=ADRESH;
 15022  0072B0  CFC4 F067          	movff	4036,in_adc_start_and_read@ret	;volatile
 15023  0072B4  0100               	movlb	0	; () banked
 15024  0072B6  6B68               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;in_adc.c: 31: ret<<=8;
 15028  0072B8  0100               	movlb	0	; () banked
 15029  0072BA  5167               	movf	in_adc_start_and_read@ret& (0+255),w,b
 15030  0072BC  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15031  0072BE  6B67               	clrf	in_adc_start_and_read@ret& (0+255),b
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;in_adc.c: 32: ret |= ADRESL;
 15035  0072C0  50C3               	movf	4035,w,c	;volatile
 15036  0072C2  0100               	movlb	0	; () banked
 15037  0072C4  1367               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;in_adc.c: 33: delay_us(2);
 15041  0072C6  0E00               	movlw	0
 15042  0072C8  0100               	movlb	0	; () banked
 15043  0072CA  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15044  0072CC  0E02               	movlw	2
 15045  0072CE  6F60               	movwf	delay_us@dly& (0+255),b
 15046  0072D0  EC70  F03E         	call	_delay_us	;wreg free
 15047                           
 15048                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 15049  0072D4  90C2               	bcf	4034,0,c	;volatile
 15050                           
 15051                           ;in_adc.c: 35: return ret;
 15052  0072D6  C067  F064         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 15053  0072DA  C068  F065         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 15054  0072DE  0012               	return	
 15055  0072E0                     __end_of_in_adc_start_and_read:
 15056                           	opt stack 0
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           indf0	equ	0xFEF
 15065                           postinc0	equ	0xFEE
 15066                           fsr0h	equ	0xFEA
 15067                           fsr0l	equ	0xFE9
 15068                           wreg	equ	0xFE8
 15069                           postdec1	equ	0xFE5
 15070                           plusw1	equ	0xFE3
 15071                           fsr1h	equ	0xFE2
 15072                           fsr1l	equ	0xFE1
 15073                           indf2	equ	0xFDF
 15074                           postinc2	equ	0xFDE
 15075                           postdec2	equ	0xFDD
 15076                           plusw2	equ	0xFDB
 15077                           fsr2h	equ	0xFDA
 15078                           fsr2l	equ	0xFD9
 15079                           status	equ	0xFD8
 15080                           
 15081 ;; *************** function _in_adc_init *****************
 15082 ;; Defined at:
 15083 ;;		line 9 in file "src/driver/in_adc.c"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;		None
 15086 ;; Auto vars:     Size  Location     Type
 15087 ;;		None
 15088 ;; Return value:  Size  Location     Type
 15089 ;;                  1    wreg      void 
 15090 ;; Registers used:
 15091 ;;		wreg, status,2
 15092 ;; Tracked objects:
 15093 ;;		On entry : 0/0
 15094 ;;		On exit  : 0/0
 15095 ;;		Unchanged: 0/0
 15096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15101 ;;Total ram usage:        0 bytes
 15102 ;; Hardware stack levels used:    1
 15103 ;; Hardware stack levels required when called:    4
 15104 ;; This function calls:
 15105 ;;		Nothing
 15106 ;; This function is called by:
 15107 ;;		_main
 15108 ;;		_sample_in_soc_adc_ch
 15109 ;; This function uses a non-reentrant model
 15110 ;;
 15111                           
 15112                           	psect	text80
 15113  00811C                     __ptext80:
 15114                           	opt stack 0
 15115  00811C                     _in_adc_init:
 15116                           	opt stack 26
 15117                           
 15118                           ;in_adc.c: 11: ADCON1=0b00001101;
 15119                           
 15120                           ;incstack = 0
 15121  00811C  0E0D               	movlw	13
 15122  00811E  6EC1               	movwf	4033,c	;volatile
 15123                           
 15124                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 15125  008120  8EC0               	bsf	4032,7,c	;volatile
 15126                           
 15127                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 15128  008122  86C0               	bsf	4032,3,c	;volatile
 15129  008124  88C0               	bsf	4032,4,c	;volatile
 15130  008126  8AC0               	bsf	4032,5,c	;volatile
 15131                           
 15132                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 15133  008128  80C0               	bsf	4032,0,c	;volatile
 15134  00812A  82C0               	bsf	4032,1,c	;volatile
 15135  00812C  84C0               	bsf	4032,2,c	;volatile
 15136                           
 15137                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 15138  00812E  8EC2               	bsf	4034,7,c	;volatile
 15139                           
 15140                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 15141  008130  50C2               	movf	4034,w,c	;volatile
 15142  008132  0BC3               	andlw	-61
 15143  008134  090C               	iorlw	12
 15144  008136  6EC2               	movwf	4034,c	;volatile
 15145                           
 15146                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 15147  008138  9C9E               	bcf	3998,6,c	;volatile
 15148                           
 15149                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 15150  00813A  9C9D               	bcf	3997,6,c	;volatile
 15151                           
 15152                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 15153  00813C  9C9F               	bcf	3999,6,c	;volatile
 15154  00813E  0012               	return		;funcret
 15155  008140                     __end_of_in_adc_init:
 15156                           	opt stack 0
 15157                           tblptru	equ	0xFF8
 15158                           tblptrh	equ	0xFF7
 15159                           tblptrl	equ	0xFF6
 15160                           tablat	equ	0xFF5
 15161                           prodh	equ	0xFF4
 15162                           prodl	equ	0xFF3
 15163                           intcon	equ	0xFF2
 15164                           indf0	equ	0xFEF
 15165                           postinc0	equ	0xFEE
 15166                           fsr0h	equ	0xFEA
 15167                           fsr0l	equ	0xFE9
 15168                           wreg	equ	0xFE8
 15169                           postdec1	equ	0xFE5
 15170                           plusw1	equ	0xFE3
 15171                           fsr1h	equ	0xFE2
 15172                           fsr1l	equ	0xFE1
 15173                           indf2	equ	0xFDF
 15174                           postinc2	equ	0xFDE
 15175                           postdec2	equ	0xFDD
 15176                           plusw2	equ	0xFDB
 15177                           fsr2h	equ	0xFDA
 15178                           fsr2l	equ	0xFD9
 15179                           status	equ	0xFD8
 15180                           
 15181 ;; *************** function _sample_diff_pr_chip_slow *****************
 15182 ;; Defined at:
 15183 ;;		line 126 in file "src/api/sample.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;		None
 15186 ;; Auto vars:     Size  Location     Type
 15187 ;;  t16             2   40[BANK0 ] int 
 15188 ;;  ret             1   39[BANK0 ] unsigned char 
 15189 ;; Return value:  Size  Location     Type
 15190 ;;                  2   37[BANK0 ] int 
 15191 ;; Registers used:
 15192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15199 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15201 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15202 ;;Total ram usage:        5 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; Hardware stack levels required when called:    9
 15205 ;; This function calls:
 15206 ;;		___x_sample_fifo
 15207 ;;		_ads1115_read_conversion
 15208 ;;		_ads1115_set_mux
 15209 ;;		_ads1115_start_conversion
 15210 ;;		_delay_ms
 15211 ;;		_sample_diff_pr_fliter
 15212 ;; This function is called by:
 15213 ;;		_event_process_rtc
 15214 ;; This function uses a non-reentrant model
 15215 ;;
 15216                           
 15217                           	psect	text81
 15218  004828                     __ptext81:
 15219                           	opt stack 0
 15220  004828                     _sample_diff_pr_chip_slow:
 15221                           	opt stack 19
 15222                           
 15223                           ;sample.c: 128: uint8_t ret=0;
 15224                           
 15225                           ;incstack = 0
 15226  004828  0E00               	movlw	0
 15227  00482A  0100               	movlb	0	; () banked
 15228  00482C  6F87               	movwf	sample_diff_pr_chip_slow@ret& (0+255),b
 15229                           
 15230                           ; BSR set to: 0
 15231                           ;sample.c: 129: int16_t t16;
 15232                           ;sample.c: 130: slowSampleTimer++;
 15233  00482E  2A2F               	incf	_slowSampleTimer,f,c	;volatile
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;sample.c: 131: if(slowSampleTimer>=60){
 15237  004830  0E3B               	movlw	59
 15238  004832  642F               	cpfsgt	_slowSampleTimer,c	;volatile
 15239  004834  D0A9               	goto	l13241
 15240                           
 15241                           ; BSR set to: 0
 15242                           ;sample.c: 132: slowSampleTimer=0;
 15243  004836  0E00               	movlw	0
 15244  004838  6E2F               	movwf	_slowSampleTimer,c	;volatile
 15245                           
 15246                           ; BSR set to: 0
 15247                           
 15248                           ; BSR set to: 0
 15249                           
 15250                           ; BSR set to: 0
 15251                           
 15252                           ;sample.c: 133: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 15253  00483A  9893               	bcf	3987,4,c	;volatile
 15254                           
 15255                           ; BSR set to: 0
 15256                           
 15257                           ; BSR set to: 0
 15258                           
 15259                           ; BSR set to: 0
 15260  00483C  888A               	bsf	3978,4,c	;volatile
 15261                           
 15262                           ; BSR set to: 0
 15263                           
 15264                           ; BSR set to: 0
 15265                           
 15266                           ; BSR set to: 0
 15267                           
 15268                           ;sample.c: 134: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 15269                           
 15270                           ; BSR set to: 0
 15271                           
 15272                           ; BSR set to: 0
 15273  00483E  9A94               	bcf	3988,5,c	;volatile
 15274                           
 15275                           ; BSR set to: 0
 15276                           
 15277                           ; BSR set to: 0
 15278                           
 15279                           ; BSR set to: 0
 15280  004840  8A8B               	bsf	3979,5,c	;volatile
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;sample.c: 135: delay_ms(20);
 15284                           
 15285                           ; BSR set to: 0
 15286                           
 15287                           ; BSR set to: 0
 15288  004842  0E00               	movlw	0
 15289  004844  0100               	movlb	0	; () banked
 15290  004846  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 15291  004848  0E14               	movlw	20
 15292  00484A  6F64               	movwf	delay_ms@dly& (0+255),b
 15293  00484C  EC7B  F040         	call	_delay_ms	;wreg free
 15294                           
 15295                           ;sample.c: 136: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
 15296  004850  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15297  004854  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15298  004858  0E00               	movlw	0
 15299  00485A  0100               	movlb	0	; () banked
 15300  00485C  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 15301  00485E  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 15302                           
 15303                           ;sample.c: 137: ads1115_start_conversion(pAds1115DiffPrObj);
 15304  004862  C02B  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15305  004866  C02C  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15306  00486A  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 15307                           
 15308                           ;sample.c: 138: delay_ms(20);
 15309  00486E  0E00               	movlw	0
 15310  004870  0100               	movlb	0	; () banked
 15311  004872  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 15312  004874  0E14               	movlw	20
 15313  004876  6F64               	movwf	delay_ms@dly& (0+255),b
 15314  004878  EC7B  F040         	call	_delay_ms	;wreg free
 15315                           
 15316                           ;sample.c: 139: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 15317  00487C  C02B  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 15318  004880  C02C  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 15319  004884  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 15320  004888  C06A  F088         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 15321  00488C  C06B  F089         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 15322                           
 15323                           ;sample.c: 142: __x_sample_fifo(sampBufDiffPr_D01,t16,sizeof(sampBufDiffPr_D01)/sizeof(s
      +                          ampBufDiffPr_D01[0]));
 15324  004890  0EA0               	movlw	low _sampBufDiffPr_D01
 15325  004892  0100               	movlb	0	; () banked
 15326  004894  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 15327  004896  0E01               	movlw	high _sampBufDiffPr_D01
 15328  004898  0100               	movlb	0	; () banked
 15329  00489A  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15330  00489C  C088  F070         	movff	sample_diff_pr_chip_slow@t16,___x_sample_fifo@x
 15331  0048A0  C089  F071         	movff	sample_diff_pr_chip_slow@t16+1,___x_sample_fifo@x+1
 15332  0048A4  0E08               	movlw	8
 15333  0048A6  0100               	movlb	0	; () banked
 15334  0048A8  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 15335  0048AA  ECCA  F024         	call	___x_sample_fifo	;wreg free
 15336                           
 15337                           ;sample.c: 149: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
 15338  0048AE  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15339  0048B2  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15340  0048B6  0E03               	movlw	3
 15341  0048B8  0100               	movlb	0	; () banked
 15342  0048BA  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 15343  0048BC  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 15344                           
 15345                           ;sample.c: 150: ads1115_start_conversion(pAds1115DiffPrObj);
 15346  0048C0  C02B  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15347  0048C4  C02C  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15348  0048C8  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 15349                           
 15350                           ;sample.c: 151: delay_ms(20);
 15351  0048CC  0E00               	movlw	0
 15352  0048CE  0100               	movlb	0	; () banked
 15353  0048D0  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 15354  0048D2  0E14               	movlw	20
 15355  0048D4  6F64               	movwf	delay_ms@dly& (0+255),b
 15356  0048D6  EC7B  F040         	call	_delay_ms	;wreg free
 15357                           
 15358                           ;sample.c: 152: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 15359  0048DA  C02B  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 15360  0048DE  C02C  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 15361  0048E2  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 15362  0048E6  C06A  F088         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 15363  0048EA  C06B  F089         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 15364                           
 15365                           ;sample.c: 154: __x_sample_fifo(sampBufDiffPr_D23,t16,sizeof(sampBufDiffPr_D23)/sizeof(s
      +                          ampBufDiffPr_D23[0]));
 15366  0048EE  0E90               	movlw	low _sampBufDiffPr_D23
 15367  0048F0  0100               	movlb	0	; () banked
 15368  0048F2  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 15369  0048F4  0E01               	movlw	high _sampBufDiffPr_D23
 15370  0048F6  0100               	movlb	0	; () banked
 15371  0048F8  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15372  0048FA  C088  F070         	movff	sample_diff_pr_chip_slow@t16,___x_sample_fifo@x
 15373  0048FE  C089  F071         	movff	sample_diff_pr_chip_slow@t16+1,___x_sample_fifo@x+1
 15374  004902  0E08               	movlw	8
 15375  004904  0100               	movlb	0	; () banked
 15376  004906  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 15377  004908  ECCA  F024         	call	___x_sample_fifo	;wreg free
 15378                           
 15379                           ;sample.c: 161: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
 15380  00490C  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15381  004910  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15382  004914  0E05               	movlw	5
 15383  004916  0100               	movlb	0	; () banked
 15384  004918  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 15385  00491A  ECA0  F040         	call	_ads1115_set_mux	;wreg free
 15386                           
 15387                           ;sample.c: 162: ads1115_start_conversion(pAds1115DiffPrObj);
 15388  00491E  C02B  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15389  004922  C02C  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15390  004926  EC66  F040         	call	_ads1115_start_conversion	;wreg free
 15391                           
 15392                           ;sample.c: 163: delay_ms(20);
 15393  00492A  0E00               	movlw	0
 15394  00492C  0100               	movlb	0	; () banked
 15395  00492E  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 15396  004930  0E14               	movlw	20
 15397  004932  6F64               	movwf	delay_ms@dly& (0+255),b
 15398  004934  EC7B  F040         	call	_delay_ms	;wreg free
 15399                           
 15400                           ;sample.c: 164: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 15401  004938  C02B  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 15402  00493C  C02C  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 15403  004940  EC53  F03D         	call	_ads1115_read_conversion	;wreg free
 15404  004944  C06A  F088         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 15405  004948  C06B  F089         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 15406                           
 15407                           ;sample.c: 165: sampBufDiffPr_S1=t16;
 15408  00494C  C088  F170         	movff	sample_diff_pr_chip_slow@t16,_sampBufDiffPr_S1	;volatile
 15409  004950  C089  F171         	movff	sample_diff_pr_chip_slow@t16+1,_sampBufDiffPr_S1+1	;volatile
 15410                           
 15411                           ;sample.c: 166: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 15412  004954  9A94               	bcf	3988,5,c	;volatile
 15413  004956  9A8B               	bcf	3979,5,c	;volatile
 15414                           
 15415                           ;sample.c: 168: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
 15416  004958  5031               	movf	_diffSampCount_D23,w,c
 15417  00495A  5C32               	subwf	_diffSampCount_D01,w,c
 15418  00495C  A0D8               	btfss	status,0,c
 15419  00495E  D00E               	goto	l13237
 15420  004960  0E05               	movlw	5
 15421  004962  6432               	cpfsgt	_diffSampCount_D01,c
 15422  004964  D00B               	goto	l13237
 15423                           
 15424                           ;sample.c: 169: sample_diff_pr_fliter(&x_prDiffData);
 15425  004966  0EDE               	movlw	low _x_prDiffData
 15426  004968  0100               	movlb	0	; () banked
 15427  00496A  6F83               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 15428  00496C  0E01               	movlw	high _x_prDiffData
 15429  00496E  0100               	movlb	0	; () banked
 15430  004970  6F84               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 15431  004972  ECF0  F036         	call	_sample_diff_pr_fliter	;wreg free
 15432                           
 15433                           ;sample.c: 173: diffPrSampleUpdate=1;
 15434  004976  0E01               	movlw	1
 15435  004978  0101               	movlb	1	; () banked
 15436  00497A  6F8D               	movwf	_diffPrSampleUpdate& (0+255),b
 15437  00497C                     l13237:
 15438                           
 15439                           ;sample.c: 174: }
 15440                           ;sample.c: 175: return 1;
 15441  00497C  0E00               	movlw	0
 15442  00497E  0100               	movlb	0	; () banked
 15443  004980  6F86               	movwf	(?_sample_diff_pr_chip_slow+1)& (0+255),b
 15444  004982  0E01               	movlw	1
 15445  004984  6F85               	movwf	?_sample_diff_pr_chip_slow& (0+255),b
 15446                           
 15447                           ; BSR set to: 0
 15448  004986  0012               	return	
 15449  004988                     l13241:
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;sample.c: 176: }
 15453                           ;sample.c: 177: return 0;
 15454  004988  0E00               	movlw	0
 15455  00498A  0100               	movlb	0	; () banked
 15456  00498C  6F86               	movwf	(?_sample_diff_pr_chip_slow+1)& (0+255),b
 15457  00498E  0E00               	movlw	0
 15458  004990  6F85               	movwf	?_sample_diff_pr_chip_slow& (0+255),b
 15459  004992  0012               	return	
 15460  004994                     __end_of_sample_diff_pr_chip_slow:
 15461                           	opt stack 0
 15462                           tblptru	equ	0xFF8
 15463                           tblptrh	equ	0xFF7
 15464                           tblptrl	equ	0xFF6
 15465                           tablat	equ	0xFF5
 15466                           prodh	equ	0xFF4
 15467                           prodl	equ	0xFF3
 15468                           intcon	equ	0xFF2
 15469                           indf0	equ	0xFEF
 15470                           postinc0	equ	0xFEE
 15471                           fsr0h	equ	0xFEA
 15472                           fsr0l	equ	0xFE9
 15473                           wreg	equ	0xFE8
 15474                           postdec1	equ	0xFE5
 15475                           plusw1	equ	0xFE3
 15476                           fsr1h	equ	0xFE2
 15477                           fsr1l	equ	0xFE1
 15478                           indf2	equ	0xFDF
 15479                           postinc2	equ	0xFDE
 15480                           postdec2	equ	0xFDD
 15481                           plusw2	equ	0xFDB
 15482                           fsr2h	equ	0xFDA
 15483                           fsr2l	equ	0xFD9
 15484                           status	equ	0xFD8
 15485                           
 15486 ;; *************** function _sample_diff_pr_fliter *****************
 15487 ;; Defined at:
 15488 ;;		line 74 in file "src/api/sample.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;  xin             2   35[BANK0 ] PTR struct .
 15491 ;;		 -> x_prDiffData(8), 
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;		None
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1    wreg      unsigned char 
 15496 ;; Registers used:
 15497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15507 ;;Total ram usage:        2 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:    6
 15510 ;; This function calls:
 15511 ;;		___x_sample_fliter
 15512 ;; This function is called by:
 15513 ;;		_sample_diff_pr_chip_fast
 15514 ;;		_sample_diff_pr_chip_slow
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           	psect	text82
 15519  006DE0                     __ptext82:
 15520                           	opt stack 0
 15521  006DE0                     _sample_diff_pr_fliter:
 15522                           	opt stack 21
 15523                           
 15524                           ;sample.c: 76: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,20/3,4);
 15525                           
 15526                           ; BSR set to: 0
 15527                           ;incstack = 0
 15528  006DE0  0EA0               	movlw	low _sampBufDiffPr_D01
 15529  006DE2  0100               	movlb	0	; () banked
 15530  006DE4  6F6E               	movwf	___x_sample_fliter@buf& (0+255),b
 15531  006DE6  0E01               	movlw	high _sampBufDiffPr_D01
 15532  006DE8  0100               	movlb	0	; () banked
 15533  006DEA  6F6F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15534  006DEC  0E06               	movlw	6
 15535  006DEE  0100               	movlb	0	; () banked
 15536  006DF0  6F70               	movwf	___x_sample_fliter@len& (0+255),b
 15537  006DF2  0E04               	movlw	4
 15538  006DF4  0100               	movlb	0	; () banked
 15539  006DF6  6F71               	movwf	___x_sample_fliter@loop& (0+255),b
 15540  006DF8  ECB8  F019         	call	___x_sample_fliter	;wreg free
 15541  006DFC  0100               	movlb	0	; () banked
 15542  006DFE  EE20 F006          	lfsr	2,6
 15543  006E02  5183               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15544  006E04  26D9               	addwf	fsr2l,f,c
 15545  006E06  5184               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15546  006E08  22DA               	addwfc	fsr2h,f,c
 15547  006E0A  0100               	movlb	0	; () banked
 15548  006E0C  C06E  FFDE         	movff	?___x_sample_fliter,postinc2
 15549  006E10  0100               	movlb	0	; () banked
 15550  006E12  C06F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15551                           
 15552                           ;sample.c: 77: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,20/3,4);
 15553  006E16  0E90               	movlw	low _sampBufDiffPr_D23
 15554  006E18  0100               	movlb	0	; () banked
 15555  006E1A  6F6E               	movwf	___x_sample_fliter@buf& (0+255),b
 15556  006E1C  0E01               	movlw	high _sampBufDiffPr_D23
 15557  006E1E  0100               	movlb	0	; () banked
 15558  006E20  6F6F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15559  006E22  0E06               	movlw	6
 15560  006E24  0100               	movlb	0	; () banked
 15561  006E26  6F70               	movwf	___x_sample_fliter@len& (0+255),b
 15562  006E28  0E04               	movlw	4
 15563  006E2A  0100               	movlb	0	; () banked
 15564  006E2C  6F71               	movwf	___x_sample_fliter@loop& (0+255),b
 15565  006E2E  ECB8  F019         	call	___x_sample_fliter	;wreg free
 15566  006E32  0100               	movlb	0	; () banked
 15567  006E34  EE20 F004          	lfsr	2,4
 15568  006E38  5183               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15569  006E3A  26D9               	addwf	fsr2l,f,c
 15570  006E3C  5184               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15571  006E3E  22DA               	addwfc	fsr2h,f,c
 15572  006E40  0100               	movlb	0	; () banked
 15573  006E42  C06E  FFDE         	movff	?___x_sample_fliter,postinc2
 15574  006E46  0100               	movlb	0	; () banked
 15575  006E48  C06F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;sample.c: 78: xin->pValue=0;
 15579  006E4C  C083  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 15580  006E50  C084  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 15581  006E54  6ADE               	clrf	postinc2,c
 15582  006E56  6ADE               	clrf	postinc2,c
 15583  006E58  6ADE               	clrf	postinc2,c
 15584  006E5A  6ADD               	clrf	postdec2,c
 15585  006E5C  0012               	return	
 15586  006E5E                     __end_of_sample_diff_pr_fliter:
 15587                           	opt stack 0
 15588                           tblptru	equ	0xFF8
 15589                           tblptrh	equ	0xFF7
 15590                           tblptrl	equ	0xFF6
 15591                           tablat	equ	0xFF5
 15592                           prodh	equ	0xFF4
 15593                           prodl	equ	0xFF3
 15594                           intcon	equ	0xFF2
 15595                           indf0	equ	0xFEF
 15596                           postinc0	equ	0xFEE
 15597                           fsr0h	equ	0xFEA
 15598                           fsr0l	equ	0xFE9
 15599                           wreg	equ	0xFE8
 15600                           postdec1	equ	0xFE5
 15601                           plusw1	equ	0xFE3
 15602                           fsr1h	equ	0xFE2
 15603                           fsr1l	equ	0xFE1
 15604                           indf2	equ	0xFDF
 15605                           postinc2	equ	0xFDE
 15606                           postdec2	equ	0xFDD
 15607                           plusw2	equ	0xFDB
 15608                           fsr2h	equ	0xFDA
 15609                           fsr2l	equ	0xFD9
 15610                           status	equ	0xFD8
 15611                           
 15612 ;; *************** function ___x_sample_fliter *****************
 15613 ;; Defined at:
 15614 ;;		line 38 in file "src/api/sample.c"
 15615 ;; Parameters:    Size  Location     Type
 15616 ;;  buf             2   14[BANK0 ] PTR int 
 15617 ;;		 -> sampBufDiffPr_D23(16), sampBufDiffPr_D01(16), 
 15618 ;;  len             1   16[BANK0 ] unsigned char 
 15619 ;;  loop            1   17[BANK0 ] unsigned char 
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;  t32             4   30[BANK0 ] long 
 15622 ;;  min             2   28[BANK0 ] int 
 15623 ;;  max             2   26[BANK0 ] int 
 15624 ;;  i               1   34[BANK0 ] unsigned char 
 15625 ;;  minLoc          1   25[BANK0 ] unsigned char 
 15626 ;;  maxLoc          1   24[BANK0 ] unsigned char 
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  2   14[BANK0 ] int 
 15629 ;; Registers used:
 15630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15637 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15638 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15639 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15640 ;;Total ram usage:       21 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:    5
 15643 ;; This function calls:
 15644 ;;		___aldiv
 15645 ;; This function is called by:
 15646 ;;		_sample_diff_pr_fliter
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           	psect	text83
 15651  003370                     __ptext83:
 15652                           	opt stack 0
 15653  003370                     ___x_sample_fliter:
 15654                           	opt stack 21
 15655                           
 15656                           ;sample.c: 40: int16_t max,min;
 15657                           ;sample.c: 41: uint8_t i,maxLoc,minLoc;
 15658                           ;sample.c: 42: int32_t t32=0;
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;incstack = 0
 15662  003370  0E00               	movlw	0
 15663  003372  0100               	movlb	0	; () banked
 15664  003374  6F7E               	movwf	___x_sample_fliter@t32& (0+255),b
 15665  003376  0E00               	movlw	0
 15666  003378  6F7F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15667  00337A  0E00               	movlw	0
 15668  00337C  6F80               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15669  00337E  0E00               	movlw	0
 15670  003380  6F81               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;sample.c: 43: if(len<3)return 0;
 15674  003382  0E03               	movlw	3
 15675  003384  0100               	movlb	0	; () banked
 15676  003386  6170               	cpfslt	___x_sample_fliter@len& (0+255),b
 15677  003388  D118               	goto	l12289
 15678                           
 15679                           ; BSR set to: 0
 15680  00338A  0E00               	movlw	0
 15681  00338C  0100               	movlb	0	; () banked
 15682  00338E  6F6F               	movwf	(?___x_sample_fliter+1)& (0+255),b
 15683  003390  0E00               	movlw	0
 15684  003392  6F6E               	movwf	?___x_sample_fliter& (0+255),b
 15685                           
 15686                           ; BSR set to: 0
 15687  003394  0012               	return	
 15688  003396                     l12259:
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;sample.c: 45: min=max=buf[0];
 15692  003396  C06E  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 15693  00339A  C06F  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 15694  00339E  CFDE F07A          	movff	postinc2,___x_sample_fliter@max
 15695  0033A2  CFDD F07B          	movff	postdec2,___x_sample_fliter@max+1
 15696  0033A6  C07A  F07C         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 15697  0033AA  C07B  F07D         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;sample.c: 46: t32=0;
 15701  0033AE  0E00               	movlw	0
 15702  0033B0  0100               	movlb	0	; () banked
 15703  0033B2  6F7E               	movwf	___x_sample_fliter@t32& (0+255),b
 15704  0033B4  0E00               	movlw	0
 15705  0033B6  6F7F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15706  0033B8  0E00               	movlw	0
 15707  0033BA  6F80               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15708  0033BC  0E00               	movlw	0
 15709  0033BE  6F81               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;sample.c: 47: for(i=0;i<len;i++){
 15713  0033C0  0E00               	movlw	0
 15714  0033C2  0100               	movlb	0	; () banked
 15715  0033C4  6F82               	movwf	___x_sample_fliter@i& (0+255),b
 15716  0033C6  D07F               	goto	l12277
 15717  0033C8                     l12265:
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;sample.c: 48: if(min>buf[i]){min=buf[i];minLoc=i;}
 15721  0033C8  0100               	movlb	0	; () banked
 15722  0033CA  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 15723  0033CC  0D02               	mullw	2
 15724  0033CE  50F3               	movf	prodl,w,c
 15725  0033D0  0100               	movlb	0	; () banked
 15726  0033D2  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15727  0033D4  6ED9               	movwf	fsr2l,c
 15728  0033D6  50F4               	movf	prodh,w,c
 15729  0033D8  0100               	movlb	0	; () banked
 15730  0033DA  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15731  0033DC  6EDA               	movwf	fsr2h,c
 15732  0033DE  0100               	movlb	0	; () banked
 15733  0033E0  517C               	movf	___x_sample_fliter@min& (0+255),w,b
 15734  0033E2  5CDE               	subwf	postinc2,w,c
 15735  0033E4  50DE               	movf	postinc2,w,c
 15736  0033E6  0A80               	xorlw	128
 15737  0033E8  0100               	movlb	0	; () banked
 15738  0033EA  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15739  0033EC  0100               	movlb	0	; () banked
 15740  0033EE  517D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 15741  0033F0  0A80               	xorlw	128
 15742  0033F2  0100               	movlb	0	; () banked
 15743  0033F4  5974               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 15744  0033F6  B0D8               	btfsc	status,0,c
 15745  0033F8  D011               	goto	l1794
 15746                           
 15747                           ; BSR set to: 0
 15748  0033FA  0100               	movlb	0	; () banked
 15749  0033FC  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 15750  0033FE  0D02               	mullw	2
 15751  003400  50F3               	movf	prodl,w,c
 15752  003402  0100               	movlb	0	; () banked
 15753  003404  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15754  003406  6ED9               	movwf	fsr2l,c
 15755  003408  50F4               	movf	prodh,w,c
 15756  00340A  0100               	movlb	0	; () banked
 15757  00340C  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15758  00340E  6EDA               	movwf	fsr2h,c
 15759  003410  CFDE F07C          	movff	postinc2,___x_sample_fliter@min
 15760  003414  CFDD F07D          	movff	postdec2,___x_sample_fliter@min+1
 15761                           
 15762                           ; BSR set to: 0
 15763  003418  C082  F079         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 15764  00341C                     l1794:
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;sample.c: 49: if(max<buf[i]){max=buf[i];maxLoc=i;}
 15768  00341C  0100               	movlb	0	; () banked
 15769  00341E  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 15770  003420  0D02               	mullw	2
 15771  003422  50F3               	movf	prodl,w,c
 15772  003424  0100               	movlb	0	; () banked
 15773  003426  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15774  003428  6ED9               	movwf	fsr2l,c
 15775  00342A  50F4               	movf	prodh,w,c
 15776  00342C  0100               	movlb	0	; () banked
 15777  00342E  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15778  003430  6EDA               	movwf	fsr2h,c
 15779  003432  50DE               	movf	postinc2,w,c
 15780  003434  0100               	movlb	0	; () banked
 15781  003436  5D7A               	subwf	___x_sample_fliter@max& (0+255),w,b
 15782  003438  0100               	movlb	0	; () banked
 15783  00343A  517B               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 15784  00343C  0A80               	xorlw	128
 15785  00343E  0100               	movlb	0	; () banked
 15786  003440  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15787  003442  50DE               	movf	postinc2,w,c
 15788  003444  0A80               	xorlw	128
 15789  003446  0100               	movlb	0	; () banked
 15790  003448  5974               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 15791  00344A  B0D8               	btfsc	status,0,c
 15792  00344C  D011               	goto	l1795
 15793                           
 15794                           ; BSR set to: 0
 15795  00344E  0100               	movlb	0	; () banked
 15796  003450  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 15797  003452  0D02               	mullw	2
 15798  003454  50F3               	movf	prodl,w,c
 15799  003456  0100               	movlb	0	; () banked
 15800  003458  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15801  00345A  6ED9               	movwf	fsr2l,c
 15802  00345C  50F4               	movf	prodh,w,c
 15803  00345E  0100               	movlb	0	; () banked
 15804  003460  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15805  003462  6EDA               	movwf	fsr2h,c
 15806  003464  CFDE F07A          	movff	postinc2,___x_sample_fliter@max
 15807  003468  CFDD F07B          	movff	postdec2,___x_sample_fliter@max+1
 15808                           
 15809                           ; BSR set to: 0
 15810  00346C  C082  F078         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 15811  003470                     l1795:
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;sample.c: 50: t32+=buf[i];
 15815  003470  0100               	movlb	0	; () banked
 15816  003472  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 15817  003474  0D02               	mullw	2
 15818  003476  50F3               	movf	prodl,w,c
 15819  003478  0100               	movlb	0	; () banked
 15820  00347A  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15821  00347C  6ED9               	movwf	fsr2l,c
 15822  00347E  50F4               	movf	prodh,w,c
 15823  003480  0100               	movlb	0	; () banked
 15824  003482  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15825  003484  6EDA               	movwf	fsr2h,c
 15826  003486  CFDE F072          	movff	postinc2,??___x_sample_fliter
 15827  00348A  CFDD F073          	movff	postdec2,??___x_sample_fliter+1
 15828  00348E  C072  F074         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 15829  003492  C073  F075         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 15830  003496  0E00               	movlw	0
 15831  003498  0100               	movlb	0	; () banked
 15832  00349A  BF75               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 15833  00349C  0EFF               	movlw	255
 15834  00349E  6F76               	movwf	(??___x_sample_fliter+4)& (0+255),b
 15835  0034A0  6F77               	movwf	(??___x_sample_fliter+5)& (0+255),b
 15836  0034A2  0100               	movlb	0	; () banked
 15837  0034A4  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 15838  0034A6  0100               	movlb	0	; () banked
 15839  0034A8  277E               	addwf	___x_sample_fliter@t32& (0+255),f,b
 15840  0034AA  0100               	movlb	0	; () banked
 15841  0034AC  5175               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 15842  0034AE  0100               	movlb	0	; () banked
 15843  0034B0  237F               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 15844  0034B2  0100               	movlb	0	; () banked
 15845  0034B4  5176               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 15846  0034B6  0100               	movlb	0	; () banked
 15847  0034B8  2380               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 15848  0034BA  0100               	movlb	0	; () banked
 15849  0034BC  5177               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 15850  0034BE  0100               	movlb	0	; () banked
 15851  0034C0  2381               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 15852                           
 15853                           ; BSR set to: 0
 15854  0034C2  0100               	movlb	0	; () banked
 15855  0034C4  2B82               	incf	___x_sample_fliter@i& (0+255),f,b
 15856  0034C6                     l12277:
 15857                           
 15858                           ; BSR set to: 0
 15859  0034C6  0100               	movlb	0	; () banked
 15860  0034C8  5170               	movf	___x_sample_fliter@len& (0+255),w,b
 15861  0034CA  0100               	movlb	0	; () banked
 15862  0034CC  5D82               	subwf	___x_sample_fliter@i& (0+255),w,b
 15863  0034CE  A0D8               	btfss	status,0,c
 15864  0034D0  D77B               	goto	l12265
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;sample.c: 51: }
 15868                           ;sample.c: 52: t32-=(max+min);
 15869                           
 15870                           ; BSR set to: 0
 15871  0034D2  0100               	movlb	0	; () banked
 15872  0034D4  517C               	movf	___x_sample_fliter@min& (0+255),w,b
 15873  0034D6  0100               	movlb	0	; () banked
 15874  0034D8  257A               	addwf	___x_sample_fliter@max& (0+255),w,b
 15875  0034DA  0100               	movlb	0	; () banked
 15876  0034DC  6F72               	movwf	??___x_sample_fliter& (0+255),b
 15877  0034DE  0100               	movlb	0	; () banked
 15878  0034E0  517D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 15879  0034E2  0100               	movlb	0	; () banked
 15880  0034E4  217B               	addwfc	(___x_sample_fliter@max+1)& (0+255),w,b
 15881  0034E6  0100               	movlb	0	; () banked
 15882  0034E8  6F73               	movwf	(??___x_sample_fliter+1)& (0+255),b
 15883  0034EA  0100               	movlb	0	; () banked
 15884  0034EC  6B74               	clrf	(??___x_sample_fliter+2)& (0+255),b
 15885  0034EE  0100               	movlb	0	; () banked
 15886  0034F0  BF73               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 15887  0034F2  0774               	decf	(??___x_sample_fliter+2)& (0+255),f,b
 15888  0034F4  0100               	movlb	0	; () banked
 15889  0034F6  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 15890  0034F8  0100               	movlb	0	; () banked
 15891  0034FA  6F75               	movwf	(??___x_sample_fliter+3)& (0+255),b
 15892  0034FC  0100               	movlb	0	; () banked
 15893  0034FE  5172               	movf	??___x_sample_fliter& (0+255),w,b
 15894  003500  0100               	movlb	0	; () banked
 15895  003502  5F7E               	subwf	___x_sample_fliter@t32& (0+255),f,b
 15896  003504  0100               	movlb	0	; () banked
 15897  003506  5173               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 15898  003508  0100               	movlb	0	; () banked
 15899  00350A  5B7F               	subwfb	(___x_sample_fliter@t32+1)& (0+255),f,b
 15900  00350C  0100               	movlb	0	; () banked
 15901  00350E  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 15902  003510  0100               	movlb	0	; () banked
 15903  003512  5B80               	subwfb	(___x_sample_fliter@t32+2)& (0+255),f,b
 15904  003514  0100               	movlb	0	; () banked
 15905  003516  5175               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 15906  003518  0100               	movlb	0	; () banked
 15907  00351A  5B81               	subwfb	(___x_sample_fliter@t32+3)& (0+255),f,b
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;sample.c: 53: t32=t32/(len-2);
 15911  00351C  C07E  F060         	movff	___x_sample_fliter@t32,___aldiv@dividend
 15912  003520  C07F  F061         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 15913  003524  C080  F062         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 15914  003528  C081  F063         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 15915  00352C  0EFE               	movlw	254
 15916  00352E  0100               	movlb	0	; () banked
 15917  003530  6F72               	movwf	??___x_sample_fliter& (0+255),b
 15918  003532  0EFF               	movlw	255
 15919  003534  0100               	movlb	0	; () banked
 15920  003536  6F73               	movwf	(??___x_sample_fliter+1)& (0+255),b
 15921  003538  0100               	movlb	0	; () banked
 15922  00353A  5170               	movf	___x_sample_fliter@len& (0+255),w,b
 15923  00353C  0100               	movlb	0	; () banked
 15924  00353E  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15925  003540  6B75               	clrf	(??___x_sample_fliter+3)& (0+255),b
 15926  003542  0100               	movlb	0	; () banked
 15927  003544  5172               	movf	??___x_sample_fliter& (0+255),w,b
 15928  003546  0100               	movlb	0	; () banked
 15929  003548  2774               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 15930  00354A  0100               	movlb	0	; () banked
 15931  00354C  5173               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 15932  00354E  0100               	movlb	0	; () banked
 15933  003550  2375               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 15934  003552  C074  F064         	movff	??___x_sample_fliter+2,___aldiv@divisor
 15935  003556  C075  F065         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 15936  00355A  0100               	movlb	0	; () banked
 15937  00355C  0E00               	movlw	0
 15938  00355E  BF65               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 15939  003560  0EFF               	movlw	-1
 15940  003562  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 15941  003564  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 15942  003566  ECEB  F029         	call	___aldiv	;wreg free
 15943  00356A  C060  F07E         	movff	?___aldiv,___x_sample_fliter@t32
 15944  00356E  C061  F07F         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 15945  003572  C062  F080         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 15946  003576  C063  F081         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 15947                           
 15948                           ;sample.c: 54: buf[minLoc]=(int16_t)t32;
 15949  00357A  0100               	movlb	0	; () banked
 15950  00357C  5179               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 15951  00357E  0D02               	mullw	2
 15952  003580  50F3               	movf	prodl,w,c
 15953  003582  0100               	movlb	0	; () banked
 15954  003584  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15955  003586  6ED9               	movwf	fsr2l,c
 15956  003588  50F4               	movf	prodh,w,c
 15957  00358A  0100               	movlb	0	; () banked
 15958  00358C  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15959  00358E  6EDA               	movwf	fsr2h,c
 15960  003590  C07E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 15961  003594  C07F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;sample.c: 55: buf[maxLoc]=(int16_t)t32;
 15965  003598  0100               	movlb	0	; () banked
 15966  00359A  5178               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 15967  00359C  0D02               	mullw	2
 15968  00359E  50F3               	movf	prodl,w,c
 15969  0035A0  0100               	movlb	0	; () banked
 15970  0035A2  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15971  0035A4  6ED9               	movwf	fsr2l,c
 15972  0035A6  50F4               	movf	prodh,w,c
 15973  0035A8  0100               	movlb	0	; () banked
 15974  0035AA  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15975  0035AC  6EDA               	movwf	fsr2h,c
 15976  0035AE  C07E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 15977  0035B2  C07F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;sample.c: 56: loop--;
 15981  0035B6  0100               	movlb	0	; () banked
 15982  0035B8  0771               	decf	___x_sample_fliter@loop& (0+255),f,b
 15983  0035BA                     l12289:
 15984                           
 15985                           ; BSR set to: 0
 15986  0035BA  0100               	movlb	0	; () banked
 15987  0035BC  5171               	movf	___x_sample_fliter@loop& (0+255),w,b
 15988  0035BE  0100               	movlb	0	; () banked
 15989  0035C0  A4D8               	btfss	status,2,c
 15990  0035C2  D6E9               	goto	l12259
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;sample.c: 57: }
 15994                           ;sample.c: 58: return (int16_t)t32;
 15995  0035C4  C07E  F06E         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 15996  0035C8  C07F  F06F         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 15997                           
 15998                           ; BSR set to: 0
 15999  0035CC  0012               	return		;funcret
 16000  0035CE                     __end_of___x_sample_fliter:
 16001                           	opt stack 0
 16002                           tblptru	equ	0xFF8
 16003                           tblptrh	equ	0xFF7
 16004                           tblptrl	equ	0xFF6
 16005                           tablat	equ	0xFF5
 16006                           prodh	equ	0xFF4
 16007                           prodl	equ	0xFF3
 16008                           intcon	equ	0xFF2
 16009                           indf0	equ	0xFEF
 16010                           postinc0	equ	0xFEE
 16011                           fsr0h	equ	0xFEA
 16012                           fsr0l	equ	0xFE9
 16013                           wreg	equ	0xFE8
 16014                           postdec1	equ	0xFE5
 16015                           plusw1	equ	0xFE3
 16016                           fsr1h	equ	0xFE2
 16017                           fsr1l	equ	0xFE1
 16018                           indf2	equ	0xFDF
 16019                           postinc2	equ	0xFDE
 16020                           postdec2	equ	0xFDD
 16021                           plusw2	equ	0xFDB
 16022                           fsr2h	equ	0xFDA
 16023                           fsr2l	equ	0xFD9
 16024                           status	equ	0xFD8
 16025                           
 16026 ;; *************** function _delay_ms *****************
 16027 ;; Defined at:
 16028 ;;		line 97 in file "src/soc/clock.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  dly             2    4[BANK0 ] unsigned int 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;		None
 16033 ;; Return value:  Size  Location     Type
 16034 ;;                  1    wreg      void 
 16035 ;; Registers used:
 16036 ;;		wreg, status,2, status,0, cstack
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;Total ram usage:        2 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; Hardware stack levels required when called:    5
 16049 ;; This function calls:
 16050 ;;		_delay_us
 16051 ;; This function is called by:
 16052 ;;		_key_polling
 16053 ;;		_sample_diff_pr_chip_slow
 16054 ;;		_sample_pr_chip_comm
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           	psect	text84
 16059  0080F6                     __ptext84:
 16060                           	opt stack 0
 16061  0080F6                     _delay_ms:
 16062                           	opt stack 21
 16063                           
 16064                           ;clock.c: 99: while(dly>0){
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;incstack = 0
 16068  0080F6  D00B               	goto	l12247
 16069  0080F8                     l12243:
 16070                           
 16071                           ;clock.c: 100: delay_us(1000);
 16072  0080F8  0E03               	movlw	3
 16073  0080FA  0100               	movlb	0	; () banked
 16074  0080FC  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 16075  0080FE  0EE8               	movlw	232
 16076  008100  6F60               	movwf	delay_us@dly& (0+255),b
 16077  008102  EC70  F03E         	call	_delay_us	;wreg free
 16078                           
 16079                           ;clock.c: 101: dly--;
 16080  008106  0100               	movlb	0	; () banked
 16081  008108  0764               	decf	delay_ms@dly& (0+255),f,b
 16082  00810A  A0D8               	btfss	status,0,c
 16083  00810C  0765               	decf	(delay_ms@dly+1)& (0+255),f,b
 16084  00810E                     l12247:
 16085  00810E  0100               	movlb	0	; () banked
 16086  008110  5164               	movf	delay_ms@dly& (0+255),w,b
 16087  008112  0100               	movlb	0	; () banked
 16088  008114  1165               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 16089  008116  B4D8               	btfsc	status,2,c
 16090  008118  0012               	return	
 16091  00811A  D7EE               	goto	l12243
 16092  00811C                     __end_of_delay_ms:
 16093                           	opt stack 0
 16094                           tblptru	equ	0xFF8
 16095                           tblptrh	equ	0xFF7
 16096                           tblptrl	equ	0xFF6
 16097                           tablat	equ	0xFF5
 16098                           prodh	equ	0xFF4
 16099                           prodl	equ	0xFF3
 16100                           intcon	equ	0xFF2
 16101                           indf0	equ	0xFEF
 16102                           postinc0	equ	0xFEE
 16103                           fsr0h	equ	0xFEA
 16104                           fsr0l	equ	0xFE9
 16105                           wreg	equ	0xFE8
 16106                           postdec1	equ	0xFE5
 16107                           plusw1	equ	0xFE3
 16108                           fsr1h	equ	0xFE2
 16109                           fsr1l	equ	0xFE1
 16110                           indf2	equ	0xFDF
 16111                           postinc2	equ	0xFDE
 16112                           postdec2	equ	0xFDD
 16113                           plusw2	equ	0xFDB
 16114                           fsr2h	equ	0xFDA
 16115                           fsr2l	equ	0xFD9
 16116                           status	equ	0xFD8
 16117                           
 16118 ;; *************** function _delay_us *****************
 16119 ;; Defined at:
 16120 ;;		line 82 in file "src/soc/clock.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;  dly             2    0[BANK0 ] unsigned int 
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;  i               2    2[BANK0 ] unsigned int 
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  1    wreg      void 
 16127 ;; Registers used:
 16128 ;;		wreg, status,2, status,0
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16138 ;;Total ram usage:        4 bytes
 16139 ;; Hardware stack levels used:    1
 16140 ;; Hardware stack levels required when called:    4
 16141 ;; This function calls:
 16142 ;;		Nothing
 16143 ;; This function is called by:
 16144 ;;		_in_adc_start_and_read
 16145 ;;		_delay_ms
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text85
 16150  007CE0                     __ptext85:
 16151                           	opt stack 0
 16152  007CE0                     _delay_us:
 16153                           	opt stack 21
 16154                           
 16155                           ;clock.c: 84: uint16_t i;
 16156                           ;clock.c: 85: for(i=0;i<dly;i++){
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;incstack = 0
 16160  007CE0  0E00               	movlw	0
 16161  007CE2  0100               	movlb	0	; () banked
 16162  007CE4  6F63               	movwf	(delay_us@i+1)& (0+255),b
 16163  007CE6  0E00               	movlw	0
 16164  007CE8  6F62               	movwf	delay_us@i& (0+255),b
 16165  007CEA  D00B               	goto	l11219
 16166  007CEC                     l1548:
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;clock.c: 86: __nop();
 16170  007CEC  F000               	nop	
 16171                           
 16172                           ;clock.c: 87: __nop();
 16173  007CEE  F000               	nop	
 16174                           
 16175                           ;clock.c: 88: __nop();
 16176  007CF0  F000               	nop	
 16177                           
 16178                           ;clock.c: 89: __nop();
 16179  007CF2  F000               	nop	
 16180                           
 16181                           ;clock.c: 91: __nop();
 16182  007CF4  F000               	nop	
 16183                           
 16184                           ;clock.c: 92: __nop();
 16185  007CF6  F000               	nop	
 16186                           
 16187                           ;clock.c: 93: __nop();
 16188  007CF8  F000               	nop	
 16189                           
 16190                           ;clock.c: 94: __nop();
 16191  007CFA  F000               	nop	
 16192  007CFC  0100               	movlb	0	; () banked
 16193  007CFE  4B62               	infsnz	delay_us@i& (0+255),f,b
 16194  007D00  2B63               	incf	(delay_us@i+1)& (0+255),f,b
 16195  007D02                     l11219:
 16196                           
 16197                           ; BSR set to: 0
 16198  007D02  0100               	movlb	0	; () banked
 16199  007D04  5160               	movf	delay_us@dly& (0+255),w,b
 16200  007D06  0100               	movlb	0	; () banked
 16201  007D08  5D62               	subwf	delay_us@i& (0+255),w,b
 16202  007D0A  0100               	movlb	0	; () banked
 16203  007D0C  5161               	movf	(delay_us@dly+1)& (0+255),w,b
 16204  007D0E  0100               	movlb	0	; () banked
 16205  007D10  5963               	subwfb	(delay_us@i+1)& (0+255),w,b
 16206  007D12  B0D8               	btfsc	status,0,c
 16207  007D14  0012               	return	
 16208  007D16  D7EA               	goto	l1548
 16209  007D18                     __end_of_delay_us:
 16210                           	opt stack 0
 16211                           tblptru	equ	0xFF8
 16212                           tblptrh	equ	0xFF7
 16213                           tblptrl	equ	0xFF6
 16214                           tablat	equ	0xFF5
 16215                           prodh	equ	0xFF4
 16216                           prodl	equ	0xFF3
 16217                           intcon	equ	0xFF2
 16218                           indf0	equ	0xFEF
 16219                           postinc0	equ	0xFEE
 16220                           fsr0h	equ	0xFEA
 16221                           fsr0l	equ	0xFE9
 16222                           wreg	equ	0xFE8
 16223                           postdec1	equ	0xFE5
 16224                           plusw1	equ	0xFE3
 16225                           fsr1h	equ	0xFE2
 16226                           fsr1l	equ	0xFE1
 16227                           indf2	equ	0xFDF
 16228                           postinc2	equ	0xFDE
 16229                           postdec2	equ	0xFDD
 16230                           plusw2	equ	0xFDB
 16231                           fsr2h	equ	0xFDA
 16232                           fsr2l	equ	0xFD9
 16233                           status	equ	0xFD8
 16234                           
 16235 ;; *************** function _ads1115_start_conversion *****************
 16236 ;; Defined at:
 16237 ;;		line 122 in file "src/driver/ads1115.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  pAds1115        2    7[BANK0 ] PTR struct .
 16240 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;		None
 16243 ;; Return value:  Size  Location     Type
 16244 ;;                  1    wreg      void 
 16245 ;; Registers used:
 16246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16247 ;; Tracked objects:
 16248 ;;		On entry : 0/0
 16249 ;;		On exit  : 0/0
 16250 ;;		Unchanged: 0/0
 16251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16256 ;;Total ram usage:        2 bytes
 16257 ;; Hardware stack levels used:    1
 16258 ;; Hardware stack levels required when called:    8
 16259 ;; This function calls:
 16260 ;;		_ads1115_write_reg
 16261 ;; This function is called by:
 16262 ;;		_sample_diff_pr_chip_fast
 16263 ;;		_sample_diff_pr_chip_slow
 16264 ;;		_sample_pr_chip_comm
 16265 ;; This function uses a non-reentrant model
 16266 ;;
 16267                           
 16268                           	psect	text86
 16269  0080CC                     __ptext86:
 16270                           	opt stack 0
 16271  0080CC                     _ads1115_start_conversion:
 16272                           	opt stack 19
 16273                           
 16274                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;incstack = 0
 16278  0080CC  C067  F062         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 16279  0080D0  C068  F063         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 16280  0080D4  0E01               	movlw	1
 16281  0080D6  0100               	movlb	0	; () banked
 16282  0080D8  6F64               	movwf	ads1115_write_reg@addr& (0+255),b
 16283  0080DA  0100               	movlb	0	; () banked
 16284  0080DC  EE20 F002          	lfsr	2,2
 16285  0080E0  5167               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 16286  0080E2  26D9               	addwf	fsr2l,f,c
 16287  0080E4  5168               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 16288  0080E6  22DA               	addwfc	fsr2h,f,c
 16289  0080E8  CFDE F065          	movff	postinc2,ads1115_write_reg@value
 16290  0080EC  CFDD F066          	movff	postdec2,ads1115_write_reg@value+1
 16291  0080F0  EC8E  F02C         	call	_ads1115_write_reg	;wreg free
 16292  0080F4  0012               	return		;funcret
 16293  0080F6                     __end_of_ads1115_start_conversion:
 16294                           	opt stack 0
 16295                           tblptru	equ	0xFF8
 16296                           tblptrh	equ	0xFF7
 16297                           tblptrl	equ	0xFF6
 16298                           tablat	equ	0xFF5
 16299                           prodh	equ	0xFF4
 16300                           prodl	equ	0xFF3
 16301                           intcon	equ	0xFF2
 16302                           indf0	equ	0xFEF
 16303                           postinc0	equ	0xFEE
 16304                           fsr0h	equ	0xFEA
 16305                           fsr0l	equ	0xFE9
 16306                           wreg	equ	0xFE8
 16307                           postdec1	equ	0xFE5
 16308                           plusw1	equ	0xFE3
 16309                           fsr1h	equ	0xFE2
 16310                           fsr1l	equ	0xFE1
 16311                           indf2	equ	0xFDF
 16312                           postinc2	equ	0xFDE
 16313                           postdec2	equ	0xFDD
 16314                           plusw2	equ	0xFDB
 16315                           fsr2h	equ	0xFDA
 16316                           fsr2l	equ	0xFD9
 16317                           status	equ	0xFD8
 16318                           
 16319 ;; *************** function _ads1115_write_reg *****************
 16320 ;; Defined at:
 16321 ;;		line 17 in file "src/driver/ads1115.c"
 16322 ;; Parameters:    Size  Location     Type
 16323 ;;  pAds1115        2    2[BANK0 ] PTR struct .
 16324 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16325 ;;  addr            1    4[BANK0 ] unsigned char 
 16326 ;;  value           2    5[BANK0 ] unsigned int 
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  1    wreg      void 
 16331 ;; Registers used:
 16332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16338 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16342 ;;Total ram usage:        5 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:    7
 16345 ;; This function calls:
 16346 ;;		_iic_send_byte
 16347 ;;		_iic_start
 16348 ;;		_iic_stop
 16349 ;; This function is called by:
 16350 ;;		_ads1115_start_conversion
 16351 ;;		_ads1115_set_threshold_lo
 16352 ;;		_ads1115_set_threshold_hi
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           	psect	text87
 16357  00591C                     __ptext87:
 16358                           	opt stack 0
 16359  00591C                     _ads1115_write_reg:
 16360                           	opt stack 19
 16361                           
 16362                           ;ads1115.c: 19: pAds1115->iic_start();
 16363                           
 16364                           ;incstack = 0
 16365  00591C  0100               	movlb	0	; () banked
 16366  00591E  EE20 F006          	lfsr	2,6
 16367  005922  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16368  005924  26D9               	addwf	fsr2l,f,c
 16369  005926  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16370  005928  22DA               	addwfc	fsr2h,f,c
 16371  00592A  D801               	call	u10978
 16372  00592C  D00A               	goto	u10979
 16373  00592E                     u10978:
 16374  00592E  0005               	push	
 16375  005930  6EFA               	movwf	pclath,c
 16376  005932  50DE               	movf	postinc2,w,c
 16377  005934  6EFD               	movwf	tosl,c
 16378  005936  50DE               	movf	postinc2,w,c
 16379  005938  6EFE               	movwf	tosh,c
 16380  00593A  50F8               	movf	tblptru,w,c
 16381  00593C  6EFF               	movwf	tosu,c
 16382  00593E  50FA               	movf	pclath,w,c
 16383  005940  0012               	return		;indir
 16384  005942                     u10979:
 16385                           
 16386                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 16387  005942  0100               	movlb	0	; () banked
 16388  005944  EE20 F00A          	lfsr	2,10
 16389  005948  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16390  00594A  26D9               	addwf	fsr2l,f,c
 16391  00594C  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16392  00594E  22DA               	addwfc	fsr2h,f,c
 16393  005950  D801               	call	u10988
 16394  005952  D012               	goto	u10989
 16395  005954                     u10988:
 16396  005954  0005               	push	
 16397  005956  6EFA               	movwf	pclath,c
 16398  005958  50DE               	movf	postinc2,w,c
 16399  00595A  6EFD               	movwf	tosl,c
 16400  00595C  50DE               	movf	postinc2,w,c
 16401  00595E  6EFE               	movwf	tosh,c
 16402  005960  50F8               	movf	tblptru,w,c
 16403  005962  6EFF               	movwf	tosu,c
 16404  005964  50FA               	movf	pclath,w,c
 16405  005966  0100               	movlb	0	; () banked
 16406  005968  EE20 F001          	lfsr	2,1
 16407  00596C  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16408  00596E  26D9               	addwf	fsr2l,f,c
 16409  005970  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16410  005972  22DA               	addwfc	fsr2h,f,c
 16411  005974  50DF               	movf	indf2,w,c
 16412  005976  0012               	return		;indir
 16413  005978                     u10989:
 16414                           
 16415                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 16416  005978  0100               	movlb	0	; () banked
 16417  00597A  EE20 F00A          	lfsr	2,10
 16418  00597E  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16419  005980  26D9               	addwf	fsr2l,f,c
 16420  005982  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16421  005984  22DA               	addwfc	fsr2h,f,c
 16422  005986  D801               	call	u10998
 16423  005988  D00C               	goto	u10999
 16424  00598A                     u10998:
 16425  00598A  0005               	push	
 16426  00598C  6EFA               	movwf	pclath,c
 16427  00598E  50DE               	movf	postinc2,w,c
 16428  005990  6EFD               	movwf	tosl,c
 16429  005992  50DE               	movf	postinc2,w,c
 16430  005994  6EFE               	movwf	tosh,c
 16431  005996  50F8               	movf	tblptru,w,c
 16432  005998  6EFF               	movwf	tosu,c
 16433  00599A  50FA               	movf	pclath,w,c
 16434  00599C  0100               	movlb	0	; () banked
 16435  00599E  5164               	movf	ads1115_write_reg@addr& (0+255),w,b
 16436  0059A0  0012               	return		;indir
 16437  0059A2                     u10999:
 16438                           
 16439                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 16440  0059A2  0100               	movlb	0	; () banked
 16441  0059A4  EE20 F00A          	lfsr	2,10
 16442  0059A8  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16443  0059AA  26D9               	addwf	fsr2l,f,c
 16444  0059AC  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16445  0059AE  22DA               	addwfc	fsr2h,f,c
 16446  0059B0  D801               	call	u11008
 16447  0059B2  D00C               	goto	u11009
 16448  0059B4                     u11008:
 16449  0059B4  0005               	push	
 16450  0059B6  6EFA               	movwf	pclath,c
 16451  0059B8  50DE               	movf	postinc2,w,c
 16452  0059BA  6EFD               	movwf	tosl,c
 16453  0059BC  50DE               	movf	postinc2,w,c
 16454  0059BE  6EFE               	movwf	tosh,c
 16455  0059C0  50F8               	movf	tblptru,w,c
 16456  0059C2  6EFF               	movwf	tosu,c
 16457  0059C4  50FA               	movf	pclath,w,c
 16458  0059C6  0100               	movlb	0	; () banked
 16459  0059C8  5166               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 16460  0059CA  0012               	return		;indir
 16461  0059CC                     u11009:
 16462                           
 16463                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 16464  0059CC  0100               	movlb	0	; () banked
 16465  0059CE  EE20 F00A          	lfsr	2,10
 16466  0059D2  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16467  0059D4  26D9               	addwf	fsr2l,f,c
 16468  0059D6  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16469  0059D8  22DA               	addwfc	fsr2h,f,c
 16470  0059DA  D801               	call	u11018
 16471  0059DC  D00C               	goto	u11019
 16472  0059DE                     u11018:
 16473  0059DE  0005               	push	
 16474  0059E0  6EFA               	movwf	pclath,c
 16475  0059E2  50DE               	movf	postinc2,w,c
 16476  0059E4  6EFD               	movwf	tosl,c
 16477  0059E6  50DE               	movf	postinc2,w,c
 16478  0059E8  6EFE               	movwf	tosh,c
 16479  0059EA  50F8               	movf	tblptru,w,c
 16480  0059EC  6EFF               	movwf	tosu,c
 16481  0059EE  50FA               	movf	pclath,w,c
 16482  0059F0  0100               	movlb	0	; () banked
 16483  0059F2  5165               	movf	ads1115_write_reg@value& (0+255),w,b
 16484  0059F4  0012               	return		;indir
 16485  0059F6                     u11019:
 16486                           
 16487                           ;ads1115.c: 26: pAds1115->iic_stop();
 16488  0059F6  0100               	movlb	0	; () banked
 16489  0059F8  EE20 F008          	lfsr	2,8
 16490  0059FC  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16491  0059FE  26D9               	addwf	fsr2l,f,c
 16492  005A00  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16493  005A02  22DA               	addwfc	fsr2h,f,c
 16494  005A04  D801               	call	u11028
 16495  005A06  0012               	return	
 16496  005A08                     u11028:
 16497  005A08  0005               	push	
 16498  005A0A  6EFA               	movwf	pclath,c
 16499  005A0C  50DE               	movf	postinc2,w,c
 16500  005A0E  6EFD               	movwf	tosl,c
 16501  005A10  50DE               	movf	postinc2,w,c
 16502  005A12  6EFE               	movwf	tosh,c
 16503  005A14  50F8               	movf	tblptru,w,c
 16504  005A16  6EFF               	movwf	tosu,c
 16505  005A18  50FA               	movf	pclath,w,c
 16506  005A1A  0012               	return		;indir
 16507  005A1C                     __end_of_ads1115_write_reg:
 16508                           	opt stack 0
 16509                           tosu	equ	0xFFF
 16510                           tosh	equ	0xFFE
 16511                           tosl	equ	0xFFD
 16512                           pclath	equ	0xFFA
 16513                           tblptru	equ	0xFF8
 16514                           tblptrh	equ	0xFF7
 16515                           tblptrl	equ	0xFF6
 16516                           tablat	equ	0xFF5
 16517                           prodh	equ	0xFF4
 16518                           prodl	equ	0xFF3
 16519                           intcon	equ	0xFF2
 16520                           indf0	equ	0xFEF
 16521                           postinc0	equ	0xFEE
 16522                           fsr0h	equ	0xFEA
 16523                           fsr0l	equ	0xFE9
 16524                           wreg	equ	0xFE8
 16525                           postdec1	equ	0xFE5
 16526                           plusw1	equ	0xFE3
 16527                           fsr1h	equ	0xFE2
 16528                           fsr1l	equ	0xFE1
 16529                           indf2	equ	0xFDF
 16530                           postinc2	equ	0xFDE
 16531                           postdec2	equ	0xFDD
 16532                           plusw2	equ	0xFDB
 16533                           fsr2h	equ	0xFDA
 16534                           fsr2l	equ	0xFD9
 16535                           status	equ	0xFD8
 16536                           
 16537 ;; *************** function _ads1115_set_mux *****************
 16538 ;; Defined at:
 16539 ;;		line 54 in file "src/driver/ads1115.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16542 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16543 ;;  mux             1    2[BANK0 ] enum E6976
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;		None
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      void 
 16548 ;; Registers used:
 16549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16555 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16558 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16559 ;;Total ram usage:        4 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; Hardware stack levels required when called:    4
 16562 ;; This function calls:
 16563 ;;		Nothing
 16564 ;; This function is called by:
 16565 ;;		_sample_diff_pr_chip_fast
 16566 ;;		_sample_diff_pr_chip_slow
 16567 ;;		_sample_pr_chip_comm
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           	psect	text88
 16572  008140                     __ptext88:
 16573                           	opt stack 0
 16574  008140                     _ads1115_set_mux:
 16575                           	opt stack 23
 16576                           
 16577                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 16578                           
 16579                           ;incstack = 0
 16580  008140  C062  F020         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 16581  008144  0100               	movlb	0	; () banked
 16582  008146  EE20 F003          	lfsr	2,3
 16583  00814A  5160               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 16584  00814C  26D9               	addwf	fsr2l,f,c
 16585  00814E  5161               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 16586  008150  22DA               	addwfc	fsr2h,f,c
 16587  008152  3A20               	swapf	??_ads1115_set_mux,f,c
 16588  008154  0100               	movlb	0	; () banked
 16589  008156  50DF               	movf	223,w,c
 16590  008158  1820               	xorwf	??_ads1115_set_mux,w,c
 16591  00815A  0B8F               	andlw	-113
 16592  00815C  1820               	xorwf	??_ads1115_set_mux,w,c
 16593  00815E  0100               	movlb	0	; () banked
 16594  008160  6EDF               	movwf	223,c
 16595                           
 16596                           ; BSR set to: 0
 16597  008162  0012               	return		;funcret
 16598  008164                     __end_of_ads1115_set_mux:
 16599                           	opt stack 0
 16600                           tosu	equ	0xFFF
 16601                           tosh	equ	0xFFE
 16602                           tosl	equ	0xFFD
 16603                           pclath	equ	0xFFA
 16604                           tblptru	equ	0xFF8
 16605                           tblptrh	equ	0xFF7
 16606                           tblptrl	equ	0xFF6
 16607                           tablat	equ	0xFF5
 16608                           prodh	equ	0xFF4
 16609                           prodl	equ	0xFF3
 16610                           intcon	equ	0xFF2
 16611                           indf0	equ	0xFEF
 16612                           postinc0	equ	0xFEE
 16613                           fsr0h	equ	0xFEA
 16614                           fsr0l	equ	0xFE9
 16615                           wreg	equ	0xFE8
 16616                           postdec1	equ	0xFE5
 16617                           plusw1	equ	0xFE3
 16618                           fsr1h	equ	0xFE2
 16619                           fsr1l	equ	0xFE1
 16620                           indf2	equ	0xFDF
 16621                           postinc2	equ	0xFDE
 16622                           postdec2	equ	0xFDD
 16623                           plusw2	equ	0xFDB
 16624                           fsr2h	equ	0xFDA
 16625                           fsr2l	equ	0xFD9
 16626                           status	equ	0xFD8
 16627                           
 16628 ;; *************** function _ads1115_read_conversion *****************
 16629 ;; Defined at:
 16630 ;;		line 127 in file "src/driver/ads1115.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;  pAds1115        2   10[BANK0 ] PTR struct .
 16633 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;  result          2   13[BANK0 ] unsigned int 
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  2   10[BANK0 ] unsigned int 
 16638 ;; Registers used:
 16639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;Total ram usage:        5 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    8
 16652 ;; This function calls:
 16653 ;;		_ads1115_read_reg
 16654 ;; This function is called by:
 16655 ;;		_sample_diff_pr_chip_fast
 16656 ;;		_sample_diff_pr_chip_slow
 16657 ;;		_sample_pr_chip_comm
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text89
 16662  007AA6                     __ptext89:
 16663                           	opt stack 0
 16664  007AA6                     _ads1115_read_conversion:
 16665                           	opt stack 19
 16666                           
 16667                           ;ads1115.c: 129: uint16_t result;
 16668                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 16669                           
 16670                           ; BSR set to: 0
 16671                           ;incstack = 0
 16672  007AA6  C06A  F064         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 16673  007AAA  C06B  F065         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 16674  007AAE  0E00               	movlw	0
 16675  007AB0  0100               	movlb	0	; () banked
 16676  007AB2  6F66               	movwf	ads1115_read_reg@addr& (0+255),b
 16677  007AB4  ECB6  F020         	call	_ads1115_read_reg
 16678  007AB8  C064  F06D         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 16679  007ABC  C065  F06E         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 16680                           
 16681                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 16682  007AC0  C06A  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 16683  007AC4  C06B  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 16684  007AC8  0E03               	movlw	3
 16685  007ACA  60DF               	cpfslt	indf2,c
 16686  007ACC  D00A               	goto	l12717
 16687                           
 16688                           ;ads1115.c: 132: result >>= 4;
 16689  007ACE  0100               	movlb	0	; () banked
 16690  007AD0  3B6D               	swapf	ads1115_read_conversion@result& (0+255),f,b
 16691  007AD2  3B6E               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16692  007AD4  0E0F               	movlw	15
 16693  007AD6  176D               	andwf	ads1115_read_conversion@result& (0+255),f,b
 16694  007AD8  516E               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 16695  007ADA  0BF0               	andlw	240
 16696  007ADC  136D               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 16697  007ADE  0E0F               	movlw	15
 16698  007AE0  176E               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16699  007AE2                     l12717:
 16700                           
 16701                           ;ads1115.c: 133: }
 16702                           ;ads1115.c: 134: return result;
 16703  007AE2  C06D  F06A         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 16704  007AE6  C06E  F06B         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 16705  007AEA  0012               	return	
 16706  007AEC                     __end_of_ads1115_read_conversion:
 16707                           	opt stack 0
 16708                           tosu	equ	0xFFF
 16709                           tosh	equ	0xFFE
 16710                           tosl	equ	0xFFD
 16711                           pclath	equ	0xFFA
 16712                           tblptru	equ	0xFF8
 16713                           tblptrh	equ	0xFF7
 16714                           tblptrl	equ	0xFF6
 16715                           tablat	equ	0xFF5
 16716                           prodh	equ	0xFF4
 16717                           prodl	equ	0xFF3
 16718                           intcon	equ	0xFF2
 16719                           indf0	equ	0xFEF
 16720                           postinc0	equ	0xFEE
 16721                           fsr0h	equ	0xFEA
 16722                           fsr0l	equ	0xFE9
 16723                           wreg	equ	0xFE8
 16724                           postdec1	equ	0xFE5
 16725                           plusw1	equ	0xFE3
 16726                           fsr1h	equ	0xFE2
 16727                           fsr1l	equ	0xFE1
 16728                           indf2	equ	0xFDF
 16729                           postinc2	equ	0xFDE
 16730                           postdec2	equ	0xFDD
 16731                           plusw2	equ	0xFDB
 16732                           fsr2h	equ	0xFDA
 16733                           fsr2l	equ	0xFD9
 16734                           status	equ	0xFD8
 16735                           
 16736 ;; *************** function _ads1115_read_reg *****************
 16737 ;; Defined at:
 16738 ;;		line 29 in file "src/driver/ads1115.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;  pAds1115        2    4[BANK0 ] PTR struct .
 16741 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16742 ;;  addr            1    6[BANK0 ] unsigned char 
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;  t16             2    8[BANK0 ] unsigned int 
 16745 ;; Return value:  Size  Location     Type
 16746 ;;                  2    4[BANK0 ] unsigned int 
 16747 ;; Registers used:
 16748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16749 ;; Tracked objects:
 16750 ;;		On entry : 0/0
 16751 ;;		On exit  : 0/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16757 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16758 ;;Total ram usage:        6 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:    7
 16761 ;; This function calls:
 16762 ;;		_iic_received_byte_if_ack
 16763 ;;		_iic_send_byte
 16764 ;;		_iic_start
 16765 ;;		_iic_stop
 16766 ;; This function is called by:
 16767 ;;		_ads1115_read_conversion
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           
 16771                           	psect	text90
 16772  00416C                     __ptext90:
 16773                           	opt stack 0
 16774  00416C                     _ads1115_read_reg:
 16775                           	opt stack 19
 16776                           
 16777                           ;ads1115.c: 31: uint16_t t16=0;
 16778                           
 16779                           ;incstack = 0
 16780  00416C  0E00               	movlw	0
 16781  00416E  0100               	movlb	0	; () banked
 16782  004170  6F69               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 16783  004172  0E00               	movlw	0
 16784  004174  6F68               	movwf	ads1115_read_reg@t16& (0+255),b
 16785                           
 16786                           ; BSR set to: 0
 16787                           ;ads1115.c: 32: pAds1115->iic_start();
 16788  004176  0100               	movlb	0	; () banked
 16789  004178  EE20 F006          	lfsr	2,6
 16790  00417C  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16791  00417E  26D9               	addwf	fsr2l,f,c
 16792  004180  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16793  004182  22DA               	addwfc	fsr2h,f,c
 16794  004184  D801               	call	u11038
 16795  004186  D00A               	goto	l12223
 16796  004188                     u11038:
 16797  004188  0005               	push	
 16798  00418A  6EFA               	movwf	pclath,c
 16799  00418C  50DE               	movf	postinc2,w,c
 16800  00418E  6EFD               	movwf	tosl,c
 16801  004190  50DE               	movf	postinc2,w,c
 16802  004192  6EFE               	movwf	tosh,c
 16803  004194  50F8               	movf	tblptru,w,c
 16804  004196  6EFF               	movwf	tosu,c
 16805  004198  50FA               	movf	pclath,w,c
 16806  00419A  0012               	return		;indir
 16807  00419C                     l12223:
 16808                           
 16809                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 16810  00419C  0100               	movlb	0	; () banked
 16811  00419E  EE20 F00A          	lfsr	2,10
 16812  0041A2  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16813  0041A4  26D9               	addwf	fsr2l,f,c
 16814  0041A6  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16815  0041A8  22DA               	addwfc	fsr2h,f,c
 16816  0041AA  D801               	call	u11048
 16817  0041AC  D012               	goto	l12225
 16818  0041AE                     u11048:
 16819  0041AE  0005               	push	
 16820  0041B0  6EFA               	movwf	pclath,c
 16821  0041B2  50DE               	movf	postinc2,w,c
 16822  0041B4  6EFD               	movwf	tosl,c
 16823  0041B6  50DE               	movf	postinc2,w,c
 16824  0041B8  6EFE               	movwf	tosh,c
 16825  0041BA  50F8               	movf	tblptru,w,c
 16826  0041BC  6EFF               	movwf	tosu,c
 16827  0041BE  50FA               	movf	pclath,w,c
 16828  0041C0  0100               	movlb	0	; () banked
 16829  0041C2  EE20 F001          	lfsr	2,1
 16830  0041C6  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16831  0041C8  26D9               	addwf	fsr2l,f,c
 16832  0041CA  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16833  0041CC  22DA               	addwfc	fsr2h,f,c
 16834  0041CE  50DF               	movf	indf2,w,c
 16835  0041D0  0012               	return		;indir
 16836  0041D2                     l12225:
 16837                           
 16838                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 16839  0041D2  0100               	movlb	0	; () banked
 16840  0041D4  EE20 F00A          	lfsr	2,10
 16841  0041D8  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16842  0041DA  26D9               	addwf	fsr2l,f,c
 16843  0041DC  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16844  0041DE  22DA               	addwfc	fsr2h,f,c
 16845  0041E0  D801               	call	u11058
 16846  0041E2  D00C               	goto	l12227
 16847  0041E4                     u11058:
 16848  0041E4  0005               	push	
 16849  0041E6  6EFA               	movwf	pclath,c
 16850  0041E8  50DE               	movf	postinc2,w,c
 16851  0041EA  6EFD               	movwf	tosl,c
 16852  0041EC  50DE               	movf	postinc2,w,c
 16853  0041EE  6EFE               	movwf	tosh,c
 16854  0041F0  50F8               	movf	tblptru,w,c
 16855  0041F2  6EFF               	movwf	tosu,c
 16856  0041F4  50FA               	movf	pclath,w,c
 16857  0041F6  0100               	movlb	0	; () banked
 16858  0041F8  5166               	movf	ads1115_read_reg@addr& (0+255),w,b
 16859  0041FA  0012               	return		;indir
 16860  0041FC                     l12227:
 16861                           
 16862                           ;ads1115.c: 36: pAds1115->iic_stop();
 16863  0041FC  0100               	movlb	0	; () banked
 16864  0041FE  EE20 F008          	lfsr	2,8
 16865  004202  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16866  004204  26D9               	addwf	fsr2l,f,c
 16867  004206  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16868  004208  22DA               	addwfc	fsr2h,f,c
 16869  00420A  D801               	call	u11068
 16870  00420C  D00A               	goto	l12229
 16871  00420E                     u11068:
 16872  00420E  0005               	push	
 16873  004210  6EFA               	movwf	pclath,c
 16874  004212  50DE               	movf	postinc2,w,c
 16875  004214  6EFD               	movwf	tosl,c
 16876  004216  50DE               	movf	postinc2,w,c
 16877  004218  6EFE               	movwf	tosh,c
 16878  00421A  50F8               	movf	tblptru,w,c
 16879  00421C  6EFF               	movwf	tosu,c
 16880  00421E  50FA               	movf	pclath,w,c
 16881  004220  0012               	return		;indir
 16882  004222                     l12229:
 16883                           
 16884                           ;ads1115.c: 38: pAds1115->iic_start();
 16885  004222  0100               	movlb	0	; () banked
 16886  004224  EE20 F006          	lfsr	2,6
 16887  004228  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16888  00422A  26D9               	addwf	fsr2l,f,c
 16889  00422C  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16890  00422E  22DA               	addwfc	fsr2h,f,c
 16891  004230  D801               	call	u11078
 16892  004232  D00A               	goto	l12231
 16893  004234                     u11078:
 16894  004234  0005               	push	
 16895  004236  6EFA               	movwf	pclath,c
 16896  004238  50DE               	movf	postinc2,w,c
 16897  00423A  6EFD               	movwf	tosl,c
 16898  00423C  50DE               	movf	postinc2,w,c
 16899  00423E  6EFE               	movwf	tosh,c
 16900  004240  50F8               	movf	tblptru,w,c
 16901  004242  6EFF               	movwf	tosu,c
 16902  004244  50FA               	movf	pclath,w,c
 16903  004246  0012               	return		;indir
 16904  004248                     l12231:
 16905                           
 16906                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 16907  004248  0100               	movlb	0	; () banked
 16908  00424A  EE20 F00A          	lfsr	2,10
 16909  00424E  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16910  004250  26D9               	addwf	fsr2l,f,c
 16911  004252  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16912  004254  22DA               	addwfc	fsr2h,f,c
 16913  004256  D801               	call	u11088
 16914  004258  D016               	goto	l12233
 16915  00425A                     u11088:
 16916  00425A  0005               	push	
 16917  00425C  6EFA               	movwf	pclath,c
 16918  00425E  50DE               	movf	postinc2,w,c
 16919  004260  6EFD               	movwf	tosl,c
 16920  004262  50DE               	movf	postinc2,w,c
 16921  004264  6EFE               	movwf	tosh,c
 16922  004266  50F8               	movf	tblptru,w,c
 16923  004268  6EFF               	movwf	tosu,c
 16924  00426A  50FA               	movf	pclath,w,c
 16925  00426C  0100               	movlb	0	; () banked
 16926  00426E  EE20 F001          	lfsr	2,1
 16927  004272  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16928  004274  26D9               	addwf	fsr2l,f,c
 16929  004276  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16930  004278  22DA               	addwfc	fsr2h,f,c
 16931  00427A  50DF               	movf	indf2,w,c
 16932  00427C  0100               	movlb	0	; () banked
 16933  00427E  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 16934  004280  0100               	movlb	0	; () banked
 16935  004282  2967               	incf	??_ads1115_read_reg& (0+255),w,b
 16936  004284  0012               	return		;indir
 16937  004286                     l12233:
 16938                           
 16939                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 16940  004286  0100               	movlb	0	; () banked
 16941  004288  EE20 F00E          	lfsr	2,14
 16942  00428C  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16943  00428E  26D9               	addwf	fsr2l,f,c
 16944  004290  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16945  004292  22DA               	addwfc	fsr2h,f,c
 16946  004294  D801               	call	u11098
 16947  004296  D00B               	goto	u11099
 16948  004298                     u11098:
 16949  004298  0005               	push	
 16950  00429A  6EFA               	movwf	pclath,c
 16951  00429C  50DE               	movf	postinc2,w,c
 16952  00429E  6EFD               	movwf	tosl,c
 16953  0042A0  50DE               	movf	postinc2,w,c
 16954  0042A2  6EFE               	movwf	tosh,c
 16955  0042A4  50F8               	movf	tblptru,w,c
 16956  0042A6  6EFF               	movwf	tosu,c
 16957  0042A8  50FA               	movf	pclath,w,c
 16958  0042AA  0E00               	movlw	0
 16959  0042AC  0012               	return		;indir
 16960  0042AE                     u11099:
 16961  0042AE  0100               	movlb	0	; () banked
 16962  0042B0  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 16963  0042B2  0100               	movlb	0	; () banked
 16964  0042B4  5167               	movf	??_ads1115_read_reg& (0+255),w,b
 16965  0042B6  0100               	movlb	0	; () banked
 16966  0042B8  6F68               	movwf	ads1115_read_reg@t16& (0+255),b
 16967  0042BA  6B69               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 16968                           
 16969                           ; BSR set to: 0
 16970                           ;ads1115.c: 41: t16<<=8;
 16971  0042BC  0100               	movlb	0	; () banked
 16972  0042BE  5168               	movf	ads1115_read_reg@t16& (0+255),w,b
 16973  0042C0  6F69               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 16974  0042C2  6B68               	clrf	ads1115_read_reg@t16& (0+255),b
 16975                           
 16976                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 16977  0042C4  0100               	movlb	0	; () banked
 16978  0042C6  EE20 F00E          	lfsr	2,14
 16979  0042CA  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16980  0042CC  26D9               	addwf	fsr2l,f,c
 16981  0042CE  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16982  0042D0  22DA               	addwfc	fsr2h,f,c
 16983  0042D2  D801               	call	u11108
 16984  0042D4  D00B               	goto	u11109
 16985  0042D6                     u11108:
 16986  0042D6  0005               	push	
 16987  0042D8  6EFA               	movwf	pclath,c
 16988  0042DA  50DE               	movf	postinc2,w,c
 16989  0042DC  6EFD               	movwf	tosl,c
 16990  0042DE  50DE               	movf	postinc2,w,c
 16991  0042E0  6EFE               	movwf	tosh,c
 16992  0042E2  50F8               	movf	tblptru,w,c
 16993  0042E4  6EFF               	movwf	tosu,c
 16994  0042E6  50FA               	movf	pclath,w,c
 16995  0042E8  0E00               	movlw	0
 16996  0042EA  0012               	return		;indir
 16997  0042EC                     u11109:
 16998  0042EC  0100               	movlb	0	; () banked
 16999  0042EE  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 17000  0042F0  0100               	movlb	0	; () banked
 17001  0042F2  5167               	movf	??_ads1115_read_reg& (0+255),w,b
 17002  0042F4  0100               	movlb	0	; () banked
 17003  0042F6  1368               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 17004                           
 17005                           ;ads1115.c: 44: pAds1115->iic_stop();
 17006  0042F8  0100               	movlb	0	; () banked
 17007  0042FA  EE20 F008          	lfsr	2,8
 17008  0042FE  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17009  004300  26D9               	addwf	fsr2l,f,c
 17010  004302  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17011  004304  22DA               	addwfc	fsr2h,f,c
 17012  004306  D801               	call	u11118
 17013  004308  D00A               	goto	l12237
 17014  00430A                     u11118:
 17015  00430A  0005               	push	
 17016  00430C  6EFA               	movwf	pclath,c
 17017  00430E  50DE               	movf	postinc2,w,c
 17018  004310  6EFD               	movwf	tosl,c
 17019  004312  50DE               	movf	postinc2,w,c
 17020  004314  6EFE               	movwf	tosh,c
 17021  004316  50F8               	movf	tblptru,w,c
 17022  004318  6EFF               	movwf	tosu,c
 17023  00431A  50FA               	movf	pclath,w,c
 17024  00431C  0012               	return		;indir
 17025  00431E                     l12237:
 17026                           
 17027                           ;ads1115.c: 45: return t16;
 17028  00431E  C068  F064         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 17029  004322  C069  F065         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 17030  004326  0012               	return	
 17031  004328                     __end_of_ads1115_read_reg:
 17032                           	opt stack 0
 17033                           tosu	equ	0xFFF
 17034                           tosh	equ	0xFFE
 17035                           tosl	equ	0xFFD
 17036                           pclath	equ	0xFFA
 17037                           tblptru	equ	0xFF8
 17038                           tblptrh	equ	0xFF7
 17039                           tblptrl	equ	0xFF6
 17040                           tablat	equ	0xFF5
 17041                           prodh	equ	0xFF4
 17042                           prodl	equ	0xFF3
 17043                           intcon	equ	0xFF2
 17044                           indf0	equ	0xFEF
 17045                           postinc0	equ	0xFEE
 17046                           fsr0h	equ	0xFEA
 17047                           fsr0l	equ	0xFE9
 17048                           wreg	equ	0xFE8
 17049                           postdec1	equ	0xFE5
 17050                           plusw1	equ	0xFE3
 17051                           fsr1h	equ	0xFE2
 17052                           fsr1l	equ	0xFE1
 17053                           indf2	equ	0xFDF
 17054                           postinc2	equ	0xFDE
 17055                           postdec2	equ	0xFDD
 17056                           plusw2	equ	0xFDB
 17057                           fsr2h	equ	0xFDA
 17058                           fsr2l	equ	0xFD9
 17059                           status	equ	0xFD8
 17060                           
 17061 ;; *************** function ___x_sample_fifo *****************
 17062 ;; Defined at:
 17063 ;;		line 61 in file "src/api/sample.c"
 17064 ;; Parameters:    Size  Location     Type
 17065 ;;  buf             2   14[BANK0 ] PTR int 
 17066 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), sampBufDiffPr_D23(16), 
 17067 ;;		 -> sampBufDiffPr_D01(16), 
 17068 ;;  x               2   16[BANK0 ] int 
 17069 ;;  len             1   18[BANK0 ] unsigned char 
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;  ret             4   25[BANK0 ] long 
 17072 ;;  i               1   29[BANK0 ] unsigned char 
 17073 ;; Return value:  Size  Location     Type
 17074 ;;                  2   14[BANK0 ] int 
 17075 ;; Registers used:
 17076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17077 ;; Tracked objects:
 17078 ;;		On entry : 0/0
 17079 ;;		On exit  : 0/0
 17080 ;;		Unchanged: 0/0
 17081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17082 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;Total ram usage:       16 bytes
 17087 ;; Hardware stack levels used:    1
 17088 ;; Hardware stack levels required when called:    5
 17089 ;; This function calls:
 17090 ;;		___aldiv
 17091 ;; This function is called by:
 17092 ;;		_sample_diff_pr_chip_slow
 17093 ;;		_sample_pr_chip_comm
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text91
 17098  004994                     __ptext91:
 17099                           	opt stack 0
 17100  004994                     ___x_sample_fifo:
 17101                           	opt stack 22
 17102                           
 17103                           ;sample.c: 63: int32_t ret=0;
 17104                           
 17105                           ;incstack = 0
 17106  004994  0E00               	movlw	0
 17107  004996  0100               	movlb	0	; () banked
 17108  004998  6F79               	movwf	___x_sample_fifo@ret& (0+255),b
 17109  00499A  0E00               	movlw	0
 17110  00499C  6F7A               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 17111  00499E  0E00               	movlw	0
 17112  0049A0  6F7B               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 17113  0049A2  0E00               	movlw	0
 17114  0049A4  6F7C               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;sample.c: 64: uint8_t i;
 17118                           ;sample.c: 65: for(i=len-1;i>0;i--){
 17119  0049A6  0100               	movlb	0	; () banked
 17120  0049A8  0572               	decf	___x_sample_fifo@len& (0+255),w,b
 17121  0049AA  0100               	movlb	0	; () banked
 17122  0049AC  6F7D               	movwf	___x_sample_fifo@i& (0+255),b
 17123  0049AE                     l12769:
 17124                           
 17125                           ; BSR set to: 0
 17126  0049AE  0100               	movlb	0	; () banked
 17127  0049B0  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 17128  0049B2  0100               	movlb	0	; () banked
 17129  0049B4  B4D8               	btfsc	status,2,c
 17130  0049B6  D05C               	goto	l12781
 17131                           
 17132                           ; BSR set to: 0
 17133                           ;sample.c: 66: buf[i]=buf[i-1];
 17134                           
 17135                           ; BSR set to: 0
 17136                           
 17137                           ; BSR set to: 0
 17138  0049B8  0EFE               	movlw	254
 17139  0049BA  0100               	movlb	0	; () banked
 17140  0049BC  6F73               	movwf	??___x_sample_fifo& (0+255),b
 17141  0049BE  0EFF               	movlw	255
 17142  0049C0  0100               	movlb	0	; () banked
 17143  0049C2  6F74               	movwf	(??___x_sample_fifo+1)& (0+255),b
 17144  0049C4  0100               	movlb	0	; () banked
 17145  0049C6  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 17146  0049C8  0100               	movlb	0	; () banked
 17147  0049CA  6F75               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17148  0049CC  6B76               	clrf	(??___x_sample_fifo+3)& (0+255),b
 17149  0049CE  90D8               	bcf	status,0,c
 17150  0049D0  0100               	movlb	0	; () banked
 17151  0049D2  3775               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 17152  0049D4  3776               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 17153  0049D6  0100               	movlb	0	; () banked
 17154  0049D8  5173               	movf	??___x_sample_fifo& (0+255),w,b
 17155  0049DA  0100               	movlb	0	; () banked
 17156  0049DC  2775               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 17157  0049DE  0100               	movlb	0	; () banked
 17158  0049E0  5174               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17159  0049E2  0100               	movlb	0	; () banked
 17160  0049E4  2376               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 17161  0049E6  0100               	movlb	0	; () banked
 17162  0049E8  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17163  0049EA  0100               	movlb	0	; () banked
 17164  0049EC  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17165  0049EE  6ED9               	movwf	fsr2l,c
 17166  0049F0  0100               	movlb	0	; () banked
 17167  0049F2  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17168  0049F4  0100               	movlb	0	; () banked
 17169  0049F6  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17170  0049F8  6EDA               	movwf	fsr2h,c
 17171  0049FA  0100               	movlb	0	; () banked
 17172  0049FC  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 17173  0049FE  0D02               	mullw	2
 17174  004A00  50F3               	movf	prodl,w,c
 17175  004A02  0100               	movlb	0	; () banked
 17176  004A04  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17177  004A06  6EE1               	movwf	fsr1l,c
 17178  004A08  50F4               	movf	prodh,w,c
 17179  004A0A  0100               	movlb	0	; () banked
 17180  004A0C  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17181  004A0E  6EE2               	movwf	fsr1h,c
 17182  004A10  CFDE FFE6          	movff	postinc2,postinc1
 17183  004A14  CFDD FFE5          	movff	postdec2,postdec1
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;sample.c: 67: ret+=buf[i];
 17187  004A18  0100               	movlb	0	; () banked
 17188  004A1A  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 17189  004A1C  0D02               	mullw	2
 17190  004A1E  50F3               	movf	prodl,w,c
 17191  004A20  0100               	movlb	0	; () banked
 17192  004A22  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17193  004A24  6ED9               	movwf	fsr2l,c
 17194  004A26  50F4               	movf	prodh,w,c
 17195  004A28  0100               	movlb	0	; () banked
 17196  004A2A  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17197  004A2C  6EDA               	movwf	fsr2h,c
 17198  004A2E  CFDE F073          	movff	postinc2,??___x_sample_fifo
 17199  004A32  CFDD F074          	movff	postdec2,??___x_sample_fifo+1
 17200  004A36  C073  F075         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 17201  004A3A  C074  F076         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 17202  004A3E  0E00               	movlw	0
 17203  004A40  0100               	movlb	0	; () banked
 17204  004A42  BF76               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 17205  004A44  0EFF               	movlw	255
 17206  004A46  6F77               	movwf	(??___x_sample_fifo+4)& (0+255),b
 17207  004A48  6F78               	movwf	(??___x_sample_fifo+5)& (0+255),b
 17208  004A4A  0100               	movlb	0	; () banked
 17209  004A4C  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17210  004A4E  0100               	movlb	0	; () banked
 17211  004A50  2779               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17212  004A52  0100               	movlb	0	; () banked
 17213  004A54  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17214  004A56  0100               	movlb	0	; () banked
 17215  004A58  237A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17216  004A5A  0100               	movlb	0	; () banked
 17217  004A5C  5177               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 17218  004A5E  0100               	movlb	0	; () banked
 17219  004A60  237B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17220  004A62  0100               	movlb	0	; () banked
 17221  004A64  5178               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 17222  004A66  0100               	movlb	0	; () banked
 17223  004A68  237C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17224                           
 17225                           ; BSR set to: 0
 17226  004A6A  0100               	movlb	0	; () banked
 17227  004A6C  077D               	decf	___x_sample_fifo@i& (0+255),f,b
 17228  004A6E  D79F               	goto	l12769
 17229  004A70                     l12781:
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;sample.c: 68: }
 17233                           ;sample.c: 69: buf[i]=x;
 17234  004A70  0100               	movlb	0	; () banked
 17235  004A72  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 17236  004A74  0D02               	mullw	2
 17237  004A76  50F3               	movf	prodl,w,c
 17238  004A78  0100               	movlb	0	; () banked
 17239  004A7A  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17240  004A7C  6ED9               	movwf	fsr2l,c
 17241  004A7E  50F4               	movf	prodh,w,c
 17242  004A80  0100               	movlb	0	; () banked
 17243  004A82  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17244  004A84  6EDA               	movwf	fsr2h,c
 17245  004A86  C070  FFDE         	movff	___x_sample_fifo@x,postinc2
 17246  004A8A  C071  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 17247                           
 17248                           ; BSR set to: 0
 17249                           ;sample.c: 70: ret+=x;
 17250  004A8E  C070  F073         	movff	___x_sample_fifo@x,??___x_sample_fifo
 17251  004A92  C071  F074         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 17252  004A96  0E00               	movlw	0
 17253  004A98  0100               	movlb	0	; () banked
 17254  004A9A  BF74               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 17255  004A9C  0EFF               	movlw	255
 17256  004A9E  6F75               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17257  004AA0  6F76               	movwf	(??___x_sample_fifo+3)& (0+255),b
 17258  004AA2  0100               	movlb	0	; () banked
 17259  004AA4  5173               	movf	??___x_sample_fifo& (0+255),w,b
 17260  004AA6  0100               	movlb	0	; () banked
 17261  004AA8  2779               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17262  004AAA  0100               	movlb	0	; () banked
 17263  004AAC  5174               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17264  004AAE  0100               	movlb	0	; () banked
 17265  004AB0  237A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17266  004AB2  0100               	movlb	0	; () banked
 17267  004AB4  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17268  004AB6  0100               	movlb	0	; () banked
 17269  004AB8  237B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17270  004ABA  0100               	movlb	0	; () banked
 17271  004ABC  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17272  004ABE  0100               	movlb	0	; () banked
 17273  004AC0  237C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;sample.c: 71: ret/=len;
 17277  004AC2  C079  F060         	movff	___x_sample_fifo@ret,___aldiv@dividend
 17278  004AC6  C07A  F061         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 17279  004ACA  C07B  F062         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 17280  004ACE  C07C  F063         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 17281  004AD2  0100               	movlb	0	; () banked
 17282  004AD4  5172               	movf	___x_sample_fifo@len& (0+255),w,b
 17283  004AD6  0100               	movlb	0	; () banked
 17284  004AD8  6F64               	movwf	___aldiv@divisor& (0+255),b
 17285  004ADA  6B65               	clrf	(___aldiv@divisor+1)& (0+255),b
 17286  004ADC  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 17287  004ADE  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 17288  004AE0  ECEB  F029         	call	___aldiv
 17289  004AE4  C060  F079         	movff	?___aldiv,___x_sample_fifo@ret
 17290  004AE8  C061  F07A         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 17291  004AEC  C062  F07B         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 17292  004AF0  C063  F07C         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 17293                           
 17294                           ;sample.c: 72: return (int16_t)(ret);
 17295  004AF4  C079  F06E         	movff	___x_sample_fifo@ret,?___x_sample_fifo
 17296  004AF8  C07A  F06F         	movff	___x_sample_fifo@ret+1,?___x_sample_fifo+1
 17297  004AFC  0012               	return	
 17298  004AFE                     __end_of___x_sample_fifo:
 17299                           	opt stack 0
 17300                           tosu	equ	0xFFF
 17301                           tosh	equ	0xFFE
 17302                           tosl	equ	0xFFD
 17303                           pclath	equ	0xFFA
 17304                           tblptru	equ	0xFF8
 17305                           tblptrh	equ	0xFF7
 17306                           tblptrl	equ	0xFF6
 17307                           tablat	equ	0xFF5
 17308                           prodh	equ	0xFF4
 17309                           prodl	equ	0xFF3
 17310                           intcon	equ	0xFF2
 17311                           indf0	equ	0xFEF
 17312                           postinc0	equ	0xFEE
 17313                           fsr0h	equ	0xFEA
 17314                           fsr0l	equ	0xFE9
 17315                           wreg	equ	0xFE8
 17316                           postinc1	equ	0xFE6
 17317                           postdec1	equ	0xFE5
 17318                           plusw1	equ	0xFE3
 17319                           fsr1h	equ	0xFE2
 17320                           fsr1l	equ	0xFE1
 17321                           indf2	equ	0xFDF
 17322                           postinc2	equ	0xFDE
 17323                           postdec2	equ	0xFDD
 17324                           plusw2	equ	0xFDB
 17325                           fsr2h	equ	0xFDA
 17326                           fsr2l	equ	0xFD9
 17327                           status	equ	0xFD8
 17328                           
 17329 ;; *************** function _cal_pt100_temperature_in *****************
 17330 ;; Defined at:
 17331 ;;		line 542 in file "src/api/data.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;		None
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  f1              4  106[BANK0 ] float 
 17336 ;;  f2              4  102[BANK0 ] float 
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  1    wreg      void 
 17339 ;; Registers used:
 17340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17347 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17349 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17350 ;;Total ram usage:       12 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:    5
 17353 ;; This function calls:
 17354 ;;		___fladd
 17355 ;;		___fldiv
 17356 ;;		___flmul
 17357 ;;		___flneg
 17358 ;;		___fltol
 17359 ;;		___xxtofl
 17360 ;; This function is called by:
 17361 ;;		_event_process_rtc
 17362 ;; This function uses a non-reentrant model
 17363 ;;
 17364                           
 17365                           	psect	text92
 17366  0030D4                     __ptext92:
 17367                           	opt stack 0
 17368  0030D4                     _cal_pt100_temperature_in:
 17369                           	opt stack 23
 17370                           
 17371                           ;data.c: 544: float f1,f2;
 17372                           ;data.c: 545: f1=(float)(adc_inPt100);
 17373                           
 17374                           ;incstack = 0
 17375  0030D4  C182  F060         	movff	_adc_inPt100,___xxtofl@val	;volatile
 17376  0030D8  C183  F061         	movff	_adc_inPt100+1,___xxtofl@val+1	;volatile
 17377  0030DC  0100               	movlb	0	; () banked
 17378  0030DE  0E00               	movlw	0
 17379  0030E0  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17380  0030E2  0EFF               	movlw	-1
 17381  0030E4  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 17382  0030E6  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 17383  0030E8  0E01               	movlw	1
 17384  0030EA  ECED  F01E         	call	___xxtofl
 17385  0030EE  C060  F0CA         	movff	?___xxtofl,cal_pt100_temperature_in@f1
 17386  0030F2  C061  F0CB         	movff	?___xxtofl+1,cal_pt100_temperature_in@f1+1
 17387  0030F6  C062  F0CC         	movff	?___xxtofl+2,cal_pt100_temperature_in@f1+2
 17388  0030FA  C063  F0CD         	movff	?___xxtofl+3,cal_pt100_temperature_in@f1+3
 17389                           
 17390                           ;data.c: 547: f2=(float)(fpSysData->TempZero);
 17391  0030FE  0E5C               	movlw	92
 17392  003100  243C               	addwf	_fpSysData,w,c
 17393  003102  6EF6               	movwf	tblptrl,c
 17394  003104  0E00               	movlw	0
 17395  003106  203D               	addwfc	_fpSysData+1,w,c
 17396  003108  6EF7               	movwf	tblptrh,c
 17397  00310A  0E00               	movlw	0
 17398  00310C  203E               	addwfc	_fpSysData+2,w,c
 17399  00310E  6EF8               	movwf	tblptru,c
 17400  003110  0009               	tblrd		*+
 17401  003112  CFF5 F060          	movff	tablat,___xxtofl@val
 17402  003116  0009               	tblrd		*+
 17403  003118  CFF5 F061          	movff	tablat,___xxtofl@val+1
 17404  00311C  0009               	tblrd		*+
 17405  00311E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 17406  003122  000A               	tblrd		*-
 17407  003124  CFF5 F063          	movff	tablat,___xxtofl@val+3
 17408  003128  0E00               	movlw	0
 17409  00312A  ECED  F01E         	call	___xxtofl
 17410  00312E  C060  F0C6         	movff	?___xxtofl,cal_pt100_temperature_in@f2
 17411  003132  C061  F0C7         	movff	?___xxtofl+1,cal_pt100_temperature_in@f2+1
 17412  003136  C062  F0C8         	movff	?___xxtofl+2,cal_pt100_temperature_in@f2+2
 17413  00313A  C063  F0C9         	movff	?___xxtofl+3,cal_pt100_temperature_in@f2+3
 17414                           
 17415                           ;data.c: 548: f1=f1-f2;
 17416  00313E  C0C6  F0A0         	movff	cal_pt100_temperature_in@f2,___flneg@f1
 17417  003142  C0C7  F0A1         	movff	cal_pt100_temperature_in@f2+1,___flneg@f1+1
 17418  003146  C0C8  F0A2         	movff	cal_pt100_temperature_in@f2+2,___flneg@f1+2
 17419  00314A  C0C9  F0A3         	movff	cal_pt100_temperature_in@f2+3,___flneg@f1+3
 17420  00314E  EC8C  F03E         	call	___flneg	;wreg free
 17421  003152  C0A0  F0A4         	movff	?___flneg,___fladd@b
 17422  003156  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 17423  00315A  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 17424  00315E  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 17425  003162  C0CA  F0A8         	movff	cal_pt100_temperature_in@f1,___fladd@a
 17426  003166  C0CB  F0A9         	movff	cal_pt100_temperature_in@f1+1,___fladd@a+1
 17427  00316A  C0CC  F0AA         	movff	cal_pt100_temperature_in@f1+2,___fladd@a+2
 17428  00316E  C0CD  F0AB         	movff	cal_pt100_temperature_in@f1+3,___fladd@a+3
 17429  003172  EC40  F009         	call	___fladd	;wreg free
 17430  003176  C0A4  F0CA         	movff	?___fladd,cal_pt100_temperature_in@f1
 17431  00317A  C0A5  F0CB         	movff	?___fladd+1,cal_pt100_temperature_in@f1+1
 17432  00317E  C0A6  F0CC         	movff	?___fladd+2,cal_pt100_temperature_in@f1+2
 17433  003182  C0A7  F0CD         	movff	?___fladd+3,cal_pt100_temperature_in@f1+3
 17434                           
 17435                           ;data.c: 550: f2=(float)(fpSysData->TempLine);
 17436  003186  0E60               	movlw	96
 17437  003188  243C               	addwf	_fpSysData,w,c
 17438  00318A  6EF6               	movwf	tblptrl,c
 17439  00318C  0E00               	movlw	0
 17440  00318E  203D               	addwfc	_fpSysData+1,w,c
 17441  003190  6EF7               	movwf	tblptrh,c
 17442  003192  0E00               	movlw	0
 17443  003194  203E               	addwfc	_fpSysData+2,w,c
 17444  003196  6EF8               	movwf	tblptru,c
 17445  003198  0009               	tblrd		*+
 17446  00319A  CFF5 F060          	movff	tablat,___xxtofl@val
 17447  00319E  0009               	tblrd		*+
 17448  0031A0  CFF5 F061          	movff	tablat,___xxtofl@val+1
 17449  0031A4  0009               	tblrd		*+
 17450  0031A6  CFF5 F062          	movff	tablat,___xxtofl@val+2
 17451  0031AA  000A               	tblrd		*-
 17452  0031AC  CFF5 F063          	movff	tablat,___xxtofl@val+3
 17453  0031B0  0E00               	movlw	0
 17454  0031B2  ECED  F01E         	call	___xxtofl
 17455  0031B6  C060  F0C6         	movff	?___xxtofl,cal_pt100_temperature_in@f2
 17456  0031BA  C061  F0C7         	movff	?___xxtofl+1,cal_pt100_temperature_in@f2+1
 17457  0031BE  C062  F0C8         	movff	?___xxtofl+2,cal_pt100_temperature_in@f2+2
 17458  0031C2  C063  F0C9         	movff	?___xxtofl+3,cal_pt100_temperature_in@f2+3
 17459                           
 17460                           ;data.c: 551: f2/=1000;
 17461  0031C6  C0C6  F087         	movff	cal_pt100_temperature_in@f2,___fldiv@b
 17462  0031CA  C0C7  F088         	movff	cal_pt100_temperature_in@f2+1,___fldiv@b+1
 17463  0031CE  C0C8  F089         	movff	cal_pt100_temperature_in@f2+2,___fldiv@b+2
 17464  0031D2  C0C9  F08A         	movff	cal_pt100_temperature_in@f2+3,___fldiv@b+3
 17465  0031D6  0E00               	movlw	0
 17466  0031D8  0100               	movlb	0	; () banked
 17467  0031DA  6F8B               	movwf	___fldiv@a& (0+255),b
 17468  0031DC  0E00               	movlw	0
 17469  0031DE  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17470  0031E0  0E7A               	movlw	122
 17471  0031E2  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17472  0031E4  0E44               	movlw	68
 17473  0031E6  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17474  0031E8  EC48  F012         	call	___fldiv	;wreg free
 17475  0031EC  C087  F0C6         	movff	?___fldiv,cal_pt100_temperature_in@f2
 17476  0031F0  C088  F0C7         	movff	?___fldiv+1,cal_pt100_temperature_in@f2+1
 17477  0031F4  C089  F0C8         	movff	?___fldiv+2,cal_pt100_temperature_in@f2+2
 17478  0031F8  C08A  F0C9         	movff	?___fldiv+3,cal_pt100_temperature_in@f2+3
 17479                           
 17480                           ;data.c: 552: f1=f1*f2;
 17481  0031FC  C0CA  F06E         	movff	cal_pt100_temperature_in@f1,___flmul@b
 17482  003200  C0CB  F06F         	movff	cal_pt100_temperature_in@f1+1,___flmul@b+1
 17483  003204  C0CC  F070         	movff	cal_pt100_temperature_in@f1+2,___flmul@b+2
 17484  003208  C0CD  F071         	movff	cal_pt100_temperature_in@f1+3,___flmul@b+3
 17485  00320C  C0C6  F072         	movff	cal_pt100_temperature_in@f2,___flmul@a
 17486  003210  C0C7  F073         	movff	cal_pt100_temperature_in@f2+1,___flmul@a+1
 17487  003214  C0C8  F074         	movff	cal_pt100_temperature_in@f2+2,___flmul@a+2
 17488  003218  C0C9  F075         	movff	cal_pt100_temperature_in@f2+3,___flmul@a+3
 17489  00321C  EC94  F00B         	call	___flmul	;wreg free
 17490  003220  C06E  F0CA         	movff	?___flmul,cal_pt100_temperature_in@f1
 17491  003224  C06F  F0CB         	movff	?___flmul+1,cal_pt100_temperature_in@f1+1
 17492  003228  C070  F0CC         	movff	?___flmul+2,cal_pt100_temperature_in@f1+2
 17493  00322C  C071  F0CD         	movff	?___flmul+3,cal_pt100_temperature_in@f1+3
 17494                           
 17495                           ;data.c: 554: f1/=1000;
 17496  003230  C0CA  F087         	movff	cal_pt100_temperature_in@f1,___fldiv@b
 17497  003234  C0CB  F088         	movff	cal_pt100_temperature_in@f1+1,___fldiv@b+1
 17498  003238  C0CC  F089         	movff	cal_pt100_temperature_in@f1+2,___fldiv@b+2
 17499  00323C  C0CD  F08A         	movff	cal_pt100_temperature_in@f1+3,___fldiv@b+3
 17500  003240  0E00               	movlw	0
 17501  003242  0100               	movlb	0	; () banked
 17502  003244  6F8B               	movwf	___fldiv@a& (0+255),b
 17503  003246  0E00               	movlw	0
 17504  003248  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17505  00324A  0E7A               	movlw	122
 17506  00324C  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17507  00324E  0E44               	movlw	68
 17508  003250  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17509  003252  EC48  F012         	call	___fldiv	;wreg free
 17510  003256  C087  F0CA         	movff	?___fldiv,cal_pt100_temperature_in@f1
 17511  00325A  C088  F0CB         	movff	?___fldiv+1,cal_pt100_temperature_in@f1+1
 17512  00325E  C089  F0CC         	movff	?___fldiv+2,cal_pt100_temperature_in@f1+2
 17513  003262  C08A  F0CD         	movff	?___fldiv+3,cal_pt100_temperature_in@f1+3
 17514                           
 17515                           ;data.c: 555: f2=(1.484e-4f);
 17516  003266  0ED2               	movlw	210
 17517  003268  0100               	movlb	0	; () banked
 17518  00326A  6FC6               	movwf	cal_pt100_temperature_in@f2& (0+255),b
 17519  00326C  0E9B               	movlw	155
 17520  00326E  6FC7               	movwf	(cal_pt100_temperature_in@f2+1)& (0+255),b
 17521  003270  0E1B               	movlw	27
 17522  003272  6FC8               	movwf	(cal_pt100_temperature_in@f2+2)& (0+255),b
 17523  003274  0E39               	movlw	57
 17524  003276  6FC9               	movwf	(cal_pt100_temperature_in@f2+3)& (0+255),b
 17525                           
 17526                           ; BSR set to: 0
 17527                           ;data.c: 556: f2=f2*f1*f1;
 17528  003278  C0CA  F072         	movff	cal_pt100_temperature_in@f1,___flmul@a
 17529  00327C  C0CB  F073         	movff	cal_pt100_temperature_in@f1+1,___flmul@a+1
 17530  003280  C0CC  F074         	movff	cal_pt100_temperature_in@f1+2,___flmul@a+2
 17531  003284  C0CD  F075         	movff	cal_pt100_temperature_in@f1+3,___flmul@a+3
 17532  003288  C0C6  F06E         	movff	cal_pt100_temperature_in@f2,___flmul@b
 17533  00328C  C0C7  F06F         	movff	cal_pt100_temperature_in@f2+1,___flmul@b+1
 17534  003290  C0C8  F070         	movff	cal_pt100_temperature_in@f2+2,___flmul@b+2
 17535  003294  C0C9  F071         	movff	cal_pt100_temperature_in@f2+3,___flmul@b+3
 17536  003298  EC94  F00B         	call	___flmul	;wreg free
 17537  00329C  C06E  F0C2         	movff	?___flmul,_cal_pt100_temperature_in$4417
 17538  0032A0  C06F  F0C3         	movff	?___flmul+1,_cal_pt100_temperature_in$4417+1
 17539  0032A4  C070  F0C4         	movff	?___flmul+2,_cal_pt100_temperature_in$4417+2
 17540  0032A8  C071  F0C5         	movff	?___flmul+3,_cal_pt100_temperature_in$4417+3
 17541                           
 17542                           ;data.c: 556: f2=f2*f1*f1;
 17543  0032AC  C0C2  F06E         	movff	_cal_pt100_temperature_in$4417,___flmul@b
 17544  0032B0  C0C3  F06F         	movff	_cal_pt100_temperature_in$4417+1,___flmul@b+1
 17545  0032B4  C0C4  F070         	movff	_cal_pt100_temperature_in$4417+2,___flmul@b+2
 17546  0032B8  C0C5  F071         	movff	_cal_pt100_temperature_in$4417+3,___flmul@b+3
 17547  0032BC  C0CA  F072         	movff	cal_pt100_temperature_in@f1,___flmul@a
 17548  0032C0  C0CB  F073         	movff	cal_pt100_temperature_in@f1+1,___flmul@a+1
 17549  0032C4  C0CC  F074         	movff	cal_pt100_temperature_in@f1+2,___flmul@a+2
 17550  0032C8  C0CD  F075         	movff	cal_pt100_temperature_in@f1+3,___flmul@a+3
 17551  0032CC  EC94  F00B         	call	___flmul	;wreg free
 17552  0032D0  C06E  F0C6         	movff	?___flmul,cal_pt100_temperature_in@f2
 17553  0032D4  C06F  F0C7         	movff	?___flmul+1,cal_pt100_temperature_in@f2+1
 17554  0032D8  C070  F0C8         	movff	?___flmul+2,cal_pt100_temperature_in@f2+2
 17555  0032DC  C071  F0C9         	movff	?___flmul+3,cal_pt100_temperature_in@f2+3
 17556                           
 17557                           ;data.c: 557: f1=f1+f2;
 17558  0032E0  C0CA  F0A4         	movff	cal_pt100_temperature_in@f1,___fladd@b
 17559  0032E4  C0CB  F0A5         	movff	cal_pt100_temperature_in@f1+1,___fladd@b+1
 17560  0032E8  C0CC  F0A6         	movff	cal_pt100_temperature_in@f1+2,___fladd@b+2
 17561  0032EC  C0CD  F0A7         	movff	cal_pt100_temperature_in@f1+3,___fladd@b+3
 17562  0032F0  C0C6  F0A8         	movff	cal_pt100_temperature_in@f2,___fladd@a
 17563  0032F4  C0C7  F0A9         	movff	cal_pt100_temperature_in@f2+1,___fladd@a+1
 17564  0032F8  C0C8  F0AA         	movff	cal_pt100_temperature_in@f2+2,___fladd@a+2
 17565  0032FC  C0C9  F0AB         	movff	cal_pt100_temperature_in@f2+3,___fladd@a+3
 17566  003300  EC40  F009         	call	___fladd	;wreg free
 17567  003304  C0A4  F0CA         	movff	?___fladd,cal_pt100_temperature_in@f1
 17568  003308  C0A5  F0CB         	movff	?___fladd+1,cal_pt100_temperature_in@f1+1
 17569  00330C  C0A6  F0CC         	movff	?___fladd+2,cal_pt100_temperature_in@f1+2
 17570  003310  C0A7  F0CD         	movff	?___fladd+3,cal_pt100_temperature_in@f1+3
 17571                           
 17572                           ;data.c: 559: f1=f1*1000;
 17573  003314  C0CA  F06E         	movff	cal_pt100_temperature_in@f1,___flmul@b
 17574  003318  C0CB  F06F         	movff	cal_pt100_temperature_in@f1+1,___flmul@b+1
 17575  00331C  C0CC  F070         	movff	cal_pt100_temperature_in@f1+2,___flmul@b+2
 17576  003320  C0CD  F071         	movff	cal_pt100_temperature_in@f1+3,___flmul@b+3
 17577  003324  0E00               	movlw	0
 17578  003326  0100               	movlb	0	; () banked
 17579  003328  6F72               	movwf	___flmul@a& (0+255),b
 17580  00332A  0E00               	movlw	0
 17581  00332C  6F73               	movwf	(___flmul@a+1)& (0+255),b
 17582  00332E  0E7A               	movlw	122
 17583  003330  6F74               	movwf	(___flmul@a+2)& (0+255),b
 17584  003332  0E44               	movlw	68
 17585  003334  6F75               	movwf	(___flmul@a+3)& (0+255),b
 17586  003336  EC94  F00B         	call	___flmul	;wreg free
 17587  00333A  C06E  F0CA         	movff	?___flmul,cal_pt100_temperature_in@f1
 17588  00333E  C06F  F0CB         	movff	?___flmul+1,cal_pt100_temperature_in@f1+1
 17589  003342  C070  F0CC         	movff	?___flmul+2,cal_pt100_temperature_in@f1+2
 17590  003346  C071  F0CD         	movff	?___flmul+3,cal_pt100_temperature_in@f1+3
 17591                           
 17592                           ;data.c: 560: rtTemperatureIn= (int32_t)f1;
 17593  00334A  C0CA  F0B8         	movff	cal_pt100_temperature_in@f1,___fltol@f1
 17594  00334E  C0CB  F0B9         	movff	cal_pt100_temperature_in@f1+1,___fltol@f1+1
 17595  003352  C0CC  F0BA         	movff	cal_pt100_temperature_in@f1+2,___fltol@f1+2
 17596  003356  C0CD  F0BB         	movff	cal_pt100_temperature_in@f1+3,___fltol@f1+3
 17597  00335A  EC01  F02B         	call	___fltol	;wreg free
 17598  00335E  C0B8  F156         	movff	?___fltol,_rtTemperatureIn	;volatile
 17599  003362  C0B9  F157         	movff	?___fltol+1,_rtTemperatureIn+1	;volatile
 17600  003366  C0BA  F158         	movff	?___fltol+2,_rtTemperatureIn+2	;volatile
 17601  00336A  C0BB  F159         	movff	?___fltol+3,_rtTemperatureIn+3	;volatile
 17602  00336E  0012               	return		;funcret
 17603  003370                     __end_of_cal_pt100_temperature_in:
 17604                           	opt stack 0
 17605                           tosu	equ	0xFFF
 17606                           tosh	equ	0xFFE
 17607                           tosl	equ	0xFFD
 17608                           pclath	equ	0xFFA
 17609                           tblptru	equ	0xFF8
 17610                           tblptrh	equ	0xFF7
 17611                           tblptrl	equ	0xFF6
 17612                           tablat	equ	0xFF5
 17613                           prodh	equ	0xFF4
 17614                           prodl	equ	0xFF3
 17615                           intcon	equ	0xFF2
 17616                           indf0	equ	0xFEF
 17617                           postinc0	equ	0xFEE
 17618                           fsr0h	equ	0xFEA
 17619                           fsr0l	equ	0xFE9
 17620                           wreg	equ	0xFE8
 17621                           postinc1	equ	0xFE6
 17622                           postdec1	equ	0xFE5
 17623                           plusw1	equ	0xFE3
 17624                           fsr1h	equ	0xFE2
 17625                           fsr1l	equ	0xFE1
 17626                           indf2	equ	0xFDF
 17627                           postinc2	equ	0xFDE
 17628                           postdec2	equ	0xFDD
 17629                           plusw2	equ	0xFDB
 17630                           fsr2h	equ	0xFDA
 17631                           fsr2l	equ	0xFD9
 17632                           status	equ	0xFD8
 17633                           
 17634 ;; *************** function _cal_pt100_temperature_ex *****************
 17635 ;; Defined at:
 17636 ;;		line 563 in file "src/api/data.c"
 17637 ;; Parameters:    Size  Location     Type
 17638 ;;		None
 17639 ;; Auto vars:     Size  Location     Type
 17640 ;;  f1              4  111[BANK0 ] float 
 17641 ;;  f2              4  107[BANK0 ] float 
 17642 ;; Return value:  Size  Location     Type
 17643 ;;                  1    wreg      void 
 17644 ;; Registers used:
 17645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17646 ;; Tracked objects:
 17647 ;;		On entry : 0/0
 17648 ;;		On exit  : 0/0
 17649 ;;		Unchanged: 0/0
 17650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17652 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17653 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17654 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17655 ;;Total ram usage:       17 bytes
 17656 ;; Hardware stack levels used:    1
 17657 ;; Hardware stack levels required when called:    5
 17658 ;; This function calls:
 17659 ;;		___fladd
 17660 ;;		___fldiv
 17661 ;;		___flmul
 17662 ;;		___flneg
 17663 ;;		___fltol
 17664 ;;		___xxtofl
 17665 ;; This function is called by:
 17666 ;;		_event_process_rtc
 17667 ;; This function uses a non-reentrant model
 17668 ;;
 17669                           
 17670                           	psect	text93
 17671  002B56                     __ptext93:
 17672                           	opt stack 0
 17673  002B56                     _cal_pt100_temperature_ex:
 17674                           	opt stack 23
 17675                           
 17676                           ;data.c: 565: float f1,f2;
 17677                           ;data.c: 566: f1=(float)(adc_exPt100);
 17678                           
 17679                           ;incstack = 0
 17680  002B56  C17E  F060         	movff	_adc_exPt100,___xxtofl@val	;volatile
 17681  002B5A  C17F  F061         	movff	_adc_exPt100+1,___xxtofl@val+1	;volatile
 17682  002B5E  0100               	movlb	0	; () banked
 17683  002B60  0E00               	movlw	0
 17684  002B62  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17685  002B64  0EFF               	movlw	-1
 17686  002B66  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 17687  002B68  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 17688  002B6A  0E01               	movlw	1
 17689  002B6C  ECED  F01E         	call	___xxtofl
 17690  002B70  C060  F0CF         	movff	?___xxtofl,cal_pt100_temperature_ex@f1
 17691  002B74  C061  F0D0         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f1+1
 17692  002B78  C062  F0D1         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f1+2
 17693  002B7C  C063  F0D2         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f1+3
 17694                           
 17695                           ;data.c: 568: f2=(float)(fpSysData->ex_pressZero);
 17696  002B80  0E64               	movlw	100
 17697  002B82  0100               	movlb	0	; () banked
 17698  002B84  6FC2               	movwf	??_cal_pt100_temperature_ex& (0+255),b
 17699  002B86  0E00               	movlw	0
 17700  002B88  0100               	movlb	0	; () banked
 17701  002B8A  6FC3               	movwf	(??_cal_pt100_temperature_ex+1)& (0+255),b
 17702  002B8C  0100               	movlb	0	; () banked
 17703  002B8E  51C2               	movf	??_cal_pt100_temperature_ex& (0+255),w,b
 17704  002B90  243C               	addwf	_fpSysData,w,c
 17705  002B92  0100               	movlb	0	; () banked
 17706  002B94  6FC4               	movwf	(??_cal_pt100_temperature_ex+2)& (0+255),b
 17707  002B96  0100               	movlb	0	; () banked
 17708  002B98  51C3               	movf	(??_cal_pt100_temperature_ex+1)& (0+255),w,b
 17709  002B9A  203D               	addwfc	_fpSysData+1,w,c
 17710  002B9C  0100               	movlb	0	; () banked
 17711  002B9E  6FC5               	movwf	(??_cal_pt100_temperature_ex+3)& (0+255),b
 17712  002BA0  0E00               	movlw	0
 17713  002BA2  203E               	addwfc	_fpSysData+2,w,c
 17714  002BA4  0100               	movlb	0	; () banked
 17715  002BA6  6FC6               	movwf	(??_cal_pt100_temperature_ex+4)& (0+255),b
 17716  002BA8  0100               	movlb	0	; () banked
 17717  002BAA  51C4               	movf	(??_cal_pt100_temperature_ex+2)& (0+255),w,b
 17718  002BAC  0100               	movlb	0	; () banked
 17719  002BAE  6F60               	movwf	___xxtofl@val& (0+255),b
 17720  002BB0  0100               	movlb	0	; () banked
 17721  002BB2  51C5               	movf	(??_cal_pt100_temperature_ex+3)& (0+255),w,b
 17722  002BB4  0100               	movlb	0	; () banked
 17723  002BB6  6F61               	movwf	(___xxtofl@val+1)& (0+255),b
 17724  002BB8  0100               	movlb	0	; () banked
 17725  002BBA  51C6               	movf	(??_cal_pt100_temperature_ex+4)& (0+255),w,b
 17726  002BBC  0100               	movlb	0	; () banked
 17727  002BBE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 17728  002BC0  0100               	movlb	0	; () banked
 17729  002BC2  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 17730  002BC4  0E00               	movlw	0
 17731  002BC6  ECED  F01E         	call	___xxtofl
 17732  002BCA  C060  F0CB         	movff	?___xxtofl,cal_pt100_temperature_ex@f2
 17733  002BCE  C061  F0CC         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f2+1
 17734  002BD2  C062  F0CD         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f2+2
 17735  002BD6  C063  F0CE         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f2+3
 17736                           
 17737                           ;data.c: 569: f1=f1-f2;
 17738  002BDA  C0CB  F0A0         	movff	cal_pt100_temperature_ex@f2,___flneg@f1
 17739  002BDE  C0CC  F0A1         	movff	cal_pt100_temperature_ex@f2+1,___flneg@f1+1
 17740  002BE2  C0CD  F0A2         	movff	cal_pt100_temperature_ex@f2+2,___flneg@f1+2
 17741  002BE6  C0CE  F0A3         	movff	cal_pt100_temperature_ex@f2+3,___flneg@f1+3
 17742  002BEA  EC8C  F03E         	call	___flneg	;wreg free
 17743  002BEE  C0A0  F0A4         	movff	?___flneg,___fladd@b
 17744  002BF2  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 17745  002BF6  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 17746  002BFA  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 17747  002BFE  C0CF  F0A8         	movff	cal_pt100_temperature_ex@f1,___fladd@a
 17748  002C02  C0D0  F0A9         	movff	cal_pt100_temperature_ex@f1+1,___fladd@a+1
 17749  002C06  C0D1  F0AA         	movff	cal_pt100_temperature_ex@f1+2,___fladd@a+2
 17750  002C0A  C0D2  F0AB         	movff	cal_pt100_temperature_ex@f1+3,___fladd@a+3
 17751  002C0E  EC40  F009         	call	___fladd	;wreg free
 17752  002C12  C0A4  F0CF         	movff	?___fladd,cal_pt100_temperature_ex@f1
 17753  002C16  C0A5  F0D0         	movff	?___fladd+1,cal_pt100_temperature_ex@f1+1
 17754  002C1A  C0A6  F0D1         	movff	?___fladd+2,cal_pt100_temperature_ex@f1+2
 17755  002C1E  C0A7  F0D2         	movff	?___fladd+3,cal_pt100_temperature_ex@f1+3
 17756                           
 17757                           ;data.c: 571: f2=(float)(fpSysData->ex_pressLine);
 17758  002C22  0E6C               	movlw	108
 17759  002C24  0100               	movlb	0	; () banked
 17760  002C26  6FC2               	movwf	??_cal_pt100_temperature_ex& (0+255),b
 17761  002C28  0E00               	movlw	0
 17762  002C2A  0100               	movlb	0	; () banked
 17763  002C2C  6FC3               	movwf	(??_cal_pt100_temperature_ex+1)& (0+255),b
 17764  002C2E  0100               	movlb	0	; () banked
 17765  002C30  51C2               	movf	??_cal_pt100_temperature_ex& (0+255),w,b
 17766  002C32  243C               	addwf	_fpSysData,w,c
 17767  002C34  0100               	movlb	0	; () banked
 17768  002C36  6FC4               	movwf	(??_cal_pt100_temperature_ex+2)& (0+255),b
 17769  002C38  0100               	movlb	0	; () banked
 17770  002C3A  51C3               	movf	(??_cal_pt100_temperature_ex+1)& (0+255),w,b
 17771  002C3C  203D               	addwfc	_fpSysData+1,w,c
 17772  002C3E  0100               	movlb	0	; () banked
 17773  002C40  6FC5               	movwf	(??_cal_pt100_temperature_ex+3)& (0+255),b
 17774  002C42  0E00               	movlw	0
 17775  002C44  203E               	addwfc	_fpSysData+2,w,c
 17776  002C46  0100               	movlb	0	; () banked
 17777  002C48  6FC6               	movwf	(??_cal_pt100_temperature_ex+4)& (0+255),b
 17778  002C4A  0100               	movlb	0	; () banked
 17779  002C4C  51C4               	movf	(??_cal_pt100_temperature_ex+2)& (0+255),w,b
 17780  002C4E  0100               	movlb	0	; () banked
 17781  002C50  6F60               	movwf	___xxtofl@val& (0+255),b
 17782  002C52  0100               	movlb	0	; () banked
 17783  002C54  51C5               	movf	(??_cal_pt100_temperature_ex+3)& (0+255),w,b
 17784  002C56  0100               	movlb	0	; () banked
 17785  002C58  6F61               	movwf	(___xxtofl@val+1)& (0+255),b
 17786  002C5A  0100               	movlb	0	; () banked
 17787  002C5C  51C6               	movf	(??_cal_pt100_temperature_ex+4)& (0+255),w,b
 17788  002C5E  0100               	movlb	0	; () banked
 17789  002C60  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 17790  002C62  0100               	movlb	0	; () banked
 17791  002C64  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 17792  002C66  0E00               	movlw	0
 17793  002C68  ECED  F01E         	call	___xxtofl
 17794  002C6C  C060  F0CB         	movff	?___xxtofl,cal_pt100_temperature_ex@f2
 17795  002C70  C061  F0CC         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f2+1
 17796  002C74  C062  F0CD         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f2+2
 17797  002C78  C063  F0CE         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f2+3
 17798                           
 17799                           ;data.c: 572: f2/=1000;
 17800  002C7C  C0CB  F087         	movff	cal_pt100_temperature_ex@f2,___fldiv@b
 17801  002C80  C0CC  F088         	movff	cal_pt100_temperature_ex@f2+1,___fldiv@b+1
 17802  002C84  C0CD  F089         	movff	cal_pt100_temperature_ex@f2+2,___fldiv@b+2
 17803  002C88  C0CE  F08A         	movff	cal_pt100_temperature_ex@f2+3,___fldiv@b+3
 17804  002C8C  0E00               	movlw	0
 17805  002C8E  0100               	movlb	0	; () banked
 17806  002C90  6F8B               	movwf	___fldiv@a& (0+255),b
 17807  002C92  0E00               	movlw	0
 17808  002C94  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17809  002C96  0E7A               	movlw	122
 17810  002C98  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17811  002C9A  0E44               	movlw	68
 17812  002C9C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17813  002C9E  EC48  F012         	call	___fldiv	;wreg free
 17814  002CA2  C087  F0CB         	movff	?___fldiv,cal_pt100_temperature_ex@f2
 17815  002CA6  C088  F0CC         	movff	?___fldiv+1,cal_pt100_temperature_ex@f2+1
 17816  002CAA  C089  F0CD         	movff	?___fldiv+2,cal_pt100_temperature_ex@f2+2
 17817  002CAE  C08A  F0CE         	movff	?___fldiv+3,cal_pt100_temperature_ex@f2+3
 17818                           
 17819                           ;data.c: 573: f1=f1*f2;
 17820  002CB2  C0CF  F06E         	movff	cal_pt100_temperature_ex@f1,___flmul@b
 17821  002CB6  C0D0  F06F         	movff	cal_pt100_temperature_ex@f1+1,___flmul@b+1
 17822  002CBA  C0D1  F070         	movff	cal_pt100_temperature_ex@f1+2,___flmul@b+2
 17823  002CBE  C0D2  F071         	movff	cal_pt100_temperature_ex@f1+3,___flmul@b+3
 17824  002CC2  C0CB  F072         	movff	cal_pt100_temperature_ex@f2,___flmul@a
 17825  002CC6  C0CC  F073         	movff	cal_pt100_temperature_ex@f2+1,___flmul@a+1
 17826  002CCA  C0CD  F074         	movff	cal_pt100_temperature_ex@f2+2,___flmul@a+2
 17827  002CCE  C0CE  F075         	movff	cal_pt100_temperature_ex@f2+3,___flmul@a+3
 17828  002CD2  EC94  F00B         	call	___flmul	;wreg free
 17829  002CD6  C06E  F0CF         	movff	?___flmul,cal_pt100_temperature_ex@f1
 17830  002CDA  C06F  F0D0         	movff	?___flmul+1,cal_pt100_temperature_ex@f1+1
 17831  002CDE  C070  F0D1         	movff	?___flmul+2,cal_pt100_temperature_ex@f1+2
 17832  002CE2  C071  F0D2         	movff	?___flmul+3,cal_pt100_temperature_ex@f1+3
 17833                           
 17834                           ;data.c: 575: f1/=1000;
 17835  002CE6  C0CF  F087         	movff	cal_pt100_temperature_ex@f1,___fldiv@b
 17836  002CEA  C0D0  F088         	movff	cal_pt100_temperature_ex@f1+1,___fldiv@b+1
 17837  002CEE  C0D1  F089         	movff	cal_pt100_temperature_ex@f1+2,___fldiv@b+2
 17838  002CF2  C0D2  F08A         	movff	cal_pt100_temperature_ex@f1+3,___fldiv@b+3
 17839  002CF6  0E00               	movlw	0
 17840  002CF8  0100               	movlb	0	; () banked
 17841  002CFA  6F8B               	movwf	___fldiv@a& (0+255),b
 17842  002CFC  0E00               	movlw	0
 17843  002CFE  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17844  002D00  0E7A               	movlw	122
 17845  002D02  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17846  002D04  0E44               	movlw	68
 17847  002D06  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17848  002D08  EC48  F012         	call	___fldiv	;wreg free
 17849  002D0C  C087  F0CF         	movff	?___fldiv,cal_pt100_temperature_ex@f1
 17850  002D10  C088  F0D0         	movff	?___fldiv+1,cal_pt100_temperature_ex@f1+1
 17851  002D14  C089  F0D1         	movff	?___fldiv+2,cal_pt100_temperature_ex@f1+2
 17852  002D18  C08A  F0D2         	movff	?___fldiv+3,cal_pt100_temperature_ex@f1+3
 17853                           
 17854                           ;data.c: 576: f2=(1.484e-4f);
 17855  002D1C  0ED2               	movlw	210
 17856  002D1E  0100               	movlb	0	; () banked
 17857  002D20  6FCB               	movwf	cal_pt100_temperature_ex@f2& (0+255),b
 17858  002D22  0E9B               	movlw	155
 17859  002D24  6FCC               	movwf	(cal_pt100_temperature_ex@f2+1)& (0+255),b
 17860  002D26  0E1B               	movlw	27
 17861  002D28  6FCD               	movwf	(cal_pt100_temperature_ex@f2+2)& (0+255),b
 17862  002D2A  0E39               	movlw	57
 17863  002D2C  6FCE               	movwf	(cal_pt100_temperature_ex@f2+3)& (0+255),b
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;data.c: 577: f2=f2*f1*f1;
 17867  002D2E  C0CF  F072         	movff	cal_pt100_temperature_ex@f1,___flmul@a
 17868  002D32  C0D0  F073         	movff	cal_pt100_temperature_ex@f1+1,___flmul@a+1
 17869  002D36  C0D1  F074         	movff	cal_pt100_temperature_ex@f1+2,___flmul@a+2
 17870  002D3A  C0D2  F075         	movff	cal_pt100_temperature_ex@f1+3,___flmul@a+3
 17871  002D3E  C0CB  F06E         	movff	cal_pt100_temperature_ex@f2,___flmul@b
 17872  002D42  C0CC  F06F         	movff	cal_pt100_temperature_ex@f2+1,___flmul@b+1
 17873  002D46  C0CD  F070         	movff	cal_pt100_temperature_ex@f2+2,___flmul@b+2
 17874  002D4A  C0CE  F071         	movff	cal_pt100_temperature_ex@f2+3,___flmul@b+3
 17875  002D4E  EC94  F00B         	call	___flmul	;wreg free
 17876  002D52  C06E  F0C7         	movff	?___flmul,_cal_pt100_temperature_ex$4418
 17877  002D56  C06F  F0C8         	movff	?___flmul+1,_cal_pt100_temperature_ex$4418+1
 17878  002D5A  C070  F0C9         	movff	?___flmul+2,_cal_pt100_temperature_ex$4418+2
 17879  002D5E  C071  F0CA         	movff	?___flmul+3,_cal_pt100_temperature_ex$4418+3
 17880                           
 17881                           ;data.c: 577: f2=f2*f1*f1;
 17882  002D62  C0C7  F06E         	movff	_cal_pt100_temperature_ex$4418,___flmul@b
 17883  002D66  C0C8  F06F         	movff	_cal_pt100_temperature_ex$4418+1,___flmul@b+1
 17884  002D6A  C0C9  F070         	movff	_cal_pt100_temperature_ex$4418+2,___flmul@b+2
 17885  002D6E  C0CA  F071         	movff	_cal_pt100_temperature_ex$4418+3,___flmul@b+3
 17886  002D72  C0CF  F072         	movff	cal_pt100_temperature_ex@f1,___flmul@a
 17887  002D76  C0D0  F073         	movff	cal_pt100_temperature_ex@f1+1,___flmul@a+1
 17888  002D7A  C0D1  F074         	movff	cal_pt100_temperature_ex@f1+2,___flmul@a+2
 17889  002D7E  C0D2  F075         	movff	cal_pt100_temperature_ex@f1+3,___flmul@a+3
 17890  002D82  EC94  F00B         	call	___flmul	;wreg free
 17891  002D86  C06E  F0CB         	movff	?___flmul,cal_pt100_temperature_ex@f2
 17892  002D8A  C06F  F0CC         	movff	?___flmul+1,cal_pt100_temperature_ex@f2+1
 17893  002D8E  C070  F0CD         	movff	?___flmul+2,cal_pt100_temperature_ex@f2+2
 17894  002D92  C071  F0CE         	movff	?___flmul+3,cal_pt100_temperature_ex@f2+3
 17895                           
 17896                           ;data.c: 578: f1=f1+f2;
 17897  002D96  C0CF  F0A4         	movff	cal_pt100_temperature_ex@f1,___fladd@b
 17898  002D9A  C0D0  F0A5         	movff	cal_pt100_temperature_ex@f1+1,___fladd@b+1
 17899  002D9E  C0D1  F0A6         	movff	cal_pt100_temperature_ex@f1+2,___fladd@b+2
 17900  002DA2  C0D2  F0A7         	movff	cal_pt100_temperature_ex@f1+3,___fladd@b+3
 17901  002DA6  C0CB  F0A8         	movff	cal_pt100_temperature_ex@f2,___fladd@a
 17902  002DAA  C0CC  F0A9         	movff	cal_pt100_temperature_ex@f2+1,___fladd@a+1
 17903  002DAE  C0CD  F0AA         	movff	cal_pt100_temperature_ex@f2+2,___fladd@a+2
 17904  002DB2  C0CE  F0AB         	movff	cal_pt100_temperature_ex@f2+3,___fladd@a+3
 17905  002DB6  EC40  F009         	call	___fladd	;wreg free
 17906  002DBA  C0A4  F0CF         	movff	?___fladd,cal_pt100_temperature_ex@f1
 17907  002DBE  C0A5  F0D0         	movff	?___fladd+1,cal_pt100_temperature_ex@f1+1
 17908  002DC2  C0A6  F0D1         	movff	?___fladd+2,cal_pt100_temperature_ex@f1+2
 17909  002DC6  C0A7  F0D2         	movff	?___fladd+3,cal_pt100_temperature_ex@f1+3
 17910                           
 17911                           ;data.c: 580: f1=f1*1000;
 17912  002DCA  C0CF  F06E         	movff	cal_pt100_temperature_ex@f1,___flmul@b
 17913  002DCE  C0D0  F06F         	movff	cal_pt100_temperature_ex@f1+1,___flmul@b+1
 17914  002DD2  C0D1  F070         	movff	cal_pt100_temperature_ex@f1+2,___flmul@b+2
 17915  002DD6  C0D2  F071         	movff	cal_pt100_temperature_ex@f1+3,___flmul@b+3
 17916  002DDA  0E00               	movlw	0
 17917  002DDC  0100               	movlb	0	; () banked
 17918  002DDE  6F72               	movwf	___flmul@a& (0+255),b
 17919  002DE0  0E00               	movlw	0
 17920  002DE2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 17921  002DE4  0E7A               	movlw	122
 17922  002DE6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 17923  002DE8  0E44               	movlw	68
 17924  002DEA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 17925  002DEC  EC94  F00B         	call	___flmul	;wreg free
 17926  002DF0  C06E  F0CF         	movff	?___flmul,cal_pt100_temperature_ex@f1
 17927  002DF4  C06F  F0D0         	movff	?___flmul+1,cal_pt100_temperature_ex@f1+1
 17928  002DF8  C070  F0D1         	movff	?___flmul+2,cal_pt100_temperature_ex@f1+2
 17929  002DFC  C071  F0D2         	movff	?___flmul+3,cal_pt100_temperature_ex@f1+3
 17930                           
 17931                           ;data.c: 581: rtExTemperatureIn= (int32_t)f1;
 17932  002E00  C0CF  F0B8         	movff	cal_pt100_temperature_ex@f1,___fltol@f1
 17933  002E04  C0D0  F0B9         	movff	cal_pt100_temperature_ex@f1+1,___fltol@f1+1
 17934  002E08  C0D1  F0BA         	movff	cal_pt100_temperature_ex@f1+2,___fltol@f1+2
 17935  002E0C  C0D2  F0BB         	movff	cal_pt100_temperature_ex@f1+3,___fltol@f1+3
 17936  002E10  EC01  F02B         	call	___fltol	;wreg free
 17937  002E14  C0B8  F14E         	movff	?___fltol,_rtExTemperatureIn	;volatile
 17938  002E18  C0B9  F14F         	movff	?___fltol+1,_rtExTemperatureIn+1	;volatile
 17939  002E1C  C0BA  F150         	movff	?___fltol+2,_rtExTemperatureIn+2	;volatile
 17940  002E20  C0BB  F151         	movff	?___fltol+3,_rtExTemperatureIn+3	;volatile
 17941  002E24  0012               	return		;funcret
 17942  002E26                     __end_of_cal_pt100_temperature_ex:
 17943                           	opt stack 0
 17944                           tosu	equ	0xFFF
 17945                           tosh	equ	0xFFE
 17946                           tosl	equ	0xFFD
 17947                           pclath	equ	0xFFA
 17948                           tblptru	equ	0xFF8
 17949                           tblptrh	equ	0xFF7
 17950                           tblptrl	equ	0xFF6
 17951                           tablat	equ	0xFF5
 17952                           prodh	equ	0xFF4
 17953                           prodl	equ	0xFF3
 17954                           intcon	equ	0xFF2
 17955                           indf0	equ	0xFEF
 17956                           postinc0	equ	0xFEE
 17957                           fsr0h	equ	0xFEA
 17958                           fsr0l	equ	0xFE9
 17959                           wreg	equ	0xFE8
 17960                           postinc1	equ	0xFE6
 17961                           postdec1	equ	0xFE5
 17962                           plusw1	equ	0xFE3
 17963                           fsr1h	equ	0xFE2
 17964                           fsr1l	equ	0xFE1
 17965                           indf2	equ	0xFDF
 17966                           postinc2	equ	0xFDE
 17967                           postdec2	equ	0xFDD
 17968                           plusw2	equ	0xFDB
 17969                           fsr2h	equ	0xFDA
 17970                           fsr2l	equ	0xFD9
 17971                           status	equ	0xFD8
 17972                           
 17973 ;; *************** function _cal_press *****************
 17974 ;; Defined at:
 17975 ;;		line 520 in file "src/api/data.c"
 17976 ;; Parameters:    Size  Location     Type
 17977 ;;		None
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;  xin             8   58[BANK0 ] struct .
 17980 ;;  tabrow          2   56[BANK0 ] PTR struct .
 17981 ;;		 -> prCalibTabDef.prCalibRow(156), prCalibTabDef(162), 
 17982 ;;  ret             1   55[BANK0 ] unsigned char 
 17983 ;; Return value:  Size  Location     Type
 17984 ;;                  1    wreg      unsigned char 
 17985 ;; Registers used:
 17986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17987 ;; Tracked objects:
 17988 ;;		On entry : 0/0
 17989 ;;		On exit  : 0/0
 17990 ;;		Unchanged: 0/0
 17991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17993 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17995 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17996 ;;Total ram usage:       11 bytes
 17997 ;; Hardware stack levels used:    1
 17998 ;; Hardware stack levels required when called:    6
 17999 ;; This function calls:
 18000 ;;		_m_interp1_cal_p_v
 18001 ;; This function is called by:
 18002 ;;		_event_process_rtc
 18003 ;; This function uses a non-reentrant model
 18004 ;;
 18005                           
 18006                           	psect	text94
 18007  006EDC                     __ptext94:
 18008                           	opt stack 0
 18009  006EDC                     _cal_press:
 18010                           	opt stack 22
 18011                           
 18012                           ;data.c: 522: uint8_t ret;
 18013                           ;data.c: 523: st_prData xin={0};
 18014                           
 18015                           ;incstack = 0
 18016  006EDC  EE21  F023         	lfsr	2,cal_press@F7793
 18017  006EE0  EE10  F09A         	lfsr	1,cal_press@xin
 18018  006EE4  0E07               	movlw	7
 18019  006EE6                     u11871:
 18020  006EE6  CFDB FFE3          	movff	plusw2,plusw1
 18021  006EEA  06E8               	decf	wreg,f,c
 18022  006EEC  E2FC               	bc	u11871
 18023                           
 18024                           ;data.c: 524: xin.pValue=0;
 18025  006EEE  0E00               	movlw	0
 18026  006EF0  0100               	movlb	0	; () banked
 18027  006EF2  6F9A               	movwf	cal_press@xin& (0+255),b
 18028  006EF4  0E00               	movlw	0
 18029  006EF6  6F9B               	movwf	(cal_press@xin+1)& (0+255),b
 18030  006EF8  0E00               	movlw	0
 18031  006EFA  6F9C               	movwf	(cal_press@xin+2)& (0+255),b
 18032  006EFC  0E00               	movlw	0
 18033  006EFE  6F9D               	movwf	(cal_press@xin+3)& (0+255),b
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;data.c: 525: xin.pAdcValue=adc_pressure;
 18037  006F00  C180  F09E         	movff	_adc_pressure,cal_press@xin+4	;volatile
 18038  006F04  C181  F09F         	movff	_adc_pressure+1,cal_press@xin+5	;volatile
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;data.c: 526: xin.tAdcValue=0;
 18042  006F08  0E00               	movlw	0
 18043  006F0A  0100               	movlb	0	; () banked
 18044  006F0C  6FA1               	movwf	(cal_press@xin+7)& (0+255),b
 18045  006F0E  0E00               	movlw	0
 18046  006F10  6FA0               	movwf	(cal_press@xin+6)& (0+255),b
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;data.c: 527: st_prCalibRowDef* tabrow;
 18050                           ;data.c: 528: tabrow= &prCalibTabDef.prCalibRow[0];
 18051  006F12  0E04               	movlw	low (_prCalibTabDef+4)
 18052  006F14  0100               	movlb	0	; () banked
 18053  006F16  6F98               	movwf	cal_press@tabrow& (0+255),b
 18054  006F18  0E03               	movlw	high (_prCalibTabDef+4)
 18055  006F1A  0100               	movlb	0	; () banked
 18056  006F1C  6F99               	movwf	(cal_press@tabrow+1)& (0+255),b
 18057                           
 18058                           ; BSR set to: 0
 18059                           ;data.c: 529: ret=m_interp1_cal_p_v(tabrow,&xin,(0));
 18060  006F1E  C098  F07A         	movff	cal_press@tabrow,m_interp1_cal_p_v@tabrow
 18061  006F22  C099  F07B         	movff	cal_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 18062  006F26  0E9A               	movlw	low cal_press@xin
 18063  006F28  0100               	movlb	0	; () banked
 18064  006F2A  6F7C               	movwf	m_interp1_cal_p_v@xin& (0+255),b
 18065  006F2C  0E00               	movlw	high cal_press@xin
 18066  006F2E  0100               	movlb	0	; () banked
 18067  006F30  6F7D               	movwf	(m_interp1_cal_p_v@xin+1)& (0+255),b
 18068  006F32  0E00               	movlw	0
 18069  006F34  0100               	movlb	0	; () banked
 18070  006F36  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 18071  006F38  0E00               	movlw	0
 18072  006F3A  0100               	movlb	0	; () banked
 18073  006F3C  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 18074  006F3E  EC37  F004         	call	_m_interp1_cal_p_v	;wreg free
 18075  006F42  0100               	movlb	0	; () banked
 18076  006F44  6F97               	movwf	cal_press@ret& (0+255),b
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;data.c: 530: rtPressure=xin.pValue;
 18080  006F46  C09A  F152         	movff	cal_press@xin,_rtPressure	;volatile
 18081  006F4A  C09B  F153         	movff	cal_press@xin+1,_rtPressure+1	;volatile
 18082  006F4E  C09C  F154         	movff	cal_press@xin+2,_rtPressure+2	;volatile
 18083  006F52  C09D  F155         	movff	cal_press@xin+3,_rtPressure+3	;volatile
 18084  006F56  0012               	return	
 18085  006F58                     __end_of_cal_press:
 18086                           	opt stack 0
 18087                           tosu	equ	0xFFF
 18088                           tosh	equ	0xFFE
 18089                           tosl	equ	0xFFD
 18090                           pclath	equ	0xFFA
 18091                           tblptru	equ	0xFF8
 18092                           tblptrh	equ	0xFF7
 18093                           tblptrl	equ	0xFF6
 18094                           tablat	equ	0xFF5
 18095                           prodh	equ	0xFF4
 18096                           prodl	equ	0xFF3
 18097                           intcon	equ	0xFF2
 18098                           indf0	equ	0xFEF
 18099                           postinc0	equ	0xFEE
 18100                           fsr0h	equ	0xFEA
 18101                           fsr0l	equ	0xFE9
 18102                           wreg	equ	0xFE8
 18103                           postinc1	equ	0xFE6
 18104                           postdec1	equ	0xFE5
 18105                           plusw1	equ	0xFE3
 18106                           fsr1h	equ	0xFE2
 18107                           fsr1l	equ	0xFE1
 18108                           indf2	equ	0xFDF
 18109                           postinc2	equ	0xFDE
 18110                           postdec2	equ	0xFDD
 18111                           plusw2	equ	0xFDB
 18112                           fsr2h	equ	0xFDA
 18113                           fsr2l	equ	0xFD9
 18114                           status	equ	0xFD8
 18115                           
 18116 ;; *************** function _cal_diff_press *****************
 18117 ;; Defined at:
 18118 ;;		line 485 in file "src/api/data.c"
 18119 ;; Parameters:    Size  Location     Type
 18120 ;;		None
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;  tmpx           24    2[BANK2 ] struct .[3]
 18123 ;;  xin             2   26[BANK2 ] PTR struct .
 18124 ;;		 -> x_prDiffData(8), 
 18125 ;;  tabrow          2    0[BANK2 ] PTR struct .
 18126 ;;		 -> diff_prCalibTabDef.prCalibRow(156), diff_prCalibTabDef(162), 
 18127 ;;  i               1   28[BANK2 ] unsigned char 
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      unsigned char 
 18130 ;; Registers used:
 18131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18138 ;;      Locals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Totals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;Total ram usage:       29 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    7
 18144 ;; This function calls:
 18145 ;;		_cal_diff_hight_to_vol_h
 18146 ;;		_cal_diff_hight_to_vol_v
 18147 ;;		_cal_diff_p_to_h
 18148 ;;		_m_interp1_cal_p_t
 18149 ;;		_m_interp1_cal_p_v
 18150 ;; This function is called by:
 18151 ;;		_event_process_rtc
 18152 ;; This function uses a non-reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text95
 18156  0054F0                     __ptext95:
 18157                           	opt stack 0
 18158  0054F0                     _cal_diff_press:
 18159                           	opt stack 21
 18160                           
 18161                           ;data.c: 487: st_prData* xin= &x_prDiffData;
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;incstack = 0
 18165  0054F0  0EDE               	movlw	low _x_prDiffData
 18166  0054F2  0102               	movlb	2	; () banked
 18167  0054F4  6FDC               	movwf	cal_diff_press@xin& (0+255),b
 18168  0054F6  0E01               	movlw	high _x_prDiffData
 18169  0054F8  0102               	movlb	2	; () banked
 18170  0054FA  6FDD               	movwf	(cal_diff_press@xin+1)& (0+255),b
 18171                           
 18172                           ; BSR set to: 2
 18173                           ;data.c: 489: st_prData tmpx[3];
 18174                           ;data.c: 490: uint8_t i=0;
 18175  0054FC  0E00               	movlw	0
 18176  0054FE  0102               	movlb	2	; () banked
 18177  005500  6FDE               	movwf	cal_diff_press@i& (0+255),b
 18178                           
 18179                           ; BSR set to: 2
 18180                           ;data.c: 491: st_prCalibRowDef* tabrow;
 18181                           ;data.c: 492: for(i=0;i<diff_prCalibTabDef.rowCount;i++){
 18182  005502  0E00               	movlw	0
 18183  005504  0102               	movlb	2	; () banked
 18184  005506  6FDE               	movwf	cal_diff_press@i& (0+255),b
 18185  005508  D022               	goto	l12997
 18186  00550A                     l12991:
 18187                           
 18188                           ; BSR set to: 2
 18189                           ;data.c: 493: tabrow = &(diff_prCalibTabDef.prCalibRow[i]);
 18190  00550A  0102               	movlb	2	; () banked
 18191  00550C  51DE               	movf	cal_diff_press@i& (0+255),w,b
 18192  00550E  0D34               	mullw	52
 18193  005510  0E04               	movlw	low (_diff_prCalibTabDef+4)
 18194  005512  24F3               	addwf	prodl,w,c
 18195  005514  0102               	movlb	2	; () banked
 18196  005516  6FC2               	movwf	cal_diff_press@tabrow& (0+255),b
 18197  005518  0E02               	movlw	high (_diff_prCalibTabDef+4)
 18198  00551A  20F4               	addwfc	prodh,w,c
 18199  00551C  0102               	movlb	2	; () banked
 18200  00551E  6FC3               	movwf	(cal_diff_press@tabrow+1)& (0+255),b
 18201                           
 18202                           ; BSR set to: 2
 18203                           ;data.c: 494: m_interp1_cal_p_v(tabrow,xin,&tmpx[i]);
 18204  005520  C2C2  F07A         	movff	cal_diff_press@tabrow,m_interp1_cal_p_v@tabrow
 18205  005524  C2C3  F07B         	movff	cal_diff_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 18206  005528  C2DC  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_v@xin
 18207  00552C  C2DD  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_v@xin+1
 18208  005530  0102               	movlb	2	; () banked
 18209  005532  51DE               	movf	cal_diff_press@i& (0+255),w,b
 18210  005534  0D08               	mullw	8
 18211  005536  0EC4               	movlw	low cal_diff_press@tmpx
 18212  005538  24F3               	addwf	prodl,w,c
 18213  00553A  0100               	movlb	0	; () banked
 18214  00553C  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 18215  00553E  0E02               	movlw	high cal_diff_press@tmpx
 18216  005540  20F4               	addwfc	prodh,w,c
 18217  005542  0100               	movlb	0	; () banked
 18218  005544  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 18219  005546  EC37  F004         	call	_m_interp1_cal_p_v	;wreg free
 18220  00554A  0102               	movlb	2	; () banked
 18221  00554C  2BDE               	incf	cal_diff_press@i& (0+255),f,b
 18222  00554E                     l12997:
 18223                           
 18224                           ; BSR set to: 2
 18225  00554E  0102               	movlb	2	; () banked
 18226  005550  5100               	movf	_diff_prCalibTabDef& (0+255),w,b
 18227  005552  0102               	movlb	2	; () banked
 18228  005554  5DDE               	subwf	cal_diff_press@i& (0+255),w,b
 18229  005556  A0D8               	btfss	status,0,c
 18230  005558  D7D8               	goto	l12991
 18231                           
 18232                           ; BSR set to: 2
 18233                           ;data.c: 495: }
 18234                           ;data.c: 496: m_interp1_cal_p_t(&tmpx[0],xin,i);
 18235                           
 18236                           ; BSR set to: 2
 18237  00555A  0EC4               	movlw	low cal_diff_press@tmpx
 18238  00555C  0100               	movlb	0	; () banked
 18239  00555E  6F7A               	movwf	m_interp1_cal_p_t@tmpx& (0+255),b
 18240  005560  0E02               	movlw	high cal_diff_press@tmpx
 18241  005562  0100               	movlb	0	; () banked
 18242  005564  6F7B               	movwf	(m_interp1_cal_p_t@tmpx+1)& (0+255),b
 18243  005566  C2DC  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_t@xin
 18244  00556A  C2DD  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_t@xin+1
 18245  00556E  C2DE  F07E         	movff	cal_diff_press@i,m_interp1_cal_p_t@tmpxLen
 18246  005572  ECE7  F00D         	call	_m_interp1_cal_p_t	;wreg free
 18247                           
 18248                           ;data.c: 498: rtDiffPressure=xin->pValue;
 18249  005576  C2DC  FFD9         	movff	cal_diff_press@xin,fsr2l
 18250  00557A  C2DD  FFDA         	movff	cal_diff_press@xin+1,fsr2h
 18251  00557E  CFDE F025          	movff	postinc2,_rtDiffPressure	;volatile
 18252  005582  CFDE F026          	movff	postinc2,_rtDiffPressure+1	;volatile
 18253  005586  CFDE F027          	movff	postinc2,_rtDiffPressure+2	;volatile
 18254  00558A  CFDE F028          	movff	postinc2,_rtDiffPressure+3	;volatile
 18255                           
 18256                           ;data.c: 500: cal_diff_p_to_h(xin);
 18257  00558E  C2DC  F0C2         	movff	cal_diff_press@xin,cal_diff_p_to_h@xin
 18258  005592  C2DD  F0C3         	movff	cal_diff_press@xin+1,cal_diff_p_to_h@xin+1
 18259  005596  EC8A  F02D         	call	_cal_diff_p_to_h	;wreg free
 18260                           
 18261                           ;data.c: 501: if(fpSysData->pos==HOTIZONTAL){
 18262  00559A  0E04               	movlw	4
 18263  00559C  243C               	addwf	_fpSysData,w,c
 18264  00559E  6EF6               	movwf	tblptrl,c
 18265  0055A0  0E00               	movlw	0
 18266  0055A2  203D               	addwfc	_fpSysData+1,w,c
 18267  0055A4  6EF7               	movwf	tblptrh,c
 18268  0055A6  0E00               	movlw	0
 18269  0055A8  203E               	addwfc	_fpSysData+2,w,c
 18270  0055AA  6EF8               	movwf	tblptru,c
 18271  0055AC  0008               	tblrd		*
 18272  0055AE  50F5               	movf	tablat,w,c
 18273  0055B0  0900               	iorlw	0
 18274  0055B2  A4D8               	btfss	status,2,c
 18275  0055B4  D013               	goto	l13009
 18276                           
 18277                           ;data.c: 502: rtVolume=cal_diff_hight_to_vol_h(rtHight);
 18278  0055B6  C021  F0E6         	movff	_rtHight,cal_diff_hight_to_vol_h@h	;volatile
 18279  0055BA  C022  F0E7         	movff	_rtHight+1,cal_diff_hight_to_vol_h@h+1	;volatile
 18280  0055BE  C023  F0E8         	movff	_rtHight+2,cal_diff_hight_to_vol_h@h+2	;volatile
 18281  0055C2  C024  F0E9         	movff	_rtHight+3,cal_diff_hight_to_vol_h@h+3	;volatile
 18282  0055C6  EC13  F017         	call	_cal_diff_hight_to_vol_h	;wreg free
 18283  0055CA  C0E6  F15A         	movff	?_cal_diff_hight_to_vol_h,_rtVolume	;volatile
 18284  0055CE  C0E7  F15B         	movff	?_cal_diff_hight_to_vol_h+1,_rtVolume+1	;volatile
 18285  0055D2  C0E8  F15C         	movff	?_cal_diff_hight_to_vol_h+2,_rtVolume+2	;volatile
 18286  0055D6  C0E9  F15D         	movff	?_cal_diff_hight_to_vol_h+3,_rtVolume+3	;volatile
 18287                           
 18288                           ;data.c: 503: }else{
 18289  0055DA  0012               	return	
 18290  0055DC                     l13009:
 18291                           
 18292                           ;data.c: 504: rtVolume=cal_diff_hight_to_vol_v(rtHight);
 18293  0055DC  C021  F0E6         	movff	_rtHight,cal_diff_hight_to_vol_v@h	;volatile
 18294  0055E0  C022  F0E7         	movff	_rtHight+1,cal_diff_hight_to_vol_v@h+1	;volatile
 18295  0055E4  C023  F0E8         	movff	_rtHight+2,cal_diff_hight_to_vol_v@h+2	;volatile
 18296  0055E8  C024  F0E9         	movff	_rtHight+3,cal_diff_hight_to_vol_v@h+3	;volatile
 18297  0055EC  EC6E  F000         	call	_cal_diff_hight_to_vol_v	;wreg free
 18298  0055F0  C0E6  F15A         	movff	?_cal_diff_hight_to_vol_v,_rtVolume	;volatile
 18299  0055F4  C0E7  F15B         	movff	?_cal_diff_hight_to_vol_v+1,_rtVolume+1	;volatile
 18300  0055F8  C0E8  F15C         	movff	?_cal_diff_hight_to_vol_v+2,_rtVolume+2	;volatile
 18301  0055FC  C0E9  F15D         	movff	?_cal_diff_hight_to_vol_v+3,_rtVolume+3	;volatile
 18302  005600  0012               	return	
 18303  005602                     __end_of_cal_diff_press:
 18304                           	opt stack 0
 18305                           tosu	equ	0xFFF
 18306                           tosh	equ	0xFFE
 18307                           tosl	equ	0xFFD
 18308                           pclath	equ	0xFFA
 18309                           tblptru	equ	0xFF8
 18310                           tblptrh	equ	0xFF7
 18311                           tblptrl	equ	0xFF6
 18312                           tablat	equ	0xFF5
 18313                           prodh	equ	0xFF4
 18314                           prodl	equ	0xFF3
 18315                           intcon	equ	0xFF2
 18316                           indf0	equ	0xFEF
 18317                           postinc0	equ	0xFEE
 18318                           fsr0h	equ	0xFEA
 18319                           fsr0l	equ	0xFE9
 18320                           wreg	equ	0xFE8
 18321                           postinc1	equ	0xFE6
 18322                           postdec1	equ	0xFE5
 18323                           plusw1	equ	0xFE3
 18324                           fsr1h	equ	0xFE2
 18325                           fsr1l	equ	0xFE1
 18326                           indf2	equ	0xFDF
 18327                           postinc2	equ	0xFDE
 18328                           postdec2	equ	0xFDD
 18329                           plusw2	equ	0xFDB
 18330                           fsr2h	equ	0xFDA
 18331                           fsr2l	equ	0xFD9
 18332                           status	equ	0xFD8
 18333                           
 18334 ;; *************** function _m_interp1_cal_p_v *****************
 18335 ;; Defined at:
 18336 ;;		line 324 in file "src/api/data.c"
 18337 ;; Parameters:    Size  Location     Type
 18338 ;;  tabrow          2   26[BANK0 ] PTR struct .
 18339 ;;		 -> prCalibTabDef.prCalibRow(156), diff_prCalibTabDef.prCalibRow(156), prCalibTabDef(162), diff_prCalibTabDef(162), 
 18340 ;;  xin             2   28[BANK0 ] PTR struct .
 18341 ;;		 -> cal_press@xin(8), x_prDiffData(8), 
 18342 ;;  xout            2   30[BANK0 ] PTR struct .
 18343 ;;		 -> cal_diff_press@tmpx(24), NULL(0), 
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;  x               4   50[BANK0 ] long 
 18346 ;;  y               4   46[BANK0 ] long 
 18347 ;;  i               1   54[BANK0 ] unsigned char 
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      unsigned char 
 18350 ;; Registers used:
 18351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18352 ;; Tracked objects:
 18353 ;;		On entry : 0/0
 18354 ;;		On exit  : 0/0
 18355 ;;		Unchanged: 0/0
 18356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18357 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18358 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18359 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18360 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18361 ;;Total ram usage:       29 bytes
 18362 ;; Hardware stack levels used:    1
 18363 ;; Hardware stack levels required when called:    5
 18364 ;; This function calls:
 18365 ;;		___aldiv
 18366 ;;		___lmul
 18367 ;; This function is called by:
 18368 ;;		_cal_diff_press
 18369 ;;		_cal_press
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           	psect	text96
 18374  00086E                     __ptext96:
 18375                           	opt stack 0
 18376  00086E                     _m_interp1_cal_p_v:
 18377                           	opt stack 22
 18378                           
 18379                           ;data.c: 326: uint8_t i;
 18380                           ;data.c: 327: int32_t x,y;
 18381                           ;data.c: 328: for(i=0;i< (tabrow->pCount) - 1 ;i++){
 18382                           
 18383                           ;incstack = 0
 18384  00086E  0E00               	movlw	0
 18385  000870  0100               	movlb	0	; () banked
 18386  000872  6F96               	movwf	m_interp1_cal_p_v@i& (0+255),b
 18387  000874  D0C1               	goto	l12387
 18388  000876                     l12375:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;data.c: 330: if(tabrow->prCalibPoint[i].pAdcValue < tabrow->prCalibPoint[i+1].pAdcValue
      +                          ){
 18392  000876  0100               	movlb	0	; () banked
 18393  000878  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18394  00087A  0100               	movlb	0	; () banked
 18395  00087C  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 18396  00087E  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 18397  000880  0100               	movlb	0	; () banked
 18398  000882  90D8               	bcf	status,0,c
 18399  000884  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18400  000886  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18401  000888  0100               	movlb	0	; () banked
 18402  00088A  90D8               	bcf	status,0,c
 18403  00088C  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18404  00088E  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18405  000890  0100               	movlb	0	; () banked
 18406  000892  90D8               	bcf	status,0,c
 18407  000894  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18408  000896  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18409  000898  0E0C               	movlw	12
 18410  00089A  0100               	movlb	0	; () banked
 18411  00089C  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 18412  00089E  0E00               	movlw	0
 18413  0008A0  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18414  0008A2  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 18415  0008A6  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 18416  0008AA  0100               	movlb	0	; () banked
 18417  0008AC  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18418  0008AE  0100               	movlb	0	; () banked
 18419  0008B0  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18420  0008B2  0100               	movlb	0	; () banked
 18421  0008B4  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18422  0008B6  0100               	movlb	0	; () banked
 18423  0008B8  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18424  0008BA  0E04               	movlw	4
 18425  0008BC  0100               	movlb	0	; () banked
 18426  0008BE  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18427  0008C0  6ED9               	movwf	fsr2l,c
 18428  0008C2  0E00               	movlw	0
 18429  0008C4  0100               	movlb	0	; () banked
 18430  0008C6  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18431  0008C8  6EDA               	movwf	fsr2h,c
 18432  0008CA  0100               	movlb	0	; () banked
 18433  0008CC  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18434  0008CE  0D08               	mullw	8
 18435  0008D0  0E04               	movlw	4
 18436  0008D2  26F3               	addwf	prodl,f,c
 18437  0008D4  0E00               	movlw	0
 18438  0008D6  22F4               	addwfc	prodh,f,c
 18439  0008D8  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 18440  0008DC  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 18441  0008E0  50F3               	movf	prodl,w,c
 18442  0008E2  0100               	movlb	0	; () banked
 18443  0008E4  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 18444  0008E6  50F4               	movf	prodh,w,c
 18445  0008E8  0100               	movlb	0	; () banked
 18446  0008EA  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 18447  0008EC  0E04               	movlw	4
 18448  0008EE  0100               	movlb	0	; () banked
 18449  0008F0  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 18450  0008F2  6EE1               	movwf	fsr1l,c
 18451  0008F4  0E00               	movlw	0
 18452  0008F6  0100               	movlb	0	; () banked
 18453  0008F8  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 18454  0008FA  6EE2               	movwf	fsr1h,c
 18455  0008FC  50DE               	movf	postinc2,w,c
 18456  0008FE  5CE6               	subwf	postinc1,w,c
 18457  000900  50E6               	movf	postinc1,w,c
 18458  000902  0A80               	xorlw	128
 18459  000904  0100               	movlb	0	; () banked
 18460  000906  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 18461  000908  50DE               	movf	postinc2,w,c
 18462  00090A  0A80               	xorlw	128
 18463  00090C  0100               	movlb	0	; () banked
 18464  00090E  598A               	subwfb	(??_m_interp1_cal_p_v+10)& (0+255),w,b
 18465  000910  B0D8               	btfsc	status,0,c
 18466  000912  D03E               	goto	l12381
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;data.c: 331: if(xin->pAdcValue <= tabrow->prCalibPoint[i+1].pAdcValue)break;
 18470  000914  0100               	movlb	0	; () banked
 18471  000916  EE20 F004          	lfsr	2,4
 18472  00091A  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 18473  00091C  26D9               	addwf	fsr2l,f,c
 18474  00091E  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 18475  000920  22DA               	addwfc	fsr2h,f,c
 18476  000922  0100               	movlb	0	; () banked
 18477  000924  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18478  000926  0100               	movlb	0	; () banked
 18479  000928  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 18480  00092A  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 18481  00092C  0100               	movlb	0	; () banked
 18482  00092E  90D8               	bcf	status,0,c
 18483  000930  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18484  000932  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18485  000934  0100               	movlb	0	; () banked
 18486  000936  90D8               	bcf	status,0,c
 18487  000938  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18488  00093A  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18489  00093C  0100               	movlb	0	; () banked
 18490  00093E  90D8               	bcf	status,0,c
 18491  000940  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18492  000942  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18493  000944  0E0C               	movlw	12
 18494  000946  0100               	movlb	0	; () banked
 18495  000948  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18496  00094A  0E00               	movlw	0
 18497  00094C  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18498  00094E  C07A  F084         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+4
 18499  000952  C07B  F085         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+5
 18500  000956  0100               	movlb	0	; () banked
 18501  000958  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18502  00095A  0100               	movlb	0	; () banked
 18503  00095C  2784               	addwf	(??_m_interp1_cal_p_v+4)& (0+255),f,b
 18504  00095E  0100               	movlb	0	; () banked
 18505  000960  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18506  000962  0100               	movlb	0	; () banked
 18507  000964  2385               	addwfc	(??_m_interp1_cal_p_v+5)& (0+255),f,b
 18508  000966  0E04               	movlw	4
 18509  000968  0100               	movlb	0	; () banked
 18510  00096A  2584               	addwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 18511  00096C  6EE1               	movwf	fsr1l,c
 18512  00096E  0E00               	movlw	0
 18513  000970  0100               	movlb	0	; () banked
 18514  000972  2185               	addwfc	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 18515  000974  6EE2               	movwf	fsr1h,c
 18516  000976  50DE               	movf	postinc2,w,c
 18517  000978  5CE6               	subwf	postinc1,w,c
 18518  00097A  50E6               	movf	postinc1,w,c
 18519  00097C  0A80               	xorlw	128
 18520  00097E  0100               	movlb	0	; () banked
 18521  000980  6F88               	movwf	(??_m_interp1_cal_p_v+8)& (0+255),b
 18522  000982  50DE               	movf	postinc2,w,c
 18523  000984  0A80               	xorlw	128
 18524  000986  0100               	movlb	0	; () banked
 18525  000988  5988               	subwfb	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 18526  00098A  B0D8               	btfsc	status,0,c
 18527  00098C  D060               	goto	l12389
 18528  00098E  D032               	goto	l12385
 18529  000990                     l12381:
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;data.c: 333: if(xin->pAdcValue >= tabrow->prCalibPoint[i+1].pAdcValue)break;
 18533  000990  0100               	movlb	0	; () banked
 18534  000992  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18535  000994  0100               	movlb	0	; () banked
 18536  000996  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 18537  000998  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 18538  00099A  0100               	movlb	0	; () banked
 18539  00099C  90D8               	bcf	status,0,c
 18540  00099E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18541  0009A0  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18542  0009A2  0100               	movlb	0	; () banked
 18543  0009A4  90D8               	bcf	status,0,c
 18544  0009A6  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18545  0009A8  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18546  0009AA  0100               	movlb	0	; () banked
 18547  0009AC  90D8               	bcf	status,0,c
 18548  0009AE  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18549  0009B0  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18550  0009B2  0E0C               	movlw	12
 18551  0009B4  0100               	movlb	0	; () banked
 18552  0009B6  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 18553  0009B8  0E00               	movlw	0
 18554  0009BA  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18555  0009BC  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 18556  0009C0  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 18557  0009C4  0100               	movlb	0	; () banked
 18558  0009C6  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18559  0009C8  0100               	movlb	0	; () banked
 18560  0009CA  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18561  0009CC  0100               	movlb	0	; () banked
 18562  0009CE  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18563  0009D0  0100               	movlb	0	; () banked
 18564  0009D2  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18565  0009D4  0E04               	movlw	4
 18566  0009D6  0100               	movlb	0	; () banked
 18567  0009D8  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18568  0009DA  6ED9               	movwf	fsr2l,c
 18569  0009DC  0E00               	movlw	0
 18570  0009DE  0100               	movlb	0	; () banked
 18571  0009E0  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18572  0009E2  6EDA               	movwf	fsr2h,c
 18573  0009E4  0100               	movlb	0	; () banked
 18574  0009E6  EE10 F004          	lfsr	1,4
 18575  0009EA  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 18576  0009EC  26E1               	addwf	fsr1l,f,c
 18577  0009EE  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 18578  0009F0  22E2               	addwfc	fsr1h,f,c
 18579  0009F2  D7C1               	goto	L6
 18580  0009F4                     l12385:
 18581                           
 18582                           ; BSR set to: 0
 18583  0009F4  0100               	movlb	0	; () banked
 18584  0009F6  2B96               	incf	m_interp1_cal_p_v@i& (0+255),f,b
 18585  0009F8                     l12387:
 18586                           
 18587                           ; BSR set to: 0
 18588  0009F8  0EFF               	movlw	255
 18589  0009FA  0100               	movlb	0	; () banked
 18590  0009FC  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 18591  0009FE  0EFF               	movlw	255
 18592  000A00  0100               	movlb	0	; () banked
 18593  000A02  6F81               	movwf	(??_m_interp1_cal_p_v+1)& (0+255),b
 18594  000A04  C07A  FFD9         	movff	m_interp1_cal_p_v@tabrow,fsr2l
 18595  000A08  C07B  FFDA         	movff	m_interp1_cal_p_v@tabrow+1,fsr2h
 18596  000A0C  50DF               	movf	indf2,w,c
 18597  000A0E  0100               	movlb	0	; () banked
 18598  000A10  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 18599  000A12  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 18600  000A14  0100               	movlb	0	; () banked
 18601  000A16  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18602  000A18  0100               	movlb	0	; () banked
 18603  000A1A  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18604  000A1C  0100               	movlb	0	; () banked
 18605  000A1E  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18606  000A20  0100               	movlb	0	; () banked
 18607  000A22  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18608  000A24  0100               	movlb	0	; () banked
 18609  000A26  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18610  000A28  0100               	movlb	0	; () banked
 18611  000A2A  6F84               	movwf	(??_m_interp1_cal_p_v+4)& (0+255),b
 18612  000A2C  6B85               	clrf	(??_m_interp1_cal_p_v+5)& (0+255),b
 18613  000A2E  0100               	movlb	0	; () banked
 18614  000A30  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18615  000A32  0100               	movlb	0	; () banked
 18616  000A34  5D84               	subwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 18617  000A36  0100               	movlb	0	; () banked
 18618  000A38  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 18619  000A3A  0A80               	xorlw	128
 18620  000A3C  0100               	movlb	0	; () banked
 18621  000A3E  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 18622  000A40  0100               	movlb	0	; () banked
 18623  000A42  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18624  000A44  0A80               	xorlw	128
 18625  000A46  0100               	movlb	0	; () banked
 18626  000A48  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 18627  000A4A  A0D8               	btfss	status,0,c
 18628  000A4C  D714               	goto	l12375
 18629  000A4E                     l12389:
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;data.c: 334: }
 18633                           ;data.c: 335: }
 18634                           ;data.c: 336: xin->pValue=tabrow->prCalibPoint[i].pValue;
 18635  000A4E  0100               	movlb	0	; () banked
 18636  000A50  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18637  000A52  0D08               	mullw	8
 18638  000A54  0E04               	movlw	4
 18639  000A56  26F3               	addwf	prodl,f,c
 18640  000A58  0E00               	movlw	0
 18641  000A5A  22F4               	addwfc	prodh,f,c
 18642  000A5C  50F3               	movf	prodl,w,c
 18643  000A5E  0100               	movlb	0	; () banked
 18644  000A60  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 18645  000A62  6ED9               	movwf	fsr2l,c
 18646  000A64  50F4               	movf	prodh,w,c
 18647  000A66  0100               	movlb	0	; () banked
 18648  000A68  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 18649  000A6A  6EDA               	movwf	fsr2h,c
 18650  000A6C  C07C  FFE1         	movff	m_interp1_cal_p_v@xin,fsr1l
 18651  000A70  C07D  FFE2         	movff	m_interp1_cal_p_v@xin+1,fsr1h
 18652  000A74  CFDE FFE6          	movff	postinc2,postinc1
 18653  000A78  CFDE FFE6          	movff	postinc2,postinc1
 18654  000A7C  CFDE FFE6          	movff	postinc2,postinc1
 18655  000A80  CFDE FFE6          	movff	postinc2,postinc1
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;data.c: 337: y = tabrow->prCalibPoint[i+1].pValue - tabrow->prCalibPoint[i].pValue ;
 18659  000A84  0100               	movlb	0	; () banked
 18660  000A86  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18661  000A88  0100               	movlb	0	; () banked
 18662  000A8A  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 18663  000A8C  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 18664  000A8E  0100               	movlb	0	; () banked
 18665  000A90  90D8               	bcf	status,0,c
 18666  000A92  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18667  000A94  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18668  000A96  0100               	movlb	0	; () banked
 18669  000A98  90D8               	bcf	status,0,c
 18670  000A9A  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18671  000A9C  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18672  000A9E  0100               	movlb	0	; () banked
 18673  000AA0  90D8               	bcf	status,0,c
 18674  000AA2  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18675  000AA4  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18676  000AA6  0E0C               	movlw	12
 18677  000AA8  0100               	movlb	0	; () banked
 18678  000AAA  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 18679  000AAC  0E00               	movlw	0
 18680  000AAE  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18681  000AB0  0100               	movlb	0	; () banked
 18682  000AB2  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18683  000AB4  0100               	movlb	0	; () banked
 18684  000AB6  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 18685  000AB8  6ED9               	movwf	fsr2l,c
 18686  000ABA  0100               	movlb	0	; () banked
 18687  000ABC  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18688  000ABE  0100               	movlb	0	; () banked
 18689  000AC0  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 18690  000AC2  6EDA               	movwf	fsr2h,c
 18691  000AC4  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 18692  000AC8  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 18693  000ACC  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 18694  000AD0  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_v+5
 18695  000AD4  0100               	movlb	0	; () banked
 18696  000AD6  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18697  000AD8  0D08               	mullw	8
 18698  000ADA  0E04               	movlw	4
 18699  000ADC  26F3               	addwf	prodl,f,c
 18700  000ADE  0E00               	movlw	0
 18701  000AE0  22F4               	addwfc	prodh,f,c
 18702  000AE2  50F3               	movf	prodl,w,c
 18703  000AE4  0100               	movlb	0	; () banked
 18704  000AE6  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 18705  000AE8  6ED9               	movwf	fsr2l,c
 18706  000AEA  50F4               	movf	prodh,w,c
 18707  000AEC  0100               	movlb	0	; () banked
 18708  000AEE  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 18709  000AF0  6EDA               	movwf	fsr2h,c
 18710  000AF2  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_v+6
 18711  000AF6  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_v+7
 18712  000AFA  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 18713  000AFE  CFDE F089          	movff	postinc2,??_m_interp1_cal_p_v+9
 18714  000B02  0100               	movlb	0	; () banked
 18715  000B04  1F86               	comf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 18716  000B06  1F87               	comf	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 18717  000B08  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18718  000B0A  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18719  000B0C  2B86               	incf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 18720  000B0E  0E00               	movlw	0
 18721  000B10  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 18722  000B12  2388               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18723  000B14  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18724  000B16  0100               	movlb	0	; () banked
 18725  000B18  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18726  000B1A  0100               	movlb	0	; () banked
 18727  000B1C  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 18728  000B1E  0100               	movlb	0	; () banked
 18729  000B20  6F8E               	movwf	m_interp1_cal_p_v@y& (0+255),b
 18730  000B22  0100               	movlb	0	; () banked
 18731  000B24  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18732  000B26  0100               	movlb	0	; () banked
 18733  000B28  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 18734  000B2A  0100               	movlb	0	; () banked
 18735  000B2C  6F8F               	movwf	(m_interp1_cal_p_v@y+1)& (0+255),b
 18736  000B2E  0100               	movlb	0	; () banked
 18737  000B30  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 18738  000B32  0100               	movlb	0	; () banked
 18739  000B34  2188               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 18740  000B36  0100               	movlb	0	; () banked
 18741  000B38  6F90               	movwf	(m_interp1_cal_p_v@y+2)& (0+255),b
 18742  000B3A  0100               	movlb	0	; () banked
 18743  000B3C  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 18744  000B3E  0100               	movlb	0	; () banked
 18745  000B40  2189               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),w,b
 18746  000B42  0100               	movlb	0	; () banked
 18747  000B44  6F91               	movwf	(m_interp1_cal_p_v@y+3)& (0+255),b
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;data.c: 338: x = tabrow->prCalibPoint[i+1].pAdcValue - tabrow->prCalibPoint[i].pAdcValu
      +                          e;
 18751  000B46  0100               	movlb	0	; () banked
 18752  000B48  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18753  000B4A  0100               	movlb	0	; () banked
 18754  000B4C  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 18755  000B4E  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 18756  000B50  0100               	movlb	0	; () banked
 18757  000B52  90D8               	bcf	status,0,c
 18758  000B54  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18759  000B56  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18760  000B58  0100               	movlb	0	; () banked
 18761  000B5A  90D8               	bcf	status,0,c
 18762  000B5C  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18763  000B5E  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18764  000B60  0100               	movlb	0	; () banked
 18765  000B62  90D8               	bcf	status,0,c
 18766  000B64  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 18767  000B66  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18768  000B68  0E0C               	movlw	12
 18769  000B6A  0100               	movlb	0	; () banked
 18770  000B6C  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 18771  000B6E  0E00               	movlw	0
 18772  000B70  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 18773  000B72  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 18774  000B76  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 18775  000B7A  0100               	movlb	0	; () banked
 18776  000B7C  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18777  000B7E  0100               	movlb	0	; () banked
 18778  000B80  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 18779  000B82  0100               	movlb	0	; () banked
 18780  000B84  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18781  000B86  0100               	movlb	0	; () banked
 18782  000B88  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 18783  000B8A  0E04               	movlw	4
 18784  000B8C  0100               	movlb	0	; () banked
 18785  000B8E  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18786  000B90  6ED9               	movwf	fsr2l,c
 18787  000B92  0E00               	movlw	0
 18788  000B94  0100               	movlb	0	; () banked
 18789  000B96  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18790  000B98  6EDA               	movwf	fsr2h,c
 18791  000B9A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 18792  000B9E  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 18793  000BA2  0100               	movlb	0	; () banked
 18794  000BA4  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18795  000BA6  0D08               	mullw	8
 18796  000BA8  0E04               	movlw	4
 18797  000BAA  26F3               	addwf	prodl,f,c
 18798  000BAC  0E00               	movlw	0
 18799  000BAE  22F4               	addwfc	prodh,f,c
 18800  000BB0  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 18801  000BB4  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 18802  000BB8  50F3               	movf	prodl,w,c
 18803  000BBA  0100               	movlb	0	; () banked
 18804  000BBC  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 18805  000BBE  50F4               	movf	prodh,w,c
 18806  000BC0  0100               	movlb	0	; () banked
 18807  000BC2  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 18808  000BC4  0E04               	movlw	4
 18809  000BC6  0100               	movlb	0	; () banked
 18810  000BC8  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 18811  000BCA  6ED9               	movwf	fsr2l,c
 18812  000BCC  0E00               	movlw	0
 18813  000BCE  0100               	movlb	0	; () banked
 18814  000BD0  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 18815  000BD2  6EDA               	movwf	fsr2h,c
 18816  000BD4  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 18817  000BD8  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 18818  000BDC  0100               	movlb	0	; () banked
 18819  000BDE  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18820  000BE0  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18821  000BE2  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18822  000BE4  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18823  000BE6  0100               	movlb	0	; () banked
 18824  000BE8  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 18825  000BEA  0100               	movlb	0	; () banked
 18826  000BEC  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18827  000BEE  0100               	movlb	0	; () banked
 18828  000BF0  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 18829  000BF2  0100               	movlb	0	; () banked
 18830  000BF4  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18831  000BF6  C088  F092         	movff	??_m_interp1_cal_p_v+8,m_interp1_cal_p_v@x
 18832  000BFA  C089  F093         	movff	??_m_interp1_cal_p_v+9,m_interp1_cal_p_v@x+1
 18833  000BFE  0100               	movlb	0	; () banked
 18834  000C00  0E00               	movlw	0
 18835  000C02  BF93               	btfsc	(m_interp1_cal_p_v@x+1)& (0+255),7,b
 18836  000C04  0EFF               	movlw	-1
 18837  000C06  6F94               	movwf	(m_interp1_cal_p_v@x+2)& (0+255),b
 18838  000C08  6F95               	movwf	(m_interp1_cal_p_v@x+3)& (0+255),b
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;data.c: 339: if(x != 0){
 18842  000C0A  0100               	movlb	0	; () banked
 18843  000C0C  5192               	movf	m_interp1_cal_p_v@x& (0+255),w,b
 18844  000C0E  0100               	movlb	0	; () banked
 18845  000C10  1193               	iorwf	(m_interp1_cal_p_v@x+1)& (0+255),w,b
 18846  000C12  0100               	movlb	0	; () banked
 18847  000C14  1194               	iorwf	(m_interp1_cal_p_v@x+2)& (0+255),w,b
 18848  000C16  0100               	movlb	0	; () banked
 18849  000C18  1195               	iorwf	(m_interp1_cal_p_v@x+3)& (0+255),w,b
 18850  000C1A  B4D8               	btfsc	status,2,c
 18851  000C1C  D08B               	goto	l12399
 18852                           
 18853                           ; BSR set to: 0
 18854                           ;data.c: 340: xin->pValue = xin->pValue + (y/x)*(xin->pAdcValue - tabrow->prCalibPoint[i
      +                          ].pAdcValue);
 18855  000C1E  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 18856  000C22  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 18857  000C26  CFDE F080          	movff	postinc2,??_m_interp1_cal_p_v
 18858  000C2A  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_v+1
 18859  000C2E  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 18860  000C32  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 18861  000C36  C092  F064         	movff	m_interp1_cal_p_v@x,___aldiv@divisor
 18862  000C3A  C093  F065         	movff	m_interp1_cal_p_v@x+1,___aldiv@divisor+1
 18863  000C3E  C094  F066         	movff	m_interp1_cal_p_v@x+2,___aldiv@divisor+2
 18864  000C42  C095  F067         	movff	m_interp1_cal_p_v@x+3,___aldiv@divisor+3
 18865  000C46  C08E  F060         	movff	m_interp1_cal_p_v@y,___aldiv@dividend
 18866  000C4A  C08F  F061         	movff	m_interp1_cal_p_v@y+1,___aldiv@dividend+1
 18867  000C4E  C090  F062         	movff	m_interp1_cal_p_v@y+2,___aldiv@dividend+2
 18868  000C52  C091  F063         	movff	m_interp1_cal_p_v@y+3,___aldiv@dividend+3
 18869  000C56  ECEB  F029         	call	___aldiv	;wreg free
 18870  000C5A  C060  F06E         	movff	?___aldiv,___lmul@multiplier
 18871  000C5E  C061  F06F         	movff	?___aldiv+1,___lmul@multiplier+1
 18872  000C62  C062  F070         	movff	?___aldiv+2,___lmul@multiplier+2
 18873  000C66  C063  F071         	movff	?___aldiv+3,___lmul@multiplier+3
 18874  000C6A  0100               	movlb	0	; () banked
 18875  000C6C  EE20 F004          	lfsr	2,4
 18876  000C70  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 18877  000C72  26D9               	addwf	fsr2l,f,c
 18878  000C74  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 18879  000C76  22DA               	addwfc	fsr2h,f,c
 18880  000C78  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 18881  000C7C  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 18882  000C80  0100               	movlb	0	; () banked
 18883  000C82  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 18884  000C84  0D08               	mullw	8
 18885  000C86  0E04               	movlw	4
 18886  000C88  26F3               	addwf	prodl,f,c
 18887  000C8A  0E00               	movlw	0
 18888  000C8C  22F4               	addwfc	prodh,f,c
 18889  000C8E  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 18890  000C92  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 18891  000C96  50F3               	movf	prodl,w,c
 18892  000C98  0100               	movlb	0	; () banked
 18893  000C9A  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 18894  000C9C  50F4               	movf	prodh,w,c
 18895  000C9E  0100               	movlb	0	; () banked
 18896  000CA0  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 18897  000CA2  0E04               	movlw	4
 18898  000CA4  0100               	movlb	0	; () banked
 18899  000CA6  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 18900  000CA8  6ED9               	movwf	fsr2l,c
 18901  000CAA  0E00               	movlw	0
 18902  000CAC  0100               	movlb	0	; () banked
 18903  000CAE  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 18904  000CB0  6EDA               	movwf	fsr2h,c
 18905  000CB2  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 18906  000CB6  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 18907  000CBA  0100               	movlb	0	; () banked
 18908  000CBC  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18909  000CBE  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18910  000CC0  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18911  000CC2  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18912  000CC4  0100               	movlb	0	; () banked
 18913  000CC6  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 18914  000CC8  0100               	movlb	0	; () banked
 18915  000CCA  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 18916  000CCC  0100               	movlb	0	; () banked
 18917  000CCE  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 18918  000CD0  0100               	movlb	0	; () banked
 18919  000CD2  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 18920  000CD4  C088  F072         	movff	??_m_interp1_cal_p_v+8,___lmul@multiplicand
 18921  000CD8  C089  F073         	movff	??_m_interp1_cal_p_v+9,___lmul@multiplicand+1
 18922  000CDC  0100               	movlb	0	; () banked
 18923  000CDE  0E00               	movlw	0
 18924  000CE0  BF73               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18925  000CE2  0EFF               	movlw	-1
 18926  000CE4  6F74               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18927  000CE6  6F75               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18928  000CE8  EC26  F038         	call	___lmul	;wreg free
 18929  000CEC  0100               	movlb	0	; () banked
 18930  000CEE  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 18931  000CF0  0100               	movlb	0	; () banked
 18932  000CF2  256E               	addwf	?___lmul& (0+255),w,b
 18933  000CF4  0100               	movlb	0	; () banked
 18934  000CF6  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 18935  000CF8  0100               	movlb	0	; () banked
 18936  000CFA  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 18937  000CFC  0100               	movlb	0	; () banked
 18938  000CFE  216F               	addwfc	(?___lmul+1)& (0+255),w,b
 18939  000D00  0100               	movlb	0	; () banked
 18940  000D02  6F8B               	movwf	(??_m_interp1_cal_p_v+11)& (0+255),b
 18941  000D04  0100               	movlb	0	; () banked
 18942  000D06  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 18943  000D08  0100               	movlb	0	; () banked
 18944  000D0A  2170               	addwfc	(?___lmul+2)& (0+255),w,b
 18945  000D0C  0100               	movlb	0	; () banked
 18946  000D0E  6F8C               	movwf	(??_m_interp1_cal_p_v+12)& (0+255),b
 18947  000D10  0100               	movlb	0	; () banked
 18948  000D12  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 18949  000D14  0100               	movlb	0	; () banked
 18950  000D16  2171               	addwfc	(?___lmul+3)& (0+255),w,b
 18951  000D18  0100               	movlb	0	; () banked
 18952  000D1A  6F8D               	movwf	(??_m_interp1_cal_p_v+13)& (0+255),b
 18953  000D1C  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 18954  000D20  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 18955  000D24  C08A  FFDE         	movff	??_m_interp1_cal_p_v+10,postinc2
 18956  000D28  C08B  FFDE         	movff	??_m_interp1_cal_p_v+11,postinc2
 18957  000D2C  C08C  FFDE         	movff	??_m_interp1_cal_p_v+12,postinc2
 18958  000D30  C08D  FFDE         	movff	??_m_interp1_cal_p_v+13,postinc2
 18959  000D34                     l12399:
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;data.c: 341: }
 18963                           ;data.c: 342: if(xout){
 18964  000D34  0100               	movlb	0	; () banked
 18965  000D36  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 18966  000D38  0100               	movlb	0	; () banked
 18967  000D3A  117F               	iorwf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 18968  000D3C  B4D8               	btfsc	status,2,c
 18969  000D3E  D034               	goto	l12407
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;data.c: 343: xout->pValue = xin->pValue;
 18973  000D40  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 18974  000D44  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 18975  000D48  C07E  FFE1         	movff	m_interp1_cal_p_v@xout,fsr1l
 18976  000D4C  C07F  FFE2         	movff	m_interp1_cal_p_v@xout+1,fsr1h
 18977  000D50  CFDE FFE6          	movff	postinc2,postinc1
 18978  000D54  CFDE FFE6          	movff	postinc2,postinc1
 18979  000D58  CFDE FFE6          	movff	postinc2,postinc1
 18980  000D5C  CFDE FFE6          	movff	postinc2,postinc1
 18981                           
 18982                           ; BSR set to: 0
 18983                           ;data.c: 344: xout->pAdcValue = xin->pAdcValue;
 18984  000D60  0100               	movlb	0	; () banked
 18985  000D62  EE20 F004          	lfsr	2,4
 18986  000D66  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 18987  000D68  26D9               	addwf	fsr2l,f,c
 18988  000D6A  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 18989  000D6C  22DA               	addwfc	fsr2h,f,c
 18990  000D6E  0100               	movlb	0	; () banked
 18991  000D70  EE10 F004          	lfsr	1,4
 18992  000D74  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 18993  000D76  26E1               	addwf	fsr1l,f,c
 18994  000D78  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 18995  000D7A  22E2               	addwfc	fsr1h,f,c
 18996  000D7C  CFDE FFE6          	movff	postinc2,postinc1
 18997  000D80  CFDD FFE5          	movff	postdec2,postdec1
 18998                           
 18999                           ; BSR set to: 0
 19000                           ;data.c: 345: xout->tAdcValue = tabrow->prCalibPoint[0].tAdcValue;
 19001  000D84  0100               	movlb	0	; () banked
 19002  000D86  EE20 F00A          	lfsr	2,10
 19003  000D8A  517A               	movf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 19004  000D8C  26D9               	addwf	fsr2l,f,c
 19005  000D8E  517B               	movf	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 19006  000D90  22DA               	addwfc	fsr2h,f,c
 19007  000D92  0100               	movlb	0	; () banked
 19008  000D94  EE10 F006          	lfsr	1,6
 19009  000D98  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 19010  000D9A  26E1               	addwf	fsr1l,f,c
 19011  000D9C  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 19012  000D9E  22E2               	addwfc	fsr1h,f,c
 19013  000DA0  CFDE FFE6          	movff	postinc2,postinc1
 19014  000DA4  CFDD FFE5          	movff	postdec2,postdec1
 19015  000DA8                     l12407:
 19016                           
 19017                           ; BSR set to: 0
 19018                           ;data.c: 346: }
 19019                           ;data.c: 347: return i;
 19020  000DA8  0100               	movlb	0	; () banked
 19021  000DAA  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 19022  000DAC  0012               	return	
 19023  000DAE                     __end_of_m_interp1_cal_p_v:
 19024                           	opt stack 0
 19025                           tosu	equ	0xFFF
 19026                           tosh	equ	0xFFE
 19027                           tosl	equ	0xFFD
 19028                           pclath	equ	0xFFA
 19029                           tblptru	equ	0xFF8
 19030                           tblptrh	equ	0xFF7
 19031                           tblptrl	equ	0xFF6
 19032                           tablat	equ	0xFF5
 19033                           prodh	equ	0xFF4
 19034                           prodl	equ	0xFF3
 19035                           intcon	equ	0xFF2
 19036                           indf0	equ	0xFEF
 19037                           postinc0	equ	0xFEE
 19038                           fsr0h	equ	0xFEA
 19039                           fsr0l	equ	0xFE9
 19040                           wreg	equ	0xFE8
 19041                           postinc1	equ	0xFE6
 19042                           postdec1	equ	0xFE5
 19043                           plusw1	equ	0xFE3
 19044                           fsr1h	equ	0xFE2
 19045                           fsr1l	equ	0xFE1
 19046                           indf2	equ	0xFDF
 19047                           postinc2	equ	0xFDE
 19048                           postdec2	equ	0xFDD
 19049                           plusw2	equ	0xFDB
 19050                           fsr2h	equ	0xFDA
 19051                           fsr2l	equ	0xFD9
 19052                           status	equ	0xFD8
 19053                           
 19054 ;; *************** function _m_interp1_cal_p_t *****************
 19055 ;; Defined at:
 19056 ;;		line 353 in file "src/api/data.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;  tmpx            2   26[BANK0 ] PTR struct .
 19059 ;;		 -> cal_diff_press@tmpx(24), 
 19060 ;;  xin             2   28[BANK0 ] PTR struct .
 19061 ;;		 -> x_prDiffData(8), 
 19062 ;;  tmpxLen         1   30[BANK0 ] unsigned char 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  x               4   49[BANK0 ] long 
 19065 ;;  y               4   45[BANK0 ] long 
 19066 ;;  i               1   53[BANK0 ] unsigned char 
 19067 ;; Return value:  Size  Location     Type
 19068 ;;                  1    wreg      unsigned char 
 19069 ;; Registers used:
 19070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19071 ;; Tracked objects:
 19072 ;;		On entry : 0/0
 19073 ;;		On exit  : 0/0
 19074 ;;		Unchanged: 0/0
 19075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19076 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19077 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19078 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19079 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19080 ;;Total ram usage:       28 bytes
 19081 ;; Hardware stack levels used:    1
 19082 ;; Hardware stack levels required when called:    5
 19083 ;; This function calls:
 19084 ;;		___aldiv
 19085 ;;		___lmul
 19086 ;; This function is called by:
 19087 ;;		_cal_diff_press
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091                           	psect	text97
 19092  001BCE                     __ptext97:
 19093                           	opt stack 0
 19094  001BCE                     _m_interp1_cal_p_t:
 19095                           	opt stack 22
 19096                           
 19097                           ;data.c: 355: uint8_t i;
 19098                           ;data.c: 356: int32_t x,y;
 19099                           ;data.c: 357: for(i=0;i<tmpxLen-1;i++){
 19100                           
 19101                           ; BSR set to: 0
 19102                           ;incstack = 0
 19103  001BCE  0E00               	movlw	0
 19104  001BD0  0100               	movlb	0	; () banked
 19105  001BD2  6F95               	movwf	m_interp1_cal_p_t@i& (0+255),b
 19106  001BD4  D0BD               	goto	l12425
 19107  001BD6                     l12413:
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;data.c: 358: if(tmpx[i].tAdcValue < tmpx[i+1].tAdcValue){
 19111  001BD6  0100               	movlb	0	; () banked
 19112  001BD8  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19113  001BDA  0100               	movlb	0	; () banked
 19114  001BDC  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 19115  001BDE  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 19116  001BE0  0100               	movlb	0	; () banked
 19117  001BE2  90D8               	bcf	status,0,c
 19118  001BE4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19119  001BE6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19120  001BE8  0100               	movlb	0	; () banked
 19121  001BEA  90D8               	bcf	status,0,c
 19122  001BEC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19123  001BEE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19124  001BF0  0100               	movlb	0	; () banked
 19125  001BF2  90D8               	bcf	status,0,c
 19126  001BF4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19127  001BF6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19128  001BF8  0E08               	movlw	8
 19129  001BFA  0100               	movlb	0	; () banked
 19130  001BFC  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 19131  001BFE  0E00               	movlw	0
 19132  001C00  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19133  001C02  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 19134  001C06  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 19135  001C0A  0100               	movlb	0	; () banked
 19136  001C0C  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19137  001C0E  0100               	movlb	0	; () banked
 19138  001C10  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19139  001C12  0100               	movlb	0	; () banked
 19140  001C14  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19141  001C16  0100               	movlb	0	; () banked
 19142  001C18  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19143  001C1A  0E06               	movlw	6
 19144  001C1C  0100               	movlb	0	; () banked
 19145  001C1E  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19146  001C20  6ED9               	movwf	fsr2l,c
 19147  001C22  0E00               	movlw	0
 19148  001C24  0100               	movlb	0	; () banked
 19149  001C26  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19150  001C28  6EDA               	movwf	fsr2h,c
 19151  001C2A  0100               	movlb	0	; () banked
 19152  001C2C  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19153  001C2E  0D08               	mullw	8
 19154  001C30  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 19155  001C34  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 19156  001C38  50F3               	movf	prodl,w,c
 19157  001C3A  0100               	movlb	0	; () banked
 19158  001C3C  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 19159  001C3E  50F4               	movf	prodh,w,c
 19160  001C40  0100               	movlb	0	; () banked
 19161  001C42  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 19162  001C44  0E06               	movlw	6
 19163  001C46  0100               	movlb	0	; () banked
 19164  001C48  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 19165  001C4A  6EE1               	movwf	fsr1l,c
 19166  001C4C  0E00               	movlw	0
 19167  001C4E  0100               	movlb	0	; () banked
 19168  001C50  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 19169  001C52  6EE2               	movwf	fsr1h,c
 19170  001C54  50DE               	movf	postinc2,w,c
 19171  001C56  5CE6               	subwf	postinc1,w,c
 19172  001C58  50E6               	movf	postinc1,w,c
 19173  001C5A  0A80               	xorlw	128
 19174  001C5C  0100               	movlb	0	; () banked
 19175  001C5E  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 19176  001C60  50DE               	movf	postinc2,w,c
 19177  001C62  0A80               	xorlw	128
 19178  001C64  0100               	movlb	0	; () banked
 19179  001C66  5989               	subwfb	(??_m_interp1_cal_p_t+10)& (0+255),w,b
 19180  001C68  B0D8               	btfsc	status,0,c
 19181  001C6A  D03E               	goto	l12419
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;data.c: 359: if(xin->tAdcValue <= tmpx[i+1].tAdcValue)break;
 19185  001C6C  0100               	movlb	0	; () banked
 19186  001C6E  EE20 F006          	lfsr	2,6
 19187  001C72  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 19188  001C74  26D9               	addwf	fsr2l,f,c
 19189  001C76  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 19190  001C78  22DA               	addwfc	fsr2h,f,c
 19191  001C7A  0100               	movlb	0	; () banked
 19192  001C7C  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19193  001C7E  0100               	movlb	0	; () banked
 19194  001C80  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 19195  001C82  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 19196  001C84  0100               	movlb	0	; () banked
 19197  001C86  90D8               	bcf	status,0,c
 19198  001C88  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19199  001C8A  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19200  001C8C  0100               	movlb	0	; () banked
 19201  001C8E  90D8               	bcf	status,0,c
 19202  001C90  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19203  001C92  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19204  001C94  0100               	movlb	0	; () banked
 19205  001C96  90D8               	bcf	status,0,c
 19206  001C98  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19207  001C9A  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19208  001C9C  0E08               	movlw	8
 19209  001C9E  0100               	movlb	0	; () banked
 19210  001CA0  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19211  001CA2  0E00               	movlw	0
 19212  001CA4  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19213  001CA6  C07A  F083         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+4
 19214  001CAA  C07B  F084         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+5
 19215  001CAE  0100               	movlb	0	; () banked
 19216  001CB0  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19217  001CB2  0100               	movlb	0	; () banked
 19218  001CB4  2783               	addwf	(??_m_interp1_cal_p_t+4)& (0+255),f,b
 19219  001CB6  0100               	movlb	0	; () banked
 19220  001CB8  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19221  001CBA  0100               	movlb	0	; () banked
 19222  001CBC  2384               	addwfc	(??_m_interp1_cal_p_t+5)& (0+255),f,b
 19223  001CBE  0E06               	movlw	6
 19224  001CC0  0100               	movlb	0	; () banked
 19225  001CC2  2583               	addwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 19226  001CC4  6EE1               	movwf	fsr1l,c
 19227  001CC6  0E00               	movlw	0
 19228  001CC8  0100               	movlb	0	; () banked
 19229  001CCA  2184               	addwfc	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 19230  001CCC  6EE2               	movwf	fsr1h,c
 19231  001CCE  50DE               	movf	postinc2,w,c
 19232  001CD0  5CE6               	subwf	postinc1,w,c
 19233  001CD2  50E6               	movf	postinc1,w,c
 19234  001CD4  0A80               	xorlw	128
 19235  001CD6  0100               	movlb	0	; () banked
 19236  001CD8  6F87               	movwf	(??_m_interp1_cal_p_t+8)& (0+255),b
 19237  001CDA  50DE               	movf	postinc2,w,c
 19238  001CDC  0A80               	xorlw	128
 19239  001CDE  0100               	movlb	0	; () banked
 19240  001CE0  5987               	subwfb	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 19241  001CE2  B0D8               	btfsc	status,0,c
 19242  001CE4  D05D               	goto	l12427
 19243  001CE6  D032               	goto	l12423
 19244  001CE8                     l12419:
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;data.c: 361: if(xin->tAdcValue >= tmpx[i+1].tAdcValue)break;
 19248  001CE8  0100               	movlb	0	; () banked
 19249  001CEA  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19250  001CEC  0100               	movlb	0	; () banked
 19251  001CEE  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 19252  001CF0  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 19253  001CF2  0100               	movlb	0	; () banked
 19254  001CF4  90D8               	bcf	status,0,c
 19255  001CF6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19256  001CF8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19257  001CFA  0100               	movlb	0	; () banked
 19258  001CFC  90D8               	bcf	status,0,c
 19259  001CFE  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19260  001D00  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19261  001D02  0100               	movlb	0	; () banked
 19262  001D04  90D8               	bcf	status,0,c
 19263  001D06  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19264  001D08  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19265  001D0A  0E08               	movlw	8
 19266  001D0C  0100               	movlb	0	; () banked
 19267  001D0E  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 19268  001D10  0E00               	movlw	0
 19269  001D12  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19270  001D14  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 19271  001D18  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 19272  001D1C  0100               	movlb	0	; () banked
 19273  001D1E  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19274  001D20  0100               	movlb	0	; () banked
 19275  001D22  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19276  001D24  0100               	movlb	0	; () banked
 19277  001D26  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19278  001D28  0100               	movlb	0	; () banked
 19279  001D2A  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19280  001D2C  0E06               	movlw	6
 19281  001D2E  0100               	movlb	0	; () banked
 19282  001D30  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19283  001D32  6ED9               	movwf	fsr2l,c
 19284  001D34  0E00               	movlw	0
 19285  001D36  0100               	movlb	0	; () banked
 19286  001D38  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19287  001D3A  6EDA               	movwf	fsr2h,c
 19288  001D3C  0100               	movlb	0	; () banked
 19289  001D3E  EE10 F006          	lfsr	1,6
 19290  001D42  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 19291  001D44  26E1               	addwf	fsr1l,f,c
 19292  001D46  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 19293  001D48  22E2               	addwfc	fsr1h,f,c
 19294  001D4A  D7C1               	goto	L7
 19295  001D4C                     l12423:
 19296                           
 19297                           ; BSR set to: 0
 19298  001D4C  0100               	movlb	0	; () banked
 19299  001D4E  2B95               	incf	m_interp1_cal_p_t@i& (0+255),f,b
 19300  001D50                     l12425:
 19301                           
 19302                           ; BSR set to: 0
 19303  001D50  0EFF               	movlw	255
 19304  001D52  0100               	movlb	0	; () banked
 19305  001D54  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 19306  001D56  0EFF               	movlw	255
 19307  001D58  0100               	movlb	0	; () banked
 19308  001D5A  6F80               	movwf	(??_m_interp1_cal_p_t+1)& (0+255),b
 19309  001D5C  0100               	movlb	0	; () banked
 19310  001D5E  517E               	movf	m_interp1_cal_p_t@tmpxLen& (0+255),w,b
 19311  001D60  0100               	movlb	0	; () banked
 19312  001D62  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 19313  001D64  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 19314  001D66  0100               	movlb	0	; () banked
 19315  001D68  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19316  001D6A  0100               	movlb	0	; () banked
 19317  001D6C  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19318  001D6E  0100               	movlb	0	; () banked
 19319  001D70  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19320  001D72  0100               	movlb	0	; () banked
 19321  001D74  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19322  001D76  0100               	movlb	0	; () banked
 19323  001D78  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19324  001D7A  0100               	movlb	0	; () banked
 19325  001D7C  6F83               	movwf	(??_m_interp1_cal_p_t+4)& (0+255),b
 19326  001D7E  6B84               	clrf	(??_m_interp1_cal_p_t+5)& (0+255),b
 19327  001D80  0100               	movlb	0	; () banked
 19328  001D82  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19329  001D84  0100               	movlb	0	; () banked
 19330  001D86  5D83               	subwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 19331  001D88  0100               	movlb	0	; () banked
 19332  001D8A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 19333  001D8C  0A80               	xorlw	128
 19334  001D8E  0100               	movlb	0	; () banked
 19335  001D90  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 19336  001D92  0100               	movlb	0	; () banked
 19337  001D94  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19338  001D96  0A80               	xorlw	128
 19339  001D98  0100               	movlb	0	; () banked
 19340  001D9A  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 19341  001D9C  A0D8               	btfss	status,0,c
 19342  001D9E  D71B               	goto	l12413
 19343  001DA0                     l12427:
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;data.c: 362: }
 19347                           ;data.c: 363: }
 19348                           ;data.c: 364: xin->pValue=tmpx[i].pValue;
 19349  001DA0  0100               	movlb	0	; () banked
 19350  001DA2  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19351  001DA4  0D08               	mullw	8
 19352  001DA6  50F3               	movf	prodl,w,c
 19353  001DA8  0100               	movlb	0	; () banked
 19354  001DAA  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 19355  001DAC  6ED9               	movwf	fsr2l,c
 19356  001DAE  50F4               	movf	prodh,w,c
 19357  001DB0  0100               	movlb	0	; () banked
 19358  001DB2  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 19359  001DB4  6EDA               	movwf	fsr2h,c
 19360  001DB6  C07C  FFE1         	movff	m_interp1_cal_p_t@xin,fsr1l
 19361  001DBA  C07D  FFE2         	movff	m_interp1_cal_p_t@xin+1,fsr1h
 19362  001DBE  CFDE FFE6          	movff	postinc2,postinc1
 19363  001DC2  CFDE FFE6          	movff	postinc2,postinc1
 19364  001DC6  CFDE FFE6          	movff	postinc2,postinc1
 19365  001DCA  CFDE FFE6          	movff	postinc2,postinc1
 19366                           
 19367                           ; BSR set to: 0
 19368                           ;data.c: 365: y=(int32_t)(tmpx[i+1].pValue-tmpx[i].pValue);
 19369  001DCE  0100               	movlb	0	; () banked
 19370  001DD0  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19371  001DD2  0100               	movlb	0	; () banked
 19372  001DD4  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 19373  001DD6  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 19374  001DD8  0100               	movlb	0	; () banked
 19375  001DDA  90D8               	bcf	status,0,c
 19376  001DDC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19377  001DDE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19378  001DE0  0100               	movlb	0	; () banked
 19379  001DE2  90D8               	bcf	status,0,c
 19380  001DE4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19381  001DE6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19382  001DE8  0100               	movlb	0	; () banked
 19383  001DEA  90D8               	bcf	status,0,c
 19384  001DEC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19385  001DEE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19386  001DF0  0E08               	movlw	8
 19387  001DF2  0100               	movlb	0	; () banked
 19388  001DF4  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 19389  001DF6  0E00               	movlw	0
 19390  001DF8  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19391  001DFA  0100               	movlb	0	; () banked
 19392  001DFC  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19393  001DFE  0100               	movlb	0	; () banked
 19394  001E00  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 19395  001E02  6ED9               	movwf	fsr2l,c
 19396  001E04  0100               	movlb	0	; () banked
 19397  001E06  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19398  001E08  0100               	movlb	0	; () banked
 19399  001E0A  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 19400  001E0C  6EDA               	movwf	fsr2h,c
 19401  001E0E  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 19402  001E12  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 19403  001E16  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 19404  001E1A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_t+5
 19405  001E1E  0100               	movlb	0	; () banked
 19406  001E20  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19407  001E22  0D08               	mullw	8
 19408  001E24  50F3               	movf	prodl,w,c
 19409  001E26  0100               	movlb	0	; () banked
 19410  001E28  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 19411  001E2A  6ED9               	movwf	fsr2l,c
 19412  001E2C  50F4               	movf	prodh,w,c
 19413  001E2E  0100               	movlb	0	; () banked
 19414  001E30  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 19415  001E32  6EDA               	movwf	fsr2h,c
 19416  001E34  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_t+6
 19417  001E38  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_t+7
 19418  001E3C  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 19419  001E40  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_t+9
 19420  001E44  0100               	movlb	0	; () banked
 19421  001E46  1F85               	comf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 19422  001E48  1F86               	comf	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 19423  001E4A  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19424  001E4C  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19425  001E4E  2B85               	incf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 19426  001E50  0E00               	movlw	0
 19427  001E52  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 19428  001E54  2387               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19429  001E56  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19430  001E58  0100               	movlb	0	; () banked
 19431  001E5A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19432  001E5C  0100               	movlb	0	; () banked
 19433  001E5E  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 19434  001E60  0100               	movlb	0	; () banked
 19435  001E62  6F8D               	movwf	m_interp1_cal_p_t@y& (0+255),b
 19436  001E64  0100               	movlb	0	; () banked
 19437  001E66  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19438  001E68  0100               	movlb	0	; () banked
 19439  001E6A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 19440  001E6C  0100               	movlb	0	; () banked
 19441  001E6E  6F8E               	movwf	(m_interp1_cal_p_t@y+1)& (0+255),b
 19442  001E70  0100               	movlb	0	; () banked
 19443  001E72  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 19444  001E74  0100               	movlb	0	; () banked
 19445  001E76  2187               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 19446  001E78  0100               	movlb	0	; () banked
 19447  001E7A  6F8F               	movwf	(m_interp1_cal_p_t@y+2)& (0+255),b
 19448  001E7C  0100               	movlb	0	; () banked
 19449  001E7E  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 19450  001E80  0100               	movlb	0	; () banked
 19451  001E82  2188               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),w,b
 19452  001E84  0100               	movlb	0	; () banked
 19453  001E86  6F90               	movwf	(m_interp1_cal_p_t@y+3)& (0+255),b
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;data.c: 366: x=(int32_t)(tmpx[i+1].tAdcValue-tmpx[i].tAdcValue);
 19457  001E88  0100               	movlb	0	; () banked
 19458  001E8A  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19459  001E8C  0100               	movlb	0	; () banked
 19460  001E8E  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 19461  001E90  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 19462  001E92  0100               	movlb	0	; () banked
 19463  001E94  90D8               	bcf	status,0,c
 19464  001E96  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19465  001E98  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19466  001E9A  0100               	movlb	0	; () banked
 19467  001E9C  90D8               	bcf	status,0,c
 19468  001E9E  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19469  001EA0  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19470  001EA2  0100               	movlb	0	; () banked
 19471  001EA4  90D8               	bcf	status,0,c
 19472  001EA6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 19473  001EA8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19474  001EAA  0E08               	movlw	8
 19475  001EAC  0100               	movlb	0	; () banked
 19476  001EAE  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 19477  001EB0  0E00               	movlw	0
 19478  001EB2  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 19479  001EB4  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 19480  001EB8  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 19481  001EBC  0100               	movlb	0	; () banked
 19482  001EBE  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19483  001EC0  0100               	movlb	0	; () banked
 19484  001EC2  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 19485  001EC4  0100               	movlb	0	; () banked
 19486  001EC6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19487  001EC8  0100               	movlb	0	; () banked
 19488  001ECA  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 19489  001ECC  0E06               	movlw	6
 19490  001ECE  0100               	movlb	0	; () banked
 19491  001ED0  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19492  001ED2  6ED9               	movwf	fsr2l,c
 19493  001ED4  0E00               	movlw	0
 19494  001ED6  0100               	movlb	0	; () banked
 19495  001ED8  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19496  001EDA  6EDA               	movwf	fsr2h,c
 19497  001EDC  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 19498  001EE0  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 19499  001EE4  0100               	movlb	0	; () banked
 19500  001EE6  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19501  001EE8  0D08               	mullw	8
 19502  001EEA  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 19503  001EEE  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 19504  001EF2  50F3               	movf	prodl,w,c
 19505  001EF4  0100               	movlb	0	; () banked
 19506  001EF6  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 19507  001EF8  50F4               	movf	prodh,w,c
 19508  001EFA  0100               	movlb	0	; () banked
 19509  001EFC  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 19510  001EFE  0E06               	movlw	6
 19511  001F00  0100               	movlb	0	; () banked
 19512  001F02  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 19513  001F04  6ED9               	movwf	fsr2l,c
 19514  001F06  0E00               	movlw	0
 19515  001F08  0100               	movlb	0	; () banked
 19516  001F0A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 19517  001F0C  6EDA               	movwf	fsr2h,c
 19518  001F0E  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 19519  001F12  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 19520  001F16  0100               	movlb	0	; () banked
 19521  001F18  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19522  001F1A  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19523  001F1C  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19524  001F1E  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19525  001F20  0100               	movlb	0	; () banked
 19526  001F22  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 19527  001F24  0100               	movlb	0	; () banked
 19528  001F26  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19529  001F28  0100               	movlb	0	; () banked
 19530  001F2A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 19531  001F2C  0100               	movlb	0	; () banked
 19532  001F2E  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19533  001F30  C087  F091         	movff	??_m_interp1_cal_p_t+8,m_interp1_cal_p_t@x
 19534  001F34  C088  F092         	movff	??_m_interp1_cal_p_t+9,m_interp1_cal_p_t@x+1
 19535  001F38  0100               	movlb	0	; () banked
 19536  001F3A  0E00               	movlw	0
 19537  001F3C  BF92               	btfsc	(m_interp1_cal_p_t@x+1)& (0+255),7,b
 19538  001F3E  0EFF               	movlw	-1
 19539  001F40  6F93               	movwf	(m_interp1_cal_p_t@x+2)& (0+255),b
 19540  001F42  6F94               	movwf	(m_interp1_cal_p_t@x+3)& (0+255),b
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;data.c: 367: if(x!=0){
 19544  001F44  0100               	movlb	0	; () banked
 19545  001F46  5191               	movf	m_interp1_cal_p_t@x& (0+255),w,b
 19546  001F48  0100               	movlb	0	; () banked
 19547  001F4A  1192               	iorwf	(m_interp1_cal_p_t@x+1)& (0+255),w,b
 19548  001F4C  0100               	movlb	0	; () banked
 19549  001F4E  1193               	iorwf	(m_interp1_cal_p_t@x+2)& (0+255),w,b
 19550  001F50  0100               	movlb	0	; () banked
 19551  001F52  1194               	iorwf	(m_interp1_cal_p_t@x+3)& (0+255),w,b
 19552  001F54  B4D8               	btfsc	status,2,c
 19553  001F56  0012               	return	
 19554                           
 19555                           ; BSR set to: 0
 19556                           ;data.c: 368: xin->pValue = xin->pValue + (y/x)*(int32_t)(xin->tAdcValue - tmpx[i].tAdcV
      +                          alue);
 19557  001F58  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 19558  001F5C  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 19559  001F60  CFDE F07F          	movff	postinc2,??_m_interp1_cal_p_t
 19560  001F64  CFDE F080          	movff	postinc2,??_m_interp1_cal_p_t+1
 19561  001F68  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 19562  001F6C  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 19563  001F70  C091  F064         	movff	m_interp1_cal_p_t@x,___aldiv@divisor
 19564  001F74  C092  F065         	movff	m_interp1_cal_p_t@x+1,___aldiv@divisor+1
 19565  001F78  C093  F066         	movff	m_interp1_cal_p_t@x+2,___aldiv@divisor+2
 19566  001F7C  C094  F067         	movff	m_interp1_cal_p_t@x+3,___aldiv@divisor+3
 19567  001F80  C08D  F060         	movff	m_interp1_cal_p_t@y,___aldiv@dividend
 19568  001F84  C08E  F061         	movff	m_interp1_cal_p_t@y+1,___aldiv@dividend+1
 19569  001F88  C08F  F062         	movff	m_interp1_cal_p_t@y+2,___aldiv@dividend+2
 19570  001F8C  C090  F063         	movff	m_interp1_cal_p_t@y+3,___aldiv@dividend+3
 19571  001F90  ECEB  F029         	call	___aldiv	;wreg free
 19572  001F94  C060  F06E         	movff	?___aldiv,___lmul@multiplier
 19573  001F98  C061  F06F         	movff	?___aldiv+1,___lmul@multiplier+1
 19574  001F9C  C062  F070         	movff	?___aldiv+2,___lmul@multiplier+2
 19575  001FA0  C063  F071         	movff	?___aldiv+3,___lmul@multiplier+3
 19576  001FA4  0100               	movlb	0	; () banked
 19577  001FA6  EE20 F006          	lfsr	2,6
 19578  001FAA  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 19579  001FAC  26D9               	addwf	fsr2l,f,c
 19580  001FAE  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 19581  001FB0  22DA               	addwfc	fsr2h,f,c
 19582  001FB2  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 19583  001FB6  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 19584  001FBA  0100               	movlb	0	; () banked
 19585  001FBC  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 19586  001FBE  0D08               	mullw	8
 19587  001FC0  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 19588  001FC4  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 19589  001FC8  50F3               	movf	prodl,w,c
 19590  001FCA  0100               	movlb	0	; () banked
 19591  001FCC  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 19592  001FCE  50F4               	movf	prodh,w,c
 19593  001FD0  0100               	movlb	0	; () banked
 19594  001FD2  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 19595  001FD4  0E06               	movlw	6
 19596  001FD6  0100               	movlb	0	; () banked
 19597  001FD8  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 19598  001FDA  6ED9               	movwf	fsr2l,c
 19599  001FDC  0E00               	movlw	0
 19600  001FDE  0100               	movlb	0	; () banked
 19601  001FE0  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 19602  001FE2  6EDA               	movwf	fsr2h,c
 19603  001FE4  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 19604  001FE8  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 19605  001FEC  0100               	movlb	0	; () banked
 19606  001FEE  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19607  001FF0  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19608  001FF2  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19609  001FF4  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19610  001FF6  0100               	movlb	0	; () banked
 19611  001FF8  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 19612  001FFA  0100               	movlb	0	; () banked
 19613  001FFC  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 19614  001FFE  0100               	movlb	0	; () banked
 19615  002000  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 19616  002002  0100               	movlb	0	; () banked
 19617  002004  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 19618  002006  C087  F072         	movff	??_m_interp1_cal_p_t+8,___lmul@multiplicand
 19619  00200A  C088  F073         	movff	??_m_interp1_cal_p_t+9,___lmul@multiplicand+1
 19620  00200E  0100               	movlb	0	; () banked
 19621  002010  0E00               	movlw	0
 19622  002012  BF73               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 19623  002014  0EFF               	movlw	-1
 19624  002016  6F74               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19625  002018  6F75               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19626  00201A  EC26  F038         	call	___lmul	;wreg free
 19627  00201E  0100               	movlb	0	; () banked
 19628  002020  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 19629  002022  0100               	movlb	0	; () banked
 19630  002024  256E               	addwf	?___lmul& (0+255),w,b
 19631  002026  0100               	movlb	0	; () banked
 19632  002028  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 19633  00202A  0100               	movlb	0	; () banked
 19634  00202C  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 19635  00202E  0100               	movlb	0	; () banked
 19636  002030  216F               	addwfc	(?___lmul+1)& (0+255),w,b
 19637  002032  0100               	movlb	0	; () banked
 19638  002034  6F8A               	movwf	(??_m_interp1_cal_p_t+11)& (0+255),b
 19639  002036  0100               	movlb	0	; () banked
 19640  002038  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 19641  00203A  0100               	movlb	0	; () banked
 19642  00203C  2170               	addwfc	(?___lmul+2)& (0+255),w,b
 19643  00203E  0100               	movlb	0	; () banked
 19644  002040  6F8B               	movwf	(??_m_interp1_cal_p_t+12)& (0+255),b
 19645  002042  0100               	movlb	0	; () banked
 19646  002044  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 19647  002046  0100               	movlb	0	; () banked
 19648  002048  2171               	addwfc	(?___lmul+3)& (0+255),w,b
 19649  00204A  0100               	movlb	0	; () banked
 19650  00204C  6F8C               	movwf	(??_m_interp1_cal_p_t+13)& (0+255),b
 19651  00204E  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 19652  002052  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 19653  002056  C089  FFDE         	movff	??_m_interp1_cal_p_t+10,postinc2
 19654  00205A  C08A  FFDE         	movff	??_m_interp1_cal_p_t+11,postinc2
 19655  00205E  C08B  FFDE         	movff	??_m_interp1_cal_p_t+12,postinc2
 19656  002062  C08C  FFDE         	movff	??_m_interp1_cal_p_t+13,postinc2
 19657                           
 19658                           ; BSR set to: 0
 19659  002066  0012               	return	
 19660  002068                     __end_of_m_interp1_cal_p_t:
 19661                           	opt stack 0
 19662                           tosu	equ	0xFFF
 19663                           tosh	equ	0xFFE
 19664                           tosl	equ	0xFFD
 19665                           pclath	equ	0xFFA
 19666                           tblptru	equ	0xFF8
 19667                           tblptrh	equ	0xFF7
 19668                           tblptrl	equ	0xFF6
 19669                           tablat	equ	0xFF5
 19670                           prodh	equ	0xFF4
 19671                           prodl	equ	0xFF3
 19672                           intcon	equ	0xFF2
 19673                           indf0	equ	0xFEF
 19674                           postinc0	equ	0xFEE
 19675                           fsr0h	equ	0xFEA
 19676                           fsr0l	equ	0xFE9
 19677                           wreg	equ	0xFE8
 19678                           postinc1	equ	0xFE6
 19679                           postdec1	equ	0xFE5
 19680                           plusw1	equ	0xFE3
 19681                           fsr1h	equ	0xFE2
 19682                           fsr1l	equ	0xFE1
 19683                           indf2	equ	0xFDF
 19684                           postinc2	equ	0xFDE
 19685                           postdec2	equ	0xFDD
 19686                           plusw2	equ	0xFDB
 19687                           fsr2h	equ	0xFDA
 19688                           fsr2l	equ	0xFD9
 19689                           status	equ	0xFD8
 19690                           
 19691 ;; *************** function ___lmul *****************
 19692 ;; Defined at:
 19693 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 19694 ;; Parameters:    Size  Location     Type
 19695 ;;  multiplier      4   14[BANK0 ] unsigned long 
 19696 ;;  multiplicand    4   18[BANK0 ] unsigned long 
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  product         4   22[BANK0 ] unsigned long 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  4   14[BANK0 ] unsigned long 
 19701 ;; Registers used:
 19702 ;;		wreg, status,2, status,0
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19708 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19709 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19711 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19712 ;;Total ram usage:       12 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:    4
 19715 ;; This function calls:
 19716 ;;		Nothing
 19717 ;; This function is called by:
 19718 ;;		_m_interp1_cal_p_v
 19719 ;;		_m_interp1_cal_p_t
 19720 ;;		_cal_pt100_temperature
 19721 ;;		___mflot32_2_int32
 19722 ;;		_m_math_pow
 19723 ;; This function uses a non-reentrant model
 19724 ;;
 19725                           
 19726                           	psect	text98
 19727  00704C                     __ptext98:
 19728                           	opt stack 0
 19729  00704C                     ___lmul:
 19730                           	opt stack 22
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;incstack = 0
 19734  00704C  0E00               	movlw	0
 19735  00704E  0100               	movlb	0	; () banked
 19736  007050  6F76               	movwf	___lmul@product& (0+255),b
 19737  007052  0E00               	movlw	0
 19738  007054  6F77               	movwf	(___lmul@product+1)& (0+255),b
 19739  007056  0E00               	movlw	0
 19740  007058  6F78               	movwf	(___lmul@product+2)& (0+255),b
 19741  00705A  0E00               	movlw	0
 19742  00705C  6F79               	movwf	(___lmul@product+3)& (0+255),b
 19743  00705E                     l12299:
 19744                           
 19745                           ; BSR set to: 0
 19746  00705E  0100               	movlb	0	; () banked
 19747  007060  A16E               	btfss	___lmul@multiplier& (0+255),0,b
 19748  007062  D010               	goto	l12303
 19749                           
 19750                           ; BSR set to: 0
 19751  007064  0100               	movlb	0	; () banked
 19752  007066  5172               	movf	___lmul@multiplicand& (0+255),w,b
 19753  007068  0100               	movlb	0	; () banked
 19754  00706A  2776               	addwf	___lmul@product& (0+255),f,b
 19755  00706C  0100               	movlb	0	; () banked
 19756  00706E  5173               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19757  007070  0100               	movlb	0	; () banked
 19758  007072  2377               	addwfc	(___lmul@product+1)& (0+255),f,b
 19759  007074  0100               	movlb	0	; () banked
 19760  007076  5174               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19761  007078  0100               	movlb	0	; () banked
 19762  00707A  2378               	addwfc	(___lmul@product+2)& (0+255),f,b
 19763  00707C  0100               	movlb	0	; () banked
 19764  00707E  5175               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19765  007080  0100               	movlb	0	; () banked
 19766  007082  2379               	addwfc	(___lmul@product+3)& (0+255),f,b
 19767  007084                     l12303:
 19768                           
 19769                           ; BSR set to: 0
 19770  007084  0100               	movlb	0	; () banked
 19771  007086  90D8               	bcf	status,0,c
 19772  007088  3772               	rlcf	___lmul@multiplicand& (0+255),f,b
 19773  00708A  3773               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19774  00708C  3774               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19775  00708E  3775               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19776                           
 19777                           ; BSR set to: 0
 19778  007090  0100               	movlb	0	; () banked
 19779  007092  90D8               	bcf	status,0,c
 19780  007094  3371               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19781  007096  3370               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19782  007098  336F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19783  00709A  336E               	rrcf	___lmul@multiplier& (0+255),f,b
 19784  00709C  0100               	movlb	0	; () banked
 19785  00709E  516E               	movf	___lmul@multiplier& (0+255),w,b
 19786  0070A0  0100               	movlb	0	; () banked
 19787  0070A2  116F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19788  0070A4  0100               	movlb	0	; () banked
 19789  0070A6  1170               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19790  0070A8  0100               	movlb	0	; () banked
 19791  0070AA  1171               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19792  0070AC  A4D8               	btfss	status,2,c
 19793  0070AE  D7D7               	goto	l12299
 19794                           
 19795                           ; BSR set to: 0
 19796  0070B0  C076  F06E         	movff	___lmul@product,?___lmul
 19797  0070B4  C077  F06F         	movff	___lmul@product+1,?___lmul+1
 19798  0070B8  C078  F070         	movff	___lmul@product+2,?___lmul+2
 19799  0070BC  C079  F071         	movff	___lmul@product+3,?___lmul+3
 19800                           
 19801                           ; BSR set to: 0
 19802  0070C0  0012               	return		;funcret
 19803  0070C2                     __end_of___lmul:
 19804                           	opt stack 0
 19805                           tosu	equ	0xFFF
 19806                           tosh	equ	0xFFE
 19807                           tosl	equ	0xFFD
 19808                           pclath	equ	0xFFA
 19809                           tblptru	equ	0xFF8
 19810                           tblptrh	equ	0xFF7
 19811                           tblptrl	equ	0xFF6
 19812                           tablat	equ	0xFF5
 19813                           prodh	equ	0xFF4
 19814                           prodl	equ	0xFF3
 19815                           intcon	equ	0xFF2
 19816                           indf0	equ	0xFEF
 19817                           postinc0	equ	0xFEE
 19818                           fsr0h	equ	0xFEA
 19819                           fsr0l	equ	0xFE9
 19820                           wreg	equ	0xFE8
 19821                           postinc1	equ	0xFE6
 19822                           postdec1	equ	0xFE5
 19823                           plusw1	equ	0xFE3
 19824                           fsr1h	equ	0xFE2
 19825                           fsr1l	equ	0xFE1
 19826                           indf2	equ	0xFDF
 19827                           postinc2	equ	0xFDE
 19828                           postdec2	equ	0xFDD
 19829                           plusw2	equ	0xFDB
 19830                           fsr2h	equ	0xFDA
 19831                           fsr2l	equ	0xFD9
 19832                           status	equ	0xFD8
 19833                           
 19834 ;; *************** function ___aldiv *****************
 19835 ;; Defined at:
 19836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 19837 ;; Parameters:    Size  Location     Type
 19838 ;;  dividend        4    0[BANK0 ] long 
 19839 ;;  divisor         4    4[BANK0 ] long 
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;  quotient        4   10[BANK0 ] long 
 19842 ;;  sign            1    9[BANK0 ] unsigned char 
 19843 ;;  counter         1    8[BANK0 ] unsigned char 
 19844 ;; Return value:  Size  Location     Type
 19845 ;;                  4    0[BANK0 ] long 
 19846 ;; Registers used:
 19847 ;;		wreg, status,2, status,0
 19848 ;; Tracked objects:
 19849 ;;		On entry : 0/0
 19850 ;;		On exit  : 0/0
 19851 ;;		Unchanged: 0/0
 19852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19853 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19856 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19857 ;;Total ram usage:       14 bytes
 19858 ;; Hardware stack levels used:    1
 19859 ;; Hardware stack levels required when called:    4
 19860 ;; This function calls:
 19861 ;;		Nothing
 19862 ;; This function is called by:
 19863 ;;		_m_interp1_cal_p_v
 19864 ;;		_m_interp1_cal_p_t
 19865 ;;		___x_sample_fliter
 19866 ;;		___x_sample_fifo
 19867 ;;		_cal_pt100_temperature
 19868 ;;		_m_int_2_str
 19869 ;; This function uses a non-reentrant model
 19870 ;;
 19871                           
 19872                           	psect	text99
 19873  0053D6                     __ptext99:
 19874                           	opt stack 0
 19875  0053D6                     ___aldiv:
 19876                           	opt stack 21
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;incstack = 0
 19880  0053D6  0E00               	movlw	0
 19881  0053D8  0100               	movlb	0	; () banked
 19882  0053DA  6F69               	movwf	___aldiv@sign& (0+255),b
 19883                           
 19884                           ; BSR set to: 0
 19885  0053DC  0100               	movlb	0	; () banked
 19886  0053DE  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19887  0053E0  D00C               	goto	l11339
 19888                           
 19889                           ; BSR set to: 0
 19890  0053E2  0100               	movlb	0	; () banked
 19891  0053E4  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19892  0053E6  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19893  0053E8  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19894  0053EA  6D64               	negf	___aldiv@divisor& (0+255),b
 19895  0053EC  0E00               	movlw	0
 19896  0053EE  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19897  0053F0  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19898  0053F2  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19899                           
 19900                           ; BSR set to: 0
 19901  0053F4  0E01               	movlw	1
 19902  0053F6  0100               	movlb	0	; () banked
 19903  0053F8  6F69               	movwf	___aldiv@sign& (0+255),b
 19904  0053FA                     l11339:
 19905                           
 19906                           ; BSR set to: 0
 19907  0053FA  0100               	movlb	0	; () banked
 19908  0053FC  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 19909  0053FE  D00C               	goto	l11345
 19910                           
 19911                           ; BSR set to: 0
 19912  005400  0100               	movlb	0	; () banked
 19913  005402  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19914  005404  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19915  005406  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19916  005408  6D60               	negf	___aldiv@dividend& (0+255),b
 19917  00540A  0E00               	movlw	0
 19918  00540C  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19919  00540E  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19920  005410  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19921                           
 19922                           ; BSR set to: 0
 19923  005412  0E01               	movlw	1
 19924  005414  0100               	movlb	0	; () banked
 19925  005416  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 19926  005418                     l11345:
 19927                           
 19928                           ; BSR set to: 0
 19929  005418  0E00               	movlw	0
 19930  00541A  0100               	movlb	0	; () banked
 19931  00541C  6F6A               	movwf	___aldiv@quotient& (0+255),b
 19932  00541E  0E00               	movlw	0
 19933  005420  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 19934  005422  0E00               	movlw	0
 19935  005424  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 19936  005426  0E00               	movlw	0
 19937  005428  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 19938                           
 19939                           ; BSR set to: 0
 19940  00542A  0100               	movlb	0	; () banked
 19941  00542C  5164               	movf	___aldiv@divisor& (0+255),w,b
 19942  00542E  0100               	movlb	0	; () banked
 19943  005430  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19944  005432  0100               	movlb	0	; () banked
 19945  005434  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19946  005436  0100               	movlb	0	; () banked
 19947  005438  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 19948  00543A  B4D8               	btfsc	status,2,c
 19949  00543C  D042               	goto	l11367
 19950                           
 19951                           ; BSR set to: 0
 19952  00543E  0E01               	movlw	1
 19953  005440  0100               	movlb	0	; () banked
 19954  005442  6F68               	movwf	___aldiv@counter& (0+255),b
 19955  005444  D008               	goto	l11353
 19956  005446                     l11351:
 19957                           
 19958                           ; BSR set to: 0
 19959  005446  0100               	movlb	0	; () banked
 19960  005448  90D8               	bcf	status,0,c
 19961  00544A  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 19962  00544C  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19963  00544E  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19964  005450  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19965  005452  0100               	movlb	0	; () banked
 19966  005454  2B68               	incf	___aldiv@counter& (0+255),f,b
 19967  005456                     l11353:
 19968                           
 19969                           ; BSR set to: 0
 19970  005456  0100               	movlb	0	; () banked
 19971  005458  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19972  00545A  D7F5               	goto	l11351
 19973  00545C                     l11355:
 19974                           
 19975                           ; BSR set to: 0
 19976  00545C  0100               	movlb	0	; () banked
 19977  00545E  90D8               	bcf	status,0,c
 19978  005460  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 19979  005462  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19980  005464  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19981  005466  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19982                           
 19983                           ; BSR set to: 0
 19984  005468  0100               	movlb	0	; () banked
 19985  00546A  5164               	movf	___aldiv@divisor& (0+255),w,b
 19986  00546C  0100               	movlb	0	; () banked
 19987  00546E  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 19988  005470  0100               	movlb	0	; () banked
 19989  005472  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19990  005474  0100               	movlb	0	; () banked
 19991  005476  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19992  005478  0100               	movlb	0	; () banked
 19993  00547A  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19994  00547C  0100               	movlb	0	; () banked
 19995  00547E  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 19996  005480  0100               	movlb	0	; () banked
 19997  005482  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19998  005484  0100               	movlb	0	; () banked
 19999  005486  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 20000  005488  A0D8               	btfss	status,0,c
 20001  00548A  D012               	goto	l11363
 20002                           
 20003                           ; BSR set to: 0
 20004  00548C  0100               	movlb	0	; () banked
 20005  00548E  5164               	movf	___aldiv@divisor& (0+255),w,b
 20006  005490  0100               	movlb	0	; () banked
 20007  005492  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 20008  005494  0100               	movlb	0	; () banked
 20009  005496  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20010  005498  0100               	movlb	0	; () banked
 20011  00549A  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 20012  00549C  0100               	movlb	0	; () banked
 20013  00549E  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20014  0054A0  0100               	movlb	0	; () banked
 20015  0054A2  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 20016  0054A4  0100               	movlb	0	; () banked
 20017  0054A6  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20018  0054A8  0100               	movlb	0	; () banked
 20019  0054AA  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 20020                           
 20021                           ; BSR set to: 0
 20022  0054AC  0100               	movlb	0	; () banked
 20023  0054AE  816A               	bsf	___aldiv@quotient& (0+255),0,b
 20024  0054B0                     l11363:
 20025                           
 20026                           ; BSR set to: 0
 20027  0054B0  0100               	movlb	0	; () banked
 20028  0054B2  90D8               	bcf	status,0,c
 20029  0054B4  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 20030  0054B6  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 20031  0054B8  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 20032  0054BA  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 20033                           
 20034                           ; BSR set to: 0
 20035  0054BC  0100               	movlb	0	; () banked
 20036  0054BE  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 20037  0054C0  D7CD               	goto	l11355
 20038  0054C2                     l11367:
 20039                           
 20040                           ; BSR set to: 0
 20041  0054C2  0100               	movlb	0	; () banked
 20042  0054C4  5169               	movf	___aldiv@sign& (0+255),w,b
 20043  0054C6  0100               	movlb	0	; () banked
 20044  0054C8  B4D8               	btfsc	status,2,c
 20045  0054CA  D009               	goto	l11371
 20046                           
 20047                           ; BSR set to: 0
 20048  0054CC  0100               	movlb	0	; () banked
 20049  0054CE  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 20050  0054D0  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 20051  0054D2  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 20052  0054D4  6D6A               	negf	___aldiv@quotient& (0+255),b
 20053  0054D6  0E00               	movlw	0
 20054  0054D8  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 20055  0054DA  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 20056  0054DC  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 20057  0054DE                     l11371:
 20058                           
 20059                           ; BSR set to: 0
 20060  0054DE  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 20061  0054E2  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 20062  0054E6  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 20063  0054EA  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 20064  0054EE  0012               	return	
 20065  0054F0                     __end_of___aldiv:
 20066                           	opt stack 0
 20067                           tosu	equ	0xFFF
 20068                           tosh	equ	0xFFE
 20069                           tosl	equ	0xFFD
 20070                           pclath	equ	0xFFA
 20071                           tblptru	equ	0xFF8
 20072                           tblptrh	equ	0xFF7
 20073                           tblptrl	equ	0xFF6
 20074                           tablat	equ	0xFF5
 20075                           prodh	equ	0xFF4
 20076                           prodl	equ	0xFF3
 20077                           intcon	equ	0xFF2
 20078                           indf0	equ	0xFEF
 20079                           postinc0	equ	0xFEE
 20080                           fsr0h	equ	0xFEA
 20081                           fsr0l	equ	0xFE9
 20082                           wreg	equ	0xFE8
 20083                           postinc1	equ	0xFE6
 20084                           postdec1	equ	0xFE5
 20085                           plusw1	equ	0xFE3
 20086                           fsr1h	equ	0xFE2
 20087                           fsr1l	equ	0xFE1
 20088                           indf2	equ	0xFDF
 20089                           postinc2	equ	0xFDE
 20090                           postdec2	equ	0xFDD
 20091                           plusw2	equ	0xFDB
 20092                           fsr2h	equ	0xFDA
 20093                           fsr2l	equ	0xFD9
 20094                           status	equ	0xFD8
 20095                           
 20096 ;; *************** function _cal_diff_p_to_h *****************
 20097 ;; Defined at:
 20098 ;;		line 473 in file "src/api/data.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;  xin             2   98[BANK0 ] PTR struct .
 20101 ;;		 -> x_prDiffData(8), 
 20102 ;; Auto vars:     Size  Location     Type
 20103 ;;  f1              4  106[BANK0 ] float 
 20104 ;;  f2              4  102[BANK0 ] float 
 20105 ;; Return value:  Size  Location     Type
 20106 ;;                  4   98[BANK0 ] long 
 20107 ;; Registers used:
 20108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20109 ;; Tracked objects:
 20110 ;;		On entry : 0/0
 20111 ;;		On exit  : 0/0
 20112 ;;		Unchanged: 0/0
 20113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20115 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20117 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20118 ;;Total ram usage:       12 bytes
 20119 ;; Hardware stack levels used:    1
 20120 ;; Hardware stack levels required when called:    5
 20121 ;; This function calls:
 20122 ;;		___fldiv
 20123 ;;		___flmul
 20124 ;;		___fltol
 20125 ;;		___xxtofl
 20126 ;; This function is called by:
 20127 ;;		_cal_diff_press
 20128 ;; This function uses a non-reentrant model
 20129 ;;
 20130                           
 20131                           	psect	text100
 20132  005B14                     __ptext100:
 20133                           	opt stack 0
 20134  005B14                     _cal_diff_p_to_h:
 20135                           	opt stack 22
 20136                           
 20137                           ;data.c: 475: float f1,f2;
 20138                           ;data.c: 477: f1=(float)(xin->pValue);
 20139                           
 20140                           ; BSR set to: 0
 20141                           ;incstack = 0
 20142  005B14  C0C2  FFD9         	movff	cal_diff_p_to_h@xin,fsr2l
 20143  005B18  C0C3  FFDA         	movff	cal_diff_p_to_h@xin+1,fsr2h
 20144  005B1C  CFDE F060          	movff	postinc2,___xxtofl@val
 20145  005B20  CFDE F061          	movff	postinc2,___xxtofl@val+1
 20146  005B24  CFDE F062          	movff	postinc2,___xxtofl@val+2
 20147  005B28  CFDE F063          	movff	postinc2,___xxtofl@val+3
 20148  005B2C  0E01               	movlw	1
 20149  005B2E  ECED  F01E         	call	___xxtofl
 20150  005B32  C060  F0CA         	movff	?___xxtofl,cal_diff_p_to_h@f1
 20151  005B36  C061  F0CB         	movff	?___xxtofl+1,cal_diff_p_to_h@f1+1
 20152  005B3A  C062  F0CC         	movff	?___xxtofl+2,cal_diff_p_to_h@f1+2
 20153  005B3E  C063  F0CD         	movff	?___xxtofl+3,cal_diff_p_to_h@f1+3
 20154                           
 20155                           ;data.c: 478: f2=(float)(fpSysData->density);
 20156  005B42  0E06               	movlw	6
 20157  005B44  243C               	addwf	_fpSysData,w,c
 20158  005B46  6EF6               	movwf	tblptrl,c
 20159  005B48  0E00               	movlw	0
 20160  005B4A  203D               	addwfc	_fpSysData+1,w,c
 20161  005B4C  6EF7               	movwf	tblptrh,c
 20162  005B4E  0E00               	movlw	0
 20163  005B50  203E               	addwfc	_fpSysData+2,w,c
 20164  005B52  6EF8               	movwf	tblptru,c
 20165  005B54  0009               	tblrd		*+
 20166  005B56  CFF5 F0C4          	movff	tablat,??_cal_diff_p_to_h
 20167  005B5A  0009               	tblrd		*+
 20168  005B5C  CFF5 F0C5          	movff	tablat,??_cal_diff_p_to_h+1
 20169  005B60  C0C4  F060         	movff	??_cal_diff_p_to_h,___xxtofl@val
 20170  005B64  C0C5  F061         	movff	??_cal_diff_p_to_h+1,___xxtofl@val+1
 20171  005B68  0100               	movlb	0	; () banked
 20172  005B6A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 20173  005B6C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 20174  005B6E  0E00               	movlw	0
 20175  005B70  ECED  F01E         	call	___xxtofl
 20176  005B74  C060  F0C6         	movff	?___xxtofl,cal_diff_p_to_h@f2
 20177  005B78  C061  F0C7         	movff	?___xxtofl+1,cal_diff_p_to_h@f2+1
 20178  005B7C  C062  F0C8         	movff	?___xxtofl+2,cal_diff_p_to_h@f2+2
 20179  005B80  C063  F0C9         	movff	?___xxtofl+3,cal_diff_p_to_h@f2+3
 20180                           
 20181                           ;data.c: 479: f1=f1/(f2*9.8f);
 20182  005B84  C0CA  F087         	movff	cal_diff_p_to_h@f1,___fldiv@b
 20183  005B88  C0CB  F088         	movff	cal_diff_p_to_h@f1+1,___fldiv@b+1
 20184  005B8C  C0CC  F089         	movff	cal_diff_p_to_h@f1+2,___fldiv@b+2
 20185  005B90  C0CD  F08A         	movff	cal_diff_p_to_h@f1+3,___fldiv@b+3
 20186  005B94  0ECD               	movlw	205
 20187  005B96  0100               	movlb	0	; () banked
 20188  005B98  6F72               	movwf	___flmul@a& (0+255),b
 20189  005B9A  0ECC               	movlw	204
 20190  005B9C  6F73               	movwf	(___flmul@a+1)& (0+255),b
 20191  005B9E  0E1C               	movlw	28
 20192  005BA0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 20193  005BA2  0E41               	movlw	65
 20194  005BA4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 20195  005BA6  C0C6  F06E         	movff	cal_diff_p_to_h@f2,___flmul@b
 20196  005BAA  C0C7  F06F         	movff	cal_diff_p_to_h@f2+1,___flmul@b+1
 20197  005BAE  C0C8  F070         	movff	cal_diff_p_to_h@f2+2,___flmul@b+2
 20198  005BB2  C0C9  F071         	movff	cal_diff_p_to_h@f2+3,___flmul@b+3
 20199  005BB6  EC94  F00B         	call	___flmul	;wreg free
 20200  005BBA  C06E  F08B         	movff	?___flmul,___fldiv@a
 20201  005BBE  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
 20202  005BC2  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
 20203  005BC6  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
 20204  005BCA  EC48  F012         	call	___fldiv	;wreg free
 20205  005BCE  C087  F0CA         	movff	?___fldiv,cal_diff_p_to_h@f1
 20206  005BD2  C088  F0CB         	movff	?___fldiv+1,cal_diff_p_to_h@f1+1
 20207  005BD6  C089  F0CC         	movff	?___fldiv+2,cal_diff_p_to_h@f1+2
 20208  005BDA  C08A  F0CD         	movff	?___fldiv+3,cal_diff_p_to_h@f1+3
 20209                           
 20210                           ;data.c: 480: rtHight=(int32_t)f1;
 20211  005BDE  C0CA  F0B8         	movff	cal_diff_p_to_h@f1,___fltol@f1
 20212  005BE2  C0CB  F0B9         	movff	cal_diff_p_to_h@f1+1,___fltol@f1+1
 20213  005BE6  C0CC  F0BA         	movff	cal_diff_p_to_h@f1+2,___fltol@f1+2
 20214  005BEA  C0CD  F0BB         	movff	cal_diff_p_to_h@f1+3,___fltol@f1+3
 20215  005BEE  EC01  F02B         	call	___fltol	;wreg free
 20216  005BF2  C0B8  F021         	movff	?___fltol,_rtHight	;volatile
 20217  005BF6  C0B9  F022         	movff	?___fltol+1,_rtHight+1	;volatile
 20218  005BFA  C0BA  F023         	movff	?___fltol+2,_rtHight+2	;volatile
 20219  005BFE  C0BB  F024         	movff	?___fltol+3,_rtHight+3	;volatile
 20220  005C02  0012               	return	
 20221  005C04                     __end_of_cal_diff_p_to_h:
 20222                           	opt stack 0
 20223                           tosu	equ	0xFFF
 20224                           tosh	equ	0xFFE
 20225                           tosl	equ	0xFFD
 20226                           pclath	equ	0xFFA
 20227                           tblptru	equ	0xFF8
 20228                           tblptrh	equ	0xFF7
 20229                           tblptrl	equ	0xFF6
 20230                           tablat	equ	0xFF5
 20231                           prodh	equ	0xFF4
 20232                           prodl	equ	0xFF3
 20233                           intcon	equ	0xFF2
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           fsr0h	equ	0xFEA
 20237                           fsr0l	equ	0xFE9
 20238                           wreg	equ	0xFE8
 20239                           postinc1	equ	0xFE6
 20240                           postdec1	equ	0xFE5
 20241                           plusw1	equ	0xFE3
 20242                           fsr1h	equ	0xFE2
 20243                           fsr1l	equ	0xFE1
 20244                           indf2	equ	0xFDF
 20245                           postinc2	equ	0xFDE
 20246                           postdec2	equ	0xFDD
 20247                           plusw2	equ	0xFDB
 20248                           fsr2h	equ	0xFDA
 20249                           fsr2l	equ	0xFD9
 20250                           status	equ	0xFD8
 20251                           
 20252 ;; *************** function _cal_diff_hight_to_vol_v *****************
 20253 ;; Defined at:
 20254 ;;		line 442 in file "src/api/data.c"
 20255 ;; Parameters:    Size  Location     Type
 20256 ;;  h               4  134[BANK0 ] long 
 20257 ;; Auto vars:     Size  Location     Type
 20258 ;;  f1              4  154[BANK0 ] float 
 20259 ;;  D               4  150[BANK0 ] float 
 20260 ;;  v2              4  146[BANK0 ] float 
 20261 ;;  v1              4  142[BANK0 ] float 
 20262 ;; Return value:  Size  Location     Type
 20263 ;;                  4  134[BANK0 ] long 
 20264 ;; Registers used:
 20265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20266 ;; Tracked objects:
 20267 ;;		On entry : 0/0
 20268 ;;		On exit  : 0/0
 20269 ;;		Unchanged: 0/0
 20270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20272 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20274 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20275 ;;Total ram usage:       24 bytes
 20276 ;; Hardware stack levels used:    1
 20277 ;; Hardware stack levels required when called:    6
 20278 ;; This function calls:
 20279 ;;		___fladd
 20280 ;;		___fldiv
 20281 ;;		___flge
 20282 ;;		___flmul
 20283 ;;		___flneg
 20284 ;;		___fltol
 20285 ;;		___xxtofl
 20286 ;;		_m_interp1_float_fast
 20287 ;; This function is called by:
 20288 ;;		_cal_diff_press
 20289 ;; This function uses a non-reentrant model
 20290 ;;
 20291                           
 20292                           	psect	text101
 20293  0000DC                     __ptext101:
 20294                           	opt stack 0
 20295  0000DC                     _cal_diff_hight_to_vol_v:
 20296                           	opt stack 21
 20297                           
 20298                           ;data.c: 444: float v1,v2;
 20299                           ;data.c: 445: float f1,D;
 20300                           ;data.c: 446: v1=(float)(fpSysData->V1);
 20301                           
 20302                           ;incstack = 0
 20303  0000DC  0E10               	movlw	16
 20304  0000DE  243C               	addwf	_fpSysData,w,c
 20305  0000E0  6EF6               	movwf	tblptrl,c
 20306  0000E2  0E00               	movlw	0
 20307  0000E4  203D               	addwfc	_fpSysData+1,w,c
 20308  0000E6  6EF7               	movwf	tblptrh,c
 20309  0000E8  0E00               	movlw	0
 20310  0000EA  203E               	addwfc	_fpSysData+2,w,c
 20311  0000EC  6EF8               	movwf	tblptru,c
 20312  0000EE  0009               	tblrd		*+
 20313  0000F0  CFF5 F060          	movff	tablat,___xxtofl@val
 20314  0000F4  0009               	tblrd		*+
 20315  0000F6  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20316  0000FA  0009               	tblrd		*+
 20317  0000FC  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20318  000100  000A               	tblrd		*-
 20319  000102  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20320  000106  0E01               	movlw	1
 20321  000108  ECED  F01E         	call	___xxtofl
 20322  00010C  C060  F0EE         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v1
 20323  000110  C061  F0EF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v1+1
 20324  000114  C062  F0F0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v1+2
 20325  000118  C063  F0F1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v1+3
 20326                           
 20327                           ;data.c: 447: v2=(float)(fpSysData->V2);
 20328  00011C  0E14               	movlw	20
 20329  00011E  243C               	addwf	_fpSysData,w,c
 20330  000120  6EF6               	movwf	tblptrl,c
 20331  000122  0E00               	movlw	0
 20332  000124  203D               	addwfc	_fpSysData+1,w,c
 20333  000126  6EF7               	movwf	tblptrh,c
 20334  000128  0E00               	movlw	0
 20335  00012A  203E               	addwfc	_fpSysData+2,w,c
 20336  00012C  6EF8               	movwf	tblptru,c
 20337  00012E  0009               	tblrd		*+
 20338  000130  CFF5 F060          	movff	tablat,___xxtofl@val
 20339  000134  0009               	tblrd		*+
 20340  000136  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20341  00013A  0009               	tblrd		*+
 20342  00013C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20343  000140  000A               	tblrd		*-
 20344  000142  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20345  000146  0E01               	movlw	1
 20346  000148  ECED  F01E         	call	___xxtofl
 20347  00014C  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 20348  000150  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 20349  000154  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 20350  000158  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 20351                           
 20352                           ;data.c: 449: f1=(float)h;
 20353  00015C  C0E6  F060         	movff	cal_diff_hight_to_vol_v@h,___xxtofl@val
 20354  000160  C0E7  F061         	movff	cal_diff_hight_to_vol_v@h+1,___xxtofl@val+1
 20355  000164  C0E8  F062         	movff	cal_diff_hight_to_vol_v@h+2,___xxtofl@val+2
 20356  000168  C0E9  F063         	movff	cal_diff_hight_to_vol_v@h+3,___xxtofl@val+3
 20357  00016C  0E01               	movlw	1
 20358  00016E  ECED  F01E         	call	___xxtofl
 20359  000172  C060  F0FA         	movff	?___xxtofl,cal_diff_hight_to_vol_v@f1
 20360  000176  C061  F0FB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@f1+1
 20361  00017A  C062  F0FC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@f1+2
 20362  00017E  C063  F0FD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@f1+3
 20363                           
 20364                           ;data.c: 450: D=(float)(fpSysData->d);
 20365  000182  0E0C               	movlw	12
 20366  000184  243C               	addwf	_fpSysData,w,c
 20367  000186  6EF6               	movwf	tblptrl,c
 20368  000188  0E00               	movlw	0
 20369  00018A  203D               	addwfc	_fpSysData+1,w,c
 20370  00018C  6EF7               	movwf	tblptrh,c
 20371  00018E  0E00               	movlw	0
 20372  000190  203E               	addwfc	_fpSysData+2,w,c
 20373  000192  6EF8               	movwf	tblptru,c
 20374  000194  0009               	tblrd		*+
 20375  000196  CFF5 F060          	movff	tablat,___xxtofl@val
 20376  00019A  0009               	tblrd		*+
 20377  00019C  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20378  0001A0  0009               	tblrd		*+
 20379  0001A2  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20380  0001A6  000A               	tblrd		*-
 20381  0001A8  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20382  0001AC  0E00               	movlw	0
 20383  0001AE  ECED  F01E         	call	___xxtofl
 20384  0001B2  C060  F0F6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@D
 20385  0001B6  C061  F0F7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@D+1
 20386  0001BA  C062  F0F8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@D+2
 20387  0001BE  C063  F0F9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@D+3
 20388                           
 20389                           ;data.c: 451: if(f1<D/4){
 20390  0001C2  C0FA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 20391  0001C6  C0FB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 20392  0001CA  C0FC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 20393  0001CE  C0FD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 20394  0001D2  0E00               	movlw	0
 20395  0001D4  0100               	movlb	0	; () banked
 20396  0001D6  6F8B               	movwf	___fldiv@a& (0+255),b
 20397  0001D8  0E00               	movlw	0
 20398  0001DA  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20399  0001DC  0E80               	movlw	128
 20400  0001DE  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20401  0001E0  0E40               	movlw	64
 20402  0001E2  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20403  0001E4  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20404  0001E8  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20405  0001EC  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20406  0001F0  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20407  0001F4  EC48  F012         	call	___fldiv	;wreg free
 20408  0001F8  C087  F0BC         	movff	?___fldiv,___flge@ff2
 20409  0001FC  C088  F0BD         	movff	?___fldiv+1,___flge@ff2+1
 20410  000200  C089  F0BE         	movff	?___fldiv+2,___flge@ff2+2
 20411  000204  C08A  F0BF         	movff	?___fldiv+3,___flge@ff2+3
 20412  000208  EC4C  F023         	call	___flge	;wreg free
 20413  00020C  0100               	movlb	0	; () banked
 20414  00020E  B0D8               	btfsc	status,0,c
 20415  000210  D07D               	goto	l12487
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;data.c: 452: f1=2*f1/D;
 20419  000212  0E00               	movlw	0
 20420  000214  0100               	movlb	0	; () banked
 20421  000216  6F72               	movwf	___flmul@a& (0+255),b
 20422  000218  0E00               	movlw	0
 20423  00021A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 20424  00021C  0E00               	movlw	0
 20425  00021E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 20426  000220  0E40               	movlw	64
 20427  000222  6F75               	movwf	(___flmul@a+3)& (0+255),b
 20428  000224  C0FA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 20429  000228  C0FB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 20430  00022C  C0FC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 20431  000230  C0FD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 20432  000234  EC94  F00B         	call	___flmul	;wreg free
 20433  000238  C06E  F087         	movff	?___flmul,___fldiv@b
 20434  00023C  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 20435  000240  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 20436  000244  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 20437  000248  C0F6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 20438  00024C  C0F7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 20439  000250  C0F8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 20440  000254  C0F9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 20441  000258  EC48  F012         	call	___fldiv	;wreg free
 20442  00025C  C087  F0FA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 20443  000260  C088  F0FB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 20444  000264  C089  F0FC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 20445  000268  C08A  F0FD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 20446                           
 20447                           ;data.c: 453: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 20448  00026C  0EED               	movlw	low _hKel
 20449  00026E  0100               	movlb	0	; () banked
 20450  000270  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 20451  000272  0EEF               	movlw	high _hKel
 20452  000274  0100               	movlb	0	; () banked
 20453  000276  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 20454  000278  C0FA  F0C6         	movff	cal_diff_hight_to_vol_v@f1,m_interp1_float_fast@in
 20455  00027C  C0FB  F0C7         	movff	cal_diff_hight_to_vol_v@f1+1,m_interp1_float_fast@in+1
 20456  000280  C0FC  F0C8         	movff	cal_diff_hight_to_vol_v@f1+2,m_interp1_float_fast@in+2
 20457  000284  C0FD  F0C9         	movff	cal_diff_hight_to_vol_v@f1+3,m_interp1_float_fast@in+3
 20458  000288  0E00               	movlw	0
 20459  00028A  0100               	movlb	0	; () banked
 20460  00028C  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 20461  00028E  0E65               	movlw	101
 20462  000290  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 20463  000292  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 20464  000296  C0C4  F0FA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_v@f1
 20465  00029A  C0C5  F0FB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_v@f1+1
 20466  00029E  C0C6  F0FC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_v@f1+2
 20467  0002A2  C0C7  F0FD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_v@f1+3
 20468                           
 20469                           ;data.c: 454: v2=(float)(fpSysData->V2);
 20470  0002A6  0E14               	movlw	20
 20471  0002A8  243C               	addwf	_fpSysData,w,c
 20472  0002AA  6EF6               	movwf	tblptrl,c
 20473  0002AC  0E00               	movlw	0
 20474  0002AE  203D               	addwfc	_fpSysData+1,w,c
 20475  0002B0  6EF7               	movwf	tblptrh,c
 20476  0002B2  0E00               	movlw	0
 20477  0002B4  203E               	addwfc	_fpSysData+2,w,c
 20478  0002B6  6EF8               	movwf	tblptru,c
 20479  0002B8  0009               	tblrd		*+
 20480  0002BA  CFF5 F060          	movff	tablat,___xxtofl@val
 20481  0002BE  0009               	tblrd		*+
 20482  0002C0  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20483  0002C4  0009               	tblrd		*+
 20484  0002C6  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20485  0002CA  000A               	tblrd		*-
 20486  0002CC  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20487  0002D0  0E01               	movlw	1
 20488  0002D2  ECED  F01E         	call	___xxtofl
 20489  0002D6  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 20490  0002DA  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 20491  0002DE  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 20492  0002E2  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 20493                           
 20494                           ;data.c: 455: return (int32_t)v2;
 20495  0002E6  C0F2  F0B8         	movff	cal_diff_hight_to_vol_v@v2,___fltol@f1
 20496  0002EA  C0F3  F0B9         	movff	cal_diff_hight_to_vol_v@v2+1,___fltol@f1+1
 20497  0002EE  C0F4  F0BA         	movff	cal_diff_hight_to_vol_v@v2+2,___fltol@f1+2
 20498  0002F2  C0F5  F0BB         	movff	cal_diff_hight_to_vol_v@v2+3,___fltol@f1+3
 20499  0002F6  EC01  F02B         	call	___fltol	;wreg free
 20500  0002FA  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 20501  0002FE  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 20502  000302  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 20503  000306  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 20504                           
 20505                           ;data.c: 456: }else if(f1<D/4+fpSysData->h){
 20506  00030A  0012               	return	
 20507  00030C                     l12487:
 20508  00030C  C0FA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 20509  000310  C0FB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 20510  000314  C0FC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 20511  000318  C0FD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 20512  00031C  0E08               	movlw	8
 20513  00031E  243C               	addwf	_fpSysData,w,c
 20514  000320  6EF6               	movwf	tblptrl,c
 20515  000322  0E00               	movlw	0
 20516  000324  203D               	addwfc	_fpSysData+1,w,c
 20517  000326  6EF7               	movwf	tblptrh,c
 20518  000328  0E00               	movlw	0
 20519  00032A  203E               	addwfc	_fpSysData+2,w,c
 20520  00032C  6EF8               	movwf	tblptru,c
 20521  00032E  0009               	tblrd		*+
 20522  000330  CFF5 F060          	movff	tablat,___xxtofl@val
 20523  000334  0009               	tblrd		*+
 20524  000336  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20525  00033A  0009               	tblrd		*+
 20526  00033C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20527  000340  000A               	tblrd		*-
 20528  000342  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20529  000346  0E01               	movlw	1
 20530  000348  ECED  F01E         	call	___xxtofl
 20531  00034C  C060  F0A8         	movff	?___xxtofl,___fladd@a
 20532  000350  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 20533  000354  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 20534  000358  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 20535  00035C  0E00               	movlw	0
 20536  00035E  0100               	movlb	0	; () banked
 20537  000360  6F8B               	movwf	___fldiv@a& (0+255),b
 20538  000362  0E00               	movlw	0
 20539  000364  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20540  000366  0E80               	movlw	128
 20541  000368  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20542  00036A  0E40               	movlw	64
 20543  00036C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20544  00036E  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20545  000372  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20546  000376  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20547  00037A  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20548  00037E  EC48  F012         	call	___fldiv	;wreg free
 20549  000382  C087  F0A4         	movff	?___fldiv,___fladd@b
 20550  000386  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 20551  00038A  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 20552  00038E  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 20553  000392  EC40  F009         	call	___fladd	;wreg free
 20554  000396  C0A4  F0BC         	movff	?___fladd,___flge@ff2
 20555  00039A  C0A5  F0BD         	movff	?___fladd+1,___flge@ff2+1
 20556  00039E  C0A6  F0BE         	movff	?___fladd+2,___flge@ff2+2
 20557  0003A2  C0A7  F0BF         	movff	?___fladd+3,___flge@ff2+3
 20558  0003A6  EC4C  F023         	call	___flge	;wreg free
 20559  0003AA  0100               	movlb	0	; () banked
 20560  0003AC  B0D8               	btfsc	status,0,c
 20561  0003AE  D0BB               	goto	l12501
 20562                           
 20563                           ; BSR set to: 0
 20564                           ;data.c: 457: f1=f1-D/4;
 20565  0003B0  0E00               	movlw	0
 20566  0003B2  0100               	movlb	0	; () banked
 20567  0003B4  6F8B               	movwf	___fldiv@a& (0+255),b
 20568  0003B6  0E00               	movlw	0
 20569  0003B8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20570  0003BA  0E80               	movlw	128
 20571  0003BC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20572  0003BE  0E40               	movlw	64
 20573  0003C0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20574  0003C2  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20575  0003C6  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20576  0003CA  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20577  0003CE  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20578  0003D2  EC48  F012         	call	___fldiv	;wreg free
 20579  0003D6  C087  F0A0         	movff	?___fldiv,___flneg@f1
 20580  0003DA  C088  F0A1         	movff	?___fldiv+1,___flneg@f1+1
 20581  0003DE  C089  F0A2         	movff	?___fldiv+2,___flneg@f1+2
 20582  0003E2  C08A  F0A3         	movff	?___fldiv+3,___flneg@f1+3
 20583  0003E6  EC8C  F03E         	call	___flneg	;wreg free
 20584  0003EA  C0A0  F0A4         	movff	?___flneg,___fladd@b
 20585  0003EE  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 20586  0003F2  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 20587  0003F6  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 20588  0003FA  C0FA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 20589  0003FE  C0FB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 20590  000402  C0FC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 20591  000406  C0FD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 20592  00040A  EC40  F009         	call	___fladd	;wreg free
 20593  00040E  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 20594  000412  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 20595  000416  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 20596  00041A  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 20597                           
 20598                           ;data.c: 458: v2=v2*(f1/fpSysData->h);
 20599  00041E  0E08               	movlw	8
 20600  000420  243C               	addwf	_fpSysData,w,c
 20601  000422  6EF6               	movwf	tblptrl,c
 20602  000424  0E00               	movlw	0
 20603  000426  203D               	addwfc	_fpSysData+1,w,c
 20604  000428  6EF7               	movwf	tblptrh,c
 20605  00042A  0E00               	movlw	0
 20606  00042C  203E               	addwfc	_fpSysData+2,w,c
 20607  00042E  6EF8               	movwf	tblptru,c
 20608  000430  0009               	tblrd		*+
 20609  000432  CFF5 F060          	movff	tablat,___xxtofl@val
 20610  000436  0009               	tblrd		*+
 20611  000438  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20612  00043C  0009               	tblrd		*+
 20613  00043E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20614  000442  000A               	tblrd		*-
 20615  000444  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20616  000448  0E01               	movlw	1
 20617  00044A  ECED  F01E         	call	___xxtofl
 20618  00044E  C060  F08B         	movff	?___xxtofl,___fldiv@a
 20619  000452  C061  F08C         	movff	?___xxtofl+1,___fldiv@a+1
 20620  000456  C062  F08D         	movff	?___xxtofl+2,___fldiv@a+2
 20621  00045A  C063  F08E         	movff	?___xxtofl+3,___fldiv@a+3
 20622  00045E  C0FA  F087         	movff	cal_diff_hight_to_vol_v@f1,___fldiv@b
 20623  000462  C0FB  F088         	movff	cal_diff_hight_to_vol_v@f1+1,___fldiv@b+1
 20624  000466  C0FC  F089         	movff	cal_diff_hight_to_vol_v@f1+2,___fldiv@b+2
 20625  00046A  C0FD  F08A         	movff	cal_diff_hight_to_vol_v@f1+3,___fldiv@b+3
 20626  00046E  EC48  F012         	call	___fldiv	;wreg free
 20627  000472  C087  F06E         	movff	?___fldiv,___flmul@b
 20628  000476  C088  F06F         	movff	?___fldiv+1,___flmul@b+1
 20629  00047A  C089  F070         	movff	?___fldiv+2,___flmul@b+2
 20630  00047E  C08A  F071         	movff	?___fldiv+3,___flmul@b+3
 20631  000482  C0F2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 20632  000486  C0F3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 20633  00048A  C0F4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 20634  00048E  C0F5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 20635  000492  EC94  F00B         	call	___flmul	;wreg free
 20636  000496  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 20637  00049A  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 20638  00049E  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 20639  0004A2  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 20640                           
 20641                           ;data.c: 459: v1=v1/2;
 20642  0004A6  C0EE  F087         	movff	cal_diff_hight_to_vol_v@v1,___fldiv@b
 20643  0004AA  C0EF  F088         	movff	cal_diff_hight_to_vol_v@v1+1,___fldiv@b+1
 20644  0004AE  C0F0  F089         	movff	cal_diff_hight_to_vol_v@v1+2,___fldiv@b+2
 20645  0004B2  C0F1  F08A         	movff	cal_diff_hight_to_vol_v@v1+3,___fldiv@b+3
 20646  0004B6  0E00               	movlw	0
 20647  0004B8  0100               	movlb	0	; () banked
 20648  0004BA  6F8B               	movwf	___fldiv@a& (0+255),b
 20649  0004BC  0E00               	movlw	0
 20650  0004BE  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20651  0004C0  0E00               	movlw	0
 20652  0004C2  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20653  0004C4  0E40               	movlw	64
 20654  0004C6  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20655  0004C8  EC48  F012         	call	___fldiv	;wreg free
 20656  0004CC  C087  F0EE         	movff	?___fldiv,cal_diff_hight_to_vol_v@v1
 20657  0004D0  C088  F0EF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@v1+1
 20658  0004D4  C089  F0F0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@v1+2
 20659  0004D8  C08A  F0F1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@v1+3
 20660                           
 20661                           ;data.c: 460: return (int32_t)(v1+v2);
 20662  0004DC  C0F2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 20663  0004E0  C0F3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 20664  0004E4  C0F4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 20665  0004E8  C0F5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 20666  0004EC  C0EE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 20667  0004F0  C0EF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 20668  0004F4  C0F0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 20669  0004F8  C0F1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 20670  0004FC  EC40  F009         	call	___fladd	;wreg free
 20671  000500  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 20672  000504  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 20673  000508  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 20674  00050C  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 20675  000510  EC01  F02B         	call	___fltol	;wreg free
 20676  000514  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 20677  000518  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 20678  00051C  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 20679  000520  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 20680                           
 20681                           ;data.c: 461: }else{
 20682  000524  0012               	return	
 20683  000526                     l12501:
 20684                           
 20685                           ;data.c: 462: if(f1>(float)(fpSysData->h)+D/2)f1=(float)(fpSysData->h)+D/2;
 20686  000526  0E00               	movlw	0
 20687  000528  0100               	movlb	0	; () banked
 20688  00052A  6F8B               	movwf	___fldiv@a& (0+255),b
 20689  00052C  0E00               	movlw	0
 20690  00052E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20691  000530  0E00               	movlw	0
 20692  000532  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20693  000534  0E40               	movlw	64
 20694  000536  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20695  000538  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20696  00053C  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20697  000540  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20698  000544  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20699  000548  EC48  F012         	call	___fldiv	;wreg free
 20700  00054C  C087  F0A8         	movff	?___fldiv,___fladd@a
 20701  000550  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 20702  000554  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 20703  000558  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 20704  00055C  0E08               	movlw	8
 20705  00055E  243C               	addwf	_fpSysData,w,c
 20706  000560  6EF6               	movwf	tblptrl,c
 20707  000562  0E00               	movlw	0
 20708  000564  203D               	addwfc	_fpSysData+1,w,c
 20709  000566  6EF7               	movwf	tblptrh,c
 20710  000568  0E00               	movlw	0
 20711  00056A  203E               	addwfc	_fpSysData+2,w,c
 20712  00056C  6EF8               	movwf	tblptru,c
 20713  00056E  0009               	tblrd		*+
 20714  000570  CFF5 F060          	movff	tablat,___xxtofl@val
 20715  000574  0009               	tblrd		*+
 20716  000576  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20717  00057A  0009               	tblrd		*+
 20718  00057C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20719  000580  000A               	tblrd		*-
 20720  000582  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20721  000586  0E01               	movlw	1
 20722  000588  ECED  F01E         	call	___xxtofl
 20723  00058C  C060  F0A4         	movff	?___xxtofl,___fladd@b
 20724  000590  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 20725  000594  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 20726  000598  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 20727  00059C  EC40  F009         	call	___fladd	;wreg free
 20728  0005A0  C0A4  F0B8         	movff	?___fladd,___flge@ff1
 20729  0005A4  C0A5  F0B9         	movff	?___fladd+1,___flge@ff1+1
 20730  0005A8  C0A6  F0BA         	movff	?___fladd+2,___flge@ff1+2
 20731  0005AC  C0A7  F0BB         	movff	?___fladd+3,___flge@ff1+3
 20732  0005B0  C0FA  F0BC         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff2
 20733  0005B4  C0FB  F0BD         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff2+1
 20734  0005B8  C0FC  F0BE         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff2+2
 20735  0005BC  C0FD  F0BF         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff2+3
 20736  0005C0  EC4C  F023         	call	___flge	;wreg free
 20737  0005C4  0100               	movlb	0	; () banked
 20738  0005C6  B0D8               	btfsc	status,0,c
 20739  0005C8  D045               	goto	l175
 20740                           
 20741                           ; BSR set to: 0
 20742  0005CA  0E08               	movlw	8
 20743  0005CC  243C               	addwf	_fpSysData,w,c
 20744  0005CE  6EF6               	movwf	tblptrl,c
 20745  0005D0  0E00               	movlw	0
 20746  0005D2  203D               	addwfc	_fpSysData+1,w,c
 20747  0005D4  6EF7               	movwf	tblptrh,c
 20748  0005D6  0E00               	movlw	0
 20749  0005D8  203E               	addwfc	_fpSysData+2,w,c
 20750  0005DA  6EF8               	movwf	tblptru,c
 20751  0005DC  0009               	tblrd		*+
 20752  0005DE  CFF5 F060          	movff	tablat,___xxtofl@val
 20753  0005E2  0009               	tblrd		*+
 20754  0005E4  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20755  0005E8  0009               	tblrd		*+
 20756  0005EA  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20757  0005EE  000A               	tblrd		*-
 20758  0005F0  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20759  0005F4  0E01               	movlw	1
 20760  0005F6  ECED  F01E         	call	___xxtofl
 20761  0005FA  C060  F0A4         	movff	?___xxtofl,___fladd@b
 20762  0005FE  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 20763  000602  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 20764  000606  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 20765  00060A  0E00               	movlw	0
 20766  00060C  0100               	movlb	0	; () banked
 20767  00060E  6F8B               	movwf	___fldiv@a& (0+255),b
 20768  000610  0E00               	movlw	0
 20769  000612  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20770  000614  0E00               	movlw	0
 20771  000616  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20772  000618  0E40               	movlw	64
 20773  00061A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20774  00061C  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20775  000620  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20776  000624  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20777  000628  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20778  00062C  EC48  F012         	call	___fldiv	;wreg free
 20779  000630  C087  F0A8         	movff	?___fldiv,___fladd@a
 20780  000634  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 20781  000638  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 20782  00063C  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 20783  000640  EC40  F009         	call	___fladd	;wreg free
 20784  000644  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 20785  000648  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 20786  00064C  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 20787  000650  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 20788  000654                     l175:
 20789                           
 20790                           ;data.c: 464: f1=f1-(D/4)-(float)(fpSysData->h);
 20791  000654  0E08               	movlw	8
 20792  000656  243C               	addwf	_fpSysData,w,c
 20793  000658  6EF6               	movwf	tblptrl,c
 20794  00065A  0E00               	movlw	0
 20795  00065C  203D               	addwfc	_fpSysData+1,w,c
 20796  00065E  6EF7               	movwf	tblptrh,c
 20797  000660  0E00               	movlw	0
 20798  000662  203E               	addwfc	_fpSysData+2,w,c
 20799  000664  6EF8               	movwf	tblptru,c
 20800  000666  0009               	tblrd		*+
 20801  000668  CFF5 F060          	movff	tablat,___xxtofl@val
 20802  00066C  0009               	tblrd		*+
 20803  00066E  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20804  000672  0009               	tblrd		*+
 20805  000674  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20806  000678  000A               	tblrd		*-
 20807  00067A  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20808  00067E  0E01               	movlw	1
 20809  000680  ECED  F01E         	call	___xxtofl
 20810  000684  C060  F0A8         	movff	?___xxtofl,___fladd@a
 20811  000688  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 20812  00068C  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 20813  000690  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 20814  000694  0E00               	movlw	0
 20815  000696  0100               	movlb	0	; () banked
 20816  000698  6F8B               	movwf	___fldiv@a& (0+255),b
 20817  00069A  0E00               	movlw	0
 20818  00069C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20819  00069E  0E80               	movlw	128
 20820  0006A0  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20821  0006A2  0E40               	movlw	64
 20822  0006A4  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20823  0006A6  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 20824  0006AA  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 20825  0006AE  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 20826  0006B2  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 20827  0006B6  EC48  F012         	call	___fldiv	;wreg free
 20828  0006BA  C087  F0A4         	movff	?___fldiv,___fladd@b
 20829  0006BE  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 20830  0006C2  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 20831  0006C6  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 20832  0006CA  EC40  F009         	call	___fladd	;wreg free
 20833  0006CE  C0A4  F0A0         	movff	?___fladd,___flneg@f1
 20834  0006D2  C0A5  F0A1         	movff	?___fladd+1,___flneg@f1+1
 20835  0006D6  C0A6  F0A2         	movff	?___fladd+2,___flneg@f1+2
 20836  0006DA  C0A7  F0A3         	movff	?___fladd+3,___flneg@f1+3
 20837  0006DE  EC8C  F03E         	call	___flneg	;wreg free
 20838  0006E2  C0A0  F0EA         	movff	?___flneg,_cal_diff_hight_to_vol_v$4416
 20839  0006E6  C0A1  F0EB         	movff	?___flneg+1,_cal_diff_hight_to_vol_v$4416+1
 20840  0006EA  C0A2  F0EC         	movff	?___flneg+2,_cal_diff_hight_to_vol_v$4416+2
 20841  0006EE  C0A3  F0ED         	movff	?___flneg+3,_cal_diff_hight_to_vol_v$4416+3
 20842                           
 20843                           ;data.c: 464: f1=f1-(D/4)-(float)(fpSysData->h);
 20844  0006F2  C0EA  F0A4         	movff	_cal_diff_hight_to_vol_v$4416,___fladd@b
 20845  0006F6  C0EB  F0A5         	movff	_cal_diff_hight_to_vol_v$4416+1,___fladd@b+1
 20846  0006FA  C0EC  F0A6         	movff	_cal_diff_hight_to_vol_v$4416+2,___fladd@b+2
 20847  0006FE  C0ED  F0A7         	movff	_cal_diff_hight_to_vol_v$4416+3,___fladd@b+3
 20848  000702  C0FA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 20849  000706  C0FB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 20850  00070A  C0FC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 20851  00070E  C0FD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 20852  000712  EC40  F009         	call	___fladd	;wreg free
 20853  000716  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 20854  00071A  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 20855  00071E  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 20856  000722  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 20857                           
 20858                           ;data.c: 465: f1=2*f1/D;
 20859  000726  0E00               	movlw	0
 20860  000728  0100               	movlb	0	; () banked
 20861  00072A  6F72               	movwf	___flmul@a& (0+255),b
 20862  00072C  0E00               	movlw	0
 20863  00072E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 20864  000730  0E00               	movlw	0
 20865  000732  6F74               	movwf	(___flmul@a+2)& (0+255),b
 20866  000734  0E40               	movlw	64
 20867  000736  6F75               	movwf	(___flmul@a+3)& (0+255),b
 20868  000738  C0FA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 20869  00073C  C0FB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 20870  000740  C0FC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 20871  000744  C0FD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 20872  000748  EC94  F00B         	call	___flmul	;wreg free
 20873  00074C  C06E  F087         	movff	?___flmul,___fldiv@b
 20874  000750  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 20875  000754  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 20876  000758  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 20877  00075C  C0F6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 20878  000760  C0F7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 20879  000764  C0F8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 20880  000768  C0F9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 20881  00076C  EC48  F012         	call	___fldiv	;wreg free
 20882  000770  C087  F0FA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 20883  000774  C088  F0FB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 20884  000778  C089  F0FC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 20885  00077C  C08A  F0FD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 20886                           
 20887                           ;data.c: 466: f1=0.5-f1;
 20888  000780  C0FA  F0A0         	movff	cal_diff_hight_to_vol_v@f1,___flneg@f1
 20889  000784  C0FB  F0A1         	movff	cal_diff_hight_to_vol_v@f1+1,___flneg@f1+1
 20890  000788  C0FC  F0A2         	movff	cal_diff_hight_to_vol_v@f1+2,___flneg@f1+2
 20891  00078C  C0FD  F0A3         	movff	cal_diff_hight_to_vol_v@f1+3,___flneg@f1+3
 20892  000790  EC8C  F03E         	call	___flneg	;wreg free
 20893  000794  C0A0  F0A4         	movff	?___flneg,___fladd@b
 20894  000798  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 20895  00079C  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 20896  0007A0  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 20897  0007A4  0E00               	movlw	0
 20898  0007A6  0100               	movlb	0	; () banked
 20899  0007A8  6FA8               	movwf	___fladd@a& (0+255),b
 20900  0007AA  0E00               	movlw	0
 20901  0007AC  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 20902  0007AE  0E00               	movlw	0
 20903  0007B0  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 20904  0007B2  0E3F               	movlw	63
 20905  0007B4  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 20906  0007B6  EC40  F009         	call	___fladd	;wreg free
 20907  0007BA  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 20908  0007BE  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 20909  0007C2  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 20910  0007C6  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 20911                           
 20912                           ;data.c: 467: v2=v2*(0.5+f1);
 20913  0007CA  0E00               	movlw	0
 20914  0007CC  0100               	movlb	0	; () banked
 20915  0007CE  6FA8               	movwf	___fladd@a& (0+255),b
 20916  0007D0  0E00               	movlw	0
 20917  0007D2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 20918  0007D4  0E00               	movlw	0
 20919  0007D6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 20920  0007D8  0E3F               	movlw	63
 20921  0007DA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 20922  0007DC  C0FA  F0A4         	movff	cal_diff_hight_to_vol_v@f1,___fladd@b
 20923  0007E0  C0FB  F0A5         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@b+1
 20924  0007E4  C0FC  F0A6         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@b+2
 20925  0007E8  C0FD  F0A7         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@b+3
 20926  0007EC  EC40  F009         	call	___fladd	;wreg free
 20927  0007F0  C0A4  F06E         	movff	?___fladd,___flmul@b
 20928  0007F4  C0A5  F06F         	movff	?___fladd+1,___flmul@b+1
 20929  0007F8  C0A6  F070         	movff	?___fladd+2,___flmul@b+2
 20930  0007FC  C0A7  F071         	movff	?___fladd+3,___flmul@b+3
 20931  000800  C0F2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 20932  000804  C0F3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 20933  000808  C0F4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 20934  00080C  C0F5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 20935  000810  EC94  F00B         	call	___flmul	;wreg free
 20936  000814  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 20937  000818  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 20938  00081C  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 20939  000820  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 20940                           
 20941                           ;data.c: 468: return (int32_t)(v1+v2);
 20942  000824  C0F2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 20943  000828  C0F3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 20944  00082C  C0F4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 20945  000830  C0F5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 20946  000834  C0EE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 20947  000838  C0EF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 20948  00083C  C0F0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 20949  000840  C0F1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 20950  000844  EC40  F009         	call	___fladd	;wreg free
 20951  000848  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 20952  00084C  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 20953  000850  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 20954  000854  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 20955  000858  EC01  F02B         	call	___fltol	;wreg free
 20956  00085C  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 20957  000860  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 20958  000864  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 20959  000868  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 20960  00086C  0012               	return	
 20961  00086E                     __end_of_cal_diff_hight_to_vol_v:
 20962                           	opt stack 0
 20963                           tosu	equ	0xFFF
 20964                           tosh	equ	0xFFE
 20965                           tosl	equ	0xFFD
 20966                           pclath	equ	0xFFA
 20967                           tblptru	equ	0xFF8
 20968                           tblptrh	equ	0xFF7
 20969                           tblptrl	equ	0xFF6
 20970                           tablat	equ	0xFF5
 20971                           prodh	equ	0xFF4
 20972                           prodl	equ	0xFF3
 20973                           intcon	equ	0xFF2
 20974                           indf0	equ	0xFEF
 20975                           postinc0	equ	0xFEE
 20976                           fsr0h	equ	0xFEA
 20977                           fsr0l	equ	0xFE9
 20978                           wreg	equ	0xFE8
 20979                           postinc1	equ	0xFE6
 20980                           postdec1	equ	0xFE5
 20981                           plusw1	equ	0xFE3
 20982                           fsr1h	equ	0xFE2
 20983                           fsr1l	equ	0xFE1
 20984                           indf2	equ	0xFDF
 20985                           postinc2	equ	0xFDE
 20986                           postdec2	equ	0xFDD
 20987                           plusw2	equ	0xFDB
 20988                           fsr2h	equ	0xFDA
 20989                           fsr2l	equ	0xFD9
 20990                           status	equ	0xFD8
 20991                           
 20992 ;; *************** function _cal_diff_hight_to_vol_h *****************
 20993 ;; Defined at:
 20994 ;;		line 401 in file "src/api/data.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;  h               4  134[BANK0 ] long 
 20997 ;; Auto vars:     Size  Location     Type
 20998 ;;  f1              4  150[BANK0 ] float 
 20999 ;;  v1              4  146[BANK0 ] float 
 21000 ;;  f2              4  142[BANK0 ] float 
 21001 ;;  v2              4  138[BANK0 ] float 
 21002 ;; Return value:  Size  Location     Type
 21003 ;;                  4  134[BANK0 ] long 
 21004 ;; Registers used:
 21005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21012 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21014 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21015 ;;Total ram usage:       20 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:    6
 21018 ;; This function calls:
 21019 ;;		___fladd
 21020 ;;		___fldiv
 21021 ;;		___flge
 21022 ;;		___flmul
 21023 ;;		___fltol
 21024 ;;		___xxtofl
 21025 ;;		_m_interp1_float_fast
 21026 ;; This function is called by:
 21027 ;;		_cal_diff_press
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text102
 21032  002E26                     __ptext102:
 21033                           	opt stack 0
 21034  002E26                     _cal_diff_hight_to_vol_h:
 21035                           	opt stack 21
 21036                           
 21037                           ;data.c: 403: float v1,v2;
 21038                           ;data.c: 404: float f1,f2;
 21039                           ;data.c: 405: f1=(float)h;
 21040                           
 21041                           ;incstack = 0
 21042  002E26  C0E6  F060         	movff	cal_diff_hight_to_vol_h@h,___xxtofl@val
 21043  002E2A  C0E7  F061         	movff	cal_diff_hight_to_vol_h@h+1,___xxtofl@val+1
 21044  002E2E  C0E8  F062         	movff	cal_diff_hight_to_vol_h@h+2,___xxtofl@val+2
 21045  002E32  C0E9  F063         	movff	cal_diff_hight_to_vol_h@h+3,___xxtofl@val+3
 21046  002E36  0E01               	movlw	1
 21047  002E38  ECED  F01E         	call	___xxtofl
 21048  002E3C  C060  F0F6         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f1
 21049  002E40  C061  F0F7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f1+1
 21050  002E44  C062  F0F8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f1+2
 21051  002E48  C063  F0F9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f1+3
 21052                           
 21053                           ;data.c: 406: f2=(float)(fpSysData->d);
 21054  002E4C  0E0C               	movlw	12
 21055  002E4E  243C               	addwf	_fpSysData,w,c
 21056  002E50  6EF6               	movwf	tblptrl,c
 21057  002E52  0E00               	movlw	0
 21058  002E54  203D               	addwfc	_fpSysData+1,w,c
 21059  002E56  6EF7               	movwf	tblptrh,c
 21060  002E58  0E00               	movlw	0
 21061  002E5A  203E               	addwfc	_fpSysData+2,w,c
 21062  002E5C  6EF8               	movwf	tblptru,c
 21063  002E5E  0009               	tblrd		*+
 21064  002E60  CFF5 F060          	movff	tablat,___xxtofl@val
 21065  002E64  0009               	tblrd		*+
 21066  002E66  CFF5 F061          	movff	tablat,___xxtofl@val+1
 21067  002E6A  0009               	tblrd		*+
 21068  002E6C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 21069  002E70  000A               	tblrd		*-
 21070  002E72  CFF5 F063          	movff	tablat,___xxtofl@val+3
 21071  002E76  0E00               	movlw	0
 21072  002E78  ECED  F01E         	call	___xxtofl
 21073  002E7C  C060  F0EE         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f2
 21074  002E80  C061  F0EF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f2+1
 21075  002E84  C062  F0F0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f2+2
 21076  002E88  C063  F0F1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f2+3
 21077                           
 21078                           ;data.c: 407: f1=f1/f2;
 21079  002E8C  C0F6  F087         	movff	cal_diff_hight_to_vol_h@f1,___fldiv@b
 21080  002E90  C0F7  F088         	movff	cal_diff_hight_to_vol_h@f1+1,___fldiv@b+1
 21081  002E94  C0F8  F089         	movff	cal_diff_hight_to_vol_h@f1+2,___fldiv@b+2
 21082  002E98  C0F9  F08A         	movff	cal_diff_hight_to_vol_h@f1+3,___fldiv@b+3
 21083  002E9C  C0EE  F08B         	movff	cal_diff_hight_to_vol_h@f2,___fldiv@a
 21084  002EA0  C0EF  F08C         	movff	cal_diff_hight_to_vol_h@f2+1,___fldiv@a+1
 21085  002EA4  C0F0  F08D         	movff	cal_diff_hight_to_vol_h@f2+2,___fldiv@a+2
 21086  002EA8  C0F1  F08E         	movff	cal_diff_hight_to_vol_h@f2+3,___fldiv@a+3
 21087  002EAC  EC48  F012         	call	___fldiv	;wreg free
 21088  002EB0  C087  F0F6         	movff	?___fldiv,cal_diff_hight_to_vol_h@f1
 21089  002EB4  C088  F0F7         	movff	?___fldiv+1,cal_diff_hight_to_vol_h@f1+1
 21090  002EB8  C089  F0F8         	movff	?___fldiv+2,cal_diff_hight_to_vol_h@f1+2
 21091  002EBC  C08A  F0F9         	movff	?___fldiv+3,cal_diff_hight_to_vol_h@f1+3
 21092                           
 21093                           ;data.c: 408: if(f1>1.0)f1=1.0;
 21094  002EC0  0E00               	movlw	0
 21095  002EC2  0100               	movlb	0	; () banked
 21096  002EC4  6FB8               	movwf	___flge@ff1& (0+255),b
 21097  002EC6  0E00               	movlw	0
 21098  002EC8  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 21099  002ECA  0E80               	movlw	128
 21100  002ECC  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 21101  002ECE  0E3F               	movlw	63
 21102  002ED0  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 21103  002ED2  C0F6  F0BC         	movff	cal_diff_hight_to_vol_h@f1,___flge@ff2
 21104  002ED6  C0F7  F0BD         	movff	cal_diff_hight_to_vol_h@f1+1,___flge@ff2+1
 21105  002EDA  C0F8  F0BE         	movff	cal_diff_hight_to_vol_h@f1+2,___flge@ff2+2
 21106  002EDE  C0F9  F0BF         	movff	cal_diff_hight_to_vol_h@f1+3,___flge@ff2+3
 21107  002EE2  EC4C  F023         	call	___flge	;wreg free
 21108  002EE6  0100               	movlb	0	; () banked
 21109  002EE8  B0D8               	btfsc	status,0,c
 21110  002EEA  D009               	goto	l12449
 21111                           
 21112                           ; BSR set to: 0
 21113  002EEC  0E00               	movlw	0
 21114  002EEE  0100               	movlb	0	; () banked
 21115  002EF0  6FF6               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 21116  002EF2  0E00               	movlw	0
 21117  002EF4  6FF7               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 21118  002EF6  0E80               	movlw	128
 21119  002EF8  6FF8               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 21120  002EFA  0E3F               	movlw	63
 21121  002EFC  6FF9               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 21122  002EFE                     l12449:
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;data.c: 410: f2=f1;
 21126  002EFE  C0F6  F0EE         	movff	cal_diff_hight_to_vol_h@f1,cal_diff_hight_to_vol_h@f2
 21127  002F02  C0F7  F0EF         	movff	cal_diff_hight_to_vol_h@f1+1,cal_diff_hight_to_vol_h@f2+1
 21128  002F06  C0F8  F0F0         	movff	cal_diff_hight_to_vol_h@f1+2,cal_diff_hight_to_vol_h@f2+2
 21129  002F0A  C0F9  F0F1         	movff	cal_diff_hight_to_vol_h@f1+3,cal_diff_hight_to_vol_h@f2+3
 21130                           
 21131                           ; BSR set to: 0
 21132                           ;data.c: 411: f1=m_interp1_float_fast((float*)hKcy,f1,sizeof(hKcy)/sizeof(hKcy[0]));
 21133  002F0E  0E81               	movlw	low _hKcy
 21134  002F10  0100               	movlb	0	; () banked
 21135  002F12  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 21136  002F14  0EF1               	movlw	high _hKcy
 21137  002F16  0100               	movlb	0	; () banked
 21138  002F18  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 21139  002F1A  C0F6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 21140  002F1E  C0F7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 21141  002F22  C0F8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 21142  002F26  C0F9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 21143  002F2A  0E00               	movlw	0
 21144  002F2C  0100               	movlb	0	; () banked
 21145  002F2E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 21146  002F30  0E65               	movlw	101
 21147  002F32  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 21148  002F34  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 21149  002F38  C0C4  F0F6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 21150  002F3C  C0C5  F0F7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 21151  002F40  C0C6  F0F8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 21152  002F44  C0C7  F0F9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 21153                           
 21154                           ;data.c: 412: v1=(float)(fpSysData->V1);
 21155  002F48  0E10               	movlw	16
 21156  002F4A  243C               	addwf	_fpSysData,w,c
 21157  002F4C  6EF6               	movwf	tblptrl,c
 21158  002F4E  0E00               	movlw	0
 21159  002F50  203D               	addwfc	_fpSysData+1,w,c
 21160  002F52  6EF7               	movwf	tblptrh,c
 21161  002F54  0E00               	movlw	0
 21162  002F56  203E               	addwfc	_fpSysData+2,w,c
 21163  002F58  6EF8               	movwf	tblptru,c
 21164  002F5A  0009               	tblrd		*+
 21165  002F5C  CFF5 F060          	movff	tablat,___xxtofl@val
 21166  002F60  0009               	tblrd		*+
 21167  002F62  CFF5 F061          	movff	tablat,___xxtofl@val+1
 21168  002F66  0009               	tblrd		*+
 21169  002F68  CFF5 F062          	movff	tablat,___xxtofl@val+2
 21170  002F6C  000A               	tblrd		*-
 21171  002F6E  CFF5 F063          	movff	tablat,___xxtofl@val+3
 21172  002F72  0E01               	movlw	1
 21173  002F74  ECED  F01E         	call	___xxtofl
 21174  002F78  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v1
 21175  002F7C  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v1+1
 21176  002F80  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v1+2
 21177  002F84  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v1+3
 21178                           
 21179                           ;data.c: 413: v1=v1*f1;
 21180  002F88  C0F2  F06E         	movff	cal_diff_hight_to_vol_h@v1,___flmul@b
 21181  002F8C  C0F3  F06F         	movff	cal_diff_hight_to_vol_h@v1+1,___flmul@b+1
 21182  002F90  C0F4  F070         	movff	cal_diff_hight_to_vol_h@v1+2,___flmul@b+2
 21183  002F94  C0F5  F071         	movff	cal_diff_hight_to_vol_h@v1+3,___flmul@b+3
 21184  002F98  C0F6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 21185  002F9C  C0F7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 21186  002FA0  C0F8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 21187  002FA4  C0F9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 21188  002FA8  EC94  F00B         	call	___flmul	;wreg free
 21189  002FAC  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_h@v1
 21190  002FB0  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v1+1
 21191  002FB4  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v1+2
 21192  002FB8  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v1+3
 21193                           
 21194                           ;data.c: 415: f1=f2;
 21195  002FBC  C0EE  F0F6         	movff	cal_diff_hight_to_vol_h@f2,cal_diff_hight_to_vol_h@f1
 21196  002FC0  C0EF  F0F7         	movff	cal_diff_hight_to_vol_h@f2+1,cal_diff_hight_to_vol_h@f1+1
 21197  002FC4  C0F0  F0F8         	movff	cal_diff_hight_to_vol_h@f2+2,cal_diff_hight_to_vol_h@f1+2
 21198  002FC8  C0F1  F0F9         	movff	cal_diff_hight_to_vol_h@f2+3,cal_diff_hight_to_vol_h@f1+3
 21199                           
 21200                           ;data.c: 416: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 21201  002FCC  0EED               	movlw	low _hKel
 21202  002FCE  0100               	movlb	0	; () banked
 21203  002FD0  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 21204  002FD2  0EEF               	movlw	high _hKel
 21205  002FD4  0100               	movlb	0	; () banked
 21206  002FD6  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 21207  002FD8  C0F6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 21208  002FDC  C0F7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 21209  002FE0  C0F8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 21210  002FE4  C0F9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 21211  002FE8  0E00               	movlw	0
 21212  002FEA  0100               	movlb	0	; () banked
 21213  002FEC  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 21214  002FEE  0E65               	movlw	101
 21215  002FF0  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 21216  002FF2  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 21217  002FF6  C0C4  F0F6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 21218  002FFA  C0C5  F0F7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 21219  002FFE  C0C6  F0F8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 21220  003002  C0C7  F0F9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 21221                           
 21222                           ;data.c: 417: v2=(float)(fpSysData->V2);
 21223  003006  0E14               	movlw	20
 21224  003008  243C               	addwf	_fpSysData,w,c
 21225  00300A  6EF6               	movwf	tblptrl,c
 21226  00300C  0E00               	movlw	0
 21227  00300E  203D               	addwfc	_fpSysData+1,w,c
 21228  003010  6EF7               	movwf	tblptrh,c
 21229  003012  0E00               	movlw	0
 21230  003014  203E               	addwfc	_fpSysData+2,w,c
 21231  003016  6EF8               	movwf	tblptru,c
 21232  003018  0009               	tblrd		*+
 21233  00301A  CFF5 F060          	movff	tablat,___xxtofl@val
 21234  00301E  0009               	tblrd		*+
 21235  003020  CFF5 F061          	movff	tablat,___xxtofl@val+1
 21236  003024  0009               	tblrd		*+
 21237  003026  CFF5 F062          	movff	tablat,___xxtofl@val+2
 21238  00302A  000A               	tblrd		*-
 21239  00302C  CFF5 F063          	movff	tablat,___xxtofl@val+3
 21240  003030  0E01               	movlw	1
 21241  003032  ECED  F01E         	call	___xxtofl
 21242  003036  C060  F0EA         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v2
 21243  00303A  C061  F0EB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v2+1
 21244  00303E  C062  F0EC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v2+2
 21245  003042  C063  F0ED         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v2+3
 21246                           
 21247                           ;data.c: 418: v2=v2*f1;
 21248  003046  C0EA  F06E         	movff	cal_diff_hight_to_vol_h@v2,___flmul@b
 21249  00304A  C0EB  F06F         	movff	cal_diff_hight_to_vol_h@v2+1,___flmul@b+1
 21250  00304E  C0EC  F070         	movff	cal_diff_hight_to_vol_h@v2+2,___flmul@b+2
 21251  003052  C0ED  F071         	movff	cal_diff_hight_to_vol_h@v2+3,___flmul@b+3
 21252  003056  C0F6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 21253  00305A  C0F7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 21254  00305E  C0F8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 21255  003062  C0F9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 21256  003066  EC94  F00B         	call	___flmul	;wreg free
 21257  00306A  C06E  F0EA         	movff	?___flmul,cal_diff_hight_to_vol_h@v2
 21258  00306E  C06F  F0EB         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v2+1
 21259  003072  C070  F0EC         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v2+2
 21260  003076  C071  F0ED         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v2+3
 21261                           
 21262                           ;data.c: 420: v1=v1+v2;
 21263  00307A  C0F2  F0A4         	movff	cal_diff_hight_to_vol_h@v1,___fladd@b
 21264  00307E  C0F3  F0A5         	movff	cal_diff_hight_to_vol_h@v1+1,___fladd@b+1
 21265  003082  C0F4  F0A6         	movff	cal_diff_hight_to_vol_h@v1+2,___fladd@b+2
 21266  003086  C0F5  F0A7         	movff	cal_diff_hight_to_vol_h@v1+3,___fladd@b+3
 21267  00308A  C0EA  F0A8         	movff	cal_diff_hight_to_vol_h@v2,___fladd@a
 21268  00308E  C0EB  F0A9         	movff	cal_diff_hight_to_vol_h@v2+1,___fladd@a+1
 21269  003092  C0EC  F0AA         	movff	cal_diff_hight_to_vol_h@v2+2,___fladd@a+2
 21270  003096  C0ED  F0AB         	movff	cal_diff_hight_to_vol_h@v2+3,___fladd@a+3
 21271  00309A  EC40  F009         	call	___fladd	;wreg free
 21272  00309E  C0A4  F0F2         	movff	?___fladd,cal_diff_hight_to_vol_h@v1
 21273  0030A2  C0A5  F0F3         	movff	?___fladd+1,cal_diff_hight_to_vol_h@v1+1
 21274  0030A6  C0A6  F0F4         	movff	?___fladd+2,cal_diff_hight_to_vol_h@v1+2
 21275  0030AA  C0A7  F0F5         	movff	?___fladd+3,cal_diff_hight_to_vol_h@v1+3
 21276                           
 21277                           ;data.c: 421: return (int32_t)v1;
 21278  0030AE  C0F2  F0B8         	movff	cal_diff_hight_to_vol_h@v1,___fltol@f1
 21279  0030B2  C0F3  F0B9         	movff	cal_diff_hight_to_vol_h@v1+1,___fltol@f1+1
 21280  0030B6  C0F4  F0BA         	movff	cal_diff_hight_to_vol_h@v1+2,___fltol@f1+2
 21281  0030BA  C0F5  F0BB         	movff	cal_diff_hight_to_vol_h@v1+3,___fltol@f1+3
 21282  0030BE  EC01  F02B         	call	___fltol	;wreg free
 21283  0030C2  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_h
 21284  0030C6  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_h+1
 21285  0030CA  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_h+2
 21286  0030CE  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_h+3
 21287  0030D2  0012               	return	
 21288  0030D4                     __end_of_cal_diff_hight_to_vol_h:
 21289                           	opt stack 0
 21290                           tosu	equ	0xFFF
 21291                           tosh	equ	0xFFE
 21292                           tosl	equ	0xFFD
 21293                           pclath	equ	0xFFA
 21294                           tblptru	equ	0xFF8
 21295                           tblptrh	equ	0xFF7
 21296                           tblptrl	equ	0xFF6
 21297                           tablat	equ	0xFF5
 21298                           prodh	equ	0xFF4
 21299                           prodl	equ	0xFF3
 21300                           intcon	equ	0xFF2
 21301                           indf0	equ	0xFEF
 21302                           postinc0	equ	0xFEE
 21303                           fsr0h	equ	0xFEA
 21304                           fsr0l	equ	0xFE9
 21305                           wreg	equ	0xFE8
 21306                           postinc1	equ	0xFE6
 21307                           postdec1	equ	0xFE5
 21308                           plusw1	equ	0xFE3
 21309                           fsr1h	equ	0xFE2
 21310                           fsr1l	equ	0xFE1
 21311                           indf2	equ	0xFDF
 21312                           postinc2	equ	0xFDE
 21313                           postdec2	equ	0xFDD
 21314                           plusw2	equ	0xFDB
 21315                           fsr2h	equ	0xFDA
 21316                           fsr2l	equ	0xFD9
 21317                           status	equ	0xFD8
 21318                           
 21319 ;; *************** function _m_interp1_float_fast *****************
 21320 ;; Defined at:
 21321 ;;		line 372 in file "src/api/data.c"
 21322 ;; Parameters:    Size  Location     Type
 21323 ;;  tab             2  100[BANK0 ] PTR float 
 21324 ;;		 -> hKel(404), hKcy(404), 
 21325 ;;  in              4  102[BANK0 ] float 
 21326 ;;  len             2  106[BANK0 ] int 
 21327 ;; Auto vars:     Size  Location     Type
 21328 ;;  f               4  128[BANK0 ] float 
 21329 ;;  y               4  120[BANK0 ] float 
 21330 ;;  x               4  116[BANK0 ] float 
 21331 ;;  i               2  132[BANK0 ] unsigned int 
 21332 ;; Return value:  Size  Location     Type
 21333 ;;                  4  100[BANK0 ] float 
 21334 ;; Registers used:
 21335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21336 ;; Tracked objects:
 21337 ;;		On entry : 0/0
 21338 ;;		On exit  : 0/0
 21339 ;;		Unchanged: 0/0
 21340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21341 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21342 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21343 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21344 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21345 ;;Total ram usage:       34 bytes
 21346 ;; Hardware stack levels used:    1
 21347 ;; Hardware stack levels required when called:    5
 21348 ;; This function calls:
 21349 ;;		___fladd
 21350 ;;		___fldiv
 21351 ;;		___flge
 21352 ;;		___flmul
 21353 ;;		___flneg
 21354 ;;		___xxtofl
 21355 ;; This function is called by:
 21356 ;;		_cal_diff_hight_to_vol_h
 21357 ;;		_cal_diff_hight_to_vol_v
 21358 ;; This function uses a non-reentrant model
 21359 ;;
 21360                           
 21361                           	psect	text103
 21362  002068                     __ptext103:
 21363                           	opt stack 0
 21364  002068                     _m_interp1_float_fast:
 21365                           	opt stack 21
 21366                           
 21367                           ;data.c: 374: uint16_t i;
 21368                           ;data.c: 375: float f,x,y;
 21369                           ;data.c: 376: for(i=0;i<len-1;i++){
 21370                           
 21371                           ;incstack = 0
 21372  002068  0E00               	movlw	0
 21373  00206A  0100               	movlb	0	; () banked
 21374  00206C  6FE5               	movwf	(m_interp1_float_fast@i+1)& (0+255),b
 21375  00206E  0E00               	movlw	0
 21376  002070  6FE4               	movwf	m_interp1_float_fast@i& (0+255),b
 21377  002072  D0D0               	goto	l11995
 21378  002074                     l11983:
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;data.c: 377: if(tab[i]<tab[i+1]){
 21382  002074  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 21383  002078  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 21384  00207C  0100               	movlb	0	; () banked
 21385  00207E  90D8               	bcf	status,0,c
 21386  002080  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21387  002082  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21388  002084  0100               	movlb	0	; () banked
 21389  002086  90D8               	bcf	status,0,c
 21390  002088  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21391  00208A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21392  00208C  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 21393  002090  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 21394  002094  0100               	movlb	0	; () banked
 21395  002096  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21396  002098  0100               	movlb	0	; () banked
 21397  00209A  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21398  00209C  0100               	movlb	0	; () banked
 21399  00209E  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21400  0020A0  0100               	movlb	0	; () banked
 21401  0020A2  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21402  0020A4  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 21403  0020A8  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 21404  0020AC                     	if	0	;tblptru may be non-zero
 21405  0020AC                     	endif
 21406  0020AC                     	if	0	;tblptru may be non-zero
 21407  0020AC                     	endif
 21408  0020AC  0009               	tblrd		*+
 21409  0020AE  CFF5 F0B8          	movff	tablat,___flge@ff1
 21410  0020B2  0009               	tblrd		*+
 21411  0020B4  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 21412  0020B8  0009               	tblrd		*+
 21413  0020BA  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 21414  0020BE  000A               	tblrd		*-
 21415  0020C0  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 21416  0020C4  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 21417  0020C8  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 21418  0020CC  0100               	movlb	0	; () banked
 21419  0020CE  90D8               	bcf	status,0,c
 21420  0020D0  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21421  0020D2  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 21422  0020D4  0100               	movlb	0	; () banked
 21423  0020D6  90D8               	bcf	status,0,c
 21424  0020D8  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21425  0020DA  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 21426  0020DC  0E04               	movlw	4
 21427  0020DE  0100               	movlb	0	; () banked
 21428  0020E0  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21429  0020E2  0E00               	movlw	0
 21430  0020E4  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 21431  0020E6  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 21432  0020EA  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 21433  0020EE  0100               	movlb	0	; () banked
 21434  0020F0  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 21435  0020F2  0100               	movlb	0	; () banked
 21436  0020F4  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 21437  0020F6  0100               	movlb	0	; () banked
 21438  0020F8  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 21439  0020FA  0100               	movlb	0	; () banked
 21440  0020FC  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 21441  0020FE  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 21442  002102  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 21443  002106                     	if	0	;tblptru may be non-zero
 21444  002106                     	endif
 21445  002106                     	if	0	;tblptru may be non-zero
 21446  002106                     	endif
 21447  002106  0009               	tblrd		*+
 21448  002108  CFF5 F0BC          	movff	tablat,___flge@ff2
 21449  00210C  0009               	tblrd		*+
 21450  00210E  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 21451  002112  0009               	tblrd		*+
 21452  002114  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 21453  002118  000A               	tblrd		*-
 21454  00211A  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 21455  00211E  EC4C  F023         	call	___flge	;wreg free
 21456  002122  0100               	movlb	0	; () banked
 21457  002124  B0D8               	btfsc	status,0,c
 21458  002126  D03B               	goto	l11989
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;data.c: 378: if(in<=tab[i+1])break;
 21462  002128  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 21463  00212C  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 21464  002130  0100               	movlb	0	; () banked
 21465  002132  90D8               	bcf	status,0,c
 21466  002134  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21467  002136  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21468  002138  0100               	movlb	0	; () banked
 21469  00213A  90D8               	bcf	status,0,c
 21470  00213C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21471  00213E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21472  002140  0E04               	movlw	4
 21473  002142  0100               	movlb	0	; () banked
 21474  002144  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 21475  002146  0E00               	movlw	0
 21476  002148  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 21477  00214A  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 21478  00214E  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 21479  002152  0100               	movlb	0	; () banked
 21480  002154  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21481  002156  0100               	movlb	0	; () banked
 21482  002158  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21483  00215A  0100               	movlb	0	; () banked
 21484  00215C  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21485  00215E  0100               	movlb	0	; () banked
 21486  002160  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21487  002162  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 21488  002166  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 21489  00216A                     	if	0	;tblptru may be non-zero
 21490  00216A                     	endif
 21491  00216A                     	if	0	;tblptru may be non-zero
 21492  00216A                     	endif
 21493  00216A  0009               	tblrd		*+
 21494  00216C  CFF5 F0B8          	movff	tablat,___flge@ff1
 21495  002170  0009               	tblrd		*+
 21496  002172  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 21497  002176  0009               	tblrd		*+
 21498  002178  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 21499  00217C  000A               	tblrd		*-
 21500  00217E  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 21501  002182  C0C6  F0BC         	movff	m_interp1_float_fast@in,___flge@ff2
 21502  002186  C0C7  F0BD         	movff	m_interp1_float_fast@in+1,___flge@ff2+1
 21503  00218A  C0C8  F0BE         	movff	m_interp1_float_fast@in+2,___flge@ff2+2
 21504  00218E  C0C9  F0BF         	movff	m_interp1_float_fast@in+3,___flge@ff2+3
 21505  002192  EC4C  F023         	call	___flge	;wreg free
 21506  002196  0100               	movlb	0	; () banked
 21507  002198  B0D8               	btfsc	status,0,c
 21508  00219A  D058               	goto	l11997
 21509  00219C  D038               	goto	l11993
 21510  00219E                     l11989:
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;data.c: 380: if(in>=tab[i+1])break;
 21514  00219E  C0C6  F0B8         	movff	m_interp1_float_fast@in,___flge@ff1
 21515  0021A2  C0C7  F0B9         	movff	m_interp1_float_fast@in+1,___flge@ff1+1
 21516  0021A6  C0C8  F0BA         	movff	m_interp1_float_fast@in+2,___flge@ff1+2
 21517  0021AA  C0C9  F0BB         	movff	m_interp1_float_fast@in+3,___flge@ff1+3
 21518  0021AE  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 21519  0021B2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 21520  0021B6  0100               	movlb	0	; () banked
 21521  0021B8  90D8               	bcf	status,0,c
 21522  0021BA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21523  0021BC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21524  0021BE  0100               	movlb	0	; () banked
 21525  0021C0  90D8               	bcf	status,0,c
 21526  0021C2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21527  0021C4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21528  0021C6  0E04               	movlw	4
 21529  0021C8  0100               	movlb	0	; () banked
 21530  0021CA  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 21531  0021CC  0E00               	movlw	0
 21532  0021CE  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 21533  0021D0  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 21534  0021D4  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 21535  0021D8  0100               	movlb	0	; () banked
 21536  0021DA  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21537  0021DC  0100               	movlb	0	; () banked
 21538  0021DE  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21539  0021E0  0100               	movlb	0	; () banked
 21540  0021E2  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21541  0021E4  0100               	movlb	0	; () banked
 21542  0021E6  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21543  0021E8  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 21544  0021EC  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 21545  0021F0                     	if	0	;tblptru may be non-zero
 21546  0021F0                     	endif
 21547  0021F0                     	if	0	;tblptru may be non-zero
 21548  0021F0                     	endif
 21549  0021F0  0009               	tblrd		*+
 21550  0021F2  CFF5 F0BC          	movff	tablat,___flge@ff2
 21551  0021F6  0009               	tblrd		*+
 21552  0021F8  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 21553  0021FC  0009               	tblrd		*+
 21554  0021FE  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 21555  002202  000A               	tblrd		*-
 21556  002204  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 21557  002208  EC4C  F023         	call	___flge	;wreg free
 21558  00220C  D7C4               	goto	L8
 21559  00220E                     l11993:
 21560                           
 21561                           ; BSR set to: 0
 21562  00220E  0100               	movlb	0	; () banked
 21563  002210  4BE4               	infsnz	m_interp1_float_fast@i& (0+255),f,b
 21564  002212  2BE5               	incf	(m_interp1_float_fast@i+1)& (0+255),f,b
 21565  002214                     l11995:
 21566                           
 21567                           ; BSR set to: 0
 21568  002214  0EFF               	movlw	255
 21569  002216  0100               	movlb	0	; () banked
 21570  002218  6FCC               	movwf	??_m_interp1_float_fast& (0+255),b
 21571  00221A  0EFF               	movlw	255
 21572  00221C  0100               	movlb	0	; () banked
 21573  00221E  6FCD               	movwf	(??_m_interp1_float_fast+1)& (0+255),b
 21574  002220  C0CA  F0CE         	movff	m_interp1_float_fast@len,??_m_interp1_float_fast+2
 21575  002224  C0CB  F0CF         	movff	m_interp1_float_fast@len+1,??_m_interp1_float_fast+3
 21576  002228  0100               	movlb	0	; () banked
 21577  00222A  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21578  00222C  0100               	movlb	0	; () banked
 21579  00222E  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21580  002230  0100               	movlb	0	; () banked
 21581  002232  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21582  002234  0100               	movlb	0	; () banked
 21583  002236  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21584  002238  0100               	movlb	0	; () banked
 21585  00223A  51CE               	movf	(??_m_interp1_float_fast+2)& (0+255),w,b
 21586  00223C  0100               	movlb	0	; () banked
 21587  00223E  5DE4               	subwf	m_interp1_float_fast@i& (0+255),w,b
 21588  002240  0100               	movlb	0	; () banked
 21589  002242  51CF               	movf	(??_m_interp1_float_fast+3)& (0+255),w,b
 21590  002244  0100               	movlb	0	; () banked
 21591  002246  59E5               	subwfb	(m_interp1_float_fast@i+1)& (0+255),w,b
 21592  002248  A0D8               	btfss	status,0,c
 21593  00224A  D714               	goto	l11983
 21594  00224C                     l11997:
 21595                           
 21596                           ; BSR set to: 0
 21597                           ;data.c: 381: }
 21598                           ;data.c: 382: }
 21599                           ;data.c: 383: f=tab[i];
 21600  00224C  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 21601  002250  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 21602  002254  0100               	movlb	0	; () banked
 21603  002256  90D8               	bcf	status,0,c
 21604  002258  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21605  00225A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21606  00225C  0100               	movlb	0	; () banked
 21607  00225E  90D8               	bcf	status,0,c
 21608  002260  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21609  002262  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21610  002264  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 21611  002268  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 21612  00226C  0100               	movlb	0	; () banked
 21613  00226E  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21614  002270  0100               	movlb	0	; () banked
 21615  002272  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21616  002274  0100               	movlb	0	; () banked
 21617  002276  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21618  002278  0100               	movlb	0	; () banked
 21619  00227A  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21620  00227C  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 21621  002280  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 21622  002284                     	if	0	;tblptru may be non-zero
 21623  002284                     	endif
 21624  002284                     	if	0	;tblptru may be non-zero
 21625  002284                     	endif
 21626  002284  0009               	tblrd		*+
 21627  002286  CFF5 F0E0          	movff	tablat,m_interp1_float_fast@f
 21628  00228A  0009               	tblrd		*+
 21629  00228C  CFF5 F0E1          	movff	tablat,m_interp1_float_fast@f+1
 21630  002290  0009               	tblrd		*+
 21631  002292  CFF5 F0E2          	movff	tablat,m_interp1_float_fast@f+2
 21632  002296  000A               	tblrd		*-
 21633  002298  CFF5 F0E3          	movff	tablat,m_interp1_float_fast@f+3
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;data.c: 384: x=0.01f;
 21637  00229C  0E0A               	movlw	10
 21638  00229E  0100               	movlb	0	; () banked
 21639  0022A0  6FD4               	movwf	m_interp1_float_fast@x& (0+255),b
 21640  0022A2  0ED7               	movlw	215
 21641  0022A4  6FD5               	movwf	(m_interp1_float_fast@x+1)& (0+255),b
 21642  0022A6  0E23               	movlw	35
 21643  0022A8  6FD6               	movwf	(m_interp1_float_fast@x+2)& (0+255),b
 21644  0022AA  0E3C               	movlw	60
 21645  0022AC  6FD7               	movwf	(m_interp1_float_fast@x+3)& (0+255),b
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;data.c: 385: y=tab[i+1]-tab[i];
 21649  0022AE  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 21650  0022B2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 21651  0022B6  0100               	movlb	0	; () banked
 21652  0022B8  90D8               	bcf	status,0,c
 21653  0022BA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21654  0022BC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21655  0022BE  0100               	movlb	0	; () banked
 21656  0022C0  90D8               	bcf	status,0,c
 21657  0022C2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 21658  0022C4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 21659  0022C6  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 21660  0022CA  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 21661  0022CE  0100               	movlb	0	; () banked
 21662  0022D0  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 21663  0022D2  0100               	movlb	0	; () banked
 21664  0022D4  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 21665  0022D6  0100               	movlb	0	; () banked
 21666  0022D8  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 21667  0022DA  0100               	movlb	0	; () banked
 21668  0022DC  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 21669  0022DE  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 21670  0022E2  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 21671  0022E6                     	if	0	;tblptru may be non-zero
 21672  0022E6                     	endif
 21673  0022E6                     	if	0	;tblptru may be non-zero
 21674  0022E6                     	endif
 21675  0022E6  0009               	tblrd		*+
 21676  0022E8  CFF5 F0A0          	movff	tablat,___flneg@f1
 21677  0022EC  0009               	tblrd		*+
 21678  0022EE  CFF5 F0A1          	movff	tablat,___flneg@f1+1
 21679  0022F2  0009               	tblrd		*+
 21680  0022F4  CFF5 F0A2          	movff	tablat,___flneg@f1+2
 21681  0022F8  000A               	tblrd		*-
 21682  0022FA  CFF5 F0A3          	movff	tablat,___flneg@f1+3
 21683  0022FE  EC8C  F03E         	call	___flneg	;wreg free
 21684  002302  C0A0  F0A4         	movff	?___flneg,___fladd@b
 21685  002306  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 21686  00230A  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 21687  00230E  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 21688  002312  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 21689  002316  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 21690  00231A  0100               	movlb	0	; () banked
 21691  00231C  90D8               	bcf	status,0,c
 21692  00231E  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21693  002320  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 21694  002322  0100               	movlb	0	; () banked
 21695  002324  90D8               	bcf	status,0,c
 21696  002326  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21697  002328  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 21698  00232A  0E04               	movlw	4
 21699  00232C  0100               	movlb	0	; () banked
 21700  00232E  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 21701  002330  0E00               	movlw	0
 21702  002332  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 21703  002334  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 21704  002338  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 21705  00233C  0100               	movlb	0	; () banked
 21706  00233E  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 21707  002340  0100               	movlb	0	; () banked
 21708  002342  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 21709  002344  0100               	movlb	0	; () banked
 21710  002346  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 21711  002348  0100               	movlb	0	; () banked
 21712  00234A  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 21713  00234C  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 21714  002350  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 21715  002354                     	if	0	;tblptru may be non-zero
 21716  002354                     	endif
 21717  002354                     	if	0	;tblptru may be non-zero
 21718  002354                     	endif
 21719  002354  0009               	tblrd		*+
 21720  002356  CFF5 F0A8          	movff	tablat,___fladd@a
 21721  00235A  0009               	tblrd		*+
 21722  00235C  CFF5 F0A9          	movff	tablat,___fladd@a+1
 21723  002360  0009               	tblrd		*+
 21724  002362  CFF5 F0AA          	movff	tablat,___fladd@a+2
 21725  002366  000A               	tblrd		*-
 21726  002368  CFF5 F0AB          	movff	tablat,___fladd@a+3
 21727  00236C  EC40  F009         	call	___fladd	;wreg free
 21728  002370  C0A4  F0D8         	movff	?___fladd,m_interp1_float_fast@y
 21729  002374  C0A5  F0D9         	movff	?___fladd+1,m_interp1_float_fast@y+1
 21730  002378  C0A6  F0DA         	movff	?___fladd+2,m_interp1_float_fast@y+2
 21731  00237C  C0A7  F0DB         	movff	?___fladd+3,m_interp1_float_fast@y+3
 21732                           
 21733                           ;data.c: 386: f=f+(in-0.01*i)*(y/x);
 21734  002380  C0C6  F0A8         	movff	m_interp1_float_fast@in,___fladd@a
 21735  002384  C0C7  F0A9         	movff	m_interp1_float_fast@in+1,___fladd@a+1
 21736  002388  C0C8  F0AA         	movff	m_interp1_float_fast@in+2,___fladd@a+2
 21737  00238C  C0C9  F0AB         	movff	m_interp1_float_fast@in+3,___fladd@a+3
 21738  002390  0E0A               	movlw	10
 21739  002392  0100               	movlb	0	; () banked
 21740  002394  6F72               	movwf	___flmul@a& (0+255),b
 21741  002396  0ED7               	movlw	215
 21742  002398  6F73               	movwf	(___flmul@a+1)& (0+255),b
 21743  00239A  0E23               	movlw	35
 21744  00239C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 21745  00239E  0E3C               	movlw	60
 21746  0023A0  6F75               	movwf	(___flmul@a+3)& (0+255),b
 21747  0023A2  C0E4  F060         	movff	m_interp1_float_fast@i,___xxtofl@val
 21748  0023A6  C0E5  F061         	movff	m_interp1_float_fast@i+1,___xxtofl@val+1
 21749  0023AA  0100               	movlb	0	; () banked
 21750  0023AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 21751  0023AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 21752  0023B0  0E00               	movlw	0
 21753  0023B2  ECED  F01E         	call	___xxtofl
 21754  0023B6  C060  F06E         	movff	?___xxtofl,___flmul@b
 21755  0023BA  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 21756  0023BE  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 21757  0023C2  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 21758  0023C6  EC94  F00B         	call	___flmul	;wreg free
 21759  0023CA  C06E  F0A0         	movff	?___flmul,___flneg@f1
 21760  0023CE  C06F  F0A1         	movff	?___flmul+1,___flneg@f1+1
 21761  0023D2  C070  F0A2         	movff	?___flmul+2,___flneg@f1+2
 21762  0023D6  C071  F0A3         	movff	?___flmul+3,___flneg@f1+3
 21763  0023DA  EC8C  F03E         	call	___flneg	;wreg free
 21764  0023DE  C0A0  F0A4         	movff	?___flneg,___fladd@b
 21765  0023E2  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 21766  0023E6  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 21767  0023EA  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 21768  0023EE  EC40  F009         	call	___fladd	;wreg free
 21769  0023F2  C0A4  F0DC         	movff	?___fladd,_m_interp1_float_fast$4413
 21770  0023F6  C0A5  F0DD         	movff	?___fladd+1,_m_interp1_float_fast$4413+1
 21771  0023FA  C0A6  F0DE         	movff	?___fladd+2,_m_interp1_float_fast$4413+2
 21772  0023FE  C0A7  F0DF         	movff	?___fladd+3,_m_interp1_float_fast$4413+3
 21773                           
 21774                           ;data.c: 386: f=f+(in-0.01*i)*(y/x);
 21775  002402  C0D4  F08B         	movff	m_interp1_float_fast@x,___fldiv@a
 21776  002406  C0D5  F08C         	movff	m_interp1_float_fast@x+1,___fldiv@a+1
 21777  00240A  C0D6  F08D         	movff	m_interp1_float_fast@x+2,___fldiv@a+2
 21778  00240E  C0D7  F08E         	movff	m_interp1_float_fast@x+3,___fldiv@a+3
 21779  002412  C0D8  F087         	movff	m_interp1_float_fast@y,___fldiv@b
 21780  002416  C0D9  F088         	movff	m_interp1_float_fast@y+1,___fldiv@b+1
 21781  00241A  C0DA  F089         	movff	m_interp1_float_fast@y+2,___fldiv@b+2
 21782  00241E  C0DB  F08A         	movff	m_interp1_float_fast@y+3,___fldiv@b+3
 21783  002422  EC48  F012         	call	___fldiv	;wreg free
 21784  002426  C087  F072         	movff	?___fldiv,___flmul@a
 21785  00242A  C088  F073         	movff	?___fldiv+1,___flmul@a+1
 21786  00242E  C089  F074         	movff	?___fldiv+2,___flmul@a+2
 21787  002432  C08A  F075         	movff	?___fldiv+3,___flmul@a+3
 21788  002436  C0DC  F06E         	movff	_m_interp1_float_fast$4413,___flmul@b
 21789  00243A  C0DD  F06F         	movff	_m_interp1_float_fast$4413+1,___flmul@b+1
 21790  00243E  C0DE  F070         	movff	_m_interp1_float_fast$4413+2,___flmul@b+2
 21791  002442  C0DF  F071         	movff	_m_interp1_float_fast$4413+3,___flmul@b+3
 21792  002446  EC94  F00B         	call	___flmul	;wreg free
 21793  00244A  C06E  F0A4         	movff	?___flmul,___fladd@b
 21794  00244E  C06F  F0A5         	movff	?___flmul+1,___fladd@b+1
 21795  002452  C070  F0A6         	movff	?___flmul+2,___fladd@b+2
 21796  002456  C071  F0A7         	movff	?___flmul+3,___fladd@b+3
 21797  00245A  C0E0  F0A8         	movff	m_interp1_float_fast@f,___fladd@a
 21798  00245E  C0E1  F0A9         	movff	m_interp1_float_fast@f+1,___fladd@a+1
 21799  002462  C0E2  F0AA         	movff	m_interp1_float_fast@f+2,___fladd@a+2
 21800  002466  C0E3  F0AB         	movff	m_interp1_float_fast@f+3,___fladd@a+3
 21801  00246A  EC40  F009         	call	___fladd	;wreg free
 21802  00246E  C0A4  F0E0         	movff	?___fladd,m_interp1_float_fast@f
 21803  002472  C0A5  F0E1         	movff	?___fladd+1,m_interp1_float_fast@f+1
 21804  002476  C0A6  F0E2         	movff	?___fladd+2,m_interp1_float_fast@f+2
 21805  00247A  C0A7  F0E3         	movff	?___fladd+3,m_interp1_float_fast@f+3
 21806                           
 21807                           ;data.c: 387: return f;
 21808  00247E  C0E0  F0C4         	movff	m_interp1_float_fast@f,?_m_interp1_float_fast
 21809  002482  C0E1  F0C5         	movff	m_interp1_float_fast@f+1,?_m_interp1_float_fast+1
 21810  002486  C0E2  F0C6         	movff	m_interp1_float_fast@f+2,?_m_interp1_float_fast+2
 21811  00248A  C0E3  F0C7         	movff	m_interp1_float_fast@f+3,?_m_interp1_float_fast+3
 21812  00248E  0012               	return	
 21813  002490                     __end_of_m_interp1_float_fast:
 21814                           	opt stack 0
 21815                           tosu	equ	0xFFF
 21816                           tosh	equ	0xFFE
 21817                           tosl	equ	0xFFD
 21818                           pclath	equ	0xFFA
 21819                           tblptru	equ	0xFF8
 21820                           tblptrh	equ	0xFF7
 21821                           tblptrl	equ	0xFF6
 21822                           tablat	equ	0xFF5
 21823                           prodh	equ	0xFF4
 21824                           prodl	equ	0xFF3
 21825                           intcon	equ	0xFF2
 21826                           indf0	equ	0xFEF
 21827                           postinc0	equ	0xFEE
 21828                           fsr0h	equ	0xFEA
 21829                           fsr0l	equ	0xFE9
 21830                           wreg	equ	0xFE8
 21831                           postinc1	equ	0xFE6
 21832                           postdec1	equ	0xFE5
 21833                           plusw1	equ	0xFE3
 21834                           fsr1h	equ	0xFE2
 21835                           fsr1l	equ	0xFE1
 21836                           indf2	equ	0xFDF
 21837                           postinc2	equ	0xFDE
 21838                           postdec2	equ	0xFDD
 21839                           plusw2	equ	0xFDB
 21840                           fsr2h	equ	0xFDA
 21841                           fsr2l	equ	0xFD9
 21842                           status	equ	0xFD8
 21843                           
 21844 ;; *************** function ___flge *****************
 21845 ;; Defined at:
 21846 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flge.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  ff1             4   88[BANK0 ] float 
 21849 ;;  ff2             4   92[BANK0 ] float 
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;		None
 21852 ;; Return value:  Size  Location     Type
 21853 ;;		None               void
 21854 ;; Registers used:
 21855 ;;		wreg, status,2, status,0
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/0
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21864 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21865 ;;Total ram usage:       12 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:    4
 21868 ;; This function calls:
 21869 ;;		Nothing
 21870 ;; This function is called by:
 21871 ;;		_m_interp1_float_fast
 21872 ;;		_cal_diff_hight_to_vol_h
 21873 ;;		_cal_diff_hight_level
 21874 ;;		_cal_diff_hight_to_vol_v
 21875 ;; This function uses a non-reentrant model
 21876 ;;
 21877                           
 21878                           	psect	text104
 21879  004698                     __ptext104:
 21880                           	opt stack 0
 21881  004698                     ___flge:
 21882                           	opt stack 21
 21883                           
 21884                           ;incstack = 0
 21885  004698  0E00               	movlw	0
 21886  00469A  0100               	movlb	0	; () banked
 21887  00469C  15B8               	andwf	___flge@ff1& (0+255),w,b
 21888  00469E  0100               	movlb	0	; () banked
 21889  0046A0  6FC0               	movwf	??___flge& (0+255),b
 21890  0046A2  0E00               	movlw	0
 21891  0046A4  0100               	movlb	0	; () banked
 21892  0046A6  15B9               	andwf	(___flge@ff1+1)& (0+255),w,b
 21893  0046A8  0100               	movlb	0	; () banked
 21894  0046AA  6FC1               	movwf	(??___flge+1)& (0+255),b
 21895  0046AC  0E80               	movlw	128
 21896  0046AE  0100               	movlb	0	; () banked
 21897  0046B0  15BA               	andwf	(___flge@ff1+2)& (0+255),w,b
 21898  0046B2  0100               	movlb	0	; () banked
 21899  0046B4  6FC2               	movwf	(??___flge+2)& (0+255),b
 21900  0046B6  0E7F               	movlw	127
 21901  0046B8  0100               	movlb	0	; () banked
 21902  0046BA  15BB               	andwf	(___flge@ff1+3)& (0+255),w,b
 21903  0046BC  0100               	movlb	0	; () banked
 21904  0046BE  6FC3               	movwf	(??___flge+3)& (0+255),b
 21905  0046C0  0100               	movlb	0	; () banked
 21906  0046C2  51C0               	movf	??___flge& (0+255),w,b
 21907  0046C4  0100               	movlb	0	; () banked
 21908  0046C6  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 21909  0046C8  0100               	movlb	0	; () banked
 21910  0046CA  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 21911  0046CC  0100               	movlb	0	; () banked
 21912  0046CE  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 21913  0046D0  A4D8               	btfss	status,2,c
 21914  0046D2  D009               	goto	l11847
 21915                           
 21916                           ; BSR set to: 0
 21917  0046D4  0E00               	movlw	0
 21918  0046D6  0100               	movlb	0	; () banked
 21919  0046D8  6FB8               	movwf	___flge@ff1& (0+255),b
 21920  0046DA  0E00               	movlw	0
 21921  0046DC  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 21922  0046DE  0E00               	movlw	0
 21923  0046E0  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 21924  0046E2  0E00               	movlw	0
 21925  0046E4  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 21926  0046E6                     l11847:
 21927                           
 21928                           ; BSR set to: 0
 21929  0046E6  0E00               	movlw	0
 21930  0046E8  0100               	movlb	0	; () banked
 21931  0046EA  15BC               	andwf	___flge@ff2& (0+255),w,b
 21932  0046EC  0100               	movlb	0	; () banked
 21933  0046EE  6FC0               	movwf	??___flge& (0+255),b
 21934  0046F0  0E00               	movlw	0
 21935  0046F2  0100               	movlb	0	; () banked
 21936  0046F4  15BD               	andwf	(___flge@ff2+1)& (0+255),w,b
 21937  0046F6  0100               	movlb	0	; () banked
 21938  0046F8  6FC1               	movwf	(??___flge+1)& (0+255),b
 21939  0046FA  0E80               	movlw	128
 21940  0046FC  0100               	movlb	0	; () banked
 21941  0046FE  15BE               	andwf	(___flge@ff2+2)& (0+255),w,b
 21942  004700  0100               	movlb	0	; () banked
 21943  004702  6FC2               	movwf	(??___flge+2)& (0+255),b
 21944  004704  0E7F               	movlw	127
 21945  004706  0100               	movlb	0	; () banked
 21946  004708  15BF               	andwf	(___flge@ff2+3)& (0+255),w,b
 21947  00470A  0100               	movlb	0	; () banked
 21948  00470C  6FC3               	movwf	(??___flge+3)& (0+255),b
 21949  00470E  0100               	movlb	0	; () banked
 21950  004710  51C0               	movf	??___flge& (0+255),w,b
 21951  004712  0100               	movlb	0	; () banked
 21952  004714  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 21953  004716  0100               	movlb	0	; () banked
 21954  004718  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 21955  00471A  0100               	movlb	0	; () banked
 21956  00471C  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 21957  00471E  A4D8               	btfss	status,2,c
 21958  004720  D009               	goto	l11851
 21959                           
 21960                           ; BSR set to: 0
 21961  004722  0E00               	movlw	0
 21962  004724  0100               	movlb	0	; () banked
 21963  004726  6FBC               	movwf	___flge@ff2& (0+255),b
 21964  004728  0E00               	movlw	0
 21965  00472A  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 21966  00472C  0E00               	movlw	0
 21967  00472E  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 21968  004730  0E00               	movlw	0
 21969  004732  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 21970  004734                     l11851:
 21971                           
 21972                           ; BSR set to: 0
 21973  004734  0100               	movlb	0	; () banked
 21974  004736  AFBB               	btfss	(___flge@ff1+3)& (0+255),7,b
 21975  004738  D026               	goto	l11855
 21976                           
 21977                           ; BSR set to: 0
 21978  00473A  C0B8  F0C0         	movff	___flge@ff1,??___flge
 21979  00473E  C0B9  F0C1         	movff	___flge@ff1+1,??___flge+1
 21980  004742  C0BA  F0C2         	movff	___flge@ff1+2,??___flge+2
 21981  004746  C0BB  F0C3         	movff	___flge@ff1+3,??___flge+3
 21982  00474A  0100               	movlb	0	; () banked
 21983  00474C  1FC0               	comf	??___flge& (0+255),f,b
 21984  00474E  1FC1               	comf	(??___flge+1)& (0+255),f,b
 21985  004750  1FC2               	comf	(??___flge+2)& (0+255),f,b
 21986  004752  1FC3               	comf	(??___flge+3)& (0+255),f,b
 21987  004754  2BC0               	incf	??___flge& (0+255),f,b
 21988  004756  0E00               	movlw	0
 21989  004758  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 21990  00475A  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 21991  00475C  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 21992  00475E  0E00               	movlw	0
 21993  004760  0100               	movlb	0	; () banked
 21994  004762  25C0               	addwf	??___flge& (0+255),w,b
 21995  004764  0100               	movlb	0	; () banked
 21996  004766  6FB8               	movwf	___flge@ff1& (0+255),b
 21997  004768  0E00               	movlw	0
 21998  00476A  0100               	movlb	0	; () banked
 21999  00476C  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 22000  00476E  0100               	movlb	0	; () banked
 22001  004770  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 22002  004772  0E00               	movlw	0
 22003  004774  0100               	movlb	0	; () banked
 22004  004776  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 22005  004778  0100               	movlb	0	; () banked
 22006  00477A  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 22007  00477C  0E80               	movlw	128
 22008  00477E  0100               	movlb	0	; () banked
 22009  004780  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 22010  004782  0100               	movlb	0	; () banked
 22011  004784  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 22012  004786                     l11855:
 22013                           
 22014                           ; BSR set to: 0
 22015  004786  0100               	movlb	0	; () banked
 22016  004788  AFBF               	btfss	(___flge@ff2+3)& (0+255),7,b
 22017  00478A  D026               	goto	l2082
 22018                           
 22019                           ; BSR set to: 0
 22020  00478C  C0BC  F0C0         	movff	___flge@ff2,??___flge
 22021  004790  C0BD  F0C1         	movff	___flge@ff2+1,??___flge+1
 22022  004794  C0BE  F0C2         	movff	___flge@ff2+2,??___flge+2
 22023  004798  C0BF  F0C3         	movff	___flge@ff2+3,??___flge+3
 22024  00479C  0100               	movlb	0	; () banked
 22025  00479E  1FC0               	comf	??___flge& (0+255),f,b
 22026  0047A0  1FC1               	comf	(??___flge+1)& (0+255),f,b
 22027  0047A2  1FC2               	comf	(??___flge+2)& (0+255),f,b
 22028  0047A4  1FC3               	comf	(??___flge+3)& (0+255),f,b
 22029  0047A6  2BC0               	incf	??___flge& (0+255),f,b
 22030  0047A8  0E00               	movlw	0
 22031  0047AA  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 22032  0047AC  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 22033  0047AE  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 22034  0047B0  0E00               	movlw	0
 22035  0047B2  0100               	movlb	0	; () banked
 22036  0047B4  25C0               	addwf	??___flge& (0+255),w,b
 22037  0047B6  0100               	movlb	0	; () banked
 22038  0047B8  6FBC               	movwf	___flge@ff2& (0+255),b
 22039  0047BA  0E00               	movlw	0
 22040  0047BC  0100               	movlb	0	; () banked
 22041  0047BE  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 22042  0047C0  0100               	movlb	0	; () banked
 22043  0047C2  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 22044  0047C4  0E00               	movlw	0
 22045  0047C6  0100               	movlb	0	; () banked
 22046  0047C8  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 22047  0047CA  0100               	movlb	0	; () banked
 22048  0047CC  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 22049  0047CE  0E80               	movlw	128
 22050  0047D0  0100               	movlb	0	; () banked
 22051  0047D2  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 22052  0047D4  0100               	movlb	0	; () banked
 22053  0047D6  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 22054  0047D8                     l2082:
 22055                           
 22056                           ; BSR set to: 0
 22057  0047D8  0E00               	movlw	0
 22058  0047DA  0100               	movlb	0	; () banked
 22059  0047DC  1BB8               	xorwf	___flge@ff1& (0+255),f,b
 22060  0047DE  0E00               	movlw	0
 22061  0047E0  1BB9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 22062  0047E2  0E00               	movlw	0
 22063  0047E4  1BBA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 22064  0047E6  0E80               	movlw	128
 22065  0047E8  1BBB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 22066  0047EA  0E00               	movlw	0
 22067  0047EC  0100               	movlb	0	; () banked
 22068  0047EE  1BBC               	xorwf	___flge@ff2& (0+255),f,b
 22069  0047F0  0E00               	movlw	0
 22070  0047F2  1BBD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 22071  0047F4  0E00               	movlw	0
 22072  0047F6  1BBE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 22073  0047F8  0E80               	movlw	128
 22074  0047FA  1BBF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 22075  0047FC  0100               	movlb	0	; () banked
 22076  0047FE  51BC               	movf	___flge@ff2& (0+255),w,b
 22077  004800  0100               	movlb	0	; () banked
 22078  004802  5DB8               	subwf	___flge@ff1& (0+255),w,b
 22079  004804  0100               	movlb	0	; () banked
 22080  004806  51BD               	movf	(___flge@ff2+1)& (0+255),w,b
 22081  004808  0100               	movlb	0	; () banked
 22082  00480A  59B9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 22083  00480C  0100               	movlb	0	; () banked
 22084  00480E  51BE               	movf	(___flge@ff2+2)& (0+255),w,b
 22085  004810  0100               	movlb	0	; () banked
 22086  004812  59BA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 22087  004814  0100               	movlb	0	; () banked
 22088  004816  51BF               	movf	(___flge@ff2+3)& (0+255),w,b
 22089  004818  0100               	movlb	0	; () banked
 22090  00481A  59BB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 22091  00481C  B0D8               	btfsc	status,0,c
 22092  00481E  D002               	goto	l11861
 22093                           
 22094                           ; BSR set to: 0
 22095  004820  90D8               	bcf	status,0,c
 22096  004822  0012               	return	
 22097  004824                     l11861:
 22098                           
 22099                           ; BSR set to: 0
 22100  004824  80D8               	bsf	status,0,c
 22101                           
 22102                           ; BSR set to: 0
 22103  004826  0012               	return	
 22104  004828                     __end_of___flge:
 22105                           	opt stack 0
 22106                           tosu	equ	0xFFF
 22107                           tosh	equ	0xFFE
 22108                           tosl	equ	0xFFD
 22109                           pclath	equ	0xFFA
 22110                           tblptru	equ	0xFF8
 22111                           tblptrh	equ	0xFF7
 22112                           tblptrl	equ	0xFF6
 22113                           tablat	equ	0xFF5
 22114                           prodh	equ	0xFF4
 22115                           prodl	equ	0xFF3
 22116                           intcon	equ	0xFF2
 22117                           indf0	equ	0xFEF
 22118                           postinc0	equ	0xFEE
 22119                           fsr0h	equ	0xFEA
 22120                           fsr0l	equ	0xFE9
 22121                           wreg	equ	0xFE8
 22122                           postinc1	equ	0xFE6
 22123                           postdec1	equ	0xFE5
 22124                           plusw1	equ	0xFE3
 22125                           fsr1h	equ	0xFE2
 22126                           fsr1l	equ	0xFE1
 22127                           indf2	equ	0xFDF
 22128                           postinc2	equ	0xFDE
 22129                           postdec2	equ	0xFDD
 22130                           plusw2	equ	0xFDB
 22131                           fsr2h	equ	0xFDA
 22132                           fsr2l	equ	0xFD9
 22133                           status	equ	0xFD8
 22134                           
 22135 ;; *************** function _cal_additional_pressute *****************
 22136 ;; Defined at:
 22137 ;;		line 584 in file "src/api/data.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;  index           1    wreg     unsigned char 
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;  index           1  109[BANK0 ] unsigned char 
 22142 ;;  f2              4  105[BANK0 ] float 
 22143 ;;  f1              4  101[BANK0 ] float 
 22144 ;; Return value:  Size  Location     Type
 22145 ;;                  1    wreg      void 
 22146 ;; Registers used:
 22147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22148 ;; Tracked objects:
 22149 ;;		On entry : 0/0
 22150 ;;		On exit  : 0/0
 22151 ;;		Unchanged: 0/0
 22152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22154 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22155 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22156 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22157 ;;Total ram usage:       12 bytes
 22158 ;; Hardware stack levels used:    1
 22159 ;; Hardware stack levels required when called:    5
 22160 ;; This function calls:
 22161 ;;		___fladd
 22162 ;;		___fldiv
 22163 ;;		___flmul
 22164 ;;		___flneg
 22165 ;;		___fltol
 22166 ;;		___xxtofl
 22167 ;; This function is called by:
 22168 ;;		_event_process_rtc
 22169 ;; This function uses a non-reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text105
 22173  0039F4                     __ptext105:
 22174                           	opt stack 0
 22175  0039F4                     _cal_additional_pressute:
 22176                           	opt stack 23
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;incstack = 0
 22180                           ;cal_additional_pressute@index stored from wreg
 22181  0039F4  0100               	movlb	0	; () banked
 22182  0039F6  6FCD               	movwf	cal_additional_pressute@index& (0+255),b
 22183                           
 22184                           ;data.c: 586: if(index>1)return;
 22185  0039F8  0E01               	movlw	1
 22186  0039FA  0100               	movlb	0	; () banked
 22187  0039FC  65CD               	cpfsgt	cal_additional_pressute@index& (0+255),b
 22188  0039FE  D001               	goto	l13075
 22189  003A00  0012               	return	
 22190  003A02                     l13075:
 22191                           
 22192                           ; BSR set to: 0
 22193                           ;data.c: 587: float f1,f2;
 22194                           ;data.c: 588: f1=(float)adc_iPrEx[index];
 22195  003A02  0100               	movlb	0	; () banked
 22196  003A04  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 22197  003A06  0D02               	mullw	2
 22198  003A08  0E62               	movlw	low _adc_iPrEx
 22199  003A0A  24F3               	addwf	prodl,w,c
 22200  003A0C  6ED9               	movwf	fsr2l,c
 22201  003A0E  0E01               	movlw	high _adc_iPrEx
 22202  003A10  20F4               	addwfc	prodh,w,c
 22203  003A12  6EDA               	movwf	fsr2h,c
 22204  003A14  CFDE F060          	movff	postinc2,___xxtofl@val
 22205  003A18  CFDD F061          	movff	postdec2,___xxtofl@val+1
 22206  003A1C  0100               	movlb	0	; () banked
 22207  003A1E  0E00               	movlw	0
 22208  003A20  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22209  003A22  0EFF               	movlw	-1
 22210  003A24  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22211  003A26  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22212  003A28  0E01               	movlw	1
 22213  003A2A  ECED  F01E         	call	___xxtofl
 22214  003A2E  C060  F0C5         	movff	?___xxtofl,cal_additional_pressute@f1
 22215  003A32  C061  F0C6         	movff	?___xxtofl+1,cal_additional_pressute@f1+1
 22216  003A36  C062  F0C7         	movff	?___xxtofl+2,cal_additional_pressute@f1+2
 22217  003A3A  C063  F0C8         	movff	?___xxtofl+3,cal_additional_pressute@f1+3
 22218                           
 22219                           ;data.c: 589: f2=(float)(fpSysData->ex_pressZero[index]);
 22220  003A3E  0100               	movlb	0	; () banked
 22221  003A40  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 22222  003A42  0D04               	mullw	4
 22223  003A44  0E64               	movlw	100
 22224  003A46  26F3               	addwf	prodl,f,c
 22225  003A48  0E00               	movlw	0
 22226  003A4A  22F4               	addwfc	prodh,f,c
 22227  003A4C  50F3               	movf	prodl,w,c
 22228  003A4E  243C               	addwf	_fpSysData,w,c
 22229  003A50  0100               	movlb	0	; () banked
 22230  003A52  6FC2               	movwf	??_cal_additional_pressute& (0+255),b
 22231  003A54  50F4               	movf	prodh,w,c
 22232  003A56  203D               	addwfc	_fpSysData+1,w,c
 22233  003A58  0100               	movlb	0	; () banked
 22234  003A5A  6FC3               	movwf	(??_cal_additional_pressute+1)& (0+255),b
 22235  003A5C  0E00               	movlw	0
 22236  003A5E  203E               	addwfc	_fpSysData+2,w,c
 22237  003A60  0100               	movlb	0	; () banked
 22238  003A62  6FC4               	movwf	(??_cal_additional_pressute+2)& (0+255),b
 22239  003A64  C0C2  FFF6         	movff	??_cal_additional_pressute,tblptrl
 22240  003A68  C0C3  FFF7         	movff	??_cal_additional_pressute+1,tblptrh
 22241  003A6C  C0C4  FFF8         	movff	??_cal_additional_pressute+2,tblptru
 22242  003A70  0009               	tblrd		*+
 22243  003A72  CFF5 F060          	movff	tablat,___xxtofl@val
 22244  003A76  0009               	tblrd		*+
 22245  003A78  CFF5 F061          	movff	tablat,___xxtofl@val+1
 22246  003A7C  0009               	tblrd		*+
 22247  003A7E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 22248  003A82  000A               	tblrd		*-
 22249  003A84  CFF5 F063          	movff	tablat,___xxtofl@val+3
 22250  003A88  0E00               	movlw	0
 22251  003A8A  ECED  F01E         	call	___xxtofl
 22252  003A8E  C060  F0C9         	movff	?___xxtofl,cal_additional_pressute@f2
 22253  003A92  C061  F0CA         	movff	?___xxtofl+1,cal_additional_pressute@f2+1
 22254  003A96  C062  F0CB         	movff	?___xxtofl+2,cal_additional_pressute@f2+2
 22255  003A9A  C063  F0CC         	movff	?___xxtofl+3,cal_additional_pressute@f2+3
 22256                           
 22257                           ;data.c: 590: f1=f1-f2;
 22258  003A9E  C0C9  F0A0         	movff	cal_additional_pressute@f2,___flneg@f1
 22259  003AA2  C0CA  F0A1         	movff	cal_additional_pressute@f2+1,___flneg@f1+1
 22260  003AA6  C0CB  F0A2         	movff	cal_additional_pressute@f2+2,___flneg@f1+2
 22261  003AAA  C0CC  F0A3         	movff	cal_additional_pressute@f2+3,___flneg@f1+3
 22262  003AAE  EC8C  F03E         	call	___flneg	;wreg free
 22263  003AB2  C0A0  F0A4         	movff	?___flneg,___fladd@b
 22264  003AB6  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 22265  003ABA  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 22266  003ABE  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 22267  003AC2  C0C5  F0A8         	movff	cal_additional_pressute@f1,___fladd@a
 22268  003AC6  C0C6  F0A9         	movff	cal_additional_pressute@f1+1,___fladd@a+1
 22269  003ACA  C0C7  F0AA         	movff	cal_additional_pressute@f1+2,___fladd@a+2
 22270  003ACE  C0C8  F0AB         	movff	cal_additional_pressute@f1+3,___fladd@a+3
 22271  003AD2  EC40  F009         	call	___fladd	;wreg free
 22272  003AD6  C0A4  F0C5         	movff	?___fladd,cal_additional_pressute@f1
 22273  003ADA  C0A5  F0C6         	movff	?___fladd+1,cal_additional_pressute@f1+1
 22274  003ADE  C0A6  F0C7         	movff	?___fladd+2,cal_additional_pressute@f1+2
 22275  003AE2  C0A7  F0C8         	movff	?___fladd+3,cal_additional_pressute@f1+3
 22276                           
 22277                           ;data.c: 592: f2=(float)(fpSysData->ex_pressLine[index]);
 22278  003AE6  0100               	movlb	0	; () banked
 22279  003AE8  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 22280  003AEA  0D04               	mullw	4
 22281  003AEC  0E6C               	movlw	108
 22282  003AEE  26F3               	addwf	prodl,f,c
 22283  003AF0  0E00               	movlw	0
 22284  003AF2  22F4               	addwfc	prodh,f,c
 22285  003AF4  50F3               	movf	prodl,w,c
 22286  003AF6  243C               	addwf	_fpSysData,w,c
 22287  003AF8  0100               	movlb	0	; () banked
 22288  003AFA  6FC2               	movwf	??_cal_additional_pressute& (0+255),b
 22289  003AFC  50F4               	movf	prodh,w,c
 22290  003AFE  203D               	addwfc	_fpSysData+1,w,c
 22291  003B00  0100               	movlb	0	; () banked
 22292  003B02  6FC3               	movwf	(??_cal_additional_pressute+1)& (0+255),b
 22293  003B04  0E00               	movlw	0
 22294  003B06  203E               	addwfc	_fpSysData+2,w,c
 22295  003B08  0100               	movlb	0	; () banked
 22296  003B0A  6FC4               	movwf	(??_cal_additional_pressute+2)& (0+255),b
 22297  003B0C  C0C2  FFF6         	movff	??_cal_additional_pressute,tblptrl
 22298  003B10  C0C3  FFF7         	movff	??_cal_additional_pressute+1,tblptrh
 22299  003B14  C0C4  FFF8         	movff	??_cal_additional_pressute+2,tblptru
 22300  003B18  0009               	tblrd		*+
 22301  003B1A  CFF5 F060          	movff	tablat,___xxtofl@val
 22302  003B1E  0009               	tblrd		*+
 22303  003B20  CFF5 F061          	movff	tablat,___xxtofl@val+1
 22304  003B24  0009               	tblrd		*+
 22305  003B26  CFF5 F062          	movff	tablat,___xxtofl@val+2
 22306  003B2A  000A               	tblrd		*-
 22307  003B2C  CFF5 F063          	movff	tablat,___xxtofl@val+3
 22308  003B30  0E00               	movlw	0
 22309  003B32  ECED  F01E         	call	___xxtofl
 22310  003B36  C060  F0C9         	movff	?___xxtofl,cal_additional_pressute@f2
 22311  003B3A  C061  F0CA         	movff	?___xxtofl+1,cal_additional_pressute@f2+1
 22312  003B3E  C062  F0CB         	movff	?___xxtofl+2,cal_additional_pressute@f2+2
 22313  003B42  C063  F0CC         	movff	?___xxtofl+3,cal_additional_pressute@f2+3
 22314                           
 22315                           ;data.c: 593: f2/=1000;
 22316  003B46  C0C9  F087         	movff	cal_additional_pressute@f2,___fldiv@b
 22317  003B4A  C0CA  F088         	movff	cal_additional_pressute@f2+1,___fldiv@b+1
 22318  003B4E  C0CB  F089         	movff	cal_additional_pressute@f2+2,___fldiv@b+2
 22319  003B52  C0CC  F08A         	movff	cal_additional_pressute@f2+3,___fldiv@b+3
 22320  003B56  0E00               	movlw	0
 22321  003B58  0100               	movlb	0	; () banked
 22322  003B5A  6F8B               	movwf	___fldiv@a& (0+255),b
 22323  003B5C  0E00               	movlw	0
 22324  003B5E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 22325  003B60  0E7A               	movlw	122
 22326  003B62  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 22327  003B64  0E44               	movlw	68
 22328  003B66  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 22329  003B68  EC48  F012         	call	___fldiv	;wreg free
 22330  003B6C  C087  F0C9         	movff	?___fldiv,cal_additional_pressute@f2
 22331  003B70  C088  F0CA         	movff	?___fldiv+1,cal_additional_pressute@f2+1
 22332  003B74  C089  F0CB         	movff	?___fldiv+2,cal_additional_pressute@f2+2
 22333  003B78  C08A  F0CC         	movff	?___fldiv+3,cal_additional_pressute@f2+3
 22334                           
 22335                           ;data.c: 595: f1=f1*f2;
 22336  003B7C  C0C5  F06E         	movff	cal_additional_pressute@f1,___flmul@b
 22337  003B80  C0C6  F06F         	movff	cal_additional_pressute@f1+1,___flmul@b+1
 22338  003B84  C0C7  F070         	movff	cal_additional_pressute@f1+2,___flmul@b+2
 22339  003B88  C0C8  F071         	movff	cal_additional_pressute@f1+3,___flmul@b+3
 22340  003B8C  C0C9  F072         	movff	cal_additional_pressute@f2,___flmul@a
 22341  003B90  C0CA  F073         	movff	cal_additional_pressute@f2+1,___flmul@a+1
 22342  003B94  C0CB  F074         	movff	cal_additional_pressute@f2+2,___flmul@a+2
 22343  003B98  C0CC  F075         	movff	cal_additional_pressute@f2+3,___flmul@a+3
 22344  003B9C  EC94  F00B         	call	___flmul	;wreg free
 22345  003BA0  C06E  F0C5         	movff	?___flmul,cal_additional_pressute@f1
 22346  003BA4  C06F  F0C6         	movff	?___flmul+1,cal_additional_pressute@f1+1
 22347  003BA8  C070  F0C7         	movff	?___flmul+2,cal_additional_pressute@f1+2
 22348  003BAC  C071  F0C8         	movff	?___flmul+3,cal_additional_pressute@f1+3
 22349                           
 22350                           ;data.c: 596: rtExPressure[index]=(int32_t)f1;
 22351  003BB0  C0C5  F0B8         	movff	cal_additional_pressute@f1,___fltol@f1
 22352  003BB4  C0C6  F0B9         	movff	cal_additional_pressute@f1+1,___fltol@f1+1
 22353  003BB8  C0C7  F0BA         	movff	cal_additional_pressute@f1+2,___fltol@f1+2
 22354  003BBC  C0C8  F0BB         	movff	cal_additional_pressute@f1+3,___fltol@f1+3
 22355  003BC0  EC01  F02B         	call	___fltol	;wreg free
 22356  003BC4  0100               	movlb	0	; () banked
 22357  003BC6  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 22358  003BC8  0D04               	mullw	4
 22359  003BCA  0E2B               	movlw	low _rtExPressure
 22360  003BCC  24F3               	addwf	prodl,w,c
 22361  003BCE  6ED9               	movwf	fsr2l,c
 22362  003BD0  0E01               	movlw	high _rtExPressure
 22363  003BD2  20F4               	addwfc	prodh,w,c
 22364  003BD4  6EDA               	movwf	fsr2h,c
 22365  003BD6  0100               	movlb	0	; () banked
 22366  003BD8  C0B8  FFDE         	movff	?___fltol,postinc2
 22367  003BDC  0100               	movlb	0	; () banked
 22368  003BDE  C0B9  FFDE         	movff	?___fltol+1,postinc2
 22369  003BE2  0100               	movlb	0	; () banked
 22370  003BE4  C0BA  FFDE         	movff	?___fltol+2,postinc2
 22371  003BE8  0100               	movlb	0	; () banked
 22372  003BEA  C0BB  FFDE         	movff	?___fltol+3,postinc2
 22373                           
 22374                           ; BSR set to: 0
 22375  003BEE  0012               	return		;funcret
 22376  003BF0                     __end_of_cal_additional_pressute:
 22377                           	opt stack 0
 22378                           tosu	equ	0xFFF
 22379                           tosh	equ	0xFFE
 22380                           tosl	equ	0xFFD
 22381                           pclath	equ	0xFFA
 22382                           tblptru	equ	0xFF8
 22383                           tblptrh	equ	0xFF7
 22384                           tblptrl	equ	0xFF6
 22385                           tablat	equ	0xFF5
 22386                           prodh	equ	0xFF4
 22387                           prodl	equ	0xFF3
 22388                           intcon	equ	0xFF2
 22389                           indf0	equ	0xFEF
 22390                           postinc0	equ	0xFEE
 22391                           fsr0h	equ	0xFEA
 22392                           fsr0l	equ	0xFE9
 22393                           wreg	equ	0xFE8
 22394                           postinc1	equ	0xFE6
 22395                           postdec1	equ	0xFE5
 22396                           plusw1	equ	0xFE3
 22397                           fsr1h	equ	0xFE2
 22398                           fsr1l	equ	0xFE1
 22399                           indf2	equ	0xFDF
 22400                           postinc2	equ	0xFDE
 22401                           postdec2	equ	0xFDD
 22402                           plusw2	equ	0xFDB
 22403                           fsr2h	equ	0xFDA
 22404                           fsr2l	equ	0xFD9
 22405                           status	equ	0xFD8
 22406                           
 22407 ;; *************** function ___flneg *****************
 22408 ;; Defined at:
 22409 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flneg.c"
 22410 ;; Parameters:    Size  Location     Type
 22411 ;;  f1              4   64[BANK0 ] void 
 22412 ;; Auto vars:     Size  Location     Type
 22413 ;;		None
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  4   64[BANK0 ] void 
 22416 ;; Registers used:
 22417 ;;		wreg, status,2, status,0
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22427 ;;Total ram usage:        4 bytes
 22428 ;; Hardware stack levels used:    1
 22429 ;; Hardware stack levels required when called:    4
 22430 ;; This function calls:
 22431 ;;		Nothing
 22432 ;; This function is called by:
 22433 ;;		_m_interp1_float_fast
 22434 ;;		_cal_diff_hight_to_vol_v
 22435 ;;		_cal_pt100_temperature_in
 22436 ;;		_cal_pt100_temperature_ex
 22437 ;;		_cal_additional_pressute
 22438 ;; This function uses a non-reentrant model
 22439 ;;
 22440                           
 22441                           	psect	text106
 22442  007D18                     __ptext106:
 22443                           	opt stack 0
 22444  007D18                     ___flneg:
 22445                           	opt stack 23
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;incstack = 0
 22449  007D18  0100               	movlb	0	; () banked
 22450  007D1A  51A0               	movf	___flneg@f1& (0+255),w,b
 22451  007D1C  0100               	movlb	0	; () banked
 22452  007D1E  11A1               	iorwf	(___flneg@f1+1)& (0+255),w,b
 22453  007D20  0100               	movlb	0	; () banked
 22454  007D22  11A2               	iorwf	(___flneg@f1+2)& (0+255),w,b
 22455  007D24  0100               	movlb	0	; () banked
 22456  007D26  11A3               	iorwf	(___flneg@f1+3)& (0+255),w,b
 22457  007D28  B4D8               	btfsc	status,2,c
 22458  007D2A  D009               	goto	l11869
 22459                           
 22460                           ; BSR set to: 0
 22461  007D2C  0E00               	movlw	0
 22462  007D2E  0100               	movlb	0	; () banked
 22463  007D30  1BA0               	xorwf	___flneg@f1& (0+255),f,b
 22464  007D32  0E00               	movlw	0
 22465  007D34  1BA1               	xorwf	(___flneg@f1+1)& (0+255),f,b
 22466  007D36  0E00               	movlw	0
 22467  007D38  1BA2               	xorwf	(___flneg@f1+2)& (0+255),f,b
 22468  007D3A  0E80               	movlw	128
 22469  007D3C  1BA3               	xorwf	(___flneg@f1+3)& (0+255),f,b
 22470  007D3E                     l11869:
 22471                           
 22472                           ; BSR set to: 0
 22473  007D3E  C0A0  F0A0         	movff	___flneg@f1,?___flneg
 22474  007D42  C0A1  F0A1         	movff	___flneg@f1+1,?___flneg+1
 22475  007D46  C0A2  F0A2         	movff	___flneg@f1+2,?___flneg+2
 22476  007D4A  C0A3  F0A3         	movff	___flneg@f1+3,?___flneg+3
 22477  007D4E  0012               	return	
 22478  007D50                     __end_of___flneg:
 22479                           	opt stack 0
 22480                           tosu	equ	0xFFF
 22481                           tosh	equ	0xFFE
 22482                           tosl	equ	0xFFD
 22483                           pclath	equ	0xFFA
 22484                           tblptru	equ	0xFF8
 22485                           tblptrh	equ	0xFF7
 22486                           tblptrl	equ	0xFF6
 22487                           tablat	equ	0xFF5
 22488                           prodh	equ	0xFF4
 22489                           prodl	equ	0xFF3
 22490                           intcon	equ	0xFF2
 22491                           indf0	equ	0xFEF
 22492                           postinc0	equ	0xFEE
 22493                           fsr0h	equ	0xFEA
 22494                           fsr0l	equ	0xFE9
 22495                           wreg	equ	0xFE8
 22496                           postinc1	equ	0xFE6
 22497                           postdec1	equ	0xFE5
 22498                           plusw1	equ	0xFE3
 22499                           fsr1h	equ	0xFE2
 22500                           fsr1l	equ	0xFE1
 22501                           indf2	equ	0xFDF
 22502                           postinc2	equ	0xFDE
 22503                           postdec2	equ	0xFDD
 22504                           plusw2	equ	0xFDB
 22505                           fsr2h	equ	0xFDA
 22506                           fsr2l	equ	0xFD9
 22507                           status	equ	0xFD8
 22508                           
 22509 ;; *************** function ___fladd *****************
 22510 ;; Defined at:
 22511 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;  b               4   68[BANK0 ] void 
 22514 ;;  a               4   72[BANK0 ] void 
 22515 ;; Auto vars:     Size  Location     Type
 22516 ;;  grs             1   87[BANK0 ] unsigned char 
 22517 ;;  bexp            1   86[BANK0 ] unsigned char 
 22518 ;;  aexp            1   85[BANK0 ] unsigned char 
 22519 ;;  signs           1   84[BANK0 ] unsigned char 
 22520 ;; Return value:  Size  Location     Type
 22521 ;;                  4   68[BANK0 ] unsigned char 
 22522 ;; Registers used:
 22523 ;;		wreg, status,2, status,0
 22524 ;; Tracked objects:
 22525 ;;		On entry : 0/0
 22526 ;;		On exit  : 0/0
 22527 ;;		Unchanged: 0/0
 22528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22529 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22531 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22532 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22533 ;;Total ram usage:       20 bytes
 22534 ;; Hardware stack levels used:    1
 22535 ;; Hardware stack levels required when called:    4
 22536 ;; This function calls:
 22537 ;;		Nothing
 22538 ;; This function is called by:
 22539 ;;		_m_interp1_float_fast
 22540 ;;		_cal_diff_hight_to_vol_h
 22541 ;;		_cal_diff_hight_level
 22542 ;;		_cal_diff_hight_to_vol_v
 22543 ;;		_cal_pt100_temperature_in
 22544 ;;		_cal_pt100_temperature_ex
 22545 ;;		_cal_additional_pressute
 22546 ;; This function uses a non-reentrant model
 22547 ;;
 22548                           
 22549                           	psect	text107
 22550  001280                     __ptext107:
 22551                           	opt stack 0
 22552  001280                     ___fladd:
 22553                           	opt stack 21
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;incstack = 0
 22557  001280  0100               	movlb	0	; () banked
 22558  001282  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 22559  001284  0B80               	andlw	128
 22560  001286  0100               	movlb	0	; () banked
 22561  001288  6FB4               	movwf	___fladd@signs& (0+255),b
 22562  00128A  0100               	movlb	0	; () banked
 22563  00128C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 22564  00128E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 22565  001290  0100               	movlb	0	; () banked
 22566  001292  6FB6               	movwf	___fladd@bexp& (0+255),b
 22567                           
 22568                           ; BSR set to: 0
 22569  001294  0100               	movlb	0	; () banked
 22570  001296  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 22571  001298  D002               	goto	l11381
 22572                           
 22573                           ; BSR set to: 0
 22574  00129A  0100               	movlb	0	; () banked
 22575  00129C  81B6               	bsf	___fladd@bexp& (0+255),0,b
 22576  00129E                     l11381:
 22577                           
 22578                           ; BSR set to: 0
 22579  00129E  0100               	movlb	0	; () banked
 22580  0012A0  51B6               	movf	___fladd@bexp& (0+255),w,b
 22581  0012A2  0100               	movlb	0	; () banked
 22582  0012A4  B4D8               	btfsc	status,2,c
 22583  0012A6  D012               	goto	l11391
 22584                           
 22585                           ; BSR set to: 0
 22586  0012A8  0100               	movlb	0	; () banked
 22587  0012AA  29B6               	incf	___fladd@bexp& (0+255),w,b
 22588  0012AC  A4D8               	btfss	status,2,c
 22589  0012AE  D009               	goto	l11387
 22590                           
 22591                           ; BSR set to: 0
 22592  0012B0  0E00               	movlw	0
 22593  0012B2  0100               	movlb	0	; () banked
 22594  0012B4  6FA4               	movwf	___fladd@b& (0+255),b
 22595  0012B6  0E00               	movlw	0
 22596  0012B8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 22597  0012BA  0E00               	movlw	0
 22598  0012BC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 22599  0012BE  0E00               	movlw	0
 22600  0012C0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 22601  0012C2                     l11387:
 22602                           
 22603                           ; BSR set to: 0
 22604  0012C2  0100               	movlb	0	; () banked
 22605  0012C4  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 22606                           
 22607                           ; BSR set to: 0
 22608  0012C6  0E00               	movlw	0
 22609  0012C8  0100               	movlb	0	; () banked
 22610  0012CA  D008               	goto	L9
 22611  0012CC                     l11391:
 22612                           
 22613                           ; BSR set to: 0
 22614  0012CC  0E00               	movlw	0
 22615  0012CE  0100               	movlb	0	; () banked
 22616  0012D0  6FA4               	movwf	___fladd@b& (0+255),b
 22617  0012D2  0E00               	movlw	0
 22618  0012D4  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 22619  0012D6  0E00               	movlw	0
 22620  0012D8  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 22621  0012DA  0E00               	movlw	0
 22622  0012DC                     L9:
 22623  0012DC  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 22624                           
 22625                           ; BSR set to: 0
 22626                           
 22627                           ; BSR set to: 0
 22628  0012DE  0100               	movlb	0	; () banked
 22629  0012E0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 22630  0012E2  0B80               	andlw	128
 22631  0012E4  0100               	movlb	0	; () banked
 22632  0012E6  6FB5               	movwf	___fladd@aexp& (0+255),b
 22633                           
 22634                           ; BSR set to: 0
 22635  0012E8  0100               	movlb	0	; () banked
 22636  0012EA  51B4               	movf	___fladd@signs& (0+255),w,b
 22637  0012EC  0100               	movlb	0	; () banked
 22638  0012EE  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 22639  0012F0  B4D8               	btfsc	status,2,c
 22640  0012F2  D002               	goto	l11399
 22641                           
 22642                           ; BSR set to: 0
 22643  0012F4  0100               	movlb	0	; () banked
 22644  0012F6  8DB4               	bsf	___fladd@signs& (0+255),6,b
 22645  0012F8                     l11399:
 22646                           
 22647                           ; BSR set to: 0
 22648  0012F8  0100               	movlb	0	; () banked
 22649  0012FA  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 22650  0012FC  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 22651  0012FE  0100               	movlb	0	; () banked
 22652  001300  6FB5               	movwf	___fladd@aexp& (0+255),b
 22653                           
 22654                           ; BSR set to: 0
 22655  001302  0100               	movlb	0	; () banked
 22656  001304  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 22657  001306  D002               	goto	l11405
 22658                           
 22659                           ; BSR set to: 0
 22660  001308  0100               	movlb	0	; () banked
 22661  00130A  81B5               	bsf	___fladd@aexp& (0+255),0,b
 22662  00130C                     l11405:
 22663                           
 22664                           ; BSR set to: 0
 22665  00130C  0100               	movlb	0	; () banked
 22666  00130E  51B5               	movf	___fladd@aexp& (0+255),w,b
 22667  001310  0100               	movlb	0	; () banked
 22668  001312  B4D8               	btfsc	status,2,c
 22669  001314  D012               	goto	l11415
 22670                           
 22671                           ; BSR set to: 0
 22672  001316  0100               	movlb	0	; () banked
 22673  001318  29B5               	incf	___fladd@aexp& (0+255),w,b
 22674  00131A  A4D8               	btfss	status,2,c
 22675  00131C  D009               	goto	l11411
 22676                           
 22677                           ; BSR set to: 0
 22678  00131E  0E00               	movlw	0
 22679  001320  0100               	movlb	0	; () banked
 22680  001322  6FA8               	movwf	___fladd@a& (0+255),b
 22681  001324  0E00               	movlw	0
 22682  001326  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 22683  001328  0E00               	movlw	0
 22684  00132A  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 22685  00132C  0E00               	movlw	0
 22686  00132E  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 22687  001330                     l11411:
 22688                           
 22689                           ; BSR set to: 0
 22690  001330  0100               	movlb	0	; () banked
 22691  001332  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 22692                           
 22693                           ; BSR set to: 0
 22694  001334  0E00               	movlw	0
 22695  001336  0100               	movlb	0	; () banked
 22696  001338  D008               	goto	L10
 22697  00133A                     l11415:
 22698                           
 22699                           ; BSR set to: 0
 22700  00133A  0E00               	movlw	0
 22701  00133C  0100               	movlb	0	; () banked
 22702  00133E  6FA8               	movwf	___fladd@a& (0+255),b
 22703  001340  0E00               	movlw	0
 22704  001342  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 22705  001344  0E00               	movlw	0
 22706  001346  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 22707  001348  0E00               	movlw	0
 22708  00134A                     L10:
 22709  00134A  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 22710                           
 22711                           ; BSR set to: 0
 22712                           
 22713                           ; BSR set to: 0
 22714  00134C  0100               	movlb	0	; () banked
 22715  00134E  51B6               	movf	___fladd@bexp& (0+255),w,b
 22716  001350  0100               	movlb	0	; () banked
 22717  001352  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 22718  001354  B0D8               	btfsc	status,0,c
 22719  001356  D024               	goto	l11453
 22720                           
 22721                           ; BSR set to: 0
 22722  001358  0100               	movlb	0	; () banked
 22723  00135A  ADB4               	btfss	___fladd@signs& (0+255),6,b
 22724  00135C  D003               	goto	l11423
 22725                           
 22726                           ; BSR set to: 0
 22727  00135E  0E80               	movlw	128
 22728  001360  0100               	movlb	0	; () banked
 22729  001362  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 22730  001364                     l11423:
 22731                           
 22732                           ; BSR set to: 0
 22733  001364  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 22734                           
 22735                           ; BSR set to: 0
 22736  001368  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 22737                           
 22738                           ; BSR set to: 0
 22739  00136C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 22740                           
 22741                           ; BSR set to: 0
 22742  001370  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 22743                           
 22744                           ; BSR set to: 0
 22745  001374  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 22746                           
 22747                           ; BSR set to: 0
 22748  001378  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 22749                           
 22750                           ; BSR set to: 0
 22751  00137C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 22752                           
 22753                           ; BSR set to: 0
 22754  001380  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 22755                           
 22756                           ; BSR set to: 0
 22757  001384  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 22758                           
 22759                           ; BSR set to: 0
 22760  001388  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 22761                           
 22762                           ; BSR set to: 0
 22763  00138C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 22764                           
 22765                           ; BSR set to: 0
 22766  001390  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 22767                           
 22768                           ; BSR set to: 0
 22769  001394  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 22770                           
 22771                           ; BSR set to: 0
 22772  001398  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 22773                           
 22774                           ; BSR set to: 0
 22775  00139C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 22776  0013A0                     l11453:
 22777                           
 22778                           ; BSR set to: 0
 22779  0013A0  0E00               	movlw	0
 22780  0013A2  0100               	movlb	0	; () banked
 22781  0013A4  6FB7               	movwf	___fladd@grs& (0+255),b
 22782                           
 22783                           ; BSR set to: 0
 22784  0013A6  0100               	movlb	0	; () banked
 22785  0013A8  51B6               	movf	___fladd@bexp& (0+255),w,b
 22786  0013AA  0100               	movlb	0	; () banked
 22787  0013AC  6FAC               	movwf	??___fladd& (0+255),b
 22788  0013AE  6BAD               	clrf	(??___fladd+1)& (0+255),b
 22789  0013B0  0100               	movlb	0	; () banked
 22790  0013B2  1FAC               	comf	??___fladd& (0+255),f,b
 22791  0013B4  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 22792  0013B6  4BAC               	infsnz	??___fladd& (0+255),f,b
 22793  0013B8  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 22794  0013BA  0100               	movlb	0	; () banked
 22795  0013BC  51B5               	movf	___fladd@aexp& (0+255),w,b
 22796  0013BE  0100               	movlb	0	; () banked
 22797  0013C0  6FAE               	movwf	(??___fladd+2)& (0+255),b
 22798  0013C2  6BAF               	clrf	(??___fladd+3)& (0+255),b
 22799  0013C4  0100               	movlb	0	; () banked
 22800  0013C6  51AC               	movf	??___fladd& (0+255),w,b
 22801  0013C8  0100               	movlb	0	; () banked
 22802  0013CA  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 22803  0013CC  0100               	movlb	0	; () banked
 22804  0013CE  51AD               	movf	(??___fladd+1)& (0+255),w,b
 22805  0013D0  0100               	movlb	0	; () banked
 22806  0013D2  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 22807  0013D4  0100               	movlb	0	; () banked
 22808  0013D6  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 22809  0013D8  D03D               	goto	l2320
 22810  0013DA  0100               	movlb	0	; () banked
 22811  0013DC  51AF               	movf	(??___fladd+3)& (0+255),w,b
 22812  0013DE  E105               	bnz	u9710
 22813  0013E0  0E1A               	movlw	26
 22814  0013E2  0100               	movlb	0	; () banked
 22815  0013E4  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 22816  0013E6  A0D8               	btfss	status,0,c
 22817  0013E8  D035               	goto	l2320
 22818  0013EA                     u9710:
 22819                           
 22820                           ; BSR set to: 0
 22821  0013EA  0100               	movlb	0	; () banked
 22822  0013EC  51A4               	movf	___fladd@b& (0+255),w,b
 22823  0013EE  0100               	movlb	0	; () banked
 22824  0013F0  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 22825  0013F2  0100               	movlb	0	; () banked
 22826  0013F4  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 22827  0013F6  0100               	movlb	0	; () banked
 22828  0013F8  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 22829  0013FA  B4D8               	btfsc	status,2,c
 22830  0013FC  D002               	goto	u9720
 22831  0013FE  0E01               	movlw	1
 22832  001400  D001               	goto	u9730
 22833  001402                     u9720:
 22834  001402  0E00               	movlw	0
 22835  001404                     u9730:
 22836  001404  0100               	movlb	0	; () banked
 22837  001406  6FB7               	movwf	___fladd@grs& (0+255),b
 22838                           
 22839                           ; BSR set to: 0
 22840  001408  0E00               	movlw	0
 22841  00140A  0100               	movlb	0	; () banked
 22842  00140C  6FA4               	movwf	___fladd@b& (0+255),b
 22843  00140E  0E00               	movlw	0
 22844  001410  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 22845  001412  0E00               	movlw	0
 22846  001414  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 22847  001416  0E00               	movlw	0
 22848  001418  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 22849                           
 22850                           ; BSR set to: 0
 22851  00141A  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 22852  00141E  D020               	goto	l2319
 22853  001420                     l2321:
 22854                           
 22855                           ; BSR set to: 0
 22856  001420  0100               	movlb	0	; () banked
 22857  001422  A1B7               	btfss	___fladd@grs& (0+255),0,b
 22858  001424  D007               	goto	l11465
 22859                           
 22860                           ; BSR set to: 0
 22861  001426  0100               	movlb	0	; () banked
 22862  001428  90D8               	bcf	status,0,c
 22863  00142A  31B7               	rrcf	___fladd@grs& (0+255),w,b
 22864  00142C  0901               	iorlw	1
 22865  00142E  0100               	movlb	0	; () banked
 22866  001430  6FB7               	movwf	___fladd@grs& (0+255),b
 22867  001432  D003               	goto	l11467
 22868  001434                     l11465:
 22869                           
 22870                           ; BSR set to: 0
 22871  001434  0100               	movlb	0	; () banked
 22872  001436  90D8               	bcf	status,0,c
 22873  001438  33B7               	rrcf	___fladd@grs& (0+255),f,b
 22874  00143A                     l11467:
 22875                           
 22876                           ; BSR set to: 0
 22877  00143A  0100               	movlb	0	; () banked
 22878  00143C  A1A4               	btfss	___fladd@b& (0+255),0,b
 22879  00143E  D002               	goto	l11471
 22880                           
 22881                           ; BSR set to: 0
 22882  001440  0100               	movlb	0	; () banked
 22883  001442  8FB7               	bsf	___fladd@grs& (0+255),7,b
 22884  001444                     l11471:
 22885                           
 22886                           ; BSR set to: 0
 22887  001444  0100               	movlb	0	; () banked
 22888  001446  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 22889  001448  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 22890  00144A  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 22891  00144C  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 22892  00144E  33A4               	rrcf	___fladd@b& (0+255),f,b
 22893                           
 22894                           ; BSR set to: 0
 22895  001450  0100               	movlb	0	; () banked
 22896  001452  2BB6               	incf	___fladd@bexp& (0+255),f,b
 22897  001454                     l2320:
 22898                           
 22899                           ; BSR set to: 0
 22900  001454  0100               	movlb	0	; () banked
 22901  001456  51B5               	movf	___fladd@aexp& (0+255),w,b
 22902  001458  0100               	movlb	0	; () banked
 22903  00145A  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 22904  00145C  A0D8               	btfss	status,0,c
 22905  00145E  D7E0               	goto	l2321
 22906  001460                     l2319:
 22907                           
 22908                           ; BSR set to: 0
 22909  001460  0100               	movlb	0	; () banked
 22910  001462  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 22911  001464  D03F               	goto	l11499
 22912                           
 22913                           ; BSR set to: 0
 22914  001466  0100               	movlb	0	; () banked
 22915  001468  51B6               	movf	___fladd@bexp& (0+255),w,b
 22916  00146A  0100               	movlb	0	; () banked
 22917  00146C  A4D8               	btfss	status,2,c
 22918  00146E  D00A               	goto	l11481
 22919                           
 22920                           ; BSR set to: 0
 22921  001470  0E00               	movlw	0
 22922  001472  0100               	movlb	0	; () banked
 22923  001474  6FA4               	movwf	?___fladd& (0+255),b
 22924  001476  0E00               	movlw	0
 22925  001478  6FA5               	movwf	(?___fladd+1)& (0+255),b
 22926  00147A  0E00               	movlw	0
 22927  00147C  6FA6               	movwf	(?___fladd+2)& (0+255),b
 22928  00147E  0E00               	movlw	0
 22929  001480  6FA7               	movwf	(?___fladd+3)& (0+255),b
 22930                           
 22931                           ; BSR set to: 0
 22932  001482  0012               	return	
 22933  001484                     l11481:
 22934                           
 22935                           ; BSR set to: 0
 22936  001484  0100               	movlb	0	; () banked
 22937  001486  51A8               	movf	___fladd@a& (0+255),w,b
 22938  001488  0100               	movlb	0	; () banked
 22939  00148A  27A4               	addwf	___fladd@b& (0+255),f,b
 22940  00148C  0100               	movlb	0	; () banked
 22941  00148E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 22942  001490  0100               	movlb	0	; () banked
 22943  001492  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 22944  001494  0100               	movlb	0	; () banked
 22945  001496  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 22946  001498  0100               	movlb	0	; () banked
 22947  00149A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 22948  00149C  0100               	movlb	0	; () banked
 22949  00149E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 22950  0014A0  0100               	movlb	0	; () banked
 22951  0014A2  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 22952                           
 22953                           ; BSR set to: 0
 22954  0014A4  0100               	movlb	0	; () banked
 22955  0014A6  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 22956  0014A8  D0CC               	goto	l11535
 22957                           
 22958                           ; BSR set to: 0
 22959  0014AA  0100               	movlb	0	; () banked
 22960  0014AC  A1B7               	btfss	___fladd@grs& (0+255),0,b
 22961  0014AE  D009               	goto	l11489
 22962                           
 22963                           ; BSR set to: 0
 22964  0014B0  0100               	movlb	0	; () banked
 22965  0014B2  90D8               	bcf	status,0,c
 22966  0014B4  33B7               	rrcf	___fladd@grs& (0+255),f,b
 22967  0014B6  0100               	movlb	0	; () banked
 22968  0014B8  51B7               	movf	___fladd@grs& (0+255),w,b
 22969  0014BA  0901               	iorlw	1
 22970  0014BC  0100               	movlb	0	; () banked
 22971  0014BE  6FB7               	movwf	___fladd@grs& (0+255),b
 22972  0014C0  D003               	goto	l11491
 22973  0014C2                     l11489:
 22974                           
 22975                           ; BSR set to: 0
 22976  0014C2  0100               	movlb	0	; () banked
 22977  0014C4  90D8               	bcf	status,0,c
 22978  0014C6  33B7               	rrcf	___fladd@grs& (0+255),f,b
 22979  0014C8                     l11491:
 22980                           
 22981                           ; BSR set to: 0
 22982  0014C8  0100               	movlb	0	; () banked
 22983  0014CA  A1A4               	btfss	___fladd@b& (0+255),0,b
 22984  0014CC  D002               	goto	l11495
 22985                           
 22986                           ; BSR set to: 0
 22987  0014CE  0100               	movlb	0	; () banked
 22988  0014D0  8FB7               	bsf	___fladd@grs& (0+255),7,b
 22989  0014D2                     l11495:
 22990                           
 22991                           ; BSR set to: 0
 22992  0014D2  0100               	movlb	0	; () banked
 22993  0014D4  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 22994  0014D6  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 22995  0014D8  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 22996  0014DA  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 22997  0014DC  33A4               	rrcf	___fladd@b& (0+255),f,b
 22998                           
 22999                           ; BSR set to: 0
 23000  0014DE  0100               	movlb	0	; () banked
 23001  0014E0  2BB6               	incf	___fladd@bexp& (0+255),f,b
 23002                           
 23003                           ; BSR set to: 0
 23004  0014E2  D0AF               	goto	l11535
 23005  0014E4                     l11499:
 23006                           
 23007                           ; BSR set to: 0
 23008  0014E4  0100               	movlb	0	; () banked
 23009  0014E6  51A8               	movf	___fladd@a& (0+255),w,b
 23010  0014E8  0100               	movlb	0	; () banked
 23011  0014EA  5DA4               	subwf	___fladd@b& (0+255),w,b
 23012  0014EC  0100               	movlb	0	; () banked
 23013  0014EE  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 23014  0014F0  0100               	movlb	0	; () banked
 23015  0014F2  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 23016  0014F4  0100               	movlb	0	; () banked
 23017  0014F6  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 23018  0014F8  0100               	movlb	0	; () banked
 23019  0014FA  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 23020  0014FC  0100               	movlb	0	; () banked
 23021  0014FE  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 23022  001500  0A80               	xorlw	128
 23023  001502  0100               	movlb	0	; () banked
 23024  001504  6FAC               	movwf	??___fladd& (0+255),b
 23025  001506  0100               	movlb	0	; () banked
 23026  001508  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 23027  00150A  0A80               	xorlw	128
 23028  00150C  0100               	movlb	0	; () banked
 23029  00150E  59AC               	subwfb	??___fladd& (0+255),w,b
 23030  001510  B0D8               	btfsc	status,0,c
 23031  001512  D050               	goto	l11509
 23032                           
 23033                           ; BSR set to: 0
 23034  001514  C0A4  F0AC         	movff	___fladd@b,??___fladd
 23035  001518  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 23036  00151C  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 23037  001520  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 23038  001524  0100               	movlb	0	; () banked
 23039  001526  1FAC               	comf	??___fladd& (0+255),f,b
 23040  001528  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 23041  00152A  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 23042  00152C  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 23043  00152E  2BAC               	incf	??___fladd& (0+255),f,b
 23044  001530  0E00               	movlw	0
 23045  001532  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 23046  001534  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 23047  001536  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 23048  001538  0100               	movlb	0	; () banked
 23049  00153A  51A8               	movf	___fladd@a& (0+255),w,b
 23050  00153C  0100               	movlb	0	; () banked
 23051  00153E  25AC               	addwf	??___fladd& (0+255),w,b
 23052  001540  0100               	movlb	0	; () banked
 23053  001542  6FB0               	movwf	(??___fladd+4)& (0+255),b
 23054  001544  0100               	movlb	0	; () banked
 23055  001546  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 23056  001548  0100               	movlb	0	; () banked
 23057  00154A  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 23058  00154C  0100               	movlb	0	; () banked
 23059  00154E  6FB1               	movwf	(??___fladd+5)& (0+255),b
 23060  001550  0100               	movlb	0	; () banked
 23061  001552  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 23062  001554  0100               	movlb	0	; () banked
 23063  001556  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 23064  001558  0100               	movlb	0	; () banked
 23065  00155A  6FB2               	movwf	(??___fladd+6)& (0+255),b
 23066  00155C  0100               	movlb	0	; () banked
 23067  00155E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 23068  001560  0100               	movlb	0	; () banked
 23069  001562  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 23070  001564  0100               	movlb	0	; () banked
 23071  001566  6FB3               	movwf	(??___fladd+7)& (0+255),b
 23072  001568  0EFF               	movlw	255
 23073  00156A  0100               	movlb	0	; () banked
 23074  00156C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 23075  00156E  0100               	movlb	0	; () banked
 23076  001570  6FA4               	movwf	___fladd@b& (0+255),b
 23077  001572  0EFF               	movlw	255
 23078  001574  0100               	movlb	0	; () banked
 23079  001576  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 23080  001578  0100               	movlb	0	; () banked
 23081  00157A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 23082  00157C  0EFF               	movlw	255
 23083  00157E  0100               	movlb	0	; () banked
 23084  001580  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 23085  001582  0100               	movlb	0	; () banked
 23086  001584  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 23087  001586  0EFF               	movlw	255
 23088  001588  0100               	movlb	0	; () banked
 23089  00158A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 23090  00158C  0100               	movlb	0	; () banked
 23091  00158E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 23092  001590  0E80               	movlw	128
 23093  001592  0100               	movlb	0	; () banked
 23094  001594  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 23095                           
 23096                           ; BSR set to: 0
 23097  001596  0100               	movlb	0	; () banked
 23098  001598  6DB7               	negf	___fladd@grs& (0+255),b
 23099                           
 23100                           ; BSR set to: 0
 23101  00159A  0100               	movlb	0	; () banked
 23102  00159C  51B7               	movf	___fladd@grs& (0+255),w,b
 23103  00159E  0100               	movlb	0	; () banked
 23104  0015A0  A4D8               	btfss	status,2,c
 23105  0015A2  D018               	goto	l2336
 23106                           
 23107                           ; BSR set to: 0
 23108  0015A4  0E01               	movlw	1
 23109  0015A6  0100               	movlb	0	; () banked
 23110  0015A8  27A4               	addwf	___fladd@b& (0+255),f,b
 23111  0015AA  0E00               	movlw	0
 23112  0015AC  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 23113  0015AE  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 23114  0015B0  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 23115                           
 23116                           ; BSR set to: 0
 23117  0015B2  D010               	goto	l2336
 23118  0015B4                     l11509:
 23119                           
 23120                           ; BSR set to: 0
 23121  0015B4  0100               	movlb	0	; () banked
 23122  0015B6  51A8               	movf	___fladd@a& (0+255),w,b
 23123  0015B8  0100               	movlb	0	; () banked
 23124  0015BA  5FA4               	subwf	___fladd@b& (0+255),f,b
 23125  0015BC  0100               	movlb	0	; () banked
 23126  0015BE  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 23127  0015C0  0100               	movlb	0	; () banked
 23128  0015C2  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 23129  0015C4  0100               	movlb	0	; () banked
 23130  0015C6  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 23131  0015C8  0100               	movlb	0	; () banked
 23132  0015CA  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 23133  0015CC  0100               	movlb	0	; () banked
 23134  0015CE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 23135  0015D0  0100               	movlb	0	; () banked
 23136  0015D2  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 23137  0015D4                     l2336:
 23138                           
 23139                           ; BSR set to: 0
 23140  0015D4  0100               	movlb	0	; () banked
 23141  0015D6  51A4               	movf	___fladd@b& (0+255),w,b
 23142  0015D8  0100               	movlb	0	; () banked
 23143  0015DA  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 23144  0015DC  0100               	movlb	0	; () banked
 23145  0015DE  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 23146  0015E0  0100               	movlb	0	; () banked
 23147  0015E2  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 23148  0015E4  A4D8               	btfss	status,2,c
 23149  0015E6  D02A               	goto	l11533
 23150                           
 23151                           ; BSR set to: 0
 23152  0015E8  0100               	movlb	0	; () banked
 23153  0015EA  51B7               	movf	___fladd@grs& (0+255),w,b
 23154  0015EC  0100               	movlb	0	; () banked
 23155  0015EE  A4D8               	btfss	status,2,c
 23156  0015F0  D025               	goto	l11533
 23157                           
 23158                           ; BSR set to: 0
 23159  0015F2  0E00               	movlw	0
 23160  0015F4  0100               	movlb	0	; () banked
 23161  0015F6  6FA4               	movwf	?___fladd& (0+255),b
 23162  0015F8  0E00               	movlw	0
 23163  0015FA  6FA5               	movwf	(?___fladd+1)& (0+255),b
 23164  0015FC  0E00               	movlw	0
 23165  0015FE  6FA6               	movwf	(?___fladd+2)& (0+255),b
 23166  001600  0E00               	movlw	0
 23167  001602  6FA7               	movwf	(?___fladd+3)& (0+255),b
 23168                           
 23169                           ; BSR set to: 0
 23170  001604  0012               	return	
 23171  001606                     l11517:
 23172                           
 23173                           ; BSR set to: 0
 23174  001606  0100               	movlb	0	; () banked
 23175  001608  90D8               	bcf	status,0,c
 23176  00160A  37A4               	rlcf	___fladd@b& (0+255),f,b
 23177  00160C  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 23178  00160E  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 23179  001610  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 23180                           
 23181                           ; BSR set to: 0
 23182  001612  0100               	movlb	0	; () banked
 23183  001614  AFB7               	btfss	___fladd@grs& (0+255),7,b
 23184  001616  D002               	goto	l11523
 23185                           
 23186                           ; BSR set to: 0
 23187  001618  0100               	movlb	0	; () banked
 23188  00161A  81A4               	bsf	___fladd@b& (0+255),0,b
 23189  00161C                     l11523:
 23190                           
 23191                           ; BSR set to: 0
 23192  00161C  0100               	movlb	0	; () banked
 23193  00161E  A1B7               	btfss	___fladd@grs& (0+255),0,b
 23194  001620  D003               	goto	l11527
 23195                           
 23196                           ; BSR set to: 0
 23197  001622  80D8               	bsf	status,0,c
 23198  001624  0100               	movlb	0	; () banked
 23199  001626  D002               	goto	L11
 23200  001628                     l11527:
 23201                           
 23202                           ; BSR set to: 0
 23203  001628  0100               	movlb	0	; () banked
 23204  00162A  90D8               	bcf	status,0,c
 23205  00162C                     L11:
 23206  00162C  37B7               	rlcf	___fladd@grs& (0+255),f,b
 23207                           
 23208                           ; BSR set to: 0
 23209                           
 23210                           ; BSR set to: 0
 23211  00162E  0100               	movlb	0	; () banked
 23212  001630  51B6               	movf	___fladd@bexp& (0+255),w,b
 23213  001632  0100               	movlb	0	; () banked
 23214  001634  B4D8               	btfsc	status,2,c
 23215  001636  D002               	goto	l11533
 23216                           
 23217                           ; BSR set to: 0
 23218  001638  0100               	movlb	0	; () banked
 23219  00163A  07B6               	decf	___fladd@bexp& (0+255),f,b
 23220  00163C                     l11533:
 23221                           
 23222                           ; BSR set to: 0
 23223  00163C  0100               	movlb	0	; () banked
 23224  00163E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 23225  001640  D7E2               	goto	l11517
 23226  001642                     l11535:
 23227                           
 23228                           ; BSR set to: 0
 23229  001642  0E00               	movlw	0
 23230  001644  0100               	movlb	0	; () banked
 23231  001646  6FB5               	movwf	___fladd@aexp& (0+255),b
 23232                           
 23233                           ; BSR set to: 0
 23234  001648  0100               	movlb	0	; () banked
 23235  00164A  AFB7               	btfss	___fladd@grs& (0+255),7,b
 23236  00164C  D00D               	goto	l2345
 23237                           
 23238                           ; BSR set to: 0
 23239  00164E  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 23240  001652  0E7F               	movlw	127
 23241  001654  0100               	movlb	0	; () banked
 23242  001656  17AC               	andwf	??___fladd& (0+255),f,b
 23243  001658  A4D8               	btfss	status,2,c
 23244  00165A  D003               	goto	l11543
 23245                           
 23246                           ; BSR set to: 0
 23247                           
 23248                           ; BSR set to: 0
 23249  00165C  0100               	movlb	0	; () banked
 23250  00165E  A1A4               	btfss	___fladd@b& (0+255),0,b
 23251  001660  D003               	goto	l2345
 23252  001662                     l11543:
 23253                           
 23254                           ; BSR set to: 0
 23255  001662  0E01               	movlw	1
 23256  001664  0100               	movlb	0	; () banked
 23257  001666  6FB5               	movwf	___fladd@aexp& (0+255),b
 23258  001668                     l2345:
 23259                           
 23260                           ; BSR set to: 0
 23261  001668  0100               	movlb	0	; () banked
 23262  00166A  51B5               	movf	___fladd@aexp& (0+255),w,b
 23263  00166C  0100               	movlb	0	; () banked
 23264  00166E  B4D8               	btfsc	status,2,c
 23265  001670  D026               	goto	l11553
 23266                           
 23267                           ; BSR set to: 0
 23268  001672  0E01               	movlw	1
 23269  001674  0100               	movlb	0	; () banked
 23270  001676  27A4               	addwf	___fladd@b& (0+255),f,b
 23271  001678  0E00               	movlw	0
 23272  00167A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 23273  00167C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 23274  00167E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 23275                           
 23276                           ; BSR set to: 0
 23277  001680  0100               	movlb	0	; () banked
 23278  001682  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 23279  001684  D01C               	goto	l11553
 23280                           
 23281                           ; BSR set to: 0
 23282  001686  C0A4  F0AC         	movff	___fladd@b,??___fladd
 23283  00168A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 23284  00168E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 23285  001692  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 23286  001696  0100               	movlb	0	; () banked
 23287  001698  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 23288  00169A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 23289  00169C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 23290  00169E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 23291  0016A0  33AC               	rrcf	??___fladd& (0+255),f,b
 23292  0016A2  C0AC  F0A4         	movff	??___fladd,___fladd@b
 23293  0016A6  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 23294  0016AA  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 23295  0016AE  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 23296  0016B2  0100               	movlb	0	; () banked
 23297  0016B4  29B6               	incf	___fladd@bexp& (0+255),w,b
 23298  0016B6  B4D8               	btfsc	status,2,c
 23299  0016B8  D002               	goto	l11553
 23300                           
 23301                           ; BSR set to: 0
 23302  0016BA  0100               	movlb	0	; () banked
 23303  0016BC  2BB6               	incf	___fladd@bexp& (0+255),f,b
 23304  0016BE                     l11553:
 23305                           
 23306                           ; BSR set to: 0
 23307  0016BE  0100               	movlb	0	; () banked
 23308  0016C0  29B6               	incf	___fladd@bexp& (0+255),w,b
 23309  0016C2  B4D8               	btfsc	status,2,c
 23310  0016C4  D005               	goto	l11557
 23311                           
 23312                           ; BSR set to: 0
 23313  0016C6  0100               	movlb	0	; () banked
 23314  0016C8  51B6               	movf	___fladd@bexp& (0+255),w,b
 23315  0016CA  0100               	movlb	0	; () banked
 23316  0016CC  A4D8               	btfss	status,2,c
 23317  0016CE  D011               	goto	l11561
 23318  0016D0                     l11557:
 23319                           
 23320                           ; BSR set to: 0
 23321  0016D0  0E00               	movlw	0
 23322  0016D2  0100               	movlb	0	; () banked
 23323  0016D4  6FA4               	movwf	___fladd@b& (0+255),b
 23324  0016D6  0E00               	movlw	0
 23325  0016D8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 23326  0016DA  0E00               	movlw	0
 23327  0016DC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 23328  0016DE  0E00               	movlw	0
 23329  0016E0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 23330  0016E2  0100               	movlb	0	; () banked
 23331  0016E4  51B6               	movf	___fladd@bexp& (0+255),w,b
 23332  0016E6  0100               	movlb	0	; () banked
 23333  0016E8  A4D8               	btfss	status,2,c
 23334  0016EA  D003               	goto	l11561
 23335                           
 23336                           ; BSR set to: 0
 23337  0016EC  0E00               	movlw	0
 23338  0016EE  0100               	movlb	0	; () banked
 23339  0016F0  6FB4               	movwf	___fladd@signs& (0+255),b
 23340  0016F2                     l11561:
 23341                           
 23342                           ; BSR set to: 0
 23343  0016F2  0100               	movlb	0	; () banked
 23344  0016F4  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 23345  0016F6  D003               	goto	l11565
 23346                           
 23347                           ; BSR set to: 0
 23348  0016F8  0100               	movlb	0	; () banked
 23349  0016FA  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 23350  0016FC  D002               	goto	l11567
 23351  0016FE                     l11565:
 23352                           
 23353                           ; BSR set to: 0
 23354  0016FE  0100               	movlb	0	; () banked
 23355  001700  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 23356  001702                     l11567:
 23357                           
 23358                           ; BSR set to: 0
 23359  001702  0100               	movlb	0	; () banked
 23360  001704  90D8               	bcf	status,0,c
 23361  001706  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 23362  001708  0100               	movlb	0	; () banked
 23363  00170A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 23364                           
 23365                           ; BSR set to: 0
 23366  00170C  0100               	movlb	0	; () banked
 23367  00170E  AFB4               	btfss	___fladd@signs& (0+255),7,b
 23368  001710  D002               	goto	l11573
 23369                           
 23370                           ; BSR set to: 0
 23371  001712  0100               	movlb	0	; () banked
 23372  001714  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 23373  001716                     l11573:
 23374                           
 23375                           ; BSR set to: 0
 23376  001716  C0A4  F0A4         	movff	___fladd@b,?___fladd
 23377  00171A  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 23378  00171E  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 23379  001722  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 23380  001726  0012               	return	
 23381  001728                     __end_of___fladd:
 23382                           	opt stack 0
 23383                           tosu	equ	0xFFF
 23384                           tosh	equ	0xFFE
 23385                           tosl	equ	0xFFD
 23386                           pclath	equ	0xFFA
 23387                           tblptru	equ	0xFF8
 23388                           tblptrh	equ	0xFF7
 23389                           tblptrl	equ	0xFF6
 23390                           tablat	equ	0xFF5
 23391                           prodh	equ	0xFF4
 23392                           prodl	equ	0xFF3
 23393                           intcon	equ	0xFF2
 23394                           indf0	equ	0xFEF
 23395                           postinc0	equ	0xFEE
 23396                           fsr0h	equ	0xFEA
 23397                           fsr0l	equ	0xFE9
 23398                           wreg	equ	0xFE8
 23399                           postinc1	equ	0xFE6
 23400                           postdec1	equ	0xFE5
 23401                           plusw1	equ	0xFE3
 23402                           fsr1h	equ	0xFE2
 23403                           fsr1l	equ	0xFE1
 23404                           indf2	equ	0xFDF
 23405                           postinc2	equ	0xFDE
 23406                           postdec2	equ	0xFDD
 23407                           plusw2	equ	0xFDB
 23408                           fsr2h	equ	0xFDA
 23409                           fsr2l	equ	0xFD9
 23410                           status	equ	0xFD8
 23411                           
 23412 ;; *************** function _data_init_all *****************
 23413 ;; Defined at:
 23414 ;;		line 393 in file "src/api/data.c"
 23415 ;; Parameters:    Size  Location     Type
 23416 ;;		None
 23417 ;; Auto vars:     Size  Location     Type
 23418 ;;		None
 23419 ;; Return value:  Size  Location     Type
 23420 ;;                  1    wreg      void 
 23421 ;; Registers used:
 23422 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23423 ;; Tracked objects:
 23424 ;;		On entry : 0/0
 23425 ;;		On exit  : 0/0
 23426 ;;		Unchanged: 0/0
 23427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23432 ;;Total ram usage:        0 bytes
 23433 ;; Hardware stack levels used:    1
 23434 ;; Hardware stack levels required when called:    9
 23435 ;; This function calls:
 23436 ;;		_calib_data_init_diff_pr
 23437 ;;		_calib_data_init_pr
 23438 ;;		_data_sys_init
 23439 ;; This function is called by:
 23440 ;;		_main
 23441 ;; This function uses a non-reentrant model
 23442 ;;
 23443                           
 23444                           	psect	text108
 23445  0081E8                     __ptext108:
 23446                           	opt stack 0
 23447  0081E8                     _data_init_all:
 23448                           	opt stack 21
 23449                           
 23450                           ;data.c: 395: data_sys_init();
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;incstack = 0
 23454  0081E8  EC7F  F025         	call	_data_sys_init	;wreg free
 23455                           
 23456                           ;data.c: 396: calib_data_init_diff_pr();
 23457  0081EC  ECC6  F028         	call	_calib_data_init_diff_pr	;wreg free
 23458                           
 23459                           ;data.c: 397: calib_data_init_pr();
 23460  0081F0  EC2F  F028         	call	_calib_data_init_pr	;wreg free
 23461  0081F4  0012               	return		;funcret
 23462  0081F6                     __end_of_data_init_all:
 23463                           	opt stack 0
 23464                           tosu	equ	0xFFF
 23465                           tosh	equ	0xFFE
 23466                           tosl	equ	0xFFD
 23467                           pclath	equ	0xFFA
 23468                           tblptru	equ	0xFF8
 23469                           tblptrh	equ	0xFF7
 23470                           tblptrl	equ	0xFF6
 23471                           tablat	equ	0xFF5
 23472                           prodh	equ	0xFF4
 23473                           prodl	equ	0xFF3
 23474                           intcon	equ	0xFF2
 23475                           indf0	equ	0xFEF
 23476                           postinc0	equ	0xFEE
 23477                           fsr0h	equ	0xFEA
 23478                           fsr0l	equ	0xFE9
 23479                           wreg	equ	0xFE8
 23480                           postinc1	equ	0xFE6
 23481                           postdec1	equ	0xFE5
 23482                           plusw1	equ	0xFE3
 23483                           fsr1h	equ	0xFE2
 23484                           fsr1l	equ	0xFE1
 23485                           indf2	equ	0xFDF
 23486                           postinc2	equ	0xFDE
 23487                           postdec2	equ	0xFDD
 23488                           plusw2	equ	0xFDB
 23489                           fsr2h	equ	0xFDA
 23490                           fsr2l	equ	0xFD9
 23491                           status	equ	0xFD8
 23492                           
 23493 ;; *************** function _data_sys_init *****************
 23494 ;; Defined at:
 23495 ;;		line 176 in file "src/api/data.c"
 23496 ;; Parameters:    Size  Location     Type
 23497 ;;		None
 23498 ;; Auto vars:     Size  Location     Type
 23499 ;;  buf             2  129[BANK0 ] PTR unsigned char 
 23500 ;;		 -> globleBuffer1(256), 
 23501 ;;  stp             2  127[BANK0 ] PTR struct .
 23502 ;;		 -> globleBuffer1(256), 
 23503 ;;  ret             1  126[BANK0 ] unsigned char 
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  1    wreg      unsigned char 
 23506 ;; Registers used:
 23507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23508 ;; Tracked objects:
 23509 ;;		On entry : 0/0
 23510 ;;		On exit  : 0/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23514 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23516 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23517 ;;Total ram usage:        5 bytes
 23518 ;; Hardware stack levels used:    1
 23519 ;; Hardware stack levels required when called:    7
 23520 ;; This function calls:
 23521 ;;		_crc_append
 23522 ;;		_crc_verify
 23523 ;;		_data_sys_cal_v1
 23524 ;;		_data_sys_cal_v2
 23525 ;;		_m_flash_read
 23526 ;;		_m_flash_write
 23527 ;;		_m_mem_cpy_len
 23528 ;; This function is called by:
 23529 ;;		_data_init_all
 23530 ;; This function uses a non-reentrant model
 23531 ;;
 23532                           
 23533                           	psect	text109
 23534  004AFE                     __ptext109:
 23535                           	opt stack 0
 23536  004AFE                     _data_sys_init:
 23537                           	opt stack 22
 23538                           
 23539                           ;data.c: 178: uint8_t ret;
 23540                           ;data.c: 179: uint8_t* buf=globleBuffer1;
 23541                           
 23542                           ;incstack = 0
 23543  004AFE  0E00               	movlw	low _globleBuffer1
 23544  004B00  0100               	movlb	0	; () banked
 23545  004B02  6FE1               	movwf	data_sys_init@buf& (0+255),b
 23546  004B04  0E05               	movlw	high _globleBuffer1
 23547  004B06  0100               	movlb	0	; () banked
 23548  004B08  6FE2               	movwf	(data_sys_init@buf+1)& (0+255),b
 23549                           
 23550                           ;data.c: 180: st_sysDataDef* stp=(st_sysDataDef*)buf;
 23551  004B0A  C0E1  F0DF         	movff	data_sys_init@buf,data_sys_init@stp
 23552  004B0E  C0E2  F0E0         	movff	data_sys_init@buf+1,data_sys_init@stp+1
 23553                           
 23554                           ; BSR set to: 0
 23555                           ;data.c: 182: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 23556                           
 23557                           ; BSR set to: 0
 23558                           
 23559                           ; BSR set to: 0
 23560                           ;	Return value of _data_sys_init is never used
 23561                           
 23562                           ;data.c: 181: if(sizeof(globleBuffer1)<sizeof(st_sysDataDef))return 0;
 23563  004B12  0E00               	movlw	0
 23564  004B14  0100               	movlb	0	; () banked
 23565  004B16  6F60               	movwf	m_flash_read@addr& (0+255),b
 23566  004B18  0EF4               	movlw	244
 23567  004B1A  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 23568  004B1C  0E00               	movlw	0
 23569  004B1E  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 23570  004B20  0E00               	movlw	0
 23571  004B22  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 23572  004B24  C0E1  F064         	movff	data_sys_init@buf,m_flash_read@buf
 23573  004B28  C0E2  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 23574  004B2C  0E00               	movlw	0
 23575  004B2E  0100               	movlb	0	; () banked
 23576  004B30  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 23577  004B32  0E96               	movlw	150
 23578  004B34  6F66               	movwf	m_flash_read@len& (0+255),b
 23579  004B36  EC2F  F037         	call	_m_flash_read	;wreg free
 23580                           
 23581                           ;data.c: 183: ret=crc_verify(buf,sizeof(st_sysDataDef));
 23582  004B3A  C0E1  F06C         	movff	data_sys_init@buf,crc_verify@message
 23583  004B3E  C0E2  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 23584  004B42  0E00               	movlw	0
 23585  004B44  0100               	movlb	0	; () banked
 23586  004B46  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 23587  004B48  0E96               	movlw	150
 23588  004B4A  6F6E               	movwf	crc_verify@n& (0+255),b
 23589  004B4C  ECAA  F036         	call	_crc_verify	;wreg free
 23590  004B50  0100               	movlb	0	; () banked
 23591  004B52  6FDE               	movwf	data_sys_init@ret& (0+255),b
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;data.c: 184: if(!ret){
 23595  004B54  0100               	movlb	0	; () banked
 23596  004B56  51DE               	movf	data_sys_init@ret& (0+255),w,b
 23597  004B58  0100               	movlb	0	; () banked
 23598  004B5A  A4D8               	btfss	status,2,c
 23599  004B5C  0012               	return	
 23600                           
 23601                           ; BSR set to: 0
 23602                           ;data.c: 185: m_mem_cpy_len(buf,(uint8_t*)(&defultSystemData),sizeof(st_sysDataDef));
 23603  004B5E  C0E1  F060         	movff	data_sys_init@buf,m_mem_cpy_len@d
 23604  004B62  C0E2  F061         	movff	data_sys_init@buf+1,m_mem_cpy_len@d+1
 23605  004B66  0E15               	movlw	low _defultSystemData
 23606  004B68  0100               	movlb	0	; () banked
 23607  004B6A  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 23608  004B6C  0EF3               	movlw	high _defultSystemData
 23609  004B6E  0100               	movlb	0	; () banked
 23610  004B70  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 23611  004B72  0E00               	movlw	0
 23612  004B74  0100               	movlb	0	; () banked
 23613  004B76  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 23614  004B78  0E96               	movlw	150
 23615  004B7A  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 23616  004B7C  ECB9  F03C         	call	_m_mem_cpy_len	;wreg free
 23617                           
 23618                           ;data.c: 186: stp->V1=data_sys_cal_v1(stp);
 23619  004B80  C0DF  F0C2         	movff	data_sys_init@stp,data_sys_cal_v1@stp
 23620  004B84  C0E0  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v1@stp+1
 23621  004B88  ECF8  F01B         	call	_data_sys_cal_v1	;wreg free
 23622  004B8C  0100               	movlb	0	; () banked
 23623  004B8E  EE20 F010          	lfsr	2,16
 23624  004B92  51DF               	movf	data_sys_init@stp& (0+255),w,b
 23625  004B94  26D9               	addwf	fsr2l,f,c
 23626  004B96  51E0               	movf	(data_sys_init@stp+1)& (0+255),w,b
 23627  004B98  22DA               	addwfc	fsr2h,f,c
 23628  004B9A  0100               	movlb	0	; () banked
 23629  004B9C  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 23630  004BA0  0100               	movlb	0	; () banked
 23631  004BA2  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 23632  004BA6  0100               	movlb	0	; () banked
 23633  004BA8  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 23634  004BAC  0100               	movlb	0	; () banked
 23635  004BAE  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 23636                           
 23637                           ; BSR set to: 0
 23638                           ;data.c: 187: stp->V2=data_sys_cal_v2(stp);
 23639  004BB2  C0DF  F0C2         	movff	data_sys_init@stp,data_sys_cal_v2@stp
 23640  004BB6  C0E0  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v2@stp+1
 23641  004BBA  EC33  F026         	call	_data_sys_cal_v2	;wreg free
 23642  004BBE  0100               	movlb	0	; () banked
 23643  004BC0  EE20 F014          	lfsr	2,20
 23644  004BC4  51DF               	movf	data_sys_init@stp& (0+255),w,b
 23645  004BC6  26D9               	addwf	fsr2l,f,c
 23646  004BC8  51E0               	movf	(data_sys_init@stp+1)& (0+255),w,b
 23647  004BCA  22DA               	addwfc	fsr2h,f,c
 23648  004BCC  0100               	movlb	0	; () banked
 23649  004BCE  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 23650  004BD2  0100               	movlb	0	; () banked
 23651  004BD4  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 23652  004BD8  0100               	movlb	0	; () banked
 23653  004BDA  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 23654  004BDE  0100               	movlb	0	; () banked
 23655  004BE0  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 23656                           
 23657                           ; BSR set to: 0
 23658                           ;data.c: 188: crc_append(buf,sizeof(st_sysDataDef)-2);
 23659  004BE4  C0E1  F06C         	movff	data_sys_init@buf,crc_append@message
 23660  004BE8  C0E2  F06D         	movff	data_sys_init@buf+1,crc_append@message+1
 23661  004BEC  0E00               	movlw	0
 23662  004BEE  0100               	movlb	0	; () banked
 23663  004BF0  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 23664  004BF2  0E94               	movlw	148
 23665  004BF4  6F6E               	movwf	crc_append@n& (0+255),b
 23666  004BF6  EC0B  F03A         	call	_crc_append	;wreg free
 23667                           
 23668                           ;data.c: 189: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 23669  004BFA  0E00               	movlw	0
 23670  004BFC  0100               	movlb	0	; () banked
 23671  004BFE  6F6E               	movwf	m_flash_write@addr& (0+255),b
 23672  004C00  0EF4               	movlw	244
 23673  004C02  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 23674  004C04  0E00               	movlw	0
 23675  004C06  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 23676  004C08  0E00               	movlw	0
 23677  004C0A  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 23678  004C0C  C0E1  F072         	movff	data_sys_init@buf,m_flash_write@buf
 23679  004C10  C0E2  F073         	movff	data_sys_init@buf+1,m_flash_write@buf+1
 23680  004C14  0E00               	movlw	0
 23681  004C16  0100               	movlb	0	; () banked
 23682  004C18  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 23683  004C1A  0E96               	movlw	150
 23684  004C1C  6F74               	movwf	m_flash_write@len& (0+255),b
 23685  004C1E  EC94  F027         	call	_m_flash_write	;wreg free
 23686                           
 23687                           ;data.c: 190: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 23688  004C22  0E00               	movlw	0
 23689  004C24  0100               	movlb	0	; () banked
 23690  004C26  6F60               	movwf	m_flash_read@addr& (0+255),b
 23691  004C28  0EF4               	movlw	244
 23692  004C2A  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 23693  004C2C  0E00               	movlw	0
 23694  004C2E  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 23695  004C30  0E00               	movlw	0
 23696  004C32  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 23697  004C34  C0E1  F064         	movff	data_sys_init@buf,m_flash_read@buf
 23698  004C38  C0E2  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 23699  004C3C  0E00               	movlw	0
 23700  004C3E  0100               	movlb	0	; () banked
 23701  004C40  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 23702  004C42  0E96               	movlw	150
 23703  004C44  6F66               	movwf	m_flash_read@len& (0+255),b
 23704  004C46  EC2F  F037         	call	_m_flash_read	;wreg free
 23705                           
 23706                           ;data.c: 191: ret=crc_verify(buf,sizeof(st_sysDataDef));
 23707  004C4A  C0E1  F06C         	movff	data_sys_init@buf,crc_verify@message
 23708  004C4E  C0E2  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 23709  004C52  0E00               	movlw	0
 23710  004C54  0100               	movlb	0	; () banked
 23711  004C56  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 23712  004C58  0E96               	movlw	150
 23713  004C5A  6F6E               	movwf	crc_verify@n& (0+255),b
 23714  004C5C  ECAA  F036         	call	_crc_verify	;wreg free
 23715  004C60  0100               	movlb	0	; () banked
 23716  004C62  6FDE               	movwf	data_sys_init@ret& (0+255),b
 23717                           
 23718                           ; BSR set to: 0
 23719  004C64  0012               	return	
 23720  004C66                     __end_of_data_sys_init:
 23721                           	opt stack 0
 23722                           tosu	equ	0xFFF
 23723                           tosh	equ	0xFFE
 23724                           tosl	equ	0xFFD
 23725                           pclath	equ	0xFFA
 23726                           tblptru	equ	0xFF8
 23727                           tblptrh	equ	0xFF7
 23728                           tblptrl	equ	0xFF6
 23729                           tablat	equ	0xFF5
 23730                           prodh	equ	0xFF4
 23731                           prodl	equ	0xFF3
 23732                           intcon	equ	0xFF2
 23733                           indf0	equ	0xFEF
 23734                           postinc0	equ	0xFEE
 23735                           fsr0h	equ	0xFEA
 23736                           fsr0l	equ	0xFE9
 23737                           wreg	equ	0xFE8
 23738                           postinc1	equ	0xFE6
 23739                           postdec1	equ	0xFE5
 23740                           plusw1	equ	0xFE3
 23741                           fsr1h	equ	0xFE2
 23742                           fsr1l	equ	0xFE1
 23743                           indf2	equ	0xFDF
 23744                           postinc2	equ	0xFDE
 23745                           postdec2	equ	0xFDD
 23746                           plusw2	equ	0xFDB
 23747                           fsr2h	equ	0xFDA
 23748                           fsr2l	equ	0xFD9
 23749                           status	equ	0xFD8
 23750                           
 23751 ;; *************** function _m_flash_write *****************
 23752 ;; Defined at:
 23753 ;;		line 63 in file "src/driver/m_flash.c"
 23754 ;; Parameters:    Size  Location     Type
 23755 ;;  addr            4   14[BANK0 ] unsigned long 
 23756 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 23757 ;;		 -> m_flash_test@tmp(16), globleBuffer0(256), globleBuffer1(256), 
 23758 ;;  len             2   20[BANK0 ] unsigned int 
 23759 ;; Auto vars:     Size  Location     Type
 23760 ;;  pageAddr        4   26[BANK0 ] unsigned long 
 23761 ;;  t16             2   33[BANK0 ] unsigned int 
 23762 ;;  tmpBuf          2   31[BANK0 ] PTR unsigned char 
 23763 ;;		 -> globleBuffer0(256), 
 23764 ;;  j               1   30[BANK0 ] unsigned char 
 23765 ;;  i               1   25[BANK0 ] unsigned char 
 23766 ;;  writeTimes      1   24[BANK0 ] unsigned char 
 23767 ;; Return value:  Size  Location     Type
 23768 ;;                  2   14[BANK0 ] unsigned int 
 23769 ;; Registers used:
 23770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23771 ;; Tracked objects:
 23772 ;;		On entry : 0/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23776 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23777 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23779 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23780 ;;Total ram usage:       21 bytes
 23781 ;; Hardware stack levels used:    1
 23782 ;; Hardware stack levels required when called:    6
 23783 ;; This function calls:
 23784 ;;		_m_flash_erase
 23785 ;;		_m_flash_read
 23786 ;;		_m_flash_unlock
 23787 ;;		_m_mem_cpy_len
 23788 ;; This function is called by:
 23789 ;;		_data_sys_init
 23790 ;;		_data_sys_save
 23791 ;;		_m_flash_test
 23792 ;; This function uses a non-reentrant model
 23793 ;;
 23794                           
 23795                           	psect	text110
 23796  004F28                     __ptext110:
 23797                           	opt stack 0
 23798  004F28                     _m_flash_write:
 23799                           	opt stack 22
 23800                           
 23801                           ;m_flash.c: 65: uint8_t i,j,writeTimes;
 23802                           ;m_flash.c: 66: uint32_t pageAddr;
 23803                           ;m_flash.c: 67: uint16_t t16;
 23804                           ;m_flash.c: 68: uint8_t* tmpBuf=globleBuffer0;
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;incstack = 0
 23808  004F28  0E00               	movlw	low _globleBuffer0
 23809  004F2A  0100               	movlb	0	; () banked
 23810  004F2C  6F7F               	movwf	m_flash_write@tmpBuf& (0+255),b
 23811  004F2E  0E04               	movlw	high _globleBuffer0
 23812  004F30  0100               	movlb	0	; () banked
 23813  004F32  6F80               	movwf	(m_flash_write@tmpBuf+1)& (0+255),b
 23814                           
 23815                           ;m_flash.c: 70: t16=addr & ((1024)-1);
 23816  004F34  0EFF               	movlw	255
 23817  004F36  0100               	movlb	0	; () banked
 23818  004F38  156E               	andwf	m_flash_write@addr& (0+255),w,b
 23819  004F3A  0100               	movlb	0	; () banked
 23820  004F3C  6F81               	movwf	m_flash_write@t16& (0+255),b
 23821  004F3E  0E03               	movlw	3
 23822  004F40  0100               	movlb	0	; () banked
 23823  004F42  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 23824  004F44  0100               	movlb	0	; () banked
 23825  004F46  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 23826                           
 23827                           ;m_flash.c: 71: if(t16+len>(64)*4)return 0;
 23828  004F48  0100               	movlb	0	; () banked
 23829  004F4A  5174               	movf	m_flash_write@len& (0+255),w,b
 23830  004F4C  0100               	movlb	0	; () banked
 23831  004F4E  2581               	addwf	m_flash_write@t16& (0+255),w,b
 23832  004F50  0100               	movlb	0	; () banked
 23833  004F52  6F76               	movwf	??_m_flash_write& (0+255),b
 23834  004F54  0100               	movlb	0	; () banked
 23835  004F56  5175               	movf	(m_flash_write@len+1)& (0+255),w,b
 23836  004F58  0100               	movlb	0	; () banked
 23837  004F5A  2182               	addwfc	(m_flash_write@t16+1)& (0+255),w,b
 23838  004F5C  0100               	movlb	0	; () banked
 23839  004F5E  6F77               	movwf	(??_m_flash_write+1)& (0+255),b
 23840  004F60  0100               	movlb	0	; () banked
 23841  004F62  0576               	decf	??_m_flash_write& (0+255),w,b
 23842  004F64  0E01               	movlw	1
 23843  004F66  0100               	movlb	0	; () banked
 23844  004F68  5977               	subwfb	(??_m_flash_write+1)& (0+255),w,b
 23845  004F6A  B0D8               	btfsc	status,0,c
 23846  004F6C  0012               	return	
 23847                           
 23848                           ; BSR set to: 0
 23849                           ;m_flash.c: 73: pageAddr=addr & ~((1024)-1);
 23850                           
 23851                           ; BSR set to: 0
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;	Return value of _m_flash_write is never used
 23855  004F6E  0E00               	movlw	0
 23856  004F70  0100               	movlb	0	; () banked
 23857  004F72  156E               	andwf	m_flash_write@addr& (0+255),w,b
 23858  004F74  0100               	movlb	0	; () banked
 23859  004F76  6F7A               	movwf	m_flash_write@pageAddr& (0+255),b
 23860  004F78  0EFC               	movlw	252
 23861  004F7A  0100               	movlb	0	; () banked
 23862  004F7C  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 23863  004F7E  0100               	movlb	0	; () banked
 23864  004F80  6F7B               	movwf	(m_flash_write@pageAddr+1)& (0+255),b
 23865  004F82  0EFF               	movlw	255
 23866  004F84  0100               	movlb	0	; () banked
 23867  004F86  1570               	andwf	(m_flash_write@addr+2)& (0+255),w,b
 23868  004F88  0100               	movlb	0	; () banked
 23869  004F8A  6F7C               	movwf	(m_flash_write@pageAddr+2)& (0+255),b
 23870  004F8C  0EFF               	movlw	255
 23871  004F8E  0100               	movlb	0	; () banked
 23872  004F90  1571               	andwf	(m_flash_write@addr+3)& (0+255),w,b
 23873  004F92  0100               	movlb	0	; () banked
 23874  004F94  6F7D               	movwf	(m_flash_write@pageAddr+3)& (0+255),b
 23875                           
 23876                           ; BSR set to: 0
 23877                           ;m_flash.c: 74: m_flash_read(pageAddr,tmpBuf,(64)*4);
 23878  004F96  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_read@addr
 23879  004F9A  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_read@addr+1
 23880  004F9E  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_read@addr+2
 23881  004FA2  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_read@addr+3
 23882  004FA6  C07F  F064         	movff	m_flash_write@tmpBuf,m_flash_read@buf
 23883  004FAA  C080  F065         	movff	m_flash_write@tmpBuf+1,m_flash_read@buf+1
 23884  004FAE  0E01               	movlw	1
 23885  004FB0  0100               	movlb	0	; () banked
 23886  004FB2  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 23887  004FB4  0E00               	movlw	0
 23888  004FB6  6F66               	movwf	m_flash_read@len& (0+255),b
 23889  004FB8  EC2F  F037         	call	_m_flash_read	;wreg free
 23890                           
 23891                           ;m_flash.c: 75: m_mem_cpy_len(tmpBuf+t16,buf,len);
 23892  004FBC  0100               	movlb	0	; () banked
 23893  004FBE  5181               	movf	m_flash_write@t16& (0+255),w,b
 23894  004FC0  0100               	movlb	0	; () banked
 23895  004FC2  257F               	addwf	m_flash_write@tmpBuf& (0+255),w,b
 23896  004FC4  0100               	movlb	0	; () banked
 23897  004FC6  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 23898  004FC8  0100               	movlb	0	; () banked
 23899  004FCA  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 23900  004FCC  0100               	movlb	0	; () banked
 23901  004FCE  2180               	addwfc	(m_flash_write@tmpBuf+1)& (0+255),w,b
 23902  004FD0  0100               	movlb	0	; () banked
 23903  004FD2  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 23904  004FD4  C072  F062         	movff	m_flash_write@buf,m_mem_cpy_len@s
 23905  004FD8  C073  F063         	movff	m_flash_write@buf+1,m_mem_cpy_len@s+1
 23906  004FDC  C074  F064         	movff	m_flash_write@len,m_mem_cpy_len@len
 23907  004FE0  C075  F065         	movff	m_flash_write@len+1,m_mem_cpy_len@len+1
 23908  004FE4  ECB9  F03C         	call	_m_mem_cpy_len	;wreg free
 23909                           
 23910                           ;m_flash.c: 77: m_flash_erase(pageAddr);
 23911  004FE8  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_erase@addr
 23912  004FEC  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_erase@addr+1
 23913  004FF0  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_erase@addr+2
 23914  004FF4  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_erase@addr+3
 23915  004FF8  ECE2  F03B         	call	_m_flash_erase	;wreg free
 23916                           
 23917                           ;m_flash.c: 79: writeTimes=(64)*4/(64);
 23918  004FFC  0E04               	movlw	4
 23919  004FFE  0100               	movlb	0	; () banked
 23920  005000  6F78               	movwf	m_flash_write@writeTimes& (0+255),b
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;m_flash.c: 80: t16=(uint16_t)(tmpBuf);
 23924  005002  C07F  F081         	movff	m_flash_write@tmpBuf,m_flash_write@t16
 23925  005006  C080  F082         	movff	m_flash_write@tmpBuf+1,m_flash_write@t16+1
 23926                           
 23927                           ; BSR set to: 0
 23928                           ;m_flash.c: 82: FSR0L=(uint8_t)(t16&0x00ff);
 23929  00500A  C081  FFE9         	movff	m_flash_write@t16,fsr0l	;volatile
 23930                           
 23931                           ; BSR set to: 0
 23932                           ;m_flash.c: 83: t16>>=8;
 23933  00500E  0100               	movlb	0	; () banked
 23934  005010  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 23935  005012  6F81               	movwf	m_flash_write@t16& (0+255),b
 23936  005014  6B82               	clrf	(m_flash_write@t16+1)& (0+255),b
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;m_flash.c: 84: FSR0H=(uint8_t)(t16&0x00ff);
 23940  005016  C081  FFEA         	movff	m_flash_write@t16,fsr0h	;volatile
 23941                           
 23942                           ; BSR set to: 0
 23943                           ;m_flash.c: 86: for(i=0;i<writeTimes;i++){
 23944  00501A  0E00               	movlw	0
 23945  00501C  0100               	movlb	0	; () banked
 23946  00501E  6F79               	movwf	m_flash_write@i& (0+255),b
 23947  005020  D017               	goto	l12893
 23948  005022                     l12877:
 23949                           
 23950                           ; BSR set to: 0
 23951                           ;m_flash.c: 87: for(j=0;j<(64);j++){
 23952  005022  0E00               	movlw	0
 23953  005024  0100               	movlb	0	; () banked
 23954  005026  6F7E               	movwf	m_flash_write@j& (0+255),b
 23955  005028                     l12879:
 23956                           
 23957                           ; BSR set to: 0
 23958  005028  0E3F               	movlw	63
 23959  00502A  0100               	movlb	0	; () banked
 23960  00502C  657E               	cpfsgt	m_flash_write@j& (0+255),b
 23961  00502E  D001               	goto	l1517
 23962  005030  D007               	goto	l1518
 23963  005032                     l1517:
 23964                           
 23965                           ; BSR set to: 0
 23966  005032  CFEE FFE8          	movff	postinc0,wreg	;# 
 23967  005036  6EF5               	movwf	tablat,c	;# 
 23968  005038  000D               	tblwt		*+	;# 
 23969  00503A  0100               	movlb	0	; () banked
 23970  00503C  2B7E               	incf	m_flash_write@j& (0+255),f,b
 23971  00503E  D7F4               	goto	l12879
 23972  005040                     l1518:
 23973                           
 23974                           ; BSR set to: 0
 23975  005040  000A               	tblrd		*-	;# 
 23976                           
 23977                           ;m_flash.c: 93: EECON1bits.WREN=1;
 23978  005042  84A6               	bsf	4006,2,c	;volatile
 23979                           
 23980                           ;m_flash.c: 94: m_flash_unlock();
 23981  005044  ECC2  F040         	call	_m_flash_unlock	;wreg free
 23982                           
 23983                           ;m_flash.c: 95: EECON1bits.WREN=0;
 23984  005048  94A6               	bcf	4006,2,c	;volatile
 23985  00504A  000D               	tblwt		*+	;# 
 23986  00504C  0100               	movlb	0	; () banked
 23987  00504E  2B79               	incf	m_flash_write@i& (0+255),f,b
 23988  005050                     l12893:
 23989                           
 23990                           ; BSR set to: 0
 23991  005050  0100               	movlb	0	; () banked
 23992  005052  5178               	movf	m_flash_write@writeTimes& (0+255),w,b
 23993  005054  0100               	movlb	0	; () banked
 23994  005056  5D79               	subwf	m_flash_write@i& (0+255),w,b
 23995  005058  B0D8               	btfsc	status,0,c
 23996  00505A  0012               	return	
 23997  00505C  D7E2               	goto	l12877
 23998  00505E                     __end_of_m_flash_write:
 23999                           	opt stack 0
 24000                           tosu	equ	0xFFF
 24001                           tosh	equ	0xFFE
 24002                           tosl	equ	0xFFD
 24003                           pclath	equ	0xFFA
 24004                           tblptru	equ	0xFF8
 24005                           tblptrh	equ	0xFF7
 24006                           tblptrl	equ	0xFF6
 24007                           tablat	equ	0xFF5
 24008                           prodh	equ	0xFF4
 24009                           prodl	equ	0xFF3
 24010                           intcon	equ	0xFF2
 24011                           indf0	equ	0xFEF
 24012                           postinc0	equ	0xFEE
 24013                           fsr0h	equ	0xFEA
 24014                           fsr0l	equ	0xFE9
 24015                           wreg	equ	0xFE8
 24016                           postinc1	equ	0xFE6
 24017                           postdec1	equ	0xFE5
 24018                           plusw1	equ	0xFE3
 24019                           fsr1h	equ	0xFE2
 24020                           fsr1l	equ	0xFE1
 24021                           indf2	equ	0xFDF
 24022                           postinc2	equ	0xFDE
 24023                           postdec2	equ	0xFDD
 24024                           plusw2	equ	0xFDB
 24025                           fsr2h	equ	0xFDA
 24026                           fsr2l	equ	0xFD9
 24027                           status	equ	0xFD8
 24028                           
 24029 ;; *************** function _m_flash_read *****************
 24030 ;; Defined at:
 24031 ;;		line 46 in file "src/driver/m_flash.c"
 24032 ;; Parameters:    Size  Location     Type
 24033 ;;  addr            4    0[BANK0 ] unsigned long 
 24034 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 24035 ;;		 -> m_flash_test@tmp(16), globleBuffer0(256), globleBuffer1(256), 
 24036 ;;  len             2    6[BANK0 ] unsigned int 
 24037 ;; Auto vars:     Size  Location     Type
 24038 ;;  t32             4   10[BANK0 ] unsigned long 
 24039 ;;  i               2    8[BANK0 ] unsigned int 
 24040 ;; Return value:  Size  Location     Type
 24041 ;;                  2    0[BANK0 ] unsigned int 
 24042 ;; Registers used:
 24043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24044 ;; Tracked objects:
 24045 ;;		On entry : 0/0
 24046 ;;		On exit  : 0/0
 24047 ;;		Unchanged: 0/0
 24048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24049 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24052 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24053 ;;Total ram usage:       14 bytes
 24054 ;; Hardware stack levels used:    1
 24055 ;; Hardware stack levels required when called:    4
 24056 ;; This function calls:
 24057 ;;		Nothing
 24058 ;; This function is called by:
 24059 ;;		_data_sys_init
 24060 ;;		_m_flash_write
 24061 ;;		_data_sys_save
 24062 ;;		_m_flash_test
 24063 ;; This function uses a non-reentrant model
 24064 ;;
 24065                           
 24066                           	psect	text111
 24067  006E5E                     __ptext111:
 24068                           	opt stack 0
 24069  006E5E                     _m_flash_read:
 24070                           	opt stack 23
 24071                           
 24072                           ;m_flash.c: 48: uint16_t i;
 24073                           ;m_flash.c: 49: uint32_t t32=addr;
 24074                           
 24075                           ; BSR set to: 0
 24076                           ;incstack = 0
 24077  006E5E  C060  F06A         	movff	m_flash_read@addr,m_flash_read@t32
 24078  006E62  C061  F06B         	movff	m_flash_read@addr+1,m_flash_read@t32+1
 24079  006E66  C062  F06C         	movff	m_flash_read@addr+2,m_flash_read@t32+2
 24080  006E6A  C063  F06D         	movff	m_flash_read@addr+3,m_flash_read@t32+3
 24081                           
 24082                           ;m_flash.c: 51: TBLPTRL=(uint8_t)(t32 & 0xfful);
 24083  006E6E  C06A  FFF6         	movff	m_flash_read@t32,tblptrl	;volatile
 24084                           
 24085                           ;m_flash.c: 52: t32>>=8;
 24086  006E72  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 24087  006E76  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 24088  006E7A  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 24089  006E7E  0100               	movlb	0	; () banked
 24090  006E80  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;m_flash.c: 53: TBLPTRH=(uint8_t)(t32 & 0xfful);
 24094  006E82  C06A  FFF7         	movff	m_flash_read@t32,tblptrh	;volatile
 24095                           
 24096                           ;m_flash.c: 54: t32>>=8;
 24097  006E86  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 24098  006E8A  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 24099  006E8E  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 24100  006E92  0100               	movlb	0	; () banked
 24101  006E94  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;m_flash.c: 55: TBLPTRU=(uint8_t)(t32 & 0xfful);
 24105  006E96  C06A  FFF8         	movff	m_flash_read@t32,tblptru	;volatile
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;m_flash.c: 57: for(i=0;i<len;i++){
 24109  006E9A  0E00               	movlw	0
 24110  006E9C  0100               	movlb	0	; () banked
 24111  006E9E  6F69               	movwf	(m_flash_read@i+1)& (0+255),b
 24112  006EA0  0E00               	movlw	0
 24113  006EA2  6F68               	movwf	m_flash_read@i& (0+255),b
 24114  006EA4  D010               	goto	l12359
 24115  006EA6                     l1508:
 24116                           
 24117                           ; BSR set to: 0
 24118  006EA6  0009               	tblrd		*+	;# 
 24119                           
 24120                           ;m_flash.c: 59: buf[i]=TABLAT;
 24121  006EA8  0100               	movlb	0	; () banked
 24122  006EAA  5168               	movf	m_flash_read@i& (0+255),w,b
 24123  006EAC  0100               	movlb	0	; () banked
 24124  006EAE  2564               	addwf	m_flash_read@buf& (0+255),w,b
 24125  006EB0  6ED9               	movwf	fsr2l,c
 24126  006EB2  0100               	movlb	0	; () banked
 24127  006EB4  5169               	movf	(m_flash_read@i+1)& (0+255),w,b
 24128  006EB6  0100               	movlb	0	; () banked
 24129  006EB8  2165               	addwfc	(m_flash_read@buf+1)& (0+255),w,b
 24130  006EBA  6EDA               	movwf	fsr2h,c
 24131  006EBC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 24132                           
 24133                           ; BSR set to: 0
 24134  006EC0  0100               	movlb	0	; () banked
 24135  006EC2  4B68               	infsnz	m_flash_read@i& (0+255),f,b
 24136  006EC4  2B69               	incf	(m_flash_read@i+1)& (0+255),f,b
 24137  006EC6                     l12359:
 24138                           
 24139                           ; BSR set to: 0
 24140  006EC6  0100               	movlb	0	; () banked
 24141  006EC8  5166               	movf	m_flash_read@len& (0+255),w,b
 24142  006ECA  0100               	movlb	0	; () banked
 24143  006ECC  5D68               	subwf	m_flash_read@i& (0+255),w,b
 24144  006ECE  0100               	movlb	0	; () banked
 24145  006ED0  5167               	movf	(m_flash_read@len+1)& (0+255),w,b
 24146  006ED2  0100               	movlb	0	; () banked
 24147  006ED4  5969               	subwfb	(m_flash_read@i+1)& (0+255),w,b
 24148  006ED6  B0D8               	btfsc	status,0,c
 24149  006ED8  0012               	return	
 24150  006EDA  D7E5               	goto	l1508
 24151  006EDC                     __end_of_m_flash_read:
 24152                           	opt stack 0
 24153                           tosu	equ	0xFFF
 24154                           tosh	equ	0xFFE
 24155                           tosl	equ	0xFFD
 24156                           pclath	equ	0xFFA
 24157                           tblptru	equ	0xFF8
 24158                           tblptrh	equ	0xFF7
 24159                           tblptrl	equ	0xFF6
 24160                           tablat	equ	0xFF5
 24161                           prodh	equ	0xFF4
 24162                           prodl	equ	0xFF3
 24163                           intcon	equ	0xFF2
 24164                           indf0	equ	0xFEF
 24165                           postinc0	equ	0xFEE
 24166                           fsr0h	equ	0xFEA
 24167                           fsr0l	equ	0xFE9
 24168                           wreg	equ	0xFE8
 24169                           postinc1	equ	0xFE6
 24170                           postdec1	equ	0xFE5
 24171                           plusw1	equ	0xFE3
 24172                           fsr1h	equ	0xFE2
 24173                           fsr1l	equ	0xFE1
 24174                           indf2	equ	0xFDF
 24175                           postinc2	equ	0xFDE
 24176                           postdec2	equ	0xFDD
 24177                           plusw2	equ	0xFDB
 24178                           fsr2h	equ	0xFDA
 24179                           fsr2l	equ	0xFD9
 24180                           status	equ	0xFD8
 24181                           
 24182 ;; *************** function _m_flash_erase *****************
 24183 ;; Defined at:
 24184 ;;		line 30 in file "src/driver/m_flash.c"
 24185 ;; Parameters:    Size  Location     Type
 24186 ;;  addr            4    0[BANK0 ] unsigned long 
 24187 ;; Auto vars:     Size  Location     Type
 24188 ;;  t32             4    4[BANK0 ] unsigned long 
 24189 ;; Return value:  Size  Location     Type
 24190 ;;                  1    wreg      void 
 24191 ;; Registers used:
 24192 ;;		wreg, status,2, status,0, cstack
 24193 ;; Tracked objects:
 24194 ;;		On entry : 0/0
 24195 ;;		On exit  : 0/0
 24196 ;;		Unchanged: 0/0
 24197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24199 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24201 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24202 ;;Total ram usage:        8 bytes
 24203 ;; Hardware stack levels used:    1
 24204 ;; Hardware stack levels required when called:    5
 24205 ;; This function calls:
 24206 ;;		_m_flash_unlock
 24207 ;; This function is called by:
 24208 ;;		_m_flash_write
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	text112
 24213  0077C4                     __ptext112:
 24214                           	opt stack 0
 24215  0077C4                     _m_flash_erase:
 24216                           	opt stack 22
 24217                           
 24218                           ;m_flash.c: 32: uint32_t t32=addr;
 24219                           
 24220                           ; BSR set to: 0
 24221                           ;incstack = 0
 24222  0077C4  C060  F064         	movff	m_flash_erase@addr,m_flash_erase@t32
 24223  0077C8  C061  F065         	movff	m_flash_erase@addr+1,m_flash_erase@t32+1
 24224  0077CC  C062  F066         	movff	m_flash_erase@addr+2,m_flash_erase@t32+2
 24225  0077D0  C063  F067         	movff	m_flash_erase@addr+3,m_flash_erase@t32+3
 24226                           
 24227                           ;m_flash.c: 33: t32 &= (~0x3fful);
 24228  0077D4  0E00               	movlw	0
 24229  0077D6  0100               	movlb	0	; () banked
 24230  0077D8  1764               	andwf	m_flash_erase@t32& (0+255),f,b
 24231  0077DA  0EFC               	movlw	252
 24232  0077DC  1765               	andwf	(m_flash_erase@t32+1)& (0+255),f,b
 24233  0077DE  0EFF               	movlw	255
 24234  0077E0  1766               	andwf	(m_flash_erase@t32+2)& (0+255),f,b
 24235  0077E2  0EFF               	movlw	255
 24236  0077E4  1767               	andwf	(m_flash_erase@t32+3)& (0+255),f,b
 24237                           
 24238                           ; BSR set to: 0
 24239                           ;m_flash.c: 36: TBLPTRL=(uint8_t)(t32 & 0xfful);
 24240  0077E6  C064  FFF6         	movff	m_flash_erase@t32,tblptrl	;volatile
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;m_flash.c: 37: t32>>=8;
 24244  0077EA  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 24245  0077EE  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 24246  0077F2  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 24247  0077F6  0100               	movlb	0	; () banked
 24248  0077F8  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 24249                           
 24250                           ; BSR set to: 0
 24251                           ;m_flash.c: 38: TBLPTRH=(uint8_t)(t32 & 0xfful);
 24252  0077FA  C064  FFF7         	movff	m_flash_erase@t32,tblptrh	;volatile
 24253                           
 24254                           ; BSR set to: 0
 24255                           ;m_flash.c: 39: t32>>=8;
 24256  0077FE  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 24257  007802  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 24258  007806  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 24259  00780A  0100               	movlb	0	; () banked
 24260  00780C  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;m_flash.c: 40: TBLPTRU=(uint8_t)(t32 & 0xfful);
 24264  00780E  C064  FFF8         	movff	m_flash_erase@t32,tblptru	;volatile
 24265                           
 24266                           ; BSR set to: 0
 24267                           ;m_flash.c: 41: EECON1bits.WREN=1;
 24268  007812  84A6               	bsf	4006,2,c	;volatile
 24269                           
 24270                           ; BSR set to: 0
 24271                           ;m_flash.c: 42: EECON1bits.FREE=1;
 24272  007814  88A6               	bsf	4006,4,c	;volatile
 24273                           
 24274                           ; BSR set to: 0
 24275                           ;m_flash.c: 43: m_flash_unlock();
 24276  007816  ECC2  F040         	call	_m_flash_unlock	;wreg free
 24277                           
 24278                           ;m_flash.c: 44: EECON1bits.WREN=0;
 24279  00781A  94A6               	bcf	4006,2,c	;volatile
 24280  00781C  0012               	return		;funcret
 24281  00781E                     __end_of_m_flash_erase:
 24282                           	opt stack 0
 24283                           tosu	equ	0xFFF
 24284                           tosh	equ	0xFFE
 24285                           tosl	equ	0xFFD
 24286                           pclath	equ	0xFFA
 24287                           tblptru	equ	0xFF8
 24288                           tblptrh	equ	0xFF7
 24289                           tblptrl	equ	0xFF6
 24290                           tablat	equ	0xFF5
 24291                           prodh	equ	0xFF4
 24292                           prodl	equ	0xFF3
 24293                           intcon	equ	0xFF2
 24294                           indf0	equ	0xFEF
 24295                           postinc0	equ	0xFEE
 24296                           fsr0h	equ	0xFEA
 24297                           fsr0l	equ	0xFE9
 24298                           wreg	equ	0xFE8
 24299                           postinc1	equ	0xFE6
 24300                           postdec1	equ	0xFE5
 24301                           plusw1	equ	0xFE3
 24302                           fsr1h	equ	0xFE2
 24303                           fsr1l	equ	0xFE1
 24304                           indf2	equ	0xFDF
 24305                           postinc2	equ	0xFDE
 24306                           postdec2	equ	0xFDD
 24307                           plusw2	equ	0xFDB
 24308                           fsr2h	equ	0xFDA
 24309                           fsr2l	equ	0xFD9
 24310                           status	equ	0xFD8
 24311                           
 24312 ;; *************** function _m_flash_unlock *****************
 24313 ;; Defined at:
 24314 ;;		line 9 in file "src/driver/m_flash.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;		None
 24317 ;; Auto vars:     Size  Location     Type
 24318 ;;  oldGIE          1   31[COMRAM] volatile unsigned char 
 24319 ;; Return value:  Size  Location     Type
 24320 ;;                  1    wreg      void 
 24321 ;; Registers used:
 24322 ;;		None
 24323 ;; Tracked objects:
 24324 ;;		On entry : 0/0
 24325 ;;		On exit  : 0/0
 24326 ;;		Unchanged: 0/0
 24327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24332 ;;Total ram usage:        1 bytes
 24333 ;; Hardware stack levels used:    1
 24334 ;; Hardware stack levels required when called:    4
 24335 ;; This function calls:
 24336 ;;		Nothing
 24337 ;; This function is called by:
 24338 ;;		_m_flash_erase
 24339 ;;		_m_flash_write
 24340 ;; This function uses a non-reentrant model
 24341 ;;
 24342                           
 24343                           	psect	text113
 24344  008184                     __ptext113:
 24345                           	opt stack 0
 24346  008184                     _m_flash_unlock:
 24347                           	opt stack 23
 24348                           
 24349                           ;m_flash.c: 11: volatile unsigned char oldGIE;
 24350                           ;m_flash.c: 14: oldGIE=INTCON;
 24351                           
 24352                           ;incstack = 0
 24353  008184  CFF2 F020          	movff	intcon,m_flash_unlock@oldGIE	;volatile
 24354                           
 24355                           ;m_flash.c: 15: INTCONbits.GIE = 0;
 24356  008188  9EF2               	bcf	intcon,7,c	;volatile
 24357                           
 24358                           ;m_flash.c: 16: __nop();
 24359  00818A  F000               	nop	
 24360  00818C  0E55               	movlw	85	;# 
 24361  00818E  6EA7               	movwf	4007,c	;# 
 24362  008190  0EAA               	movlw	170	;# 
 24363  008192  6EA7               	movwf	4007,c	;# 
 24364                           
 24365                           ;m_flash.c: 22: EECON1bits.WR=1;
 24366  008194  82A6               	bsf	4006,1,c	;volatile
 24367                           
 24368                           ;m_flash.c: 23: __nop();
 24369  008196  F000               	nop	
 24370                           
 24371                           ;m_flash.c: 27: INTCON=oldGIE;
 24372  008198  C020  FFF2         	movff	m_flash_unlock@oldGIE,intcon	;volatile
 24373                           
 24374                           ;m_flash.c: 28: return;
 24375  00819C  0012               	return		;funcret
 24376  00819E                     __end_of_m_flash_unlock:
 24377                           	opt stack 0
 24378                           tosu	equ	0xFFF
 24379                           tosh	equ	0xFFE
 24380                           tosl	equ	0xFFD
 24381                           pclath	equ	0xFFA
 24382                           tblptru	equ	0xFF8
 24383                           tblptrh	equ	0xFF7
 24384                           tblptrl	equ	0xFF6
 24385                           tablat	equ	0xFF5
 24386                           prodh	equ	0xFF4
 24387                           prodl	equ	0xFF3
 24388                           intcon	equ	0xFF2
 24389                           indf0	equ	0xFEF
 24390                           postinc0	equ	0xFEE
 24391                           fsr0h	equ	0xFEA
 24392                           fsr0l	equ	0xFE9
 24393                           wreg	equ	0xFE8
 24394                           postinc1	equ	0xFE6
 24395                           postdec1	equ	0xFE5
 24396                           plusw1	equ	0xFE3
 24397                           fsr1h	equ	0xFE2
 24398                           fsr1l	equ	0xFE1
 24399                           indf2	equ	0xFDF
 24400                           postinc2	equ	0xFDE
 24401                           postdec2	equ	0xFDD
 24402                           plusw2	equ	0xFDB
 24403                           fsr2h	equ	0xFDA
 24404                           fsr2l	equ	0xFD9
 24405                           status	equ	0xFD8
 24406                           
 24407 ;; *************** function _data_sys_cal_v2 *****************
 24408 ;; Defined at:
 24409 ;;		line 166 in file "src/api/data.c"
 24410 ;; Parameters:    Size  Location     Type
 24411 ;;  stp             2   98[BANK0 ] PTR struct .
 24412 ;;		 -> globleBuffer1(256), 
 24413 ;; Auto vars:     Size  Location     Type
 24414 ;;  d               4  114[BANK0 ] float 
 24415 ;;  f               4  110[BANK0 ] float 
 24416 ;; Return value:  Size  Location     Type
 24417 ;;                  4   98[BANK0 ] unsigned long 
 24418 ;; Registers used:
 24419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24420 ;; Tracked objects:
 24421 ;;		On entry : 0/0
 24422 ;;		On exit  : 0/0
 24423 ;;		Unchanged: 0/0
 24424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24426 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24428 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24429 ;;Total ram usage:       20 bytes
 24430 ;; Hardware stack levels used:    1
 24431 ;; Hardware stack levels required when called:    5
 24432 ;; This function calls:
 24433 ;;		___fldiv
 24434 ;;		___flmul
 24435 ;;		___fltol
 24436 ;;		___xxtofl
 24437 ;; This function is called by:
 24438 ;;		_data_sys_init
 24439 ;; This function uses a non-reentrant model
 24440 ;;
 24441                           
 24442                           	psect	text114
 24443  004C66                     __ptext114:
 24444                           	opt stack 0
 24445  004C66                     _data_sys_cal_v2:
 24446                           	opt stack 23
 24447                           
 24448                           ;data.c: 168: float d,f;
 24449                           ;data.c: 169: d=(float)(stp->d);
 24450                           
 24451                           ;incstack = 0
 24452  004C66  0100               	movlb	0	; () banked
 24453  004C68  EE20 F00C          	lfsr	2,12
 24454  004C6C  51C2               	movf	data_sys_cal_v2@stp& (0+255),w,b
 24455  004C6E  26D9               	addwf	fsr2l,f,c
 24456  004C70  51C3               	movf	(data_sys_cal_v2@stp+1)& (0+255),w,b
 24457  004C72  22DA               	addwfc	fsr2h,f,c
 24458  004C74  CFDE F060          	movff	postinc2,___xxtofl@val
 24459  004C78  CFDE F061          	movff	postinc2,___xxtofl@val+1
 24460  004C7C  CFDE F062          	movff	postinc2,___xxtofl@val+2
 24461  004C80  CFDE F063          	movff	postinc2,___xxtofl@val+3
 24462  004C84  0E00               	movlw	0
 24463  004C86  ECED  F01E         	call	___xxtofl
 24464  004C8A  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v2@d
 24465  004C8E  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v2@d+1
 24466  004C92  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v2@d+2
 24467  004C96  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v2@d+3
 24468                           
 24469                           ;data.c: 170: d=d/1000;
 24470  004C9A  C0D2  F087         	movff	data_sys_cal_v2@d,___fldiv@b
 24471  004C9E  C0D3  F088         	movff	data_sys_cal_v2@d+1,___fldiv@b+1
 24472  004CA2  C0D4  F089         	movff	data_sys_cal_v2@d+2,___fldiv@b+2
 24473  004CA6  C0D5  F08A         	movff	data_sys_cal_v2@d+3,___fldiv@b+3
 24474  004CAA  0E00               	movlw	0
 24475  004CAC  0100               	movlb	0	; () banked
 24476  004CAE  6F8B               	movwf	___fldiv@a& (0+255),b
 24477  004CB0  0E00               	movlw	0
 24478  004CB2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24479  004CB4  0E7A               	movlw	122
 24480  004CB6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24481  004CB8  0E44               	movlw	68
 24482  004CBA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24483  004CBC  EC48  F012         	call	___fldiv	;wreg free
 24484  004CC0  C087  F0D2         	movff	?___fldiv,data_sys_cal_v2@d
 24485  004CC4  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v2@d+1
 24486  004CC8  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v2@d+2
 24487  004CCC  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v2@d+3
 24488                           
 24489                           ;data.c: 171: f=0.2618f*d*d*d;
 24490  004CD0  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 24491  004CD4  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 24492  004CD8  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 24493  004CDC  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 24494  004CE0  C0D2  F06E         	movff	data_sys_cal_v2@d,___flmul@b
 24495  004CE4  C0D3  F06F         	movff	data_sys_cal_v2@d+1,___flmul@b+1
 24496  004CE8  C0D4  F070         	movff	data_sys_cal_v2@d+2,___flmul@b+2
 24497  004CEC  C0D5  F071         	movff	data_sys_cal_v2@d+3,___flmul@b+3
 24498  004CF0  EC94  F00B         	call	___flmul	;wreg free
 24499  004CF4  C06E  F0C6         	movff	?___flmul,_data_sys_cal_v2$4411
 24500  004CF8  C06F  F0C7         	movff	?___flmul+1,_data_sys_cal_v2$4411+1
 24501  004CFC  C070  F0C8         	movff	?___flmul+2,_data_sys_cal_v2$4411+2
 24502  004D00  C071  F0C9         	movff	?___flmul+3,_data_sys_cal_v2$4411+3
 24503                           
 24504                           ;data.c: 171: f=0.2618f*d*d*d;
 24505  004D04  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 24506  004D08  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 24507  004D0C  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 24508  004D10  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 24509  004D14  C0C6  F06E         	movff	_data_sys_cal_v2$4411,___flmul@b
 24510  004D18  C0C7  F06F         	movff	_data_sys_cal_v2$4411+1,___flmul@b+1
 24511  004D1C  C0C8  F070         	movff	_data_sys_cal_v2$4411+2,___flmul@b+2
 24512  004D20  C0C9  F071         	movff	_data_sys_cal_v2$4411+3,___flmul@b+3
 24513  004D24  EC94  F00B         	call	___flmul	;wreg free
 24514  004D28  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v2$4412
 24515  004D2C  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v2$4412+1
 24516  004D30  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v2$4412+2
 24517  004D34  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v2$4412+3
 24518                           
 24519                           ;data.c: 171: f=0.2618f*d*d*d;
 24520  004D38  C0CA  F06E         	movff	_data_sys_cal_v2$4412,___flmul@b
 24521  004D3C  C0CB  F06F         	movff	_data_sys_cal_v2$4412+1,___flmul@b+1
 24522  004D40  C0CC  F070         	movff	_data_sys_cal_v2$4412+2,___flmul@b+2
 24523  004D44  C0CD  F071         	movff	_data_sys_cal_v2$4412+3,___flmul@b+3
 24524  004D48  0EA6               	movlw	166
 24525  004D4A  0100               	movlb	0	; () banked
 24526  004D4C  6F72               	movwf	___flmul@a& (0+255),b
 24527  004D4E  0E0A               	movlw	10
 24528  004D50  6F73               	movwf	(___flmul@a+1)& (0+255),b
 24529  004D52  0E86               	movlw	134
 24530  004D54  6F74               	movwf	(___flmul@a+2)& (0+255),b
 24531  004D56  0E3E               	movlw	62
 24532  004D58  6F75               	movwf	(___flmul@a+3)& (0+255),b
 24533  004D5A  EC94  F00B         	call	___flmul	;wreg free
 24534  004D5E  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 24535  004D62  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 24536  004D66  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 24537  004D6A  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 24538                           
 24539                           ;data.c: 172: f*=1000;
 24540  004D6E  C0CE  F06E         	movff	data_sys_cal_v2@f,___flmul@b
 24541  004D72  C0CF  F06F         	movff	data_sys_cal_v2@f+1,___flmul@b+1
 24542  004D76  C0D0  F070         	movff	data_sys_cal_v2@f+2,___flmul@b+2
 24543  004D7A  C0D1  F071         	movff	data_sys_cal_v2@f+3,___flmul@b+3
 24544  004D7E  0E00               	movlw	0
 24545  004D80  0100               	movlb	0	; () banked
 24546  004D82  6F72               	movwf	___flmul@a& (0+255),b
 24547  004D84  0E00               	movlw	0
 24548  004D86  6F73               	movwf	(___flmul@a+1)& (0+255),b
 24549  004D88  0E7A               	movlw	122
 24550  004D8A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 24551  004D8C  0E44               	movlw	68
 24552  004D8E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 24553  004D90  EC94  F00B         	call	___flmul	;wreg free
 24554  004D94  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 24555  004D98  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 24556  004D9C  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 24557  004DA0  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 24558                           
 24559                           ;data.c: 173: return (uint32_t)f;
 24560  004DA4  C0CE  F0B8         	movff	data_sys_cal_v2@f,___fltol@f1
 24561  004DA8  C0CF  F0B9         	movff	data_sys_cal_v2@f+1,___fltol@f1+1
 24562  004DAC  C0D0  F0BA         	movff	data_sys_cal_v2@f+2,___fltol@f1+2
 24563  004DB0  C0D1  F0BB         	movff	data_sys_cal_v2@f+3,___fltol@f1+3
 24564  004DB4  EC01  F02B         	call	___fltol	;wreg free
 24565  004DB8  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v2
 24566  004DBC  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v2+1
 24567  004DC0  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v2+2
 24568  004DC4  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v2+3
 24569  004DC8  0012               	return	
 24570  004DCA                     __end_of_data_sys_cal_v2:
 24571                           	opt stack 0
 24572                           tosu	equ	0xFFF
 24573                           tosh	equ	0xFFE
 24574                           tosl	equ	0xFFD
 24575                           pclath	equ	0xFFA
 24576                           tblptru	equ	0xFF8
 24577                           tblptrh	equ	0xFF7
 24578                           tblptrl	equ	0xFF6
 24579                           tablat	equ	0xFF5
 24580                           prodh	equ	0xFF4
 24581                           prodl	equ	0xFF3
 24582                           intcon	equ	0xFF2
 24583                           indf0	equ	0xFEF
 24584                           postinc0	equ	0xFEE
 24585                           fsr0h	equ	0xFEA
 24586                           fsr0l	equ	0xFE9
 24587                           wreg	equ	0xFE8
 24588                           postinc1	equ	0xFE6
 24589                           postdec1	equ	0xFE5
 24590                           plusw1	equ	0xFE3
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           indf2	equ	0xFDF
 24594                           postinc2	equ	0xFDE
 24595                           postdec2	equ	0xFDD
 24596                           plusw2	equ	0xFDB
 24597                           fsr2h	equ	0xFDA
 24598                           fsr2l	equ	0xFD9
 24599                           status	equ	0xFD8
 24600                           
 24601 ;; *************** function _data_sys_cal_v1 *****************
 24602 ;; Defined at:
 24603 ;;		line 154 in file "src/api/data.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;  stp             2   98[BANK0 ] PTR struct .
 24606 ;;		 -> globleBuffer1(256), 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;  r               4  122[BANK0 ] float 
 24609 ;;  f               4  118[BANK0 ] float 
 24610 ;;  h               4  114[BANK0 ] float 
 24611 ;; Return value:  Size  Location     Type
 24612 ;;                  4   98[BANK0 ] unsigned long 
 24613 ;; Registers used:
 24614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24615 ;; Tracked objects:
 24616 ;;		On entry : 0/0
 24617 ;;		On exit  : 0/0
 24618 ;;		Unchanged: 0/0
 24619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24621 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24623 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24624 ;;Total ram usage:       28 bytes
 24625 ;; Hardware stack levels used:    1
 24626 ;; Hardware stack levels required when called:    5
 24627 ;; This function calls:
 24628 ;;		___fldiv
 24629 ;;		___flmul
 24630 ;;		___fltol
 24631 ;;		___xxtofl
 24632 ;; This function is called by:
 24633 ;;		_data_sys_init
 24634 ;; This function uses a non-reentrant model
 24635 ;;
 24636                           
 24637                           	psect	text115
 24638  0037F0                     __ptext115:
 24639                           	opt stack 0
 24640  0037F0                     _data_sys_cal_v1:
 24641                           	opt stack 23
 24642                           
 24643                           ;data.c: 156: float r,h,f;
 24644                           ;data.c: 157: r=(float)(stp->d);
 24645                           
 24646                           ;incstack = 0
 24647  0037F0  0100               	movlb	0	; () banked
 24648  0037F2  EE20 F00C          	lfsr	2,12
 24649  0037F6  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 24650  0037F8  26D9               	addwf	fsr2l,f,c
 24651  0037FA  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 24652  0037FC  22DA               	addwfc	fsr2h,f,c
 24653  0037FE  CFDE F060          	movff	postinc2,___xxtofl@val
 24654  003802  CFDE F061          	movff	postinc2,___xxtofl@val+1
 24655  003806  CFDE F062          	movff	postinc2,___xxtofl@val+2
 24656  00380A  CFDE F063          	movff	postinc2,___xxtofl@val+3
 24657  00380E  0E00               	movlw	0
 24658  003810  ECED  F01E         	call	___xxtofl
 24659  003814  C060  F0DA         	movff	?___xxtofl,data_sys_cal_v1@r
 24660  003818  C061  F0DB         	movff	?___xxtofl+1,data_sys_cal_v1@r+1
 24661  00381C  C062  F0DC         	movff	?___xxtofl+2,data_sys_cal_v1@r+2
 24662  003820  C063  F0DD         	movff	?___xxtofl+3,data_sys_cal_v1@r+3
 24663                           
 24664                           ;data.c: 158: h=(float)(stp->h);
 24665  003824  0100               	movlb	0	; () banked
 24666  003826  EE20 F008          	lfsr	2,8
 24667  00382A  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 24668  00382C  26D9               	addwf	fsr2l,f,c
 24669  00382E  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 24670  003830  22DA               	addwfc	fsr2h,f,c
 24671  003832  CFDE F060          	movff	postinc2,___xxtofl@val
 24672  003836  CFDE F061          	movff	postinc2,___xxtofl@val+1
 24673  00383A  CFDE F062          	movff	postinc2,___xxtofl@val+2
 24674  00383E  CFDE F063          	movff	postinc2,___xxtofl@val+3
 24675  003842  0E01               	movlw	1
 24676  003844  ECED  F01E         	call	___xxtofl
 24677  003848  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v1@h
 24678  00384C  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v1@h+1
 24679  003850  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v1@h+2
 24680  003854  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v1@h+3
 24681                           
 24682                           ;data.c: 159: r=r/1000/2;
 24683  003858  0E00               	movlw	0
 24684  00385A  0100               	movlb	0	; () banked
 24685  00385C  6F8B               	movwf	___fldiv@a& (0+255),b
 24686  00385E  0E00               	movlw	0
 24687  003860  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24688  003862  0E7A               	movlw	122
 24689  003864  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24690  003866  0E44               	movlw	68
 24691  003868  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24692  00386A  C0DA  F087         	movff	data_sys_cal_v1@r,___fldiv@b
 24693  00386E  C0DB  F088         	movff	data_sys_cal_v1@r+1,___fldiv@b+1
 24694  003872  C0DC  F089         	movff	data_sys_cal_v1@r+2,___fldiv@b+2
 24695  003876  C0DD  F08A         	movff	data_sys_cal_v1@r+3,___fldiv@b+3
 24696  00387A  EC48  F012         	call	___fldiv	;wreg free
 24697  00387E  C087  F0C6         	movff	?___fldiv,_data_sys_cal_v1$4408
 24698  003882  C088  F0C7         	movff	?___fldiv+1,_data_sys_cal_v1$4408+1
 24699  003886  C089  F0C8         	movff	?___fldiv+2,_data_sys_cal_v1$4408+2
 24700  00388A  C08A  F0C9         	movff	?___fldiv+3,_data_sys_cal_v1$4408+3
 24701                           
 24702                           ;data.c: 159: r=r/1000/2;
 24703  00388E  C0C6  F087         	movff	_data_sys_cal_v1$4408,___fldiv@b
 24704  003892  C0C7  F088         	movff	_data_sys_cal_v1$4408+1,___fldiv@b+1
 24705  003896  C0C8  F089         	movff	_data_sys_cal_v1$4408+2,___fldiv@b+2
 24706  00389A  C0C9  F08A         	movff	_data_sys_cal_v1$4408+3,___fldiv@b+3
 24707  00389E  0E00               	movlw	0
 24708  0038A0  0100               	movlb	0	; () banked
 24709  0038A2  6F8B               	movwf	___fldiv@a& (0+255),b
 24710  0038A4  0E00               	movlw	0
 24711  0038A6  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24712  0038A8  0E00               	movlw	0
 24713  0038AA  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24714  0038AC  0E40               	movlw	64
 24715  0038AE  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24716  0038B0  EC48  F012         	call	___fldiv	;wreg free
 24717  0038B4  C087  F0DA         	movff	?___fldiv,data_sys_cal_v1@r
 24718  0038B8  C088  F0DB         	movff	?___fldiv+1,data_sys_cal_v1@r+1
 24719  0038BC  C089  F0DC         	movff	?___fldiv+2,data_sys_cal_v1@r+2
 24720  0038C0  C08A  F0DD         	movff	?___fldiv+3,data_sys_cal_v1@r+3
 24721                           
 24722                           ;data.c: 160: h=h/1000;
 24723  0038C4  C0D2  F087         	movff	data_sys_cal_v1@h,___fldiv@b
 24724  0038C8  C0D3  F088         	movff	data_sys_cal_v1@h+1,___fldiv@b+1
 24725  0038CC  C0D4  F089         	movff	data_sys_cal_v1@h+2,___fldiv@b+2
 24726  0038D0  C0D5  F08A         	movff	data_sys_cal_v1@h+3,___fldiv@b+3
 24727  0038D4  0E00               	movlw	0
 24728  0038D6  0100               	movlb	0	; () banked
 24729  0038D8  6F8B               	movwf	___fldiv@a& (0+255),b
 24730  0038DA  0E00               	movlw	0
 24731  0038DC  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24732  0038DE  0E7A               	movlw	122
 24733  0038E0  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24734  0038E2  0E44               	movlw	68
 24735  0038E4  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24736  0038E6  EC48  F012         	call	___fldiv	;wreg free
 24737  0038EA  C087  F0D2         	movff	?___fldiv,data_sys_cal_v1@h
 24738  0038EE  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v1@h+1
 24739  0038F2  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v1@h+2
 24740  0038F6  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v1@h+3
 24741                           
 24742                           ;data.c: 161: f=h*(r*r)*3.1416f;
 24743  0038FA  C0DA  F072         	movff	data_sys_cal_v1@r,___flmul@a
 24744  0038FE  C0DB  F073         	movff	data_sys_cal_v1@r+1,___flmul@a+1
 24745  003902  C0DC  F074         	movff	data_sys_cal_v1@r+2,___flmul@a+2
 24746  003906  C0DD  F075         	movff	data_sys_cal_v1@r+3,___flmul@a+3
 24747  00390A  C0DA  F06E         	movff	data_sys_cal_v1@r,___flmul@b
 24748  00390E  C0DB  F06F         	movff	data_sys_cal_v1@r+1,___flmul@b+1
 24749  003912  C0DC  F070         	movff	data_sys_cal_v1@r+2,___flmul@b+2
 24750  003916  C0DD  F071         	movff	data_sys_cal_v1@r+3,___flmul@b+3
 24751  00391A  EC94  F00B         	call	___flmul	;wreg free
 24752  00391E  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v1$4409
 24753  003922  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v1$4409+1
 24754  003926  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v1$4409+2
 24755  00392A  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v1$4409+3
 24756                           
 24757                           ;data.c: 161: f=h*(r*r)*3.1416f;
 24758  00392E  C0D2  F072         	movff	data_sys_cal_v1@h,___flmul@a
 24759  003932  C0D3  F073         	movff	data_sys_cal_v1@h+1,___flmul@a+1
 24760  003936  C0D4  F074         	movff	data_sys_cal_v1@h+2,___flmul@a+2
 24761  00393A  C0D5  F075         	movff	data_sys_cal_v1@h+3,___flmul@a+3
 24762  00393E  C0CA  F06E         	movff	_data_sys_cal_v1$4409,___flmul@b
 24763  003942  C0CB  F06F         	movff	_data_sys_cal_v1$4409+1,___flmul@b+1
 24764  003946  C0CC  F070         	movff	_data_sys_cal_v1$4409+2,___flmul@b+2
 24765  00394A  C0CD  F071         	movff	_data_sys_cal_v1$4409+3,___flmul@b+3
 24766  00394E  EC94  F00B         	call	___flmul	;wreg free
 24767  003952  C06E  F0CE         	movff	?___flmul,_data_sys_cal_v1$4410
 24768  003956  C06F  F0CF         	movff	?___flmul+1,_data_sys_cal_v1$4410+1
 24769  00395A  C070  F0D0         	movff	?___flmul+2,_data_sys_cal_v1$4410+2
 24770  00395E  C071  F0D1         	movff	?___flmul+3,_data_sys_cal_v1$4410+3
 24771                           
 24772                           ;data.c: 161: f=h*(r*r)*3.1416f;
 24773  003962  C0CE  F06E         	movff	_data_sys_cal_v1$4410,___flmul@b
 24774  003966  C0CF  F06F         	movff	_data_sys_cal_v1$4410+1,___flmul@b+1
 24775  00396A  C0D0  F070         	movff	_data_sys_cal_v1$4410+2,___flmul@b+2
 24776  00396E  C0D1  F071         	movff	_data_sys_cal_v1$4410+3,___flmul@b+3
 24777  003972  0EF9               	movlw	249
 24778  003974  0100               	movlb	0	; () banked
 24779  003976  6F72               	movwf	___flmul@a& (0+255),b
 24780  003978  0E0F               	movlw	15
 24781  00397A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 24782  00397C  0E49               	movlw	73
 24783  00397E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 24784  003980  0E40               	movlw	64
 24785  003982  6F75               	movwf	(___flmul@a+3)& (0+255),b
 24786  003984  EC94  F00B         	call	___flmul	;wreg free
 24787  003988  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 24788  00398C  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 24789  003990  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 24790  003994  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 24791                           
 24792                           ;data.c: 162: f*=1000;
 24793  003998  C0D6  F06E         	movff	data_sys_cal_v1@f,___flmul@b
 24794  00399C  C0D7  F06F         	movff	data_sys_cal_v1@f+1,___flmul@b+1
 24795  0039A0  C0D8  F070         	movff	data_sys_cal_v1@f+2,___flmul@b+2
 24796  0039A4  C0D9  F071         	movff	data_sys_cal_v1@f+3,___flmul@b+3
 24797  0039A8  0E00               	movlw	0
 24798  0039AA  0100               	movlb	0	; () banked
 24799  0039AC  6F72               	movwf	___flmul@a& (0+255),b
 24800  0039AE  0E00               	movlw	0
 24801  0039B0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 24802  0039B2  0E7A               	movlw	122
 24803  0039B4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 24804  0039B6  0E44               	movlw	68
 24805  0039B8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 24806  0039BA  EC94  F00B         	call	___flmul	;wreg free
 24807  0039BE  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 24808  0039C2  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 24809  0039C6  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 24810  0039CA  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 24811                           
 24812                           ;data.c: 163: return (uint32_t)f;
 24813  0039CE  C0D6  F0B8         	movff	data_sys_cal_v1@f,___fltol@f1
 24814  0039D2  C0D7  F0B9         	movff	data_sys_cal_v1@f+1,___fltol@f1+1
 24815  0039D6  C0D8  F0BA         	movff	data_sys_cal_v1@f+2,___fltol@f1+2
 24816  0039DA  C0D9  F0BB         	movff	data_sys_cal_v1@f+3,___fltol@f1+3
 24817  0039DE  EC01  F02B         	call	___fltol	;wreg free
 24818  0039E2  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v1
 24819  0039E6  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v1+1
 24820  0039EA  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v1+2
 24821  0039EE  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v1+3
 24822  0039F2  0012               	return	
 24823  0039F4                     __end_of_data_sys_cal_v1:
 24824                           	opt stack 0
 24825                           tosu	equ	0xFFF
 24826                           tosh	equ	0xFFE
 24827                           tosl	equ	0xFFD
 24828                           pclath	equ	0xFFA
 24829                           tblptru	equ	0xFF8
 24830                           tblptrh	equ	0xFF7
 24831                           tblptrl	equ	0xFF6
 24832                           tablat	equ	0xFF5
 24833                           prodh	equ	0xFF4
 24834                           prodl	equ	0xFF3
 24835                           intcon	equ	0xFF2
 24836                           indf0	equ	0xFEF
 24837                           postinc0	equ	0xFEE
 24838                           fsr0h	equ	0xFEA
 24839                           fsr0l	equ	0xFE9
 24840                           wreg	equ	0xFE8
 24841                           postinc1	equ	0xFE6
 24842                           postdec1	equ	0xFE5
 24843                           plusw1	equ	0xFE3
 24844                           fsr1h	equ	0xFE2
 24845                           fsr1l	equ	0xFE1
 24846                           indf2	equ	0xFDF
 24847                           postinc2	equ	0xFDE
 24848                           postdec2	equ	0xFDD
 24849                           plusw2	equ	0xFDB
 24850                           fsr2h	equ	0xFDA
 24851                           fsr2l	equ	0xFD9
 24852                           status	equ	0xFD8
 24853                           
 24854 ;; *************** function ___xxtofl *****************
 24855 ;; Defined at:
 24856 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;  sign            1    wreg     unsigned char 
 24859 ;;  val             4    0[BANK0 ] long 
 24860 ;; Auto vars:     Size  Location     Type
 24861 ;;  sign            1    8[BANK0 ] unsigned char 
 24862 ;;  arg             4   10[BANK0 ] unsigned long 
 24863 ;;  exp             1    9[BANK0 ] unsigned char 
 24864 ;; Return value:  Size  Location     Type
 24865 ;;                  4    0[BANK0 ] unsigned char 
 24866 ;; Registers used:
 24867 ;;		wreg, status,2, status,0
 24868 ;; Tracked objects:
 24869 ;;		On entry : 0/0
 24870 ;;		On exit  : 0/0
 24871 ;;		Unchanged: 0/0
 24872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24874 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24876 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24877 ;;Total ram usage:       14 bytes
 24878 ;; Hardware stack levels used:    1
 24879 ;; Hardware stack levels required when called:    4
 24880 ;; This function calls:
 24881 ;;		Nothing
 24882 ;; This function is called by:
 24883 ;;		_data_sys_cal_v1
 24884 ;;		_data_sys_cal_v2
 24885 ;;		_m_interp1_float_fast
 24886 ;;		_cal_diff_hight_to_vol_h
 24887 ;;		_cal_diff_hight_level
 24888 ;;		_cal_diff_hight_to_vol_v
 24889 ;;		_cal_diff_p_to_h
 24890 ;;		_cal_pt100_temperature_in
 24891 ;;		_cal_pt100_temperature_ex
 24892 ;;		_cal_additional_pressute
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text116
 24897  003DDA                     __ptext116:
 24898                           	opt stack 0
 24899  003DDA                     ___xxtofl:
 24900                           	opt stack 21
 24901                           
 24902                           ;incstack = 0
 24903                           ;___xxtofl@sign stored from wreg
 24904  003DDA  0100               	movlb	0	; () banked
 24905  003DDC  6F68               	movwf	___xxtofl@sign& (0+255),b
 24906  003DDE  0100               	movlb	0	; () banked
 24907  003DE0  5168               	movf	___xxtofl@sign& (0+255),w,b
 24908  003DE2  0100               	movlb	0	; () banked
 24909  003DE4  B4D8               	btfsc	status,2,c
 24910  003DE6  D01E               	goto	l2427
 24911                           
 24912                           ; BSR set to: 0
 24913  003DE8  0100               	movlb	0	; () banked
 24914  003DEA  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 24915  003DEC  D01B               	goto	l2427
 24916                           
 24917                           ; BSR set to: 0
 24918  003DEE  C060  F064         	movff	___xxtofl@val,??___xxtofl
 24919  003DF2  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 24920  003DF6  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 24921  003DFA  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 24922  003DFE  0100               	movlb	0	; () banked
 24923  003E00  1F64               	comf	??___xxtofl& (0+255),f,b
 24924  003E02  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 24925  003E04  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 24926  003E06  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 24927  003E08  2B64               	incf	??___xxtofl& (0+255),f,b
 24928  003E0A  0E00               	movlw	0
 24929  003E0C  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 24930  003E0E  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 24931  003E10  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 24932  003E12  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 24933  003E16  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 24934  003E1A  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 24935  003E1E  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 24936  003E22  D008               	goto	l11945
 24937  003E24                     l2427:
 24938                           
 24939                           ; BSR set to: 0
 24940  003E24  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 24941  003E28  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 24942  003E2C  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 24943  003E30  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 24944  003E34                     l11945:
 24945                           
 24946                           ; BSR set to: 0
 24947  003E34  0100               	movlb	0	; () banked
 24948  003E36  5160               	movf	___xxtofl@val& (0+255),w,b
 24949  003E38  0100               	movlb	0	; () banked
 24950  003E3A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 24951  003E3C  0100               	movlb	0	; () banked
 24952  003E3E  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 24953  003E40  0100               	movlb	0	; () banked
 24954  003E42  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 24955  003E44  A4D8               	btfss	status,2,c
 24956  003E46  D00A               	goto	l11951
 24957                           
 24958                           ; BSR set to: 0
 24959  003E48  0E00               	movlw	0
 24960  003E4A  0100               	movlb	0	; () banked
 24961  003E4C  6F60               	movwf	?___xxtofl& (0+255),b
 24962  003E4E  0E00               	movlw	0
 24963  003E50  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 24964  003E52  0E00               	movlw	0
 24965  003E54  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 24966  003E56  0E00               	movlw	0
 24967  003E58  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 24968                           
 24969                           ; BSR set to: 0
 24970  003E5A  0012               	return	
 24971  003E5C                     l11951:
 24972                           
 24973                           ; BSR set to: 0
 24974  003E5C  0E96               	movlw	150
 24975  003E5E  0100               	movlb	0	; () banked
 24976  003E60  6F69               	movwf	___xxtofl@exp& (0+255),b
 24977  003E62  D008               	goto	l11955
 24978  003E64                     l11953:
 24979                           
 24980                           ; BSR set to: 0
 24981  003E64  0100               	movlb	0	; () banked
 24982  003E66  2B69               	incf	___xxtofl@exp& (0+255),f,b
 24983  003E68  0100               	movlb	0	; () banked
 24984  003E6A  90D8               	bcf	status,0,c
 24985  003E6C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 24986  003E6E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 24987  003E70  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 24988  003E72  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 24989  003E74                     l11955:
 24990                           
 24991                           ; BSR set to: 0
 24992  003E74  0E00               	movlw	0
 24993  003E76  0100               	movlb	0	; () banked
 24994  003E78  156A               	andwf	___xxtofl@arg& (0+255),w,b
 24995  003E7A  0100               	movlb	0	; () banked
 24996  003E7C  6F64               	movwf	??___xxtofl& (0+255),b
 24997  003E7E  0E00               	movlw	0
 24998  003E80  0100               	movlb	0	; () banked
 24999  003E82  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25000  003E84  0100               	movlb	0	; () banked
 25001  003E86  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 25002  003E88  0E00               	movlw	0
 25003  003E8A  0100               	movlb	0	; () banked
 25004  003E8C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25005  003E8E  0100               	movlb	0	; () banked
 25006  003E90  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 25007  003E92  0EFE               	movlw	254
 25008  003E94  0100               	movlb	0	; () banked
 25009  003E96  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25010  003E98  0100               	movlb	0	; () banked
 25011  003E9A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 25012  003E9C  0100               	movlb	0	; () banked
 25013  003E9E  5164               	movf	??___xxtofl& (0+255),w,b
 25014  003EA0  0100               	movlb	0	; () banked
 25015  003EA2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25016  003EA4  0100               	movlb	0	; () banked
 25017  003EA6  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25018  003EA8  0100               	movlb	0	; () banked
 25019  003EAA  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25020  003EAC  B4D8               	btfsc	status,2,c
 25021  003EAE  D010               	goto	l2434
 25022  003EB0  D7D9               	goto	l11953
 25023  003EB2                     l11957:
 25024                           
 25025                           ; BSR set to: 0
 25026  003EB2  0100               	movlb	0	; () banked
 25027  003EB4  2B69               	incf	___xxtofl@exp& (0+255),f,b
 25028                           
 25029                           ; BSR set to: 0
 25030  003EB6  0E01               	movlw	1
 25031  003EB8  0100               	movlb	0	; () banked
 25032  003EBA  276A               	addwf	___xxtofl@arg& (0+255),f,b
 25033  003EBC  0E00               	movlw	0
 25034  003EBE  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 25035  003EC0  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 25036  003EC2  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 25037                           
 25038                           ; BSR set to: 0
 25039  003EC4  0100               	movlb	0	; () banked
 25040  003EC6  90D8               	bcf	status,0,c
 25041  003EC8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25042  003ECA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25043  003ECC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25044  003ECE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 25045  003ED0                     l2434:
 25046                           
 25047                           ; BSR set to: 0
 25048  003ED0  0E00               	movlw	0
 25049  003ED2  0100               	movlb	0	; () banked
 25050  003ED4  156A               	andwf	___xxtofl@arg& (0+255),w,b
 25051  003ED6  0100               	movlb	0	; () banked
 25052  003ED8  6F64               	movwf	??___xxtofl& (0+255),b
 25053  003EDA  0E00               	movlw	0
 25054  003EDC  0100               	movlb	0	; () banked
 25055  003EDE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25056  003EE0  0100               	movlb	0	; () banked
 25057  003EE2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 25058  003EE4  0E00               	movlw	0
 25059  003EE6  0100               	movlb	0	; () banked
 25060  003EE8  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25061  003EEA  0100               	movlb	0	; () banked
 25062  003EEC  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 25063  003EEE  0EFF               	movlw	255
 25064  003EF0  0100               	movlb	0	; () banked
 25065  003EF2  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25066  003EF4  0100               	movlb	0	; () banked
 25067  003EF6  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 25068  003EF8  0100               	movlb	0	; () banked
 25069  003EFA  5164               	movf	??___xxtofl& (0+255),w,b
 25070  003EFC  0100               	movlb	0	; () banked
 25071  003EFE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25072  003F00  0100               	movlb	0	; () banked
 25073  003F02  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25074  003F04  0100               	movlb	0	; () banked
 25075  003F06  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25076  003F08  B4D8               	btfsc	status,2,c
 25077  003F0A  D009               	goto	l11965
 25078  003F0C  D7D2               	goto	l11957
 25079  003F0E                     l11963:
 25080                           
 25081                           ; BSR set to: 0
 25082  003F0E  0100               	movlb	0	; () banked
 25083  003F10  0769               	decf	___xxtofl@exp& (0+255),f,b
 25084  003F12  0100               	movlb	0	; () banked
 25085  003F14  90D8               	bcf	status,0,c
 25086  003F16  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 25087  003F18  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 25088  003F1A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 25089  003F1C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 25090  003F1E                     l11965:
 25091                           
 25092                           ; BSR set to: 0
 25093  003F1E  0100               	movlb	0	; () banked
 25094  003F20  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 25095  003F22  D004               	goto	l2441
 25096                           
 25097                           ; BSR set to: 0
 25098  003F24  0E02               	movlw	2
 25099  003F26  0100               	movlb	0	; () banked
 25100  003F28  6169               	cpfslt	___xxtofl@exp& (0+255),b
 25101  003F2A  D7F1               	goto	l11963
 25102  003F2C                     l2441:
 25103                           
 25104                           ; BSR set to: 0
 25105  003F2C  0100               	movlb	0	; () banked
 25106  003F2E  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 25107  003F30  D009               	goto	l2442
 25108                           
 25109                           ; BSR set to: 0
 25110  003F32  0EFF               	movlw	255
 25111  003F34  0100               	movlb	0	; () banked
 25112  003F36  176A               	andwf	___xxtofl@arg& (0+255),f,b
 25113  003F38  0EFF               	movlw	255
 25114  003F3A  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 25115  003F3C  0E7F               	movlw	127
 25116  003F3E  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 25117  003F40  0EFF               	movlw	255
 25118  003F42  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 25119  003F44                     l2442:
 25120                           
 25121                           ; BSR set to: 0
 25122  003F44  0100               	movlb	0	; () banked
 25123  003F46  90D8               	bcf	status,0,c
 25124  003F48  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 25125  003F4A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 25126  003F4E  0100               	movlb	0	; () banked
 25127  003F50  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 25128  003F52  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 25129  003F54  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 25130  003F56  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 25131  003F5A  0100               	movlb	0	; () banked
 25132  003F5C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 25133  003F5E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 25134  003F60  6B64               	clrf	??___xxtofl& (0+255),b
 25135  003F62  0100               	movlb	0	; () banked
 25136  003F64  5164               	movf	??___xxtofl& (0+255),w,b
 25137  003F66  0100               	movlb	0	; () banked
 25138  003F68  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 25139  003F6A  0100               	movlb	0	; () banked
 25140  003F6C  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 25141  003F6E  0100               	movlb	0	; () banked
 25142  003F70  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 25143  003F72  0100               	movlb	0	; () banked
 25144  003F74  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 25145  003F76  0100               	movlb	0	; () banked
 25146  003F78  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 25147  003F7A  0100               	movlb	0	; () banked
 25148  003F7C  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 25149  003F7E  0100               	movlb	0	; () banked
 25150  003F80  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 25151                           
 25152                           ; BSR set to: 0
 25153  003F82  0100               	movlb	0	; () banked
 25154  003F84  5168               	movf	___xxtofl@sign& (0+255),w,b
 25155  003F86  0100               	movlb	0	; () banked
 25156  003F88  B4D8               	btfsc	status,2,c
 25157  003F8A  D005               	goto	l11977
 25158                           
 25159                           ; BSR set to: 0
 25160  003F8C  0100               	movlb	0	; () banked
 25161  003F8E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25162  003F90  D002               	goto	l11977
 25163                           
 25164                           ; BSR set to: 0
 25165  003F92  0100               	movlb	0	; () banked
 25166  003F94  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 25167  003F96                     l11977:
 25168                           
 25169                           ; BSR set to: 0
 25170  003F96  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 25171  003F9A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 25172  003F9E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 25173  003FA2  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 25174  003FA6  0012               	return	
 25175  003FA8                     __end_of___xxtofl:
 25176                           	opt stack 0
 25177                           tosu	equ	0xFFF
 25178                           tosh	equ	0xFFE
 25179                           tosl	equ	0xFFD
 25180                           pclath	equ	0xFFA
 25181                           tblptru	equ	0xFF8
 25182                           tblptrh	equ	0xFF7
 25183                           tblptrl	equ	0xFF6
 25184                           tablat	equ	0xFF5
 25185                           prodh	equ	0xFF4
 25186                           prodl	equ	0xFF3
 25187                           intcon	equ	0xFF2
 25188                           indf0	equ	0xFEF
 25189                           postinc0	equ	0xFEE
 25190                           fsr0h	equ	0xFEA
 25191                           fsr0l	equ	0xFE9
 25192                           wreg	equ	0xFE8
 25193                           postinc1	equ	0xFE6
 25194                           postdec1	equ	0xFE5
 25195                           plusw1	equ	0xFE3
 25196                           fsr1h	equ	0xFE2
 25197                           fsr1l	equ	0xFE1
 25198                           indf2	equ	0xFDF
 25199                           postinc2	equ	0xFDE
 25200                           postdec2	equ	0xFDD
 25201                           plusw2	equ	0xFDB
 25202                           fsr2h	equ	0xFDA
 25203                           fsr2l	equ	0xFD9
 25204                           status	equ	0xFD8
 25205                           
 25206 ;; *************** function ___fltol *****************
 25207 ;; Defined at:
 25208 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 25209 ;; Parameters:    Size  Location     Type
 25210 ;;  f1              4   88[BANK0 ] unsigned char 
 25211 ;; Auto vars:     Size  Location     Type
 25212 ;;  exp1            1   97[BANK0 ] unsigned char 
 25213 ;;  sign1           1   96[BANK0 ] unsigned char 
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  4   88[BANK0 ] long 
 25216 ;; Registers used:
 25217 ;;		wreg, status,2, status,0
 25218 ;; Tracked objects:
 25219 ;;		On entry : 0/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25226 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25227 ;;Total ram usage:       10 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:    4
 25230 ;; This function calls:
 25231 ;;		Nothing
 25232 ;; This function is called by:
 25233 ;;		_data_sys_cal_v1
 25234 ;;		_data_sys_cal_v2
 25235 ;;		_cal_diff_hight_to_vol_h
 25236 ;;		_cal_diff_hight_level
 25237 ;;		_cal_diff_hight_to_vol_v
 25238 ;;		_cal_diff_p_to_h
 25239 ;;		_cal_pt100_temperature_in
 25240 ;;		_cal_pt100_temperature_ex
 25241 ;;		_cal_additional_pressute
 25242 ;; This function uses a non-reentrant model
 25243 ;;
 25244                           
 25245                           	psect	text117
 25246  005602                     __ptext117:
 25247                           	opt stack 0
 25248  005602                     ___fltol:
 25249                           	opt stack 21
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;incstack = 0
 25253  005602  0100               	movlb	0	; () banked
 25254  005604  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 25255  005606  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 25256  005608  0100               	movlb	0	; () banked
 25257  00560A  6FC1               	movwf	___fltol@exp1& (0+255),b
 25258  00560C  0100               	movlb	0	; () banked
 25259  00560E  51C1               	movf	___fltol@exp1& (0+255),w,b
 25260  005610  A4D8               	btfss	status,2,c
 25261  005612  D00A               	goto	l11879
 25262                           
 25263                           ; BSR set to: 0
 25264  005614  0E00               	movlw	0
 25265  005616  0100               	movlb	0	; () banked
 25266  005618  6FB8               	movwf	?___fltol& (0+255),b
 25267  00561A  0E00               	movlw	0
 25268  00561C  6FB9               	movwf	(?___fltol+1)& (0+255),b
 25269  00561E  0E00               	movlw	0
 25270  005620  6FBA               	movwf	(?___fltol+2)& (0+255),b
 25271  005622  0E00               	movlw	0
 25272  005624  6FBB               	movwf	(?___fltol+3)& (0+255),b
 25273                           
 25274                           ; BSR set to: 0
 25275  005626  0012               	return	
 25276  005628                     l11879:
 25277                           
 25278                           ; BSR set to: 0
 25279  005628  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 25280  00562C  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 25281  005630  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 25282  005634  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 25283  005638  0E20               	movlw	32
 25284  00563A  D006               	goto	u10500
 25285  00563C                     u10505:
 25286  00563C  0100               	movlb	0	; () banked
 25287  00563E  90D8               	bcf	status,0,c
 25288  005640  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 25289  005642  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 25290  005644  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 25291  005646  33BC               	rrcf	??___fltol& (0+255),f,b
 25292  005648                     u10500:
 25293  005648  2EE8               	decfsz	wreg,f,c
 25294  00564A  D7F8               	goto	u10505
 25295  00564C  0100               	movlb	0	; () banked
 25296  00564E  51BC               	movf	??___fltol& (0+255),w,b
 25297  005650  0100               	movlb	0	; () banked
 25298  005652  6FC0               	movwf	___fltol@sign1& (0+255),b
 25299                           
 25300                           ; BSR set to: 0
 25301  005654  0100               	movlb	0	; () banked
 25302  005656  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 25303                           
 25304                           ; BSR set to: 0
 25305  005658  0EFF               	movlw	255
 25306  00565A  0100               	movlb	0	; () banked
 25307  00565C  17B8               	andwf	___fltol@f1& (0+255),f,b
 25308  00565E  0EFF               	movlw	255
 25309  005660  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 25310  005662  0EFF               	movlw	255
 25311  005664  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 25312  005666  0E00               	movlw	0
 25313  005668  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 25314                           
 25315                           ; BSR set to: 0
 25316  00566A  0E96               	movlw	150
 25317  00566C  0100               	movlb	0	; () banked
 25318  00566E  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 25319                           
 25320                           ; BSR set to: 0
 25321  005670  0100               	movlb	0	; () banked
 25322  005672  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 25323  005674  D01A               	goto	l11899
 25324                           
 25325                           ; BSR set to: 0
 25326  005676  0100               	movlb	0	; () banked
 25327  005678  51C1               	movf	___fltol@exp1& (0+255),w,b
 25328  00567A  0A80               	xorlw	128
 25329  00567C  0F97               	addlw	151
 25330  00567E  B0D8               	btfsc	status,0,c
 25331  005680  D00A               	goto	l11895
 25332                           
 25333                           ; BSR set to: 0
 25334  005682  0E00               	movlw	0
 25335  005684  0100               	movlb	0	; () banked
 25336  005686  6FB8               	movwf	?___fltol& (0+255),b
 25337  005688  0E00               	movlw	0
 25338  00568A  6FB9               	movwf	(?___fltol+1)& (0+255),b
 25339  00568C  0E00               	movlw	0
 25340  00568E  6FBA               	movwf	(?___fltol+2)& (0+255),b
 25341  005690  0E00               	movlw	0
 25342  005692  6FBB               	movwf	(?___fltol+3)& (0+255),b
 25343                           
 25344                           ; BSR set to: 0
 25345  005694  0012               	return	
 25346  005696                     l11895:
 25347                           
 25348                           ; BSR set to: 0
 25349  005696  0100               	movlb	0	; () banked
 25350  005698  90D8               	bcf	status,0,c
 25351  00569A  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 25352  00569C  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 25353  00569E  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 25354  0056A0  33B8               	rrcf	___fltol@f1& (0+255),f,b
 25355                           
 25356                           ; BSR set to: 0
 25357  0056A2  0100               	movlb	0	; () banked
 25358  0056A4  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 25359  0056A6  D7F7               	goto	l11895
 25360                           
 25361                           ; BSR set to: 0
 25362  0056A8  D01B               	goto	l11909
 25363  0056AA                     l11899:
 25364                           
 25365                           ; BSR set to: 0
 25366  0056AA  0E1F               	movlw	31
 25367  0056AC  0100               	movlb	0	; () banked
 25368  0056AE  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 25369  0056B0  D012               	goto	l11907
 25370                           
 25371                           ; BSR set to: 0
 25372  0056B2  0E00               	movlw	0
 25373  0056B4  0100               	movlb	0	; () banked
 25374  0056B6  6FB8               	movwf	?___fltol& (0+255),b
 25375  0056B8  0E00               	movlw	0
 25376  0056BA  6FB9               	movwf	(?___fltol+1)& (0+255),b
 25377  0056BC  0E00               	movlw	0
 25378  0056BE  6FBA               	movwf	(?___fltol+2)& (0+255),b
 25379  0056C0  0E00               	movlw	0
 25380  0056C2  6FBB               	movwf	(?___fltol+3)& (0+255),b
 25381                           
 25382                           ; BSR set to: 0
 25383  0056C4  0012               	return	
 25384  0056C6                     l11905:
 25385                           
 25386                           ; BSR set to: 0
 25387  0056C6  0100               	movlb	0	; () banked
 25388  0056C8  90D8               	bcf	status,0,c
 25389  0056CA  37B8               	rlcf	___fltol@f1& (0+255),f,b
 25390  0056CC  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 25391  0056CE  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 25392  0056D0  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 25393  0056D2  0100               	movlb	0	; () banked
 25394  0056D4  07C1               	decf	___fltol@exp1& (0+255),f,b
 25395  0056D6                     l11907:
 25396                           
 25397                           ; BSR set to: 0
 25398  0056D6  0100               	movlb	0	; () banked
 25399  0056D8  51C1               	movf	___fltol@exp1& (0+255),w,b
 25400  0056DA  0100               	movlb	0	; () banked
 25401  0056DC  A4D8               	btfss	status,2,c
 25402  0056DE  D7F3               	goto	l11905
 25403  0056E0                     l11909:
 25404                           
 25405                           ; BSR set to: 0
 25406  0056E0  0100               	movlb	0	; () banked
 25407  0056E2  51C0               	movf	___fltol@sign1& (0+255),w,b
 25408  0056E4  0100               	movlb	0	; () banked
 25409  0056E6  B4D8               	btfsc	status,2,c
 25410  0056E8  D009               	goto	l11913
 25411                           
 25412                           ; BSR set to: 0
 25413  0056EA  0100               	movlb	0	; () banked
 25414  0056EC  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 25415  0056EE  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 25416  0056F0  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 25417  0056F2  6DB8               	negf	___fltol@f1& (0+255),b
 25418  0056F4  0E00               	movlw	0
 25419  0056F6  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 25420  0056F8  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 25421  0056FA  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 25422  0056FC                     l11913:
 25423                           
 25424                           ; BSR set to: 0
 25425  0056FC  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 25426  005700  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 25427  005704  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 25428  005708  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 25429  00570C  0012               	return	
 25430  00570E                     __end_of___fltol:
 25431                           	opt stack 0
 25432                           tosu	equ	0xFFF
 25433                           tosh	equ	0xFFE
 25434                           tosl	equ	0xFFD
 25435                           pclath	equ	0xFFA
 25436                           tblptru	equ	0xFF8
 25437                           tblptrh	equ	0xFF7
 25438                           tblptrl	equ	0xFF6
 25439                           tablat	equ	0xFF5
 25440                           prodh	equ	0xFF4
 25441                           prodl	equ	0xFF3
 25442                           intcon	equ	0xFF2
 25443                           indf0	equ	0xFEF
 25444                           postinc0	equ	0xFEE
 25445                           fsr0h	equ	0xFEA
 25446                           fsr0l	equ	0xFE9
 25447                           wreg	equ	0xFE8
 25448                           postinc1	equ	0xFE6
 25449                           postdec1	equ	0xFE5
 25450                           plusw1	equ	0xFE3
 25451                           fsr1h	equ	0xFE2
 25452                           fsr1l	equ	0xFE1
 25453                           indf2	equ	0xFDF
 25454                           postinc2	equ	0xFDE
 25455                           postdec2	equ	0xFDD
 25456                           plusw2	equ	0xFDB
 25457                           fsr2h	equ	0xFDA
 25458                           fsr2l	equ	0xFD9
 25459                           status	equ	0xFD8
 25460                           
 25461 ;; *************** function ___flmul *****************
 25462 ;; Defined at:
 25463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 25464 ;; Parameters:    Size  Location     Type
 25465 ;;  b               4   14[BANK0 ] long 
 25466 ;;  a               4   18[BANK0 ] long 
 25467 ;; Auto vars:     Size  Location     Type
 25468 ;;  prod            4   33[BANK0 ] struct .
 25469 ;;  grs             4   28[BANK0 ] unsigned long 
 25470 ;;  temp            2   37[BANK0 ] struct .
 25471 ;;  bexp            1   32[BANK0 ] unsigned char 
 25472 ;;  aexp            1   27[BANK0 ] unsigned char 
 25473 ;;  sign            1   26[BANK0 ] unsigned char 
 25474 ;; Return value:  Size  Location     Type
 25475 ;;                  4   14[BANK0 ] unsigned char 
 25476 ;; Registers used:
 25477 ;;		wreg, status,2, status,0, prodl, prodh
 25478 ;; Tracked objects:
 25479 ;;		On entry : 0/0
 25480 ;;		On exit  : 0/0
 25481 ;;		Unchanged: 0/0
 25482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25483 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25484 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25486 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25487 ;;Total ram usage:       25 bytes
 25488 ;; Hardware stack levels used:    1
 25489 ;; Hardware stack levels required when called:    4
 25490 ;; This function calls:
 25491 ;;		Nothing
 25492 ;; This function is called by:
 25493 ;;		_data_sys_cal_v1
 25494 ;;		_data_sys_cal_v2
 25495 ;;		_m_interp1_float_fast
 25496 ;;		_cal_diff_hight_to_vol_h
 25497 ;;		_cal_diff_hight_level
 25498 ;;		_cal_diff_hight_to_vol_v
 25499 ;;		_cal_diff_p_to_h
 25500 ;;		_cal_pt100_temperature_in
 25501 ;;		_cal_pt100_temperature_ex
 25502 ;;		_cal_additional_pressute
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506                           	psect	text118
 25507  001728                     __ptext118:
 25508                           	opt stack 0
 25509  001728                     ___flmul:
 25510                           	opt stack 21
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;incstack = 0
 25514  001728  0100               	movlb	0	; () banked
 25515  00172A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 25516  00172C  0B80               	andlw	128
 25517  00172E  0100               	movlb	0	; () banked
 25518  001730  6F7A               	movwf	___flmul@sign& (0+255),b
 25519  001732  0100               	movlb	0	; () banked
 25520  001734  5171               	movf	(___flmul@b+3)& (0+255),w,b
 25521  001736  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 25522  001738  0100               	movlb	0	; () banked
 25523  00173A  6F80               	movwf	___flmul@bexp& (0+255),b
 25524                           
 25525                           ; BSR set to: 0
 25526  00173C  0100               	movlb	0	; () banked
 25527  00173E  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 25528  001740  D002               	goto	l11719
 25529                           
 25530                           ; BSR set to: 0
 25531  001742  0100               	movlb	0	; () banked
 25532  001744  8180               	bsf	___flmul@bexp& (0+255),0,b
 25533  001746                     l11719:
 25534                           
 25535                           ; BSR set to: 0
 25536  001746  0100               	movlb	0	; () banked
 25537  001748  5180               	movf	___flmul@bexp& (0+255),w,b
 25538  00174A  0100               	movlb	0	; () banked
 25539  00174C  B4D8               	btfsc	status,2,c
 25540  00174E  D010               	goto	l11727
 25541                           
 25542                           ; BSR set to: 0
 25543  001750  0100               	movlb	0	; () banked
 25544  001752  2980               	incf	___flmul@bexp& (0+255),w,b
 25545  001754  A4D8               	btfss	status,2,c
 25546  001756  D009               	goto	l11725
 25547                           
 25548                           ; BSR set to: 0
 25549  001758  0E00               	movlw	0
 25550  00175A  0100               	movlb	0	; () banked
 25551  00175C  6F6E               	movwf	___flmul@b& (0+255),b
 25552  00175E  0E00               	movlw	0
 25553  001760  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 25554  001762  0E00               	movlw	0
 25555  001764  6F70               	movwf	(___flmul@b+2)& (0+255),b
 25556  001766  0E00               	movlw	0
 25557  001768  6F71               	movwf	(___flmul@b+3)& (0+255),b
 25558  00176A                     l11725:
 25559                           
 25560                           ; BSR set to: 0
 25561  00176A  0100               	movlb	0	; () banked
 25562  00176C  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 25563  00176E  D009               	goto	l11729
 25564  001770                     l11727:
 25565                           
 25566                           ; BSR set to: 0
 25567  001770  0E00               	movlw	0
 25568  001772  0100               	movlb	0	; () banked
 25569  001774  6F6E               	movwf	___flmul@b& (0+255),b
 25570  001776  0E00               	movlw	0
 25571  001778  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 25572  00177A  0E00               	movlw	0
 25573  00177C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 25574  00177E  0E00               	movlw	0
 25575  001780  6F71               	movwf	(___flmul@b+3)& (0+255),b
 25576  001782                     l11729:
 25577                           
 25578                           ; BSR set to: 0
 25579  001782  0100               	movlb	0	; () banked
 25580  001784  5175               	movf	(___flmul@a+3)& (0+255),w,b
 25581  001786  0B80               	andlw	128
 25582  001788  0100               	movlb	0	; () banked
 25583  00178A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 25584                           
 25585                           ; BSR set to: 0
 25586  00178C  0100               	movlb	0	; () banked
 25587  00178E  5175               	movf	(___flmul@a+3)& (0+255),w,b
 25588  001790  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 25589  001792  0100               	movlb	0	; () banked
 25590  001794  6F7B               	movwf	___flmul@aexp& (0+255),b
 25591                           
 25592                           ; BSR set to: 0
 25593  001796  0100               	movlb	0	; () banked
 25594  001798  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 25595  00179A  D002               	goto	l11737
 25596                           
 25597                           ; BSR set to: 0
 25598  00179C  0100               	movlb	0	; () banked
 25599  00179E  817B               	bsf	___flmul@aexp& (0+255),0,b
 25600  0017A0                     l11737:
 25601                           
 25602                           ; BSR set to: 0
 25603  0017A0  0100               	movlb	0	; () banked
 25604  0017A2  517B               	movf	___flmul@aexp& (0+255),w,b
 25605  0017A4  0100               	movlb	0	; () banked
 25606  0017A6  B4D8               	btfsc	status,2,c
 25607  0017A8  D010               	goto	l11745
 25608                           
 25609                           ; BSR set to: 0
 25610  0017AA  0100               	movlb	0	; () banked
 25611  0017AC  297B               	incf	___flmul@aexp& (0+255),w,b
 25612  0017AE  A4D8               	btfss	status,2,c
 25613  0017B0  D009               	goto	l11743
 25614                           
 25615                           ; BSR set to: 0
 25616  0017B2  0E00               	movlw	0
 25617  0017B4  0100               	movlb	0	; () banked
 25618  0017B6  6F72               	movwf	___flmul@a& (0+255),b
 25619  0017B8  0E00               	movlw	0
 25620  0017BA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 25621  0017BC  0E00               	movlw	0
 25622  0017BE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 25623  0017C0  0E00               	movlw	0
 25624  0017C2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 25625  0017C4                     l11743:
 25626                           
 25627                           ; BSR set to: 0
 25628  0017C4  0100               	movlb	0	; () banked
 25629  0017C6  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 25630  0017C8  D009               	goto	l2405
 25631  0017CA                     l11745:
 25632                           
 25633                           ; BSR set to: 0
 25634  0017CA  0E00               	movlw	0
 25635  0017CC  0100               	movlb	0	; () banked
 25636  0017CE  6F72               	movwf	___flmul@a& (0+255),b
 25637  0017D0  0E00               	movlw	0
 25638  0017D2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 25639  0017D4  0E00               	movlw	0
 25640  0017D6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 25641  0017D8  0E00               	movlw	0
 25642  0017DA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 25643  0017DC                     l2405:
 25644                           
 25645                           ; BSR set to: 0
 25646  0017DC  0100               	movlb	0	; () banked
 25647  0017DE  517B               	movf	___flmul@aexp& (0+255),w,b
 25648  0017E0  0100               	movlb	0	; () banked
 25649  0017E2  B4D8               	btfsc	status,2,c
 25650  0017E4  D005               	goto	l11749
 25651                           
 25652                           ; BSR set to: 0
 25653  0017E6  0100               	movlb	0	; () banked
 25654  0017E8  5180               	movf	___flmul@bexp& (0+255),w,b
 25655  0017EA  0100               	movlb	0	; () banked
 25656  0017EC  A4D8               	btfss	status,2,c
 25657  0017EE  D00A               	goto	l11753
 25658  0017F0                     l11749:
 25659                           
 25660                           ; BSR set to: 0
 25661  0017F0  0E00               	movlw	0
 25662  0017F2  0100               	movlb	0	; () banked
 25663  0017F4  6F6E               	movwf	?___flmul& (0+255),b
 25664  0017F6  0E00               	movlw	0
 25665  0017F8  6F6F               	movwf	(?___flmul+1)& (0+255),b
 25666  0017FA  0E00               	movlw	0
 25667  0017FC  6F70               	movwf	(?___flmul+2)& (0+255),b
 25668  0017FE  0E00               	movlw	0
 25669  001800  6F71               	movwf	(?___flmul+3)& (0+255),b
 25670                           
 25671                           ; BSR set to: 0
 25672  001802  0012               	return	
 25673  001804                     l11753:
 25674                           
 25675                           ; BSR set to: 0
 25676  001804  0100               	movlb	0	; () banked
 25677  001806  5174               	movf	(___flmul@a+2)& (0+255),w,b
 25678  001808  0100               	movlb	0	; () banked
 25679  00180A  036E               	mulwf	___flmul@b& (0+255),b
 25680  00180C  CFF3 F085          	movff	prodl,___flmul@temp
 25681  001810  CFF4 F086          	movff	prodh,___flmul@temp+1
 25682                           
 25683                           ; BSR set to: 0
 25684  001814  0100               	movlb	0	; () banked
 25685  001816  5185               	movf	___flmul@temp& (0+255),w,b
 25686  001818  0100               	movlb	0	; () banked
 25687  00181A  6F7C               	movwf	___flmul@grs& (0+255),b
 25688  00181C  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 25689  00181E  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 25690  001820  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 25691                           
 25692                           ; BSR set to: 0
 25693  001822  0100               	movlb	0	; () banked
 25694  001824  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25695  001826  0100               	movlb	0	; () banked
 25696  001828  6F81               	movwf	___flmul@prod& (0+255),b
 25697  00182A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 25698  00182C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 25699  00182E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 25700  001830  0100               	movlb	0	; () banked
 25701  001832  5173               	movf	(___flmul@a+1)& (0+255),w,b
 25702  001834  0100               	movlb	0	; () banked
 25703  001836  036F               	mulwf	(___flmul@b+1)& (0+255),b
 25704  001838  CFF3 F085          	movff	prodl,___flmul@temp
 25705  00183C  CFF4 F086          	movff	prodh,___flmul@temp+1
 25706                           
 25707                           ; BSR set to: 0
 25708  001840  0100               	movlb	0	; () banked
 25709  001842  5185               	movf	___flmul@temp& (0+255),w,b
 25710  001844  0100               	movlb	0	; () banked
 25711  001846  277C               	addwf	___flmul@grs& (0+255),f,b
 25712  001848  0E00               	movlw	0
 25713  00184A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25714  00184C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25715  00184E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25716                           
 25717                           ; BSR set to: 0
 25718  001850  0100               	movlb	0	; () banked
 25719  001852  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25720  001854  0100               	movlb	0	; () banked
 25721  001856  2781               	addwf	___flmul@prod& (0+255),f,b
 25722  001858  0E00               	movlw	0
 25723  00185A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25724  00185C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25725  00185E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25726  001860  0100               	movlb	0	; () banked
 25727  001862  5172               	movf	___flmul@a& (0+255),w,b
 25728  001864  0100               	movlb	0	; () banked
 25729  001866  0370               	mulwf	(___flmul@b+2)& (0+255),b
 25730  001868  CFF3 F085          	movff	prodl,___flmul@temp
 25731  00186C  CFF4 F086          	movff	prodh,___flmul@temp+1
 25732                           
 25733                           ; BSR set to: 0
 25734  001870  0100               	movlb	0	; () banked
 25735  001872  5185               	movf	___flmul@temp& (0+255),w,b
 25736  001874  0100               	movlb	0	; () banked
 25737  001876  277C               	addwf	___flmul@grs& (0+255),f,b
 25738  001878  0E00               	movlw	0
 25739  00187A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25740  00187C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25741  00187E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25742                           
 25743                           ; BSR set to: 0
 25744  001880  0100               	movlb	0	; () banked
 25745  001882  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25746  001884  0100               	movlb	0	; () banked
 25747  001886  2781               	addwf	___flmul@prod& (0+255),f,b
 25748  001888  0E00               	movlw	0
 25749  00188A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25750  00188C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25751  00188E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25752                           
 25753                           ; BSR set to: 0
 25754  001890  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 25755  001894  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 25756  001898  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 25757  00189C  0100               	movlb	0	; () banked
 25758  00189E  6B7C               	clrf	___flmul@grs& (0+255),b
 25759                           
 25760                           ; BSR set to: 0
 25761  0018A0  0100               	movlb	0	; () banked
 25762  0018A2  5172               	movf	___flmul@a& (0+255),w,b
 25763  0018A4  0100               	movlb	0	; () banked
 25764  0018A6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 25765  0018A8  CFF3 F085          	movff	prodl,___flmul@temp
 25766  0018AC  CFF4 F086          	movff	prodh,___flmul@temp+1
 25767                           
 25768                           ; BSR set to: 0
 25769  0018B0  0100               	movlb	0	; () banked
 25770  0018B2  5185               	movf	___flmul@temp& (0+255),w,b
 25771  0018B4  0100               	movlb	0	; () banked
 25772  0018B6  277C               	addwf	___flmul@grs& (0+255),f,b
 25773  0018B8  0100               	movlb	0	; () banked
 25774  0018BA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25775  0018BC  0100               	movlb	0	; () banked
 25776  0018BE  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25777  0018C0  0E00               	movlw	0
 25778  0018C2  0100               	movlb	0	; () banked
 25779  0018C4  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25780  0018C6  0E00               	movlw	0
 25781  0018C8  0100               	movlb	0	; () banked
 25782  0018CA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25783                           
 25784                           ; BSR set to: 0
 25785  0018CC  0100               	movlb	0	; () banked
 25786  0018CE  5173               	movf	(___flmul@a+1)& (0+255),w,b
 25787  0018D0  0100               	movlb	0	; () banked
 25788  0018D2  036E               	mulwf	___flmul@b& (0+255),b
 25789  0018D4  CFF3 F085          	movff	prodl,___flmul@temp
 25790  0018D8  CFF4 F086          	movff	prodh,___flmul@temp+1
 25791                           
 25792                           ; BSR set to: 0
 25793  0018DC  0100               	movlb	0	; () banked
 25794  0018DE  5185               	movf	___flmul@temp& (0+255),w,b
 25795  0018E0  0100               	movlb	0	; () banked
 25796  0018E2  277C               	addwf	___flmul@grs& (0+255),f,b
 25797  0018E4  0100               	movlb	0	; () banked
 25798  0018E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25799  0018E8  0100               	movlb	0	; () banked
 25800  0018EA  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25801  0018EC  0E00               	movlw	0
 25802  0018EE  0100               	movlb	0	; () banked
 25803  0018F0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25804  0018F2  0E00               	movlw	0
 25805  0018F4  0100               	movlb	0	; () banked
 25806  0018F6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25807                           
 25808                           ; BSR set to: 0
 25809  0018F8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 25810  0018FC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 25811  001900  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 25812  001904  0100               	movlb	0	; () banked
 25813  001906  6B7C               	clrf	___flmul@grs& (0+255),b
 25814  001908  0100               	movlb	0	; () banked
 25815  00190A  5172               	movf	___flmul@a& (0+255),w,b
 25816  00190C  0100               	movlb	0	; () banked
 25817  00190E  036E               	mulwf	___flmul@b& (0+255),b
 25818  001910  CFF3 F085          	movff	prodl,___flmul@temp
 25819  001914  CFF4 F086          	movff	prodh,___flmul@temp+1
 25820                           
 25821                           ; BSR set to: 0
 25822  001918  0100               	movlb	0	; () banked
 25823  00191A  5185               	movf	___flmul@temp& (0+255),w,b
 25824  00191C  0100               	movlb	0	; () banked
 25825  00191E  277C               	addwf	___flmul@grs& (0+255),f,b
 25826  001920  0100               	movlb	0	; () banked
 25827  001922  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25828  001924  0100               	movlb	0	; () banked
 25829  001926  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 25830  001928  0E00               	movlw	0
 25831  00192A  0100               	movlb	0	; () banked
 25832  00192C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 25833  00192E  0E00               	movlw	0
 25834  001930  0100               	movlb	0	; () banked
 25835  001932  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 25836                           
 25837                           ; BSR set to: 0
 25838  001934  0100               	movlb	0	; () banked
 25839  001936  5174               	movf	(___flmul@a+2)& (0+255),w,b
 25840  001938  0100               	movlb	0	; () banked
 25841  00193A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 25842  00193C  CFF3 F085          	movff	prodl,___flmul@temp
 25843  001940  CFF4 F086          	movff	prodh,___flmul@temp+1
 25844  001944  0100               	movlb	0	; () banked
 25845  001946  5185               	movf	___flmul@temp& (0+255),w,b
 25846  001948  0100               	movlb	0	; () banked
 25847  00194A  2781               	addwf	___flmul@prod& (0+255),f,b
 25848  00194C  0100               	movlb	0	; () banked
 25849  00194E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25850  001950  0100               	movlb	0	; () banked
 25851  001952  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25852  001954  0E00               	movlw	0
 25853  001956  0100               	movlb	0	; () banked
 25854  001958  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25855  00195A  0E00               	movlw	0
 25856  00195C  0100               	movlb	0	; () banked
 25857  00195E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25858                           
 25859                           ; BSR set to: 0
 25860  001960  0100               	movlb	0	; () banked
 25861  001962  5173               	movf	(___flmul@a+1)& (0+255),w,b
 25862  001964  0100               	movlb	0	; () banked
 25863  001966  0370               	mulwf	(___flmul@b+2)& (0+255),b
 25864  001968  CFF3 F085          	movff	prodl,___flmul@temp
 25865  00196C  CFF4 F086          	movff	prodh,___flmul@temp+1
 25866                           
 25867                           ; BSR set to: 0
 25868  001970  0100               	movlb	0	; () banked
 25869  001972  5185               	movf	___flmul@temp& (0+255),w,b
 25870  001974  0100               	movlb	0	; () banked
 25871  001976  2781               	addwf	___flmul@prod& (0+255),f,b
 25872  001978  0100               	movlb	0	; () banked
 25873  00197A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25874  00197C  0100               	movlb	0	; () banked
 25875  00197E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25876  001980  0E00               	movlw	0
 25877  001982  0100               	movlb	0	; () banked
 25878  001984  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25879  001986  0E00               	movlw	0
 25880  001988  0100               	movlb	0	; () banked
 25881  00198A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25882  00198C  0100               	movlb	0	; () banked
 25883  00198E  5174               	movf	(___flmul@a+2)& (0+255),w,b
 25884  001990  0100               	movlb	0	; () banked
 25885  001992  0370               	mulwf	(___flmul@b+2)& (0+255),b
 25886  001994  CFF3 F085          	movff	prodl,___flmul@temp
 25887  001998  CFF4 F086          	movff	prodh,___flmul@temp+1
 25888                           
 25889                           ; BSR set to: 0
 25890  00199C  0100               	movlb	0	; () banked
 25891  00199E  5185               	movf	___flmul@temp& (0+255),w,b
 25892  0019A0  0100               	movlb	0	; () banked
 25893  0019A2  6F76               	movwf	??___flmul& (0+255),b
 25894  0019A4  0100               	movlb	0	; () banked
 25895  0019A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 25896  0019A8  0100               	movlb	0	; () banked
 25897  0019AA  6F77               	movwf	(??___flmul+1)& (0+255),b
 25898  0019AC  0100               	movlb	0	; () banked
 25899  0019AE  6B78               	clrf	(??___flmul+2)& (0+255),b
 25900  0019B0  0100               	movlb	0	; () banked
 25901  0019B2  6B79               	clrf	(??___flmul+3)& (0+255),b
 25902  0019B4  C078  F079         	movff	??___flmul+2,??___flmul+3
 25903  0019B8  C077  F078         	movff	??___flmul+1,??___flmul+2
 25904  0019BC  C076  F077         	movff	??___flmul,??___flmul+1
 25905  0019C0  0100               	movlb	0	; () banked
 25906  0019C2  6B76               	clrf	??___flmul& (0+255),b
 25907  0019C4  0100               	movlb	0	; () banked
 25908  0019C6  5176               	movf	??___flmul& (0+255),w,b
 25909  0019C8  0100               	movlb	0	; () banked
 25910  0019CA  2781               	addwf	___flmul@prod& (0+255),f,b
 25911  0019CC  0100               	movlb	0	; () banked
 25912  0019CE  5177               	movf	(??___flmul+1)& (0+255),w,b
 25913  0019D0  0100               	movlb	0	; () banked
 25914  0019D2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25915  0019D4  0100               	movlb	0	; () banked
 25916  0019D6  5178               	movf	(??___flmul+2)& (0+255),w,b
 25917  0019D8  0100               	movlb	0	; () banked
 25918  0019DA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25919  0019DC  0100               	movlb	0	; () banked
 25920  0019DE  5179               	movf	(??___flmul+3)& (0+255),w,b
 25921  0019E0  0100               	movlb	0	; () banked
 25922  0019E2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25923                           
 25924                           ; BSR set to: 0
 25925  0019E4  C07C  F076         	movff	___flmul@grs,??___flmul
 25926  0019E8  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 25927  0019EC  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 25928  0019F0  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 25929  0019F4  0E19               	movlw	25
 25930  0019F6  D006               	goto	u10320
 25931  0019F8                     u10325:
 25932  0019F8  0100               	movlb	0	; () banked
 25933  0019FA  90D8               	bcf	status,0,c
 25934  0019FC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 25935  0019FE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 25936  001A00  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 25937  001A02  3376               	rrcf	??___flmul& (0+255),f,b
 25938  001A04                     u10320:
 25939  001A04  2EE8               	decfsz	wreg,f,c
 25940  001A06  D7F8               	goto	u10325
 25941  001A08  0100               	movlb	0	; () banked
 25942  001A0A  5176               	movf	??___flmul& (0+255),w,b
 25943  001A0C  0100               	movlb	0	; () banked
 25944  001A0E  2781               	addwf	___flmul@prod& (0+255),f,b
 25945  001A10  0100               	movlb	0	; () banked
 25946  001A12  5177               	movf	(??___flmul+1)& (0+255),w,b
 25947  001A14  0100               	movlb	0	; () banked
 25948  001A16  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 25949  001A18  0100               	movlb	0	; () banked
 25950  001A1A  5178               	movf	(??___flmul+2)& (0+255),w,b
 25951  001A1C  0100               	movlb	0	; () banked
 25952  001A1E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 25953  001A20  0100               	movlb	0	; () banked
 25954  001A22  5179               	movf	(??___flmul+3)& (0+255),w,b
 25955  001A24  0100               	movlb	0	; () banked
 25956  001A26  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 25957                           
 25958                           ; BSR set to: 0
 25959  001A28  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 25960  001A2C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 25961  001A30  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 25962  001A34  0100               	movlb	0	; () banked
 25963  001A36  6B7C               	clrf	___flmul@grs& (0+255),b
 25964                           
 25965                           ; BSR set to: 0
 25966  001A38  0100               	movlb	0	; () banked
 25967  001A3A  517B               	movf	___flmul@aexp& (0+255),w,b
 25968  001A3C  C080  F076         	movff	___flmul@bexp,??___flmul
 25969  001A40  0100               	movlb	0	; () banked
 25970  001A42  6B77               	clrf	(??___flmul+1)& (0+255),b
 25971  001A44  0100               	movlb	0	; () banked
 25972  001A46  2776               	addwf	??___flmul& (0+255),f,b
 25973  001A48  0E00               	movlw	0
 25974  001A4A  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 25975  001A4C  0E82               	movlw	130
 25976  001A4E  0100               	movlb	0	; () banked
 25977  001A50  2576               	addwf	??___flmul& (0+255),w,b
 25978  001A52  0100               	movlb	0	; () banked
 25979  001A54  6F85               	movwf	___flmul@temp& (0+255),b
 25980  001A56  0EFF               	movlw	255
 25981  001A58  0100               	movlb	0	; () banked
 25982  001A5A  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 25983  001A5C  0100               	movlb	0	; () banked
 25984  001A5E  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 25985  001A60  D015               	goto	l11801
 25986  001A62                     l11795:
 25987                           
 25988                           ; BSR set to: 0
 25989  001A62  0100               	movlb	0	; () banked
 25990  001A64  90D8               	bcf	status,0,c
 25991  001A66  3781               	rlcf	___flmul@prod& (0+255),f,b
 25992  001A68  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 25993  001A6A  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 25994  001A6C  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 25995                           
 25996                           ; BSR set to: 0
 25997  001A6E  0100               	movlb	0	; () banked
 25998  001A70  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 25999  001A72  D002               	goto	l2412
 26000                           
 26001                           ; BSR set to: 0
 26002  001A74  0100               	movlb	0	; () banked
 26003  001A76  8181               	bsf	___flmul@prod& (0+255),0,b
 26004  001A78                     l2412:
 26005                           
 26006                           ; BSR set to: 0
 26007  001A78  0100               	movlb	0	; () banked
 26008  001A7A  90D8               	bcf	status,0,c
 26009  001A7C  377C               	rlcf	___flmul@grs& (0+255),f,b
 26010  001A7E  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 26011  001A80  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 26012  001A82  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 26013  001A84  0100               	movlb	0	; () banked
 26014  001A86  0785               	decf	___flmul@temp& (0+255),f,b
 26015  001A88  A0D8               	btfss	status,0,c
 26016  001A8A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 26017  001A8C                     l11801:
 26018                           
 26019                           ; BSR set to: 0
 26020  001A8C  0100               	movlb	0	; () banked
 26021  001A8E  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 26022  001A90  D7E8               	goto	l11795
 26023                           
 26024                           ; BSR set to: 0
 26025                           
 26026                           ; BSR set to: 0
 26027  001A92  0E00               	movlw	0
 26028  001A94  0100               	movlb	0	; () banked
 26029  001A96  6F7B               	movwf	___flmul@aexp& (0+255),b
 26030                           
 26031                           ; BSR set to: 0
 26032  001A98  0100               	movlb	0	; () banked
 26033  001A9A  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 26034  001A9C  D024               	goto	l2414
 26035                           
 26036                           ; BSR set to: 0
 26037  001A9E  0EFF               	movlw	255
 26038  001AA0  0100               	movlb	0	; () banked
 26039  001AA2  157C               	andwf	___flmul@grs& (0+255),w,b
 26040  001AA4  0100               	movlb	0	; () banked
 26041  001AA6  6F76               	movwf	??___flmul& (0+255),b
 26042  001AA8  0EFF               	movlw	255
 26043  001AAA  0100               	movlb	0	; () banked
 26044  001AAC  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 26045  001AAE  0100               	movlb	0	; () banked
 26046  001AB0  6F77               	movwf	(??___flmul+1)& (0+255),b
 26047  001AB2  0EFF               	movlw	255
 26048  001AB4  0100               	movlb	0	; () banked
 26049  001AB6  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 26050  001AB8  0100               	movlb	0	; () banked
 26051  001ABA  6F78               	movwf	(??___flmul+2)& (0+255),b
 26052  001ABC  0E7F               	movlw	127
 26053  001ABE  0100               	movlb	0	; () banked
 26054  001AC0  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 26055  001AC2  0100               	movlb	0	; () banked
 26056  001AC4  6F79               	movwf	(??___flmul+3)& (0+255),b
 26057  001AC6  0100               	movlb	0	; () banked
 26058  001AC8  5176               	movf	??___flmul& (0+255),w,b
 26059  001ACA  0100               	movlb	0	; () banked
 26060  001ACC  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 26061  001ACE  0100               	movlb	0	; () banked
 26062  001AD0  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 26063  001AD2  0100               	movlb	0	; () banked
 26064  001AD4  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 26065  001AD6  A4D8               	btfss	status,2,c
 26066  001AD8  D003               	goto	l11811
 26067                           
 26068                           ; BSR set to: 0
 26069                           
 26070                           ; BSR set to: 0
 26071  001ADA  0100               	movlb	0	; () banked
 26072  001ADC  A181               	btfss	___flmul@prod& (0+255),0,b
 26073  001ADE  D003               	goto	l2414
 26074  001AE0                     l11811:
 26075                           
 26076                           ; BSR set to: 0
 26077  001AE0  0E01               	movlw	1
 26078  001AE2  0100               	movlb	0	; () banked
 26079  001AE4  6F7B               	movwf	___flmul@aexp& (0+255),b
 26080  001AE6                     l2414:
 26081                           
 26082                           ; BSR set to: 0
 26083  001AE6  0100               	movlb	0	; () banked
 26084  001AE8  517B               	movf	___flmul@aexp& (0+255),w,b
 26085  001AEA  0100               	movlb	0	; () banked
 26086  001AEC  B4D8               	btfsc	status,2,c
 26087  001AEE  D023               	goto	l11821
 26088                           
 26089                           ; BSR set to: 0
 26090  001AF0  0E01               	movlw	1
 26091  001AF2  0100               	movlb	0	; () banked
 26092  001AF4  2781               	addwf	___flmul@prod& (0+255),f,b
 26093  001AF6  0E00               	movlw	0
 26094  001AF8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 26095  001AFA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 26096  001AFC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 26097                           
 26098                           ; BSR set to: 0
 26099  001AFE  0100               	movlb	0	; () banked
 26100  001B00  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 26101  001B02  D019               	goto	l11821
 26102                           
 26103                           ; BSR set to: 0
 26104  001B04  C081  F076         	movff	___flmul@prod,??___flmul
 26105  001B08  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 26106  001B0C  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 26107  001B10  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 26108  001B14  0100               	movlb	0	; () banked
 26109  001B16  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 26110  001B18  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 26111  001B1A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 26112  001B1C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 26113  001B1E  3376               	rrcf	??___flmul& (0+255),f,b
 26114  001B20  C076  F081         	movff	??___flmul,___flmul@prod
 26115  001B24  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 26116  001B28  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 26117  001B2C  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 26118                           
 26119                           ; BSR set to: 0
 26120  001B30  0100               	movlb	0	; () banked
 26121  001B32  4B85               	infsnz	___flmul@temp& (0+255),f,b
 26122  001B34  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 26123  001B36                     l11821:
 26124                           
 26125                           ; BSR set to: 0
 26126  001B36  0100               	movlb	0	; () banked
 26127  001B38  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 26128  001B3A  D010               	goto	l11825
 26129  001B3C  0100               	movlb	0	; () banked
 26130  001B3E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 26131  001B40  E104               	bnz	u10400
 26132  001B42  0100               	movlb	0	; () banked
 26133  001B44  2985               	incf	___flmul@temp& (0+255),w,b
 26134  001B46  A0D8               	btfss	status,0,c
 26135  001B48  D009               	goto	l11825
 26136  001B4A                     u10400:
 26137                           
 26138                           ; BSR set to: 0
 26139  001B4A  0E00               	movlw	0
 26140  001B4C  0100               	movlb	0	; () banked
 26141  001B4E  6F81               	movwf	___flmul@prod& (0+255),b
 26142  001B50  0E00               	movlw	0
 26143  001B52  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 26144  001B54  0E80               	movlw	128
 26145  001B56  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 26146  001B58  0E7F               	movlw	127
 26147  001B5A  D02B               	goto	L12
 26148  001B5C                     l11825:
 26149                           
 26150                           ; BSR set to: 0
 26151  001B5C  0100               	movlb	0	; () banked
 26152  001B5E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 26153  001B60  D007               	goto	l11827
 26154  001B62  0100               	movlb	0	; () banked
 26155  001B64  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 26156  001B66  E111               	bnz	l2422
 26157  001B68  0100               	movlb	0	; () banked
 26158  001B6A  0585               	decf	___flmul@temp& (0+255),w,b
 26159  001B6C  B0D8               	btfsc	status,0,c
 26160  001B6E  D00D               	goto	l2422
 26161  001B70                     l11827:
 26162                           
 26163                           ; BSR set to: 0
 26164  001B70  0E00               	movlw	0
 26165  001B72  0100               	movlb	0	; () banked
 26166  001B74  6F81               	movwf	___flmul@prod& (0+255),b
 26167  001B76  0E00               	movlw	0
 26168  001B78  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 26169  001B7A  0E00               	movlw	0
 26170  001B7C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 26171  001B7E  0E00               	movlw	0
 26172  001B80  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 26173  001B82  0E00               	movlw	0
 26174  001B84  0100               	movlb	0	; () banked
 26175  001B86  6F7A               	movwf	___flmul@sign& (0+255),b
 26176  001B88  D015               	goto	l11837
 26177  001B8A                     l2422:
 26178                           
 26179                           ; BSR set to: 0
 26180  001B8A  C085  F080         	movff	___flmul@temp,___flmul@bexp
 26181                           
 26182                           ; BSR set to: 0
 26183  001B8E  0EFF               	movlw	255
 26184  001B90  0100               	movlb	0	; () banked
 26185  001B92  1781               	andwf	___flmul@prod& (0+255),f,b
 26186  001B94  0EFF               	movlw	255
 26187  001B96  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 26188  001B98  0E7F               	movlw	127
 26189  001B9A  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 26190  001B9C  0E00               	movlw	0
 26191  001B9E  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 26192                           
 26193                           ; BSR set to: 0
 26194  001BA0  0100               	movlb	0	; () banked
 26195  001BA2  A180               	btfss	___flmul@bexp& (0+255),0,b
 26196  001BA4  D002               	goto	l11835
 26197                           
 26198                           ; BSR set to: 0
 26199  001BA6  0100               	movlb	0	; () banked
 26200  001BA8  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 26201  001BAA                     l11835:
 26202                           
 26203                           ; BSR set to: 0
 26204  001BAA  0100               	movlb	0	; () banked
 26205  001BAC  90D8               	bcf	status,0,c
 26206  001BAE  3180               	rrcf	___flmul@bexp& (0+255),w,b
 26207  001BB0  0100               	movlb	0	; () banked
 26208  001BB2                     L12:
 26209  001BB2  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 26210  001BB4                     l11837:
 26211                           
 26212                           ; BSR set to: 0
 26213  001BB4  0100               	movlb	0	; () banked
 26214  001BB6  517A               	movf	___flmul@sign& (0+255),w,b
 26215  001BB8  0100               	movlb	0	; () banked
 26216  001BBA  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 26217                           
 26218                           ; BSR set to: 0
 26219  001BBC  C081  F06E         	movff	___flmul@prod,?___flmul
 26220  001BC0  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 26221  001BC4  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 26222  001BC8  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 26223  001BCC  0012               	return	
 26224  001BCE                     __end_of___flmul:
 26225                           	opt stack 0
 26226                           tosu	equ	0xFFF
 26227                           tosh	equ	0xFFE
 26228                           tosl	equ	0xFFD
 26229                           pclath	equ	0xFFA
 26230                           tblptru	equ	0xFF8
 26231                           tblptrh	equ	0xFF7
 26232                           tblptrl	equ	0xFF6
 26233                           tablat	equ	0xFF5
 26234                           prodh	equ	0xFF4
 26235                           prodl	equ	0xFF3
 26236                           intcon	equ	0xFF2
 26237                           indf0	equ	0xFEF
 26238                           postinc0	equ	0xFEE
 26239                           fsr0h	equ	0xFEA
 26240                           fsr0l	equ	0xFE9
 26241                           wreg	equ	0xFE8
 26242                           postinc1	equ	0xFE6
 26243                           postdec1	equ	0xFE5
 26244                           plusw1	equ	0xFE3
 26245                           fsr1h	equ	0xFE2
 26246                           fsr1l	equ	0xFE1
 26247                           indf2	equ	0xFDF
 26248                           postinc2	equ	0xFDE
 26249                           postdec2	equ	0xFDD
 26250                           plusw2	equ	0xFDB
 26251                           fsr2h	equ	0xFDA
 26252                           fsr2l	equ	0xFD9
 26253                           status	equ	0xFD8
 26254                           
 26255 ;; *************** function ___fldiv *****************
 26256 ;; Defined at:
 26257 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 26258 ;; Parameters:    Size  Location     Type
 26259 ;;  b               4   39[BANK0 ] unsigned char 
 26260 ;;  a               4   43[BANK0 ] unsigned char 
 26261 ;; Auto vars:     Size  Location     Type
 26262 ;;  grs             4   58[BANK0 ] unsigned long 
 26263 ;;  rem             4   52[BANK0 ] unsigned long 
 26264 ;;  new_exp         2   56[BANK0 ] int 
 26265 ;;  aexp            1   63[BANK0 ] unsigned char 
 26266 ;;  bexp            1   62[BANK0 ] unsigned char 
 26267 ;;  sign            1   51[BANK0 ] unsigned char 
 26268 ;; Return value:  Size  Location     Type
 26269 ;;                  4   39[BANK0 ] unsigned char 
 26270 ;; Registers used:
 26271 ;;		wreg, status,2, status,0
 26272 ;; Tracked objects:
 26273 ;;		On entry : 0/0
 26274 ;;		On exit  : 0/0
 26275 ;;		Unchanged: 0/0
 26276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26277 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26278 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26279 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26280 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26281 ;;Total ram usage:       25 bytes
 26282 ;; Hardware stack levels used:    1
 26283 ;; Hardware stack levels required when called:    4
 26284 ;; This function calls:
 26285 ;;		Nothing
 26286 ;; This function is called by:
 26287 ;;		_data_sys_cal_v1
 26288 ;;		_data_sys_cal_v2
 26289 ;;		_m_interp1_float_fast
 26290 ;;		_cal_diff_hight_to_vol_h
 26291 ;;		_cal_diff_hight_level
 26292 ;;		_cal_diff_hight_to_vol_v
 26293 ;;		_cal_diff_p_to_h
 26294 ;;		_cal_pt100_temperature_in
 26295 ;;		_cal_pt100_temperature_ex
 26296 ;;		_cal_additional_pressute
 26297 ;; This function uses a non-reentrant model
 26298 ;;
 26299                           
 26300                           	psect	text119
 26301  002490                     __ptext119:
 26302                           	opt stack 0
 26303  002490                     ___fldiv:
 26304                           	opt stack 21
 26305                           
 26306                           ; BSR set to: 0
 26307                           ;incstack = 0
 26308  002490  0100               	movlb	0	; () banked
 26309  002492  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 26310  002494  0B80               	andlw	128
 26311  002496  0100               	movlb	0	; () banked
 26312  002498  6F93               	movwf	___fldiv@sign& (0+255),b
 26313  00249A  0100               	movlb	0	; () banked
 26314  00249C  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 26315  00249E  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 26316  0024A0  0100               	movlb	0	; () banked
 26317  0024A2  6F9E               	movwf	___fldiv@bexp& (0+255),b
 26318                           
 26319                           ; BSR set to: 0
 26320  0024A4  0100               	movlb	0	; () banked
 26321  0024A6  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 26322  0024A8  D002               	goto	l11583
 26323                           
 26324                           ; BSR set to: 0
 26325  0024AA  0100               	movlb	0	; () banked
 26326  0024AC  819E               	bsf	___fldiv@bexp& (0+255),0,b
 26327  0024AE                     l11583:
 26328                           
 26329                           ; BSR set to: 0
 26330  0024AE  0100               	movlb	0	; () banked
 26331  0024B0  519E               	movf	___fldiv@bexp& (0+255),w,b
 26332  0024B2  0100               	movlb	0	; () banked
 26333  0024B4  B4D8               	btfsc	status,2,c
 26334  0024B6  D012               	goto	l11593
 26335                           
 26336                           ; BSR set to: 0
 26337  0024B8  0100               	movlb	0	; () banked
 26338  0024BA  299E               	incf	___fldiv@bexp& (0+255),w,b
 26339  0024BC  A4D8               	btfss	status,2,c
 26340  0024BE  D009               	goto	l11589
 26341                           
 26342                           ; BSR set to: 0
 26343  0024C0  0E00               	movlw	0
 26344  0024C2  0100               	movlb	0	; () banked
 26345  0024C4  6F87               	movwf	___fldiv@b& (0+255),b
 26346  0024C6  0E00               	movlw	0
 26347  0024C8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26348  0024CA  0E00               	movlw	0
 26349  0024CC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26350  0024CE  0E00               	movlw	0
 26351  0024D0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26352  0024D2                     l11589:
 26353                           
 26354                           ; BSR set to: 0
 26355  0024D2  0100               	movlb	0	; () banked
 26356  0024D4  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 26357                           
 26358                           ; BSR set to: 0
 26359  0024D6  0E00               	movlw	0
 26360  0024D8  0100               	movlb	0	; () banked
 26361  0024DA  D008               	goto	L13
 26362  0024DC                     l11593:
 26363                           
 26364                           ; BSR set to: 0
 26365  0024DC  0E00               	movlw	0
 26366  0024DE  0100               	movlb	0	; () banked
 26367  0024E0  6F87               	movwf	___fldiv@b& (0+255),b
 26368  0024E2  0E00               	movlw	0
 26369  0024E4  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26370  0024E6  0E00               	movlw	0
 26371  0024E8  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26372  0024EA  0E00               	movlw	0
 26373  0024EC                     L13:
 26374  0024EC  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26375                           
 26376                           ; BSR set to: 0
 26377                           
 26378                           ; BSR set to: 0
 26379  0024EE  0100               	movlb	0	; () banked
 26380  0024F0  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 26381  0024F2  0B80               	andlw	128
 26382  0024F4  0100               	movlb	0	; () banked
 26383  0024F6  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 26384                           
 26385                           ; BSR set to: 0
 26386  0024F8  0100               	movlb	0	; () banked
 26387  0024FA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 26388  0024FC  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 26389  0024FE  0100               	movlb	0	; () banked
 26390  002500  6F9F               	movwf	___fldiv@aexp& (0+255),b
 26391                           
 26392                           ; BSR set to: 0
 26393  002502  0100               	movlb	0	; () banked
 26394  002504  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 26395  002506  D002               	goto	l11603
 26396                           
 26397                           ; BSR set to: 0
 26398  002508  0100               	movlb	0	; () banked
 26399  00250A  819F               	bsf	___fldiv@aexp& (0+255),0,b
 26400  00250C                     l11603:
 26401                           
 26402                           ; BSR set to: 0
 26403  00250C  0100               	movlb	0	; () banked
 26404  00250E  519F               	movf	___fldiv@aexp& (0+255),w,b
 26405  002510  0100               	movlb	0	; () banked
 26406  002512  B4D8               	btfsc	status,2,c
 26407  002514  D012               	goto	l11613
 26408                           
 26409                           ; BSR set to: 0
 26410  002516  0100               	movlb	0	; () banked
 26411  002518  299F               	incf	___fldiv@aexp& (0+255),w,b
 26412  00251A  A4D8               	btfss	status,2,c
 26413  00251C  D009               	goto	l11609
 26414                           
 26415                           ; BSR set to: 0
 26416  00251E  0E00               	movlw	0
 26417  002520  0100               	movlb	0	; () banked
 26418  002522  6F8B               	movwf	___fldiv@a& (0+255),b
 26419  002524  0E00               	movlw	0
 26420  002526  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 26421  002528  0E00               	movlw	0
 26422  00252A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 26423  00252C  0E00               	movlw	0
 26424  00252E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 26425  002530                     l11609:
 26426                           
 26427                           ; BSR set to: 0
 26428  002530  0100               	movlb	0	; () banked
 26429  002532  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 26430                           
 26431                           ; BSR set to: 0
 26432  002534  0E00               	movlw	0
 26433  002536  0100               	movlb	0	; () banked
 26434  002538  D008               	goto	L14
 26435  00253A                     l11613:
 26436                           
 26437                           ; BSR set to: 0
 26438  00253A  0E00               	movlw	0
 26439  00253C  0100               	movlb	0	; () banked
 26440  00253E  6F8B               	movwf	___fldiv@a& (0+255),b
 26441  002540  0E00               	movlw	0
 26442  002542  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 26443  002544  0E00               	movlw	0
 26444  002546  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 26445  002548  0E00               	movlw	0
 26446  00254A                     L14:
 26447  00254A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 26448                           
 26449                           ; BSR set to: 0
 26450                           
 26451                           ; BSR set to: 0
 26452  00254C  0100               	movlb	0	; () banked
 26453  00254E  518B               	movf	___fldiv@a& (0+255),w,b
 26454  002550  0100               	movlb	0	; () banked
 26455  002552  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 26456  002554  0100               	movlb	0	; () banked
 26457  002556  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 26458  002558  0100               	movlb	0	; () banked
 26459  00255A  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 26460  00255C  A4D8               	btfss	status,2,c
 26461  00255E  D017               	goto	l11625
 26462                           
 26463                           ; BSR set to: 0
 26464  002560  0E00               	movlw	0
 26465  002562  0100               	movlb	0	; () banked
 26466  002564  6F87               	movwf	___fldiv@b& (0+255),b
 26467  002566  0E00               	movlw	0
 26468  002568  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26469  00256A  0E00               	movlw	0
 26470  00256C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26471  00256E  0E00               	movlw	0
 26472  002570  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26473                           
 26474                           ; BSR set to: 0
 26475  002572  0100               	movlb	0	; () banked
 26476  002574  0E80               	movlw	128
 26477  002576  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 26478  002578  0E7F               	movlw	127
 26479  00257A  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 26480                           
 26481                           ; BSR set to: 0
 26482  00257C  C087  F087         	movff	___fldiv@b,?___fldiv
 26483  002580  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 26484  002584  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 26485  002588  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 26486                           
 26487                           ; BSR set to: 0
 26488  00258C  0012               	return	
 26489  00258E                     l11625:
 26490                           
 26491                           ; BSR set to: 0
 26492  00258E  0100               	movlb	0	; () banked
 26493  002590  519E               	movf	___fldiv@bexp& (0+255),w,b
 26494  002592  0100               	movlb	0	; () banked
 26495  002594  A4D8               	btfss	status,2,c
 26496  002596  D012               	goto	l11633
 26497                           
 26498                           ; BSR set to: 0
 26499  002598  0E00               	movlw	0
 26500  00259A  0100               	movlb	0	; () banked
 26501  00259C  6F87               	movwf	___fldiv@b& (0+255),b
 26502  00259E  0E00               	movlw	0
 26503  0025A0  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26504  0025A2  0E00               	movlw	0
 26505  0025A4  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26506  0025A6  0E00               	movlw	0
 26507  0025A8  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26508                           
 26509                           ; BSR set to: 0
 26510  0025AA  C087  F087         	movff	___fldiv@b,?___fldiv
 26511  0025AE  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 26512  0025B2  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 26513  0025B6  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 26514                           
 26515                           ; BSR set to: 0
 26516  0025BA  0012               	return	
 26517  0025BC                     l11633:
 26518                           
 26519                           ; BSR set to: 0
 26520  0025BC  0100               	movlb	0	; () banked
 26521  0025BE  519F               	movf	___fldiv@aexp& (0+255),w,b
 26522  0025C0  0100               	movlb	0	; () banked
 26523  0025C2  6F8F               	movwf	??___fldiv& (0+255),b
 26524  0025C4  6B90               	clrf	(??___fldiv+1)& (0+255),b
 26525  0025C6  0100               	movlb	0	; () banked
 26526  0025C8  1F8F               	comf	??___fldiv& (0+255),f,b
 26527  0025CA  1F90               	comf	(??___fldiv+1)& (0+255),f,b
 26528  0025CC  4B8F               	infsnz	??___fldiv& (0+255),f,b
 26529  0025CE  2B90               	incf	(??___fldiv+1)& (0+255),f,b
 26530  0025D0  0100               	movlb	0	; () banked
 26531  0025D2  519E               	movf	___fldiv@bexp& (0+255),w,b
 26532  0025D4  0100               	movlb	0	; () banked
 26533  0025D6  6F91               	movwf	(??___fldiv+2)& (0+255),b
 26534  0025D8  6B92               	clrf	(??___fldiv+3)& (0+255),b
 26535  0025DA  0100               	movlb	0	; () banked
 26536  0025DC  518F               	movf	??___fldiv& (0+255),w,b
 26537  0025DE  0100               	movlb	0	; () banked
 26538  0025E0  2791               	addwf	(??___fldiv+2)& (0+255),f,b
 26539  0025E2  0100               	movlb	0	; () banked
 26540  0025E4  5190               	movf	(??___fldiv+1)& (0+255),w,b
 26541  0025E6  0100               	movlb	0	; () banked
 26542  0025E8  2392               	addwfc	(??___fldiv+3)& (0+255),f,b
 26543  0025EA  0E7F               	movlw	127
 26544  0025EC  0100               	movlb	0	; () banked
 26545  0025EE  2591               	addwf	(??___fldiv+2)& (0+255),w,b
 26546  0025F0  0100               	movlb	0	; () banked
 26547  0025F2  6F98               	movwf	___fldiv@new_exp& (0+255),b
 26548  0025F4  0E00               	movlw	0
 26549  0025F6  0100               	movlb	0	; () banked
 26550  0025F8  2192               	addwfc	(??___fldiv+3)& (0+255),w,b
 26551  0025FA  0100               	movlb	0	; () banked
 26552  0025FC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 26553                           
 26554                           ; BSR set to: 0
 26555  0025FE  C087  F094         	movff	___fldiv@b,___fldiv@rem
 26556  002602  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 26557  002606  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 26558  00260A  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 26559                           
 26560                           ; BSR set to: 0
 26561  00260E  0E00               	movlw	0
 26562  002610  0100               	movlb	0	; () banked
 26563  002612  6F87               	movwf	___fldiv@b& (0+255),b
 26564  002614  0E00               	movlw	0
 26565  002616  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26566  002618  0E00               	movlw	0
 26567  00261A  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26568  00261C  0E00               	movlw	0
 26569  00261E  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26570                           
 26571                           ; BSR set to: 0
 26572  002620  0E00               	movlw	0
 26573  002622  0100               	movlb	0	; () banked
 26574  002624  6F9A               	movwf	___fldiv@grs& (0+255),b
 26575  002626  0E00               	movlw	0
 26576  002628  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 26577  00262A  0E00               	movlw	0
 26578  00262C  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 26579  00262E  0E00               	movlw	0
 26580  002630  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 26581                           
 26582                           ; BSR set to: 0
 26583  002632  0E00               	movlw	0
 26584  002634  0100               	movlb	0	; () banked
 26585  002636  6F9F               	movwf	___fldiv@aexp& (0+255),b
 26586  002638  D042               	goto	l2375
 26587  00263A                     l11643:
 26588                           
 26589                           ; BSR set to: 0
 26590  00263A  0100               	movlb	0	; () banked
 26591  00263C  519F               	movf	___fldiv@aexp& (0+255),w,b
 26592  00263E  0100               	movlb	0	; () banked
 26593  002640  B4D8               	btfsc	status,2,c
 26594  002642  D017               	goto	l11651
 26595                           
 26596                           ; BSR set to: 0
 26597  002644  0100               	movlb	0	; () banked
 26598  002646  90D8               	bcf	status,0,c
 26599  002648  3794               	rlcf	___fldiv@rem& (0+255),f,b
 26600  00264A  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 26601  00264C  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 26602  00264E  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 26603  002650  0100               	movlb	0	; () banked
 26604  002652  90D8               	bcf	status,0,c
 26605  002654  3787               	rlcf	___fldiv@b& (0+255),f,b
 26606  002656  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 26607  002658  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 26608  00265A  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 26609                           
 26610                           ; BSR set to: 0
 26611  00265C  0100               	movlb	0	; () banked
 26612  00265E  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 26613  002660  D002               	goto	l2378
 26614                           
 26615                           ; BSR set to: 0
 26616  002662  0100               	movlb	0	; () banked
 26617  002664  8187               	bsf	___fldiv@b& (0+255),0,b
 26618  002666                     l2378:
 26619                           
 26620                           ; BSR set to: 0
 26621  002666  0100               	movlb	0	; () banked
 26622  002668  90D8               	bcf	status,0,c
 26623  00266A  379A               	rlcf	___fldiv@grs& (0+255),f,b
 26624  00266C  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 26625  00266E  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 26626  002670  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 26627  002672                     l11651:
 26628                           
 26629                           ; BSR set to: 0
 26630  002672  0100               	movlb	0	; () banked
 26631  002674  518B               	movf	___fldiv@a& (0+255),w,b
 26632  002676  0100               	movlb	0	; () banked
 26633  002678  5D94               	subwf	___fldiv@rem& (0+255),w,b
 26634  00267A  0100               	movlb	0	; () banked
 26635  00267C  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 26636  00267E  0100               	movlb	0	; () banked
 26637  002680  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 26638  002682  0100               	movlb	0	; () banked
 26639  002684  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 26640  002686  0100               	movlb	0	; () banked
 26641  002688  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 26642  00268A  0100               	movlb	0	; () banked
 26643  00268C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 26644  00268E  0100               	movlb	0	; () banked
 26645  002690  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 26646  002692  A0D8               	btfss	status,0,c
 26647  002694  D012               	goto	l11657
 26648                           
 26649                           ; BSR set to: 0
 26650  002696  0100               	movlb	0	; () banked
 26651  002698  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 26652                           
 26653                           ; BSR set to: 0
 26654  00269A  0100               	movlb	0	; () banked
 26655  00269C  518B               	movf	___fldiv@a& (0+255),w,b
 26656  00269E  0100               	movlb	0	; () banked
 26657  0026A0  5F94               	subwf	___fldiv@rem& (0+255),f,b
 26658  0026A2  0100               	movlb	0	; () banked
 26659  0026A4  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 26660  0026A6  0100               	movlb	0	; () banked
 26661  0026A8  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 26662  0026AA  0100               	movlb	0	; () banked
 26663  0026AC  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 26664  0026AE  0100               	movlb	0	; () banked
 26665  0026B0  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 26666  0026B2  0100               	movlb	0	; () banked
 26667  0026B4  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 26668  0026B6  0100               	movlb	0	; () banked
 26669  0026B8  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 26670  0026BA                     l11657:
 26671                           
 26672                           ; BSR set to: 0
 26673  0026BA  0100               	movlb	0	; () banked
 26674  0026BC  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 26675  0026BE                     l2375:
 26676                           
 26677                           ; BSR set to: 0
 26678  0026BE  0E19               	movlw	25
 26679  0026C0  0100               	movlb	0	; () banked
 26680  0026C2  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 26681  0026C4  D7BA               	goto	l11643
 26682                           
 26683                           ; BSR set to: 0
 26684                           
 26685                           ; BSR set to: 0
 26686  0026C6  0100               	movlb	0	; () banked
 26687  0026C8  5194               	movf	___fldiv@rem& (0+255),w,b
 26688  0026CA  0100               	movlb	0	; () banked
 26689  0026CC  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 26690  0026CE  0100               	movlb	0	; () banked
 26691  0026D0  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 26692  0026D2  0100               	movlb	0	; () banked
 26693  0026D4  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 26694  0026D6  B4D8               	btfsc	status,2,c
 26695  0026D8  D018               	goto	l11669
 26696                           
 26697                           ; BSR set to: 0
 26698  0026DA  0100               	movlb	0	; () banked
 26699  0026DC  819A               	bsf	___fldiv@grs& (0+255),0,b
 26700                           
 26701                           ; BSR set to: 0
 26702  0026DE  D015               	goto	l11669
 26703  0026E0                     l11663:
 26704                           
 26705                           ; BSR set to: 0
 26706  0026E0  0100               	movlb	0	; () banked
 26707  0026E2  90D8               	bcf	status,0,c
 26708  0026E4  3787               	rlcf	___fldiv@b& (0+255),f,b
 26709  0026E6  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 26710  0026E8  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 26711  0026EA  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 26712                           
 26713                           ; BSR set to: 0
 26714  0026EC  0100               	movlb	0	; () banked
 26715  0026EE  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 26716  0026F0  D002               	goto	l2384
 26717                           
 26718                           ; BSR set to: 0
 26719  0026F2  0100               	movlb	0	; () banked
 26720  0026F4  8187               	bsf	___fldiv@b& (0+255),0,b
 26721  0026F6                     l2384:
 26722                           
 26723                           ; BSR set to: 0
 26724  0026F6  0100               	movlb	0	; () banked
 26725  0026F8  90D8               	bcf	status,0,c
 26726  0026FA  379A               	rlcf	___fldiv@grs& (0+255),f,b
 26727  0026FC  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 26728  0026FE  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 26729  002700  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 26730  002702  0100               	movlb	0	; () banked
 26731  002704  0798               	decf	___fldiv@new_exp& (0+255),f,b
 26732  002706  A0D8               	btfss	status,0,c
 26733  002708  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 26734  00270A                     l11669:
 26735                           
 26736                           ; BSR set to: 0
 26737  00270A  0100               	movlb	0	; () banked
 26738  00270C  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 26739  00270E  D7E8               	goto	l11663
 26740                           
 26741                           ; BSR set to: 0
 26742                           
 26743                           ; BSR set to: 0
 26744  002710  0E00               	movlw	0
 26745  002712  0100               	movlb	0	; () banked
 26746  002714  6F9F               	movwf	___fldiv@aexp& (0+255),b
 26747                           
 26748                           ; BSR set to: 0
 26749  002716  0100               	movlb	0	; () banked
 26750  002718  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 26751  00271A  D024               	goto	l2386
 26752                           
 26753                           ; BSR set to: 0
 26754  00271C  0EFF               	movlw	255
 26755  00271E  0100               	movlb	0	; () banked
 26756  002720  159A               	andwf	___fldiv@grs& (0+255),w,b
 26757  002722  0100               	movlb	0	; () banked
 26758  002724  6F8F               	movwf	??___fldiv& (0+255),b
 26759  002726  0EFF               	movlw	255
 26760  002728  0100               	movlb	0	; () banked
 26761  00272A  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 26762  00272C  0100               	movlb	0	; () banked
 26763  00272E  6F90               	movwf	(??___fldiv+1)& (0+255),b
 26764  002730  0EFF               	movlw	255
 26765  002732  0100               	movlb	0	; () banked
 26766  002734  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 26767  002736  0100               	movlb	0	; () banked
 26768  002738  6F91               	movwf	(??___fldiv+2)& (0+255),b
 26769  00273A  0E7F               	movlw	127
 26770  00273C  0100               	movlb	0	; () banked
 26771  00273E  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 26772  002740  0100               	movlb	0	; () banked
 26773  002742  6F92               	movwf	(??___fldiv+3)& (0+255),b
 26774  002744  0100               	movlb	0	; () banked
 26775  002746  518F               	movf	??___fldiv& (0+255),w,b
 26776  002748  0100               	movlb	0	; () banked
 26777  00274A  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 26778  00274C  0100               	movlb	0	; () banked
 26779  00274E  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 26780  002750  0100               	movlb	0	; () banked
 26781  002752  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 26782  002754  A4D8               	btfss	status,2,c
 26783  002756  D003               	goto	l11679
 26784                           
 26785                           ; BSR set to: 0
 26786                           
 26787                           ; BSR set to: 0
 26788  002758  0100               	movlb	0	; () banked
 26789  00275A  A187               	btfss	___fldiv@b& (0+255),0,b
 26790  00275C  D003               	goto	l2386
 26791  00275E                     l11679:
 26792                           
 26793                           ; BSR set to: 0
 26794  00275E  0E01               	movlw	1
 26795  002760  0100               	movlb	0	; () banked
 26796  002762  6F9F               	movwf	___fldiv@aexp& (0+255),b
 26797  002764                     l2386:
 26798                           
 26799                           ; BSR set to: 0
 26800  002764  0100               	movlb	0	; () banked
 26801  002766  519F               	movf	___fldiv@aexp& (0+255),w,b
 26802  002768  0100               	movlb	0	; () banked
 26803  00276A  B4D8               	btfsc	status,2,c
 26804  00276C  D023               	goto	l11689
 26805                           
 26806                           ; BSR set to: 0
 26807  00276E  0E01               	movlw	1
 26808  002770  0100               	movlb	0	; () banked
 26809  002772  2787               	addwf	___fldiv@b& (0+255),f,b
 26810  002774  0E00               	movlw	0
 26811  002776  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 26812  002778  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 26813  00277A  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 26814                           
 26815                           ; BSR set to: 0
 26816  00277C  0100               	movlb	0	; () banked
 26817  00277E  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 26818  002780  D019               	goto	l11689
 26819                           
 26820                           ; BSR set to: 0
 26821  002782  C087  F08F         	movff	___fldiv@b,??___fldiv
 26822  002786  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 26823  00278A  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 26824  00278E  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 26825  002792  0100               	movlb	0	; () banked
 26826  002794  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 26827  002796  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 26828  002798  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 26829  00279A  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 26830  00279C  338F               	rrcf	??___fldiv& (0+255),f,b
 26831  00279E  C08F  F087         	movff	??___fldiv,___fldiv@b
 26832  0027A2  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 26833  0027A6  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 26834  0027AA  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 26835                           
 26836                           ; BSR set to: 0
 26837  0027AE  0100               	movlb	0	; () banked
 26838  0027B0  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 26839  0027B2  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 26840  0027B4                     l11689:
 26841                           
 26842                           ; BSR set to: 0
 26843  0027B4  0100               	movlb	0	; () banked
 26844  0027B6  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 26845  0027B8  D014               	goto	l11693
 26846  0027BA  0100               	movlb	0	; () banked
 26847  0027BC  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 26848  0027BE  E104               	bnz	u10210
 26849  0027C0  0100               	movlb	0	; () banked
 26850  0027C2  2998               	incf	___fldiv@new_exp& (0+255),w,b
 26851  0027C4  A0D8               	btfss	status,0,c
 26852  0027C6  D00D               	goto	l11693
 26853  0027C8                     u10210:
 26854                           
 26855                           ; BSR set to: 0
 26856  0027C8  0E00               	movlw	0
 26857  0027CA  0100               	movlb	0	; () banked
 26858  0027CC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 26859  0027CE  6998               	setf	___fldiv@new_exp& (0+255),b
 26860  0027D0  0E00               	movlw	0
 26861  0027D2  0100               	movlb	0	; () banked
 26862  0027D4  6F87               	movwf	___fldiv@b& (0+255),b
 26863  0027D6  0E00               	movlw	0
 26864  0027D8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26865  0027DA  0E00               	movlw	0
 26866  0027DC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26867  0027DE  0E00               	movlw	0
 26868  0027E0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26869  0027E2                     l11693:
 26870                           
 26871                           ; BSR set to: 0
 26872  0027E2  0100               	movlb	0	; () banked
 26873  0027E4  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 26874  0027E6  D007               	goto	l11695
 26875  0027E8  0100               	movlb	0	; () banked
 26876  0027EA  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 26877  0027EC  E115               	bnz	l11697
 26878  0027EE  0100               	movlb	0	; () banked
 26879  0027F0  0598               	decf	___fldiv@new_exp& (0+255),w,b
 26880  0027F2  B0D8               	btfsc	status,0,c
 26881  0027F4  D011               	goto	l11697
 26882  0027F6                     l11695:
 26883                           
 26884                           ; BSR set to: 0
 26885  0027F6  0E00               	movlw	0
 26886  0027F8  0100               	movlb	0	; () banked
 26887  0027FA  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 26888  0027FC  0E00               	movlw	0
 26889  0027FE  6F98               	movwf	___fldiv@new_exp& (0+255),b
 26890  002800  0E00               	movlw	0
 26891  002802  0100               	movlb	0	; () banked
 26892  002804  6F87               	movwf	___fldiv@b& (0+255),b
 26893  002806  0E00               	movlw	0
 26894  002808  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 26895  00280A  0E00               	movlw	0
 26896  00280C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 26897  00280E  0E00               	movlw	0
 26898  002810  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26899  002812  0E00               	movlw	0
 26900  002814  0100               	movlb	0	; () banked
 26901  002816  6F93               	movwf	___fldiv@sign& (0+255),b
 26902  002818                     l11697:
 26903                           
 26904                           ; BSR set to: 0
 26905  002818  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 26906                           
 26907                           ; BSR set to: 0
 26908  00281C  0100               	movlb	0	; () banked
 26909  00281E  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 26910  002820  D003               	goto	l11703
 26911                           
 26912                           ; BSR set to: 0
 26913  002822  0100               	movlb	0	; () banked
 26914  002824  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 26915  002826  D002               	goto	l11705
 26916  002828                     l11703:
 26917                           
 26918                           ; BSR set to: 0
 26919  002828  0100               	movlb	0	; () banked
 26920  00282A  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 26921  00282C                     l11705:
 26922                           
 26923                           ; BSR set to: 0
 26924  00282C  0100               	movlb	0	; () banked
 26925  00282E  90D8               	bcf	status,0,c
 26926  002830  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 26927  002832  0100               	movlb	0	; () banked
 26928  002834  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 26929                           
 26930                           ; BSR set to: 0
 26931  002836  0100               	movlb	0	; () banked
 26932  002838  5193               	movf	___fldiv@sign& (0+255),w,b
 26933  00283A  0100               	movlb	0	; () banked
 26934  00283C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 26935                           
 26936                           ; BSR set to: 0
 26937  00283E  C087  F087         	movff	___fldiv@b,?___fldiv
 26938  002842  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 26939  002846  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 26940  00284A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 26941  00284E  0012               	return	
 26942  002850                     __end_of___fldiv:
 26943                           	opt stack 0
 26944                           tosu	equ	0xFFF
 26945                           tosh	equ	0xFFE
 26946                           tosl	equ	0xFFD
 26947                           pclath	equ	0xFFA
 26948                           tblptru	equ	0xFF8
 26949                           tblptrh	equ	0xFF7
 26950                           tblptrl	equ	0xFF6
 26951                           tablat	equ	0xFF5
 26952                           prodh	equ	0xFF4
 26953                           prodl	equ	0xFF3
 26954                           intcon	equ	0xFF2
 26955                           indf0	equ	0xFEF
 26956                           postinc0	equ	0xFEE
 26957                           fsr0h	equ	0xFEA
 26958                           fsr0l	equ	0xFE9
 26959                           wreg	equ	0xFE8
 26960                           postinc1	equ	0xFE6
 26961                           postdec1	equ	0xFE5
 26962                           plusw1	equ	0xFE3
 26963                           fsr1h	equ	0xFE2
 26964                           fsr1l	equ	0xFE1
 26965                           indf2	equ	0xFDF
 26966                           postinc2	equ	0xFDE
 26967                           postdec2	equ	0xFDD
 26968                           plusw2	equ	0xFDB
 26969                           fsr2h	equ	0xFDA
 26970                           fsr2l	equ	0xFD9
 26971                           status	equ	0xFD8
 26972                           
 26973 ;; *************** function _calib_data_init_pr *****************
 26974 ;; Defined at:
 26975 ;;		line 294 in file "src/api/data.c"
 26976 ;; Parameters:    Size  Location     Type
 26977 ;;		None
 26978 ;; Auto vars:     Size  Location     Type
 26979 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 26980 ;;		 -> prCalibTabDef(162), 
 26981 ;;  t16             2   23[BANK0 ] unsigned int 
 26982 ;;  ret             1   22[BANK0 ] unsigned char 
 26983 ;; Return value:  Size  Location     Type
 26984 ;;                  1    wreg      unsigned char 
 26985 ;; Registers used:
 26986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26987 ;; Tracked objects:
 26988 ;;		On entry : 0/0
 26989 ;;		On exit  : 0/0
 26990 ;;		Unchanged: 0/0
 26991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26993 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26995 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26996 ;;Total ram usage:        5 bytes
 26997 ;; Hardware stack levels used:    1
 26998 ;; Hardware stack levels required when called:    8
 26999 ;; This function calls:
 27000 ;;		_at24c02_init
 27001 ;;		_at24c02_read_n_byte
 27002 ;;		_at24c02_write_n_byte
 27003 ;;		_calib_data_set_default_pr
 27004 ;;		_crc_append
 27005 ;;		_crc_verify
 27006 ;; This function is called by:
 27007 ;;		_data_init_all
 27008 ;; This function uses a non-reentrant model
 27009 ;;
 27010                           
 27011                           	psect	text120
 27012  00505E                     __ptext120:
 27013                           	opt stack 0
 27014  00505E                     _calib_data_init_pr:
 27015                           	opt stack 21
 27016                           
 27017                           ;data.c: 296: uint8_t ret=0;
 27018                           
 27019                           ; BSR set to: 0
 27020                           ;incstack = 0
 27021  00505E  0E00               	movlw	0
 27022  005060  0100               	movlb	0	; () banked
 27023  005062  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 27024                           
 27025                           ; BSR set to: 0
 27026                           ;data.c: 297: uint16_t t16;
 27027                           ;data.c: 298: uint8_t* buf=(uint8_t*)(&prCalibTabDef);
 27028  005064  0E00               	movlw	low _prCalibTabDef
 27029  005066  0100               	movlb	0	; () banked
 27030  005068  6F79               	movwf	calib_data_init_pr@buf& (0+255),b
 27031  00506A  0E03               	movlw	high _prCalibTabDef
 27032  00506C  0100               	movlb	0	; () banked
 27033  00506E  6F7A               	movwf	(calib_data_init_pr@buf+1)& (0+255),b
 27034                           
 27035                           ; BSR set to: 0
 27036                           ;data.c: 300: p_prEepromObj=&at24c02Ch0;
 27037  005070  0EB0               	movlw	low _at24c02Ch0
 27038  005072  0101               	movlb	1	; () banked
 27039  005074  6F84               	movwf	_p_prEepromObj& (0+255),b
 27040  005076  0E01               	movlw	high _at24c02Ch0
 27041  005078  0101               	movlb	1	; () banked
 27042  00507A  6F85               	movwf	(_p_prEepromObj+1)& (0+255),b
 27043                           
 27044                           ; BSR set to: 1
 27045                           ;data.c: 301: at24c02_init(p_prEepromObj,0xaa);
 27046  00507C  C184  F060         	movff	_p_prEepromObj,at24c02_init@pAt24c02
 27047  005080  C185  F061         	movff	_p_prEepromObj+1,at24c02_init@pAt24c02+1
 27048  005084  0EAA               	movlw	170
 27049  005086  0100               	movlb	0	; () banked
 27050  005088  6F62               	movwf	at24c02_init@slv& (0+255),b
 27051  00508A  ECAC  F037         	call	_at24c02_init	;wreg free
 27052                           
 27053                           ;data.c: 302: t16=sizeof(st_prCalibTabDef);
 27054  00508E  0E00               	movlw	0
 27055  005090  0100               	movlb	0	; () banked
 27056  005092  6F78               	movwf	(calib_data_init_pr@t16+1)& (0+255),b
 27057  005094  0EA2               	movlw	162
 27058  005096  6F77               	movwf	calib_data_init_pr@t16& (0+255),b
 27059                           
 27060                           ; BSR set to: 0
 27061                           ;data.c: 303: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 27062  005098  C184  F064         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 27063  00509C  C185  F065         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 27064  0050A0  0E00               	movlw	0
 27065  0050A2  0100               	movlb	0	; () banked
 27066  0050A4  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 27067  0050A6  C079  F067         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 27068  0050AA  C07A  F068         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 27069  0050AE  C077  F069         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 27070  0050B2  C078  F06A         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 27071  0050B6  EC70  F022         	call	_at24c02_read_n_byte	;wreg free
 27072                           
 27073                           ;data.c: 304: ret=crc_verify(buf,t16);
 27074  0050BA  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 27075  0050BE  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 27076  0050C2  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 27077  0050C6  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 27078  0050CA  ECAA  F036         	call	_crc_verify	;wreg free
 27079  0050CE  0100               	movlb	0	; () banked
 27080  0050D0  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;data.c: 305: if(!ret){
 27084  0050D2  0100               	movlb	0	; () banked
 27085  0050D4  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 27086  0050D6  0100               	movlb	0	; () banked
 27087  0050D8  A4D8               	btfss	status,2,c
 27088  0050DA  0012               	return	
 27089                           
 27090                           ; BSR set to: 0
 27091                           ;data.c: 306: calib_data_set_default_pr();
 27092  0050DC  ECD4  F01F         	call	_calib_data_set_default_pr	;wreg free
 27093                           
 27094                           ;data.c: 307: crc_append(buf,t16-2);
 27095  0050E0  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 27096  0050E4  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 27097  0050E8  0EFE               	movlw	254
 27098  0050EA  0100               	movlb	0	; () banked
 27099  0050EC  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 27100  0050EE  0100               	movlb	0	; () banked
 27101  0050F0  6F6E               	movwf	crc_append@n& (0+255),b
 27102  0050F2  0EFF               	movlw	255
 27103  0050F4  0100               	movlb	0	; () banked
 27104  0050F6  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 27105  0050F8  0100               	movlb	0	; () banked
 27106  0050FA  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 27107  0050FC  EC0B  F03A         	call	_crc_append	;wreg free
 27108                           
 27109                           ;data.c: 308: at24c02_write_n_byte(p_prEepromObj,0,buf,t16);
 27110  005100  C184  F062         	movff	_p_prEepromObj,at24c02_write_n_byte@pAt24c02
 27111  005104  C185  F063         	movff	_p_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 27112  005108  0E00               	movlw	0
 27113  00510A  0100               	movlb	0	; () banked
 27114  00510C  6F64               	movwf	at24c02_write_n_byte@addr& (0+255),b
 27115  00510E  C079  F065         	movff	calib_data_init_pr@buf,at24c02_write_n_byte@buf
 27116  005112  C07A  F066         	movff	calib_data_init_pr@buf+1,at24c02_write_n_byte@buf+1
 27117  005116  C077  F067         	movff	calib_data_init_pr@t16,at24c02_write_n_byte@len
 27118  00511A  C078  F068         	movff	calib_data_init_pr@t16+1,at24c02_write_n_byte@len+1
 27119  00511E  EC87  F02B         	call	_at24c02_write_n_byte	;wreg free
 27120                           
 27121                           ;data.c: 309: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 27122  005122  C184  F064         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 27123  005126  C185  F065         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 27124  00512A  0E00               	movlw	0
 27125  00512C  0100               	movlb	0	; () banked
 27126  00512E  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 27127  005130  C079  F067         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 27128  005134  C07A  F068         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 27129  005138  C077  F069         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 27130  00513C  C078  F06A         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 27131  005140  EC70  F022         	call	_at24c02_read_n_byte	;wreg free
 27132                           
 27133                           ;data.c: 310: ret=crc_verify(buf,t16);
 27134  005144  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 27135  005148  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 27136  00514C  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 27137  005150  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 27138  005154  ECAA  F036         	call	_crc_verify	;wreg free
 27139  005158  0100               	movlb	0	; () banked
 27140  00515A  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 27141                           
 27142                           ; BSR set to: 0
 27143                           ;data.c: 311: if(!ret){
 27144  00515C  0100               	movlb	0	; () banked
 27145  00515E  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 27146  005160  0100               	movlb	0	; () banked
 27147  005162  A4D8               	btfss	status,2,c
 27148  005164  0012               	return	
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;data.c: 312: calib_data_set_default_pr();
 27152  005166  ECD4  F01F         	call	_calib_data_set_default_pr	;wreg free
 27153                           
 27154                           ;data.c: 313: crc_append(buf,t16-2);
 27155  00516A  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 27156  00516E  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 27157  005172  0EFE               	movlw	254
 27158  005174  0100               	movlb	0	; () banked
 27159  005176  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 27160  005178  0100               	movlb	0	; () banked
 27161  00517A  6F6E               	movwf	crc_append@n& (0+255),b
 27162  00517C  0EFF               	movlw	255
 27163  00517E  0100               	movlb	0	; () banked
 27164  005180  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 27165  005182  0100               	movlb	0	; () banked
 27166  005184  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 27167  005186  EC0B  F03A         	call	_crc_append	;wreg free
 27168  00518A  0012               	return	
 27169  00518C                     __end_of_calib_data_init_pr:
 27170                           	opt stack 0
 27171                           tosu	equ	0xFFF
 27172                           tosh	equ	0xFFE
 27173                           tosl	equ	0xFFD
 27174                           pclath	equ	0xFFA
 27175                           tblptru	equ	0xFF8
 27176                           tblptrh	equ	0xFF7
 27177                           tblptrl	equ	0xFF6
 27178                           tablat	equ	0xFF5
 27179                           prodh	equ	0xFF4
 27180                           prodl	equ	0xFF3
 27181                           intcon	equ	0xFF2
 27182                           indf0	equ	0xFEF
 27183                           postinc0	equ	0xFEE
 27184                           fsr0h	equ	0xFEA
 27185                           fsr0l	equ	0xFE9
 27186                           wreg	equ	0xFE8
 27187                           postinc1	equ	0xFE6
 27188                           postdec1	equ	0xFE5
 27189                           plusw1	equ	0xFE3
 27190                           fsr1h	equ	0xFE2
 27191                           fsr1l	equ	0xFE1
 27192                           indf2	equ	0xFDF
 27193                           postinc2	equ	0xFDE
 27194                           postdec2	equ	0xFDD
 27195                           plusw2	equ	0xFDB
 27196                           fsr2h	equ	0xFDA
 27197                           fsr2l	equ	0xFD9
 27198                           status	equ	0xFD8
 27199                           
 27200 ;; *************** function _calib_data_set_default_pr *****************
 27201 ;; Defined at:
 27202 ;;		line 253 in file "src/api/data.c"
 27203 ;; Parameters:    Size  Location     Type
 27204 ;;		None
 27205 ;; Auto vars:     Size  Location     Type
 27206 ;;  j               1   15[BANK0 ] unsigned char 
 27207 ;;  i               1   14[BANK0 ] unsigned char 
 27208 ;; Return value:  Size  Location     Type
 27209 ;;                  1    wreg      void 
 27210 ;; Registers used:
 27211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27212 ;; Tracked objects:
 27213 ;;		On entry : 0/0
 27214 ;;		On exit  : 0/0
 27215 ;;		Unchanged: 0/0
 27216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27219 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27220 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27221 ;;Total ram usage:        8 bytes
 27222 ;; Hardware stack levels used:    1
 27223 ;; Hardware stack levels required when called:    5
 27224 ;; This function calls:
 27225 ;;		___wmul
 27226 ;; This function is called by:
 27227 ;;		_calib_data_init_pr
 27228 ;; This function uses a non-reentrant model
 27229 ;;
 27230                           
 27231                           	psect	text121
 27232  003FA8                     __ptext121:
 27233                           	opt stack 0
 27234  003FA8                     _calib_data_set_default_pr:
 27235                           	opt stack 23
 27236                           
 27237                           ;data.c: 255: uint8_t i,j;
 27238                           ;data.c: 256: prCalibTabDef.rowCount=1;
 27239                           
 27240                           ;incstack = 0
 27241  003FA8  0E01               	movlw	1
 27242  003FAA  0103               	movlb	3	; () banked
 27243  003FAC  6F00               	movwf	_prCalibTabDef& (0+255),b
 27244                           
 27245                           ;data.c: 257: for(i=0;i<1;i++){
 27246  003FAE  0E00               	movlw	0
 27247  003FB0  0100               	movlb	0	; () banked
 27248  003FB2  6F6E               	movwf	calib_data_set_default_pr@i& (0+255),b
 27249  003FB4  0100               	movlb	0	; () banked
 27250  003FB6  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 27251  003FB8  0100               	movlb	0	; () banked
 27252  003FBA  A4D8               	btfss	status,2,c
 27253  003FBC  0012               	return	
 27254                           
 27255                           ; BSR set to: 0
 27256                           ;data.c: 258: prCalibTabDef.prCalibRow[i].pCount=6;
 27257                           
 27258                           ; BSR set to: 0
 27259                           
 27260                           ; BSR set to: 0
 27261  003FBE  0100               	movlb	0	; () banked
 27262  003FC0  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 27263  003FC2  0D34               	mullw	52
 27264  003FC4  0E04               	movlw	low (_prCalibTabDef+4)
 27265  003FC6  24F3               	addwf	prodl,w,c
 27266  003FC8  6ED9               	movwf	fsr2l,c
 27267  003FCA  0E03               	movlw	high (_prCalibTabDef+4)
 27268  003FCC  20F4               	addwfc	prodh,w,c
 27269  003FCE  6EDA               	movwf	fsr2h,c
 27270  003FD0  0E06               	movlw	6
 27271  003FD2  6EDF               	movwf	indf2,c
 27272                           
 27273                           ; BSR set to: 0
 27274                           ;data.c: 259: for(j=0;j<6;j++){
 27275  003FD4  0E00               	movlw	0
 27276  003FD6  0100               	movlb	0	; () banked
 27277  003FD8  6F6F               	movwf	calib_data_set_default_pr@j& (0+255),b
 27278  003FDA                     l12929:
 27279                           
 27280                           ; BSR set to: 0
 27281  003FDA  0E05               	movlw	5
 27282  003FDC  0100               	movlb	0	; () banked
 27283  003FDE  656F               	cpfsgt	calib_data_set_default_pr@j& (0+255),b
 27284  003FE0  D001               	goto	l12933
 27285  003FE2  D0C1               	goto	l12941
 27286  003FE4                     l12933:
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;data.c: 260: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 27290  003FE4  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 27291  003FE8  0100               	movlb	0	; () banked
 27292  003FEA  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 27293  003FEC  0E17               	movlw	23
 27294  003FEE  0100               	movlb	0	; () banked
 27295  003FF0  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27296  003FF2  0E70               	movlw	112
 27297  003FF4  6F64               	movwf	___wmul@multiplicand& (0+255),b
 27298  003FF6  ECF9  F03E         	call	___wmul	;wreg free
 27299  003FFA  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 27300  003FFE  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 27301  004002  C06E  F062         	movff	calib_data_set_default_pr@i,___wmul@multiplier
 27302  004006  0100               	movlb	0	; () banked
 27303  004008  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 27304  00400A  0E01               	movlw	1
 27305  00400C  0100               	movlb	0	; () banked
 27306  00400E  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27307  004010  0EF4               	movlw	244
 27308  004012  6F64               	movwf	___wmul@multiplicand& (0+255),b
 27309  004014  ECF9  F03E         	call	___wmul	;wreg free
 27310  004018  0100               	movlb	0	; () banked
 27311  00401A  5162               	movf	?___wmul& (0+255),w,b
 27312  00401C  0100               	movlb	0	; () banked
 27313  00401E  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 27314  004020  0100               	movlb	0	; () banked
 27315  004022  5163               	movf	(?___wmul+1)& (0+255),w,b
 27316  004024  0100               	movlb	0	; () banked
 27317  004026  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 27318  004028  0100               	movlb	0	; () banked
 27319  00402A  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 27320  00402C  0D08               	mullw	8
 27321  00402E  0E04               	movlw	4
 27322  004030  26F3               	addwf	prodl,f,c
 27323  004032  0E00               	movlw	0
 27324  004034  22F4               	addwfc	prodh,f,c
 27325  004036  0E00               	movlw	low _prCalibTabDef
 27326  004038  0100               	movlb	0	; () banked
 27327  00403A  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 27328  00403C  0E03               	movlw	high _prCalibTabDef
 27329  00403E  0100               	movlb	0	; () banked
 27330  004040  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 27331  004042  0E04               	movlw	4
 27332  004044  0100               	movlb	0	; () banked
 27333  004046  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 27334  004048  0E00               	movlw	0
 27335  00404A  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 27336  00404C  50F3               	movf	prodl,w,c
 27337  00404E  0100               	movlb	0	; () banked
 27338  004050  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 27339  004052  50F4               	movf	prodh,w,c
 27340  004054  0100               	movlb	0	; () banked
 27341  004056  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 27342  004058  0100               	movlb	0	; () banked
 27343  00405A  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 27344  00405C  0D34               	mullw	52
 27345  00405E  50F3               	movf	prodl,w,c
 27346  004060  0100               	movlb	0	; () banked
 27347  004062  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 27348  004064  50F4               	movf	prodh,w,c
 27349  004066  0100               	movlb	0	; () banked
 27350  004068  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 27351  00406A  0E04               	movlw	4
 27352  00406C  0100               	movlb	0	; () banked
 27353  00406E  256A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),w,b
 27354  004070  6ED9               	movwf	fsr2l,c
 27355  004072  0E00               	movlw	0
 27356  004074  0100               	movlb	0	; () banked
 27357  004076  216B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),w,b
 27358  004078  6EDA               	movwf	fsr2h,c
 27359  00407A  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 27360  00407E  C069  FFDD         	movff	??_calib_data_set_default_pr+1,postdec2
 27361                           
 27362                           ;data.c: 261: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 27363  004082  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 27364  004086  0100               	movlb	0	; () banked
 27365  004088  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 27366  00408A  0E17               	movlw	23
 27367  00408C  0100               	movlb	0	; () banked
 27368  00408E  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27369  004090  0E70               	movlw	112
 27370  004092  6F64               	movwf	___wmul@multiplicand& (0+255),b
 27371  004094  ECF9  F03E         	call	___wmul	;wreg free
 27372  004098  0100               	movlb	0	; () banked
 27373  00409A  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 27374  00409E  0100               	movlb	0	; () banked
 27375  0040A0  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 27376  0040A4  0E00               	movlw	0
 27377  0040A6  0100               	movlb	0	; () banked
 27378  0040A8  BF69               	btfsc	(??_calib_data_set_default_pr+1)& (0+255),7,b
 27379  0040AA  0EFF               	movlw	255
 27380  0040AC  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 27381  0040AE  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 27382  0040B0  0100               	movlb	0	; () banked
 27383  0040B2  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 27384  0040B4  0D08               	mullw	8
 27385  0040B6  0E04               	movlw	4
 27386  0040B8  26F3               	addwf	prodl,f,c
 27387  0040BA  0E00               	movlw	0
 27388  0040BC  22F4               	addwfc	prodh,f,c
 27389  0040BE  0E00               	movlw	low _prCalibTabDef
 27390  0040C0  0100               	movlb	0	; () banked
 27391  0040C2  6F6C               	movwf	(??_calib_data_set_default_pr+4)& (0+255),b
 27392  0040C4  0E03               	movlw	high _prCalibTabDef
 27393  0040C6  0100               	movlb	0	; () banked
 27394  0040C8  6F6D               	movwf	(??_calib_data_set_default_pr+5)& (0+255),b
 27395  0040CA  0E04               	movlw	4
 27396  0040CC  0100               	movlb	0	; () banked
 27397  0040CE  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 27398  0040D0  0E00               	movlw	0
 27399  0040D2  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 27400  0040D4  50F3               	movf	prodl,w,c
 27401  0040D6  0100               	movlb	0	; () banked
 27402  0040D8  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 27403  0040DA  50F4               	movf	prodh,w,c
 27404  0040DC  0100               	movlb	0	; () banked
 27405  0040DE  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 27406  0040E0  0100               	movlb	0	; () banked
 27407  0040E2  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 27408  0040E4  0D34               	mullw	52
 27409  0040E6  50F3               	movf	prodl,w,c
 27410  0040E8  0100               	movlb	0	; () banked
 27411  0040EA  256C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),w,b
 27412  0040EC  6ED9               	movwf	fsr2l,c
 27413  0040EE  50F4               	movf	prodh,w,c
 27414  0040F0  0100               	movlb	0	; () banked
 27415  0040F2  216D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),w,b
 27416  0040F4  6EDA               	movwf	fsr2h,c
 27417  0040F6  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 27418  0040FA  C069  FFDE         	movff	??_calib_data_set_default_pr+1,postinc2
 27419  0040FE  C06A  FFDE         	movff	??_calib_data_set_default_pr+2,postinc2
 27420  004102  C06B  FFDE         	movff	??_calib_data_set_default_pr+3,postinc2
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;data.c: 262: prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=0;
 27424  004106  0100               	movlb	0	; () banked
 27425  004108  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 27426  00410A  0D08               	mullw	8
 27427  00410C  0E04               	movlw	4
 27428  00410E  26F3               	addwf	prodl,f,c
 27429  004110  0E00               	movlw	0
 27430  004112  22F4               	addwfc	prodh,f,c
 27431  004114  0E00               	movlw	low _prCalibTabDef
 27432  004116  0100               	movlb	0	; () banked
 27433  004118  6F68               	movwf	??_calib_data_set_default_pr& (0+255),b
 27434  00411A  0E03               	movlw	high _prCalibTabDef
 27435  00411C  0100               	movlb	0	; () banked
 27436  00411E  6F69               	movwf	(??_calib_data_set_default_pr+1)& (0+255),b
 27437  004120  0E04               	movlw	4
 27438  004122  0100               	movlb	0	; () banked
 27439  004124  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 27440  004126  0E00               	movlw	0
 27441  004128  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 27442  00412A  50F3               	movf	prodl,w,c
 27443  00412C  0100               	movlb	0	; () banked
 27444  00412E  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 27445  004130  50F4               	movf	prodh,w,c
 27446  004132  0100               	movlb	0	; () banked
 27447  004134  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 27448  004136  0100               	movlb	0	; () banked
 27449  004138  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 27450  00413A  0D34               	mullw	52
 27451  00413C  50F3               	movf	prodl,w,c
 27452  00413E  0100               	movlb	0	; () banked
 27453  004140  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 27454  004142  50F4               	movf	prodh,w,c
 27455  004144  0100               	movlb	0	; () banked
 27456  004146  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 27457  004148  0E06               	movlw	6
 27458  00414A  0100               	movlb	0	; () banked
 27459  00414C  2568               	addwf	??_calib_data_set_default_pr& (0+255),w,b
 27460  00414E  6ED9               	movwf	fsr2l,c
 27461  004150  0E00               	movlw	0
 27462  004152  0100               	movlb	0	; () banked
 27463  004154  2169               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),w,b
 27464  004156  6EDA               	movwf	fsr2h,c
 27465  004158  0E00               	movlw	0
 27466  00415A  6EDE               	movwf	postinc2,c
 27467  00415C  0E00               	movlw	0
 27468  00415E  6EDD               	movwf	postdec2,c
 27469                           
 27470                           ; BSR set to: 0
 27471  004160  0100               	movlb	0	; () banked
 27472  004162  2B6F               	incf	calib_data_set_default_pr@j& (0+255),f,b
 27473  004164  D73A               	goto	l12929
 27474  004166                     l12941:
 27475                           
 27476                           ; BSR set to: 0
 27477  004166  0100               	movlb	0	; () banked
 27478  004168  2B6E               	incf	calib_data_set_default_pr@i& (0+255),f,b
 27479  00416A  D724               	goto	L15
 27480  00416C                     __end_of_calib_data_set_default_pr:
 27481                           	opt stack 0
 27482                           tosu	equ	0xFFF
 27483                           tosh	equ	0xFFE
 27484                           tosl	equ	0xFFD
 27485                           pclath	equ	0xFFA
 27486                           tblptru	equ	0xFF8
 27487                           tblptrh	equ	0xFF7
 27488                           tblptrl	equ	0xFF6
 27489                           tablat	equ	0xFF5
 27490                           prodh	equ	0xFF4
 27491                           prodl	equ	0xFF3
 27492                           intcon	equ	0xFF2
 27493                           indf0	equ	0xFEF
 27494                           postinc0	equ	0xFEE
 27495                           fsr0h	equ	0xFEA
 27496                           fsr0l	equ	0xFE9
 27497                           wreg	equ	0xFE8
 27498                           postinc1	equ	0xFE6
 27499                           postdec1	equ	0xFE5
 27500                           plusw1	equ	0xFE3
 27501                           fsr1h	equ	0xFE2
 27502                           fsr1l	equ	0xFE1
 27503                           indf2	equ	0xFDF
 27504                           postinc2	equ	0xFDE
 27505                           postdec2	equ	0xFDD
 27506                           plusw2	equ	0xFDB
 27507                           fsr2h	equ	0xFDA
 27508                           fsr2l	equ	0xFD9
 27509                           status	equ	0xFD8
 27510                           
 27511 ;; *************** function _calib_data_init_diff_pr *****************
 27512 ;; Defined at:
 27513 ;;		line 268 in file "src/api/data.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;		None
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 27518 ;;		 -> diff_prCalibTabDef(162), 
 27519 ;;  t16             2   23[BANK0 ] unsigned int 
 27520 ;;  ret             1   22[BANK0 ] unsigned char 
 27521 ;; Return value:  Size  Location     Type
 27522 ;;                  1    wreg      unsigned char 
 27523 ;; Registers used:
 27524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27525 ;; Tracked objects:
 27526 ;;		On entry : 0/0
 27527 ;;		On exit  : 0/0
 27528 ;;		Unchanged: 0/0
 27529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27531 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27533 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27534 ;;Total ram usage:        5 bytes
 27535 ;; Hardware stack levels used:    1
 27536 ;; Hardware stack levels required when called:    8
 27537 ;; This function calls:
 27538 ;;		_at24c02_init
 27539 ;;		_at24c02_read_n_byte
 27540 ;;		_at24c02_write_n_byte
 27541 ;;		_calib_data_set_default_diff_pr
 27542 ;;		_crc_append
 27543 ;;		_crc_verify
 27544 ;; This function is called by:
 27545 ;;		_data_init_all
 27546 ;; This function uses a non-reentrant model
 27547 ;;
 27548                           
 27549                           	psect	text122
 27550  00518C                     __ptext122:
 27551                           	opt stack 0
 27552  00518C                     _calib_data_init_diff_pr:
 27553                           	opt stack 21
 27554                           
 27555                           ;data.c: 270: uint8_t ret=0;
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;incstack = 0
 27559  00518C  0E00               	movlw	0
 27560  00518E  0100               	movlb	0	; () banked
 27561  005190  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 27562                           
 27563                           ; BSR set to: 0
 27564                           ;data.c: 271: uint16_t t16;
 27565                           ;data.c: 272: uint8_t* buf=(uint8_t*)(&diff_prCalibTabDef);
 27566  005192  0E00               	movlw	low _diff_prCalibTabDef
 27567  005194  0100               	movlb	0	; () banked
 27568  005196  6F79               	movwf	calib_data_init_diff_pr@buf& (0+255),b
 27569  005198  0E02               	movlw	high _diff_prCalibTabDef
 27570  00519A  0100               	movlb	0	; () banked
 27571  00519C  6F7A               	movwf	(calib_data_init_diff_pr@buf+1)& (0+255),b
 27572                           
 27573                           ; BSR set to: 0
 27574                           ;data.c: 274: pdiff_prEepromObj= &at24c02Ch1;
 27575  00519E  0EBB               	movlw	low _at24c02Ch1
 27576  0051A0  0101               	movlb	1	; () banked
 27577  0051A2  6F86               	movwf	_pdiff_prEepromObj& (0+255),b
 27578  0051A4  0E01               	movlw	high _at24c02Ch1
 27579  0051A6  0101               	movlb	1	; () banked
 27580  0051A8  6F87               	movwf	(_pdiff_prEepromObj+1)& (0+255),b
 27581                           
 27582                           ; BSR set to: 1
 27583                           ;data.c: 275: at24c02_init(pdiff_prEepromObj,0xac);
 27584  0051AA  C186  F060         	movff	_pdiff_prEepromObj,at24c02_init@pAt24c02
 27585  0051AE  C187  F061         	movff	_pdiff_prEepromObj+1,at24c02_init@pAt24c02+1
 27586  0051B2  0EAC               	movlw	172
 27587  0051B4  0100               	movlb	0	; () banked
 27588  0051B6  6F62               	movwf	at24c02_init@slv& (0+255),b
 27589  0051B8  ECAC  F037         	call	_at24c02_init	;wreg free
 27590                           
 27591                           ;data.c: 276: t16=sizeof(st_prCalibTabDef);
 27592  0051BC  0E00               	movlw	0
 27593  0051BE  0100               	movlb	0	; () banked
 27594  0051C0  6F78               	movwf	(calib_data_init_diff_pr@t16+1)& (0+255),b
 27595  0051C2  0EA2               	movlw	162
 27596  0051C4  6F77               	movwf	calib_data_init_diff_pr@t16& (0+255),b
 27597                           
 27598                           ; BSR set to: 0
 27599                           ;data.c: 277: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 27600  0051C6  C186  F064         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 27601  0051CA  C187  F065         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 27602  0051CE  0E00               	movlw	0
 27603  0051D0  0100               	movlb	0	; () banked
 27604  0051D2  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 27605  0051D4  C079  F067         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 27606  0051D8  C07A  F068         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 27607  0051DC  C077  F069         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 27608  0051E0  C078  F06A         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 27609  0051E4  EC70  F022         	call	_at24c02_read_n_byte	;wreg free
 27610                           
 27611                           ;data.c: 278: ret=crc_verify(buf,t16);
 27612  0051E8  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 27613  0051EC  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 27614  0051F0  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 27615  0051F4  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 27616  0051F8  ECAA  F036         	call	_crc_verify	;wreg free
 27617  0051FC  0100               	movlb	0	; () banked
 27618  0051FE  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 27619                           
 27620                           ; BSR set to: 0
 27621                           ;data.c: 279: if(!ret){
 27622  005200  0100               	movlb	0	; () banked
 27623  005202  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 27624  005204  0100               	movlb	0	; () banked
 27625  005206  A4D8               	btfss	status,2,c
 27626  005208  0012               	return	
 27627                           
 27628                           ; BSR set to: 0
 27629                           ;data.c: 280: calib_data_set_default_diff_pr();
 27630  00520A  ECF8  F01D         	call	_calib_data_set_default_diff_pr	;wreg free
 27631                           
 27632                           ;data.c: 281: crc_append(buf,t16-2);
 27633  00520E  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 27634  005212  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 27635  005216  0EFE               	movlw	254
 27636  005218  0100               	movlb	0	; () banked
 27637  00521A  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 27638  00521C  0100               	movlb	0	; () banked
 27639  00521E  6F6E               	movwf	crc_append@n& (0+255),b
 27640  005220  0EFF               	movlw	255
 27641  005222  0100               	movlb	0	; () banked
 27642  005224  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 27643  005226  0100               	movlb	0	; () banked
 27644  005228  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 27645  00522A  EC0B  F03A         	call	_crc_append	;wreg free
 27646                           
 27647                           ;data.c: 282: at24c02_write_n_byte(pdiff_prEepromObj,0,buf,t16);
 27648  00522E  C186  F062         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 27649  005232  C187  F063         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 27650  005236  0E00               	movlw	0
 27651  005238  0100               	movlb	0	; () banked
 27652  00523A  6F64               	movwf	at24c02_write_n_byte@addr& (0+255),b
 27653  00523C  C079  F065         	movff	calib_data_init_diff_pr@buf,at24c02_write_n_byte@buf
 27654  005240  C07A  F066         	movff	calib_data_init_diff_pr@buf+1,at24c02_write_n_byte@buf+1
 27655  005244  C077  F067         	movff	calib_data_init_diff_pr@t16,at24c02_write_n_byte@len
 27656  005248  C078  F068         	movff	calib_data_init_diff_pr@t16+1,at24c02_write_n_byte@len+1
 27657  00524C  EC87  F02B         	call	_at24c02_write_n_byte	;wreg free
 27658                           
 27659                           ;data.c: 283: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 27660  005250  C186  F064         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 27661  005254  C187  F065         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 27662  005258  0E00               	movlw	0
 27663  00525A  0100               	movlb	0	; () banked
 27664  00525C  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 27665  00525E  C079  F067         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 27666  005262  C07A  F068         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 27667  005266  C077  F069         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 27668  00526A  C078  F06A         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 27669  00526E  EC70  F022         	call	_at24c02_read_n_byte	;wreg free
 27670                           
 27671                           ;data.c: 284: ret=crc_verify(buf,t16);
 27672  005272  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 27673  005276  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 27674  00527A  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 27675  00527E  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 27676  005282  ECAA  F036         	call	_crc_verify	;wreg free
 27677  005286  0100               	movlb	0	; () banked
 27678  005288  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 27679                           
 27680                           ; BSR set to: 0
 27681                           ;data.c: 285: if(!ret){
 27682  00528A  0100               	movlb	0	; () banked
 27683  00528C  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 27684  00528E  0100               	movlb	0	; () banked
 27685  005290  A4D8               	btfss	status,2,c
 27686  005292  0012               	return	
 27687                           
 27688                           ; BSR set to: 0
 27689                           ;data.c: 286: calib_data_set_default_diff_pr();
 27690  005294  ECF8  F01D         	call	_calib_data_set_default_diff_pr	;wreg free
 27691                           
 27692                           ;data.c: 287: crc_append(buf,t16-2);
 27693  005298  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 27694  00529C  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 27695  0052A0  0EFE               	movlw	254
 27696  0052A2  0100               	movlb	0	; () banked
 27697  0052A4  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 27698  0052A6  0100               	movlb	0	; () banked
 27699  0052A8  6F6E               	movwf	crc_append@n& (0+255),b
 27700  0052AA  0EFF               	movlw	255
 27701  0052AC  0100               	movlb	0	; () banked
 27702  0052AE  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 27703  0052B0  0100               	movlb	0	; () banked
 27704  0052B2  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 27705  0052B4  EC0B  F03A         	call	_crc_append	;wreg free
 27706  0052B8  0012               	return	
 27707  0052BA                     __end_of_calib_data_init_diff_pr:
 27708                           	opt stack 0
 27709                           tosu	equ	0xFFF
 27710                           tosh	equ	0xFFE
 27711                           tosl	equ	0xFFD
 27712                           pclath	equ	0xFFA
 27713                           tblptru	equ	0xFF8
 27714                           tblptrh	equ	0xFF7
 27715                           tblptrl	equ	0xFF6
 27716                           tablat	equ	0xFF5
 27717                           prodh	equ	0xFF4
 27718                           prodl	equ	0xFF3
 27719                           intcon	equ	0xFF2
 27720                           indf0	equ	0xFEF
 27721                           postinc0	equ	0xFEE
 27722                           fsr0h	equ	0xFEA
 27723                           fsr0l	equ	0xFE9
 27724                           wreg	equ	0xFE8
 27725                           postinc1	equ	0xFE6
 27726                           postdec1	equ	0xFE5
 27727                           plusw1	equ	0xFE3
 27728                           fsr1h	equ	0xFE2
 27729                           fsr1l	equ	0xFE1
 27730                           indf2	equ	0xFDF
 27731                           postinc2	equ	0xFDE
 27732                           postdec2	equ	0xFDD
 27733                           plusw2	equ	0xFDB
 27734                           fsr2h	equ	0xFDA
 27735                           fsr2l	equ	0xFD9
 27736                           status	equ	0xFD8
 27737                           
 27738 ;; *************** function _crc_verify *****************
 27739 ;; Defined at:
 27740 ;;		line 76 in file "src/depend/crc16.c"
 27741 ;; Parameters:    Size  Location     Type
 27742 ;;  message         2   12[BANK0 ] PTR unsigned char 
 27743 ;;		 -> globleBuffer0(256), globleBuffer1(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 27744 ;;  n               2   14[BANK0 ] unsigned int 
 27745 ;; Auto vars:     Size  Location     Type
 27746 ;;  expected        2   20[BANK0 ] unsigned int 
 27747 ;;  crccal          2   18[BANK0 ] unsigned int 
 27748 ;; Return value:  Size  Location     Type
 27749 ;;                  1    wreg      unsigned char 
 27750 ;; Registers used:
 27751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27752 ;; Tracked objects:
 27753 ;;		On entry : 0/0
 27754 ;;		On exit  : 0/0
 27755 ;;		Unchanged: 0/0
 27756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27758 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27761 ;;Total ram usage:       10 bytes
 27762 ;; Hardware stack levels used:    1
 27763 ;; Hardware stack levels required when called:    5
 27764 ;; This function calls:
 27765 ;;		_crc_sum
 27766 ;;		_m_mem_cpy_len
 27767 ;; This function is called by:
 27768 ;;		_data_sys_init
 27769 ;;		_calib_data_init_diff_pr
 27770 ;;		_calib_data_init_pr
 27771 ;;		_data_sys_save
 27772 ;; This function uses a non-reentrant model
 27773 ;;
 27774                           
 27775                           	psect	text123
 27776  006D54                     __ptext123:
 27777                           	opt stack 0
 27778  006D54                     _crc_verify:
 27779                           	opt stack 23
 27780                           
 27781                           ;crc16.c: 78: uint16_t expected,crccal;
 27782                           ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 27783                           
 27784                           ;incstack = 0
 27785  006D54  0E74               	movlw	low crc_verify@expected
 27786  006D56  0100               	movlb	0	; () banked
 27787  006D58  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 27788  006D5A  0E00               	movlw	high crc_verify@expected
 27789  006D5C  0100               	movlb	0	; () banked
 27790  006D5E  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 27791  006D60  0100               	movlb	0	; () banked
 27792  006D62  516E               	movf	crc_verify@n& (0+255),w,b
 27793  006D64  0100               	movlb	0	; () banked
 27794  006D66  256C               	addwf	crc_verify@message& (0+255),w,b
 27795  006D68  0100               	movlb	0	; () banked
 27796  006D6A  6F70               	movwf	??_crc_verify& (0+255),b
 27797  006D6C  0100               	movlb	0	; () banked
 27798  006D6E  516F               	movf	(crc_verify@n+1)& (0+255),w,b
 27799  006D70  0100               	movlb	0	; () banked
 27800  006D72  216D               	addwfc	(crc_verify@message+1)& (0+255),w,b
 27801  006D74  0100               	movlb	0	; () banked
 27802  006D76  6F71               	movwf	(??_crc_verify+1)& (0+255),b
 27803  006D78  0EFE               	movlw	254
 27804  006D7A  0100               	movlb	0	; () banked
 27805  006D7C  2570               	addwf	??_crc_verify& (0+255),w,b
 27806  006D7E  0100               	movlb	0	; () banked
 27807  006D80  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 27808  006D82  0EFF               	movlw	255
 27809  006D84  0100               	movlb	0	; () banked
 27810  006D86  2171               	addwfc	(??_crc_verify+1)& (0+255),w,b
 27811  006D88  0100               	movlb	0	; () banked
 27812  006D8A  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 27813  006D8C  0E00               	movlw	0
 27814  006D8E  0100               	movlb	0	; () banked
 27815  006D90  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 27816  006D92  0E02               	movlw	2
 27817  006D94  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 27818  006D96  ECB9  F03C         	call	_m_mem_cpy_len	;wreg free
 27819                           
 27820                           ;crc16.c: 82: crccal=crc_sum(message,n - 2);
 27821  006D9A  C06C  F060         	movff	crc_verify@message,crc_sum@puchMsg
 27822  006D9E  C06D  F061         	movff	crc_verify@message+1,crc_sum@puchMsg+1
 27823  006DA2  0EFE               	movlw	254
 27824  006DA4  0100               	movlb	0	; () banked
 27825  006DA6  256E               	addwf	crc_verify@n& (0+255),w,b
 27826  006DA8  0100               	movlb	0	; () banked
 27827  006DAA  6F62               	movwf	crc_sum@usDataLen& (0+255),b
 27828  006DAC  0EFF               	movlw	255
 27829  006DAE  0100               	movlb	0	; () banked
 27830  006DB0  216F               	addwfc	(crc_verify@n+1)& (0+255),w,b
 27831  006DB2  0100               	movlb	0	; () banked
 27832  006DB4  6F63               	movwf	(crc_sum@usDataLen+1)& (0+255),b
 27833  006DB6  EC4E  F032         	call	_crc_sum	;wreg free
 27834  006DBA  C060  F072         	movff	?_crc_sum,crc_verify@crccal
 27835  006DBE  C061  F073         	movff	?_crc_sum+1,crc_verify@crccal+1
 27836                           
 27837                           ;crc16.c: 83: if(expected!=crccal)return 0;
 27838  006DC2  0100               	movlb	0	; () banked
 27839  006DC4  5172               	movf	crc_verify@crccal& (0+255),w,b
 27840  006DC6  0100               	movlb	0	; () banked
 27841  006DC8  1974               	xorwf	crc_verify@expected& (0+255),w,b
 27842  006DCA  E106               	bnz	u11570
 27843  006DCC  0100               	movlb	0	; () banked
 27844  006DCE  5173               	movf	(crc_verify@crccal+1)& (0+255),w,b
 27845  006DD0  0100               	movlb	0	; () banked
 27846  006DD2  1975               	xorwf	(crc_verify@expected+1)& (0+255),w,b
 27847  006DD4  B4D8               	btfsc	status,2,c
 27848  006DD6  D002               	goto	l12843
 27849  006DD8                     u11570:
 27850                           
 27851                           ; BSR set to: 0
 27852  006DD8  0E00               	movlw	0
 27853                           
 27854                           ; BSR set to: 0
 27855  006DDA  0012               	return	
 27856  006DDC                     l12843:
 27857                           
 27858                           ; BSR set to: 0
 27859                           ;crc16.c: 84: return 1;
 27860  006DDC  0E01               	movlw	1
 27861  006DDE  0012               	return	
 27862  006DE0                     __end_of_crc_verify:
 27863                           	opt stack 0
 27864                           tosu	equ	0xFFF
 27865                           tosh	equ	0xFFE
 27866                           tosl	equ	0xFFD
 27867                           pclath	equ	0xFFA
 27868                           tblptru	equ	0xFF8
 27869                           tblptrh	equ	0xFF7
 27870                           tblptrl	equ	0xFF6
 27871                           tablat	equ	0xFF5
 27872                           prodh	equ	0xFF4
 27873                           prodl	equ	0xFF3
 27874                           intcon	equ	0xFF2
 27875                           indf0	equ	0xFEF
 27876                           postinc0	equ	0xFEE
 27877                           fsr0h	equ	0xFEA
 27878                           fsr0l	equ	0xFE9
 27879                           wreg	equ	0xFE8
 27880                           postinc1	equ	0xFE6
 27881                           postdec1	equ	0xFE5
 27882                           plusw1	equ	0xFE3
 27883                           fsr1h	equ	0xFE2
 27884                           fsr1l	equ	0xFE1
 27885                           indf2	equ	0xFDF
 27886                           postinc2	equ	0xFDE
 27887                           postdec2	equ	0xFDD
 27888                           plusw2	equ	0xFDB
 27889                           fsr2h	equ	0xFDA
 27890                           fsr2l	equ	0xFD9
 27891                           status	equ	0xFD8
 27892                           
 27893 ;; *************** function _m_mem_cpy_len *****************
 27894 ;; Defined at:
 27895 ;;		line 41 in file "src/depend/m_string.c"
 27896 ;; Parameters:    Size  Location     Type
 27897 ;;  d               2    0[BANK0 ] PTR unsigned char 
 27898 ;;		 -> m_flash_test@tmp(16), crc_verify@expected(2), globleBuffer0(256), globleBuffer1(256), 
 27899 ;;  s               2    2[BANK0 ] PTR unsigned char 
 27900 ;;		 -> flashTestbuf(65), m_flash_test@tmp(16), globleBuffer0(256), globleBuffer1(256), 
 27901 ;;		 -> defultSystemData(150), prCalibTabDef(162), diff_prCalibTabDef(162), 
 27902 ;;  len             2    4[BANK0 ] unsigned int 
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;		None
 27905 ;; Return value:  Size  Location     Type
 27906 ;;                  1    wreg      void 
 27907 ;; Registers used:
 27908 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27914 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27917 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27918 ;;Total ram usage:        6 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:    4
 27921 ;; This function calls:
 27922 ;;		Nothing
 27923 ;; This function is called by:
 27924 ;;		_data_sys_init
 27925 ;;		_crc_verify
 27926 ;;		_m_flash_write
 27927 ;;		_data_sys_save
 27928 ;;		_m_flash_test
 27929 ;; This function uses a non-reentrant model
 27930 ;;
 27931                           
 27932                           	psect	text124
 27933  007972                     __ptext124:
 27934                           	opt stack 0
 27935  007972                     _m_mem_cpy_len:
 27936                           	opt stack 24
 27937                           
 27938                           ;m_string.c: 44: while(len)
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;incstack = 0
 27942  007972  D01F               	goto	l12371
 27943  007974                     l12363:
 27944                           
 27945                           ;m_string.c: 45: {
 27946                           ;m_string.c: 46: *d++=*s++;
 27947  007974  C062  FFF6         	movff	m_mem_cpy_len@s,tblptrl
 27948  007978  C063  FFF7         	movff	m_mem_cpy_len@s+1,tblptrh
 27949  00797C  6AF8               	clrf	tblptru,c
 27950  00797E  C060  FFD9         	movff	m_mem_cpy_len@d,fsr2l
 27951  007982  C061  FFDA         	movff	m_mem_cpy_len@d+1,fsr2h
 27952  007986  0E0F               	movlw	(high __ramtop+-1)
 27953  007988  64F7               	cpfsgt	tblptrh,c
 27954  00798A  D003               	bra	u11277
 27955  00798C  0008               	tblrd		*
 27956  00798E  50F5               	movf	tablat,w,c
 27957  007990  D005               	bra	u11270
 27958  007992                     u11277:
 27959  007992  CFF6 FFE9          	movff	tblptrl,fsr0l
 27960  007996  CFF7 FFEA          	movff	tblptrh,fsr0h
 27961  00799A  50EF               	movf	indf0,w,c
 27962  00799C                     u11270:
 27963  00799C  6EDF               	movwf	indf2,c
 27964  00799E  0100               	movlb	0	; () banked
 27965  0079A0  4B62               	infsnz	m_mem_cpy_len@s& (0+255),f,b
 27966  0079A2  2B63               	incf	(m_mem_cpy_len@s+1)& (0+255),f,b
 27967                           
 27968                           ; BSR set to: 0
 27969  0079A4  0100               	movlb	0	; () banked
 27970  0079A6  4B60               	infsnz	m_mem_cpy_len@d& (0+255),f,b
 27971  0079A8  2B61               	incf	(m_mem_cpy_len@d+1)& (0+255),f,b
 27972                           
 27973                           ; BSR set to: 0
 27974                           ;m_string.c: 47: len--;
 27975  0079AA  0100               	movlb	0	; () banked
 27976  0079AC  0764               	decf	m_mem_cpy_len@len& (0+255),f,b
 27977  0079AE  A0D8               	btfss	status,0,c
 27978  0079B0  0765               	decf	(m_mem_cpy_len@len+1)& (0+255),f,b
 27979  0079B2                     l12371:
 27980  0079B2  0100               	movlb	0	; () banked
 27981  0079B4  5164               	movf	m_mem_cpy_len@len& (0+255),w,b
 27982  0079B6  0100               	movlb	0	; () banked
 27983  0079B8  1165               	iorwf	(m_mem_cpy_len@len+1)& (0+255),w,b
 27984  0079BA  B4D8               	btfsc	status,2,c
 27985  0079BC  0012               	return	
 27986  0079BE  D7DA               	goto	l12363
 27987  0079C0                     __end_of_m_mem_cpy_len:
 27988                           	opt stack 0
 27989                           tosu	equ	0xFFF
 27990                           tosh	equ	0xFFE
 27991                           tosl	equ	0xFFD
 27992                           pclath	equ	0xFFA
 27993                           tblptru	equ	0xFF8
 27994                           tblptrh	equ	0xFF7
 27995                           tblptrl	equ	0xFF6
 27996                           tablat	equ	0xFF5
 27997                           prodh	equ	0xFF4
 27998                           prodl	equ	0xFF3
 27999                           intcon	equ	0xFF2
 28000                           indf0	equ	0xFEF
 28001                           postinc0	equ	0xFEE
 28002                           fsr0h	equ	0xFEA
 28003                           fsr0l	equ	0xFE9
 28004                           wreg	equ	0xFE8
 28005                           postinc1	equ	0xFE6
 28006                           postdec1	equ	0xFE5
 28007                           plusw1	equ	0xFE3
 28008                           fsr1h	equ	0xFE2
 28009                           fsr1l	equ	0xFE1
 28010                           indf2	equ	0xFDF
 28011                           postinc2	equ	0xFDE
 28012                           postdec2	equ	0xFDD
 28013                           plusw2	equ	0xFDB
 28014                           fsr2h	equ	0xFDA
 28015                           fsr2l	equ	0xFD9
 28016                           status	equ	0xFD8
 28017                           
 28018 ;; *************** function _crc_append *****************
 28019 ;; Defined at:
 28020 ;;		line 86 in file "src/depend/crc16.c"
 28021 ;; Parameters:    Size  Location     Type
 28022 ;;  message         2   12[BANK0 ] PTR unsigned char 
 28023 ;;		 -> globleBuffer0(256), globleBuffer1(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 28024 ;;  n               2   14[BANK0 ] unsigned int 
 28025 ;; Auto vars:     Size  Location     Type
 28026 ;;  crc             2   18[BANK0 ] unsigned int 
 28027 ;; Return value:  Size  Location     Type
 28028 ;;                  1    wreg      void 
 28029 ;; Registers used:
 28030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28031 ;; Tracked objects:
 28032 ;;		On entry : 0/0
 28033 ;;		On exit  : 0/0
 28034 ;;		Unchanged: 0/0
 28035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28038 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28040 ;;Total ram usage:        8 bytes
 28041 ;; Hardware stack levels used:    1
 28042 ;; Hardware stack levels required when called:    5
 28043 ;; This function calls:
 28044 ;;		_crc_sum
 28045 ;; This function is called by:
 28046 ;;		_data_sys_init
 28047 ;;		_calib_data_init_diff_pr
 28048 ;;		_calib_data_init_pr
 28049 ;;		_data_sys_save
 28050 ;; This function uses a non-reentrant model
 28051 ;;
 28052                           
 28053                           	psect	text125
 28054  007416                     __ptext125:
 28055                           	opt stack 0
 28056  007416                     _crc_append:
 28057                           	opt stack 23
 28058                           
 28059                           ;crc16.c: 88: uint16_t crc;
 28060                           ;crc16.c: 89: crc = crc_sum(message, n);
 28061                           
 28062                           ; BSR set to: 0
 28063                           ;incstack = 0
 28064  007416  C06C  F060         	movff	crc_append@message,crc_sum@puchMsg
 28065  00741A  C06D  F061         	movff	crc_append@message+1,crc_sum@puchMsg+1
 28066  00741E  C06E  F062         	movff	crc_append@n,crc_sum@usDataLen
 28067  007422  C06F  F063         	movff	crc_append@n+1,crc_sum@usDataLen+1
 28068  007426  EC4E  F032         	call	_crc_sum	;wreg free
 28069  00742A  C060  F072         	movff	?_crc_sum,crc_append@crc
 28070  00742E  C061  F073         	movff	?_crc_sum+1,crc_append@crc+1
 28071                           
 28072                           ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
 28073  007432  0100               	movlb	0	; () banked
 28074  007434  516E               	movf	crc_append@n& (0+255),w,b
 28075  007436  0100               	movlb	0	; () banked
 28076  007438  256C               	addwf	crc_append@message& (0+255),w,b
 28077  00743A  6ED9               	movwf	fsr2l,c
 28078  00743C  0100               	movlb	0	; () banked
 28079  00743E  516F               	movf	(crc_append@n+1)& (0+255),w,b
 28080  007440  0100               	movlb	0	; () banked
 28081  007442  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 28082  007444  6EDA               	movwf	fsr2h,c
 28083  007446  C072  FFDF         	movff	crc_append@crc,indf2
 28084                           
 28085                           ; BSR set to: 0
 28086                           ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 28087  00744A  0E01               	movlw	1
 28088  00744C  0100               	movlb	0	; () banked
 28089  00744E  256E               	addwf	crc_append@n& (0+255),w,b
 28090  007450  0100               	movlb	0	; () banked
 28091  007452  6F70               	movwf	??_crc_append& (0+255),b
 28092  007454  0E00               	movlw	0
 28093  007456  0100               	movlb	0	; () banked
 28094  007458  216F               	addwfc	(crc_append@n+1)& (0+255),w,b
 28095  00745A  0100               	movlb	0	; () banked
 28096  00745C  6F71               	movwf	(??_crc_append+1)& (0+255),b
 28097  00745E  0100               	movlb	0	; () banked
 28098  007460  5170               	movf	??_crc_append& (0+255),w,b
 28099  007462  0100               	movlb	0	; () banked
 28100  007464  256C               	addwf	crc_append@message& (0+255),w,b
 28101  007466  6ED9               	movwf	fsr2l,c
 28102  007468  0100               	movlb	0	; () banked
 28103  00746A  5171               	movf	(??_crc_append+1)& (0+255),w,b
 28104  00746C  0100               	movlb	0	; () banked
 28105  00746E  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 28106  007470  6EDA               	movwf	fsr2h,c
 28107  007472  0100               	movlb	0	; () banked
 28108  007474  5173               	movf	(crc_append@crc+1)& (0+255),w,b
 28109  007476  6EDF               	movwf	indf2,c
 28110                           
 28111                           ; BSR set to: 0
 28112  007478  0012               	return		;funcret
 28113  00747A                     __end_of_crc_append:
 28114                           	opt stack 0
 28115                           tosu	equ	0xFFF
 28116                           tosh	equ	0xFFE
 28117                           tosl	equ	0xFFD
 28118                           pclath	equ	0xFFA
 28119                           tblptru	equ	0xFF8
 28120                           tblptrh	equ	0xFF7
 28121                           tblptrl	equ	0xFF6
 28122                           tablat	equ	0xFF5
 28123                           prodh	equ	0xFF4
 28124                           prodl	equ	0xFF3
 28125                           intcon	equ	0xFF2
 28126                           indf0	equ	0xFEF
 28127                           postinc0	equ	0xFEE
 28128                           fsr0h	equ	0xFEA
 28129                           fsr0l	equ	0xFE9
 28130                           wreg	equ	0xFE8
 28131                           postinc1	equ	0xFE6
 28132                           postdec1	equ	0xFE5
 28133                           plusw1	equ	0xFE3
 28134                           fsr1h	equ	0xFE2
 28135                           fsr1l	equ	0xFE1
 28136                           indf2	equ	0xFDF
 28137                           postinc2	equ	0xFDE
 28138                           postdec2	equ	0xFDD
 28139                           plusw2	equ	0xFDB
 28140                           fsr2h	equ	0xFDA
 28141                           fsr2l	equ	0xFD9
 28142                           status	equ	0xFD8
 28143                           
 28144 ;; *************** function _crc_sum *****************
 28145 ;; Defined at:
 28146 ;;		line 61 in file "src/depend/crc16.c"
 28147 ;; Parameters:    Size  Location     Type
 28148 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
 28149 ;;		 -> globleBuffer0(256), globleBuffer1(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 28150 ;;  usDataLen       2    2[BANK0 ] unsigned int 
 28151 ;; Auto vars:     Size  Location     Type
 28152 ;;  uIndex          2    8[BANK0 ] unsigned int 
 28153 ;;  len             2    6[BANK0 ] unsigned int 
 28154 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 28155 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 28156 ;; Return value:  Size  Location     Type
 28157 ;;                  2    0[BANK0 ] unsigned int 
 28158 ;; Registers used:
 28159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28160 ;; Tracked objects:
 28161 ;;		On entry : 0/0
 28162 ;;		On exit  : 0/0
 28163 ;;		Unchanged: 0/0
 28164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28165 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28166 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28168 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28169 ;;Total ram usage:       12 bytes
 28170 ;; Hardware stack levels used:    1
 28171 ;; Hardware stack levels required when called:    4
 28172 ;; This function calls:
 28173 ;;		Nothing
 28174 ;; This function is called by:
 28175 ;;		_crc_verify
 28176 ;;		_crc_append
 28177 ;; This function uses a non-reentrant model
 28178 ;;
 28179                           
 28180                           	psect	text126
 28181  00649C                     __ptext126:
 28182                           	opt stack 0
 28183  00649C                     _crc_sum:
 28184                           	opt stack 23
 28185                           
 28186                           ;crc16.c: 63: uint16_t len;
 28187                           ;crc16.c: 64: len=usDataLen;
 28188                           
 28189                           ; BSR set to: 0
 28190                           ;incstack = 0
 28191  00649C  C062  F066         	movff	crc_sum@usDataLen,crc_sum@len
 28192  0064A0  C063  F067         	movff	crc_sum@usDataLen+1,crc_sum@len+1
 28193                           
 28194                           ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
 28195  0064A4  0100               	movlb	0	; () banked
 28196  0064A6  696A               	setf	crc_sum@uchCRCHi& (0+255),b
 28197                           
 28198                           ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
 28199  0064A8  0100               	movlb	0	; () banked
 28200  0064AA  696B               	setf	crc_sum@uchCRCLo& (0+255),b
 28201                           
 28202                           ;crc16.c: 67: uint16_t uIndex ;
 28203                           ;crc16.c: 68: while (len--)
 28204  0064AC  D028               	goto	l12701
 28205  0064AE                     l12693:
 28206                           
 28207                           ; BSR set to: 0
 28208                           ;crc16.c: 69: {
 28209                           ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
 28210  0064AE  C060  FFD9         	movff	crc_sum@puchMsg,fsr2l
 28211  0064B2  C061  FFDA         	movff	crc_sum@puchMsg+1,fsr2h
 28212  0064B6  50DF               	movf	indf2,w,c
 28213  0064B8  0100               	movlb	0	; () banked
 28214  0064BA  196B               	xorwf	crc_sum@uchCRCLo& (0+255),w,b
 28215  0064BC  0100               	movlb	0	; () banked
 28216  0064BE  6F64               	movwf	??_crc_sum& (0+255),b
 28217  0064C0  0100               	movlb	0	; () banked
 28218  0064C2  5164               	movf	??_crc_sum& (0+255),w,b
 28219  0064C4  0100               	movlb	0	; () banked
 28220  0064C6  6F68               	movwf	crc_sum@uIndex& (0+255),b
 28221  0064C8  6B69               	clrf	(crc_sum@uIndex+1)& (0+255),b
 28222                           
 28223                           ; BSR set to: 0
 28224  0064CA  0100               	movlb	0	; () banked
 28225  0064CC  4B60               	infsnz	crc_sum@puchMsg& (0+255),f,b
 28226  0064CE  2B61               	incf	(crc_sum@puchMsg+1)& (0+255),f,b
 28227                           
 28228                           ; BSR set to: 0
 28229                           ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
 28230  0064D0  0E8B               	movlw	low _auchCRCHi
 28231  0064D2  0100               	movlb	0	; () banked
 28232  0064D4  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 28233  0064D6  6EF6               	movwf	tblptrl,c
 28234  0064D8  0EEE               	movlw	high _auchCRCHi
 28235  0064DA  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 28236  0064DC  6EF7               	movwf	tblptrh,c
 28237  0064DE                     	if	0	;There are less than 3 active tblptr bytes
 28238  0064DE                     	endif
 28239  0064DE  0008               	tblrd		*
 28240  0064E0  50F5               	movf	tablat,w,c
 28241  0064E2  0100               	movlb	0	; () banked
 28242  0064E4  196A               	xorwf	crc_sum@uchCRCHi& (0+255),w,b
 28243  0064E6  0100               	movlb	0	; () banked
 28244  0064E8  6F6B               	movwf	crc_sum@uchCRCLo& (0+255),b
 28245                           
 28246                           ; BSR set to: 0
 28247                           ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
 28248  0064EA  0E8B               	movlw	low _auchCRCLo
 28249  0064EC  0100               	movlb	0	; () banked
 28250  0064EE  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 28251  0064F0  6EF6               	movwf	tblptrl,c
 28252  0064F2  0EED               	movlw	high _auchCRCLo
 28253  0064F4  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 28254  0064F6  6EF7               	movwf	tblptrh,c
 28255  0064F8                     	if	0	;There are less than 3 active tblptr bytes
 28256  0064F8                     	endif
 28257  0064F8  0008               	tblrd		*
 28258  0064FA  CFF5 F06A          	movff	tablat,crc_sum@uchCRCHi
 28259  0064FE                     l12701:
 28260                           
 28261                           ; BSR set to: 0
 28262  0064FE  0100               	movlb	0	; () banked
 28263  006500  0766               	decf	crc_sum@len& (0+255),f,b
 28264  006502  A0D8               	btfss	status,0,c
 28265  006504  0767               	decf	(crc_sum@len+1)& (0+255),f,b
 28266  006506  0100               	movlb	0	; () banked
 28267  006508  2966               	incf	crc_sum@len& (0+255),w,b
 28268  00650A  E1D1               	bnz	l12693
 28269  00650C  0100               	movlb	0	; () banked
 28270  00650E  2967               	incf	(crc_sum@len+1)& (0+255),w,b
 28271  006510  A4D8               	btfss	status,2,c
 28272  006512  D7CD               	goto	l12693
 28273                           
 28274                           ; BSR set to: 0
 28275                           ;crc16.c: 73: }
 28276                           ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
 28277                           
 28278                           ; BSR set to: 0
 28279  006514  0100               	movlb	0	; () banked
 28280  006516  516B               	movf	crc_sum@uchCRCLo& (0+255),w,b
 28281  006518  C06A  F064         	movff	crc_sum@uchCRCHi,??_crc_sum
 28282  00651C  0100               	movlb	0	; () banked
 28283  00651E  6B65               	clrf	(??_crc_sum+1)& (0+255),b
 28284  006520  C064  F065         	movff	??_crc_sum,??_crc_sum+1
 28285  006524  0100               	movlb	0	; () banked
 28286  006526  6B64               	clrf	??_crc_sum& (0+255),b
 28287  006528  0100               	movlb	0	; () banked
 28288  00652A  1164               	iorwf	??_crc_sum& (0+255),w,b
 28289  00652C  0100               	movlb	0	; () banked
 28290  00652E  6F60               	movwf	?_crc_sum& (0+255),b
 28291  006530  0100               	movlb	0	; () banked
 28292  006532  5165               	movf	(??_crc_sum+1)& (0+255),w,b
 28293  006534  0100               	movlb	0	; () banked
 28294  006536  6F61               	movwf	(?_crc_sum+1)& (0+255),b
 28295  006538  0012               	return	
 28296  00653A                     __end_of_crc_sum:
 28297                           	opt stack 0
 28298                           tosu	equ	0xFFF
 28299                           tosh	equ	0xFFE
 28300                           tosl	equ	0xFFD
 28301                           pclath	equ	0xFFA
 28302                           tblptru	equ	0xFF8
 28303                           tblptrh	equ	0xFF7
 28304                           tblptrl	equ	0xFF6
 28305                           tablat	equ	0xFF5
 28306                           prodh	equ	0xFF4
 28307                           prodl	equ	0xFF3
 28308                           intcon	equ	0xFF2
 28309                           indf0	equ	0xFEF
 28310                           postinc0	equ	0xFEE
 28311                           fsr0h	equ	0xFEA
 28312                           fsr0l	equ	0xFE9
 28313                           wreg	equ	0xFE8
 28314                           postinc1	equ	0xFE6
 28315                           postdec1	equ	0xFE5
 28316                           plusw1	equ	0xFE3
 28317                           fsr1h	equ	0xFE2
 28318                           fsr1l	equ	0xFE1
 28319                           indf2	equ	0xFDF
 28320                           postinc2	equ	0xFDE
 28321                           postdec2	equ	0xFDD
 28322                           plusw2	equ	0xFDB
 28323                           fsr2h	equ	0xFDA
 28324                           fsr2l	equ	0xFD9
 28325                           status	equ	0xFD8
 28326                           
 28327 ;; *************** function _calib_data_set_default_diff_pr *****************
 28328 ;; Defined at:
 28329 ;;		line 238 in file "src/api/data.c"
 28330 ;; Parameters:    Size  Location     Type
 28331 ;;		None
 28332 ;; Auto vars:     Size  Location     Type
 28333 ;;  i               1   15[BANK0 ] unsigned char 
 28334 ;;  j               1   14[BANK0 ] unsigned char 
 28335 ;; Return value:  Size  Location     Type
 28336 ;;                  1    wreg      void 
 28337 ;; Registers used:
 28338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28339 ;; Tracked objects:
 28340 ;;		On entry : 0/0
 28341 ;;		On exit  : 0/0
 28342 ;;		Unchanged: 0/0
 28343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28346 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28347 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28348 ;;Total ram usage:        8 bytes
 28349 ;; Hardware stack levels used:    1
 28350 ;; Hardware stack levels required when called:    5
 28351 ;; This function calls:
 28352 ;;		___wmul
 28353 ;; This function is called by:
 28354 ;;		_calib_data_init_diff_pr
 28355 ;; This function uses a non-reentrant model
 28356 ;;
 28357                           
 28358                           	psect	text127
 28359  003BF0                     __ptext127:
 28360                           	opt stack 0
 28361  003BF0                     _calib_data_set_default_diff_pr:
 28362                           	opt stack 23
 28363                           
 28364                           ;data.c: 240: uint8_t i,j;
 28365                           ;data.c: 241: diff_prCalibTabDef.rowCount=3;
 28366                           
 28367                           ; BSR set to: 0
 28368                           ;incstack = 0
 28369  003BF0  0E03               	movlw	3
 28370  003BF2  0102               	movlb	2	; () banked
 28371  003BF4  6F00               	movwf	_diff_prCalibTabDef& (0+255),b
 28372                           
 28373                           ;data.c: 242: for(i=0;i<3;i++){
 28374  003BF6  0E00               	movlw	0
 28375  003BF8  0100               	movlb	0	; () banked
 28376  003BFA  6F6F               	movwf	calib_data_set_default_diff_pr@i& (0+255),b
 28377  003BFC                     l12897:
 28378                           
 28379                           ; BSR set to: 0
 28380  003BFC  0E02               	movlw	2
 28381  003BFE  0100               	movlb	0	; () banked
 28382  003C00  656F               	cpfsgt	calib_data_set_default_diff_pr@i& (0+255),b
 28383  003C02  D001               	goto	l12901
 28384  003C04  0012               	return	
 28385  003C06                     l12901:
 28386                           
 28387                           ; BSR set to: 0
 28388                           ;data.c: 243: diff_prCalibTabDef.prCalibRow[i].pCount=6;
 28389  003C06  0100               	movlb	0	; () banked
 28390  003C08  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 28391  003C0A  0D34               	mullw	52
 28392  003C0C  0E04               	movlw	low (_diff_prCalibTabDef+4)
 28393  003C0E  24F3               	addwf	prodl,w,c
 28394  003C10  6ED9               	movwf	fsr2l,c
 28395  003C12  0E02               	movlw	high (_diff_prCalibTabDef+4)
 28396  003C14  20F4               	addwfc	prodh,w,c
 28397  003C16  6EDA               	movwf	fsr2h,c
 28398  003C18  0E06               	movlw	6
 28399  003C1A  6EDF               	movwf	indf2,c
 28400                           
 28401                           ; BSR set to: 0
 28402                           ;data.c: 244: for(j=0;j<6;j++){
 28403  003C1C  0E00               	movlw	0
 28404  003C1E  0100               	movlb	0	; () banked
 28405  003C20  6F6E               	movwf	calib_data_set_default_diff_pr@j& (0+255),b
 28406  003C22                     l12905:
 28407                           
 28408                           ; BSR set to: 0
 28409  003C22  0E05               	movlw	5
 28410  003C24  0100               	movlb	0	; () banked
 28411  003C26  656E               	cpfsgt	calib_data_set_default_diff_pr@j& (0+255),b
 28412  003C28  D001               	goto	l12909
 28413  003C2A  D0D4               	goto	l12917
 28414  003C2C                     l12909:
 28415                           
 28416                           ; BSR set to: 0
 28417                           ;data.c: 245: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 28418  003C2C  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 28419  003C30  0100               	movlb	0	; () banked
 28420  003C32  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 28421  003C34  0E17               	movlw	23
 28422  003C36  0100               	movlb	0	; () banked
 28423  003C38  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28424  003C3A  0E70               	movlw	112
 28425  003C3C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 28426  003C3E  ECF9  F03E         	call	___wmul	;wreg free
 28427  003C42  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 28428  003C46  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 28429  003C4A  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 28430  003C4E  0100               	movlb	0	; () banked
 28431  003C50  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 28432  003C52  0E01               	movlw	1
 28433  003C54  0100               	movlb	0	; () banked
 28434  003C56  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28435  003C58  0EF4               	movlw	244
 28436  003C5A  6F64               	movwf	___wmul@multiplicand& (0+255),b
 28437  003C5C  ECF9  F03E         	call	___wmul	;wreg free
 28438  003C60  0100               	movlb	0	; () banked
 28439  003C62  5162               	movf	?___wmul& (0+255),w,b
 28440  003C64  0100               	movlb	0	; () banked
 28441  003C66  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 28442  003C68  0100               	movlb	0	; () banked
 28443  003C6A  5163               	movf	(?___wmul+1)& (0+255),w,b
 28444  003C6C  0100               	movlb	0	; () banked
 28445  003C6E  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 28446  003C70  0100               	movlb	0	; () banked
 28447  003C72  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 28448  003C74  0D08               	mullw	8
 28449  003C76  0E04               	movlw	4
 28450  003C78  26F3               	addwf	prodl,f,c
 28451  003C7A  0E00               	movlw	0
 28452  003C7C  22F4               	addwfc	prodh,f,c
 28453  003C7E  0E00               	movlw	low _diff_prCalibTabDef
 28454  003C80  0100               	movlb	0	; () banked
 28455  003C82  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 28456  003C84  0E02               	movlw	high _diff_prCalibTabDef
 28457  003C86  0100               	movlb	0	; () banked
 28458  003C88  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 28459  003C8A  0E04               	movlw	4
 28460  003C8C  0100               	movlb	0	; () banked
 28461  003C8E  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 28462  003C90  0E00               	movlw	0
 28463  003C92  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 28464  003C94  50F3               	movf	prodl,w,c
 28465  003C96  0100               	movlb	0	; () banked
 28466  003C98  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 28467  003C9A  50F4               	movf	prodh,w,c
 28468  003C9C  0100               	movlb	0	; () banked
 28469  003C9E  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 28470  003CA0  0100               	movlb	0	; () banked
 28471  003CA2  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 28472  003CA4  0D34               	mullw	52
 28473  003CA6  50F3               	movf	prodl,w,c
 28474  003CA8  0100               	movlb	0	; () banked
 28475  003CAA  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 28476  003CAC  50F4               	movf	prodh,w,c
 28477  003CAE  0100               	movlb	0	; () banked
 28478  003CB0  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 28479  003CB2  0E04               	movlw	4
 28480  003CB4  0100               	movlb	0	; () banked
 28481  003CB6  256A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),w,b
 28482  003CB8  6ED9               	movwf	fsr2l,c
 28483  003CBA  0E00               	movlw	0
 28484  003CBC  0100               	movlb	0	; () banked
 28485  003CBE  216B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),w,b
 28486  003CC0  6EDA               	movwf	fsr2h,c
 28487  003CC2  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 28488  003CC6  C069  FFDD         	movff	??_calib_data_set_default_diff_pr+1,postdec2
 28489                           
 28490                           ;data.c: 246: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 28491  003CCA  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 28492  003CCE  0100               	movlb	0	; () banked
 28493  003CD0  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 28494  003CD2  0E17               	movlw	23
 28495  003CD4  0100               	movlb	0	; () banked
 28496  003CD6  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28497  003CD8  0E70               	movlw	112
 28498  003CDA  6F64               	movwf	___wmul@multiplicand& (0+255),b
 28499  003CDC  ECF9  F03E         	call	___wmul	;wreg free
 28500  003CE0  0100               	movlb	0	; () banked
 28501  003CE2  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 28502  003CE6  0100               	movlb	0	; () banked
 28503  003CE8  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 28504  003CEC  0E00               	movlw	0
 28505  003CEE  0100               	movlb	0	; () banked
 28506  003CF0  BF69               	btfsc	(??_calib_data_set_default_diff_pr+1)& (0+255),7,b
 28507  003CF2  0EFF               	movlw	255
 28508  003CF4  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 28509  003CF6  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 28510  003CF8  0100               	movlb	0	; () banked
 28511  003CFA  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 28512  003CFC  0D08               	mullw	8
 28513  003CFE  0E04               	movlw	4
 28514  003D00  26F3               	addwf	prodl,f,c
 28515  003D02  0E00               	movlw	0
 28516  003D04  22F4               	addwfc	prodh,f,c
 28517  003D06  0E00               	movlw	low _diff_prCalibTabDef
 28518  003D08  0100               	movlb	0	; () banked
 28519  003D0A  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 28520  003D0C  0E02               	movlw	high _diff_prCalibTabDef
 28521  003D0E  0100               	movlb	0	; () banked
 28522  003D10  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 28523  003D12  0E04               	movlw	4
 28524  003D14  0100               	movlb	0	; () banked
 28525  003D16  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 28526  003D18  0E00               	movlw	0
 28527  003D1A  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 28528  003D1C  50F3               	movf	prodl,w,c
 28529  003D1E  0100               	movlb	0	; () banked
 28530  003D20  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 28531  003D22  50F4               	movf	prodh,w,c
 28532  003D24  0100               	movlb	0	; () banked
 28533  003D26  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 28534  003D28  0100               	movlb	0	; () banked
 28535  003D2A  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 28536  003D2C  0D34               	mullw	52
 28537  003D2E  50F3               	movf	prodl,w,c
 28538  003D30  0100               	movlb	0	; () banked
 28539  003D32  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 28540  003D34  6ED9               	movwf	fsr2l,c
 28541  003D36  50F4               	movf	prodh,w,c
 28542  003D38  0100               	movlb	0	; () banked
 28543  003D3A  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 28544  003D3C  6EDA               	movwf	fsr2h,c
 28545  003D3E  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 28546  003D42  C069  FFDE         	movff	??_calib_data_set_default_diff_pr+1,postinc2
 28547  003D46  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 28548  003D4A  C06B  FFDE         	movff	??_calib_data_set_default_diff_pr+3,postinc2
 28549                           
 28550                           ; BSR set to: 0
 28551                           ;data.c: 247: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=i+1000;
 28552  003D4E  0EE8               	movlw	232
 28553  003D50  0100               	movlb	0	; () banked
 28554  003D52  6F68               	movwf	??_calib_data_set_default_diff_pr& (0+255),b
 28555  003D54  0E03               	movlw	3
 28556  003D56  0100               	movlb	0	; () banked
 28557  003D58  6F69               	movwf	(??_calib_data_set_default_diff_pr+1)& (0+255),b
 28558  003D5A  0100               	movlb	0	; () banked
 28559  003D5C  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 28560  003D5E  0100               	movlb	0	; () banked
 28561  003D60  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 28562  003D62  6B6B               	clrf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 28563  003D64  0100               	movlb	0	; () banked
 28564  003D66  5168               	movf	??_calib_data_set_default_diff_pr& (0+255),w,b
 28565  003D68  0100               	movlb	0	; () banked
 28566  003D6A  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 28567  003D6C  0100               	movlb	0	; () banked
 28568  003D6E  5169               	movf	(??_calib_data_set_default_diff_pr+1)& (0+255),w,b
 28569  003D70  0100               	movlb	0	; () banked
 28570  003D72  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 28571  003D74  0100               	movlb	0	; () banked
 28572  003D76  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 28573  003D78  0D08               	mullw	8
 28574  003D7A  0E04               	movlw	4
 28575  003D7C  26F3               	addwf	prodl,f,c
 28576  003D7E  0E00               	movlw	0
 28577  003D80  22F4               	addwfc	prodh,f,c
 28578  003D82  0E00               	movlw	low _diff_prCalibTabDef
 28579  003D84  0100               	movlb	0	; () banked
 28580  003D86  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 28581  003D88  0E02               	movlw	high _diff_prCalibTabDef
 28582  003D8A  0100               	movlb	0	; () banked
 28583  003D8C  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 28584  003D8E  0E04               	movlw	4
 28585  003D90  0100               	movlb	0	; () banked
 28586  003D92  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 28587  003D94  0E00               	movlw	0
 28588  003D96  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 28589  003D98  50F3               	movf	prodl,w,c
 28590  003D9A  0100               	movlb	0	; () banked
 28591  003D9C  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 28592  003D9E  50F4               	movf	prodh,w,c
 28593  003DA0  0100               	movlb	0	; () banked
 28594  003DA2  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 28595  003DA4  0100               	movlb	0	; () banked
 28596  003DA6  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 28597  003DA8  0D34               	mullw	52
 28598  003DAA  50F3               	movf	prodl,w,c
 28599  003DAC  0100               	movlb	0	; () banked
 28600  003DAE  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 28601  003DB0  50F4               	movf	prodh,w,c
 28602  003DB2  0100               	movlb	0	; () banked
 28603  003DB4  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 28604  003DB6  0E06               	movlw	6
 28605  003DB8  0100               	movlb	0	; () banked
 28606  003DBA  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 28607  003DBC  6ED9               	movwf	fsr2l,c
 28608  003DBE  0E00               	movlw	0
 28609  003DC0  0100               	movlb	0	; () banked
 28610  003DC2  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 28611  003DC4  6EDA               	movwf	fsr2h,c
 28612  003DC6  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 28613  003DCA  C06B  FFDD         	movff	??_calib_data_set_default_diff_pr+3,postdec2
 28614                           
 28615                           ; BSR set to: 0
 28616  003DCE  0100               	movlb	0	; () banked
 28617  003DD0  2B6E               	incf	calib_data_set_default_diff_pr@j& (0+255),f,b
 28618  003DD2  D727               	goto	l12905
 28619  003DD4                     l12917:
 28620                           
 28621                           ; BSR set to: 0
 28622  003DD4  0100               	movlb	0	; () banked
 28623  003DD6  2B6F               	incf	calib_data_set_default_diff_pr@i& (0+255),f,b
 28624  003DD8  D711               	goto	l12897
 28625  003DDA                     __end_of_calib_data_set_default_diff_pr:
 28626                           	opt stack 0
 28627                           tosu	equ	0xFFF
 28628                           tosh	equ	0xFFE
 28629                           tosl	equ	0xFFD
 28630                           pclath	equ	0xFFA
 28631                           tblptru	equ	0xFF8
 28632                           tblptrh	equ	0xFF7
 28633                           tblptrl	equ	0xFF6
 28634                           tablat	equ	0xFF5
 28635                           prodh	equ	0xFF4
 28636                           prodl	equ	0xFF3
 28637                           intcon	equ	0xFF2
 28638                           indf0	equ	0xFEF
 28639                           postinc0	equ	0xFEE
 28640                           fsr0h	equ	0xFEA
 28641                           fsr0l	equ	0xFE9
 28642                           wreg	equ	0xFE8
 28643                           postinc1	equ	0xFE6
 28644                           postdec1	equ	0xFE5
 28645                           plusw1	equ	0xFE3
 28646                           fsr1h	equ	0xFE2
 28647                           fsr1l	equ	0xFE1
 28648                           indf2	equ	0xFDF
 28649                           postinc2	equ	0xFDE
 28650                           postdec2	equ	0xFDD
 28651                           plusw2	equ	0xFDB
 28652                           fsr2h	equ	0xFDA
 28653                           fsr2l	equ	0xFD9
 28654                           status	equ	0xFD8
 28655                           
 28656 ;; *************** function ___wmul *****************
 28657 ;; Defined at:
 28658 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 28659 ;; Parameters:    Size  Location     Type
 28660 ;;  multiplier      2    2[BANK0 ] unsigned int 
 28661 ;;  multiplicand    2    4[BANK0 ] unsigned int 
 28662 ;; Auto vars:     Size  Location     Type
 28663 ;;  product         2    6[BANK0 ] unsigned int 
 28664 ;; Return value:  Size  Location     Type
 28665 ;;                  2    2[BANK0 ] unsigned int 
 28666 ;; Registers used:
 28667 ;;		wreg, status,2, status,0, prodl, prodh
 28668 ;; Tracked objects:
 28669 ;;		On entry : 0/0
 28670 ;;		On exit  : 0/0
 28671 ;;		Unchanged: 0/0
 28672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28676 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28677 ;;Total ram usage:        6 bytes
 28678 ;; Hardware stack levels used:    1
 28679 ;; Hardware stack levels required when called:    4
 28680 ;; This function calls:
 28681 ;;		Nothing
 28682 ;; This function is called by:
 28683 ;;		_calib_data_set_default_diff_pr
 28684 ;;		_calib_data_set_default_pr
 28685 ;;		_key_adj_value_fixed_point
 28686 ;; This function uses a non-reentrant model
 28687 ;;
 28688                           
 28689                           	psect	text128
 28690  007DF2                     __ptext128:
 28691                           	opt stack 0
 28692  007DF2                     ___wmul:
 28693                           	opt stack 22
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;incstack = 0
 28697  007DF2  0100               	movlb	0	; () banked
 28698  007DF4  5162               	movf	___wmul@multiplier& (0+255),w,b
 28699  007DF6  0100               	movlb	0	; () banked
 28700  007DF8  0364               	mulwf	___wmul@multiplicand& (0+255),b
 28701  007DFA  CFF3 F066          	movff	prodl,___wmul@product
 28702  007DFE  CFF4 F067          	movff	prodh,___wmul@product+1
 28703  007E02  0100               	movlb	0	; () banked
 28704  007E04  5162               	movf	___wmul@multiplier& (0+255),w,b
 28705  007E06  0100               	movlb	0	; () banked
 28706  007E08  0365               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28707  007E0A  50F3               	movf	prodl,w,c
 28708  007E0C  0100               	movlb	0	; () banked
 28709  007E0E  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 28710  007E10  0100               	movlb	0	; () banked
 28711  007E12  5163               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28712  007E14  0100               	movlb	0	; () banked
 28713  007E16  0364               	mulwf	___wmul@multiplicand& (0+255),b
 28714  007E18  50F3               	movf	prodl,w,c
 28715  007E1A  0100               	movlb	0	; () banked
 28716  007E1C  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 28717                           
 28718                           ; BSR set to: 0
 28719  007E1E  C066  F062         	movff	___wmul@product,?___wmul
 28720  007E22  C067  F063         	movff	___wmul@product+1,?___wmul+1
 28721  007E26  0012               	return	
 28722  007E28                     __end_of___wmul:
 28723                           	opt stack 0
 28724                           tosu	equ	0xFFF
 28725                           tosh	equ	0xFFE
 28726                           tosl	equ	0xFFD
 28727                           pclath	equ	0xFFA
 28728                           tblptru	equ	0xFF8
 28729                           tblptrh	equ	0xFF7
 28730                           tblptrl	equ	0xFF6
 28731                           tablat	equ	0xFF5
 28732                           prodh	equ	0xFF4
 28733                           prodl	equ	0xFF3
 28734                           intcon	equ	0xFF2
 28735                           indf0	equ	0xFEF
 28736                           postinc0	equ	0xFEE
 28737                           fsr0h	equ	0xFEA
 28738                           fsr0l	equ	0xFE9
 28739                           wreg	equ	0xFE8
 28740                           postinc1	equ	0xFE6
 28741                           postdec1	equ	0xFE5
 28742                           plusw1	equ	0xFE3
 28743                           fsr1h	equ	0xFE2
 28744                           fsr1l	equ	0xFE1
 28745                           indf2	equ	0xFDF
 28746                           postinc2	equ	0xFDE
 28747                           postdec2	equ	0xFDD
 28748                           plusw2	equ	0xFDB
 28749                           fsr2h	equ	0xFDA
 28750                           fsr2l	equ	0xFD9
 28751                           status	equ	0xFD8
 28752                           
 28753 ;; *************** function _at24c02_write_n_byte *****************
 28754 ;; Defined at:
 28755 ;;		line 69 in file "src/driver/ex_eeprom.c"
 28756 ;; Parameters:    Size  Location     Type
 28757 ;;  pAt24c02        2    2[BANK0 ] PTR struct .
 28758 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 28759 ;;  addr            1    4[BANK0 ] unsigned char 
 28760 ;;  buf             2    5[BANK0 ] PTR unsigned char 
 28761 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 28762 ;;  len             2    7[BANK0 ] unsigned int 
 28763 ;; Auto vars:     Size  Location     Type
 28764 ;;  i               2    9[BANK0 ] unsigned int 
 28765 ;; Return value:  Size  Location     Type
 28766 ;;                  1    wreg      void 
 28767 ;; Registers used:
 28768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 28769 ;; Tracked objects:
 28770 ;;		On entry : 0/0
 28771 ;;		On exit  : 0/0
 28772 ;;		Unchanged: 0/0
 28773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28774 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28777 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28778 ;;Total ram usage:        9 bytes
 28779 ;; Hardware stack levels used:    1
 28780 ;; Hardware stack levels required when called:    7
 28781 ;; This function calls:
 28782 ;;		_iic_send_byte
 28783 ;;		_iic_start
 28784 ;;		_iic_stop
 28785 ;; This function is called by:
 28786 ;;		_calib_data_init_diff_pr
 28787 ;;		_calib_data_init_pr
 28788 ;; This function uses a non-reentrant model
 28789 ;;
 28790                           
 28791                           	psect	text129
 28792  00570E                     __ptext129:
 28793                           	opt stack 0
 28794  00570E                     _at24c02_write_n_byte:
 28795                           	opt stack 21
 28796                           
 28797                           ;ex_eeprom.c: 71: uint16_t i;
 28798                           ;ex_eeprom.c: 72: for(i=0;i<len;i++){
 28799                           
 28800                           ; BSR set to: 0
 28801                           ;incstack = 0
 28802  00570E  0E00               	movlw	0
 28803  005710  0100               	movlb	0	; () banked
 28804  005712  6F6A               	movwf	(at24c02_write_n_byte@i+1)& (0+255),b
 28805  005714  0E00               	movlw	0
 28806  005716  6F69               	movwf	at24c02_write_n_byte@i& (0+255),b
 28807  005718  D073               	goto	l12983
 28808  00571A                     l12973:
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;ex_eeprom.c: 73: pAt24c02->iic_start();
 28812  00571A  0100               	movlb	0	; () banked
 28813  00571C  EE20 F001          	lfsr	2,1
 28814  005720  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 28815  005722  26D9               	addwf	fsr2l,f,c
 28816  005724  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 28817  005726  22DA               	addwfc	fsr2h,f,c
 28818  005728  D801               	call	u11798
 28819  00572A  D00A               	goto	u11799
 28820  00572C                     u11798:
 28821  00572C  0005               	push	
 28822  00572E  6EFA               	movwf	pclath,c
 28823  005730  50DE               	movf	postinc2,w,c
 28824  005732  6EFD               	movwf	tosl,c
 28825  005734  50DE               	movf	postinc2,w,c
 28826  005736  6EFE               	movwf	tosh,c
 28827  005738  50F8               	movf	tblptru,w,c
 28828  00573A  6EFF               	movwf	tosu,c
 28829  00573C  50FA               	movf	pclath,w,c
 28830  00573E  0012               	return		;indir
 28831  005740                     u11799:
 28832                           
 28833                           ;ex_eeprom.c: 74: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 28834  005740  0100               	movlb	0	; () banked
 28835  005742  EE20 F005          	lfsr	2,5
 28836  005746  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 28837  005748  26D9               	addwf	fsr2l,f,c
 28838  00574A  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 28839  00574C  22DA               	addwfc	fsr2h,f,c
 28840  00574E  D801               	call	u11808
 28841  005750  D00F               	goto	u11809
 28842  005752                     u11808:
 28843  005752  0005               	push	
 28844  005754  6EFA               	movwf	pclath,c
 28845  005756  50DE               	movf	postinc2,w,c
 28846  005758  6EFD               	movwf	tosl,c
 28847  00575A  50DE               	movf	postinc2,w,c
 28848  00575C  6EFE               	movwf	tosh,c
 28849  00575E  50F8               	movf	tblptru,w,c
 28850  005760  6EFF               	movwf	tosu,c
 28851  005762  50FA               	movf	pclath,w,c
 28852  005764  C062  FFD9         	movff	at24c02_write_n_byte@pAt24c02,fsr2l
 28853  005768  C063  FFDA         	movff	at24c02_write_n_byte@pAt24c02+1,fsr2h
 28854  00576C  50DF               	movf	indf2,w,c
 28855  00576E  0012               	return		;indir
 28856  005770                     u11809:
 28857                           
 28858                           ;ex_eeprom.c: 75: pAt24c02->iic_send_byte(addr++);
 28859  005770  0100               	movlb	0	; () banked
 28860  005772  EE20 F005          	lfsr	2,5
 28861  005776  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 28862  005778  26D9               	addwf	fsr2l,f,c
 28863  00577A  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 28864  00577C  22DA               	addwfc	fsr2h,f,c
 28865  00577E  D801               	call	u11818
 28866  005780  D00C               	goto	l12975
 28867  005782                     u11818:
 28868  005782  0005               	push	
 28869  005784  6EFA               	movwf	pclath,c
 28870  005786  50DE               	movf	postinc2,w,c
 28871  005788  6EFD               	movwf	tosl,c
 28872  00578A  50DE               	movf	postinc2,w,c
 28873  00578C  6EFE               	movwf	tosh,c
 28874  00578E  50F8               	movf	tblptru,w,c
 28875  005790  6EFF               	movwf	tosu,c
 28876  005792  50FA               	movf	pclath,w,c
 28877  005794  0100               	movlb	0	; () banked
 28878  005796  5164               	movf	at24c02_write_n_byte@addr& (0+255),w,b
 28879  005798  0012               	return		;indir
 28880  00579A                     l12975:
 28881  00579A  0100               	movlb	0	; () banked
 28882  00579C  2B64               	incf	at24c02_write_n_byte@addr& (0+255),f,b
 28883                           
 28884                           ; BSR set to: 0
 28885                           ;ex_eeprom.c: 77: pAt24c02->iic_send_byte(*buf++);
 28886  00579E  0100               	movlb	0	; () banked
 28887  0057A0  EE20 F005          	lfsr	2,5
 28888  0057A4  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 28889  0057A6  26D9               	addwf	fsr2l,f,c
 28890  0057A8  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 28891  0057AA  22DA               	addwfc	fsr2h,f,c
 28892  0057AC  D801               	call	u11828
 28893  0057AE  D00F               	goto	u11829
 28894  0057B0                     u11828:
 28895  0057B0  0005               	push	
 28896  0057B2  6EFA               	movwf	pclath,c
 28897  0057B4  50DE               	movf	postinc2,w,c
 28898  0057B6  6EFD               	movwf	tosl,c
 28899  0057B8  50DE               	movf	postinc2,w,c
 28900  0057BA  6EFE               	movwf	tosh,c
 28901  0057BC  50F8               	movf	tblptru,w,c
 28902  0057BE  6EFF               	movwf	tosu,c
 28903  0057C0  50FA               	movf	pclath,w,c
 28904  0057C2  C065  FFD9         	movff	at24c02_write_n_byte@buf,fsr2l
 28905  0057C6  C066  FFDA         	movff	at24c02_write_n_byte@buf+1,fsr2h
 28906  0057CA  50DF               	movf	indf2,w,c
 28907  0057CC  0012               	return		;indir
 28908  0057CE                     u11829:
 28909  0057CE  0100               	movlb	0	; () banked
 28910  0057D0  4B65               	infsnz	at24c02_write_n_byte@buf& (0+255),f,b
 28911  0057D2  2B66               	incf	(at24c02_write_n_byte@buf+1)& (0+255),f,b
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;ex_eeprom.c: 78: pAt24c02->iic_stop();
 28915  0057D4  0100               	movlb	0	; () banked
 28916  0057D6  EE20 F003          	lfsr	2,3
 28917  0057DA  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 28918  0057DC  26D9               	addwf	fsr2l,f,c
 28919  0057DE  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 28920  0057E0  22DA               	addwfc	fsr2h,f,c
 28921  0057E2  D801               	call	u11838
 28922  0057E4  D00A               	goto	l12981
 28923  0057E6                     u11838:
 28924  0057E6  0005               	push	
 28925  0057E8  6EFA               	movwf	pclath,c
 28926  0057EA  50DE               	movf	postinc2,w,c
 28927  0057EC  6EFD               	movwf	tosl,c
 28928  0057EE  50DE               	movf	postinc2,w,c
 28929  0057F0  6EFE               	movwf	tosh,c
 28930  0057F2  50F8               	movf	tblptru,w,c
 28931  0057F4  6EFF               	movwf	tosu,c
 28932  0057F6  50FA               	movf	pclath,w,c
 28933  0057F8  0012               	return		;indir
 28934  0057FA                     l12981:
 28935  0057FA  0100               	movlb	0	; () banked
 28936  0057FC  4B69               	infsnz	at24c02_write_n_byte@i& (0+255),f,b
 28937  0057FE  2B6A               	incf	(at24c02_write_n_byte@i+1)& (0+255),f,b
 28938  005800                     l12983:
 28939                           
 28940                           ; BSR set to: 0
 28941  005800  0100               	movlb	0	; () banked
 28942  005802  5167               	movf	at24c02_write_n_byte@len& (0+255),w,b
 28943  005804  0100               	movlb	0	; () banked
 28944  005806  5D69               	subwf	at24c02_write_n_byte@i& (0+255),w,b
 28945  005808  0100               	movlb	0	; () banked
 28946  00580A  5168               	movf	(at24c02_write_n_byte@len+1)& (0+255),w,b
 28947  00580C  0100               	movlb	0	; () banked
 28948  00580E  596A               	subwfb	(at24c02_write_n_byte@i+1)& (0+255),w,b
 28949  005810  B0D8               	btfsc	status,0,c
 28950  005812  0012               	return	
 28951  005814  D782               	goto	l12973
 28952  005816                     __end_of_at24c02_write_n_byte:
 28953                           	opt stack 0
 28954                           tosu	equ	0xFFF
 28955                           tosh	equ	0xFFE
 28956                           tosl	equ	0xFFD
 28957                           pclath	equ	0xFFA
 28958                           tblptru	equ	0xFF8
 28959                           tblptrh	equ	0xFF7
 28960                           tblptrl	equ	0xFF6
 28961                           tablat	equ	0xFF5
 28962                           prodh	equ	0xFF4
 28963                           prodl	equ	0xFF3
 28964                           intcon	equ	0xFF2
 28965                           indf0	equ	0xFEF
 28966                           postinc0	equ	0xFEE
 28967                           fsr0h	equ	0xFEA
 28968                           fsr0l	equ	0xFE9
 28969                           wreg	equ	0xFE8
 28970                           postinc1	equ	0xFE6
 28971                           postdec1	equ	0xFE5
 28972                           plusw1	equ	0xFE3
 28973                           fsr1h	equ	0xFE2
 28974                           fsr1l	equ	0xFE1
 28975                           indf2	equ	0xFDF
 28976                           postinc2	equ	0xFDE
 28977                           postdec2	equ	0xFDD
 28978                           plusw2	equ	0xFDB
 28979                           fsr2h	equ	0xFDA
 28980                           fsr2l	equ	0xFD9
 28981                           status	equ	0xFD8
 28982                           
 28983 ;; *************** function _at24c02_read_n_byte *****************
 28984 ;; Defined at:
 28985 ;;		line 44 in file "src/driver/ex_eeprom.c"
 28986 ;; Parameters:    Size  Location     Type
 28987 ;;  pAt24c02        2    4[BANK0 ] PTR struct .
 28988 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 28989 ;;  addr            1    6[BANK0 ] unsigned char 
 28990 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28991 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 28992 ;;  len             2    9[BANK0 ] unsigned int 
 28993 ;; Auto vars:     Size  Location     Type
 28994 ;;  i               2   15[BANK0 ] unsigned int 
 28995 ;; Return value:  Size  Location     Type
 28996 ;;                  1    wreg      void 
 28997 ;; Registers used:
 28998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 28999 ;; Tracked objects:
 29000 ;;		On entry : 0/0
 29001 ;;		On exit  : 0/0
 29002 ;;		Unchanged: 0/0
 29003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29004 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29008 ;;Total ram usage:       13 bytes
 29009 ;; Hardware stack levels used:    1
 29010 ;; Hardware stack levels required when called:    7
 29011 ;; This function calls:
 29012 ;;		_iic_received_byte_if_ack
 29013 ;;		_iic_send_byte
 29014 ;;		_iic_start
 29015 ;;		_iic_stop
 29016 ;; This function is called by:
 29017 ;;		_calib_data_init_diff_pr
 29018 ;;		_calib_data_init_pr
 29019 ;; This function uses a non-reentrant model
 29020 ;;
 29021                           
 29022                           	psect	text130
 29023  0044E0                     __ptext130:
 29024                           	opt stack 0
 29025  0044E0                     _at24c02_read_n_byte:
 29026                           	opt stack 21
 29027                           
 29028                           ;ex_eeprom.c: 47: uint16_t i;
 29029                           ;ex_eeprom.c: 48: pAt24c02->iic_start();
 29030                           
 29031                           ; BSR set to: 0
 29032                           ;incstack = 0
 29033  0044E0  0100               	movlb	0	; () banked
 29034  0044E2  EE20 F001          	lfsr	2,1
 29035  0044E6  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29036  0044E8  26D9               	addwf	fsr2l,f,c
 29037  0044EA  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29038  0044EC  22DA               	addwfc	fsr2h,f,c
 29039  0044EE  D801               	call	u11708
 29040  0044F0  D00A               	goto	u11709
 29041  0044F2                     u11708:
 29042  0044F2  0005               	push	
 29043  0044F4  6EFA               	movwf	pclath,c
 29044  0044F6  50DE               	movf	postinc2,w,c
 29045  0044F8  6EFD               	movwf	tosl,c
 29046  0044FA  50DE               	movf	postinc2,w,c
 29047  0044FC  6EFE               	movwf	tosh,c
 29048  0044FE  50F8               	movf	tblptru,w,c
 29049  004500  6EFF               	movwf	tosu,c
 29050  004502  50FA               	movf	pclath,w,c
 29051  004504  0012               	return		;indir
 29052  004506                     u11709:
 29053                           
 29054                           ;ex_eeprom.c: 49: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 29055  004506  0100               	movlb	0	; () banked
 29056  004508  EE20 F005          	lfsr	2,5
 29057  00450C  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29058  00450E  26D9               	addwf	fsr2l,f,c
 29059  004510  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29060  004512  22DA               	addwfc	fsr2h,f,c
 29061  004514  D801               	call	u11718
 29062  004516  D00F               	goto	u11719
 29063  004518                     u11718:
 29064  004518  0005               	push	
 29065  00451A  6EFA               	movwf	pclath,c
 29066  00451C  50DE               	movf	postinc2,w,c
 29067  00451E  6EFD               	movwf	tosl,c
 29068  004520  50DE               	movf	postinc2,w,c
 29069  004522  6EFE               	movwf	tosh,c
 29070  004524  50F8               	movf	tblptru,w,c
 29071  004526  6EFF               	movwf	tosu,c
 29072  004528  50FA               	movf	pclath,w,c
 29073  00452A  C064  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 29074  00452E  C065  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 29075  004532  50DF               	movf	indf2,w,c
 29076  004534  0012               	return		;indir
 29077  004536                     u11719:
 29078                           
 29079                           ;ex_eeprom.c: 50: pAt24c02->iic_send_byte(addr);
 29080  004536  0100               	movlb	0	; () banked
 29081  004538  EE20 F005          	lfsr	2,5
 29082  00453C  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29083  00453E  26D9               	addwf	fsr2l,f,c
 29084  004540  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29085  004542  22DA               	addwfc	fsr2h,f,c
 29086  004544  D801               	call	u11728
 29087  004546  D00C               	goto	u11729
 29088  004548                     u11728:
 29089  004548  0005               	push	
 29090  00454A  6EFA               	movwf	pclath,c
 29091  00454C  50DE               	movf	postinc2,w,c
 29092  00454E  6EFD               	movwf	tosl,c
 29093  004550  50DE               	movf	postinc2,w,c
 29094  004552  6EFE               	movwf	tosh,c
 29095  004554  50F8               	movf	tblptru,w,c
 29096  004556  6EFF               	movwf	tosu,c
 29097  004558  50FA               	movf	pclath,w,c
 29098  00455A  0100               	movlb	0	; () banked
 29099  00455C  5166               	movf	at24c02_read_n_byte@addr& (0+255),w,b
 29100  00455E  0012               	return		;indir
 29101  004560                     u11729:
 29102                           
 29103                           ;ex_eeprom.c: 52: pAt24c02->iic_start();
 29104  004560  0100               	movlb	0	; () banked
 29105  004562  EE20 F001          	lfsr	2,1
 29106  004566  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29107  004568  26D9               	addwf	fsr2l,f,c
 29108  00456A  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29109  00456C  22DA               	addwfc	fsr2h,f,c
 29110  00456E  D801               	call	u11738
 29111  004570  D00A               	goto	u11739
 29112  004572                     u11738:
 29113  004572  0005               	push	
 29114  004574  6EFA               	movwf	pclath,c
 29115  004576  50DE               	movf	postinc2,w,c
 29116  004578  6EFD               	movwf	tosl,c
 29117  00457A  50DE               	movf	postinc2,w,c
 29118  00457C  6EFE               	movwf	tosh,c
 29119  00457E  50F8               	movf	tblptru,w,c
 29120  004580  6EFF               	movwf	tosu,c
 29121  004582  50FA               	movf	pclath,w,c
 29122  004584  0012               	return		;indir
 29123  004586                     u11739:
 29124                           
 29125                           ;ex_eeprom.c: 53: pAt24c02->iic_send_byte(pAt24c02->slaveAddr+1);
 29126  004586  0100               	movlb	0	; () banked
 29127  004588  EE20 F005          	lfsr	2,5
 29128  00458C  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29129  00458E  26D9               	addwf	fsr2l,f,c
 29130  004590  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29131  004592  22DA               	addwfc	fsr2h,f,c
 29132  004594  D801               	call	u11748
 29133  004596  D013               	goto	l12959
 29134  004598                     u11748:
 29135  004598  0005               	push	
 29136  00459A  6EFA               	movwf	pclath,c
 29137  00459C  50DE               	movf	postinc2,w,c
 29138  00459E  6EFD               	movwf	tosl,c
 29139  0045A0  50DE               	movf	postinc2,w,c
 29140  0045A2  6EFE               	movwf	tosh,c
 29141  0045A4  50F8               	movf	tblptru,w,c
 29142  0045A6  6EFF               	movwf	tosu,c
 29143  0045A8  50FA               	movf	pclath,w,c
 29144  0045AA  C064  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 29145  0045AE  C065  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 29146  0045B2  50DF               	movf	indf2,w,c
 29147  0045B4  0100               	movlb	0	; () banked
 29148  0045B6  6F6B               	movwf	??_at24c02_read_n_byte& (0+255),b
 29149  0045B8  0100               	movlb	0	; () banked
 29150  0045BA  296B               	incf	??_at24c02_read_n_byte& (0+255),w,b
 29151  0045BC  0012               	return		;indir
 29152  0045BE                     l12959:
 29153                           
 29154                           ;ex_eeprom.c: 54: for(i=0;i<len-1;i++){
 29155  0045BE  0E00               	movlw	0
 29156  0045C0  0100               	movlb	0	; () banked
 29157  0045C2  6F70               	movwf	(at24c02_read_n_byte@i+1)& (0+255),b
 29158  0045C4  0E00               	movlw	0
 29159  0045C6  6F6F               	movwf	at24c02_read_n_byte@i& (0+255),b
 29160  0045C8  D01F               	goto	l12967
 29161  0045CA                     l12961:
 29162                           
 29163                           ; BSR set to: 0
 29164                           ;ex_eeprom.c: 55: *buf++=pAt24c02->iic_received_byte_if_ack(IIC_ACK);
 29165  0045CA  0100               	movlb	0	; () banked
 29166  0045CC  EE20 F009          	lfsr	2,9
 29167  0045D0  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29168  0045D2  26D9               	addwf	fsr2l,f,c
 29169  0045D4  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29170  0045D6  22DA               	addwfc	fsr2h,f,c
 29171  0045D8  D801               	call	u11758
 29172  0045DA  D00B               	goto	u11759
 29173  0045DC                     u11758:
 29174  0045DC  0005               	push	
 29175  0045DE  6EFA               	movwf	pclath,c
 29176  0045E0  50DE               	movf	postinc2,w,c
 29177  0045E2  6EFD               	movwf	tosl,c
 29178  0045E4  50DE               	movf	postinc2,w,c
 29179  0045E6  6EFE               	movwf	tosh,c
 29180  0045E8  50F8               	movf	tblptru,w,c
 29181  0045EA  6EFF               	movwf	tosu,c
 29182  0045EC  50FA               	movf	pclath,w,c
 29183  0045EE  0E00               	movlw	0
 29184  0045F0  0012               	return		;indir
 29185  0045F2                     u11759:
 29186  0045F2  C067  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 29187  0045F6  C068  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 29188  0045FA  6EDF               	movwf	indf2,c
 29189  0045FC  0100               	movlb	0	; () banked
 29190  0045FE  4B67               	infsnz	at24c02_read_n_byte@buf& (0+255),f,b
 29191  004600  2B68               	incf	(at24c02_read_n_byte@buf+1)& (0+255),f,b
 29192                           
 29193                           ; BSR set to: 0
 29194  004602  0100               	movlb	0	; () banked
 29195  004604  4B6F               	infsnz	at24c02_read_n_byte@i& (0+255),f,b
 29196  004606  2B70               	incf	(at24c02_read_n_byte@i+1)& (0+255),f,b
 29197  004608                     l12967:
 29198                           
 29199                           ; BSR set to: 0
 29200  004608  0EFF               	movlw	255
 29201  00460A  0100               	movlb	0	; () banked
 29202  00460C  6F6B               	movwf	??_at24c02_read_n_byte& (0+255),b
 29203  00460E  0EFF               	movlw	255
 29204  004610  0100               	movlb	0	; () banked
 29205  004612  6F6C               	movwf	(??_at24c02_read_n_byte+1)& (0+255),b
 29206  004614  C069  F06D         	movff	at24c02_read_n_byte@len,??_at24c02_read_n_byte+2
 29207  004618  C06A  F06E         	movff	at24c02_read_n_byte@len+1,??_at24c02_read_n_byte+3
 29208  00461C  0100               	movlb	0	; () banked
 29209  00461E  516B               	movf	??_at24c02_read_n_byte& (0+255),w,b
 29210  004620  0100               	movlb	0	; () banked
 29211  004622  276D               	addwf	(??_at24c02_read_n_byte+2)& (0+255),f,b
 29212  004624  0100               	movlb	0	; () banked
 29213  004626  516C               	movf	(??_at24c02_read_n_byte+1)& (0+255),w,b
 29214  004628  0100               	movlb	0	; () banked
 29215  00462A  236E               	addwfc	(??_at24c02_read_n_byte+3)& (0+255),f,b
 29216  00462C  0100               	movlb	0	; () banked
 29217  00462E  516D               	movf	(??_at24c02_read_n_byte+2)& (0+255),w,b
 29218  004630  0100               	movlb	0	; () banked
 29219  004632  5D6F               	subwf	at24c02_read_n_byte@i& (0+255),w,b
 29220  004634  0100               	movlb	0	; () banked
 29221  004636  516E               	movf	(??_at24c02_read_n_byte+3)& (0+255),w,b
 29222  004638  0100               	movlb	0	; () banked
 29223  00463A  5970               	subwfb	(at24c02_read_n_byte@i+1)& (0+255),w,b
 29224  00463C  A0D8               	btfss	status,0,c
 29225  00463E  D7C5               	goto	l12961
 29226                           
 29227                           ; BSR set to: 0
 29228                           ;ex_eeprom.c: 56: }
 29229                           ;ex_eeprom.c: 57: *buf=pAt24c02->iic_received_byte_if_ack(IIC_NACK);
 29230                           
 29231                           ; BSR set to: 0
 29232  004640  0100               	movlb	0	; () banked
 29233  004642  EE20 F009          	lfsr	2,9
 29234  004646  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29235  004648  26D9               	addwf	fsr2l,f,c
 29236  00464A  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29237  00464C  22DA               	addwfc	fsr2h,f,c
 29238  00464E  D801               	call	u11778
 29239  004650  D00B               	goto	u11779
 29240  004652                     u11778:
 29241  004652  0005               	push	
 29242  004654  6EFA               	movwf	pclath,c
 29243  004656  50DE               	movf	postinc2,w,c
 29244  004658  6EFD               	movwf	tosl,c
 29245  00465A  50DE               	movf	postinc2,w,c
 29246  00465C  6EFE               	movwf	tosh,c
 29247  00465E  50F8               	movf	tblptru,w,c
 29248  004660  6EFF               	movwf	tosu,c
 29249  004662  50FA               	movf	pclath,w,c
 29250  004664  0E01               	movlw	1
 29251  004666  0012               	return		;indir
 29252  004668                     u11779:
 29253  004668  C067  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 29254  00466C  C068  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 29255  004670  6EDF               	movwf	indf2,c
 29256                           
 29257                           ;ex_eeprom.c: 58: pAt24c02->iic_stop();
 29258  004672  0100               	movlb	0	; () banked
 29259  004674  EE20 F003          	lfsr	2,3
 29260  004678  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 29261  00467A  26D9               	addwf	fsr2l,f,c
 29262  00467C  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 29263  00467E  22DA               	addwfc	fsr2h,f,c
 29264  004680  D801               	call	u11788
 29265  004682  0012               	return	
 29266  004684                     u11788:
 29267  004684  0005               	push	
 29268  004686  6EFA               	movwf	pclath,c
 29269  004688  50DE               	movf	postinc2,w,c
 29270  00468A  6EFD               	movwf	tosl,c
 29271  00468C  50DE               	movf	postinc2,w,c
 29272  00468E  6EFE               	movwf	tosh,c
 29273  004690  50F8               	movf	tblptru,w,c
 29274  004692  6EFF               	movwf	tosu,c
 29275  004694  50FA               	movf	pclath,w,c
 29276  004696  0012               	return		;indir
 29277  004698                     __end_of_at24c02_read_n_byte:
 29278                           	opt stack 0
 29279                           tosu	equ	0xFFF
 29280                           tosh	equ	0xFFE
 29281                           tosl	equ	0xFFD
 29282                           pclath	equ	0xFFA
 29283                           tblptru	equ	0xFF8
 29284                           tblptrh	equ	0xFF7
 29285                           tblptrl	equ	0xFF6
 29286                           tablat	equ	0xFF5
 29287                           prodh	equ	0xFF4
 29288                           prodl	equ	0xFF3
 29289                           intcon	equ	0xFF2
 29290                           indf0	equ	0xFEF
 29291                           postinc0	equ	0xFEE
 29292                           fsr0h	equ	0xFEA
 29293                           fsr0l	equ	0xFE9
 29294                           wreg	equ	0xFE8
 29295                           postinc1	equ	0xFE6
 29296                           postdec1	equ	0xFE5
 29297                           plusw1	equ	0xFE3
 29298                           fsr1h	equ	0xFE2
 29299                           fsr1l	equ	0xFE1
 29300                           indf2	equ	0xFDF
 29301                           postinc2	equ	0xFDE
 29302                           postdec2	equ	0xFDD
 29303                           plusw2	equ	0xFDB
 29304                           fsr2h	equ	0xFDA
 29305                           fsr2l	equ	0xFD9
 29306                           status	equ	0xFD8
 29307                           
 29308 ;; *************** function _iic_start *****************
 29309 ;; Defined at:
 29310 ;;		line 18 in file "src/driver/i2c.c"
 29311 ;; Parameters:    Size  Location     Type
 29312 ;;		None
 29313 ;; Auto vars:     Size  Location     Type
 29314 ;;		None
 29315 ;; Return value:  Size  Location     Type
 29316 ;;                  1    wreg      void 
 29317 ;; Registers used:
 29318 ;;		status,2, status,0
 29319 ;; Tracked objects:
 29320 ;;		On entry : 0/0
 29321 ;;		On exit  : 0/0
 29322 ;;		Unchanged: 0/0
 29323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29328 ;;Total ram usage:        0 bytes
 29329 ;; Hardware stack levels used:    1
 29330 ;; Hardware stack levels required when called:    4
 29331 ;; This function calls:
 29332 ;;		Nothing
 29333 ;; This function is called by:
 29334 ;;		_ads1115_init
 29335 ;;		_at24c02_init
 29336 ;;		_pcf8574_init
 29337 ;;		_ads1115_write_reg
 29338 ;;		_ads1115_read_reg
 29339 ;;		_at24c02_read_n_byte
 29340 ;;		_at24c02_write_n_byte
 29341 ;;		_pcf8574_write_singel
 29342 ;;		_ad421_write_via_pcf8574
 29343 ;; This function uses a non-reentrant model
 29344 ;;
 29345                           
 29346                           	psect	text131
 29347  007BF2                     __ptext131:
 29348                           	opt stack 0
 29349  007BF2                     _iic_start:
 29350                           	opt stack 21
 29351                           
 29352                           ;incstack = 0
 29353                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 29354  007BF2  9694               	bcf	3988,3,c	;volatile
 29355                           
 29356                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 29357  007BF4  9894               	bcf	3988,4,c	;volatile
 29358                           
 29359                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 29360  007BF6  888B               	bsf	3979,4,c	;volatile
 29361                           
 29362                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 29363  007BF8  868B               	bsf	3979,3,c	;volatile
 29364                           
 29365                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29366  007BFA  F000               	nop	
 29367  007BFC  F000               	nop	
 29368  007BFE  F000               	nop	
 29369  007C00  F000               	nop	
 29370  007C02  F000               	nop	
 29371  007C04  F000               	nop	
 29372  007C06  F000               	nop	
 29373  007C08  F000               	nop	
 29374  007C0A  F000               	nop	
 29375  007C0C  F000               	nop	
 29376  007C0E  F000               	nop	
 29377  007C10  F000               	nop	
 29378                           
 29379                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 29380  007C12  988B               	bcf	3979,4,c	;volatile
 29381                           
 29382                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29383  007C14  F000               	nop	
 29384  007C16  F000               	nop	
 29385  007C18  F000               	nop	
 29386  007C1A  F000               	nop	
 29387  007C1C  F000               	nop	
 29388  007C1E  F000               	nop	
 29389  007C20  F000               	nop	
 29390  007C22  F000               	nop	
 29391  007C24  F000               	nop	
 29392  007C26  F000               	nop	
 29393  007C28  F000               	nop	
 29394  007C2A  F000               	nop	
 29395                           
 29396                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 29397  007C2C  968B               	bcf	3979,3,c	;volatile
 29398  007C2E  0012               	return	
 29399  007C30                     __end_of_iic_start:
 29400                           	opt stack 0
 29401                           tosu	equ	0xFFF
 29402                           tosh	equ	0xFFE
 29403                           tosl	equ	0xFFD
 29404                           pclath	equ	0xFFA
 29405                           tblptru	equ	0xFF8
 29406                           tblptrh	equ	0xFF7
 29407                           tblptrl	equ	0xFF6
 29408                           tablat	equ	0xFF5
 29409                           prodh	equ	0xFF4
 29410                           prodl	equ	0xFF3
 29411                           intcon	equ	0xFF2
 29412                           indf0	equ	0xFEF
 29413                           postinc0	equ	0xFEE
 29414                           fsr0h	equ	0xFEA
 29415                           fsr0l	equ	0xFE9
 29416                           wreg	equ	0xFE8
 29417                           postinc1	equ	0xFE6
 29418                           postdec1	equ	0xFE5
 29419                           plusw1	equ	0xFE3
 29420                           fsr1h	equ	0xFE2
 29421                           fsr1l	equ	0xFE1
 29422                           indf2	equ	0xFDF
 29423                           postinc2	equ	0xFDE
 29424                           postdec2	equ	0xFDD
 29425                           plusw2	equ	0xFDB
 29426                           fsr2h	equ	0xFDA
 29427                           fsr2l	equ	0xFD9
 29428                           status	equ	0xFD8
 29429                           
 29430 ;; *************** function _iic_send_byte *****************
 29431 ;; Defined at:
 29432 ;;		line 80 in file "src/driver/i2c.c"
 29433 ;; Parameters:    Size  Location     Type
 29434 ;;  x               1    wreg     unsigned char 
 29435 ;; Auto vars:     Size  Location     Type
 29436 ;;  x               1    0[BANK0 ] unsigned char 
 29437 ;;  i               1    1[BANK0 ] unsigned char 
 29438 ;; Return value:  Size  Location     Type
 29439 ;;                  1    wreg      unsigned char 
 29440 ;; Registers used:
 29441 ;;		wreg, status,2, status,0, cstack
 29442 ;; Tracked objects:
 29443 ;;		On entry : 0/0
 29444 ;;		On exit  : 0/0
 29445 ;;		Unchanged: 0/0
 29446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29448 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29451 ;;Total ram usage:        2 bytes
 29452 ;; Hardware stack levels used:    1
 29453 ;; Hardware stack levels required when called:    6
 29454 ;; This function calls:
 29455 ;;		_iic_waite_ack
 29456 ;; This function is called by:
 29457 ;;		_ads1115_init
 29458 ;;		_at24c02_init
 29459 ;;		_pcf8574_init
 29460 ;;		_ads1115_write_reg
 29461 ;;		_ads1115_read_reg
 29462 ;;		_at24c02_read_n_byte
 29463 ;;		_at24c02_write_n_byte
 29464 ;;		_pcf8574_write_singel
 29465 ;;		_ad421_write_via_pcf8574
 29466 ;; This function uses a non-reentrant model
 29467 ;;
 29468                           
 29469                           	psect	text132
 29470  00720A                     __ptext132:
 29471                           	opt stack 0
 29472  00720A                     _iic_send_byte:
 29473                           	opt stack 19
 29474                           
 29475                           ;incstack = 0
 29476                           ;iic_send_byte@x stored from wreg
 29477  00720A  0100               	movlb	0	; () banked
 29478  00720C  6F60               	movwf	iic_send_byte@x& (0+255),b
 29479                           
 29480                           ;i2c.c: 82: uint8_t i;
 29481                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 29482  00720E  9694               	bcf	3988,3,c	;volatile
 29483                           
 29484                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 29485  007210  9894               	bcf	3988,4,c	;volatile
 29486                           
 29487                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 29488  007212  968B               	bcf	3979,3,c	;volatile
 29489                           
 29490                           ;i2c.c: 86: for(i=0;i<8;i++){
 29491  007214  0E00               	movlw	0
 29492  007216  0100               	movlb	0	; () banked
 29493  007218  6F61               	movwf	iic_send_byte@i& (0+255),b
 29494  00721A                     l11141:
 29495                           
 29496                           ; BSR set to: 0
 29497  00721A  0E07               	movlw	7
 29498  00721C  0100               	movlb	0	; () banked
 29499  00721E  6561               	cpfsgt	iic_send_byte@i& (0+255),b
 29500  007220  D001               	goto	l931
 29501  007222  D026               	goto	l11201
 29502  007224                     l931:
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;i2c.c: 87: if(x&0x80){
 29506  007224  0100               	movlb	0	; () banked
 29507  007226  AF60               	btfss	iic_send_byte@x& (0+255),7,b
 29508  007228  D002               	goto	l11147
 29509                           
 29510                           ; BSR set to: 0
 29511                           
 29512                           ; BSR set to: 0
 29513                           
 29514                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 29515  00722A  888B               	bsf	3979,4,c	;volatile
 29516                           
 29517                           ; BSR set to: 0
 29518                           ;i2c.c: 89: }
 29519  00722C  D001               	goto	l939
 29520  00722E                     l11147:
 29521                           
 29522                           ; BSR set to: 0
 29523  00722E  988B               	bcf	3979,4,c	;volatile
 29524  007230                     l939:
 29525                           
 29526                           ; BSR set to: 0
 29527  007230  868B               	bsf	3979,3,c	;volatile
 29528                           
 29529                           ; BSR set to: 0
 29530                           
 29531                           ; BSR set to: 0
 29532                           
 29533                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29534                           
 29535                           ; BSR set to: 0
 29536  007232  F000               	nop	
 29537  007234  F000               	nop	
 29538  007236  F000               	nop	
 29539  007238  F000               	nop	
 29540  00723A  F000               	nop	
 29541  00723C  F000               	nop	
 29542  00723E  F000               	nop	
 29543  007240  F000               	nop	
 29544  007242  F000               	nop	
 29545  007244  F000               	nop	
 29546  007246  F000               	nop	
 29547  007248  F000               	nop	
 29548                           
 29549                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 29550  00724A  968B               	bcf	3979,3,c	;volatile
 29551                           
 29552                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29553  00724C  F000               	nop	
 29554  00724E  F000               	nop	
 29555  007250  F000               	nop	
 29556  007252  F000               	nop	
 29557  007254  F000               	nop	
 29558  007256  F000               	nop	
 29559  007258  F000               	nop	
 29560  00725A  F000               	nop	
 29561  00725C  F000               	nop	
 29562  00725E  F000               	nop	
 29563  007260  F000               	nop	
 29564  007262  F000               	nop	
 29565                           
 29566                           ;i2c.c: 97: x<<=1;
 29567  007264  0100               	movlb	0	; () banked
 29568  007266  90D8               	bcf	status,0,c
 29569  007268  3760               	rlcf	iic_send_byte@x& (0+255),f,b
 29570                           
 29571                           ; BSR set to: 0
 29572  00726A  0100               	movlb	0	; () banked
 29573  00726C  2B61               	incf	iic_send_byte@i& (0+255),f,b
 29574  00726E  D7D5               	goto	l11141
 29575  007270                     l11201:
 29576                           
 29577                           ; BSR set to: 0
 29578                           ;i2c.c: 98: }
 29579                           ;i2c.c: 99: return iic_waite_ack();
 29580                           ;	Return value of _iic_send_byte is never used
 29581  007270  ECFD  F03A         	call	_iic_waite_ack
 29582  007274  0012               	return	
 29583  007276                     __end_of_iic_send_byte:
 29584                           	opt stack 0
 29585                           tosu	equ	0xFFF
 29586                           tosh	equ	0xFFE
 29587                           tosl	equ	0xFFD
 29588                           pclath	equ	0xFFA
 29589                           tblptru	equ	0xFF8
 29590                           tblptrh	equ	0xFF7
 29591                           tblptrl	equ	0xFF6
 29592                           tablat	equ	0xFF5
 29593                           prodh	equ	0xFF4
 29594                           prodl	equ	0xFF3
 29595                           intcon	equ	0xFF2
 29596                           indf0	equ	0xFEF
 29597                           postinc0	equ	0xFEE
 29598                           fsr0h	equ	0xFEA
 29599                           fsr0l	equ	0xFE9
 29600                           wreg	equ	0xFE8
 29601                           postinc1	equ	0xFE6
 29602                           postdec1	equ	0xFE5
 29603                           plusw1	equ	0xFE3
 29604                           fsr1h	equ	0xFE2
 29605                           fsr1l	equ	0xFE1
 29606                           indf2	equ	0xFDF
 29607                           postinc2	equ	0xFDE
 29608                           postdec2	equ	0xFDD
 29609                           plusw2	equ	0xFDB
 29610                           fsr2h	equ	0xFDA
 29611                           fsr2l	equ	0xFD9
 29612                           status	equ	0xFD8
 29613                           
 29614 ;; *************** function _iic_waite_ack *****************
 29615 ;; Defined at:
 29616 ;;		line 60 in file "src/driver/i2c.c"
 29617 ;; Parameters:    Size  Location     Type
 29618 ;;		None
 29619 ;; Auto vars:     Size  Location     Type
 29620 ;;  timeout         1   31[COMRAM] unsigned char 
 29621 ;; Return value:  Size  Location     Type
 29622 ;;                  1    wreg      unsigned char 
 29623 ;; Registers used:
 29624 ;;		wreg, status,2, status,0, cstack
 29625 ;; Tracked objects:
 29626 ;;		On entry : 0/0
 29627 ;;		On exit  : 0/0
 29628 ;;		Unchanged: 0/0
 29629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29634 ;;Total ram usage:        1 bytes
 29635 ;; Hardware stack levels used:    1
 29636 ;; Hardware stack levels required when called:    5
 29637 ;; This function calls:
 29638 ;;		_iic_stop
 29639 ;; This function is called by:
 29640 ;;		_ads1115_init
 29641 ;;		_at24c02_init
 29642 ;;		_iic_send_byte
 29643 ;;		_pcf8574_init
 29644 ;; This function uses a non-reentrant model
 29645 ;;
 29646                           
 29647                           	psect	text133
 29648  0075FA                     __ptext133:
 29649                           	opt stack 0
 29650  0075FA                     _iic_waite_ack:
 29651                           	opt stack 19
 29652                           
 29653                           ;i2c.c: 62: uint8_t timeout=200;
 29654                           
 29655                           ;incstack = 0
 29656  0075FA  0EC8               	movlw	200
 29657  0075FC  6E20               	movwf	iic_waite_ack@timeout,c
 29658                           
 29659                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 29660  0075FE  9694               	bcf	3988,3,c	;volatile
 29661                           
 29662                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 29663  007600  8894               	bsf	3988,4,c	;volatile
 29664                           
 29665                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 29666  007602  968B               	bcf	3979,3,c	;volatile
 29667                           
 29668                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29669  007604  F000               	nop	
 29670  007606  F000               	nop	
 29671  007608  F000               	nop	
 29672  00760A  F000               	nop	
 29673  00760C  F000               	nop	
 29674  00760E  F000               	nop	
 29675  007610  F000               	nop	
 29676  007612  F000               	nop	
 29677  007614  F000               	nop	
 29678  007616  F000               	nop	
 29679  007618  F000               	nop	
 29680  00761A  F000               	nop	
 29681                           
 29682                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 29683  00761C  868B               	bsf	3979,3,c	;volatile
 29684                           
 29685                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29686  00761E  F000               	nop	
 29687  007620  F000               	nop	
 29688  007622  F000               	nop	
 29689  007624  F000               	nop	
 29690  007626  F000               	nop	
 29691  007628  F000               	nop	
 29692  00762A  F000               	nop	
 29693  00762C  F000               	nop	
 29694  00762E  F000               	nop	
 29695  007630  F000               	nop	
 29696  007632  F000               	nop	
 29697  007634  F000               	nop	
 29698                           
 29699                           ;i2c.c: 69: while(timeout--){
 29700  007636  D002               	goto	l10877
 29701  007638                     l916:
 29702                           
 29703                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 29704  007638  A882               	btfss	3970,4,c	;volatile
 29705  00763A  D004               	goto	l10879
 29706  00763C                     l10877:
 29707  00763C  0620               	decf	iic_waite_ack@timeout,f,c
 29708  00763E  2820               	incf	iic_waite_ack@timeout,w,c
 29709  007640  A4D8               	btfss	status,2,c
 29710  007642  D7FA               	goto	l916
 29711  007644                     l10879:
 29712                           
 29713                           ;i2c.c: 71: }
 29714                           ;i2c.c: 72: if(!timeout){
 29715  007644  5020               	movf	iic_waite_ack@timeout,w,c
 29716  007646  A4D8               	btfss	status,2,c
 29717  007648  D004               	goto	l10887
 29718                           
 29719                           ;i2c.c: 73: iic_stop();
 29720  00764A  EC36  F03E         	call	_iic_stop	;wreg free
 29721                           
 29722                           ;i2c.c: 74: return 0;
 29723  00764E  0E00               	movlw	0
 29724  007650  0012               	return	
 29725  007652                     l10887:
 29726  007652  968B               	bcf	3979,3,c	;volatile
 29727                           
 29728                           ;i2c.c: 77: return 1;
 29729  007654  0E01               	movlw	1
 29730  007656  0012               	return	
 29731  007658                     __end_of_iic_waite_ack:
 29732                           	opt stack 0
 29733                           tosu	equ	0xFFF
 29734                           tosh	equ	0xFFE
 29735                           tosl	equ	0xFFD
 29736                           pclath	equ	0xFFA
 29737                           tblptru	equ	0xFF8
 29738                           tblptrh	equ	0xFF7
 29739                           tblptrl	equ	0xFF6
 29740                           tablat	equ	0xFF5
 29741                           prodh	equ	0xFF4
 29742                           prodl	equ	0xFF3
 29743                           intcon	equ	0xFF2
 29744                           indf0	equ	0xFEF
 29745                           postinc0	equ	0xFEE
 29746                           fsr0h	equ	0xFEA
 29747                           fsr0l	equ	0xFE9
 29748                           wreg	equ	0xFE8
 29749                           postinc1	equ	0xFE6
 29750                           postdec1	equ	0xFE5
 29751                           plusw1	equ	0xFE3
 29752                           fsr1h	equ	0xFE2
 29753                           fsr1l	equ	0xFE1
 29754                           indf2	equ	0xFDF
 29755                           postinc2	equ	0xFDE
 29756                           postdec2	equ	0xFDD
 29757                           plusw2	equ	0xFDB
 29758                           fsr2h	equ	0xFDA
 29759                           fsr2l	equ	0xFD9
 29760                           status	equ	0xFD8
 29761                           
 29762 ;; *************** function _iic_stop *****************
 29763 ;; Defined at:
 29764 ;;		line 32 in file "src/driver/i2c.c"
 29765 ;; Parameters:    Size  Location     Type
 29766 ;;		None
 29767 ;; Auto vars:     Size  Location     Type
 29768 ;;		None
 29769 ;; Return value:  Size  Location     Type
 29770 ;;                  1    wreg      void 
 29771 ;; Registers used:
 29772 ;;		status,2, status,0
 29773 ;; Tracked objects:
 29774 ;;		On entry : 0/0
 29775 ;;		On exit  : 0/0
 29776 ;;		Unchanged: 0/0
 29777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29782 ;;Total ram usage:        0 bytes
 29783 ;; Hardware stack levels used:    1
 29784 ;; Hardware stack levels required when called:    4
 29785 ;; This function calls:
 29786 ;;		Nothing
 29787 ;; This function is called by:
 29788 ;;		_ads1115_init
 29789 ;;		_at24c02_init
 29790 ;;		_iic_waite_ack
 29791 ;;		_pcf8574_init
 29792 ;;		_ads1115_write_reg
 29793 ;;		_ads1115_read_reg
 29794 ;;		_at24c02_read_n_byte
 29795 ;;		_at24c02_write_n_byte
 29796 ;;		_pcf8574_write_singel
 29797 ;;		_ad421_write_via_pcf8574
 29798 ;; This function uses a non-reentrant model
 29799 ;;
 29800                           
 29801                           	psect	text134
 29802  007C6C                     __ptext134:
 29803                           	opt stack 0
 29804  007C6C                     _iic_stop:
 29805                           	opt stack 21
 29806                           
 29807                           ;incstack = 0
 29808                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 29809  007C6C  9694               	bcf	3988,3,c	;volatile
 29810                           
 29811                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 29812  007C6E  9894               	bcf	3988,4,c	;volatile
 29813                           
 29814                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 29815  007C70  988B               	bcf	3979,4,c	;volatile
 29816                           
 29817                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29818  007C72  F000               	nop	
 29819  007C74  F000               	nop	
 29820  007C76  F000               	nop	
 29821  007C78  F000               	nop	
 29822  007C7A  F000               	nop	
 29823  007C7C  F000               	nop	
 29824  007C7E  F000               	nop	
 29825  007C80  F000               	nop	
 29826  007C82  F000               	nop	
 29827  007C84  F000               	nop	
 29828  007C86  F000               	nop	
 29829  007C88  F000               	nop	
 29830                           
 29831                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 29832  007C8A  868B               	bsf	3979,3,c	;volatile
 29833                           
 29834                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 29835  007C8C  F000               	nop	
 29836  007C8E  F000               	nop	
 29837  007C90  F000               	nop	
 29838  007C92  F000               	nop	
 29839  007C94  F000               	nop	
 29840  007C96  F000               	nop	
 29841  007C98  F000               	nop	
 29842  007C9A  F000               	nop	
 29843  007C9C  F000               	nop	
 29844  007C9E  F000               	nop	
 29845  007CA0  F000               	nop	
 29846  007CA2  F000               	nop	
 29847                           
 29848                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 29849  007CA4  888B               	bsf	3979,4,c	;volatile
 29850  007CA6  0012               	return	
 29851  007CA8                     __end_of_iic_stop:
 29852                           	opt stack 0
 29853                           tosu	equ	0xFFF
 29854                           tosh	equ	0xFFE
 29855                           tosl	equ	0xFFD
 29856                           pclath	equ	0xFFA
 29857                           tblptru	equ	0xFF8
 29858                           tblptrh	equ	0xFF7
 29859                           tblptrl	equ	0xFF6
 29860                           tablat	equ	0xFF5
 29861                           prodh	equ	0xFF4
 29862                           prodl	equ	0xFF3
 29863                           intcon	equ	0xFF2
 29864                           indf0	equ	0xFEF
 29865                           postinc0	equ	0xFEE
 29866                           fsr0h	equ	0xFEA
 29867                           fsr0l	equ	0xFE9
 29868                           wreg	equ	0xFE8
 29869                           postinc1	equ	0xFE6
 29870                           postdec1	equ	0xFE5
 29871                           plusw1	equ	0xFE3
 29872                           fsr1h	equ	0xFE2
 29873                           fsr1l	equ	0xFE1
 29874                           indf2	equ	0xFDF
 29875                           postinc2	equ	0xFDE
 29876                           postdec2	equ	0xFDD
 29877                           plusw2	equ	0xFDB
 29878                           fsr2h	equ	0xFDA
 29879                           fsr2l	equ	0xFD9
 29880                           status	equ	0xFD8
 29881                           
 29882 ;; *************** function _iic_received_byte_if_ack *****************
 29883 ;; Defined at:
 29884 ;;		line 121 in file "src/driver/i2c.c"
 29885 ;; Parameters:    Size  Location     Type
 29886 ;;  ack             1    wreg     unsigned char 
 29887 ;; Auto vars:     Size  Location     Type
 29888 ;;  ack             1    2[BANK0 ] unsigned char 
 29889 ;;  ret             1    3[BANK0 ] unsigned char 
 29890 ;; Return value:  Size  Location     Type
 29891 ;;                  1    wreg      unsigned char 
 29892 ;; Registers used:
 29893 ;;		wreg, status,2, status,0, cstack
 29894 ;; Tracked objects:
 29895 ;;		On entry : 0/0
 29896 ;;		On exit  : 0/0
 29897 ;;		Unchanged: 0/0
 29898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29903 ;;Total ram usage:        2 bytes
 29904 ;; Hardware stack levels used:    1
 29905 ;; Hardware stack levels required when called:    5
 29906 ;; This function calls:
 29907 ;;		_iic_received_byte
 29908 ;;		_iic_send_ack
 29909 ;; This function is called by:
 29910 ;;		_ads1115_init
 29911 ;;		_at24c02_init
 29912 ;;		_pcf8574_init
 29913 ;;		_ads1115_read_reg
 29914 ;;		_at24c02_read_n_byte
 29915 ;; This function uses a non-reentrant model
 29916 ;;
 29917                           
 29918                           	psect	text135
 29919  008164                     __ptext135:
 29920                           	opt stack 0
 29921  008164                     _iic_received_byte_if_ack:
 29922                           	opt stack 20
 29923                           
 29924                           ;incstack = 0
 29925                           ;iic_received_byte_if_ack@ack stored from wreg
 29926  008164  0100               	movlb	0	; () banked
 29927  008166  6F62               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 29928                           
 29929                           ;i2c.c: 123: uint8_t ret=0;
 29930  008168  0E00               	movlw	0
 29931  00816A  0100               	movlb	0	; () banked
 29932  00816C  6F63               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;i2c.c: 124: ret=iic_received_byte();
 29936  00816E  EC70  F039         	call	_iic_received_byte	;wreg free
 29937  008172  0100               	movlb	0	; () banked
 29938  008174  6F63               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 29939                           
 29940                           ; BSR set to: 0
 29941                           ;i2c.c: 125: iic_send_ack(ack);
 29942  008176  0100               	movlb	0	; () banked
 29943  008178  5162               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 29944  00817A  EC2E  F03D         	call	_iic_send_ack
 29945                           
 29946                           ;i2c.c: 126: return ret;
 29947  00817E  0100               	movlb	0	; () banked
 29948  008180  5163               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 29949  008182  0012               	return	
 29950  008184                     __end_of_iic_received_byte_if_ack:
 29951                           	opt stack 0
 29952                           tosu	equ	0xFFF
 29953                           tosh	equ	0xFFE
 29954                           tosl	equ	0xFFD
 29955                           pclath	equ	0xFFA
 29956                           tblptru	equ	0xFF8
 29957                           tblptrh	equ	0xFF7
 29958                           tblptrl	equ	0xFF6
 29959                           tablat	equ	0xFF5
 29960                           prodh	equ	0xFF4
 29961                           prodl	equ	0xFF3
 29962                           intcon	equ	0xFF2
 29963                           indf0	equ	0xFEF
 29964                           postinc0	equ	0xFEE
 29965                           fsr0h	equ	0xFEA
 29966                           fsr0l	equ	0xFE9
 29967                           wreg	equ	0xFE8
 29968                           postinc1	equ	0xFE6
 29969                           postdec1	equ	0xFE5
 29970                           plusw1	equ	0xFE3
 29971                           fsr1h	equ	0xFE2
 29972                           fsr1l	equ	0xFE1
 29973                           indf2	equ	0xFDF
 29974                           postinc2	equ	0xFDE
 29975                           postdec2	equ	0xFDD
 29976                           plusw2	equ	0xFDB
 29977                           fsr2h	equ	0xFDA
 29978                           fsr2l	equ	0xFD9
 29979                           status	equ	0xFD8
 29980                           
 29981 ;; *************** function _iic_send_ack *****************
 29982 ;; Defined at:
 29983 ;;		line 44 in file "src/driver/i2c.c"
 29984 ;; Parameters:    Size  Location     Type
 29985 ;;  ack             1    wreg     char 
 29986 ;; Auto vars:     Size  Location     Type
 29987 ;;  ack             1   31[COMRAM] char 
 29988 ;; Return value:  Size  Location     Type
 29989 ;;                  1    wreg      void 
 29990 ;; Registers used:
 29991 ;;		wreg, status,2, status,0
 29992 ;; Tracked objects:
 29993 ;;		On entry : 0/0
 29994 ;;		On exit  : 0/0
 29995 ;;		Unchanged: 0/0
 29996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30001 ;;Total ram usage:        1 bytes
 30002 ;; Hardware stack levels used:    1
 30003 ;; Hardware stack levels required when called:    4
 30004 ;; This function calls:
 30005 ;;		Nothing
 30006 ;; This function is called by:
 30007 ;;		_iic_received_byte_if_ack
 30008 ;; This function uses a non-reentrant model
 30009 ;;
 30010                           
 30011                           	psect	text136
 30012  007A5C                     __ptext136:
 30013                           	opt stack 0
 30014  007A5C                     _iic_send_ack:
 30015                           	opt stack 20
 30016                           
 30017                           ; BSR set to: 0
 30018                           ;incstack = 0
 30019                           ;iic_send_ack@ack stored from wreg
 30020  007A5C  6E20               	movwf	iic_send_ack@ack,c
 30021                           
 30022                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 30023  007A5E  9694               	bcf	3988,3,c	;volatile
 30024                           
 30025                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 30026  007A60  9894               	bcf	3988,4,c	;volatile
 30027                           
 30028                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 30029  007A62  968B               	bcf	3979,3,c	;volatile
 30030                           
 30031                           ;i2c.c: 49: if(ack){
 30032  007A64  5020               	movf	iic_send_ack@ack,w,c
 30033  007A66  B4D8               	btfsc	status,2,c
 30034  007A68  D002               	goto	l10767
 30035                           
 30036                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 30037  007A6A  888B               	bsf	3979,4,c	;volatile
 30038                           
 30039                           ;i2c.c: 51: }else{
 30040  007A6C  D001               	goto	l10769
 30041  007A6E                     l10767:
 30042  007A6E  988B               	bcf	3979,4,c	;volatile
 30043  007A70                     l10769:
 30044  007A70  F000               	nop	
 30045  007A72  F000               	nop	
 30046  007A74  F000               	nop	
 30047  007A76  F000               	nop	
 30048  007A78  F000               	nop	
 30049  007A7A  F000               	nop	
 30050  007A7C  F000               	nop	
 30051  007A7E  F000               	nop	
 30052  007A80  F000               	nop	
 30053  007A82  F000               	nop	
 30054  007A84  F000               	nop	
 30055  007A86  F000               	nop	
 30056                           
 30057                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 30058  007A88  868B               	bsf	3979,3,c	;volatile
 30059                           
 30060                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 30061  007A8A  F000               	nop	
 30062  007A8C  F000               	nop	
 30063  007A8E  F000               	nop	
 30064  007A90  F000               	nop	
 30065  007A92  F000               	nop	
 30066  007A94  F000               	nop	
 30067  007A96  F000               	nop	
 30068  007A98  F000               	nop	
 30069  007A9A  F000               	nop	
 30070  007A9C  F000               	nop	
 30071  007A9E  F000               	nop	
 30072  007AA0  F000               	nop	
 30073                           
 30074                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 30075  007AA2  968B               	bcf	3979,3,c	;volatile
 30076  007AA4  0012               	return	
 30077  007AA6                     __end_of_iic_send_ack:
 30078                           	opt stack 0
 30079                           tosu	equ	0xFFF
 30080                           tosh	equ	0xFFE
 30081                           tosl	equ	0xFFD
 30082                           pclath	equ	0xFFA
 30083                           tblptru	equ	0xFF8
 30084                           tblptrh	equ	0xFF7
 30085                           tblptrl	equ	0xFF6
 30086                           tablat	equ	0xFF5
 30087                           prodh	equ	0xFF4
 30088                           prodl	equ	0xFF3
 30089                           intcon	equ	0xFF2
 30090                           indf0	equ	0xFEF
 30091                           postinc0	equ	0xFEE
 30092                           fsr0h	equ	0xFEA
 30093                           fsr0l	equ	0xFE9
 30094                           wreg	equ	0xFE8
 30095                           postinc1	equ	0xFE6
 30096                           postdec1	equ	0xFE5
 30097                           plusw1	equ	0xFE3
 30098                           fsr1h	equ	0xFE2
 30099                           fsr1l	equ	0xFE1
 30100                           indf2	equ	0xFDF
 30101                           postinc2	equ	0xFDE
 30102                           postdec2	equ	0xFDD
 30103                           plusw2	equ	0xFDB
 30104                           fsr2h	equ	0xFDA
 30105                           fsr2l	equ	0xFD9
 30106                           status	equ	0xFD8
 30107                           
 30108 ;; *************** function _iic_received_byte *****************
 30109 ;; Defined at:
 30110 ;;		line 102 in file "src/driver/i2c.c"
 30111 ;; Parameters:    Size  Location     Type
 30112 ;;		None
 30113 ;; Auto vars:     Size  Location     Type
 30114 ;;  i               1    1[BANK0 ] unsigned char 
 30115 ;;  ret             1    0[BANK0 ] unsigned char 
 30116 ;; Return value:  Size  Location     Type
 30117 ;;                  1    wreg      unsigned char 
 30118 ;; Registers used:
 30119 ;;		wreg, status,2, status,0
 30120 ;; Tracked objects:
 30121 ;;		On entry : 0/0
 30122 ;;		On exit  : 0/0
 30123 ;;		Unchanged: 0/0
 30124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30129 ;;Total ram usage:        2 bytes
 30130 ;; Hardware stack levels used:    1
 30131 ;; Hardware stack levels required when called:    4
 30132 ;; This function calls:
 30133 ;;		Nothing
 30134 ;; This function is called by:
 30135 ;;		_iic_received_byte_if_ack
 30136 ;; This function uses a non-reentrant model
 30137 ;;
 30138                           
 30139                           	psect	text137
 30140  0072E0                     __ptext137:
 30141                           	opt stack 0
 30142  0072E0                     _iic_received_byte:
 30143                           	opt stack 20
 30144                           
 30145                           ;i2c.c: 104: uint8_t i;
 30146                           ;i2c.c: 105: uint8_t ret=0;
 30147                           
 30148                           ;incstack = 0
 30149  0072E0  0E00               	movlw	0
 30150  0072E2  0100               	movlb	0	; () banked
 30151  0072E4  6F60               	movwf	iic_received_byte@ret& (0+255),b
 30152                           
 30153                           ; BSR set to: 0
 30154                           
 30155                           ; BSR set to: 0
 30156                           
 30157                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 30158  0072E6  9694               	bcf	3988,3,c	;volatile
 30159                           
 30160                           ; BSR set to: 0
 30161                           
 30162                           ; BSR set to: 0
 30163                           
 30164                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 30165                           
 30166                           ; BSR set to: 0
 30167  0072E8  8894               	bsf	3988,4,c	;volatile
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;i2c.c: 108: for(i=0;i<8;i++){
 30171  0072EA  0E00               	movlw	0
 30172  0072EC  0100               	movlb	0	; () banked
 30173  0072EE  6F61               	movwf	iic_received_byte@i& (0+255),b
 30174  0072F0                     l10899:
 30175                           
 30176                           ; BSR set to: 0
 30177  0072F0  0E07               	movlw	7
 30178  0072F2  0100               	movlb	0	; () banked
 30179  0072F4  6561               	cpfsgt	iic_received_byte@i& (0+255),b
 30180  0072F6  D001               	goto	l10903
 30181  0072F8  D024               	goto	l10963
 30182  0072FA                     l10903:
 30183                           
 30184                           ; BSR set to: 0
 30185                           ;i2c.c: 109: ret<<=1;
 30186  0072FA  0100               	movlb	0	; () banked
 30187  0072FC  90D8               	bcf	status,0,c
 30188  0072FE  3760               	rlcf	iic_received_byte@ret& (0+255),f,b
 30189                           
 30190                           ; BSR set to: 0
 30191                           
 30192                           ; BSR set to: 0
 30193                           
 30194                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 30195  007300  968B               	bcf	3979,3,c	;volatile
 30196                           
 30197                           ; BSR set to: 0
 30198                           
 30199                           ; BSR set to: 0
 30200                           
 30201                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 30202                           
 30203                           ; BSR set to: 0
 30204  007302  F000               	nop	
 30205  007304  F000               	nop	
 30206  007306  F000               	nop	
 30207  007308  F000               	nop	
 30208  00730A  F000               	nop	
 30209  00730C  F000               	nop	
 30210  00730E  F000               	nop	
 30211  007310  F000               	nop	
 30212  007312  F000               	nop	
 30213  007314  F000               	nop	
 30214  007316  F000               	nop	
 30215  007318  F000               	nop	
 30216                           
 30217                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 30218  00731A  868B               	bsf	3979,3,c	;volatile
 30219                           
 30220                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 30221  00731C  F000               	nop	
 30222  00731E  F000               	nop	
 30223  007320  F000               	nop	
 30224  007322  F000               	nop	
 30225  007324  F000               	nop	
 30226  007326  F000               	nop	
 30227  007328  F000               	nop	
 30228  00732A  F000               	nop	
 30229  00732C  F000               	nop	
 30230  00732E  F000               	nop	
 30231  007330  F000               	nop	
 30232  007332  F000               	nop	
 30233                           
 30234                           ;i2c.c: 114: if((PORTC & (1<<4))){
 30235  007334  A882               	btfss	3970,4,c	;volatile
 30236  007336  D002               	goto	l964
 30237                           
 30238                           ;i2c.c: 115: ret|=1;
 30239  007338  0100               	movlb	0	; () banked
 30240  00733A  8160               	bsf	iic_received_byte@ret& (0+255),0,b
 30241  00733C                     l964:
 30242  00733C  0100               	movlb	0	; () banked
 30243  00733E  2B61               	incf	iic_received_byte@i& (0+255),f,b
 30244  007340  D7D7               	goto	l10899
 30245  007342                     l10963:
 30246                           
 30247                           ; BSR set to: 0
 30248  007342  968B               	bcf	3979,3,c	;volatile
 30249                           
 30250                           ; BSR set to: 0
 30251                           ;i2c.c: 119: return ret;
 30252                           
 30253                           ; BSR set to: 0
 30254  007344  0100               	movlb	0	; () banked
 30255  007346  5160               	movf	iic_received_byte@ret& (0+255),w,b
 30256  007348  0012               	return	
 30257  00734A                     __end_of_iic_received_byte:
 30258                           	opt stack 0
 30259                           tosu	equ	0xFFF
 30260                           tosh	equ	0xFFE
 30261                           tosl	equ	0xFFD
 30262                           pclath	equ	0xFFA
 30263                           tblptru	equ	0xFF8
 30264                           tblptrh	equ	0xFF7
 30265                           tblptrl	equ	0xFF6
 30266                           tablat	equ	0xFF5
 30267                           prodh	equ	0xFF4
 30268                           prodl	equ	0xFF3
 30269                           intcon	equ	0xFF2
 30270                           indf0	equ	0xFEF
 30271                           postinc0	equ	0xFEE
 30272                           fsr0h	equ	0xFEA
 30273                           fsr0l	equ	0xFE9
 30274                           wreg	equ	0xFE8
 30275                           postinc1	equ	0xFE6
 30276                           postdec1	equ	0xFE5
 30277                           plusw1	equ	0xFE3
 30278                           fsr1h	equ	0xFE2
 30279                           fsr1l	equ	0xFE1
 30280                           indf2	equ	0xFDF
 30281                           postinc2	equ	0xFDE
 30282                           postdec2	equ	0xFDD
 30283                           plusw2	equ	0xFDB
 30284                           fsr2h	equ	0xFDA
 30285                           fsr2l	equ	0xFD9
 30286                           status	equ	0xFD8
 30287                           
 30288 ;; *************** function _at24c02_init *****************
 30289 ;; Defined at:
 30290 ;;		line 12 in file "src/driver/ex_eeprom.c"
 30291 ;; Parameters:    Size  Location     Type
 30292 ;;  pAt24c02        2    0[BANK0 ] PTR struct .
 30293 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 30294 ;;  slv             1    2[BANK0 ] unsigned char 
 30295 ;; Auto vars:     Size  Location     Type
 30296 ;;		None
 30297 ;; Return value:  Size  Location     Type
 30298 ;;                  1    wreg      void 
 30299 ;; Registers used:
 30300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30301 ;; Tracked objects:
 30302 ;;		On entry : 0/0
 30303 ;;		On exit  : 0/0
 30304 ;;		Unchanged: 0/0
 30305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30306 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30310 ;;Total ram usage:        3 bytes
 30311 ;; Hardware stack levels used:    1
 30312 ;; Hardware stack levels required when called:    4
 30313 ;; This function calls:
 30314 ;;		Nothing
 30315 ;; This function is called by:
 30316 ;;		_calib_data_init_diff_pr
 30317 ;;		_calib_data_init_pr
 30318 ;;		_at24c02_init_all_chip
 30319 ;; This function uses a non-reentrant model
 30320 ;;
 30321                           
 30322                           	psect	text138
 30323  006F58                     __ptext138:
 30324                           	opt stack 0
 30325  006F58                     _at24c02_init:
 30326                           	opt stack 24
 30327                           
 30328                           ;ex_eeprom.c: 14: pAt24c02->slaveAddr=slv;
 30329                           
 30330                           ; BSR set to: 0
 30331                           ;incstack = 0
 30332  006F58  C060  FFD9         	movff	at24c02_init@pAt24c02,fsr2l
 30333  006F5C  C061  FFDA         	movff	at24c02_init@pAt24c02+1,fsr2h
 30334  006F60  C062  FFDF         	movff	at24c02_init@slv,indf2
 30335                           
 30336                           ;ex_eeprom.c: 15: pAt24c02->iic_start=iic_start;
 30337  006F64  0100               	movlb	0	; () banked
 30338  006F66  EE20 F001          	lfsr	2,1
 30339  006F6A  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 30340  006F6C  26D9               	addwf	fsr2l,f,c
 30341  006F6E  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 30342  006F70  22DA               	addwfc	fsr2h,f,c
 30343  006F72  0EF2               	movlw	low _iic_start
 30344  006F74  6EDE               	movwf	postinc2,c
 30345  006F76  0E7B               	movlw	high _iic_start
 30346  006F78  6EDD               	movwf	postdec2,c
 30347                           
 30348                           ; BSR set to: 0
 30349                           ;ex_eeprom.c: 16: pAt24c02->iic_stop=iic_stop;
 30350  006F7A  0100               	movlb	0	; () banked
 30351  006F7C  EE20 F003          	lfsr	2,3
 30352  006F80  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 30353  006F82  26D9               	addwf	fsr2l,f,c
 30354  006F84  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 30355  006F86  22DA               	addwfc	fsr2h,f,c
 30356  006F88  0E6C               	movlw	low _iic_stop
 30357  006F8A  6EDE               	movwf	postinc2,c
 30358  006F8C  0E7C               	movlw	high _iic_stop
 30359  006F8E  6EDD               	movwf	postdec2,c
 30360                           
 30361                           ; BSR set to: 0
 30362                           ;ex_eeprom.c: 17: pAt24c02->iic_send_byte=iic_send_byte;
 30363  006F90  0100               	movlb	0	; () banked
 30364  006F92  EE20 F005          	lfsr	2,5
 30365  006F96  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 30366  006F98  26D9               	addwf	fsr2l,f,c
 30367  006F9A  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 30368  006F9C  22DA               	addwfc	fsr2h,f,c
 30369  006F9E  0E0A               	movlw	low _iic_send_byte
 30370  006FA0  6EDE               	movwf	postinc2,c
 30371  006FA2  0E72               	movlw	high _iic_send_byte
 30372  006FA4  6EDD               	movwf	postdec2,c
 30373                           
 30374                           ; BSR set to: 0
 30375                           ;ex_eeprom.c: 19: pAt24c02->iic_waite_ack=iic_waite_ack;
 30376  006FA6  0100               	movlb	0	; () banked
 30377  006FA8  EE20 F007          	lfsr	2,7
 30378  006FAC  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 30379  006FAE  26D9               	addwf	fsr2l,f,c
 30380  006FB0  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 30381  006FB2  22DA               	addwfc	fsr2h,f,c
 30382  006FB4  0EFA               	movlw	low _iic_waite_ack
 30383  006FB6  6EDE               	movwf	postinc2,c
 30384  006FB8  0E75               	movlw	high _iic_waite_ack
 30385  006FBA  6EDD               	movwf	postdec2,c
 30386                           
 30387                           ; BSR set to: 0
 30388                           ;ex_eeprom.c: 21: pAt24c02->iic_received_byte_if_ack=iic_received_byte_if_ack;
 30389  006FBC  0100               	movlb	0	; () banked
 30390  006FBE  EE20 F009          	lfsr	2,9
 30391  006FC2  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 30392  006FC4  26D9               	addwf	fsr2l,f,c
 30393  006FC6  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 30394  006FC8  22DA               	addwfc	fsr2h,f,c
 30395  006FCA  0E64               	movlw	low _iic_received_byte_if_ack
 30396  006FCC  6EDE               	movwf	postinc2,c
 30397  006FCE  0E81               	movlw	high _iic_received_byte_if_ack
 30398  006FD0  6EDD               	movwf	postdec2,c
 30399                           
 30400                           ; BSR set to: 0
 30401  006FD2  0012               	return		;funcret
 30402  006FD4                     __end_of_at24c02_init:
 30403                           	opt stack 0
 30404                           tosu	equ	0xFFF
 30405                           tosh	equ	0xFFE
 30406                           tosl	equ	0xFFD
 30407                           pclath	equ	0xFFA
 30408                           tblptru	equ	0xFF8
 30409                           tblptrh	equ	0xFF7
 30410                           tblptrl	equ	0xFF6
 30411                           tablat	equ	0xFF5
 30412                           prodh	equ	0xFF4
 30413                           prodl	equ	0xFF3
 30414                           intcon	equ	0xFF2
 30415                           indf0	equ	0xFEF
 30416                           postinc0	equ	0xFEE
 30417                           fsr0h	equ	0xFEA
 30418                           fsr0l	equ	0xFE9
 30419                           wreg	equ	0xFE8
 30420                           postinc1	equ	0xFE6
 30421                           postdec1	equ	0xFE5
 30422                           plusw1	equ	0xFE3
 30423                           fsr1h	equ	0xFE2
 30424                           fsr1l	equ	0xFE1
 30425                           indf2	equ	0xFDF
 30426                           postinc2	equ	0xFDE
 30427                           postdec2	equ	0xFDD
 30428                           plusw2	equ	0xFDB
 30429                           fsr2h	equ	0xFDA
 30430                           fsr2l	equ	0xFD9
 30431                           status	equ	0xFD8
 30432                           
 30433 ;; *************** function _ads1115_init_all_chip *****************
 30434 ;; Defined at:
 30435 ;;		line 112 in file "src/driver/ads1115.c"
 30436 ;; Parameters:    Size  Location     Type
 30437 ;;		None
 30438 ;; Auto vars:     Size  Location     Type
 30439 ;;		None
 30440 ;; Return value:  Size  Location     Type
 30441 ;;                  1    wreg      void 
 30442 ;; Registers used:
 30443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30444 ;; Tracked objects:
 30445 ;;		On entry : 0/0
 30446 ;;		On exit  : 0/0
 30447 ;;		Unchanged: 0/0
 30448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30453 ;;Total ram usage:        0 bytes
 30454 ;; Hardware stack levels used:    1
 30455 ;; Hardware stack levels required when called:    5
 30456 ;; This function calls:
 30457 ;;		_ads1115_init
 30458 ;; This function is called by:
 30459 ;;		_main
 30460 ;; This function uses a non-reentrant model
 30461 ;;
 30462                           
 30463                           	psect	text139
 30464  007E28                     __ptext139:
 30465                           	opt stack 0
 30466  007E28                     _ads1115_init_all_chip:
 30467                           	opt stack 25
 30468                           
 30469                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 30470                           
 30471                           ; BSR set to: 0
 30472                           ;incstack = 0
 30473  007E28  0EB2               	movlw	low _ads1115Chip0
 30474  007E2A  6E29               	movwf	_pAds1115PrObj,c
 30475  007E2C  0E02               	movlw	high _ads1115Chip0
 30476  007E2E  6E2A               	movwf	_pAds1115PrObj+1,c
 30477                           
 30478                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 30479  007E30  C029  F060         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 30480  007E34  C02A  F061         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 30481  007E38  0E90               	movlw	144
 30482  007E3A  0100               	movlb	0	; () banked
 30483  007E3C  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 30484  007E3E  ECAB  F031         	call	_ads1115_init	;wreg free
 30485                           
 30486                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 30487  007E42  0EA2               	movlw	low _ads1115Chip1
 30488  007E44  6E2B               	movwf	_pAds1115DiffPrObj,c
 30489  007E46  0E02               	movlw	high _ads1115Chip1
 30490  007E48  6E2C               	movwf	_pAds1115DiffPrObj+1,c
 30491                           
 30492                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 30493  007E4A  C02B  F060         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 30494  007E4E  C02C  F061         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 30495  007E52  0E92               	movlw	146
 30496  007E54  0100               	movlb	0	; () banked
 30497  007E56  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 30498  007E58  ECAB  F031         	call	_ads1115_init	;wreg free
 30499  007E5C  0012               	return		;funcret
 30500  007E5E                     __end_of_ads1115_init_all_chip:
 30501                           	opt stack 0
 30502                           tosu	equ	0xFFF
 30503                           tosh	equ	0xFFE
 30504                           tosl	equ	0xFFD
 30505                           pclath	equ	0xFFA
 30506                           tblptru	equ	0xFF8
 30507                           tblptrh	equ	0xFF7
 30508                           tblptrl	equ	0xFF6
 30509                           tablat	equ	0xFF5
 30510                           prodh	equ	0xFF4
 30511                           prodl	equ	0xFF3
 30512                           intcon	equ	0xFF2
 30513                           indf0	equ	0xFEF
 30514                           postinc0	equ	0xFEE
 30515                           fsr0h	equ	0xFEA
 30516                           fsr0l	equ	0xFE9
 30517                           wreg	equ	0xFE8
 30518                           postinc1	equ	0xFE6
 30519                           postdec1	equ	0xFE5
 30520                           plusw1	equ	0xFE3
 30521                           fsr1h	equ	0xFE2
 30522                           fsr1l	equ	0xFE1
 30523                           indf2	equ	0xFDF
 30524                           postinc2	equ	0xFDE
 30525                           postdec2	equ	0xFDD
 30526                           plusw2	equ	0xFDB
 30527                           fsr2h	equ	0xFDA
 30528                           fsr2l	equ	0xFD9
 30529                           status	equ	0xFD8
 30530                           
 30531 ;; *************** function _ads1115_init *****************
 30532 ;; Defined at:
 30533 ;;		line 5 in file "src/driver/ads1115.c"
 30534 ;; Parameters:    Size  Location     Type
 30535 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 30536 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 30537 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 30538 ;; Auto vars:     Size  Location     Type
 30539 ;;		None
 30540 ;; Return value:  Size  Location     Type
 30541 ;;                  1    wreg      void 
 30542 ;; Registers used:
 30543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30544 ;; Tracked objects:
 30545 ;;		On entry : 0/0
 30546 ;;		On exit  : 0/0
 30547 ;;		Unchanged: 0/0
 30548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30552 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30553 ;;Total ram usage:        3 bytes
 30554 ;; Hardware stack levels used:    1
 30555 ;; Hardware stack levels required when called:    4
 30556 ;; This function calls:
 30557 ;;		Nothing
 30558 ;; This function is called by:
 30559 ;;		_ads1115_init_all_chip
 30560 ;; This function uses a non-reentrant model
 30561 ;;
 30562                           
 30563                           	psect	text140
 30564  006356                     __ptext140:
 30565                           	opt stack 0
 30566  006356                     _ads1115_init:
 30567                           	opt stack 25
 30568                           
 30569                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 30570                           
 30571                           ;incstack = 0
 30572  006356  C060  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 30573  00635A  C061  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 30574  00635E  0E05               	movlw	5
 30575  006360  6EDF               	movwf	indf2,c
 30576                           
 30577                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 30578  006362  0100               	movlb	0	; () banked
 30579  006364  EE20 F001          	lfsr	2,1
 30580  006368  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30581  00636A  26D9               	addwf	fsr2l,f,c
 30582  00636C  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30583  00636E  22DA               	addwfc	fsr2h,f,c
 30584  006370  C062  FFDF         	movff	ads1115_init@slvaddr,indf2
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 30588  006374  0100               	movlb	0	; () banked
 30589  006376  EE20 F002          	lfsr	2,2
 30590  00637A  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30591  00637C  26D9               	addwf	fsr2l,f,c
 30592  00637E  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30593  006380  22DA               	addwfc	fsr2h,f,c
 30594  006382  0E83               	movlw	131
 30595  006384  6EDE               	movwf	postinc2,c
 30596  006386  0E85               	movlw	133
 30597  006388  6EDD               	movwf	postdec2,c
 30598                           
 30599                           ; BSR set to: 0
 30600                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 30601  00638A  0100               	movlb	0	; () banked
 30602  00638C  EE20 F006          	lfsr	2,6
 30603  006390  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30604  006392  26D9               	addwf	fsr2l,f,c
 30605  006394  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30606  006396  22DA               	addwfc	fsr2h,f,c
 30607  006398  0EF2               	movlw	low _iic_start
 30608  00639A  6EDE               	movwf	postinc2,c
 30609  00639C  0E7B               	movlw	high _iic_start
 30610  00639E  6EDD               	movwf	postdec2,c
 30611                           
 30612                           ; BSR set to: 0
 30613                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 30614  0063A0  0100               	movlb	0	; () banked
 30615  0063A2  EE20 F008          	lfsr	2,8
 30616  0063A6  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30617  0063A8  26D9               	addwf	fsr2l,f,c
 30618  0063AA  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30619  0063AC  22DA               	addwfc	fsr2h,f,c
 30620  0063AE  0E6C               	movlw	low _iic_stop
 30621  0063B0  6EDE               	movwf	postinc2,c
 30622  0063B2  0E7C               	movlw	high _iic_stop
 30623  0063B4  6EDD               	movwf	postdec2,c
 30624                           
 30625                           ; BSR set to: 0
 30626                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 30627  0063B6  0100               	movlb	0	; () banked
 30628  0063B8  EE20 F00A          	lfsr	2,10
 30629  0063BC  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30630  0063BE  26D9               	addwf	fsr2l,f,c
 30631  0063C0  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30632  0063C2  22DA               	addwfc	fsr2h,f,c
 30633  0063C4  0E0A               	movlw	low _iic_send_byte
 30634  0063C6  6EDE               	movwf	postinc2,c
 30635  0063C8  0E72               	movlw	high _iic_send_byte
 30636  0063CA  6EDD               	movwf	postdec2,c
 30637                           
 30638                           ; BSR set to: 0
 30639                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 30640  0063CC  0100               	movlb	0	; () banked
 30641  0063CE  EE20 F00C          	lfsr	2,12
 30642  0063D2  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30643  0063D4  26D9               	addwf	fsr2l,f,c
 30644  0063D6  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30645  0063D8  22DA               	addwfc	fsr2h,f,c
 30646  0063DA  0EFA               	movlw	low _iic_waite_ack
 30647  0063DC  6EDE               	movwf	postinc2,c
 30648  0063DE  0E75               	movlw	high _iic_waite_ack
 30649  0063E0  6EDD               	movwf	postdec2,c
 30650                           
 30651                           ; BSR set to: 0
 30652                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 30653  0063E2  0100               	movlb	0	; () banked
 30654  0063E4  EE20 F00E          	lfsr	2,14
 30655  0063E8  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 30656  0063EA  26D9               	addwf	fsr2l,f,c
 30657  0063EC  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 30658  0063EE  22DA               	addwfc	fsr2h,f,c
 30659  0063F0  0E64               	movlw	low _iic_received_byte_if_ack
 30660  0063F2  6EDE               	movwf	postinc2,c
 30661  0063F4  0E81               	movlw	high _iic_received_byte_if_ack
 30662  0063F6  6EDD               	movwf	postdec2,c
 30663                           
 30664                           ; BSR set to: 0
 30665  0063F8  0012               	return		;funcret
 30666  0063FA                     __end_of_ads1115_init:
 30667                           	opt stack 0
 30668                           tosu	equ	0xFFF
 30669                           tosh	equ	0xFFE
 30670                           tosl	equ	0xFFD
 30671                           pclath	equ	0xFFA
 30672                           tblptru	equ	0xFF8
 30673                           tblptrh	equ	0xFF7
 30674                           tblptrl	equ	0xFF6
 30675                           tablat	equ	0xFF5
 30676                           prodh	equ	0xFF4
 30677                           prodl	equ	0xFF3
 30678                           intcon	equ	0xFF2
 30679                           indf0	equ	0xFEF
 30680                           postinc0	equ	0xFEE
 30681                           fsr0h	equ	0xFEA
 30682                           fsr0l	equ	0xFE9
 30683                           wreg	equ	0xFE8
 30684                           postinc1	equ	0xFE6
 30685                           postdec1	equ	0xFE5
 30686                           plusw1	equ	0xFE3
 30687                           fsr1h	equ	0xFE2
 30688                           fsr1l	equ	0xFE1
 30689                           indf2	equ	0xFDF
 30690                           postinc2	equ	0xFDE
 30691                           postdec2	equ	0xFDD
 30692                           plusw2	equ	0xFDB
 30693                           fsr2h	equ	0xFDA
 30694                           fsr2l	equ	0xFD9
 30695                           status	equ	0xFD8
 30696                           
 30697 ;; *************** function _handler_interrupt_low *****************
 30698 ;; Defined at:
 30699 ;;		line 38 in file "src/soc/int.c"
 30700 ;; Parameters:    Size  Location     Type
 30701 ;;		None
 30702 ;; Auto vars:     Size  Location     Type
 30703 ;;		None
 30704 ;; Return value:  Size  Location     Type
 30705 ;;                  1    wreg      void 
 30706 ;; Registers used:
 30707 ;;		wreg, status,2, status,0, cstack
 30708 ;; Tracked objects:
 30709 ;;		On entry : 0/0
 30710 ;;		On exit  : 0/0
 30711 ;;		Unchanged: 0/0
 30712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30715 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30716 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30717 ;;Total ram usage:       17 bytes
 30718 ;; Hardware stack levels used:    1
 30719 ;; Hardware stack levels required when called:    3
 30720 ;; This function calls:
 30721 ;;		_rtc_alrm_irq_hook
 30722 ;;		_sys_ticker_irq_hook
 30723 ;; This function is called by:
 30724 ;;		Interrupt level 1
 30725 ;; This function uses a non-reentrant model
 30726 ;;
 30727                           
 30728                           	psect	intcodelo
 30729  000018                     __pintcodelo:
 30730                           	opt stack 0
 30731  000018                     _handler_interrupt_low:
 30732                           	opt stack 16
 30733                           
 30734                           ; BSR set to: 0
 30735                           ;incstack = 0
 30736  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30737  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 30738  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 30739  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 30740  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 30741  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 30742  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 30743  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 30744  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 30745  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 30746  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 30747  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 30748  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 30749  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 30750  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 30751  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 30752  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 30753  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 30754                           
 30755                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 30756  00005E  B29D               	btfsc	3997,1,c	;volatile
 30757  000060  A29E               	btfss	3998,1,c	;volatile
 30758  000062  D00D               	goto	i1l10505
 30759  000064  B29F               	btfsc	3999,1,c	;volatile
 30760  000066  D00B               	goto	i1l10505
 30761                           
 30762                           ;int.c: 41: PIR1bits.TMR2IF=0;
 30763  000068  929E               	bcf	3998,1,c	;volatile
 30764                           
 30765                           ;int.c: 42: glTicker++;
 30766  00006A  0E01               	movlw	1
 30767  00006C  0101               	movlb	1	; () banked
 30768  00006E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 30769  000070  0E00               	movlw	0
 30770  000072  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 30771  000074  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 30772  000076  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 30773                           
 30774                           ; BSR set to: 1
 30775                           ;int.c: 43: glbEvent |= (1<<0);
 30776  000078  8035               	bsf	_glbEvent,0,c	;volatile
 30777                           
 30778                           ; BSR set to: 1
 30779                           ;int.c: 44: sys_ticker_irq_hook();
 30780  00007A  ECE0  F03C         	call	_sys_ticker_irq_hook	;wreg free
 30781  00007E                     i1l10505:
 30782                           
 30783                           ;int.c: 45: }
 30784                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 30785  00007E  B0A3               	btfsc	4003,0,c	;volatile
 30786  000080  A0A4               	btfss	4004,0,c	;volatile
 30787  000082  D006               	goto	i1l1596
 30788  000084  B0A5               	btfsc	4005,0,c	;volatile
 30789  000086  D004               	goto	i1l1596
 30790                           
 30791                           ;int.c: 47: PIR3bits.RTCCIF=0;
 30792  000088  90A4               	bcf	4004,0,c	;volatile
 30793                           
 30794                           ;int.c: 48: glbEvent |= (1<<1);
 30795  00008A  8235               	bsf	_glbEvent,1,c	;volatile
 30796                           
 30797                           ;int.c: 49: rtc_alrm_irq_hook();
 30798  00008C  EC15  F041         	call	_rtc_alrm_irq_hook	;wreg free
 30799  000090                     i1l1596:
 30800  000090  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 30801  000094  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 30802  000098  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 30803  00009C  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 30804  0000A0  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 30805  0000A4  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 30806  0000A8  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 30807  0000AC  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 30808  0000B0  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 30809  0000B4  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 30810  0000B8  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 30811  0000BC  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 30812  0000C0  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 30813  0000C4  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 30814  0000C8  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 30815  0000CC  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 30816  0000D0  C00F  FFD8         	movff	??_handler_interrupt_low,status
 30817  0000D4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30818  0000D6  0010               	retfie	
 30819  0000D8                     __end_of_handler_interrupt_low:
 30820                           	opt stack 0
 30821                           tosu	equ	0xFFF
 30822                           tosh	equ	0xFFE
 30823                           tosl	equ	0xFFD
 30824                           pclatu	equ	0xFFB
 30825                           pclath	equ	0xFFA
 30826                           tblptru	equ	0xFF8
 30827                           tblptrh	equ	0xFF7
 30828                           tblptrl	equ	0xFF6
 30829                           tablat	equ	0xFF5
 30830                           prodh	equ	0xFF4
 30831                           prodl	equ	0xFF3
 30832                           intcon	equ	0xFF2
 30833                           indf0	equ	0xFEF
 30834                           postinc0	equ	0xFEE
 30835                           fsr0h	equ	0xFEA
 30836                           fsr0l	equ	0xFE9
 30837                           wreg	equ	0xFE8
 30838                           postinc1	equ	0xFE6
 30839                           postdec1	equ	0xFE5
 30840                           plusw1	equ	0xFE3
 30841                           fsr1h	equ	0xFE2
 30842                           fsr1l	equ	0xFE1
 30843                           bsr	equ	0xFE0
 30844                           indf2	equ	0xFDF
 30845                           postinc2	equ	0xFDE
 30846                           postdec2	equ	0xFDD
 30847                           plusw2	equ	0xFDB
 30848                           fsr2h	equ	0xFDA
 30849                           fsr2l	equ	0xFD9
 30850                           status	equ	0xFD8
 30851                           
 30852 ;; *************** function _sys_ticker_irq_hook *****************
 30853 ;; Defined at:
 30854 ;;		line 40 in file "src/soc/ticker.c"
 30855 ;; Parameters:    Size  Location     Type
 30856 ;;		None
 30857 ;; Auto vars:     Size  Location     Type
 30858 ;;		None
 30859 ;; Return value:  Size  Location     Type
 30860 ;;                  1    wreg      void 
 30861 ;; Registers used:
 30862 ;;		wreg, status,2, status,0
 30863 ;; Tracked objects:
 30864 ;;		On entry : 0/0
 30865 ;;		On exit  : 0/0
 30866 ;;		Unchanged: 0/0
 30867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30872 ;;Total ram usage:        0 bytes
 30873 ;; Hardware stack levels used:    1
 30874 ;; Hardware stack levels required when called:    2
 30875 ;; This function calls:
 30876 ;;		Nothing
 30877 ;; This function is called by:
 30878 ;;		_handler_interrupt_low
 30879 ;; This function uses a non-reentrant model
 30880 ;;
 30881                           
 30882                           	psect	text142
 30883  0079C0                     __ptext142:
 30884                           	opt stack 0
 30885  0079C0                     _sys_ticker_irq_hook:
 30886                           	opt stack 16
 30887                           
 30888                           ;ticker.c: 42: if(dlyTickerEn){
 30889                           
 30890                           ;incstack = 0
 30891  0079C0  5033               	movf	_dlyTickerEn,w,c
 30892  0079C2  B4D8               	btfsc	status,2,c
 30893  0079C4  D005               	goto	i1l1699
 30894                           
 30895                           ;ticker.c: 43: dlyTicker+=10;
 30896  0079C6  0E0A               	movlw	10
 30897  0079C8  0101               	movlb	1	; () banked
 30898  0079CA  2772               	addwf	_dlyTicker& (0+255),f,b
 30899  0079CC  0E00               	movlw	0
 30900  0079CE  2373               	addwfc	(_dlyTicker+1)& (0+255),f,b
 30901  0079D0                     i1l1699:
 30902                           
 30903                           ;ticker.c: 44: }
 30904                           ;ticker.c: 45: userTicker_ms+=10;
 30905  0079D0  0E0A               	movlw	10
 30906  0079D2  0101               	movlb	1	; () banked
 30907  0079D4  2778               	addwf	_userTicker_ms& (0+255),f,b	;volatile
 30908  0079D6  0E00               	movlw	0
 30909  0079D8  2379               	addwfc	(_userTicker_ms+1)& (0+255),f,b	;volatile
 30910                           
 30911                           ;ticker.c: 46: lcdTwinkle_ms+=10;
 30912  0079DA  0E0A               	movlw	10
 30913  0079DC  0101               	movlb	1	; () banked
 30914  0079DE  2774               	addwf	_lcdTwinkle_ms& (0+255),f,b	;volatile
 30915  0079E0  0E00               	movlw	0
 30916  0079E2  2375               	addwfc	(_lcdTwinkle_ms+1)& (0+255),f,b	;volatile
 30917                           
 30918                           ;ticker.c: 47: if(lcdTwinkle_ms>=200){
 30919  0079E4  0101               	movlb	1	; () banked
 30920  0079E6  5175               	movf	(_lcdTwinkle_ms+1)& (0+255),w,b	;volatile
 30921  0079E8  E105               	bnz	i1u820_20
 30922  0079EA  0EC8               	movlw	200
 30923  0079EC  0101               	movlb	1	; () banked
 30924  0079EE  5D74               	subwf	_lcdTwinkle_ms& (0+255),w,b	;volatile
 30925  0079F0  A0D8               	btfss	status,0,c
 30926  0079F2  0012               	return	
 30927  0079F4                     i1u820_20:
 30928                           
 30929                           ; BSR set to: 1
 30930                           ;ticker.c: 48: lcdTwinkle_ms=0;
 30931  0079F4  0E00               	movlw	0
 30932  0079F6  0101               	movlb	1	; () banked
 30933  0079F8  6F75               	movwf	(_lcdTwinkle_ms+1)& (0+255),b	;volatile
 30934  0079FA  0E00               	movlw	0
 30935  0079FC  6F74               	movwf	_lcdTwinkle_ms& (0+255),b	;volatile
 30936                           
 30937                           ;ticker.c: 49: lcdTwinkle= !(lcdTwinkle);
 30938  0079FE  5036               	movf	_lcdTwinkle,w,c
 30939  007A00  A4D8               	btfss	status,2,c
 30940  007A02  D002               	goto	i1u821_20
 30941  007A04  0E01               	movlw	1
 30942  007A06  D001               	goto	i1u822_20
 30943  007A08                     i1u821_20:
 30944  007A08  0E00               	movlw	0
 30945  007A0A                     i1u822_20:
 30946  007A0A  6E36               	movwf	_lcdTwinkle,c
 30947  007A0C  0012               	return	
 30948  007A0E                     __end_of_sys_ticker_irq_hook:
 30949                           	opt stack 0
 30950                           tosu	equ	0xFFF
 30951                           tosh	equ	0xFFE
 30952                           tosl	equ	0xFFD
 30953                           pclatu	equ	0xFFB
 30954                           pclath	equ	0xFFA
 30955                           tblptru	equ	0xFF8
 30956                           tblptrh	equ	0xFF7
 30957                           tblptrl	equ	0xFF6
 30958                           tablat	equ	0xFF5
 30959                           prodh	equ	0xFF4
 30960                           prodl	equ	0xFF3
 30961                           intcon	equ	0xFF2
 30962                           indf0	equ	0xFEF
 30963                           postinc0	equ	0xFEE
 30964                           fsr0h	equ	0xFEA
 30965                           fsr0l	equ	0xFE9
 30966                           wreg	equ	0xFE8
 30967                           postinc1	equ	0xFE6
 30968                           postdec1	equ	0xFE5
 30969                           plusw1	equ	0xFE3
 30970                           fsr1h	equ	0xFE2
 30971                           fsr1l	equ	0xFE1
 30972                           bsr	equ	0xFE0
 30973                           indf2	equ	0xFDF
 30974                           postinc2	equ	0xFDE
 30975                           postdec2	equ	0xFDD
 30976                           plusw2	equ	0xFDB
 30977                           fsr2h	equ	0xFDA
 30978                           fsr2l	equ	0xFD9
 30979                           status	equ	0xFD8
 30980                           
 30981 ;; *************** function _rtc_alrm_irq_hook *****************
 30982 ;; Defined at:
 30983 ;;		line 103 in file "src/soc/rtc.c"
 30984 ;; Parameters:    Size  Location     Type
 30985 ;;		None
 30986 ;; Auto vars:     Size  Location     Type
 30987 ;;		None
 30988 ;; Return value:  Size  Location     Type
 30989 ;;                  1    wreg      void 
 30990 ;; Registers used:
 30991 ;;		None
 30992 ;; Tracked objects:
 30993 ;;		On entry : 0/0
 30994 ;;		On exit  : 0/0
 30995 ;;		Unchanged: 0/0
 30996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31001 ;;Total ram usage:        0 bytes
 31002 ;; Hardware stack levels used:    1
 31003 ;; Hardware stack levels required when called:    2
 31004 ;; This function calls:
 31005 ;;		Nothing
 31006 ;; This function is called by:
 31007 ;;		_handler_interrupt_low
 31008 ;; This function uses a non-reentrant model
 31009 ;;
 31010                           
 31011                           	psect	text143
 31012  00822A                     __ptext143:
 31013                           	opt stack 0
 31014  00822A                     _rtc_alrm_irq_hook:
 31015                           	opt stack 16
 31016                           
 31017                           ; BSR set to: 1
 31018                           ;incstack = 0
 31019  00822A  0012               	return		;funcret
 31020  00822C                     __end_of_rtc_alrm_irq_hook:
 31021                           	opt stack 0
 31022                           tosu	equ	0xFFF
 31023                           tosh	equ	0xFFE
 31024                           tosl	equ	0xFFD
 31025                           pclatu	equ	0xFFB
 31026                           pclath	equ	0xFFA
 31027                           tblptru	equ	0xFF8
 31028                           tblptrh	equ	0xFF7
 31029                           tblptrl	equ	0xFF6
 31030                           tablat	equ	0xFF5
 31031                           prodh	equ	0xFF4
 31032                           prodl	equ	0xFF3
 31033                           intcon	equ	0xFF2
 31034                           indf0	equ	0xFEF
 31035                           postinc0	equ	0xFEE
 31036                           fsr0h	equ	0xFEA
 31037                           fsr0l	equ	0xFE9
 31038                           wreg	equ	0xFE8
 31039                           postinc1	equ	0xFE6
 31040                           postdec1	equ	0xFE5
 31041                           plusw1	equ	0xFE3
 31042                           fsr1h	equ	0xFE2
 31043                           fsr1l	equ	0xFE1
 31044                           bsr	equ	0xFE0
 31045                           indf2	equ	0xFDF
 31046                           postinc2	equ	0xFDE
 31047                           postdec2	equ	0xFDD
 31048                           plusw2	equ	0xFDB
 31049                           fsr2h	equ	0xFDA
 31050                           fsr2l	equ	0xFD9
 31051                           status	equ	0xFD8
 31052                           
 31053 ;; *************** function _handler_interrupt_hight *****************
 31054 ;; Defined at:
 31055 ;;		line 9 in file "src/soc/int.c"
 31056 ;; Parameters:    Size  Location     Type
 31057 ;;		None
 31058 ;; Auto vars:     Size  Location     Type
 31059 ;;		None
 31060 ;; Return value:  Size  Location     Type
 31061 ;;                  1    wreg      void 
 31062 ;; Registers used:
 31063 ;;		wreg, status,2, status,0, cstack
 31064 ;; Tracked objects:
 31065 ;;		On entry : 0/0
 31066 ;;		On exit  : 0/0
 31067 ;;		Unchanged: 0/0
 31068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31071 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31072 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31073 ;;Total ram usage:       14 bytes
 31074 ;; Hardware stack levels used:    1
 31075 ;; Hardware stack levels required when called:    1
 31076 ;; This function calls:
 31077 ;;		i2_rtc_alrm_irq_hook
 31078 ;;		i2_sys_ticker_irq_hook
 31079 ;; This function is called by:
 31080 ;;		Interrupt level 2
 31081 ;; This function uses a non-reentrant model
 31082 ;;
 31083                           
 31084                           	psect	intcode
 31085  000008                     __pintcode:
 31086                           	opt stack 0
 31087  000008                     _handler_interrupt_hight:
 31088                           	opt stack 16
 31089                           
 31090                           ;incstack = 0
 31091  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 31092  00000A  EF66  F02E         	goto	int_func
 31093                           tosu	equ	0xFFF
 31094                           tosh	equ	0xFFE
 31095                           tosl	equ	0xFFD
 31096                           pclatu	equ	0xFFB
 31097                           pclath	equ	0xFFA
 31098                           tblptru	equ	0xFF8
 31099                           tblptrh	equ	0xFF7
 31100                           tblptrl	equ	0xFF6
 31101                           tablat	equ	0xFF5
 31102                           prodh	equ	0xFF4
 31103                           prodl	equ	0xFF3
 31104                           intcon	equ	0xFF2
 31105                           indf0	equ	0xFEF
 31106                           postinc0	equ	0xFEE
 31107                           fsr0h	equ	0xFEA
 31108                           fsr0l	equ	0xFE9
 31109                           wreg	equ	0xFE8
 31110                           postinc1	equ	0xFE6
 31111                           postdec1	equ	0xFE5
 31112                           plusw1	equ	0xFE3
 31113                           fsr1h	equ	0xFE2
 31114                           fsr1l	equ	0xFE1
 31115                           bsr	equ	0xFE0
 31116                           indf2	equ	0xFDF
 31117                           postinc2	equ	0xFDE
 31118                           postdec2	equ	0xFDD
 31119                           plusw2	equ	0xFDB
 31120                           fsr2h	equ	0xFDA
 31121                           fsr2l	equ	0xFD9
 31122                           status	equ	0xFD8
 31123                           
 31124                           	psect	intcode_body
 31125  005CCC                     __pintcode_body:
 31126                           	opt stack 16
 31127  005CCC                     int_func:
 31128                           	opt stack 16
 31129  005CCC  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 31130  005CD0  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 31131  005CD4  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 31132  005CD8  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 31133  005CDC  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 31134  005CE0  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 31135  005CE4  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 31136  005CE8  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 31137  005CEC  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 31138  005CF0  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 31139  005CF4  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 31140  005CF8  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 31141  005CFC  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 31142  005D00  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 31143                           
 31144                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 31145  005D04  BAF2               	btfsc	intcon,5,c	;volatile
 31146  005D06  A4F2               	btfss	intcon,2,c	;volatile
 31147  005D08  D002               	goto	i2l1585
 31148  005D0A  B4F1               	btfsc	intcon2,2,c	;volatile
 31149                           
 31150                           ;int.c: 13: __nop();
 31151  005D0C  F000               	nop	
 31152  005D0E                     i2l1585:
 31153                           
 31154                           ;int.c: 14: }
 31155                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 31156  005D0E  BCF2               	btfsc	intcon,6,c	;volatile
 31157  005D10  A89D               	btfss	3997,4,c	;volatile
 31158  005D12  D001               	goto	i2l1586
 31159  005D14  509E               	movf	3998,w,c	;volatile
 31160  005D16                     i2l1586:
 31161                           
 31162                           ;int.c: 17: }
 31163                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 31164  005D16  BCF2               	btfsc	intcon,6,c	;volatile
 31165  005D18  AA9D               	btfss	3997,5,c	;volatile
 31166  005D1A  D001               	goto	i2l1587
 31167  005D1C  509E               	movf	3998,w,c	;volatile
 31168  005D1E                     i2l1587:
 31169                           
 31170                           ;int.c: 20: }
 31171                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 31172  005D1E  BCF2               	btfsc	intcon,6,c	;volatile
 31173  005D20  A09D               	btfss	3997,0,c	;volatile
 31174  005D22  D001               	goto	i2l1588
 31175  005D24  509E               	movf	3998,w,c	;volatile
 31176  005D26                     i2l1588:
 31177                           
 31178                           ;int.c: 23: }
 31179                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 31180  005D26  B29D               	btfsc	3997,1,c	;volatile
 31181  005D28  A29E               	btfss	3998,1,c	;volatile
 31182  005D2A  D00D               	goto	i2l10479
 31183  005D2C  A29F               	btfss	3999,1,c	;volatile
 31184  005D2E  D00B               	goto	i2l10479
 31185                           
 31186                           ;int.c: 26: PIR1bits.TMR2IF=0;
 31187  005D30  929E               	bcf	3998,1,c	;volatile
 31188                           
 31189                           ;int.c: 27: glTicker++;
 31190  005D32  0E01               	movlw	1
 31191  005D34  0101               	movlb	1	; () banked
 31192  005D36  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 31193  005D38  0E00               	movlw	0
 31194  005D3A  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 31195  005D3C  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 31196  005D3E  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 31197                           
 31198                           ; BSR set to: 1
 31199                           ;int.c: 28: glbEvent |= (1<<0);
 31200  005D40  8035               	bsf	_glbEvent,0,c	;volatile
 31201                           
 31202                           ; BSR set to: 1
 31203                           ;int.c: 29: sys_ticker_irq_hook();
 31204  005D42  EC07  F03D         	call	i2_sys_ticker_irq_hook	;wreg free
 31205  005D46                     i2l10479:
 31206                           
 31207                           ;int.c: 30: }
 31208                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 31209  005D46  B0A3               	btfsc	4003,0,c	;volatile
 31210  005D48  A0A4               	btfss	4004,0,c	;volatile
 31211  005D4A  D006               	goto	i2l1591
 31212  005D4C  A0A5               	btfss	4005,0,c	;volatile
 31213  005D4E  D004               	goto	i2l1591
 31214                           
 31215                           ;int.c: 32: PIR3bits.RTCCIF=0;
 31216  005D50  90A4               	bcf	4004,0,c	;volatile
 31217                           
 31218                           ;int.c: 33: glbEvent |= (1<<1);
 31219  005D52  8235               	bsf	_glbEvent,1,c	;volatile
 31220                           
 31221                           ;int.c: 34: rtc_alrm_irq_hook();
 31222  005D54  EC16  F041         	call	i2_rtc_alrm_irq_hook	;wreg free
 31223  005D58                     i2l1591:
 31224  005D58  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 31225  005D5C  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 31226  005D60  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 31227  005D64  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 31228  005D68  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 31229  005D6C  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 31230  005D70  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 31231  005D74  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 31232  005D78  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 31233  005D7C  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 31234  005D80  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 31235  005D84  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 31236  005D88  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 31237  005D8C  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 31238  005D90  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 31239  005D92  0011               	retfie		f
 31240  005D94                     __end_of_handler_interrupt_hight:
 31241                           	opt stack 0
 31242                           tosu	equ	0xFFF
 31243                           tosh	equ	0xFFE
 31244                           tosl	equ	0xFFD
 31245                           pclatu	equ	0xFFB
 31246                           pclath	equ	0xFFA
 31247                           tblptru	equ	0xFF8
 31248                           tblptrh	equ	0xFF7
 31249                           tblptrl	equ	0xFF6
 31250                           tablat	equ	0xFF5
 31251                           prodh	equ	0xFF4
 31252                           prodl	equ	0xFF3
 31253                           intcon	equ	0xFF2
 31254                           intcon2	equ	0xFF1
 31255                           indf0	equ	0xFEF
 31256                           postinc0	equ	0xFEE
 31257                           fsr0h	equ	0xFEA
 31258                           fsr0l	equ	0xFE9
 31259                           wreg	equ	0xFE8
 31260                           postinc1	equ	0xFE6
 31261                           postdec1	equ	0xFE5
 31262                           plusw1	equ	0xFE3
 31263                           fsr1h	equ	0xFE2
 31264                           fsr1l	equ	0xFE1
 31265                           bsr	equ	0xFE0
 31266                           indf2	equ	0xFDF
 31267                           postinc2	equ	0xFDE
 31268                           postdec2	equ	0xFDD
 31269                           plusw2	equ	0xFDB
 31270                           fsr2h	equ	0xFDA
 31271                           fsr2l	equ	0xFD9
 31272                           status	equ	0xFD8
 31273                           
 31274 ;; *************** function i2_sys_ticker_irq_hook *****************
 31275 ;; Defined at:
 31276 ;;		line 40 in file "src/soc/ticker.c"
 31277 ;; Parameters:    Size  Location     Type
 31278 ;;		None
 31279 ;; Auto vars:     Size  Location     Type
 31280 ;;		None
 31281 ;; Return value:  Size  Location     Type
 31282 ;;                  1    wreg      void 
 31283 ;; Registers used:
 31284 ;;		wreg, status,2, status,0
 31285 ;; Tracked objects:
 31286 ;;		On entry : 0/0
 31287 ;;		On exit  : 0/0
 31288 ;;		Unchanged: 0/0
 31289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31294 ;;Total ram usage:        0 bytes
 31295 ;; Hardware stack levels used:    1
 31296 ;; This function calls:
 31297 ;;		Nothing
 31298 ;; This function is called by:
 31299 ;;		_handler_interrupt_hight
 31300 ;; This function uses a non-reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text145
 31304  007A0E                     __ptext145:
 31305                           	opt stack 0
 31306  007A0E                     i2_sys_ticker_irq_hook:
 31307                           	opt stack 16
 31308                           
 31309                           ;ticker.c: 42: if(dlyTickerEn){
 31310                           
 31311                           ;incstack = 0
 31312  007A0E  5033               	movf	_dlyTickerEn,w,c
 31313  007A10  B4D8               	btfsc	status,2,c
 31314  007A12  D005               	goto	i2l1699
 31315                           
 31316                           ;ticker.c: 43: dlyTicker+=10;
 31317  007A14  0E0A               	movlw	10
 31318  007A16  0101               	movlb	1	; () banked
 31319  007A18  2772               	addwf	_dlyTicker& (0+255),f,b
 31320  007A1A  0E00               	movlw	0
 31321  007A1C  2373               	addwfc	(_dlyTicker+1)& (0+255),f,b
 31322  007A1E                     i2l1699:
 31323                           
 31324                           ;ticker.c: 44: }
 31325                           ;ticker.c: 45: userTicker_ms+=10;
 31326  007A1E  0E0A               	movlw	10
 31327  007A20  0101               	movlb	1	; () banked
 31328  007A22  2778               	addwf	_userTicker_ms& (0+255),f,b	;volatile
 31329  007A24  0E00               	movlw	0
 31330  007A26  2379               	addwfc	(_userTicker_ms+1)& (0+255),f,b	;volatile
 31331                           
 31332                           ;ticker.c: 46: lcdTwinkle_ms+=10;
 31333  007A28  0E0A               	movlw	10
 31334  007A2A  0101               	movlb	1	; () banked
 31335  007A2C  2774               	addwf	_lcdTwinkle_ms& (0+255),f,b	;volatile
 31336  007A2E  0E00               	movlw	0
 31337  007A30  2375               	addwfc	(_lcdTwinkle_ms+1)& (0+255),f,b	;volatile
 31338                           
 31339                           ;ticker.c: 47: if(lcdTwinkle_ms>=200){
 31340  007A32  0101               	movlb	1	; () banked
 31341  007A34  5175               	movf	(_lcdTwinkle_ms+1)& (0+255),w,b	;volatile
 31342  007A36  E105               	bnz	i2u824_40
 31343  007A38  0EC8               	movlw	200
 31344  007A3A  0101               	movlb	1	; () banked
 31345  007A3C  5D74               	subwf	_lcdTwinkle_ms& (0+255),w,b	;volatile
 31346  007A3E  A0D8               	btfss	status,0,c
 31347  007A40  0012               	return	
 31348  007A42                     i2u824_40:
 31349                           
 31350                           ; BSR set to: 1
 31351                           ;ticker.c: 48: lcdTwinkle_ms=0;
 31352  007A42  0E00               	movlw	0
 31353  007A44  0101               	movlb	1	; () banked
 31354  007A46  6F75               	movwf	(_lcdTwinkle_ms+1)& (0+255),b	;volatile
 31355  007A48  0E00               	movlw	0
 31356  007A4A  6F74               	movwf	_lcdTwinkle_ms& (0+255),b	;volatile
 31357                           
 31358                           ;ticker.c: 49: lcdTwinkle= !(lcdTwinkle);
 31359  007A4C  5036               	movf	_lcdTwinkle,w,c
 31360  007A4E  A4D8               	btfss	status,2,c
 31361  007A50  D002               	goto	i2u825_40
 31362  007A52  0E01               	movlw	1
 31363  007A54  D001               	goto	i2u826_40
 31364  007A56                     i2u825_40:
 31365  007A56  0E00               	movlw	0
 31366  007A58                     i2u826_40:
 31367  007A58  6E36               	movwf	_lcdTwinkle,c
 31368  007A5A  0012               	return	
 31369  007A5C                     __end_ofi2_sys_ticker_irq_hook:
 31370                           	opt stack 0
 31371                           tosu	equ	0xFFF
 31372                           tosh	equ	0xFFE
 31373                           tosl	equ	0xFFD
 31374                           pclatu	equ	0xFFB
 31375                           pclath	equ	0xFFA
 31376                           tblptru	equ	0xFF8
 31377                           tblptrh	equ	0xFF7
 31378                           tblptrl	equ	0xFF6
 31379                           tablat	equ	0xFF5
 31380                           prodh	equ	0xFF4
 31381                           prodl	equ	0xFF3
 31382                           intcon	equ	0xFF2
 31383                           intcon2	equ	0xFF1
 31384                           indf0	equ	0xFEF
 31385                           postinc0	equ	0xFEE
 31386                           fsr0h	equ	0xFEA
 31387                           fsr0l	equ	0xFE9
 31388                           wreg	equ	0xFE8
 31389                           postinc1	equ	0xFE6
 31390                           postdec1	equ	0xFE5
 31391                           plusw1	equ	0xFE3
 31392                           fsr1h	equ	0xFE2
 31393                           fsr1l	equ	0xFE1
 31394                           bsr	equ	0xFE0
 31395                           indf2	equ	0xFDF
 31396                           postinc2	equ	0xFDE
 31397                           postdec2	equ	0xFDD
 31398                           plusw2	equ	0xFDB
 31399                           fsr2h	equ	0xFDA
 31400                           fsr2l	equ	0xFD9
 31401                           status	equ	0xFD8
 31402                           
 31403 ;; *************** function i2_rtc_alrm_irq_hook *****************
 31404 ;; Defined at:
 31405 ;;		line 103 in file "src/soc/rtc.c"
 31406 ;; Parameters:    Size  Location     Type
 31407 ;;		None
 31408 ;; Auto vars:     Size  Location     Type
 31409 ;;		None
 31410 ;; Return value:  Size  Location     Type
 31411 ;;                  1    wreg      void 
 31412 ;; Registers used:
 31413 ;;		None
 31414 ;; Tracked objects:
 31415 ;;		On entry : 0/0
 31416 ;;		On exit  : 0/0
 31417 ;;		Unchanged: 0/0
 31418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31423 ;;Total ram usage:        0 bytes
 31424 ;; Hardware stack levels used:    1
 31425 ;; This function calls:
 31426 ;;		Nothing
 31427 ;; This function is called by:
 31428 ;;		_handler_interrupt_hight
 31429 ;; This function uses a non-reentrant model
 31430 ;;
 31431                           
 31432                           	psect	text146
 31433  00822C                     __ptext146:
 31434                           	opt stack 0
 31435  00822C                     i2_rtc_alrm_irq_hook:
 31436                           	opt stack 16
 31437                           
 31438                           ; BSR set to: 1
 31439                           ;incstack = 0
 31440  00822C  0012               	return		;funcret
 31441  00822E                     __end_ofi2_rtc_alrm_irq_hook:
 31442                           	opt stack 0
 31443                           tosu	equ	0xFFF
 31444                           tosh	equ	0xFFE
 31445                           tosl	equ	0xFFD
 31446                           pclatu	equ	0xFFB
 31447                           pclath	equ	0xFFA
 31448                           tblptru	equ	0xFF8
 31449                           tblptrh	equ	0xFF7
 31450                           tblptrl	equ	0xFF6
 31451                           tablat	equ	0xFF5
 31452                           prodh	equ	0xFF4
 31453                           prodl	equ	0xFF3
 31454                           intcon	equ	0xFF2
 31455                           intcon2	equ	0xFF1
 31456                           indf0	equ	0xFEF
 31457                           postinc0	equ	0xFEE
 31458                           fsr0h	equ	0xFEA
 31459                           fsr0l	equ	0xFE9
 31460                           wreg	equ	0xFE8
 31461                           postinc1	equ	0xFE6
 31462                           postdec1	equ	0xFE5
 31463                           plusw1	equ	0xFE3
 31464                           fsr1h	equ	0xFE2
 31465                           fsr1l	equ	0xFE1
 31466                           bsr	equ	0xFE0
 31467                           indf2	equ	0xFDF
 31468                           postinc2	equ	0xFDE
 31469                           postdec2	equ	0xFDD
 31470                           plusw2	equ	0xFDB
 31471                           fsr2h	equ	0xFDA
 31472                           fsr2l	equ	0xFD9
 31473                           status	equ	0xFD8
 31474                           tosu	equ	0xFFF
 31475                           tosh	equ	0xFFE
 31476                           tosl	equ	0xFFD
 31477                           pclatu	equ	0xFFB
 31478                           pclath	equ	0xFFA
 31479                           tblptru	equ	0xFF8
 31480                           tblptrh	equ	0xFF7
 31481                           tblptrl	equ	0xFF6
 31482                           tablat	equ	0xFF5
 31483                           prodh	equ	0xFF4
 31484                           prodl	equ	0xFF3
 31485                           intcon	equ	0xFF2
 31486                           intcon2	equ	0xFF1
 31487                           indf0	equ	0xFEF
 31488                           postinc0	equ	0xFEE
 31489                           fsr0h	equ	0xFEA
 31490                           fsr0l	equ	0xFE9
 31491                           wreg	equ	0xFE8
 31492                           postinc1	equ	0xFE6
 31493                           postdec1	equ	0xFE5
 31494                           plusw1	equ	0xFE3
 31495                           fsr1h	equ	0xFE2
 31496                           fsr1l	equ	0xFE1
 31497                           bsr	equ	0xFE0
 31498                           indf2	equ	0xFDF
 31499                           postinc2	equ	0xFDE
 31500                           postdec2	equ	0xFDD
 31501                           plusw2	equ	0xFDB
 31502                           fsr2h	equ	0xFDA
 31503                           fsr2l	equ	0xFD9
 31504                           status	equ	0xFD8
 31505                           
 31506                           	psect	text147
 31507  000000                     __ptext147:
 31508                           	opt stack 0
 31509                           tosu	equ	0xFFF
 31510                           tosh	equ	0xFFE
 31511                           tosl	equ	0xFFD
 31512                           pclatu	equ	0xFFB
 31513                           pclath	equ	0xFFA
 31514                           tblptru	equ	0xFF8
 31515                           tblptrh	equ	0xFF7
 31516                           tblptrl	equ	0xFF6
 31517                           tablat	equ	0xFF5
 31518                           prodh	equ	0xFF4
 31519                           prodl	equ	0xFF3
 31520                           intcon	equ	0xFF2
 31521                           intcon2	equ	0xFF1
 31522                           indf0	equ	0xFEF
 31523                           postinc0	equ	0xFEE
 31524                           fsr0h	equ	0xFEA
 31525                           fsr0l	equ	0xFE9
 31526                           wreg	equ	0xFE8
 31527                           postinc1	equ	0xFE6
 31528                           postdec1	equ	0xFE5
 31529                           plusw1	equ	0xFE3
 31530                           fsr1h	equ	0xFE2
 31531                           fsr1l	equ	0xFE1
 31532                           bsr	equ	0xFE0
 31533                           indf2	equ	0xFDF
 31534                           postinc2	equ	0xFDE
 31535                           postdec2	equ	0xFDD
 31536                           plusw2	equ	0xFDB
 31537                           fsr2h	equ	0xFDA
 31538                           fsr2l	equ	0xFD9
 31539                           status	equ	0xFD8
 31540                           
 31541                           	psect	rparam
 31542  0000                     tosu	equ	0xFFF
 31543                           tosh	equ	0xFFE
 31544                           tosl	equ	0xFFD
 31545                           pclatu	equ	0xFFB
 31546                           pclath	equ	0xFFA
 31547                           tblptru	equ	0xFF8
 31548                           tblptrh	equ	0xFF7
 31549                           tblptrl	equ	0xFF6
 31550                           tablat	equ	0xFF5
 31551                           prodh	equ	0xFF4
 31552                           prodl	equ	0xFF3
 31553                           intcon	equ	0xFF2
 31554                           intcon2	equ	0xFF1
 31555                           indf0	equ	0xFEF
 31556                           postinc0	equ	0xFEE
 31557                           fsr0h	equ	0xFEA
 31558                           fsr0l	equ	0xFE9
 31559                           wreg	equ	0xFE8
 31560                           postinc1	equ	0xFE6
 31561                           postdec1	equ	0xFE5
 31562                           plusw1	equ	0xFE3
 31563                           fsr1h	equ	0xFE2
 31564                           fsr1l	equ	0xFE1
 31565                           bsr	equ	0xFE0
 31566                           indf2	equ	0xFDF
 31567                           postinc2	equ	0xFDE
 31568                           postdec2	equ	0xFDD
 31569                           plusw2	equ	0xFDB
 31570                           fsr2h	equ	0xFDA
 31571                           fsr2l	equ	0xFD9
 31572                           status	equ	0xFD8
 31573                           
 31574                           	psect	temp
 31575  000040                     btemp:
 31576                           	opt stack 0
 31577  000040                     	ds	1
 31578  0000                     int$flags	set	btemp
 31579                           tosu	equ	0xFFF
 31580                           tosh	equ	0xFFE
 31581                           tosl	equ	0xFFD
 31582                           pclatu	equ	0xFFB
 31583                           pclath	equ	0xFFA
 31584                           tblptru	equ	0xFF8
 31585                           tblptrh	equ	0xFF7
 31586                           tblptrl	equ	0xFF6
 31587                           tablat	equ	0xFF5
 31588                           prodh	equ	0xFF4
 31589                           prodl	equ	0xFF3
 31590                           intcon	equ	0xFF2
 31591                           intcon2	equ	0xFF1
 31592                           indf0	equ	0xFEF
 31593                           postinc0	equ	0xFEE
 31594                           fsr0h	equ	0xFEA
 31595                           fsr0l	equ	0xFE9
 31596                           wreg	equ	0xFE8
 31597                           postinc1	equ	0xFE6
 31598                           postdec1	equ	0xFE5
 31599                           plusw1	equ	0xFE3
 31600                           fsr1h	equ	0xFE2
 31601                           fsr1l	equ	0xFE1
 31602                           bsr	equ	0xFE0
 31603                           indf2	equ	0xFDF
 31604                           postinc2	equ	0xFDE
 31605                           postdec2	equ	0xFDD
 31606                           plusw2	equ	0xFDB
 31607                           fsr2h	equ	0xFDA
 31608                           fsr2l	equ	0xFD9
 31609                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    1633
    Data        17
    BSS         1127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    158     160
    BANK1           256      1     244
    BANK2           256     29     223
    BANK3           256      0     162
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 16
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK1[8]), sampBufPt100ExA(BANK1[8]), sampBufDiffPr_D23(BANK1[16]), 
		 -> sampBufDiffPr_D01(BANK1[16]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 16
		 -> sampBufDiffPr_D23(BANK1[16]), sampBufDiffPr_D01(BANK1[16]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    m_flash_write@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), 

    m_flash_write@tmpBuf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    m_flash_read@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(BANK0[10]), STR_1(CODE[5]), 

    at24c02_write_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK2[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S1277$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S1277$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S1277$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S1277$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S1277$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 256
		 -> flashTestbuf(CODE[65]), m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), 
		 -> defultSystemData(CODE[150]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), crc_verify@expected(BANK0[2]), globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), 

    crc_append@message	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    crc_sum@puchMsg	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), globleBuffer1(BANK5[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    ui_disp_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> ui_disp_menu_home_02@mf(BANK0[4]), ui_disp_menu_home_01@mf(BANK0[4]), ui_disp_menu_home_00@mf(BANK0[4]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK0[1]), 

    cal_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK3[156]), prCalibTabDef(BANK3[162]), 

    cal_diff_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef.prCalibRow(BANK2[156]), diff_prCalibTabDef(BANK2[162]), 

    cal_diff_press@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    cal_diff_p_to_h@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_float_fast@tab	PTR float  size(2) Largest target is 404
		 -> hKel(CODE[404]), hKcy(CODE[404]), 

    m_interp1_cal_p_t@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_t@tmpx	PTR struct . size(2) Largest target is 24
		 -> cal_diff_press@tmpx(BANK2[24]), 

    m_interp1_cal_p_v@xout	PTR struct . size(2) Largest target is 24
		 -> cal_diff_press@tmpx(BANK2[24]), NULL(NULL[0]), 

    m_interp1_cal_p_v@xin	PTR struct . size(2) Largest target is 8
		 -> cal_press@xin(BANK0[8]), x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_v@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK3[156]), diff_prCalibTabDef.prCalibRow(BANK2[156]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_diff_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK2[162]), 

    data_sys_init@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer1(BANK5[256]), 

    data_sys_init@buf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer1(BANK5[256]), 

    data_sys_cal_v2@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer1(BANK5[256]), 

    data_sys_cal_v1@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer1(BANK5[256]), 

    fpSysData	PTR const struct . size(3) Largest target is 62463
		 -> ROM(CODE[62463]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S62$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S62$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S62$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S62$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S62$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _key_process->_key_waite_release
    _key_adj_value_fixed_point->___exp_10
    ___lwmod->___exp_10
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_pose
    _key_process_down->_key_shift_loc_fixed_point
    _sample_diff_pr_chip_fast->_ads1115_set_mux
    _ui_disp_menu_psw_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _ui_disp_menu_home_02->_lcd_disp_unit_mpa
    _ui_disp_menu_home_02->_lcd_disp_unit_t
    _ui_disp_menu_home_01->_lcd_disp_unit_1st_m3
    _ui_disp_menu_home_01->_lcd_disp_unit_mpa
    _ui_disp_menu_home_00->_lcd_disp_unit_1st_m
    _ui_disp_menu_home_00->_lcd_disp_unit_mpa
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_disp_level->_lcd_disp_level_bar
    _sample_pr_chip_comm->_ads1115_set_mux
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _sample_diff_pr_chip_slow->_ads1115_set_mux
    _m_flash_write->_m_flash_unlock
    _m_flash_erase->_m_flash_unlock
    ___wmul->___exp_10
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_base_zero
    ___enter_menu_set_base_zero->___int32_2_mflot32
    _key_process_down->_key_shift_loc_fixed_point
    _event_process_time_out->_sample_diff_pr_chip_fast
    _event_process_ticker->_sample_diff_pr_chip_fast
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _ui_disp_menu->_ui_disp_menu_home_00
    _ui_disp_menu->_ui_disp_menu_home_01
    _ui_disp_menu->_ui_disp_menu_home_02
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_menu_home_02->_cal_diff_hight_level
    _lcd_disp_unit_t->_lcd_set_com_seg
    _ui_disp_menu_home_01->_cal_diff_hight_level
    _lcd_disp_unit_1st_m3->_lcd_set_com_seg
    _ui_disp_menu_home_00->_cal_diff_hight_level
    _ui_disp_xfloat_pt->_lcd_show_string_l0
    _ui_disp_xfloat_pt->_lcd_show_string_l1
    _m_int16_2_str_4->___awdiv
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_disp_unit_mpa->_lcd_set_com_seg
    _lcd_disp_unit_1st_m->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _cal_diff_hight_level->___flge
    ___int32_2_mflot32->___lldiv
    _sample_pr_chip_comm->___x_sample_fifo
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _in_adc_start_and_read->_delay_us
    _sample_diff_pr_chip_slow->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter
    ___x_sample_fliter->___aldiv
    _delay_ms->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    ___x_sample_fifo->___aldiv
    _cal_pt100_temperature_in->___fltol
    _cal_pt100_temperature_ex->___fltol
    _cal_press->_m_interp1_cal_p_v
    _cal_diff_press->_cal_diff_hight_to_vol_v
    _m_interp1_cal_p_v->___lmul
    _m_interp1_cal_p_t->___lmul
    ___lmul->___aldiv
    _cal_diff_p_to_h->___fltol
    _cal_diff_hight_to_vol_v->_m_interp1_float_fast
    _cal_diff_hight_to_vol_h->_m_interp1_float_fast
    _m_interp1_float_fast->___flge
    ___flge->___fladd
    _cal_additional_pressute->___fltol
    ___flneg->___fldiv
    ___fladd->___flneg
    _data_init_all->_data_sys_init
    _data_sys_init->_data_sys_cal_v1
    _m_flash_write->_m_flash_read
    _data_sys_cal_v2->___fltol
    _data_sys_cal_v1->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _calib_data_init_pr->_crc_verify
    _calib_data_set_default_pr->___wmul
    _calib_data_init_diff_pr->_crc_verify
    _crc_verify->_crc_sum
    _crc_append->_crc_sum
    _calib_data_set_default_diff_pr->___wmul
    ___wmul->___exp_10
    _at24c02_write_n_byte->_iic_send_byte
    _at24c02_read_n_byte->_iic_received_byte_if_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _event_process->_event_process_rtc

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    _event_process_rtc->_cal_diff_press

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 8444834
              _ads1115_init_all_chip
                      _data_init_all
                      _event_process
                        _in_adc_init
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  525369
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                          _lcd_bl_on
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process                                        0     0      0 7841174
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _key_polling
                        _key_process
 ---------------------------------------------------------------------------------
 (2) _key_process                                          3     3      0 3788062
                                            121 BANK0      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _key_waite_release                                    5     1      4    1845
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (4) _key_polling                                          2     2      0    1358
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _key_process_up                                       0     0      0    3109
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_fixed_point                            7     4      3    3109
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     421
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_set_down_long                            2     2      0    1617
                                             31 BANK0      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_pose                                3     3      0      34
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_density                             4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_base_zero                           2     2      0    1549
                                             29 BANK0      2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_shift_loc_fixed_point                            5     1      4     527
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _event_process_time_out                               0     0      0    9159
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (2) _event_process_ticker                                 0     0      0    9159
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             3     3      0    9159
                                             37 BANK0      3     3      0
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (2) _event_process_rtc                                    1     1      0 4033436
                                              0 BANK1      1     1      0
            _cal_additional_pressute
                     _cal_diff_press
                          _cal_press
           _cal_pt100_temperature_ex
           _cal_pt100_temperature_in
           _sample_diff_pr_chip_slow
               _sample_in_soc_adc_ch
                _sample_pr_chip_comm
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu                                         0     0      0 3780831
               _ui_disp_menu_home_00
               _ui_disp_menu_home_01
               _ui_disp_menu_home_02
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_psw_adj                                 0     0      0  621966
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (5) _ui_disp_adj_xfixed_pt                               17    12      5  591344
                                             22 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___x_arrange_str                                      4     1      3     614
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_home_02                                 5     5      0 1052955
                                            116 BANK0      5     5      0
                  ___int32_2_mflot32
               _cal_diff_hight_level
                     _lcd_disp_level
                   _lcd_disp_refresh
                  _lcd_disp_unit_mpa
                    _lcd_disp_unit_t
               _ui_disp_clear_num_dp
                  _ui_disp_xfloat_pt
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_unit_t                                      1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_home_01                                 5     5      0 1052955
                                            116 BANK0      5     5      0
                  ___int32_2_mflot32
               _cal_diff_hight_level
                     _lcd_disp_level
                   _lcd_disp_refresh
               _lcd_disp_unit_1st_m3
                  _lcd_disp_unit_mpa
               _ui_disp_clear_num_dp
                  _ui_disp_xfloat_pt
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_unit_1st_m3                                 1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_home_00                                 5     5      0 1052955
                                            116 BANK0      5     5      0
                  ___int32_2_mflot32
               _cal_diff_hight_level
                     _lcd_disp_level
                   _lcd_disp_refresh
                _lcd_disp_unit_1st_m
                  _lcd_disp_unit_mpa
               _ui_disp_clear_num_dp
                  _ui_disp_xfloat_pt
 ---------------------------------------------------------------------------------
 (5) _ui_disp_xfloat_pt                                   16    13      3  590731
                                             22 BANK0     16    13      3
                        _lcd_show_dp
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                    _m_int16_2_str_4
 ---------------------------------------------------------------------------------
 (6) _m_int16_2_str_4                                      4     0      4    3242
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1153
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  246636
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  246636
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (6) _ui_disp_clear_num_dp                                 0     0      0  339499
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (7) _lcd_show_string                                      3     1      2  246816
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  246323
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   30678
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (7) _lcd_show_dp                                          2     1      1   92683
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_2                                    1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_1                                    1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_0                                    1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_unit_mpa                                    1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_unit_1st_m                                  1     1      0   30492
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_level                                       2     2      0   32609
                                             18 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_level_bar                                   3     2      1   32377
                                             31 COMRAM     1     0      1
                                             16 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   30461
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_level                                16    16      0   27509
                                            100 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___int32_2_mflot32                                   16    12      4    1515
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_comm                                  7     5      2   10429
                                             30 BANK0      7     5      2
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                11    11      0     971
                                              9 BANK0     11    11      0
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2     412
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_slow                             5     3      2   14065
                                             37 BANK0      5     3      2
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3670
                                             35 BANK0      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3397
                                             14 BANK0     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             2     0      2    1182
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _delay_us                                             4     2      2     338
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2    1979
                                              7 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5    1287
                                              2 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3    1682
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2    1698
                                             10 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3     969
                                              4 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    3749
                                             14 BANK0     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _cal_pt100_temperature_in                            12    12      0   26718
                                             98 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _cal_pt100_temperature_ex                            17    17      0   26718
                                             98 BANK0     17    17      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _cal_press                                           11    11      0    5278
                                             55 BANK0     11    11      0
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (3) _cal_diff_press                                      29    29      0  141748
                                              0 BANK2     29    29      0
            _cal_diff_hight_to_vol_h
            _cal_diff_hight_to_vol_v
                    _cal_diff_p_to_h
                  _m_interp1_cal_p_t
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (4) _m_interp1_cal_p_v                                   29    23      6    5062
                                             26 BANK0     29    23      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _m_interp1_cal_p_t                                   28    23      5    4551
                                             26 BANK0     28    23      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1416
                                             14 BANK0     12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8    1885
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _cal_diff_p_to_h                                     12    10      2   18504
                                             98 BANK0     12    10      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _cal_diff_hight_to_vol_v                             24    20      4   57224
                                            134 BANK0     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (4) _cal_diff_hight_to_vol_h                             20    16      4   55996
                                            134 BANK0     20    16      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (5) _m_interp1_float_fast                                34    26      8   28233
                                            100 BANK0     34    26      8
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1706
                                             88 BANK0     12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _cal_additional_pressute                             12    12      0   26607
                                             98 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     785
                                             64 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    7182
                                             68 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _data_init_all                                        0     0      0   77181
            _calib_data_init_diff_pr
                 _calib_data_init_pr
                      _data_sys_init
 ---------------------------------------------------------------------------------
 (2) _data_sys_init                                        5     5      0   51832
                                            126 BANK0      5     5      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_flash_write                                       21    13      8    5041
                                             14 BANK0     21    13      8
                      _m_flash_erase
                       _m_flash_read
                     _m_flash_unlock
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (4) _m_flash_read                                        14     6      8    1890
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _m_flash_erase                                        8     4      4     260
                                              0 BANK0      8     4      4
                     _m_flash_unlock
 ---------------------------------------------------------------------------------
 (4) _m_flash_unlock                                       1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _data_sys_cal_v2                                     20    16      4   18668
                                             98 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _data_sys_cal_v1                                     28    24      4   18770
                                             98 BANK0     28    24      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    3506
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1327
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    7373
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    6075
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_pr                                   5     5      0   12659
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
          _calib_data_set_default_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_pr                            8     8      0    2118
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_diff_pr                              5     5      0   12690
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
     _calib_data_set_default_diff_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _crc_verify                                          10     6      4    3598
                                             12 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        6     0      6    1452
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _crc_append                                           8     4      4    1991
                                             12 BANK0      8     4      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (4) _crc_sum                                             12     8      4     660
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_diff_pr                       8     8      0    2149
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1672
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (3) _at24c02_write_n_byte                                 9     2      7    1209
                                              2 BANK0      9     2      7
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _at24c02_read_n_byte                                 13     6      7    2288
                                              4 BANK0     13     6      7
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (6) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_send_byte                                        2     2      0     167
                                              0 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (7) _iic_waite_ack                                        1     1      0      65
                                             31 COMRAM     1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (6) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0     207
                                              2 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0     108
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _at24c02_init                                         3     0      3     937
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (13) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (15) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _data_init_all
     _calib_data_init_diff_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
           _iic_send_ack
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _at24c02_write_n_byte
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _calib_data_set_default_diff_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _calib_data_init_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
           _iic_send_ack
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _at24c02_write_n_byte
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _calib_data_set_default_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _data_sys_init
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
       _data_sys_cal_v1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _data_sys_cal_v2
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _m_flash_read
       _m_flash_write
         _m_flash_erase
           _m_flash_unlock
         _m_flash_read
         _m_flash_unlock
         _m_mem_cpy_len
       _m_mem_cpy_len
   _event_process
     _event_process_rtc
       _cal_additional_pressute
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _cal_diff_press
         _cal_diff_hight_to_vol_h
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _m_interp1_float_fast
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
         _cal_diff_hight_to_vol_v
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _m_interp1_float_fast
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
         _cal_diff_p_to_h
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _m_interp1_cal_p_t
           ___aldiv
           ___lmul
             ___aldiv (ARG)
         _m_interp1_cal_p_v
           ___aldiv
           ___lmul
             ___aldiv (ARG)
       _cal_press
         _m_interp1_cal_p_v
           ___aldiv
           ___lmul
             ___aldiv (ARG)
       _cal_pt100_temperature_ex
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _cal_pt100_temperature_in
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _sample_diff_pr_chip_slow
         ___x_sample_fifo
           ___aldiv
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
       _sample_in_soc_adc_ch
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_comm
         ___x_sample_fifo
           ___aldiv
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
       _ui_disp_menu
         _ui_disp_menu_home_00
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_1st_m
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_home_01
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_1st_m3
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_home_02
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_t
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_psw_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
     _event_process_ticker
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _event_process_time_out
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _key_polling
       _delay_ms
         _delay_us
     _key_process
       _key_process_down
         _key_shift_loc_fixed_point
       _key_process_set
       _key_process_set_down_long
         ___enter_menu_set_base_zero
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_density
         ___enter_menu_set_pose
       _key_process_set_long
       _key_process_up
         _key_adj_value_fixed_point
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       _key_waite_release
         _key_polling
           _delay_ms
             _delay_us
       _ui_disp_menu
         _ui_disp_menu_home_00
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_1st_m
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_home_01
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_1st_m3
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_home_02
           ___int32_2_mflot32
             ___lldiv
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _lcd_disp_level
             _lcd_disp_level_bar
               _lcd_set_com_seg
                 ___awdiv
           _lcd_disp_refresh
           _lcd_disp_unit_mpa
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_unit_t
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
           _ui_disp_xfloat_pt
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string_l0
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _lcd_show_string_l1
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
         _ui_disp_menu_psw_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
   _in_adc_init
   _lcd_init
     _lcd_bl_on
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A2      11       63.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     1D      DF       9       87.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      1      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     554      12        0.0%
DATA                 0      0     554       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Sep 17 13:56:12 2017

                  lcd_show_string_l0@str 0073                           ?_iic_waite_ack 0001  
                  lcd_show_string_l1@str 0073                             ___fldiv@aexp 009F  
                           ___fldiv@bexp 009E                             ?_lcd_show_dp 0070  
                    ?_lcd_show_string_l0 0073                      ?_lcd_show_string_l1 0073  
                           ___fldiv@sign 0093               __end_of_rtcc_reg_wr_enable 8210  
                  ??_at24c02_read_n_byte 006B                             ?_in_adc_init 0001  
                   at24c02_init@pAt24c02 0060                   __end_of_m_flash_unlock 819E  
                          ?_m_int8_2_hex 0060                   ??_ui_disp_menu_psw_adj 0021  
                           ___awdiv@sign 0065                                       bsr 000FE0  
                          ?_lcd_show_chr 0070                      ___wmul@multiplicand 0064  
                   _m_interp1_float_fast 2068              __end_of_rtcc_reg_wr_disable 821C  
                      _pAds1115DiffPrObj 002B                             __CFG_CP0$OFF 000000  
                          ?_m_flash_read 0060                              __CFG_OSC$HS 000000  
                                    l175 0654                                      WREG 000FE8  
                                    l931 7224                                      l916 7638  
                                    l939 7230                                      l964 733C  
                                    _PR2 000FCB                         ??_key_process_up 0021  
                                    _dwm 00FF                             ___awmod@sign 0065  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                __size_of_ads1115_read_reg 01BC  
                           ___flmul@aexp 007B                             ___flmul@bexp 0080  
                __end_of___x_arrange_str 759C                     ??_lcd_disp_level_bar 0021  
                           ___flmul@sign 007A                           ?_m_flash_erase 0060  
                           ___flmul@temp 0085                             ___flmul@prod 0081  
              _m_interp1_float_fast$4413 00DC               ?_key_shift_loc_fixed_point 0060  
                   ??_lcd_show_string_l0 0021                     ??_lcd_show_string_l1 0021  
                     m_int16_2_str_4@buf 0068                           ?_m_flash_write 006E  
                           ___fltol@exp1 00C1                                     l1042 72AC  
                                   l1043 72AA                                     l2320 1454  
                                   l2321 1420                                     l2082 47D8  
                                   l2412 1A78                                     l1508 6EA6  
                                   l2405 17DC                                     l1517 5032  
                                   l2229 607C                                     l2422 1B8A  
                                   l2414 1AE6                                     l1518 5040  
                                   l2319 1460                                     l2336 15D4  
                                   l2441 3F2C                                     l2345 1668  
                                   l1705 7D60                                     l2442 3F44  
                                   l2434 3ED0                                     l2282 7042  
                                   l2427 3E24                                     l1548 7CEC  
                                   l1812 5370                                     l2292 74D2  
                                   l2375 26BE                                     l2384 26F6  
                                   l2386 2764                                     l2378 2666  
                                   l1794 341C                                     l1795 3470  
                                   l9241 808C                                     l9233 7F0E  
                                   l9237 807A                                     l9229 7EFC  
                                   STR_1 F3F5                                     STR_2 F3EC  
                                   STR_3 F3FA                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATG 000F8F  
                                   u9240 7158                                     u9154 5C6C  
                                   u9250 718E                                     u9155 5C66  
                                   u9164 5CA2                                     u9165 5C9C  
                                   u9430 70EA                                     u9247 714E  
                                   u9440 7120                                     u9257 7184  
                                   u9437 70E0                                     u9710 13EA  
                                   u9447 7116                                     u9720 1402  
                                   u9730 1404                            _m_mem_cpy_len 7972  
                         ??_lcd_disp_all 0020                        ??_key_process_set 0020  
               cal_diff_hight_to_vol_h@h 00E6                                     _pLCD 0100  
               cal_diff_hight_to_vol_v@D 00F6                                     _hKel EFED  
           __end_of_LCDDigitalIndexTable EFB4                                     _hKcy F181  
               cal_diff_hight_to_vol_v@h 00E6                __size_of_lcd_disp_refresh 0062  
                                   _main 7CA8                                     _menu 0037  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   indf0 000FEF                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0040                  _handler_interrupt_hight 0008  
                    _lcd_disp_unit_1st_m 791E                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00D8  
                         ??_iic_send_ack 0020                            _globleBuffer0 0400  
                          _globleBuffer1 0500                            __CFG_IESO$OFF 000000  
                        ___fldiv@new_exp 0098              key_shift_loc_fixed_point@t8 0020  
                      _key_waite_release 7B30         __end_of_iic_received_byte_if_ack 8184  
             calib_data_init_diff_pr@t16 0077                             ___param_bank 000000  
             calib_data_init_diff_pr@buf 0079                         ?_lcd_set_com_seg 0068  
     __size_of_calib_data_set_default_pr 01C4               calib_data_init_diff_pr@ret 0076  
                       ??_cal_diff_press 0020                       ?_key_waite_release 0068  
                                  EECON2 000FA7                           ??_m_int8_2_hex 0020  
             ??_ads1115_start_conversion 0021                           ??_lcd_show_chr 0021  
                          lcd_disp_all@i 0061                            lcd_disp_all@x 0060  
                        ?_m_flash_unlock 0001                    ?_m_interp1_float_fast 00C4  
                                  TABLAT 000FF5                           ??_m_flash_read 0020  
                        ___x_sample_fifo 4994                                    l11001 6492  
                                  l11011 7576                                    l11021 70CA  
                                  l11013 7578                                    l11007 7544  
                                  l11201 7270                                    l11033 7B7A  
                                  l11027 7100                                    l11141 721A  
                                  l12021 29EA                                    l11301 1064  
                                  l12031 2B38                                    l12015 28AE  
                                  l11311 10BE                                    l11303 1076  
                                  l11231 0DEE                                    l11039 7B9C  
                                  RTCCFG 000F5F                                    l10601 5C8C  
                                  l11321 1118                                    l11313 10D0  
                                  l11305 1088                                    l11241 0E48  
                                  l11233 0E00                                    l11225 0DBC  
                                  l12121 784E                                    l12113 7830  
                                  l11073 4DEA                                    l11065 7B10  
                                  l11147 722E                                    l11411 1330  
                                  l11219 7D02                                    l11323 112A  
                                  l11315 10E2                                    l11307 109A  
                                  l11251 0EA2                                    l11243 0E5A  
                                  l11235 0E12                                    l11227 0DCA  
                                  l12123 785A                                    l12107 7F76  
                                  l11059 7AEE                                    l12051 76DC  
                                  l12043 76C4                                    l11405 130C  
                                  l11325 113C                                    l11317 10F4  
                                  l11309 10AC                                    l11261 0EFC  
                                  l11253 0EB4                                    l11245 0E6C  
                                  l11237 0E24                                    l11229 0DDC  
                                  l12117 783E                                    l10701 8006  
                                  l10621 75A6                                    l12061 76F4  
                                  l11423 1364                                    l11415 133A  
                                  l11351 5446                                    l12303 7084  
                                  l12231 4248                                    l12223 419C  
                                  l12071 5878                                    l11319 1106  
                                  l11271 0F56                                    l11263 0F0E  
                                  l11255 0EC6                                    l11247 0E7E  
                                  l11239 0E36                                    l12127 7864  
                                  l10711 684E                                    l12207 738A  
                                  l12215 790A                                    l13111 7C50  
                                  l12055 76E8                                    l12047 76D0  
                                  l12039 76B8                                    l11353 5456  
                                  l11345 5418                                    l13009 55DC  
                                  l12233 4286                                    l12225 41D2  
                                  l12081 58D6                                    l10561 5F64  
                                  l11281 0FB0                                    l11273 0F68  
                                  l11265 0F20                                    l11257 0ED8  
                                  l11249 0E90                                    l11329 114E  
                                  l10633 75D4                                    l10625 75B0  
                                  l10721 6880                                    l10713 6858  
                                  l12313 6FF2                                    l11603 250C  
                                  l11523 161C                                    l11371 54DE  
                                  l11363 54B0                                    l11355 545C  
                                  l11339 53FA                                    l12227 41FC  
                                  l12243 80F8                                    l10563 5F70  
                                  l10555 5F46                                    l11291 100A  
                                  l11283 0FC2                                    l11275 0F7A  
                                  l11267 0F32                                    l11259 0EEA  
                                  l10707 7FD6                                    l10723 688A  
                                  l10715 6862                                    l12163 6202  
                                  l12155 5E40                                    l12139 5DB2  
                                  l13107 7C32                                    l12315 6FFE  
                                  l13115 7E94                                    l11613 253A  
                                  l11517 1606                                    l11533 163C  
                                  l11509 15B4                                    l11453 13A0  
                                  l11381 129E                                    l12501 0526  
                                  l12413 1BD6                                    l12237 431E  
                                  l12229 4222                                    l12085 5902  
                                  l10581 5FC8                                    l10573 5FA6  
                                  l10565 5F76                                    l10549 5F30  
                                  l11293 101C                                    l11285 0FD4  
                                  l11277 0F8C                                    l11269 0F44  
                                  l10741 71CC                                    l10733 71A4  
                                  l10637 75F4                                    l10725 6894  
                                  l10717 686C                                    l12093 7F94  
                                  l12149 5E06                                    l13141 5E8A  
                                  l13133 5E74                                    l13125 5E60  
                                  l12325 7034                                    l12317 7004  
                                  l12341 74C4                                    l12333 748E  
                                  l10903 72FA                                    l11703 2828  
                                  l11543 1662                                    l11527 1628  
                                  l11535 1642                                    l11471 1444  
                                  l11391 12CC                                    l11367 54C2  
                                  l12423 1D4C                                    l12407 0DA8  
                                  l12247 810E                                    l13311 44D4  
                                  l12079 58BC                                    l11295 102E  
                                  l11287 0FE6                                    l11279 0F9E  
                                  l12191 795E                                    l10743 71D6  
                                  l10735 71AE                                    l10719 6876  
                                  l10751 7138                                    l13151 5EA8  
                                  l13143 5E90                                    l12335 749A  
                                  l13119 7EAA                                    l11705 282C  
                                  l11633 25BC                                    l11625 258E  
                                  l11609 2530                                    l11801 1A8C  
                                  l11561 16F2                                    l11553 16BE  
                                  l11481 1484                                    l11465 1434  
                                  l12425 1D50                                    l12265 33C8  
                                  l13241 4988                                    l10577 5FB4  
                                  l10593 5C1C                                    l11297 1040  
                                  l11289 0FF8                                    l10737 71B8  
                                  l10729 689E                                    l12177 6266  
                                  l12169 622C                                    l12097 7F9E  
                                  l13153 5EAE                                    l13145 5E96  
                                  l13137 5E7E                                    l13129 5E6A  
                                  l12337 74A0                                    l12363 7974  
                                  l12371 79B2                                    l11651 2672  
                                  l11643 263A                                    l11811 1AE0  
                                  l11491 14C8                                    l11467 143A  
                                  l11387 12C2                                    l13075 3A02  
                                  l12427 1DA0                                    l12419 1CE8  
                                  l12259 3396                                    l11299 1052  
                                  l10739 71C2                                    l10747 71E0  
                                  l12179 6276                                    l13171 7DD0  
                                  l13147 5E9C                                    l13139 5E84  
                                  l13091 7B3C                                    l12701 64FE  
                                  l11821 1B36                                    l11725 176A  
                                  l11573 1716                                    l11565 16FE  
                                  l11557 16D0                                    l12381 0990  
                                  l12277 34C6                                    l13237 497C  
                                  l13341 3642                                    l13333 3612  
                                  l10589 5C12                                    l10757 716E  
                                  l13165 7DBE                                    l13413 531E  
                                  l13149 5EA2                                    l13157 5EB4  
                                  l14061 7CDA                                    l10767 7A6E  
                                  l11663 26E0                                    l11583 24AE  
                                  l11743 17C4                                    l11727 1770  
                                  l11719 1746                                    l12359 6EC6  
                                  l11567 1702                                    l11495 14D2  
                                  l11399 12F8                                    l12375 0876  
                                  l12199 7402                                    l10695 8036  
                                  l13167 7DC4                                    l13175 7DD6  
                                  l10769 7A70                                    l11657 26BA  
                                  l11593 24DC                                    l11825 1B5C  
                                  l11753 1804                                    l11745 17CA  
                                  l11737 17A0                                    l11729 1782  
                                  l11913 56FC                                    l11905 56C6  
                                  l11489 14C2                                    l12449 2EFE  
                                  l12385 09F4                                    l12289 35BA  
                                  l13329 3608                                    l13169 7DCA  
                                  l13601 6176                                    l13425 535A  
                                  l13417 5334                                    l12545 769A  
                                  l12553 76AE                                    l13097 7B48  
                                  l10963 7342                                    l11835 1BAA  
                                  l11827 1B70                                    l11907 56D6  
                                  l11499 14E4                                    l11851 4734  
                                  l12299 705E                                    l12387 09F8  
                                  l11923 6000                                    l13099 7B5C  
                                  l10877 763C                                    l12901 3C06  
                                  l11693 27E2                                    l11669 270A  
                                  l11589 24D2                                    l11837 1BB4  
                                  l11749 17F0                                    l11909 56E0  
                                  l11861 4824                                    l12389 0A4E  
                                  l12717 7AE2                                    l13381 378C  
                                  l13373 373E                                    l13365 370E  
                                  l13357 36C0                                    l13349 3690  
                                  l11925 6010                                    l10981 6426  
                                  l13613 6190                                    l12549 76A4  
                                  l10887 7652                                    l10879 7644  
                                  l11695 27F6                                    l11679 275E  
                                  l11951 3E5C                                    l11855 4786  
                                  l11847 46E6                                    l12487 030C  
                                  l12399 0D34                                    l11935 606A  
                                  l11927 6016                                    l13631 61C6  
                                  l12905 3C22                                    l11697 2818  
                                  l11689 27B4                                    l11953 3E64  
                                  l11945 3E34                                    l10993 6470  
                                  l10985 643A                                    l10977 6416  
                                  l13625 61B4                                    l12577 5A3A  
                                  l10899 72F0                                    l12843 6DDC  
                                  l11795 1A62                                    l11963 3F0E  
                                  l11955 3E74                                    l10987 6446  
                                  l13619 61A2                                    l12587 5AD6  
                                  l13563 659A                                    l13571 65B6  
                                  l13555 657C                                    l12917 3DD4  
                                  l12909 3C2C                                    l12693 64AE  
                                  l12941 4166                                    l12933 3FE4  
                                  l11965 3F1E                                    l11957 3EB2  
                                  l11869 7D3E                                    l12781 4A70  
                                  l13389 37BC                                    l10989 644C  
                                  l10997 647E                                    l13645 61F2  
                                  l13637 61D8                                    l13733 67EC  
                                  l11895 5696                                    l11879 5628  
                                  l11983 2074                                    l13567 65AA  
                                  l13559 658C                                    l12961 45CA  
                                  l12929 3FDA                                    l11977 3F96  
                                  l11993 220E                                    l12769 49AE  
                                  l13753 7E68                                    l13745 6830  
                                  l11899 56AA                                    l11995 2214  
                                  l13587 7D62                                    l12981 57FA  
                                  l12973 571A                                    l12877 5022  
                                  l12893 5050                                    l11997 224C  
                                  l11989 219E                                    l13597 6160  
                                  l13765 7E7C                                    l12967 4608  
                                  l12959 45BE                                    l12975 579A  
                                  l12983 5800                                    l12879 5028  
                                  l12991 550A                                    l13759 7E72  
                                  l12897 3BFC                                    l12997 554E  
                          ___fltol@sign1 00C0                          __end_of___aldiv 54F0  
                        __end_of___fladd 1728                                    ?_main 0001  
                      ?_key_process_down 0001                    __end_of_data_init_all 81F6  
                        __end_of___fldiv 2850                          __end_of___awdiv 5FD2  
                        __end_of___flneg 7D50                          __end_of___awmod 649C  
                        __end_of___flmul 1BCE                          __end_of___fltol 570E  
                        __end_of___lldiv 608E                                    u10210 27C8  
                    ??_key_waite_release 0020                                    u10400 1B4A  
                                  u10320 1A04                                    u11008 59B4  
                                  u11009 59CC                                    u11018 59DE  
                                  u11019 59F6                                    u10500 5648  
                                  u11108 42D6                                    u11028 5A08  
                                  u12020 36E0                                    u10325 19F8  
                                  u11109 42EC                                    u11118 430A  
                                  u11038 4188                                    u11048 41AE  
                                  u10505 563C                                    u12025 36D4  
                                  u11058 41E4                                    u12050 375E  
                   _cal_diff_hight_level 2850                                    u11068 420E  
                        ___awdiv@divisor 0062                     ?_lcd_disp_unit_1st_m 0001  
                                  u11270 799C                                    u11078 4234  
                                  u11510 5ACC                                    u12055 3752  
                                  u11088 425A                                    u12080 37DC  
                                  u12401 67B2                                    u11098 4298  
                                  u12090 52DA                                    u11099 42AE  
                                  u11277 7992                                    u12085 37D0  
                                  _T2CON 000FCA                                    u11570 6DD8  
                                  u11708 44F2                                    u10780 58F0  
                                  u11709 4506                                    u11718 4518  
                                  u11719 4536                                    u11728 4548  
                                  u11808 5752                                    u11729 4560  
                                  u11809 5770                                    u11738 4572  
                                  u11818 5782                                    u11739 4586  
                                  u11748 4598                                    u11828 57B0  
                                  u11829 57CE                                    u11758 45DC  
                                  u11838 57E6                                    u11759 45F2  
                                  u11871 6EE6                                    u11778 4652  
                                  u10978 592E                                    u11779 4668  
                                  u10979 5942                                    u11788 4684  
                                  u10988 5954                                    u10989 5978  
                                  u11798 572C                                    u10998 598A  
                                  u11990 3662                                    u11799 5740  
                                  u10999 59A2                                    u11995 3656  
                                  _FSR0H 000FEA                                    _FSR0L 000FE9  
                        __end_of___lwdiv 704C                          __end_of___lwmod 74DC  
                        ___awdiv@counter 0064                                    _PORTB 000F81  
                                  _PORTC 000F82                _key_adj_value_fixed_point 5A1C  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISG 000F98                       ??_key_process_down 0021  
                        ??_lcd_disp_logo 0020                             ?_key_polling 0001  
                    lcd_disp_dp_loc_0@dp 0020                      lcd_disp_dp_loc_1@dp 0020  
                    lcd_disp_dp_loc_2@dp 0020                             ?_key_process 0001  
                    ___lmul@multiplicand 0072                           __CFG_FCMEN$OFF 000000  
                        __end_of_crc_sum 653A                                    _glRtc 0133  
            sample_diff_pr_chip_fast@t16 0086                                    _st_Bj 0188  
                         ?_m_mem_cpy_len 0060              sample_diff_pr_chip_fast@ret 0085  
                         __CFG_T1DIG$OFF 000000             ??___enter_menu_set_base_zero 0020  
                   _lcd_disp_unit_1st_m3 734A                                    pclath 000FFA  
                                  tablat 000FF5             __end_of_sample_in_soc_adc_ch 37F0  
                        __end_of_rtc_set 6146                        ??_data_sys_cal_v1 0020  
                      ??_data_sys_cal_v2 0020                                    plusw1 000FE3  
                                  plusw2 000FDB                     _event_process_ticker 81DA  
                     crc_verify@expected 0074                                    status 000FD8  
                           _adc_pressure 0180                          ??_iic_send_byte 0021  
                  __end_of_data_sys_init 4C66                       _diff_prCalibTabDef 0200  
              __end_of_key_waite_release 7B72                         ?_lcd_show_string 0073  
                        ??_iic_waite_ack 0020                         __end_of_HexTable EFED  
                        __initialization 62AA             at24c02_write_n_byte@pAt24c02 0062  
                           __end_of_hKel F181                             __end_of_hKcy F315  
                      ??_cal_diff_p_to_h 00C4                             __end_of_main 7CE0  
                          _prCalibTabDef 0300                         _glNoEventTimeOut 003F  
      __end_of_calib_data_set_default_pr 416C                     iic_received_byte@ret 0060  
            __size_of_calib_data_init_pr 012E              sample_diff_pr_chip_slow@t16 0088  
               ?_cal_additional_pressute 0001              sample_diff_pr_chip_slow@ret 0087  
           __size_of_sample_pr_chip_comm 01B8                  sample_in_soc_adc_ch@t16 006D  
                          _userTicker_ms 0178                  sample_in_soc_adc_ch@ret 006F  
                  ?_cal_diff_hight_level 0001                    ??_lcd_disp_unit_1st_m 0020  
                                 ??_main 0021                            __activetblptr 000002  
                        ??_m_flash_erase 0021                               _at24c02Ch0 01B0  
                             _at24c02Ch1 01BB                    ___enter_menu_set_pose 7F2A  
           __end_of_key_process_set_long 7F2A                          ??_m_flash_write 0076  
                   cal_diff_press@tabrow 02C2                   __size_of_event_process 0034  
                       ?___x_arrange_str 0060         __size_of_calib_data_init_diff_pr 012E  
                                 _ADCON1 000FC1         __size_of_ads1115_read_conversion 0046  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                       __end_of___exp_10 7710                         ___awdiv@dividend 0060  
                  ?_lcd_disp_unit_1st_m3 0001                                   _LCDCON 000FA8  
                                 _LCDSE0 000FA9                                   _LCDSE1 000FB6  
                                 _LCDSE2 000FB7                                   _LCDSE3 000FB8  
                                 _LCDSE4 000FB9                                   _LCDSE5 000FBA  
                                 _LCDREG 000FD2                ??_handler_interrupt_hight 0001  
                                 i1l1596 0090                                   i1l1699 79D0  
                         __CFG_WDTEN$OFF 000000                                   i2l1591 5D58  
                                 i2l1585 5D0E                                   i2l1586 5D16  
                                 i2l1587 5D1E                                   i2l1588 5D26  
                                 i2l1699 7A1E                                   _INTCON 000FF2  
                                 _TABLAT 000FF5             __end_of_at24c02_write_n_byte 5816  
                  ?_event_process_ticker 0001              ??_key_process_set_down_long 007F  
                          m_int8_2_hex@b 0062             __size_of_sys_ticker_irq_hook 004E  
                       __end_of___xxtofl 3FA8                         ??_lcd_disp_level 0021  
              ___enter_menu_set_pose@fps 0060                         __end_of_delay_ms 811C  
                       __end_of_delay_us 7D18                            ?_at24c02_init 0060  
         __size_of_sample_diff_pr_fliter 007E            __end_of_sample_diff_pr_fliter 6E5E  
                         __CFG_XINST$OFF 000000                           cal_press@F7793 0123  
                  m_interp1_float_fast@f 00E0                    m_interp1_float_fast@i 00E4  
                __end_of___x_sample_fifo 4AFE                    m_interp1_float_fast@x 00D4  
                  m_interp1_float_fast@y 00D8                         __end_of_lcd_init 81CC  
                       __end_of_iic_stop 7CA8                                   ___flge 4698  
                                 ___lmul 704C                                ??___aldiv 0020  
                              ??___fladd 00AC                                   ___wmul 7DF2  
                 ??_m_interp1_float_fast 00CC                                ??___fldiv 008F  
                              ??___awdiv 0020                                ??___flneg 0020  
                              ??___awmod 0020                                ??___flmul 0076  
                              ??___fltol 00BC                     __end_of_flashTestbuf F3EC  
                              ??___lldiv 0020                  at24c02_write_n_byte@buf 0065  
                at24c02_write_n_byte@len 0067                                ??___lwdiv 0021  
                              ??___lwmod 0021                      lcd_disp_level@level 0072  
                                 clear_0 62F2                                   clear_1 6306  
                                 clear_2 6318                                   clear_3 6324  
                                 clear_4 6330                                   clear_5 6342  
                          m_flash_read@i 0068                         ___awdiv@quotient 0066  
                        ___awmod@divisor 0062                     __size_of_lcd_show_dp 006C  
                   __end_of_lcd_disp_all 7FBA                          ___awmod@counter 0064  
                   __size_of_in_adc_init 0024                                ??_crc_sum 0064  
                  i2_sys_ticker_irq_hook 7A0E                     _LCDDigitalIndexTable EF8B  
                   at24c02_read_n_byte@i 006F                       ui_disp_xfloat_pt@x 0084  
                ??_in_adc_start_and_read 0020                             __pdataCOMRAM 003C  
               __size_of_ads1115_set_mux 0024                         key_polling@ktemp 0066  
                       __end_of_soc_init 81AE                     __end_of_iic_send_ack 7AA6  
                       _ads1115_read_reg 416C                             __mediumconst ED8A  
                       __end_of_rtc_init 7BF2                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
      __size_of_iic_received_byte_if_ack 0020                     lcd_disp_get_code@chr 0060  
               __size_of_lcd_disp_unit_t 0054                     lcd_disp_get_code@ret 0061  
              ?_iic_received_byte_if_ack 0001                          ??_m_mem_cpy_len 0020  
                              ??_rtc_set 0020                 ui_disp_start_cs600@F7655 01E6  
               ?_cal_diff_hight_to_vol_h 00E6                 ?_cal_diff_hight_to_vol_v 00E6  
               ??_event_process_time_out 0021                     __end_of_m_int8_2_hex 776A  
                             ___flge@ff1 00B8                               ___flge@ff2 00BC  
                   __end_of_lcd_show_chr 68D4                             ___xxtofl@arg 006A  
                           _pcf8574Value 0034                             ___xxtofl@exp 0069  
                           ___xxtofl@val 0060                         _lcd_disp_refresh 74DC  
                             __accesstop 0060                  __end_of__initialization 6348  
                   __end_of_m_flash_read 6EDC                        _sampBufDiffPr_D01 01A0  
                      _sampBufDiffPr_D23 0190                               ___flneg@f1 00A0  
                             ___exp_10@n 0020                 __size_of_m_int16_2_str_4 015E  
             __size_of_key_waite_release 0042             __size_ofi2_rtc_alrm_irq_hook 0002  
                         ??_at24c02_init 0020                            ___rparam_used 000001  
                             ___fltol@f1 00B8                    _handler_interrupt_low 0018  
                      _event_process_rtc 6146                            _p_prEepromObj 0184  
                          _event_process 7E5E                           iic_send_byte@i 0061  
                         iic_send_byte@x 0060                        _sampBufExPr0InSoc 016E  
                         __pcstackCOMRAM 0001                        _sampBufExPr1InSoc 016C  
                     __size_of_cal_press 007C                             __pidataBANK1 81F6  
                     ?_event_process_rtc 0001           __size_of_ui_disp_adj_xfixed_pt 00C2  
          __end_of_ui_disp_adj_xfixed_pt 5E56                  m_flash_write@writeTimes 0078  
                   _inSocAdcSampleUpdate 0189          __end_of_handler_interrupt_hight 5D94  
                  m_flash_write@pageAddr 007A                   ??_cal_diff_hight_level 0020  
              _key_process_set_down_long 5E56                    ___x_sample_fliter@t32 007E  
               _sample_diff_pr_chip_fast 52BA                    ___x_sample_fliter@buf 006E  
               ___enter_menu_set_density 7D86                    ___x_sample_fliter@len 0070  
                   _sample_in_soc_adc_ch 35CE                    ___x_sample_fliter@max 007A  
                  ___x_sample_fliter@min 007C                    sample_in_soc_adc_ch@i 0073  
               _sample_diff_pr_chip_slow 4828                      ??_event_process_rtc 0021  
           __end_of_ui_disp_clear_num_dp 77C4                   ?___enter_menu_set_pose 0001  
                        _key_process_set 8078                    _ads1115_init_all_chip 7E28  
               ___x_sample_fliter@maxLoc 0078                  in_adc_start_and_read@ch 0066  
               ___x_sample_fliter@minLoc 0079                       __size_of_lcd_bl_on 000A  
                     _rtcc_reg_wr_enable 8204               calib_data_set_default_pr@i 006E  
             calib_data_set_default_pr@j 006F                       __size_of_iic_start 003E  
                      crc_append@message 006C                   ??_lcd_disp_unit_1st_m3 0020  
                   __size_of_key_polling 005C                     __size_of_key_process 009C  
            ??_key_shift_loc_fixed_point 0020                        lcd_disp_logo@show 0020  
                     __size_of_m_mem_cpy 0044                   ??_event_process_ticker 0021  
                    ___x_sample_fifo@buf 006E                        lcd_show_string@t8 0075  
                    ___x_sample_fifo@len 0072                      ___x_sample_fifo@ret 0079  
                             __pbssBANK0 00FE                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                               __pbssBANK5 0500  
     __size_of_key_adj_value_fixed_point 00F8                               _defalutRtc 01EC  
                    ?_rtcc_reg_wr_enable 0001                 __size_of_sys_ticker_init 0010  
                      _pdiff_prEepromObj 0186                               _diffSampCh 0030  
                    ___x_sample_fliter@i 0082                __end_of_event_process_rtc 61F8  
                  calib_data_init_pr@t16 0077                      m_flash_write@tmpBuf 007F  
                        lcd_disp_level@i 0073                    calib_data_init_pr@buf 0079  
                  calib_data_init_pr@ret 0076              __end_of_at24c02_read_n_byte 4698  
                      ___x_sample_fifo@i 007D                        ___x_sample_fifo@x 0070  
                         ?_event_process 0001                         ??_m_flash_unlock 0020  
            __size_of_lcd_disp_chr_loc_0 0090              __size_of_lcd_disp_chr_loc_1 0090  
            __size_of_lcd_disp_chr_loc_2 0090              __size_of_lcd_disp_chr_loc_3 0090  
            __size_of_lcd_disp_chr_loc_4 0090              __size_of_lcd_disp_chr_loc_5 0090  
            __size_of_lcd_disp_chr_loc_6 0090              __size_of_lcd_disp_chr_loc_7 0090  
                      ___x_sample_fliter 3370                         ?___x_sample_fifo 006E  
                   _key_process_set_long 7EFA           ___enter_menu_set_base_zero@fps 007D  
                                ?___flge 00B8                            _x_Pemperature 014A  
          __size_of_ui_disp_menu_home_00 009A            __size_of_ui_disp_menu_home_01 009A  
          __size_of_ui_disp_menu_home_02 009A                                  ?___lmul 006E  
                                POSTINC0 000FEE                       ?___x_sample_fliter 006E  
                                ?___wmul 0062             __size_of_ui_disp_start_cs600 0098  
                              ?___exp_10 0060                           ___lmul@product 0076  
                 ?i2_sys_ticker_irq_hook 0001                               _crc_append 7416  
                   ??_rtcc_reg_wr_enable 0020                    ?_sample_in_soc_adc_ch 0001  
                                _ALRMRPT 000F5A                     _at24c02_write_n_byte 570E  
          __size_of_ui_disp_menu_psw_adj 002A                      ??___x_sample_fliter 0072  
                             _crc_verify 6D54                                  i1l10505 007E  
                          ?_ads1115_init 0060                                  i2l10479 5D46  
                        _data_sys_cal_v1 37F0                          _data_sys_cal_v2 4C66  
                             _lcdTwinkle 0036                                ?___xxtofl 0060  
                _calib_data_init_diff_pr 518C                               _lcd_config 804A  
                      cal_diff_p_to_h@f1 00CA                        cal_diff_p_to_h@f2 00C6  
                              ?_delay_ms 0064                                ?_delay_us 0060  
                                _TBLPTRH 000FF7                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                  _ads1115_read_conversion 7AA6  
            __size_of_lcd_disp_level_bar 04D2             __size_of_rtcc_reg_wr_disable 000C  
                                _RTCVALH 000F5D                                  _RTCVALL 000F5C  
                      __end_of_cal_press 6F58                     ___int32_2_mflot32@mf 0079  
                         m_int8_2_hex@t8 0020                                ?_lcd_init 0001  
            __size_of_lcd_show_string_l0 006E              __size_of_lcd_show_string_l1 0042  
                              ?_iic_stop 0001                        ??_ads1115_set_mux 0020  
                lcd_disp_unit_1st_m@show 0020          __size_of_event_process_time_out 000E  
                        _cal_diff_p_to_h 5B14                        __end_of_auchCRCHi EF8B  
                      __end_of_auchCRCLo EE8B               cal_pt100_temperature_in@f1 00CA  
             cal_pt100_temperature_in@f2 00C6                      _sample_pr_chip_comm 4328  
             cal_pt100_temperature_ex@f1 00CF               cal_pt100_temperature_ex@f2 00CB  
                 sample_pr_chip_comm@t16 0083                __size_of_key_process_down 003C  
                      ??_lcd_disp_unit_t 0020                   sample_pr_chip_comm@ret 0082  
                          ?_ui_disp_menu 0001        __end_of_key_adj_value_fixed_point 5B14  
               _cal_pt100_temperature_in 30D4                 _cal_pt100_temperature_ex 2B56  
              __end_of___x_sample_fliter 35CE                   ?_handler_interrupt_low 0001  
            at24c02_read_n_byte@pAt24c02 0064                        _ui_disp_xfloat_pt 61F8  
                                __Hparam 0000                        cal_diff_press@xin 02DC  
                                __Lparam 0000                   m_interp1_float_fast@in 00C6  
                  ?_key_process_set_long 0001                           lcd_show_dp@loc 0071  
                      __end_of_lcd_bl_on 8226                                ?_soc_init 0001  
                  __size_of_lcd_disp_all 0030                       ?_ui_disp_xfloat_pt 0076  
              _cal_diff_hight_level$4414 00C8                _cal_diff_hight_level$4415 00CC  
                              ?_rtc_init 0001                _key_shift_loc_fixed_point 7EC6  
                                ___aldiv 53D6                          __size_of___flge 0190  
                      __end_of_iic_start 7C30                                  ___fladd 1280  
                      ??_m_int16_2_str_4 0020                       data_sys_cal_v1@stp 00C2  
                     data_sys_cal_v2@stp 00C2                                  ___fldiv 2490  
                                ___awdiv 5F14                                  ___flneg 7D18  
                        __size_of___lmul 0076                     _ex_pt100SampleUpdate 018A  
                                ___awmod 63FA                                  ___flmul 1728  
                                ___fltol 5602                        m_flash_erase@addr 0060  
                                ___lldiv 5FD2                          __size_of___wmul 0036  
                __end_of_key_process_set 80A2                                  ___lwdiv 6FD4  
                                ___lwmod 747A                        __end_of_m_mem_cpy 7B30  
                              _LCDDATA10 000F70                                _LCDDATA11 000F71  
                              _LCDDATA12 000F72                                _LCDDATA20 000F7A  
                              _LCDDATA13 000F73                                _LCDDATA21 000F7B  
                              _LCDDATA14 000F74                                _LCDDATA22 000F7C  
                              _LCDDATA15 000F75                                _LCDDATA23 000F7D  
                              _LCDDATA16 000F76                                _LCDDATA17 000F77  
                              _LCDDATA18 000F78                                _LCDDATA19 000F79  
                        __CFG_STVREN$OFF 000000                               ??___exp_10 0020  
                   ?_sample_pr_chip_comm 007E                                  _pcf8574 0118  
                                __pcinit 62AA                     m_flash_unlock@oldGIE 0020  
                  __size_of_iic_send_ack 004A                 at24c02_write_n_byte@addr 0064  
                                __ramtop 1000                    ?_at24c02_write_n_byte 0062  
                                __ptext0 7CA8                                  __ptext1 67A4  
                                __ptext2 7D50                                  __ptext3 7710  
                                __ptext4 819E                                  __ptext5 81AE  
                                __ptext6 7BB4                                  __ptext7 608E  
                                __ptext8 8204                                  __ptext9 8210  
                    ??_ui_disp_xfloat_pt 0021                                  _crc_sum 649C  
                 ?_ads1115_init_all_chip 0001                           ??_ads1115_init 0020  
                    _sys_ticker_irq_hook 79C0                      lcd_disp_unit_t@show 0020  
                      ___int32_2_mflot32 5816                 __size_of_lcd_set_com_seg 00C8  
                              _T1CONbits 000FCD                      lcd_set_com_seg@bits 006F  
                             ??___xxtofl 0064                     __end_of_at24c02_init 6FD4  
                    lcd_set_com_seg@show 0069                         ___awmod@dividend 0060  
                                _rtHight 0021                       ?___int32_2_mflot32 006D  
                       ___aldiv@dividend 0060                    __size_of_m_int8_2_hex 005A  
                              _LCDPSbits 000FAA                                  _rtLevel 0038  
                             ??_delay_ms 0020                               ??_delay_us 0020  
                  __size_of_lcd_show_chr 0098                     m_interp1_cal_p_t@xin 007C  
                   m_interp1_cal_p_v@xin 007C                    __end_of_lcd_disp_logo 7F8A  
                                _rtc_set 608E                    __size_of_m_flash_read 007E  
          key_adj_value_fixed_point@dloc 0071         ads1115_start_conversion@pAds1115 0067  
      __size_of_ads1115_start_conversion 002A         __size_of_cal_additional_pressute 01FC  
                             ??_lcd_init 0020                ?_ads1115_start_conversion 0067  
                         __pintcode_body 5CCC                               ??_iic_stop 0020  
                           _flashTestbuf F3AB                     end_of_initialization 6348  
                        cal_press@tabrow 0098                      ??___int32_2_mflot32 0071  
                         m_flash_write@i 0079                           m_flash_write@j 007E  
                __size_of_key_process_up 0034                      ui_disp_xfloat_pt@t8 0083  
                         ??_ui_disp_menu 0021                             _lcd_disp_all 7F8A  
                          __Lmediumconst ED8A                                  int_func 5CCC  
                   ?_sys_ticker_irq_hook 0001                __end_of_ui_disp_xfloat_pt 62AA  
                        ??_event_process 0021               __size_of_event_process_rtc 00B2  
                 __size_of_data_init_all 000E                     _ui_disp_clear_num_dp 776A  
        calib_data_set_default_diff_pr@i 006F          calib_data_set_default_diff_pr@j 006E  
                        ___lldiv@divisor 0064                    __end_of_iic_send_byte 7276  
                        ___lldiv@counter 006C                 __end_of_ads1115_read_reg 4328  
           _cal_diff_hight_to_vol_v$4416 00EA                             _iic_send_ack 7A5C  
                             _ticker_dly 7D50                               _rtPressure 0152  
                             ??_soc_init 0020               __end_of_calib_data_init_pr 518C  
                      ??_sys_ticker_init 0020                         ___aldiv@quotient 006A  
         key_adj_value_fixed_point@value 006E                               ??_rtc_init 0020  
            __end_of_lcd_disp_unit_1st_m 7972                                  postdec1 000FE5  
                                postdec2 000FDD                    __end_of_iic_waite_ack 7658  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                        _lcd_disp_dp_loc_0 801A  
                      _lcd_disp_dp_loc_1 7FEA                        _lcd_disp_dp_loc_2 7FBA  
                m_interp1_cal_p_v@tabrow 007A                   _event_process_time_out 81CC  
                __end_of_data_sys_cal_v1 39F4                  __end_of_data_sys_cal_v2 4DCA  
                  ??_sample_pr_chip_comm 0080                   ??_sample_in_soc_adc_ch 0069  
                      _lcd_disp_get_code 759C                 __size_of_lcd_show_string 006E  
                           _m_int8_2_hex 7710                __end_of___int32_2_mflot32 591C  
                            ?_crc_append 006C               ?_calib_data_set_default_pr 0001  
                           _lcd_show_chr 683C                         _defultSystemData F315  
               __end_of_lcd_disp_refresh 753E                       ?_lcd_disp_dp_loc_0 0001  
                     ?_lcd_disp_dp_loc_1 0001                       ?_lcd_disp_dp_loc_2 0001  
              ??_calib_data_init_diff_pr 0021                             _m_flash_read 6E5E  
                     ?_lcd_disp_get_code 0001                              ?_crc_verify 006C  
                    i2_rtc_alrm_irq_hook 822C                ??_ads1115_read_conversion 006C  
                      _m_interp1_cal_p_t 1BCE                        _m_interp1_cal_p_v 086E  
                            ___fladd@grs 00B7                   __size_of_data_sys_init 0168  
                __size_of_cal_diff_press 0112                               crc_sum@len 0066  
                            ?_lcd_config 0001                            ___xxtofl@sign 0068  
                __end_of_cal_diff_p_to_h 5C04           __size_of_in_adc_start_and_read 006A  
          __end_of_in_adc_start_and_read 72E0                       ?_m_interp1_cal_p_t 007A  
                     ?_m_interp1_cal_p_v 007A                      ??_lcd_disp_dp_loc_0 0020  
                    ??_lcd_disp_dp_loc_1 0020                      ??_lcd_disp_dp_loc_2 0020  
                  __end_of_m_flash_erase 781E                     lcd_show_string_l0@t8 0075  
                   lcd_show_string_l1@t8 0075                      ??_lcd_disp_get_code 0020  
                            ___fldiv@grs 009A                              ___fldiv@rem 0094  
            iic_received_byte_if_ack@ack 0062                ads1115_write_reg@pAds1115 0062  
                   _data_sys_cal_v1$4410 00CE                     _data_sys_cal_v1$4408 00C6  
                   _data_sys_cal_v1$4409 00CA                     _data_sys_cal_v2$4411 00C6  
                   _data_sys_cal_v2$4412 00CA              iic_received_byte_if_ack@ret 0063  
     __size_of_key_process_set_down_long 00BE                    __end_of_m_flash_write 505E  
                    ??_m_interp1_cal_p_t 007F                      ??_m_interp1_cal_p_v 0080  
                            ___flmul@grs 007C                          iic_send_ack@ack 0020  
                  ??_sys_ticker_irq_hook 000F                        _lcd_disp_unit_mpa 73B0  
               __size_of___x_arrange_str 005E               __size_of___x_sample_fliter 025E  
                   ?i2_rtc_alrm_irq_hook 0001                    ?_ui_disp_clear_num_dp 0001  
                      _ads1115_write_reg 591C                       ?_lcd_disp_unit_mpa 0001  
                 ??_key_process_set_long 0020               ??_sample_diff_pr_chip_fast 0021  
                     ?_ads1115_write_reg 0062               ??___enter_menu_set_density 0060  
             ??_sample_diff_pr_chip_slow 0021                __end_of_lcd_disp_dp_loc_0 804A  
              __end_of_lcd_disp_dp_loc_1 801A                __end_of_lcd_disp_dp_loc_2 7FEA  
                     iic_received_byte@i 0061         __size_of_cal_diff_hight_to_vol_h 02AE  
       __size_of_cal_diff_hight_to_vol_v 0792                              _adc_inPt100 0182  
              __end_of_lcd_disp_get_code 75FA                            ??_lcd_show_dp 0021  
                            _adc_exPt100 017E                              _adjLocation 003B  
                  _sample_diff_pr_fliter 6DE0                            ??_in_adc_init 0020  
                    ??_lcd_disp_unit_mpa 0020                           __end_of___flge 4828  
                       ?_key_process_set 0001                               m_mem_cpy@d 0060  
                             m_mem_cpy@s 0062                           __end_of___lmul 70C2  
                 ??_at24c02_write_n_byte 0021                  ??___enter_menu_set_pose 0020  
                         __end_of___wmul 7E28            __size_of_m_interp1_float_fast 0428  
                          __pidataCOMRAM 8226                      ??_ads1115_write_reg 0021  
              __end_of_m_interp1_cal_p_t 2068                __end_of_m_interp1_cal_p_v 0DAE  
                  at24c02_write_n_byte@i 0069                             cal_press@ret 0097  
                           cal_press@xin 009A                            _data_init_all 81E8  
                     lcd_disp_get_code@i 0062                        crc_verify@message 006C  
                    start_initialization 62AA                   ui_disp_start_cs600@buf 0076  
                 ui_disp_start_cs600@dly 007C                 ?_handler_interrupt_hight 0001  
 __end_of_calib_data_set_default_diff_pr 3DDA  __size_of_calib_data_set_default_diff_pr 01EA  
         _calib_data_set_default_diff_pr 3BF0                          _LCDDigitalTable EFB4  
                      ??_lcd_set_com_seg 006A              ?___enter_menu_set_base_zero 0001  
                 ___x_sample_fliter@loop 0071                    __end_of_m_mem_cpy_len 79C0  
              __end_of_lcd_disp_unit_mpa 7416                   lcd_disp_chr_loc_0@code 0020  
                      m_flash_write@addr 006E                   lcd_disp_chr_loc_1@code 0020  
                 lcd_disp_chr_loc_2@code 0020        __end_of_key_process_set_down_long 5F14  
                 lcd_disp_chr_loc_3@code 0020                   lcd_disp_chr_loc_4@code 0020  
                    _ui_disp_start_cs600 67A4                   lcd_disp_chr_loc_5@code 0020  
                 lcd_disp_chr_loc_6@code 0020                   lcd_disp_chr_loc_7@code 0020  
                       _key_process_down 7C30                __end_of_ads1115_write_reg 5A1C  
        __end_of_calib_data_init_diff_pr 52BA            _cal_pt100_temperature_in$4417 00C2  
          _cal_pt100_temperature_ex$4418 00C7                       ads1115_set_mux@mux 0062  
                    __size_of_crc_append 0064                    ??i2_rtc_alrm_irq_hook 0001  
             __size_of_ui_disp_xfloat_pt 00B2                 in_adc_start_and_read@ret 0067  
                   __end_of_ads1115_init 63FA                            _data_sys_init 4AFE  
                lcd_disp_level_bar@__bar 0070                      __size_of_crc_verify 008C  
                       lcd_show_chr@code 0072                 ads1115_read_reg@pAds1115 0064  
                            ?_ticker_dly 0060                      __size_of_lcd_config 002E  
                       data_sys_cal_v1@f 00D6                         data_sys_cal_v2@d 00D2  
                       data_sys_cal_v1@h 00D2                         data_sys_cal_v2@f 00CE  
                       data_sys_cal_v1@r 00DA                     key_waite_release@key 006A  
                    _rtcc_reg_wr_disable 8210                                 ??___flge 00C0  
                ??i2_sys_ticker_irq_hook 0001                                 ??___lmul 0020  
                               ??___wmul 0021                       m_interp1_cal_p_t@i 0095  
                     m_interp1_cal_p_v@i 0096                       m_interp1_cal_p_t@x 0091  
                     m_interp1_cal_p_t@y 008D                       m_interp1_cal_p_v@x 0092  
                     m_interp1_cal_p_v@y 008E                              __pdataBANK1 01E6  
                       __CFG_LPT1OSC$OFF 000000                     ?_ui_disp_start_cs600 0001  
                       ?_data_sys_cal_v1 00C2                         ?_data_sys_cal_v2 00C2  
             __size_of___int32_2_mflot32 0106                    __size_of_at24c02_init 007C  
                __size_of_lcd_disp_level 0058                    _ui_disp_adj_xfixed_pt 5D94  
                   __end_of_ui_disp_menu 7DF2                           ?_data_init_all 0001  
                        _ads1115_set_mux 8140            __size_of_cal_diff_hight_level 0306  
               _iic_received_byte_if_ack 8164                                ___fladd@a 00A8  
                              ___fladd@b 00A4                        __size_of___exp_10 005C  
                            _ALRMCFGbits 000F5B                      __end_of_lcd_show_dp 720A  
                     lcd_show_string@str 0073                                ___fldiv@a 008B  
                              ___fldiv@b 0087                      __end_of_in_adc_init 8140  
     __size_of_key_shift_loc_fixed_point 0034                            ??_key_polling 0020  
                       _sampBufDiffPr_S1 0170                                _pAdjValue 0176  
                          ??_key_process 0021                                ___flmul@a 0072  
                              ___flmul@b 006E                              __pbssCOMRAM 0021  
                       data_sys_init@buf 00E1                          _lcd_disp_unit_t 78CA  
                      ??_lcd_show_string 0021                         data_sys_init@ret 00DE  
                       data_sys_init@stp 00DF                            __pcstackBANK0 0060  
                          __pcstackBANK1 01F3                            __pcstackBANK2 02C2  
                       ?_cal_diff_p_to_h 00C2                                _adc_iPrEx 0162  
           __end_of_ui_disp_menu_home_00 67A4             __end_of_ui_disp_menu_home_01 670A  
           __end_of_ui_disp_menu_home_02 6670                     ?_rtcc_reg_wr_disable 0001  
                _cal_additional_pressute 39F4                             _stRTCCFGbits 000F5F  
             ??_cal_pt100_temperature_in 0020               ??_cal_pt100_temperature_ex 00C2  
               key_waite_release@timeout 0068                        __size_of___xxtofl 01CE  
                      __size_of_delay_ms 0026                        __size_of_delay_us 0038  
                    __CFG_CCP2MX$DEFAULT 000000                           _key_process_up 7E92  
          __size_of_lcd_disp_unit_1st_m3 0066                  ??_handler_interrupt_low 000F  
           __end_of_ui_disp_menu_psw_adj 80CC                      ___x_arrange_str@len 0062  
                        _m_int16_2_str_4 4DCA                      ___x_arrange_str@str 0060  
                      __size_of_lcd_init 000E            __size_of_event_process_ticker 000E  
                              _cal_press 6EDC                   ??_ui_disp_clear_num_dp 0021  
                      __size_of_iic_stop 003C               __end_of_lcd_disp_chr_loc_0 6D54  
             __end_of_lcd_disp_chr_loc_1 6CC4               __end_of_lcd_disp_chr_loc_2 6C34  
             __end_of_lcd_disp_chr_loc_3 6BA4               __end_of_lcd_disp_chr_loc_4 6B14  
             __end_of_lcd_disp_chr_loc_5 6A84               __end_of_lcd_disp_chr_loc_6 69F4  
             __end_of_lcd_disp_chr_loc_7 6964                           ?_data_sys_init 0001  
                              _auchCRCHi EE8B                                _auchCRCLo ED8B  
                      ___x_arrange_str@i 0020                  ads1115_set_mux@pAds1115 0060  
                           _at24c02_init 6F58                         ___lwdiv@dividend 0062  
          ads1115_read_conversion@result 006D                   ?_sample_diff_pr_fliter 0083  
           ___enter_menu_set_density@fps 0062               __size_of_lcd_disp_dp_loc_0 0030  
             __size_of_lcd_disp_dp_loc_1 0030               __size_of_lcd_disp_dp_loc_2 0030  
                              __pintcode 0008               __size_of_lcd_disp_get_code 005E  
                          __pmediumconst ED8A                        ??___x_arrange_str 0020  
                               ?___aldiv 0060                                 ?___fladd 00A4  
                               ?___fldiv 0087                                 ?___awdiv 0060  
                              __ptext100 5B14                                __ptext101 00DC  
                              __ptext110 4F28                                __ptext102 2E26  
                               ?___flneg 00A0                                __ptext111 6E5E  
                              __ptext103 2068                                __ptext120 505E  
                              __ptext112 77C4                                __ptext104 4698  
                              __ptext121 3FA8                                __ptext113 8184  
                              __ptext105 39F4                                __ptext130 44E0  
                              __ptext122 518C                                __ptext114 4C66  
                              __ptext106 7D18                                __ptext131 7BF2  
                              __ptext123 6D54                                __ptext115 37F0  
                              __ptext107 1280                                __ptext140 6356  
                              __ptext132 720A                                __ptext124 7972  
                              __ptext116 3DDA                                __ptext108 81E8  
                              __ptext133 75FA                                __ptext125 7416  
                              __ptext117 5602                                __ptext109 4AFE  
                              __ptext142 79C0                                __ptext134 7C6C  
                              __ptext126 649C                                __ptext118 1728  
                              __ptext143 822A                                __ptext135 8164  
                              __ptext127 3BF0                                __ptext119 2490  
                              __ptext136 7A5C                                __ptext128 7DF2  
                              __ptext145 7A0E                                __ptext137 72E0  
                              __ptext129 570E                                __ptext146 822C  
                              __ptext138 6F58                                __ptext147 0000  
                              __ptext139 7E28                                 ?___awmod 0060  
                               ?___flmul 006E                                 ?___fltol 00B8  
                               ?___lldiv 0060                  ___mflot32_2_int32@F7646 013E  
                ??_ads1115_init_all_chip 0020                    ??_ui_disp_start_cs600 0021  
                               ?___lwdiv 0062                                 ?___lwmod 0069  
                              _fpSysData 003C                        __size_of_soc_init 0010  
           __size_of_at24c02_read_n_byte 01B8                                _lcd_bl_on 821C  
                            __pintcodelo 0018                        __size_of_rtc_init 003E  
       __end_of_ads1115_start_conversion 80F6                                _dlyTicker 0172  
             __size_of_m_interp1_cal_p_t 049A               __size_of_m_interp1_cal_p_v 0540  
            __size_of_rtcc_reg_wr_enable 000C                                _iic_start 7BF2  
                               ?_crc_sum 0060                      ___int32_2_mflot32@x 006D  
               __size_of___x_sample_fifo 016A                  __end_of_LCDDigitalTable EFDC  
              cal_diff_hight_to_vol_h@f1 00F6                cal_diff_hight_to_vol_h@f2 00EE  
              cal_diff_hight_to_vol_h@v1 00F2                cal_diff_hight_to_vol_h@v2 00EA  
                        at24c02_init@slv 0062                                _m_mem_cpy 7AEC  
              cal_diff_hight_to_vol_v@f1 00FA                cal_diff_hight_to_vol_v@v1 00EE  
              cal_diff_hight_to_vol_v@v2 00F2             cal_additional_pressute@index 00CD  
             __end_of_lcd_disp_level_bar 1280                           _cal_diff_press 54F0  
                  ??_rtcc_reg_wr_disable 0020               __end_of_lcd_show_string_l0 7130  
             __end_of_lcd_show_string_l1 7BB4        __end_of_key_shift_loc_fixed_point 7EFA  
                            _PADCFG1bits 000F54                         m_flash_erase@t32 0064  
                               ?_rtc_set 0060                    lcd_disp_unit_mpa@show 0020  
                 __end_of_key_process_up 7EC6                      __size_of_ticker_dly 0036  
                       ___lwdiv@quotient 0067                     ads1115_init@pAds1115 0060  
                               _LCDDATA0 000FBB                                 _LCDDATA1 000FBC  
                               _LCDDATA2 000FBD                                 _LCDDATA3 000FBE  
                               _LCDDATA4 000FBF                                 _LCDDATA5 000F6B  
                               _LCDDATA6 000F6C                                 _LCDDATA7 000F6D  
                               _LCDDATA8 000F6E                                 _LCDDATA9 000F6F  
             __size_of_lcd_disp_unit_mpa 0066                    lcd_set_com_seg@offset 006E  
                    __end_of_key_polling 76B4                      __end_of_key_process 65D6  
                     lcd_set_com_seg@com 006D                          _sys_ticker_init 81AE  
                     lcd_set_com_seg@seg 0068                                _sampBufPr 01C6  
                        ___aldiv@divisor 0064               __size_of_ads1115_write_reg 0100  
               __end_of_defultSystemData F3AB             key_adj_value_fixed_point@t16 0073  
                             ?_cal_press 0001             key_shift_loc_fixed_point@max 0063  
           key_shift_loc_fixed_point@loc 0060             key_shift_loc_fixed_point@min 0062  
                 ui_disp_menu_home_00@t8 00D4                         m_flash_read@addr 0060  
                 ui_disp_menu_home_01@t8 00D4                   ui_disp_menu_home_02@t8 00D4  
                        ___aldiv@counter 0068                   ui_disp_menu_home_00@mf 00D5  
                 ui_disp_menu_home_01@mf 00D5                   ui_disp_menu_home_02@mf 00D5  
           key_adj_value_fixed_point@loc 0070                           ___wmul@product 0066  
                              delay_us@i 0062                        _iic_received_byte 72E0  
                         m_mem_cpy_len@d 0060                           m_mem_cpy_len@s 0062  
                               _IPR1bits 000F9F                                 _PIE1bits 000F9D  
                               _IPR3bits 000FA5                                 _PIE3bits 000FA3  
             ?_key_adj_value_fixed_point 006E         __end_of_sample_diff_pr_chip_fast 53D6  
       __end_of___enter_menu_set_density 7DBC         __end_of_sample_diff_pr_chip_slow 4994  
                            _dlyTickerEn 0033                  _cal_diff_hight_to_vol_h 2E26  
                               i1u820_20 79F4                                 i1u821_20 7A08  
                _cal_diff_hight_to_vol_v 00DC                       ?_iic_received_byte 0001  
                               i1u822_20 7A0A                                 _PIR1bits 000F9E  
                ?_event_process_time_out 0001                                 _PIR3bits 000FA4  
                     cal_diff_p_to_h@xin 00C2                        ?_ads1115_read_reg 0064  
                               i2u824_40 7A42                                 i2u825_40 7A56  
                               i2u826_40 7A58                         crc_sum@usDataLen 0062  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
               lcd_disp_unit_1st_m3@show 0020                  __end_of_ads1115_set_mux 8164  
                   _in_pt100SampleUpdate 018C                              _lcd_show_dp 719E  
                     ??_ads1115_read_reg 0067                              _in_adc_init 811C  
                  ___int32_2_mflot32@t32 0075                   ?_ui_disp_adj_xfixed_pt 0076  
               sample_diff_pr_fliter@xin 0083                          ??_data_init_all 0021  
                           ??_crc_append 0070                  __end_of_lcd_disp_unit_t 791E  
                             ?_lcd_bl_on 0001                      ??_iic_received_byte 0020  
                 ui_disp_adj_xfixed_pt@x 0078      __size_of___enter_menu_set_base_zero 0054  
            ??_calib_data_set_default_pr 0068                   __end_of_cal_diff_press 5602  
                        m_int8_2_hex@str 0060                             _rtExPressure 012B  
                             ?_iic_start 0001                               _ADCON0bits 000FC2  
                             _ADCON2bits 000FC0                        ___wmul@multiplier 0062  
                          _pAds1115PrObj 0029                        ?_lcd_disp_refresh 0001  
                __size_of_m_flash_unlock 001A                             ??_crc_verify 0070  
                             ?_m_mem_cpy 0060                ??_cal_additional_pressute 00C2  
                       m_int16_2_str_4@x 006A                               rtc_set@rtc 0060  
                             rtc_set@stp 0062                             ??_lcd_config 0020  
                     _calib_data_init_pr 505E                       ??_lcd_disp_refresh 0020  
                          _fastSampTimer 0166                  __end_of_m_int16_2_str_4 4F28  
                        ?_key_process_up 0001                                 _HexTable EFDC  
        ads1115_read_conversion@pAds1115 006A                        ___lmul@multiplier 006E  
                            _INTCON2bits 000FF1                         crc_verify@crccal 0072  
                              copy_data0 62BE                                copy_data1 62DE  
                  __size_of_ads1115_init 00A4                      ?_calib_data_init_pr 0001  
                at24c02_read_n_byte@addr 0066                          ??_data_sys_init 0021  
                  ui_disp_start_cs600@t8 007D                __end_of_iic_received_byte 734A  
                       m_flash_write@t16 0081                       __end_of_crc_append 747A  
                       m_flash_write@buf 0072                         m_flash_write@len 0074  
                      _rtc_alrm_irq_hook 822A                               _EECON1bits 000FA6  
         __end_of_event_process_time_out 81DA                       cal_diff_press@tmpx 02C4  
                  __end_of_event_process 7E92                                 __Hrparam 0000  
            __end_of_sample_pr_chip_comm 44E0                  m_interp1_float_fast@len 00CA  
                  ui_disp_xfloat_pt@line 0078                  m_interp1_float_fast@tab 00C4  
                     __end_of_crc_verify 6DE0                          lcd_show_dp@show 0070  
                     ?_rtc_alrm_irq_hook 0001                          lcd_show_chr@chr 0070  
                        lcd_show_chr@loc 0071                      key_waite_release@t8 0020  
                 lcd_disp_level_bar@show 0020                                 __Lrparam 0000  
                         _rtDiffPressure 0025                          _sampBufPt100ExA 01D6  
                        _sampBufPt100ExB 01CE                          _sampBufBatInSoc 016A  
                     __end_of_lcd_config 8078                     _ui_disp_menu_home_00 670A  
                   _ui_disp_menu_home_01 6670                     _ui_disp_menu_home_02 65D6  
                  __size_of_ui_disp_menu 0036                     event_process_rtc@ret 01F3  
                 __size_of_lcd_disp_logo 0030                     ??_calib_data_init_pr 0021  
                       __size_of___aldiv 011A                         __size_of___fladd 04A8  
                       __size_of___fldiv 03C0                         __size_of___awdiv 00BE  
                         _lcd_disp_level 781E                         __size_of___flneg 0038  
                       __size_of___awmod 00A2                         __size_of___flmul 04A6  
                       __size_of___fltol 010C                         __size_of___lldiv 00BC  
                               ___exp_10 76B4                         __size_of___lwdiv 0078  
                    ??_rtc_alrm_irq_hook 000F                         __size_of___lwmod 0062  
               __end_of_key_process_down 7C6C                                 _adc_iRef 017A  
                        _lcd_set_com_seg 5C04                                 _adc_ibat 017C  
                           _ads1115Chip0 02B2                             _ads1115Chip1 02A2  
                        ?_cal_diff_press 0001                                 _adjValue 0146  
         __size_of___enter_menu_set_pose 0030            __size_of_sample_in_soc_adc_ch 0222  
                   _ui_disp_menu_psw_adj 80A2                       _diffPrSampleUpdate 018D  
          __end_of___enter_menu_set_pose 7F5A             __size_of_lcd_disp_unit_1st_m 0054  
                               _calibCol 018E                         __size_of_crc_sum 009E  
                               _calibRow 018F                             _ads1115_init 6356  
                         key_process@key 00DB                                 ___xxtofl 3DDA  
               _ads1115_start_conversion 80CC                              _key_polling 7658  
                __end_of_sys_ticker_init 81BE                              _key_process 653A  
                          crc_append@crc 0072         __end_of_cal_pt100_temperature_in 3370  
       __end_of_cal_pt100_temperature_ex 2E26                                 _delay_ms 80F6  
                               _delay_us 7CE0                   __size_of_iic_send_byte 006C  
                               _glTicker 013A                          ___lwdiv@divisor 0064  
                               _glbEvent 0035                          _sampBufRefInSoc 0168  
                        _rtTemperatureIn 0156                          ___lwdiv@counter 0066  
            __end_of_sys_ticker_irq_hook 7A0E                                 __ptext10 81BE  
                               __ptext11 804A                                 __ptext20 6FD4  
                               __ptext12 821C                                 __ptext21 76B4  
                               __ptext13 7E5E                                 __ptext30 81CC  
                               __ptext22 7EFA                                 __ptext14 653A  
                               __ptext31 81DA                                 __ptext23 5E56  
                               __ptext15 7B30                                 __ptext40 7F8A  
                               __ptext32 52BA                                 __ptext24 7F2A  
                               __ptext16 7658                                 __ptext41 65D6  
                               __ptext33 6146                                 __ptext25 7D86  
                               __ptext17 7E92                                 __ptext50 70C2  
                               __ptext42 78CA                                 __ptext34 7DBC  
                               __ptext26 7876                                 __ptext18 5A1C  
                               __ptext51 776A                                 __ptext43 6670  
                               __ptext35 80A2                                 __ptext27 8078  
                               __ptext19 747A                                 __ptext60 6BA4  
                               __ptext52 7130                                 __ptext44 734A  
                               __ptext36 5D94                                 __ptext28 7C30  
                               __ptext61 6C34                                 __ptext53 683C  
                               __ptext45 670A                                 __ptext37 7AEC  
                               __ptext29 7EC6                                 __ptext70 781E  
                               __ptext62 6CC4                                 __ptext54 759C  
                               __ptext46 61F8                                 __ptext38 753E  
                               __ptext71 0DAE                                 __ptext63 719E  
                               __ptext55 68D4                                 __ptext47 4DCA  
                               __ptext39 7F5A                                 __ptext80 811C  
                               __ptext72 5C04                                 __ptext64 7FBA  
                               __ptext56 6964                                 __ptext48 63FA  
                               __ptext81 4828                                 __ptext73 5F14  
                               __ptext65 7FEA                                 __ptext57 69F4  
                               __ptext49 7B72                                 __ptext90 416C  
                               __ptext82 6DE0                                 __ptext74 2850  
                               __ptext66 801A                                 __ptext58 6A84  
                               __ptext91 4994                                 __ptext83 3370  
                               __ptext75 5816                                 __ptext67 73B0  
                               __ptext59 6B14                                 __ptext92 30D4  
                               __ptext84 80F6                                 __ptext76 5FD2  
                               __ptext68 791E                                 __ptext93 2B56  
                               __ptext85 7CE0                                 __ptext77 4328  
                               __ptext69 74DC                                 __ptext94 6EDC  
                               __ptext86 80CC                                 __ptext78 35CE  
                               __ptext95 54F0                                 __ptext87 591C  
                               __ptext79 7276                                 __ptext96 086E  
                               __ptext88 8140                                 __ptext97 1BCE  
                               __ptext89 7AA6                                 __ptext98 704C  
                               __ptext99 53D6                        ??___x_sample_fifo 0073  
                       _inSocSampleTimer 002D                         __size_of_rtc_set 00B8  
                               _lcd_init 81BE                    _in_adc_start_and_read 7276  
                               _iic_stop 7C6C             __end_of_m_interp1_float_fast 2490  
                 __size_of_iic_waite_ack 005E                _calib_data_set_default_pr 3FA8  
                        cal_diff_press@i 02DE                                 _keyValue 00FE  
              __end_of_rtc_alrm_irq_hook 822C                              ??_cal_press 0020  
                          __size_of_main 0038                ??_cal_diff_hight_to_vol_h 0020  
                           _ui_disp_menu 7DBC                ??_cal_diff_hight_to_vol_v 0020  
                        crc_sum@uchCRCHi 006A                          crc_sum@uchCRCLo 006B  
        __end_of_cal_additional_pressute 3BF0                          m_flash_read@t32 006A  
                               _passWord 0039                          m_flash_read@buf 0064  
                        m_flash_read@len 0066         __size_of_handler_interrupt_hight 5D8C  
                           ??_ticker_dly 0020          ?_calib_data_set_default_diff_pr 0001  
       ??_calib_data_set_default_diff_pr 0068                                 _rtWeight 015E  
          __size_of_key_process_set_long 0030                                 _soc_init 819E  
                           ticker_dly@ms 0060                    ?_ui_disp_menu_home_00 0001  
                  ?_ui_disp_menu_home_01 0001                    ?_ui_disp_menu_home_02 0001  
             ??_iic_received_byte_if_ack 0021                    m_interp1_cal_p_t@tmpx 007A  
                               _rtVolume 015A                   __end_of_lcd_disp_level 7876  
                  m_interp1_cal_p_v@xout 007E                                 _rtc_init 7BB4  
                 ads1115_write_reg@value 0065                   __size_of_m_flash_erase 005A  
                               int$flags 0040                 ?_calib_data_init_diff_pr 0001  
                       ?_ads1115_set_mux 0060                          _lcd_show_string 7130  
         __size_ofi2_sys_ticker_irq_hook 004E            __end_ofi2_sys_ticker_irq_hook 7A5C  
                 __size_of_m_flash_write 0136                 ?_ads1115_read_conversion 006A  
                            ??_lcd_bl_on 0020                         ?_lcd_disp_unit_t 0001  
                      _commonSampleTimer 002E                    ?_ui_disp_menu_psw_adj 0001  
                            ??_iic_start 0020            __size_of_at24c02_write_n_byte 0108  
                            delay_ms@dly 0064                            _lcdTwinkle_ms 0174  
                    ads1115_init@slvaddr 0062                              ??_m_mem_cpy 0020  
                 at24c02_read_n_byte@buf 0067                   at24c02_read_n_byte@len 0069  
                            delay_us@dly 0060                             _x_prDiffData 01DE  
                             _INTCONbits 000FF2        __size_of_sample_diff_pr_chip_fast 011C  
     __end_of___enter_menu_set_base_zero 78CA               ___enter_menu_set_base_zero 7876  
               __size_of_key_process_set 002A        __size_of___enter_menu_set_density 0036  
              ?_sample_diff_pr_chip_fast 0001                     ui_disp_xfloat_pt@buf 0079  
      __size_of_sample_diff_pr_chip_slow 016C                         m_mem_cpy_len@len 0064  
                  lcd_disp_level_bar@bar 0071                ?___enter_menu_set_density 0001  
                   ui_disp_xfloat_pt@xpf 0076                ?_sample_diff_pr_chip_slow 0085  
                   iic_waite_ack@timeout 0020                           _prSampleUpdate 018B  
                  __CFG_RTCSOSC$T1OSCREF 000000                         ?_m_int16_2_str_4 0068  
                          key_polling@t8 0067              __end_ofi2_rtc_alrm_irq_hook 822E  
                          _lcd_disp_logo 7F5A                        _rtExTemperatureIn 014E  
                     __end_of_ticker_dly 7D86                                 intlevel1 0000  
                               intlevel2 0000                      _at24c02_read_n_byte 44E0  
                   ads1115_read_reg@addr 0066                            key_process@tm 00D9  
              cal_additional_pressute@f1 00C5               __size_of_iic_received_byte 006A  
              cal_additional_pressute@f2 00C9                          ___x_arrange_str 753E  
           __end_of_cal_diff_hight_level 2B56                         ___lwmod@dividend 0069  
                        _slowSampleTimer 002F               ?_key_process_set_down_long 0001  
                       ___lldiv@dividend 0060           __size_of_handler_interrupt_low 00C0  
                ??_sample_diff_pr_fliter 0020            __end_of_handler_interrupt_low 00D8  
                             _OSCCONbits 000FD3                            _iic_send_byte 720A  
                  ads1115_write_reg@addr 0064                  __end_of_lcd_set_com_seg 5CCC  
                         crc_sum@puchMsg 0060                          ?_lcd_disp_level 0001  
                      _diffSampCount_D01 0032                        _diffSampCount_D23 0031  
           __end_of_lcd_disp_unit_1st_m3 73B0                            _iic_waite_ack 75FA  
                   ?_at24c02_read_n_byte 0064                       _lcd_disp_chr_loc_0 6CC4  
                     _lcd_disp_chr_loc_1 6C34                       _lcd_disp_chr_loc_2 6BA4  
                     _lcd_disp_chr_loc_3 6B14                       _lcd_disp_chr_loc_4 6A84  
                     _lcd_disp_chr_loc_5 69F4                       _lcd_disp_chr_loc_6 6964  
                     _lcd_disp_chr_loc_7 68D4             __end_of_event_process_ticker 81E8  
                 __size_of_m_mem_cpy_len 004E           __size_of_ads1115_init_all_chip 0036  
          __end_of_ads1115_init_all_chip 7E5E                           _m_flash_unlock 8184  
        __end_of_cal_diff_hight_to_vol_h 30D4          __end_of_cal_diff_hight_to_vol_v 086E  
               m_interp1_cal_p_t@tmpxLen 007E                               _RTCCFGbits 000F5F  
                    ads1115_read_reg@t16 0068                              crc_append@n 006E  
                       ___lldiv@quotient 0068                          ___lwmod@divisor 006B  
                          crc_sum@uIndex 0068                  ___int32_2_mflot32@F7641 0142  
                        ___lwmod@counter 006D                      ?_lcd_disp_chr_loc_0 0001  
                    ?_lcd_disp_chr_loc_1 0001                      ?_lcd_disp_chr_loc_2 0001  
                    ?_lcd_disp_chr_loc_3 0001                      ?_lcd_disp_chr_loc_4 0001  
                    ?_lcd_disp_chr_loc_5 0001                      ?_lcd_disp_chr_loc_6 0001  
                    ?_lcd_disp_chr_loc_7 0001                         ?_sys_ticker_init 0001  
               __size_of_data_sys_cal_v1 0204                 __size_of_data_sys_cal_v2 0164  
                           ___aldiv@sign 0069                           ?_lcd_disp_logo 0001  
                 ?_in_adc_start_and_read 0064                            _m_flash_erase 77C4  
                          ___fladd@signs 00B4                            _m_flash_write 4F28  
             __size_of_rtc_alrm_irq_hook 0002                            ?_lcd_disp_all 0001  
                           ___fladd@aexp 00B5                             ___fladd@bexp 00B6  
                     _lcd_disp_level_bar 0DAE                 __size_of_cal_diff_p_to_h 00F0  
                 cal_diff_hight_level@f1 00D0                   cal_diff_hight_level@f2 00C4  
               ui_disp_adj_xfixed_pt@buf 007D                 ui_disp_adj_xfixed_pt@loc 007A  
                __end_of_lcd_show_string 719E                 ui_disp_adj_xfixed_pt@str 0076  
                     _lcd_show_string_l0 70C2                       _lcd_show_string_l1 7B72  
                            crc_verify@n 006E            __size_of_ui_disp_clear_num_dp 005A  
            __end_of_ui_disp_start_cs600 683C                     ??_lcd_disp_chr_loc_0 0020  
                   ??_lcd_disp_chr_loc_1 0020                     ??_lcd_disp_chr_loc_2 0020  
                   ??_lcd_disp_chr_loc_3 0020                     ??_lcd_disp_chr_loc_4 0020  
                   ??_lcd_disp_chr_loc_5 0020                     ??_lcd_disp_chr_loc_6 0020  
                   ??_lcd_disp_chr_loc_7 0020                           ?_iic_send_byte 0001  
            ??_key_adj_value_fixed_point 0021                   ??_ui_disp_menu_home_00 0021  
                 ??_ui_disp_menu_home_01 0021                   ??_ui_disp_menu_home_02 0021  
                          ?_iic_send_ack 0001          __end_of_ads1115_read_conversion 7AEC  
      __size_of_cal_pt100_temperature_in 029C        __size_of_cal_pt100_temperature_ex 02D0  
                ??_ui_disp_adj_xfixed_pt 007B                      ?_lcd_disp_level_bar 0020  
              ?_cal_pt100_temperature_in 0001                ?_cal_pt100_temperature_ex 0001  
