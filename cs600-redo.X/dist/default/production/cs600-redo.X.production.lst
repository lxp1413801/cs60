

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Sep 11 16:23:55 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109  0000                     
   110                           ; Version 1.41
   111                           ; Generated 25/01/2017 GMT
   112                           ; 
   113                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F86J93 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	idataBANK0
   146  002684                     __pidataBANK0:
   147                           	opt stack 0
   148                           
   149                           ;initializer for ui_disp_start_cs600@F7582
   150  002684  2D                 	db	45
   151  002685  30                 	db	48
   152  002686  30                 	db	48
   153  002687  2D                 	db	45
   154  002688  00                 	db	0
   155  002689  00                 	db	0
   156                           
   157                           ;initializer for _fpSysData
   158  00268A  00                 	db	0
   159  00268B  F4                 	db	244
   160  00268C  00                 	db	0
   161                           
   162                           ;initializer for _defalutRtc
   163  00268D  17                 	db	23
   164  00268E  07                 	db	7
   165  00268F  31                 	db	49
   166  002690  23                 	db	35
   167  002691  55                 	db	85
   168  002692  55                 	db	85
   169  002693  02                 	db	2
   170                           
   171                           	psect	mediumconst
   172  00FCBA                     __pmediumconst:
   173                           	opt stack 0
   174  00FCBA  00                 	db	0
   175  00FCBB                     _auchCRCLo:
   176                           	opt stack 0
   177  00FCBB  00                 	db	0
   178  00FCBC  C0                 	db	192
   179  00FCBD  C1                 	db	193
   180  00FCBE  01                 	db	1
   181  00FCBF  C3                 	db	195
   182  00FCC0  03                 	db	3
   183  00FCC1  02                 	db	2
   184  00FCC2  C2                 	db	194
   185  00FCC3  C6                 	db	198
   186  00FCC4  06                 	db	6
   187  00FCC5  07                 	db	7
   188  00FCC6  C7                 	db	199
   189  00FCC7  05                 	db	5
   190  00FCC8  C5                 	db	197
   191  00FCC9  C4                 	db	196
   192  00FCCA  04                 	db	4
   193  00FCCB  CC                 	db	204
   194  00FCCC  0C                 	db	12
   195  00FCCD  0D                 	db	13
   196  00FCCE  CD                 	db	205
   197  00FCCF  0F                 	db	15
   198  00FCD0  CF                 	db	207
   199  00FCD1  CE                 	db	206
   200  00FCD2  0E                 	db	14
   201  00FCD3  0A                 	db	10
   202  00FCD4  CA                 	db	202
   203  00FCD5  CB                 	db	203
   204  00FCD6  0B                 	db	11
   205  00FCD7  C9                 	db	201
   206  00FCD8  09                 	db	9
   207  00FCD9  08                 	db	8
   208  00FCDA  C8                 	db	200
   209  00FCDB  D8                 	db	216
   210  00FCDC  18                 	db	24
   211  00FCDD  19                 	db	25
   212  00FCDE  D9                 	db	217
   213  00FCDF  1B                 	db	27
   214  00FCE0  DB                 	db	219
   215  00FCE1  DA                 	db	218
   216  00FCE2  1A                 	db	26
   217  00FCE3  1E                 	db	30
   218  00FCE4  DE                 	db	222
   219  00FCE5  DF                 	db	223
   220  00FCE6  1F                 	db	31
   221  00FCE7  DD                 	db	221
   222  00FCE8  1D                 	db	29
   223  00FCE9  1C                 	db	28
   224  00FCEA  DC                 	db	220
   225  00FCEB  14                 	db	20
   226  00FCEC  D4                 	db	212
   227  00FCED  D5                 	db	213
   228  00FCEE  15                 	db	21
   229  00FCEF  D7                 	db	215
   230  00FCF0  17                 	db	23
   231  00FCF1  16                 	db	22
   232  00FCF2  D6                 	db	214
   233  00FCF3  D2                 	db	210
   234  00FCF4  12                 	db	18
   235  00FCF5  13                 	db	19
   236  00FCF6  D3                 	db	211
   237  00FCF7  11                 	db	17
   238  00FCF8  D1                 	db	209
   239  00FCF9  D0                 	db	208
   240  00FCFA  10                 	db	16
   241  00FCFB  F0                 	db	240
   242  00FCFC  30                 	db	48
   243  00FCFD  31                 	db	49
   244  00FCFE  F1                 	db	241
   245  00FCFF  33                 	db	51
   246  00FD00  F3                 	db	243
   247  00FD01  F2                 	db	242
   248  00FD02  32                 	db	50
   249  00FD03  36                 	db	54
   250  00FD04  F6                 	db	246
   251  00FD05  F7                 	db	247
   252  00FD06  37                 	db	55
   253  00FD07  F5                 	db	245
   254  00FD08  35                 	db	53
   255  00FD09  34                 	db	52
   256  00FD0A  F4                 	db	244
   257  00FD0B  3C                 	db	60
   258  00FD0C  FC                 	db	252
   259  00FD0D  FD                 	db	253
   260  00FD0E  3D                 	db	61
   261  00FD0F  FF                 	db	255
   262  00FD10  3F                 	db	63
   263  00FD11  3E                 	db	62
   264  00FD12  FE                 	db	254
   265  00FD13  FA                 	db	250
   266  00FD14  3A                 	db	58
   267  00FD15  3B                 	db	59
   268  00FD16  FB                 	db	251
   269  00FD17  39                 	db	57
   270  00FD18  F9                 	db	249
   271  00FD19  F8                 	db	248
   272  00FD1A  38                 	db	56
   273  00FD1B  28                 	db	40
   274  00FD1C  E8                 	db	232
   275  00FD1D  E9                 	db	233
   276  00FD1E  29                 	db	41
   277  00FD1F  EB                 	db	235
   278  00FD20  2B                 	db	43
   279  00FD21  2A                 	db	42
   280  00FD22  EA                 	db	234
   281  00FD23  EE                 	db	238
   282  00FD24  2E                 	db	46
   283  00FD25  2F                 	db	47
   284  00FD26  EF                 	db	239
   285  00FD27  2D                 	db	45
   286  00FD28  ED                 	db	237
   287  00FD29  EC                 	db	236
   288  00FD2A  2C                 	db	44
   289  00FD2B  E4                 	db	228
   290  00FD2C  24                 	db	36
   291  00FD2D  25                 	db	37
   292  00FD2E  E5                 	db	229
   293  00FD2F  27                 	db	39
   294  00FD30  E7                 	db	231
   295  00FD31  E6                 	db	230
   296  00FD32  26                 	db	38
   297  00FD33  22                 	db	34
   298  00FD34  E2                 	db	226
   299  00FD35  E3                 	db	227
   300  00FD36  23                 	db	35
   301  00FD37  E1                 	db	225
   302  00FD38  21                 	db	33
   303  00FD39  20                 	db	32
   304  00FD3A  E0                 	db	224
   305  00FD3B  A0                 	db	160
   306  00FD3C  60                 	db	96
   307  00FD3D  61                 	db	97
   308  00FD3E  A1                 	db	161
   309  00FD3F  63                 	db	99
   310  00FD40  A3                 	db	163
   311  00FD41  A2                 	db	162
   312  00FD42  62                 	db	98
   313  00FD43  66                 	db	102
   314  00FD44  A6                 	db	166
   315  00FD45  A7                 	db	167
   316  00FD46  67                 	db	103
   317  00FD47  A5                 	db	165
   318  00FD48  65                 	db	101
   319  00FD49  64                 	db	100
   320  00FD4A  A4                 	db	164
   321  00FD4B  6C                 	db	108
   322  00FD4C  AC                 	db	172
   323  00FD4D  AD                 	db	173
   324  00FD4E  6D                 	db	109
   325  00FD4F  AF                 	db	175
   326  00FD50  6F                 	db	111
   327  00FD51  6E                 	db	110
   328  00FD52  AE                 	db	174
   329  00FD53  AA                 	db	170
   330  00FD54  6A                 	db	106
   331  00FD55  6B                 	db	107
   332  00FD56  AB                 	db	171
   333  00FD57  69                 	db	105
   334  00FD58  A9                 	db	169
   335  00FD59  A8                 	db	168
   336  00FD5A  68                 	db	104
   337  00FD5B  78                 	db	120
   338  00FD5C  B8                 	db	184
   339  00FD5D  B9                 	db	185
   340  00FD5E  79                 	db	121
   341  00FD5F  BB                 	db	187
   342  00FD60  7B                 	db	123
   343  00FD61  7A                 	db	122
   344  00FD62  BA                 	db	186
   345  00FD63  BE                 	db	190
   346  00FD64  7E                 	db	126
   347  00FD65  7F                 	db	127
   348  00FD66  BF                 	db	191
   349  00FD67  7D                 	db	125
   350  00FD68  BD                 	db	189
   351  00FD69  BC                 	db	188
   352  00FD6A  7C                 	db	124
   353  00FD6B  B4                 	db	180
   354  00FD6C  74                 	db	116
   355  00FD6D  75                 	db	117
   356  00FD6E  B5                 	db	181
   357  00FD6F  77                 	db	119
   358  00FD70  B7                 	db	183
   359  00FD71  B6                 	db	182
   360  00FD72  76                 	db	118
   361  00FD73  72                 	db	114
   362  00FD74  B2                 	db	178
   363  00FD75  B3                 	db	179
   364  00FD76  73                 	db	115
   365  00FD77  B1                 	db	177
   366  00FD78  71                 	db	113
   367  00FD79  70                 	db	112
   368  00FD7A  B0                 	db	176
   369  00FD7B  50                 	db	80
   370  00FD7C  90                 	db	144
   371  00FD7D  91                 	db	145
   372  00FD7E  51                 	db	81
   373  00FD7F  93                 	db	147
   374  00FD80  53                 	db	83
   375  00FD81  52                 	db	82
   376  00FD82  92                 	db	146
   377  00FD83  96                 	db	150
   378  00FD84  56                 	db	86
   379  00FD85  57                 	db	87
   380  00FD86  97                 	db	151
   381  00FD87  55                 	db	85
   382  00FD88  95                 	db	149
   383  00FD89  94                 	db	148
   384  00FD8A  54                 	db	84
   385  00FD8B  9C                 	db	156
   386  00FD8C  5C                 	db	92
   387  00FD8D  5D                 	db	93
   388  00FD8E  9D                 	db	157
   389  00FD8F  5F                 	db	95
   390  00FD90  9F                 	db	159
   391  00FD91  9E                 	db	158
   392  00FD92  5E                 	db	94
   393  00FD93  5A                 	db	90
   394  00FD94  9A                 	db	154
   395  00FD95  9B                 	db	155
   396  00FD96  5B                 	db	91
   397  00FD97  99                 	db	153
   398  00FD98  59                 	db	89
   399  00FD99  58                 	db	88
   400  00FD9A  98                 	db	152
   401  00FD9B  88                 	db	136
   402  00FD9C  48                 	db	72
   403  00FD9D  49                 	db	73
   404  00FD9E  89                 	db	137
   405  00FD9F  4B                 	db	75
   406  00FDA0  8B                 	db	139
   407  00FDA1  8A                 	db	138
   408  00FDA2  4A                 	db	74
   409  00FDA3  4E                 	db	78
   410  00FDA4  8E                 	db	142
   411  00FDA5  8F                 	db	143
   412  00FDA6  4F                 	db	79
   413  00FDA7  8D                 	db	141
   414  00FDA8  4D                 	db	77
   415  00FDA9  4C                 	db	76
   416  00FDAA  8C                 	db	140
   417  00FDAB  44                 	db	68
   418  00FDAC  84                 	db	132
   419  00FDAD  85                 	db	133
   420  00FDAE  45                 	db	69
   421  00FDAF  87                 	db	135
   422  00FDB0  47                 	db	71
   423  00FDB1  46                 	db	70
   424  00FDB2  86                 	db	134
   425  00FDB3  82                 	db	130
   426  00FDB4  42                 	db	66
   427  00FDB5  43                 	db	67
   428  00FDB6  83                 	db	131
   429  00FDB7  41                 	db	65
   430  00FDB8  81                 	db	129
   431  00FDB9  80                 	db	128
   432  00FDBA  40                 	db	64
   433  00FDBB                     __end_of_auchCRCLo:
   434                           	opt stack 0
   435  00FDBB                     _auchCRCHi:
   436                           	opt stack 0
   437  00FDBB  00                 	db	0
   438  00FDBC  C1                 	db	193
   439  00FDBD  81                 	db	129
   440  00FDBE  40                 	db	64
   441  00FDBF  01                 	db	1
   442  00FDC0  C0                 	db	192
   443  00FDC1  80                 	db	128
   444  00FDC2  41                 	db	65
   445  00FDC3  01                 	db	1
   446  00FDC4  C0                 	db	192
   447  00FDC5  80                 	db	128
   448  00FDC6  41                 	db	65
   449  00FDC7  00                 	db	0
   450  00FDC8  C1                 	db	193
   451  00FDC9  81                 	db	129
   452  00FDCA  40                 	db	64
   453  00FDCB  01                 	db	1
   454  00FDCC  C0                 	db	192
   455  00FDCD  80                 	db	128
   456  00FDCE  41                 	db	65
   457  00FDCF  00                 	db	0
   458  00FDD0  C1                 	db	193
   459  00FDD1  81                 	db	129
   460  00FDD2  40                 	db	64
   461  00FDD3  00                 	db	0
   462  00FDD4  C1                 	db	193
   463  00FDD5  81                 	db	129
   464  00FDD6  40                 	db	64
   465  00FDD7  01                 	db	1
   466  00FDD8  C0                 	db	192
   467  00FDD9  80                 	db	128
   468  00FDDA  41                 	db	65
   469  00FDDB  01                 	db	1
   470  00FDDC  C0                 	db	192
   471  00FDDD  80                 	db	128
   472  00FDDE  41                 	db	65
   473  00FDDF  00                 	db	0
   474  00FDE0  C1                 	db	193
   475  00FDE1  81                 	db	129
   476  00FDE2  40                 	db	64
   477  00FDE3  00                 	db	0
   478  00FDE4  C1                 	db	193
   479  00FDE5  81                 	db	129
   480  00FDE6  40                 	db	64
   481  00FDE7  01                 	db	1
   482  00FDE8  C0                 	db	192
   483  00FDE9  80                 	db	128
   484  00FDEA  41                 	db	65
   485  00FDEB  00                 	db	0
   486  00FDEC  C1                 	db	193
   487  00FDED  81                 	db	129
   488  00FDEE  40                 	db	64
   489  00FDEF  01                 	db	1
   490  00FDF0  C0                 	db	192
   491  00FDF1  80                 	db	128
   492  00FDF2  41                 	db	65
   493  00FDF3  01                 	db	1
   494  00FDF4  C0                 	db	192
   495  00FDF5  80                 	db	128
   496  00FDF6  41                 	db	65
   497  00FDF7  00                 	db	0
   498  00FDF8  C1                 	db	193
   499  00FDF9  81                 	db	129
   500  00FDFA  40                 	db	64
   501  00FDFB  01                 	db	1
   502  00FDFC  C0                 	db	192
   503  00FDFD  80                 	db	128
   504  00FDFE  41                 	db	65
   505  00FDFF  00                 	db	0
   506  00FE00  C1                 	db	193
   507  00FE01  81                 	db	129
   508  00FE02  40                 	db	64
   509  00FE03  00                 	db	0
   510  00FE04  C1                 	db	193
   511  00FE05  81                 	db	129
   512  00FE06  40                 	db	64
   513  00FE07  01                 	db	1
   514  00FE08  C0                 	db	192
   515  00FE09  80                 	db	128
   516  00FE0A  41                 	db	65
   517  00FE0B  00                 	db	0
   518  00FE0C  C1                 	db	193
   519  00FE0D  81                 	db	129
   520  00FE0E  40                 	db	64
   521  00FE0F  01                 	db	1
   522  00FE10  C0                 	db	192
   523  00FE11  80                 	db	128
   524  00FE12  41                 	db	65
   525  00FE13  01                 	db	1
   526  00FE14  C0                 	db	192
   527  00FE15  80                 	db	128
   528  00FE16  41                 	db	65
   529  00FE17  00                 	db	0
   530  00FE18  C1                 	db	193
   531  00FE19  81                 	db	129
   532  00FE1A  40                 	db	64
   533  00FE1B  00                 	db	0
   534  00FE1C  C1                 	db	193
   535  00FE1D  81                 	db	129
   536  00FE1E  40                 	db	64
   537  00FE1F  01                 	db	1
   538  00FE20  C0                 	db	192
   539  00FE21  80                 	db	128
   540  00FE22  41                 	db	65
   541  00FE23  01                 	db	1
   542  00FE24  C0                 	db	192
   543  00FE25  80                 	db	128
   544  00FE26  41                 	db	65
   545  00FE27  00                 	db	0
   546  00FE28  C1                 	db	193
   547  00FE29  81                 	db	129
   548  00FE2A  40                 	db	64
   549  00FE2B  01                 	db	1
   550  00FE2C  C0                 	db	192
   551  00FE2D  80                 	db	128
   552  00FE2E  41                 	db	65
   553  00FE2F  00                 	db	0
   554  00FE30  C1                 	db	193
   555  00FE31  81                 	db	129
   556  00FE32  40                 	db	64
   557  00FE33  00                 	db	0
   558  00FE34  C1                 	db	193
   559  00FE35  81                 	db	129
   560  00FE36  40                 	db	64
   561  00FE37  01                 	db	1
   562  00FE38  C0                 	db	192
   563  00FE39  80                 	db	128
   564  00FE3A  41                 	db	65
   565  00FE3B  01                 	db	1
   566  00FE3C  C0                 	db	192
   567  00FE3D  80                 	db	128
   568  00FE3E  41                 	db	65
   569  00FE3F  00                 	db	0
   570  00FE40  C1                 	db	193
   571  00FE41  81                 	db	129
   572  00FE42  40                 	db	64
   573  00FE43  00                 	db	0
   574  00FE44  C1                 	db	193
   575  00FE45  81                 	db	129
   576  00FE46  40                 	db	64
   577  00FE47  01                 	db	1
   578  00FE48  C0                 	db	192
   579  00FE49  80                 	db	128
   580  00FE4A  41                 	db	65
   581  00FE4B  00                 	db	0
   582  00FE4C  C1                 	db	193
   583  00FE4D  81                 	db	129
   584  00FE4E  40                 	db	64
   585  00FE4F  01                 	db	1
   586  00FE50  C0                 	db	192
   587  00FE51  80                 	db	128
   588  00FE52  41                 	db	65
   589  00FE53  01                 	db	1
   590  00FE54  C0                 	db	192
   591  00FE55  80                 	db	128
   592  00FE56  41                 	db	65
   593  00FE57  00                 	db	0
   594  00FE58  C1                 	db	193
   595  00FE59  81                 	db	129
   596  00FE5A  40                 	db	64
   597  00FE5B  00                 	db	0
   598  00FE5C  C1                 	db	193
   599  00FE5D  81                 	db	129
   600  00FE5E  40                 	db	64
   601  00FE5F  01                 	db	1
   602  00FE60  C0                 	db	192
   603  00FE61  80                 	db	128
   604  00FE62  41                 	db	65
   605  00FE63  01                 	db	1
   606  00FE64  C0                 	db	192
   607  00FE65  80                 	db	128
   608  00FE66  41                 	db	65
   609  00FE67  00                 	db	0
   610  00FE68  C1                 	db	193
   611  00FE69  81                 	db	129
   612  00FE6A  40                 	db	64
   613  00FE6B  01                 	db	1
   614  00FE6C  C0                 	db	192
   615  00FE6D  80                 	db	128
   616  00FE6E  41                 	db	65
   617  00FE6F  00                 	db	0
   618  00FE70  C1                 	db	193
   619  00FE71  81                 	db	129
   620  00FE72  40                 	db	64
   621  00FE73  00                 	db	0
   622  00FE74  C1                 	db	193
   623  00FE75  81                 	db	129
   624  00FE76  40                 	db	64
   625  00FE77  01                 	db	1
   626  00FE78  C0                 	db	192
   627  00FE79  80                 	db	128
   628  00FE7A  41                 	db	65
   629  00FE7B  00                 	db	0
   630  00FE7C  C1                 	db	193
   631  00FE7D  81                 	db	129
   632  00FE7E  40                 	db	64
   633  00FE7F  01                 	db	1
   634  00FE80  C0                 	db	192
   635  00FE81  80                 	db	128
   636  00FE82  41                 	db	65
   637  00FE83  01                 	db	1
   638  00FE84  C0                 	db	192
   639  00FE85  80                 	db	128
   640  00FE86  41                 	db	65
   641  00FE87  00                 	db	0
   642  00FE88  C1                 	db	193
   643  00FE89  81                 	db	129
   644  00FE8A  40                 	db	64
   645  00FE8B  01                 	db	1
   646  00FE8C  C0                 	db	192
   647  00FE8D  80                 	db	128
   648  00FE8E  41                 	db	65
   649  00FE8F  00                 	db	0
   650  00FE90  C1                 	db	193
   651  00FE91  81                 	db	129
   652  00FE92  40                 	db	64
   653  00FE93  00                 	db	0
   654  00FE94  C1                 	db	193
   655  00FE95  81                 	db	129
   656  00FE96  40                 	db	64
   657  00FE97  01                 	db	1
   658  00FE98  C0                 	db	192
   659  00FE99  80                 	db	128
   660  00FE9A  41                 	db	65
   661  00FE9B  01                 	db	1
   662  00FE9C  C0                 	db	192
   663  00FE9D  80                 	db	128
   664  00FE9E  41                 	db	65
   665  00FE9F  00                 	db	0
   666  00FEA0  C1                 	db	193
   667  00FEA1  81                 	db	129
   668  00FEA2  40                 	db	64
   669  00FEA3  00                 	db	0
   670  00FEA4  C1                 	db	193
   671  00FEA5  81                 	db	129
   672  00FEA6  40                 	db	64
   673  00FEA7  01                 	db	1
   674  00FEA8  C0                 	db	192
   675  00FEA9  80                 	db	128
   676  00FEAA  41                 	db	65
   677  00FEAB  00                 	db	0
   678  00FEAC  C1                 	db	193
   679  00FEAD  81                 	db	129
   680  00FEAE  40                 	db	64
   681  00FEAF  01                 	db	1
   682  00FEB0  C0                 	db	192
   683  00FEB1  80                 	db	128
   684  00FEB2  41                 	db	65
   685  00FEB3  01                 	db	1
   686  00FEB4  C0                 	db	192
   687  00FEB5  80                 	db	128
   688  00FEB6  41                 	db	65
   689  00FEB7  00                 	db	0
   690  00FEB8  C1                 	db	193
   691  00FEB9  81                 	db	129
   692  00FEBA  40                 	db	64
   693  00FEBB                     __end_of_auchCRCHi:
   694                           	opt stack 0
   695  00FEBB                     _LCDDigitalIndexTable:
   696                           	opt stack 0
   697  00FEBB  30                 	db	48
   698  00FEBC  31                 	db	49
   699  00FEBD  32                 	db	50
   700  00FEBE  33                 	db	51
   701  00FEBF  34                 	db	52
   702  00FEC0  35                 	db	53
   703  00FEC1  36                 	db	54
   704  00FEC2  37                 	db	55
   705  00FEC3  38                 	db	56
   706  00FEC4  39                 	db	57
   707  00FEC5  61                 	db	97
   708  00FEC6  62                 	db	98
   709  00FEC7  63                 	db	99
   710  00FEC8  64                 	db	100
   711  00FEC9  65                 	db	101
   712  00FECA  66                 	db	102
   713  00FECB  67                 	db	103
   714  00FECC  68                 	db	104
   715  00FECD  69                 	db	105
   716  00FECE  6A                 	db	106
   717  00FECF  6B                 	db	107
   718  00FED0  6C                 	db	108
   719  00FED1  6D                 	db	109
   720  00FED2  6E                 	db	110
   721  00FED3  6F                 	db	111
   722  00FED4  70                 	db	112
   723  00FED5  71                 	db	113
   724  00FED6  72                 	db	114
   725  00FED7  73                 	db	115
   726  00FED8  74                 	db	116
   727  00FED9  75                 	db	117
   728  00FEDA  76                 	db	118
   729  00FEDB  77                 	db	119
   730  00FEDC  78                 	db	120
   731  00FEDD  79                 	db	121
   732  00FEDE  7A                 	db	122
   733  00FEDF  2E                 	db	46
   734  00FEE0  2D                 	db	45
   735  00FEE1  3A                 	db	58
   736  00FEE2  20                 	db	32
   737  00FEE3  00                 	db	0
   738  00FEE4                     __end_of_LCDDigitalIndexTable:
   739                           	opt stack 0
   740  00FEE4                     _LCDDigitalTable:
   741                           	opt stack 0
   742  00FEE4  3F                 	db	63
   743  00FEE5  06                 	db	6
   744  00FEE6  5B                 	db	91
   745  00FEE7  4F                 	db	79
   746  00FEE8  66                 	db	102
   747  00FEE9  6D                 	db	109
   748  00FEEA  7D                 	db	125
   749  00FEEB  07                 	db	7
   750  00FEEC  7F                 	db	127
   751  00FEED  6F                 	db	111
   752  00FEEE  77                 	db	119
   753  00FEEF  7C                 	db	124
   754  00FEF0  39                 	db	57
   755  00FEF1  5E                 	db	94
   756  00FEF2  79                 	db	121
   757  00FEF3  71                 	db	113
   758  00FEF4  6F                 	db	111
   759  00FEF5  76                 	db	118
   760  00FEF6  06                 	db	6
   761  00FEF7  0E                 	db	14
   762  00FEF8  7A                 	db	122
   763  00FEF9  38                 	db	56
   764  00FEFA  00                 	db	0
   765  00FEFB  37                 	db	55
   766  00FEFC  5C                 	db	92
   767  00FEFD  73                 	db	115
   768  00FEFE  67                 	db	103
   769  00FEFF  50                 	db	80
   770  00FF00  6D                 	db	109
   771  00FF01  78                 	db	120
   772  00FF02  3E                 	db	62
   773  00FF03  00                 	db	0
   774  00FF04  00                 	db	0
   775  00FF05  00                 	db	0
   776  00FF06  6E                 	db	110
   777  00FF07  5B                 	db	91
   778  00FF08  40                 	db	64
   779  00FF09  40                 	db	64
   780  00FF0A  48                 	db	72
   781  00FF0B  00                 	db	0
   782  00FF0C                     __end_of_LCDDigitalTable:
   783                           	opt stack 0
   784  00FF0C                     _HexTable:
   785                           	opt stack 0
   786  00FF0C  30                 	db	48
   787  00FF0D  31                 	db	49
   788  00FF0E  32                 	db	50
   789  00FF0F  33                 	db	51
   790  00FF10  34                 	db	52
   791  00FF11  35                 	db	53
   792  00FF12  36                 	db	54
   793  00FF13  37                 	db	55
   794  00FF14  38                 	db	56
   795  00FF15  39                 	db	57
   796  00FF16  61                 	db	97
   797  00FF17  62                 	db	98
   798  00FF18  63                 	db	99
   799  00FF19  64                 	db	100
   800  00FF1A  65                 	db	101
   801  00FF1B  66                 	db	102
   802  00FF1C  00                 	db	0
   803  00FF1D                     __end_of_HexTable:
   804                           	opt stack 0
   805  00FF1D                     _defultSystemData:
   806                           	opt stack 0
   807  00FF1D  0000               	dw	0
   808  00FF1F  0000               	dw	0
   809  00FF21  00                 	db	0
   810  00FF22  5F                 	db	95
   811  00FF23  03E8               	dw	1000
   812  00FF25  2710               	dw	10000
   813  00FF27  0000               	dw	0
   814  00FF29  1388               	dw	5000
   815  00FF2B  0000               	dw	0
   816  00FF2D  FF38               	dw	65336
   817  00FF2F  FFFF               	dw	65535
   818  00FF31  0000               	dw	0
   819  00FF33  0000               	dw	0
   820  00FF35  00                 	db	0
   821  00FF36  00                 	db	0
   822  00FF37  00                 	db	0
   823  00FF38  00                 	db	0
   824  00FF39  00                 	db	0
   825  00FF3A  00                 	db	0
   826  00FF3B  00                 	db	0
   827  00FF3C  00                 	db	0
   828  00FF3D  00                 	db	0
   829  00FF3E  00                 	db	0
   830  00FF3F  00                 	db	0
   831  00FF40  00                 	db	0
   832  00FF41  00                 	db	0
   833  00FF42  00                 	db	0
   834  00FF43  00                 	db	0
   835  00FF44  00                 	db	0
   836  00FF45  00                 	db	0
   837  00FF46  00                 	db	0
   838  00FF47  00                 	db	0
   839  00FF48  00                 	db	0
   840  00FF49  00                 	db	0
   841  00FF4A  00                 	db	0
   842  00FF4B  00                 	db	0
   843  00FF4C  00                 	db	0
   844  00FF4D  00                 	db	0
   845  00FF4E  00                 	db	0
   846  00FF4F  00                 	db	0
   847  00FF50  00                 	db	0
   848  00FF51  00                 	db	0
   849  00FF52  00                 	db	0
   850  00FF53  00                 	db	0
   851  00FF54  00                 	db	0
   852  00FF55  00                 	db	0
   853  00FF56  00                 	db	0
   854  00FF57  00                 	db	0
   855  00FF58  00                 	db	0
   856  00FF59  00                 	db	0
   857  00FF5A  00                 	db	0
   858  00FF5B  00                 	db	0
   859  00FF5C  00                 	db	0
   860  00FF5D  00                 	db	0
   861  00FF5E  00                 	db	0
   862  00FF5F  00                 	db	0
   863  00FF60  00                 	db	0
   864  00FF61  0000               	dw	0
   865  00FF63  0000               	dw	0
   866  00FF65  00                 	db	0
   867  00FF66  00                 	db	0
   868  00FF67  00                 	db	0
   869  00FF68  00                 	db	0
   870  00FF69  00                 	db	0
   871  00FF6A  00                 	db	0
   872  00FF6B  00                 	db	0
   873  00FF6C  00                 	db	0
   874  00FF6D  28                 	db	40
   875  00FF6E  1E                 	db	30
   876  00FF6F  14                 	db	20
   877  00FF70  0A                 	db	10
   878  00FF71  0000               	dw	0
   879  00FF73  0000               	dw	0
   880  00FF75  00                 	db	0
   881  00FF76  00                 	db	0
   882  00FF77  00                 	db	0
   883  00FF78  00                 	db	0
   884  00FF79  03E8               	dw	1000
   885  00FF7B  0000               	dw	0
   886  00FF7D  03E8               	dw	1000
   887  00FF7F  0000               	dw	0
   888  00FF81  0000               	dw	0
   889  00FF83  0000               	dw	0
   890  00FF85  00                 	db	0
   891  00FF86  00                 	db	0
   892  00FF87  00                 	db	0
   893  00FF88  00                 	db	0
   894  00FF89  03E8               	dw	1000
   895  00FF8B  0000               	dw	0
   896  00FF8D  03E8               	dw	1000
   897  00FF8F  0000               	dw	0
   898  00FF91  0000               	dw	0
   899  00FF93  0000               	dw	0
   900  00FF95  03E8               	dw	1000
   901  00FF97  0000               	dw	0
   902  00FF99  0000               	dw	0
   903  00FF9B  0000               	dw	0
   904  00FF9D  03E8               	dw	1000
   905  00FF9F  0000               	dw	0
   906  00FFA1  0000               	dw	0
   907  00FFA3                     __end_of_defultSystemData:
   908                           	opt stack 0
   909  00FFA3                     _flashTestbuf:
   910                           	opt stack 0
   911  00FFA3  30                 	db	48
   912  00FFA4  31                 	db	49
   913  00FFA5  32                 	db	50
   914  00FFA6  33                 	db	51
   915  00FFA7  34                 	db	52
   916  00FFA8  35                 	db	53
   917  00FFA9  36                 	db	54
   918  00FFAA  37                 	db	55
   919  00FFAB  38                 	db	56
   920  00FFAC  39                 	db	57
   921  00FFAD  30                 	db	48
   922  00FFAE  31                 	db	49
   923  00FFAF  32                 	db	50
   924  00FFB0  33                 	db	51
   925  00FFB1  34                 	db	52
   926  00FFB2  35                 	db	53
   927  00FFB3  36                 	db	54
   928  00FFB4  37                 	db	55
   929  00FFB5  38                 	db	56
   930  00FFB6  39                 	db	57
   931  00FFB7  30                 	db	48
   932  00FFB8  31                 	db	49
   933  00FFB9  32                 	db	50
   934  00FFBA  33                 	db	51
   935  00FFBB  34                 	db	52
   936  00FFBC  35                 	db	53
   937  00FFBD  36                 	db	54
   938  00FFBE  37                 	db	55
   939  00FFBF  38                 	db	56
   940  00FFC0  39                 	db	57
   941  00FFC1  30                 	db	48
   942  00FFC2  31                 	db	49
   943  00FFC3  32                 	db	50
   944  00FFC4  33                 	db	51
   945  00FFC5  34                 	db	52
   946  00FFC6  35                 	db	53
   947  00FFC7  36                 	db	54
   948  00FFC8  37                 	db	55
   949  00FFC9  38                 	db	56
   950  00FFCA  39                 	db	57
   951  00FFCB  30                 	db	48
   952  00FFCC  31                 	db	49
   953  00FFCD  32                 	db	50
   954  00FFCE  33                 	db	51
   955  00FFCF  34                 	db	52
   956  00FFD0  35                 	db	53
   957  00FFD1  36                 	db	54
   958  00FFD2  37                 	db	55
   959  00FFD3  38                 	db	56
   960  00FFD4  39                 	db	57
   961  00FFD5  30                 	db	48
   962  00FFD6  31                 	db	49
   963  00FFD7  32                 	db	50
   964  00FFD8  33                 	db	51
   965  00FFD9  34                 	db	52
   966  00FFDA  35                 	db	53
   967  00FFDB  36                 	db	54
   968  00FFDC  37                 	db	55
   969  00FFDD  38                 	db	56
   970  00FFDE  39                 	db	57
   971  00FFDF  30                 	db	48
   972  00FFE0  31                 	db	49
   973  00FFE1  32                 	db	50
   974  00FFE2  33                 	db	51
   975  00FFE3  00                 	db	0
   976  00FFE4                     __end_of_flashTestbuf:
   977                           	opt stack 0
   978  0000                     _RTCVALH	set	3933
   979  0000                     _RTCVALL	set	3932
   980  0000                     _stRTCCFGbits	set	3935
   981  0000                     _ALRMCFGbits	set	3931
   982  0000                     _ALRMRPT	set	3930
   983  0000                     _PADCFG1bits	set	3924
   984  0000                     _RTCCFGbits	set	3935
   985  0000                     _PR2	set	4043
   986  0000                     _T2CON	set	4042
   987  0000                     _RCONbits	set	4048
   988  0000                     _T1CONbits	set	4045
   989  0000                     _IPR3bits	set	4005
   990  0000                     _PIR3bits	set	4004
   991  0000                     _PIE3bits	set	4003
   992  0000                     _INTCON2bits	set	4081
   993  0000                     _OSCCONbits	set	4051
   994  0000                     _FSR0H	set	4074
   995  0000                     _FSR0L	set	4073
   996  0000                     _TABLAT	set	4085
   997  0000                     _TBLPTRU	set	4088
   998  0000                     _TBLPTRH	set	4087
   999  0000                     _TBLPTRL	set	4086
  1000  0000                     _EECON1bits	set	4006
  1001  0000                     _INTCONbits	set	4082
  1002  0000                     _INTCON	set	4082
  1003  0000                     _LCDCON	set	4008
  1004  0000                     _TRISG	set	3992
  1005  0000                     _LCDSE5	set	4026
  1006  0000                     _LCDSE4	set	4025
  1007  0000                     _LCDSE3	set	4024
  1008  0000                     _LCDSE2	set	4023
  1009  0000                     _LCDSE1	set	4022
  1010  0000                     _LCDSE0	set	4009
  1011  0000                     _LCDPSbits	set	4010
  1012  0000                     _LCDREG	set	4050
  1013  0000                     _LCDDATA23	set	3965
  1014  0000                     _LCDDATA22	set	3964
  1015  0000                     _LCDDATA21	set	3963
  1016  0000                     _LCDDATA20	set	3962
  1017  0000                     _LCDDATA19	set	3961
  1018  0000                     _LCDDATA18	set	3960
  1019  0000                     _LCDDATA17	set	3959
  1020  0000                     _LCDDATA16	set	3958
  1021  0000                     _LCDDATA15	set	3957
  1022  0000                     _LCDDATA14	set	3956
  1023  0000                     _LCDDATA13	set	3955
  1024  0000                     _LCDDATA12	set	3954
  1025  0000                     _LCDDATA11	set	3953
  1026  0000                     _LCDDATA10	set	3952
  1027  0000                     _LCDDATA9	set	3951
  1028  0000                     _LCDDATA8	set	3950
  1029  0000                     _LCDDATA7	set	3949
  1030  0000                     _LCDDATA6	set	3948
  1031  0000                     _LCDDATA5	set	3947
  1032  0000                     _LCDDATA4	set	4031
  1033  0000                     _LCDDATA3	set	4030
  1034  0000                     _LCDDATA2	set	4029
  1035  0000                     _LCDDATA1	set	4028
  1036  0000                     _LCDDATA0	set	4027
  1037  0000                     _PORTB	set	3969
  1038  0000                     _ADRESL	set	4035
  1039  0000                     _ADRESH	set	4036
  1040  0000                     _IPR1bits	set	3999
  1041  0000                     _PIE1bits	set	3997
  1042  0000                     _PIR1bits	set	3998
  1043  0000                     _ADCON0bits	set	4034
  1044  0000                     _ADCON2bits	set	4032
  1045  0000                     _ADCON1	set	4033
  1046  0000                     _PORTC	set	3970
  1047  0000                     _LATC	set	3979
  1048  0000                     _TRISC	set	3988
  1049  0000                     _LATB	set	3978
  1050  0000                     _TRISB	set	3987
  1051  00FFE4                     STR_2:
  1052  00FFE4  20                 	db	32
  1053  00FFE5  20                 	db	32
  1054  00FFE6  20                 	db	32
  1055  00FFE7  20                 	db	32
  1056  00FFE8  20                 	db	32
  1057  00FFE9  20                 	db	32
  1058  00FFEA  20                 	db	32
  1059  00FFEB  20                 	db	32
  1060  00FFEC  00                 	db	0
  1061  00FFED                     STR_1:
  1062  00FFED  63                 	db	99	;'c'
  1063  00FFEE  73                 	db	115	;'s'
  1064  00FFEF  36                 	db	54	;'6'
  1065  00FFF0  36                 	db	54	;'6'
  1066  00FFF1  00                 	db	0
  1067  00FFF2                     STR_3:
  1068  00FFF2  20                 	db	32
  1069  00FFF3  70                 	db	112	;'p'
  1070  00FFF4  73                 	db	115	;'s'
  1071  00FFF5  64                 	db	100	;'d'
  1072  00FFF6  00                 	db	0
  1073                           
  1074                           ; #config settings
  1075  00FFF7  00                 	db	0	; dummy byte at the end
  1076  0000                     
  1077                           	psect	cinit
  1078  001986                     __pcinit:
  1079                           	opt stack 0
  1080  001986                     start_initialization:
  1081                           	opt stack 0
  1082  001986                     __initialization:
  1083                           	opt stack 0
  1084                           
  1085                           ; Initialize objects allocated to BANK0 (16 bytes)
  1086                           ; load TBLPTR registers with __pidataBANK0
  1087  001986  0E84               	movlw	low __pidataBANK0
  1088  001988  6EF6               	movwf	tblptrl,c
  1089  00198A  0E26               	movlw	high __pidataBANK0
  1090  00198C  6EF7               	movwf	tblptrh,c
  1091  00198E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1092  001990  6EF8               	movwf	tblptru,c
  1093  001992  EE00  F0EE         	lfsr	0,__pdataBANK0
  1094  001996  EE10 F010          	lfsr	1,16
  1095  00199A                     copy_data0:
  1096  00199A  0009               	tblrd		*+
  1097  00199C  CFF5 FFEE          	movff	tablat,postinc0
  1098  0019A0  50E5               	movf	postdec1,w,c
  1099  0019A2  50E1               	movf	fsr1l,w,c
  1100  0019A4  E1FA               	bnz	copy_data0
  1101                           
  1102                           ; Clear objects allocated to BANK2 (256 bytes)
  1103  0019A6  EE02  F000         	lfsr	0,__pbssBANK2
  1104  0019AA  EE11 F000          	lfsr	1,256
  1105  0019AE                     clear_0:
  1106  0019AE  6AEE               	clrf	postinc0,c
  1107  0019B0  50E5               	movf	postdec1,w,c
  1108  0019B2  50E1               	movf	fsr1l,w,c
  1109  0019B4  E1FC               	bnz	clear_0
  1110  0019B6  50E2               	movf	fsr1h,w,c
  1111  0019B8  E1FA               	bnz	clear_0
  1112                           
  1113                           ; Clear objects allocated to BANK1 (256 bytes)
  1114  0019BA  EE01  F000         	lfsr	0,__pbssBANK1
  1115  0019BE  EE11 F000          	lfsr	1,256
  1116  0019C2                     clear_1:
  1117  0019C2  6AEE               	clrf	postinc0,c
  1118  0019C4  50E5               	movf	postdec1,w,c
  1119  0019C6  50E1               	movf	fsr1l,w,c
  1120  0019C8  E1FC               	bnz	clear_1
  1121  0019CA  50E2               	movf	fsr1h,w,c
  1122  0019CC  E1FA               	bnz	clear_1
  1123                           
  1124                           ; Clear objects allocated to BANK0 (99 bytes)
  1125  0019CE  EE00  F060         	lfsr	0,__pbssBANK0
  1126  0019D2  0E63               	movlw	99
  1127  0019D4                     clear_2:
  1128  0019D4  6AEE               	clrf	postinc0,c
  1129  0019D6  06E8               	decf	wreg,f,c
  1130  0019D8  E1FD               	bnz	clear_2
  1131                           
  1132                           ; Clear objects allocated to COMRAM (30 bytes)
  1133  0019DA  EE00  F022         	lfsr	0,__pbssCOMRAM
  1134  0019DE  0E1E               	movlw	30
  1135  0019E0                     clear_3:
  1136  0019E0  6AEE               	clrf	postinc0,c
  1137  0019E2  06E8               	decf	wreg,f,c
  1138  0019E4  E1FD               	bnz	clear_3
  1139  0019E6                     end_of_initialization:
  1140                           	opt stack 0
  1141  0019E6                     __end_of__initialization:
  1142                           	opt stack 0
  1143  0019E6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1144  0019E8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1145  0019EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1146  0019EC  6EF8               	movwf	tblptru,c
  1147  0019EE  0100               	movlb	0
  1148  0019F0  EF12  F006         	goto	_main	;jump to C main() function
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1h	equ	0xFE2
  1157                           fsr1l	equ	0xFE1
  1158                           
  1159                           	psect	bssCOMRAM
  1160  000022                     __pbssCOMRAM:
  1161                           	opt stack 0
  1162  000022                     _pcf8574:
  1163                           	opt stack 0
  1164  000022                     	ds	11
  1165  00002D                     _adjValue:
  1166                           	opt stack 0
  1167  00002D                     	ds	4
  1168  000031                     _dlyTicker:
  1169                           	opt stack 0
  1170  000031                     	ds	2
  1171  000033                     _pAdjValue:
  1172                           	opt stack 0
  1173  000033                     	ds	2
  1174  000035                     _userTicker_ms:
  1175                           	opt stack 0
  1176  000035                     	ds	2
  1177  000037                     _dlyTickerEn:
  1178                           	opt stack 0
  1179  000037                     	ds	1
  1180  000038                     _st_Bj:
  1181                           	opt stack 0
  1182  000038                     	ds	1
  1183  000039                     _pcf8574Value:
  1184                           	opt stack 0
  1185  000039                     	ds	1
  1186  00003A                     _calibTempIndex:
  1187                           	opt stack 0
  1188  00003A                     	ds	1
  1189  00003B                     _calibValueIndex:
  1190                           	opt stack 0
  1191  00003B                     	ds	1
  1192  00003C                     _menu:
  1193                           	opt stack 0
  1194  00003C                     	ds	1
  1195  00003D                     _passWord:
  1196                           	opt stack 0
  1197  00003D                     	ds	2
  1198  00003F                     _adjLocation:
  1199                           	opt stack 0
  1200  00003F                     	ds	1
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           
  1211                           	psect	bssBANK0
  1212  000060                     __pbssBANK0:
  1213                           	opt stack 0
  1214  000060                     _pLCD:
  1215                           	opt stack 0
  1216  000060                     	ds	24
  1217  000078                     _glRtc:
  1218                           	opt stack 0
  1219  000078                     	ds	7
  1220  00007F                     _glTicker:
  1221                           	opt stack 0
  1222  00007F                     	ds	4
  1223  000083                     ___mflot32_2_int32@F7573:
  1224                           	opt stack 0
  1225  000083                     	ds	4
  1226  000087                     ___int32_2_mflot32@F7568:
  1227                           	opt stack 0
  1228  000087                     	ds	4
  1229  00008B                     _glbEvent:
  1230                           	opt stack 0
  1231  00008B                     	ds	1
  1232  00008C                     _keyValue:
  1233                           	opt stack 0
  1234  00008C                     	ds	1
  1235  00008D                     _ads1115Chip1:
  1236                           	opt stack 0
  1237  00008D                     	ds	16
  1238  00009D                     _ads1115Chip0:
  1239                           	opt stack 0
  1240  00009D                     	ds	16
  1241  0000AD                     _at24c02Ch1:
  1242                           	opt stack 0
  1243  0000AD                     	ds	11
  1244  0000B8                     _at24c02Ch0:
  1245                           	opt stack 0
  1246  0000B8                     	ds	11
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           postdec1	equ	0xFE5
  1254                           fsr1h	equ	0xFE2
  1255                           fsr1l	equ	0xFE1
  1256                           
  1257                           	psect	dataBANK0
  1258  0000EE                     __pdataBANK0:
  1259                           	opt stack 0
  1260  0000EE                     ui_disp_start_cs600@F7582:
  1261                           	opt stack 0
  1262  0000EE                     	ds	6
  1263  0000F4                     _fpSysData:
  1264                           	opt stack 0
  1265  0000F4                     	ds	3
  1266  0000F7                     _defalutRtc:
  1267                           	opt stack 0
  1268  0000F7                     	ds	7
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1h	equ	0xFE2
  1277                           fsr1l	equ	0xFE1
  1278                           
  1279                           	psect	bssBANK1
  1280  000100                     __pbssBANK1:
  1281                           	opt stack 0
  1282  000100                     _globleBuffer0:
  1283                           	opt stack 0
  1284  000100                     	ds	256
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1h	equ	0xFE2
  1293                           fsr1l	equ	0xFE1
  1294                           
  1295                           	psect	bssBANK2
  1296  000200                     __pbssBANK2:
  1297                           	opt stack 0
  1298  000200                     _globleBuffer1:
  1299                           	opt stack 0
  1300  000200                     	ds	256
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           
  1311                           	psect	cstackBANK0
  1312  0000C3                     __pcstackBANK0:
  1313                           	opt stack 0
  1314  0000C3                     ?___awdiv:
  1315                           	opt stack 0
  1316  0000C3                     ?___awmod:
  1317                           	opt stack 0
  1318  0000C3                     ?___lldiv:
  1319                           	opt stack 0
  1320  0000C3                     ___exp_10@n:
  1321                           	opt stack 0
  1322  0000C3                     iic_send_byte@x:
  1323                           	opt stack 0
  1324  0000C3                     iic_received_byte_if_ack@ack:
  1325                           	opt stack 0
  1326  0000C3                     lcd_disp_get_code@chr:
  1327                           	opt stack 0
  1328  0000C3                     key_shift_loc_fixed_point@loc:
  1329                           	opt stack 0
  1330  0000C3                     ___enter_menu_set_density@fps:
  1331                           	opt stack 0
  1332  0000C3                     ___enter_menu_set_pose@fps:
  1333                           	opt stack 0
  1334  0000C3                     ___x_arrange_str@str:
  1335                           	opt stack 0
  1336  0000C3                     m_mem_cpy@d:
  1337                           	opt stack 0
  1338  0000C3                     m_int8_2_hex@str:
  1339                           	opt stack 0
  1340  0000C3                     ads1115_init@pAds1115:
  1341                           	opt stack 0
  1342  0000C3                     delay_us@i:
  1343                           	opt stack 0
  1344  0000C3                     rtc_set@stp:
  1345                           	opt stack 0
  1346  0000C3                     ___awdiv@dividend:
  1347                           	opt stack 0
  1348  0000C3                     ___awmod@dividend:
  1349                           	opt stack 0
  1350  0000C3                     ___lldiv@dividend:
  1351                           	opt stack 0
  1352                           
  1353                           ; 4 bytes @ 0x0
  1354  0000C3                     	ds	1
  1355  0000C4                     ?___wmul:
  1356                           	opt stack 0
  1357  0000C4                     ?___lwdiv:
  1358                           	opt stack 0
  1359  0000C4                     iic_send_byte@i:
  1360                           	opt stack 0
  1361  0000C4                     iic_received_byte_if_ack@ret:
  1362                           	opt stack 0
  1363  0000C4                     lcd_disp_get_code@ret:
  1364                           	opt stack 0
  1365  0000C4                     ___wmul@multiplier:
  1366                           	opt stack 0
  1367  0000C4                     ___lwdiv@dividend:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x1
  1371  0000C4                     	ds	1
  1372  0000C5                     ?_ads1115_read_reg:
  1373                           	opt stack 0
  1374  0000C5                     ?_in_adc_start_and_read:
  1375                           	opt stack 0
  1376  0000C5                     key_shift_loc_fixed_point@min:
  1377                           	opt stack 0
  1378  0000C5                     ___x_arrange_str@len:
  1379                           	opt stack 0
  1380  0000C5                     m_int8_2_hex@b:
  1381                           	opt stack 0
  1382  0000C5                     ads1115_init@slvaddr:
  1383                           	opt stack 0
  1384  0000C5                     lcd_disp_get_code@i:
  1385                           	opt stack 0
  1386  0000C5                     m_mem_cpy@s:
  1387                           	opt stack 0
  1388  0000C5                     ads1115_write_reg@pAds1115:
  1389                           	opt stack 0
  1390  0000C5                     ads1115_read_reg@pAds1115:
  1391                           	opt stack 0
  1392  0000C5                     delay_ms@dly:
  1393                           	opt stack 0
  1394  0000C5                     ___awdiv@divisor:
  1395                           	opt stack 0
  1396  0000C5                     ___awmod@divisor:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x2
  1400  0000C5                     	ds	1
  1401  0000C6                     key_shift_loc_fixed_point@max:
  1402                           	opt stack 0
  1403  0000C6                     ___wmul@multiplicand:
  1404                           	opt stack 0
  1405  0000C6                     ___lwdiv@divisor:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0x3
  1409  0000C6                     	ds	1
  1410  0000C7                     ??_in_adc_start_and_read:
  1411  0000C7                     ads1115_write_reg@addr:
  1412                           	opt stack 0
  1413  0000C7                     ads1115_read_reg@addr:
  1414                           	opt stack 0
  1415  0000C7                     key_polling@ktemp:
  1416                           	opt stack 0
  1417  0000C7                     ___awdiv@counter:
  1418                           	opt stack 0
  1419  0000C7                     ___lldiv@divisor:
  1420                           	opt stack 0
  1421                           
  1422                           ; 4 bytes @ 0x4
  1423  0000C7                     	ds	1
  1424  0000C8                     ??_ads1115_read_reg:
  1425  0000C8                     in_adc_start_and_read@ch:
  1426                           	opt stack 0
  1427  0000C8                     key_polling@t8:
  1428                           	opt stack 0
  1429  0000C8                     ___awdiv@sign:
  1430                           	opt stack 0
  1431  0000C8                     ___lwdiv@counter:
  1432                           	opt stack 0
  1433  0000C8                     ads1115_write_reg@value:
  1434                           	opt stack 0
  1435  0000C8                     ___wmul@product:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0x5
  1439  0000C8                     	ds	1
  1440  0000C9                     ?_key_waite_release:
  1441                           	opt stack 0
  1442  0000C9                     key_waite_release@timeout:
  1443                           	opt stack 0
  1444  0000C9                     ads1115_read_reg@t16:
  1445                           	opt stack 0
  1446  0000C9                     in_adc_start_and_read@ret:
  1447                           	opt stack 0
  1448  0000C9                     ___awdiv@quotient:
  1449                           	opt stack 0
  1450  0000C9                     ___lwdiv@quotient:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x6
  1454  0000C9                     	ds	1
  1455  0000CA                     ads1115_start_conversion@pAds1115:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x7
  1459  0000CA                     	ds	1
  1460  0000CB                     ??_lcd_set_com_seg:
  1461  0000CB                     ?_ads1115_read_conversion:
  1462                           	opt stack 0
  1463  0000CB                     ?___lwmod:
  1464                           	opt stack 0
  1465  0000CB                     key_waite_release@key:
  1466                           	opt stack 0
  1467  0000CB                     m_int16_2_str_4@buf:
  1468                           	opt stack 0
  1469  0000CB                     ads1115_read_conversion@pAds1115:
  1470                           	opt stack 0
  1471  0000CB                     ___lwmod@dividend:
  1472                           	opt stack 0
  1473  0000CB                     ___lldiv@quotient:
  1474                           	opt stack 0
  1475                           
  1476                           ; 4 bytes @ 0x8
  1477  0000CB                     	ds	2
  1478  0000CD                     key_waite_release@t8:
  1479                           	opt stack 0
  1480  0000CD                     m_int16_2_str_4@x:
  1481                           	opt stack 0
  1482  0000CD                     ___lwmod@divisor:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0xA
  1486  0000CD                     	ds	1
  1487  0000CE                     lcd_set_com_seg@com:
  1488                           	opt stack 0
  1489  0000CE                     ads1115_read_conversion@result:
  1490                           	opt stack 0
  1491                           
  1492                           ; 2 bytes @ 0xB
  1493  0000CE                     	ds	1
  1494  0000CF                     lcd_set_com_seg@offset:
  1495                           	opt stack 0
  1496  0000CF                     ___lldiv@counter:
  1497                           	opt stack 0
  1498  0000CF                     ___lwmod@counter:
  1499                           	opt stack 0
  1500                           
  1501                           ; 1 bytes @ 0xC
  1502  0000CF                     	ds	1
  1503  0000D0                     ?___int32_2_mflot32:
  1504                           	opt stack 0
  1505  0000D0                     lcd_set_com_seg@bits:
  1506                           	opt stack 0
  1507  0000D0                     key_adj_value_fixed_point@value:
  1508                           	opt stack 0
  1509  0000D0                     ___int32_2_mflot32@x:
  1510                           	opt stack 0
  1511                           
  1512                           ; 4 bytes @ 0xD
  1513  0000D0                     	ds	1
  1514  0000D1                     lcd_disp_level_bar@show:
  1515                           	opt stack 0
  1516  0000D1                     lcd_disp_chr_loc_0@code:
  1517                           	opt stack 0
  1518  0000D1                     lcd_disp_dp_loc_0@dp:
  1519                           	opt stack 0
  1520  0000D1                     lcd_disp_chr_loc_1@code:
  1521                           	opt stack 0
  1522  0000D1                     lcd_disp_dp_loc_1@dp:
  1523                           	opt stack 0
  1524  0000D1                     lcd_disp_chr_loc_2@code:
  1525                           	opt stack 0
  1526  0000D1                     lcd_disp_dp_loc_2@dp:
  1527                           	opt stack 0
  1528  0000D1                     lcd_disp_chr_loc_3@code:
  1529                           	opt stack 0
  1530  0000D1                     lcd_disp_chr_loc_4@code:
  1531                           	opt stack 0
  1532  0000D1                     lcd_disp_chr_loc_5@code:
  1533                           	opt stack 0
  1534  0000D1                     lcd_disp_chr_loc_6@code:
  1535                           	opt stack 0
  1536  0000D1                     lcd_disp_chr_loc_7@code:
  1537                           	opt stack 0
  1538  0000D1                     lcd_disp_logo@show:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0xE
  1542  0000D1                     	ds	1
  1543  0000D2                     key_adj_value_fixed_point@loc:
  1544                           	opt stack 0
  1545  0000D2                     lcd_disp_level_bar@__bar:
  1546                           	opt stack 0
  1547  0000D2                     lcd_show_dp@show:
  1548                           	opt stack 0
  1549  0000D2                     lcd_show_chr@chr:
  1550                           	opt stack 0
  1551                           
  1552                           ; 1 bytes @ 0xF
  1553  0000D2                     	ds	1
  1554  0000D3                     lcd_disp_level_bar@bar:
  1555                           	opt stack 0
  1556  0000D3                     lcd_show_dp@loc:
  1557                           	opt stack 0
  1558  0000D3                     lcd_show_chr@loc:
  1559                           	opt stack 0
  1560  0000D3                     key_adj_value_fixed_point@dloc:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x10
  1564  0000D3                     	ds	1
  1565  0000D4                     ??___int32_2_mflot32:
  1566  0000D4                     lcd_disp_level@level:
  1567                           	opt stack 0
  1568  0000D4                     lcd_show_chr@code:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0x11
  1572  0000D4                     	ds	1
  1573  0000D5                     lcd_disp_level@i:
  1574                           	opt stack 0
  1575  0000D5                     key_adj_value_fixed_point@t16:
  1576                           	opt stack 0
  1577  0000D5                     lcd_show_string_l0@str:
  1578                           	opt stack 0
  1579  0000D5                     lcd_show_string_l1@str:
  1580                           	opt stack 0
  1581  0000D5                     lcd_show_string@str:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x12
  1585  0000D5                     	ds	2
  1586  0000D7                     lcd_show_string_l0@t8:
  1587                           	opt stack 0
  1588  0000D7                     lcd_show_string_l1@t8:
  1589                           	opt stack 0
  1590  0000D7                     lcd_show_string@t8:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x14
  1594  0000D7                     	ds	1
  1595  0000D8                     ui_disp_adj_xfixed_pt@str:
  1596                           	opt stack 0
  1597  0000D8                     ___int32_2_mflot32@t32:
  1598                           	opt stack 0
  1599  0000D8                     ui_disp_start_cs600@buf:
  1600                           	opt stack 0
  1601  0000D8                     ui_disp_rtc_mm_ss@buf:
  1602                           	opt stack 0
  1603                           
  1604                           ; 10 bytes @ 0x15
  1605  0000D8                     	ds	2
  1606  0000DA                     ui_disp_adj_xfixed_pt@x:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x17
  1610  0000DA                     	ds	2
  1611  0000DC                     ui_disp_adj_xfixed_pt@loc:
  1612                           	opt stack 0
  1613  0000DC                     ___int32_2_mflot32@mf:
  1614                           	opt stack 0
  1615                           
  1616                           ; 4 bytes @ 0x19
  1617  0000DC                     	ds	1
  1618  0000DD                     ??_ui_disp_adj_xfixed_pt:
  1619                           
  1620                           ; 1 bytes @ 0x1A
  1621  0000DD                     	ds	1
  1622  0000DE                     ui_disp_start_cs600@dly:
  1623                           	opt stack 0
  1624                           
  1625                           ; 1 bytes @ 0x1B
  1626  0000DE                     	ds	1
  1627  0000DF                     ui_disp_start_cs600@t8:
  1628                           	opt stack 0
  1629  0000DF                     ui_disp_adj_xfixed_pt@buf:
  1630                           	opt stack 0
  1631                           
  1632                           ; 10 bytes @ 0x1C
  1633  0000DF                     	ds	1
  1634  0000E0                     ??_key_process_set_down_long:
  1635                           
  1636                           ; 1 bytes @ 0x1D
  1637  0000E0                     	ds	2
  1638  0000E2                     ui_disp_rtc_mm_ss@t8:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0x1F
  1642  0000E2                     	ds	7
  1643  0000E9                     key_process@tm:
  1644                           	opt stack 0
  1645                           
  1646                           ; 2 bytes @ 0x26
  1647  0000E9                     	ds	2
  1648  0000EB                     key_process@key:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x28
  1652  0000EB                     	ds	1
  1653  0000EC                     main@t16:
  1654                           	opt stack 0
  1655                           
  1656                           ; 2 bytes @ 0x29
  1657  0000EC                     	ds	2
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           
  1668                           	psect	cstackCOMRAM
  1669  000001                     __pcstackCOMRAM:
  1670                           	opt stack 0
  1671  000001                     ??_handler_interrupt_hight:
  1672  000001                     
  1673                           ; 2 bytes @ 0x0
  1674  000001                     	ds	14
  1675  00000F                     ??_handler_interrupt_low:
  1676                           
  1677                           ; 1 bytes @ 0xE
  1678  00000F                     	ds	17
  1679  000020                     ??___enter_menu_set_density:
  1680  000020                     ??___enter_menu_set_pose:
  1681  000020                     ?___exp_10:
  1682                           	opt stack 0
  1683  000020                     key_shift_loc_fixed_point@t8:
  1684                           	opt stack 0
  1685  000020                     ___x_arrange_str@i:
  1686                           	opt stack 0
  1687  000020                     m_int8_2_hex@t8:
  1688                           	opt stack 0
  1689  000020                     iic_send_ack@ack:
  1690                           	opt stack 0
  1691  000020                     iic_waite_ack@timeout:
  1692                           	opt stack 0
  1693  000020                     iic_received_byte@ret:
  1694                           	opt stack 0
  1695  000020                     lcd_set_com_seg@seg:
  1696                           	opt stack 0
  1697  000020                     lcd_disp_all@x:
  1698                           	opt stack 0
  1699  000020                     rtc_get@t8:
  1700                           	opt stack 0
  1701  000020                     ___awmod@counter:
  1702                           	opt stack 0
  1703  000020                     ___enter_menu_set_base_zero@fps:
  1704                           	opt stack 0
  1705  000020                     delay_us@dly:
  1706                           	opt stack 0
  1707  000020                     rtc_set@rtc:
  1708                           	opt stack 0
  1709  000020                     ticker_dly@ms:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0x1F
  1713  000020                     	ds	1
  1714  000021                     iic_received_byte@i:
  1715                           	opt stack 0
  1716  000021                     lcd_set_com_seg@show:
  1717                           	opt stack 0
  1718  000021                     lcd_disp_all@i:
  1719                           	opt stack 0
  1720  000021                     ___awmod@sign:
  1721                           	opt stack 0
  1722                           
  1723                           ; 1 bytes @ 0x20
  1724  000021                     	ds	1
  1725  000022                     tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           postdec1	equ	0xFE5
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           
  1735                           ; 1 bytes @ 0x21
  1736 ;;
  1737 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1738 ;;
  1739 ;; *************** function _main *****************
  1740 ;; Defined at:
  1741 ;;		line 5 in file "src/app/main.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  t16             2   41[BANK0 ] unsigned int 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  2  319[None  ] int 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;Total ram usage:        2 bytes
  1760 ;; Hardware stack levels required when called:   14
  1761 ;; This function calls:
  1762 ;;		_ads1115_init_all_chip
  1763 ;;		_ads1115_read_conversion
  1764 ;;		_ads1115_read_reg
  1765 ;;		_ads1115_start_conversion
  1766 ;;		_in_adc_init
  1767 ;;		_in_adc_start_and_read
  1768 ;;		_key_polling
  1769 ;;		_key_process
  1770 ;;		_lcd_disp_level
  1771 ;;		_lcd_init
  1772 ;;		_rtc_set
  1773 ;;		_soc_init
  1774 ;;		_ticker_dly
  1775 ;;		_ui_disp_rtc_mm_ss
  1776 ;;		_ui_disp_start_cs600
  1777 ;; This function is called by:
  1778 ;;		Startup code after reset
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text0
  1783  000C24                     __ptext0:
  1784                           	opt stack 0
  1785  000C24                     _main:
  1786                           	opt stack 17
  1787                           
  1788                           ;main.c: 7: uint16_t t16;
  1789                           ;main.c: 8: __nop();
  1790                           
  1791                           ;incstack = 0
  1792  000C24  F000               	nop	
  1793                           
  1794                           ;main.c: 10: soc_init();
  1795  000C26  EC4A  F013         	call	_soc_init	;wreg free
  1796                           
  1797                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  1798  000C2A  0EF7               	movlw	low _defalutRtc
  1799  000C2C  6E20               	movwf	rtc_set@rtc,c
  1800  000C2E  0E00               	movlw	high _defalutRtc
  1801  000C30  6E21               	movwf	rtc_set@rtc+1,c
  1802  000C32  ECF0  F007         	call	_rtc_set	;wreg free
  1803                           
  1804                           ;main.c: 12: lcd_init();
  1805  000C36  EC5A  F013         	call	_lcd_init	;wreg free
  1806                           
  1807                           ;main.c: 14: ads1115_init_all_chip();
  1808  000C3A  EC6C  F012         	call	_ads1115_init_all_chip	;wreg free
  1809                           
  1810                           ;main.c: 16: ads1115_start_conversion(&ads1115Chip0);
  1811  000C3E  0E9D               	movlw	low _ads1115Chip0
  1812  000C40  0100               	movlb	0	; () banked
  1813  000C42  6FCA               	movwf	ads1115_start_conversion@pAds1115& (0+255),b
  1814  000C44  0E00               	movlw	high _ads1115Chip0
  1815  000C46  0100               	movlb	0	; () banked
  1816  000C48  6FCB               	movwf	(ads1115_start_conversion@pAds1115+1)& (0+255),b
  1817  000C4A  ECAD  F012         	call	_ads1115_start_conversion	;wreg free
  1818                           
  1819                           ;main.c: 17: t16=ads1115_read_reg(&ads1115Chip1,(0x01));
  1820  000C4E  0E8D               	movlw	low _ads1115Chip1
  1821  000C50  0100               	movlb	0	; () banked
  1822  000C52  6FC5               	movwf	ads1115_read_reg@pAds1115& (0+255),b
  1823  000C54  0E00               	movlw	high _ads1115Chip1
  1824  000C56  0100               	movlb	0	; () banked
  1825  000C58  6FC6               	movwf	(ads1115_read_reg@pAds1115+1)& (0+255),b
  1826  000C5A  0E01               	movlw	1
  1827  000C5C  0100               	movlb	0	; () banked
  1828  000C5E  6FC7               	movwf	ads1115_read_reg@addr& (0+255),b
  1829  000C60  ECA7  F002         	call	_ads1115_read_reg	;wreg free
  1830  000C64  C0C5  F0EC         	movff	?_ads1115_read_reg,main@t16
  1831  000C68  C0C6  F0ED         	movff	?_ads1115_read_reg+1,main@t16+1
  1832                           
  1833                           ;main.c: 18: ticker_dly(100);
  1834  000C6C  0E00               	movlw	0
  1835  000C6E  6E21               	movwf	ticker_dly@ms+1,c
  1836  000C70  0E64               	movlw	100
  1837  000C72  6E20               	movwf	ticker_dly@ms,c
  1838  000C74  EC83  F012         	call	_ticker_dly	;wreg free
  1839                           
  1840                           ;main.c: 19: t16=ads1115_read_conversion(&ads1115Chip0);
  1841  000C78  0E9D               	movlw	low _ads1115Chip0
  1842  000C7A  0100               	movlb	0	; () banked
  1843  000C7C  6FCB               	movwf	ads1115_read_conversion@pAds1115& (0+255),b
  1844  000C7E  0E00               	movlw	high _ads1115Chip0
  1845  000C80  0100               	movlb	0	; () banked
  1846  000C82  6FCC               	movwf	(ads1115_read_conversion@pAds1115+1)& (0+255),b
  1847  000C84  EC1B  F010         	call	_ads1115_read_conversion	;wreg free
  1848  000C88  C0CB  F0EC         	movff	?_ads1115_read_conversion,main@t16
  1849  000C8C  C0CC  F0ED         	movff	?_ads1115_read_conversion+1,main@t16+1
  1850                           
  1851                           ;main.c: 21: in_adc_init();
  1852  000C90  ECF9  F012         	call	_in_adc_init	;wreg free
  1853                           
  1854                           ;main.c: 22: t16=in_adc_start_and_read(3);
  1855  000C94  0E03               	movlw	3
  1856  000C96  EC9D  F00D         	call	_in_adc_start_and_read
  1857  000C9A  C0C5  F0EC         	movff	?_in_adc_start_and_read,main@t16
  1858  000C9E  C0C6  F0ED         	movff	?_in_adc_start_and_read+1,main@t16+1
  1859                           
  1860                           ;main.c: 23: ui_disp_start_cs600(10);
  1861  000CA2  0E0A               	movlw	10
  1862  000CA4  EC52  F009         	call	_ui_disp_start_cs600
  1863                           
  1864                           ;main.c: 25: lcd_disp_level(60);
  1865  000CA8  0E3C               	movlw	60
  1866  000CAA  ECC1  F00E         	call	_lcd_disp_level
  1867                           
  1868                           ;main.c: 27: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  1869  000CAE  9893               	bcf	3987,4,c	;volatile
  1870  000CB0  888A               	bsf	3978,4,c	;volatile
  1871                           
  1872                           ;main.c: 29: __nop();
  1873  000CB2  F000               	nop	
  1874  000CB4                     l8025:
  1875                           
  1876                           ;main.c: 31: if(glbEvent & (0x02)){
  1877  000CB4  0100               	movlb	0	; () banked
  1878  000CB6  A38B               	btfss	_glbEvent& (0+255),1,b	;volatile
  1879  000CB8  D006               	goto	l8035
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 32: glbEvent &= ~(0x02);
  1883  000CBA  0100               	movlb	0	; () banked
  1884  000CBC  938B               	bcf	_glbEvent& (0+255),1,b	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;main.c: 33: __nop();
  1888  000CBE  F000               	nop	
  1889                           
  1890                           ;main.c: 34: ui_disp_rtc_mm_ss();
  1891  000CC0  ECA7  F008         	call	_ui_disp_rtc_mm_ss	;wreg free
  1892                           
  1893                           ;main.c: 35: __nop();
  1894  000CC4  F000               	nop	
  1895  000CC6                     l8035:
  1896                           
  1897                           ;main.c: 36: }
  1898                           ;main.c: 37: if(glbEvent & (0x01)){
  1899  000CC6  0100               	movlb	0	; () banked
  1900  000CC8  A18B               	btfss	_glbEvent& (0+255),0,b	;volatile
  1901  000CCA  D003               	goto	l8041
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main.c: 38: glbEvent &= ~(0x01);
  1905  000CCC  0100               	movlb	0	; () banked
  1906  000CCE  918B               	bcf	_glbEvent& (0+255),0,b	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 39: __nop();
  1910  000CD0  F000               	nop	
  1911  000CD2                     l8041:
  1912                           
  1913                           ;main.c: 40: }
  1914                           ;main.c: 41: keyValue=key_polling();
  1915  000CD2  ECEF  F00E         	call	_key_polling	;wreg free
  1916  000CD6  0100               	movlb	0	; () banked
  1917  000CD8  6F8C               	movwf	_keyValue& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;main.c: 42: if(keyValue!=(0x0))key_process();
  1921  000CDA  0100               	movlb	0	; () banked
  1922  000CDC  518C               	movf	_keyValue& (0+255),w,b	;volatile
  1923  000CDE  B4D8               	btfsc	status,2,c
  1924  000CE0  D7E9               	goto	l8025
  1925                           
  1926                           ; BSR set to: 0
  1927  000CE2  EC46  F00C         	call	_key_process	;wreg free
  1928  000CE6  D7E6               	goto	l8025
  1929  000CE8                     __end_of_main:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _ui_disp_start_cs600 *****************
  1943 ;; Defined at:
  1944 ;;		line 113 in file "src/api/ui.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dly             1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  dly             1   27[BANK0 ] unsigned char 
  1949 ;;  buf             6   21[BANK0 ] unsigned char [6]
  1950 ;;  t8              1   28[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        8 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    9
  1967 ;; This function calls:
  1968 ;;		_lcd_disp_all
  1969 ;;		_lcd_disp_level
  1970 ;;		_lcd_disp_logo
  1971 ;;		_lcd_disp_refresh
  1972 ;;		_lcd_show_string_l0
  1973 ;;		_lcd_show_string_l1
  1974 ;;		_m_int8_2_hex
  1975 ;;		_ticker_dly
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text1
  1982  0012A4                     __ptext1:
  1983                           	opt stack 0
  1984  0012A4                     _ui_disp_start_cs600:
  1985                           	opt stack 21
  1986                           
  1987                           ;incstack = 0
  1988                           ;ui_disp_start_cs600@dly stored from wreg
  1989  0012A4  0100               	movlb	0	; () banked
  1990  0012A6  6FDE               	movwf	ui_disp_start_cs600@dly& (0+255),b
  1991                           
  1992                           ;ui.c: 115: uint8_t t8;
  1993                           ;ui.c: 116: uint8_t buf[6]="-00-";
  1994  0012A8  EE20  F0EE         	lfsr	2,ui_disp_start_cs600@F7582
  1995  0012AC  EE10  F0D8         	lfsr	1,ui_disp_start_cs600@buf
  1996  0012B0  0E05               	movlw	5
  1997  0012B2                     u5571:
  1998  0012B2  CFDB FFE3          	movff	plusw2,plusw1
  1999  0012B6  06E8               	decf	wreg,f,c
  2000  0012B8  E2FC               	bc	u5571
  2001                           
  2002                           ;ui.c: 117: lcd_disp_all(0);;
  2003  0012BA  0E00               	movlw	0
  2004  0012BC  ECC2  F012         	call	_lcd_disp_all
  2005                           
  2006                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  2007  0012C0  0EED               	movlw	low STR_1
  2008  0012C2  0100               	movlb	0	; () banked
  2009  0012C4  6FD5               	movwf	lcd_show_string_l0@str& (0+255),b
  2010  0012C6  0EFF               	movlw	high STR_1
  2011  0012C8  0100               	movlb	0	; () banked
  2012  0012CA  6FD6               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  2013  0012CC  EC3E  F010         	call	_lcd_show_string_l0	;wreg free
  2014                           
  2015                           ;ui.c: 119: lcd_disp_logo(1);
  2016  0012D0  0E01               	movlw	1
  2017  0012D2  ECE2  F011         	call	_lcd_disp_logo
  2018                           
  2019                           ;ui.c: 120: t8=dly;
  2020  0012D6  C0DE  F0DF         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  2021                           
  2022                           ;ui.c: 121: if(t8<1)t8=1;
  2023  0012DA  0100               	movlb	0	; () banked
  2024  0012DC  51DF               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2025  0012DE  0100               	movlb	0	; () banked
  2026  0012E0  A4D8               	btfss	status,2,c
  2027  0012E2  D028               	goto	l7773
  2028                           
  2029                           ; BSR set to: 0
  2030  0012E4  0E01               	movlw	1
  2031  0012E6  0100               	movlb	0	; () banked
  2032  0012E8  6FDF               	movwf	ui_disp_start_cs600@t8& (0+255),b
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;ui.c: 122: while(t8){
  2036  0012EA  D024               	goto	l7773
  2037  0012EC                     l7759:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  2041  0012EC  0ED9               	movlw	low (ui_disp_start_cs600@buf+1)
  2042  0012EE  0100               	movlb	0	; () banked
  2043  0012F0  6FC3               	movwf	m_int8_2_hex@str& (0+255),b
  2044  0012F2  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  2045  0012F4  0100               	movlb	0	; () banked
  2046  0012F6  6FC4               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2047  0012F8  0100               	movlb	0	; () banked
  2048  0012FA  05DF               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  2049  0012FC  0100               	movlb	0	; () banked
  2050  0012FE  6FC5               	movwf	m_int8_2_hex@b& (0+255),b
  2051  001300  EC1D  F00F         	call	_m_int8_2_hex	;wreg free
  2052                           
  2053                           ;ui.c: 124: buf[4]='\0';
  2054  001304  0E00               	movlw	0
  2055  001306  0100               	movlb	0	; () banked
  2056  001308  6FDC               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;ui.c: 125: lcd_show_string_l1(buf);
  2060  00130A  0ED8               	movlw	low ui_disp_start_cs600@buf
  2061  00130C  0100               	movlb	0	; () banked
  2062  00130E  6FD5               	movwf	lcd_show_string_l1@str& (0+255),b
  2063  001310  0E00               	movlw	high ui_disp_start_cs600@buf
  2064  001312  0100               	movlb	0	; () banked
  2065  001314  6FD6               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  2066  001316  EC82  F010         	call	_lcd_show_string_l1	;wreg free
  2067                           
  2068                           ;ui.c: 126: lcd_disp_level(60);
  2069  00131A  0E3C               	movlw	60
  2070  00131C  ECC1  F00E         	call	_lcd_disp_level
  2071                           
  2072                           ;ui.c: 127: lcd_disp_refresh();
  2073  001320  ECD2  F00D         	call	_lcd_disp_refresh	;wreg free
  2074                           
  2075                           ;ui.c: 128: ticker_dly(1000);
  2076  001324  0E03               	movlw	3
  2077  001326  6E21               	movwf	ticker_dly@ms+1,c
  2078  001328  0EE8               	movlw	232
  2079  00132A  6E20               	movwf	ticker_dly@ms,c
  2080  00132C  EC83  F012         	call	_ticker_dly	;wreg free
  2081                           
  2082                           ;ui.c: 129: t8--;
  2083  001330  0100               	movlb	0	; () banked
  2084  001332  07DF               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  2085  001334                     l7773:
  2086                           
  2087                           ; BSR set to: 0
  2088  001334  0100               	movlb	0	; () banked
  2089  001336  51DF               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2090  001338  0100               	movlb	0	; () banked
  2091  00133A  B4D8               	btfsc	status,2,c
  2092  00133C  0012               	return	
  2093  00133E  D7D6               	goto	l7759
  2094  001340                     __end_of_ui_disp_start_cs600:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           plusw1	equ	0xFE3
  2104                           fsr1h	equ	0xFE2
  2105                           fsr1l	equ	0xFE1
  2106                           plusw2	equ	0xFDB
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _ticker_dly *****************
  2110 ;; Defined at:
  2111 ;;		line 44 in file "src/soc/ticker.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  ms              2   31[COMRAM] unsigned int 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;Total ram usage:        2 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    4
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_ui_disp_start_cs600
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text2
  2141  002506                     __ptext2:
  2142                           	opt stack 0
  2143  002506                     _ticker_dly:
  2144                           	opt stack 25
  2145                           
  2146                           ;ticker.c: 46: dlyTicker=0;
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;incstack = 0
  2150  002506  0E00               	movlw	0
  2151  002508  6E32               	movwf	_dlyTicker+1,c
  2152  00250A  0E00               	movlw	0
  2153  00250C  6E31               	movwf	_dlyTicker,c
  2154                           
  2155                           ;ticker.c: 47: dlyTickerEn=1;
  2156  00250E  0E01               	movlw	1
  2157  002510  6E37               	movwf	_dlyTickerEn,c
  2158                           
  2159                           ;ticker.c: 48: while(dlyTicker<ms){
  2160  002512  D001               	goto	l7639
  2161  002514                     l1407:
  2162                           
  2163                           ;ticker.c: 49: __nop();
  2164  002514  F000               	nop	
  2165  002516                     l7639:
  2166  002516  5020               	movf	ticker_dly@ms,w,c
  2167  002518  5C31               	subwf	_dlyTicker,w,c
  2168  00251A  5021               	movf	ticker_dly@ms+1,w,c
  2169  00251C  5832               	subwfb	_dlyTicker+1,w,c
  2170  00251E  A0D8               	btfss	status,0,c
  2171  002520  D7F9               	goto	l1407
  2172                           
  2173                           ;ticker.c: 50: }
  2174                           ;ticker.c: 51: dlyTickerEn=0;
  2175  002522  0E00               	movlw	0
  2176  002524  6E37               	movwf	_dlyTickerEn,c
  2177                           
  2178                           ;ticker.c: 52: dlyTicker=0;
  2179  002526  0E00               	movlw	0
  2180  002528  6E32               	movwf	_dlyTicker+1,c
  2181  00252A  0E00               	movlw	0
  2182  00252C  6E31               	movwf	_dlyTicker,c
  2183  00252E  0012               	return		;funcret
  2184  002530                     __end_of_ticker_dly:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           plusw1	equ	0xFE3
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           plusw2	equ	0xFDB
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _lcd_show_string_l1 *****************
  2200 ;; Defined at:
  2201 ;;		line 524 in file "src/driver/lcd.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  str             2   18[BANK0 ] PTR unsigned char 
  2204 ;;		 -> ui_disp_start_cs600@buf(6), 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  t8              1   20[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        3 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    8
  2223 ;; This function calls:
  2224 ;;		_lcd_show_chr
  2225 ;; This function is called by:
  2226 ;;		_ui_disp_start_cs600
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text3
  2231  002104                     __ptext3:
  2232                           	opt stack 0
  2233  002104                     _lcd_show_string_l1:
  2234                           	opt stack 21
  2235                           
  2236                           ;lcd.c: 526: uint8_t t8=0;
  2237                           
  2238                           ;incstack = 0
  2239  002104  0E00               	movlw	0
  2240  002106  0100               	movlb	0	; () banked
  2241  002108  6FD7               	movwf	lcd_show_string_l1@t8& (0+255),b
  2242                           
  2243                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  2244  00210A  D011               	goto	l7609
  2245  00210C                     l7603:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  2249  00210C  C0D5  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2250  002110  C0D6  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2251  002114  50DF               	movf	indf2,w,c
  2252  002116  0100               	movlb	0	; () banked
  2253  002118  6FD2               	movwf	lcd_show_chr@chr& (0+255),b
  2254  00211A  0100               	movlb	0	; () banked
  2255  00211C  51D7               	movf	lcd_show_string_l1@t8& (0+255),w,b
  2256  00211E  0F04               	addlw	4
  2257  002120  ECA0  F009         	call	_lcd_show_chr
  2258                           
  2259                           ;lcd.c: 529: str++;
  2260  002124  0100               	movlb	0	; () banked
  2261  002126  4BD5               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  2262  002128  2BD6               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;lcd.c: 530: t8++;
  2266  00212A  0100               	movlb	0	; () banked
  2267  00212C  2BD7               	incf	lcd_show_string_l1@t8& (0+255),f,b
  2268  00212E                     l7609:
  2269                           
  2270                           ; BSR set to: 0
  2271  00212E  C0D5  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2272  002132  C0D6  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2273  002136  50DF               	movf	indf2,w,c
  2274  002138  B4D8               	btfsc	status,2,c
  2275  00213A  0012               	return	
  2276                           
  2277                           ; BSR set to: 0
  2278  00213C  0E03               	movlw	3
  2279  00213E  0100               	movlb	0	; () banked
  2280  002140  65D7               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  2281  002142  D7E4               	goto	l7603
  2282  002144  0012               	return	
  2283  002146                     __end_of_lcd_show_string_l1:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           plusw1	equ	0xFE3
  2293                           fsr1h	equ	0xFE2
  2294                           fsr1l	equ	0xFE1
  2295                           indf2	equ	0xFDF
  2296                           plusw2	equ	0xFDB
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _lcd_show_string_l0 *****************
  2302 ;; Defined at:
  2303 ;;		line 514 in file "src/driver/lcd.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  str             2   18[BANK0 ] PTR unsigned char 
  2306 ;;		 -> STR_1(5), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  t8              1   20[BANK0 ] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    8
  2325 ;; This function calls:
  2326 ;;		_lcd_show_chr
  2327 ;; This function is called by:
  2328 ;;		_ui_disp_start_cs600
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text4
  2333  00207C                     __ptext4:
  2334                           	opt stack 0
  2335  00207C                     _lcd_show_string_l0:
  2336                           	opt stack 21
  2337                           
  2338                           ;lcd.c: 516: uint8_t t8=0;
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;incstack = 0
  2342  00207C  0E00               	movlw	0
  2343  00207E  0100               	movlb	0	; () banked
  2344  002080  6FD7               	movwf	lcd_show_string_l0@t8& (0+255),b
  2345                           
  2346                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  2347  002082  D010               	goto	l7581
  2348  002084                     l7575:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  2352  002084  C0D5  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2353  002088  C0D6  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2354  00208C                     	if	0	;tblptru may be non-zero
  2355  00208C                     	endif
  2356  00208C                     	if	0	;tblptru may be non-zero
  2357  00208C                     	endif
  2358  00208C  0008               	tblrd		*
  2359  00208E  CFF5 F0D2          	movff	tablat,lcd_show_chr@chr
  2360  002092  0100               	movlb	0	; () banked
  2361  002094  51D7               	movf	lcd_show_string_l0@t8& (0+255),w,b
  2362  002096  ECA0  F009         	call	_lcd_show_chr
  2363                           
  2364                           ;lcd.c: 519: str++;
  2365  00209A  0100               	movlb	0	; () banked
  2366  00209C  4BD5               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  2367  00209E  2BD6               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;lcd.c: 520: t8++;
  2371  0020A0  0100               	movlb	0	; () banked
  2372  0020A2  2BD7               	incf	lcd_show_string_l0@t8& (0+255),f,b
  2373  0020A4                     l7581:
  2374                           
  2375                           ; BSR set to: 0
  2376  0020A4  C0D5  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2377  0020A8  C0D6  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2378  0020AC                     	if	0	;tblptru may be non-zero
  2379  0020AC                     	endif
  2380  0020AC                     	if	0	;tblptru may be non-zero
  2381  0020AC                     	endif
  2382  0020AC  0008               	tblrd		*
  2383  0020AE  50F5               	movf	tablat,w,c
  2384  0020B0  0900               	iorlw	0
  2385  0020B2  B4D8               	btfsc	status,2,c
  2386  0020B4  0012               	return	
  2387                           
  2388                           ; BSR set to: 0
  2389  0020B6  0E03               	movlw	3
  2390  0020B8  0100               	movlb	0	; () banked
  2391  0020BA  65D7               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  2392  0020BC  D7E3               	goto	l7575
  2393  0020BE  0012               	return	
  2394  0020C0                     __end_of_lcd_show_string_l0:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           plusw1	equ	0xFE3
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           plusw2	equ	0xFDB
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _lcd_disp_logo *****************
  2413 ;; Defined at:
  2414 ;;		line 378 in file "src/driver/lcd.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  show            1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  show            1   14[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        1 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    6
  2435 ;; This function calls:
  2436 ;;		_lcd_set_com_seg
  2437 ;; This function is called by:
  2438 ;;		_ui_disp_start_cs600
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text5
  2443  0023C4                     __ptext5:
  2444                           	opt stack 0
  2445  0023C4                     _lcd_disp_logo:
  2446                           	opt stack 23
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;incstack = 0
  2450                           ;lcd_disp_logo@show stored from wreg
  2451  0023C4  0100               	movlb	0	; () banked
  2452  0023C6  6FD1               	movwf	lcd_disp_logo@show& (0+255),b
  2453                           
  2454                           ;lcd.c: 380: if(show)
  2455  0023C8  0100               	movlb	0	; () banked
  2456  0023CA  51D1               	movf	lcd_disp_logo@show& (0+255),w,b
  2457  0023CC  0100               	movlb	0	; () banked
  2458  0023CE  B4D8               	btfsc	status,2,c
  2459  0023D0  D008               	goto	l7589
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  2463  0023D2  0E0D               	movlw	13
  2464  0023D4  6E20               	movwf	lcd_set_com_seg@seg,c
  2465  0023D6  0E01               	movlw	1
  2466  0023D8  6E21               	movwf	lcd_set_com_seg@show,c
  2467  0023DA  0E02               	movlw	2
  2468  0023DC  EC74  F006         	call	_lcd_set_com_seg
  2469  0023E0  0012               	return	
  2470  0023E2                     l7589:
  2471                           
  2472                           ;lcd.c: 382: else
  2473                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  2474  0023E2  0E0D               	movlw	13
  2475  0023E4  6E20               	movwf	lcd_set_com_seg@seg,c
  2476  0023E6  0E00               	movlw	0
  2477  0023E8  6E21               	movwf	lcd_set_com_seg@show,c
  2478  0023EA  0E02               	movlw	2
  2479  0023EC  EC74  F006         	call	_lcd_set_com_seg
  2480  0023F0  0012               	return	
  2481  0023F2                     __end_of_lcd_disp_logo:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec1	equ	0xFE5
  2490                           plusw1	equ	0xFE3
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           indf2	equ	0xFDF
  2494                           plusw2	equ	0xFDB
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _ui_disp_rtc_mm_ss *****************
  2500 ;; Defined at:
  2501 ;;		line 133 in file "src/api/ui.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  buf            10   21[BANK0 ] unsigned char [10]
  2506 ;;  t8              1   31[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;Total ram usage:       11 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    9
  2523 ;; This function calls:
  2524 ;;		_lcd_disp_level
  2525 ;;		_lcd_disp_refresh
  2526 ;;		_lcd_show_dp
  2527 ;;		_lcd_show_string
  2528 ;;		_m_int8_2_hex
  2529 ;;		_rtc_get
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text6
  2536  00114E                     __ptext6:
  2537                           	opt stack 0
  2538  00114E                     _ui_disp_rtc_mm_ss:
  2539                           	opt stack 21
  2540                           
  2541                           ;ui.c: 135: uint8_t buf[10];
  2542                           ;ui.c: 136: uint8_t t8;
  2543                           ;ui.c: 137: if(RTCCFGbits.HALFSEC){
  2544                           
  2545                           ;incstack = 0
  2546  00114E  010F               	movlb	15	; () banked
  2547  001150  A75F               	btfss	95,3,b	;volatile
  2548  001152  D007               	goto	l7779
  2549                           
  2550                           ; BSR set to: 15
  2551                           ;ui.c: 138: lcd_show_dp(1,0);
  2552  001154  0E00               	movlw	0
  2553  001156  0100               	movlb	0	; () banked
  2554  001158  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  2555  00115A  0E01               	movlw	1
  2556  00115C  EC31  F00D         	call	_lcd_show_dp
  2557                           
  2558                           ;ui.c: 139: }else{
  2559  001160  D049               	goto	l7805
  2560  001162                     l7779:
  2561                           
  2562                           ;ui.c: 140: rtc_get();
  2563  001162  ECA3  F010         	call	_rtc_get	;wreg free
  2564                           
  2565                           ;ui.c: 141: t8=glRtc.hour;
  2566  001166  C07B  F0E2         	movff	_glRtc+3,ui_disp_rtc_mm_ss@t8
  2567                           
  2568                           ;ui.c: 142: m_int8_2_hex(buf,t8);
  2569  00116A  0ED8               	movlw	low ui_disp_rtc_mm_ss@buf
  2570  00116C  0100               	movlb	0	; () banked
  2571  00116E  6FC3               	movwf	m_int8_2_hex@str& (0+255),b
  2572  001170  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2573  001172  0100               	movlb	0	; () banked
  2574  001174  6FC4               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2575  001176  C0E2  F0C5         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2576  00117A  EC1D  F00F         	call	_m_int8_2_hex	;wreg free
  2577                           
  2578                           ;ui.c: 143: t8=glRtc.minute;
  2579  00117E  C07C  F0E2         	movff	_glRtc+4,ui_disp_rtc_mm_ss@t8
  2580                           
  2581                           ;ui.c: 144: m_int8_2_hex(buf+2,t8);
  2582  001182  0EDA               	movlw	low (ui_disp_rtc_mm_ss@buf+2)
  2583  001184  0100               	movlb	0	; () banked
  2584  001186  6FC3               	movwf	m_int8_2_hex@str& (0+255),b
  2585  001188  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+2)
  2586  00118A  0100               	movlb	0	; () banked
  2587  00118C  6FC4               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2588  00118E  C0E2  F0C5         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2589  001192  EC1D  F00F         	call	_m_int8_2_hex	;wreg free
  2590                           
  2591                           ;ui.c: 146: t8=glRtc.month;
  2592  001196  C079  F0E2         	movff	_glRtc+1,ui_disp_rtc_mm_ss@t8
  2593                           
  2594                           ;ui.c: 147: m_int8_2_hex(buf+4,t8);
  2595  00119A  0EDC               	movlw	low (ui_disp_rtc_mm_ss@buf+4)
  2596  00119C  0100               	movlb	0	; () banked
  2597  00119E  6FC3               	movwf	m_int8_2_hex@str& (0+255),b
  2598  0011A0  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+4)
  2599  0011A2  0100               	movlb	0	; () banked
  2600  0011A4  6FC4               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2601  0011A6  C0E2  F0C5         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2602  0011AA  EC1D  F00F         	call	_m_int8_2_hex	;wreg free
  2603                           
  2604                           ;ui.c: 148: t8=glRtc.date;
  2605  0011AE  C07A  F0E2         	movff	_glRtc+2,ui_disp_rtc_mm_ss@t8
  2606                           
  2607                           ;ui.c: 149: m_int8_2_hex(buf+6,t8);
  2608  0011B2  0EDE               	movlw	low (ui_disp_rtc_mm_ss@buf+6)
  2609  0011B4  0100               	movlb	0	; () banked
  2610  0011B6  6FC3               	movwf	m_int8_2_hex@str& (0+255),b
  2611  0011B8  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+6)
  2612  0011BA  0100               	movlb	0	; () banked
  2613  0011BC  6FC4               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2614  0011BE  C0E2  F0C5         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2615  0011C2  EC1D  F00F         	call	_m_int8_2_hex	;wreg free
  2616                           
  2617                           ;ui.c: 150: buf[8]='\0';
  2618  0011C6  0E00               	movlw	0
  2619  0011C8  0100               	movlb	0	; () banked
  2620  0011CA  6FE0               	movwf	(ui_disp_rtc_mm_ss@buf+8)& (0+255),b
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;ui.c: 152: lcd_show_string(buf);
  2624  0011CC  0ED8               	movlw	low ui_disp_rtc_mm_ss@buf
  2625  0011CE  0100               	movlb	0	; () banked
  2626  0011D0  6FD5               	movwf	lcd_show_string@str& (0+255),b
  2627  0011D2  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2628  0011D4  0100               	movlb	0	; () banked
  2629  0011D6  6FD6               	movwf	(lcd_show_string@str+1)& (0+255),b
  2630  0011D8  ECFA  F00C         	call	_lcd_show_string	;wreg free
  2631                           
  2632                           ;ui.c: 153: lcd_show_dp(1,1);
  2633  0011DC  0E01               	movlw	1
  2634  0011DE  0100               	movlb	0	; () banked
  2635  0011E0  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  2636  0011E2  0E01               	movlw	1
  2637  0011E4  EC31  F00D         	call	_lcd_show_dp
  2638                           
  2639                           ;ui.c: 154: lcd_show_dp(5,1);
  2640  0011E8  0E01               	movlw	1
  2641  0011EA  0100               	movlb	0	; () banked
  2642  0011EC  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  2643  0011EE  0E05               	movlw	5
  2644  0011F0  EC31  F00D         	call	_lcd_show_dp
  2645  0011F4                     l7805:
  2646                           
  2647                           ;ui.c: 155: }
  2648                           ;ui.c: 156: lcd_disp_level(60);
  2649  0011F4  0E3C               	movlw	60
  2650  0011F6  ECC1  F00E         	call	_lcd_disp_level
  2651                           
  2652                           ;ui.c: 157: lcd_disp_refresh();
  2653  0011FA  ECD2  F00D         	call	_lcd_disp_refresh	;wreg free
  2654  0011FE  0012               	return		;funcret
  2655  001200                     __end_of_ui_disp_rtc_mm_ss:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           postdec1	equ	0xFE5
  2664                           plusw1	equ	0xFE3
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           indf2	equ	0xFDF
  2668                           plusw2	equ	0xFDB
  2669                           fsr2h	equ	0xFDA
  2670                           fsr2l	equ	0xFD9
  2671                           status	equ	0xFD8
  2672                           
  2673 ;; *************** function _rtc_get *****************
  2674 ;; Defined at:
  2675 ;;		line 74 in file "src/soc/rtc.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  t8              1   31[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    4
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_ui_disp_rtc_mm_ss
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text7
  2704  002146                     __ptext7:
  2705                           	opt stack 0
  2706  002146                     _rtc_get:
  2707                           	opt stack 25
  2708                           
  2709                           ;rtc.c: 76: uint8_t t8;
  2710                           ;rtc.c: 77: stRTCCFGbits.RTCPTR=3;
  2711                           
  2712                           ;incstack = 0
  2713  002146  0E03               	movlw	3
  2714  002148  010F               	movlb	15	; () banked
  2715  00214A  135F               	iorwf	95,f,b	;volatile
  2716                           
  2717                           ; BSR set to: 15
  2718                           ;rtc.c: 78: glRtc.year=RTCVALL;
  2719  00214C  CF5C F078          	movff	3932,_glRtc	;volatile
  2720                           
  2721                           ; BSR set to: 15
  2722                           ;rtc.c: 80: t8=RTCVALH;
  2723  002150  CF5D F020          	movff	3933,rtc_get@t8	;volatile
  2724                           
  2725                           ;rtc.c: 81: stRTCCFGbits.RTCPTR=2;
  2726  002154  010F               	movlb	15	; () banked
  2727  002156  515F               	movf	95,w,b	;volatile
  2728  002158  0BFC               	andlw	-4
  2729  00215A  0902               	iorlw	2
  2730  00215C  6F5F               	movwf	95,b	;volatile
  2731                           
  2732                           ; BSR set to: 15
  2733                           ;rtc.c: 82: glRtc.date=RTCVALL;
  2734  00215E  CF5C F07A          	movff	3932,_glRtc+2	;volatile
  2735                           
  2736                           ; BSR set to: 15
  2737                           ;rtc.c: 83: glRtc.month=RTCVALH;
  2738  002162  CF5D F079          	movff	3933,_glRtc+1	;volatile
  2739                           
  2740                           ;rtc.c: 84: stRTCCFGbits.RTCPTR=1;
  2741  002166  010F               	movlb	15	; () banked
  2742  002168  515F               	movf	95,w,b	;volatile
  2743  00216A  0BFC               	andlw	-4
  2744  00216C  0901               	iorlw	1
  2745  00216E  6F5F               	movwf	95,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;rtc.c: 85: glRtc.hour=RTCVALL;
  2749  002170  CF5C F07B          	movff	3932,_glRtc+3	;volatile
  2750                           
  2751                           ; BSR set to: 15
  2752                           ;rtc.c: 86: glRtc.day=RTCVALH;
  2753  002174  CF5D F07E          	movff	3933,_glRtc+6	;volatile
  2754                           
  2755                           ;rtc.c: 87: stRTCCFGbits.RTCPTR=0;
  2756  002178  0EFC               	movlw	-4
  2757  00217A  010F               	movlb	15	; () banked
  2758  00217C  175F               	andwf	95,f,b	;volatile
  2759                           
  2760                           ; BSR set to: 15
  2761                           ;rtc.c: 88: glRtc.second=RTCVALL;
  2762  00217E  CF5C F07D          	movff	3932,_glRtc+5	;volatile
  2763                           
  2764                           ; BSR set to: 15
  2765                           ;rtc.c: 89: glRtc.minute=RTCVALH;
  2766  002182  CF5D F07C          	movff	3933,_glRtc+4	;volatile
  2767                           
  2768                           ; BSR set to: 15
  2769  002186  0012               	return		;funcret
  2770  002188                     __end_of_rtc_get:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           plusw1	equ	0xFE3
  2780                           fsr1h	equ	0xFE2
  2781                           fsr1l	equ	0xFE1
  2782                           indf2	equ	0xFDF
  2783                           plusw2	equ	0xFDB
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _m_int8_2_hex *****************
  2789 ;; Defined at:
  2790 ;;		line 243 in file "src/depend/m_string.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  str             2    0[BANK0 ] PTR unsigned char 
  2793 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  2794 ;;  b               1    2[BANK0 ] unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  t8              1   31[COMRAM] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        4 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_ui_disp_start_cs600
  2817 ;;		_ui_disp_rtc_mm_ss
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text8
  2822  001E3A                     __ptext8:
  2823                           	opt stack 0
  2824  001E3A                     _m_int8_2_hex:
  2825                           	opt stack 25
  2826                           
  2827                           ;m_string.c: 245: uint8_t t8;
  2828                           ;m_string.c: 246: t8=b;
  2829                           
  2830                           ; BSR set to: 15
  2831                           ;incstack = 0
  2832  001E3A  C0C5  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2833                           
  2834                           ;m_string.c: 247: t8>>=4;
  2835  001E3E  3A20               	swapf	m_int8_2_hex@t8,f,c
  2836  001E40  0E0F               	movlw	15
  2837  001E42  1620               	andwf	m_int8_2_hex@t8,f,c
  2838                           
  2839                           ;m_string.c: 248: t8 &= 0x0f;
  2840  001E44  0E0F               	movlw	15
  2841  001E46  1620               	andwf	m_int8_2_hex@t8,f,c
  2842                           
  2843                           ;m_string.c: 249: str[0]=HexTable[t8];
  2844  001E48  5020               	movf	m_int8_2_hex@t8,w,c
  2845  001E4A  0D01               	mullw	1
  2846  001E4C  0E0C               	movlw	low _HexTable
  2847  001E4E  24F3               	addwf	prodl,w,c
  2848  001E50  6EF6               	movwf	tblptrl,c
  2849  001E52  0EFF               	movlw	high _HexTable
  2850  001E54  20F4               	addwfc	prodh,w,c
  2851  001E56  6EF7               	movwf	tblptrh,c
  2852  001E58                     	if	0	;There are less than 3 active tblptr bytes
  2853  001E58                     	endif
  2854  001E58  C0C3  FFD9         	movff	m_int8_2_hex@str,fsr2l
  2855  001E5C  C0C4  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  2856  001E60  0008               	tblrd		*
  2857  001E62  CFF5 FFDF          	movff	tablat,indf2
  2858                           
  2859                           ;m_string.c: 251: t8=b;
  2860  001E66  C0C5  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2861                           
  2862                           ;m_string.c: 253: t8 &= 0x0f;
  2863  001E6A  0E0F               	movlw	15
  2864  001E6C  1620               	andwf	m_int8_2_hex@t8,f,c
  2865                           
  2866                           ;m_string.c: 254: str[1]=HexTable[t8];
  2867  001E6E  5020               	movf	m_int8_2_hex@t8,w,c
  2868  001E70  0D01               	mullw	1
  2869  001E72  0E0C               	movlw	low _HexTable
  2870  001E74  24F3               	addwf	prodl,w,c
  2871  001E76  6EF6               	movwf	tblptrl,c
  2872  001E78  0EFF               	movlw	high _HexTable
  2873  001E7A  20F4               	addwfc	prodh,w,c
  2874  001E7C  6EF7               	movwf	tblptrh,c
  2875  001E7E                     	if	0	;There are less than 3 active tblptr bytes
  2876  001E7E                     	endif
  2877  001E7E  0100               	movlb	0	; () banked
  2878  001E80  EE20 F001          	lfsr	2,1
  2879  001E84  51C3               	movf	m_int8_2_hex@str& (0+255),w,b
  2880  001E86  26D9               	addwf	fsr2l,f,c
  2881  001E88  51C4               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  2882  001E8A  22DA               	addwfc	fsr2h,f,c
  2883  001E8C  0008               	tblrd		*
  2884  001E8E  CFF5 FFDF          	movff	tablat,indf2
  2885                           
  2886                           ; BSR set to: 0
  2887  001E92  0012               	return		;funcret
  2888  001E94                     __end_of_m_int8_2_hex:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           tblptrh	equ	0xFF7
  2892                           tblptrl	equ	0xFF6
  2893                           tablat	equ	0xFF5
  2894                           prodh	equ	0xFF4
  2895                           prodl	equ	0xFF3
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postdec1	equ	0xFE5
  2899                           plusw1	equ	0xFE3
  2900                           fsr1h	equ	0xFE2
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           plusw2	equ	0xFDB
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _lcd_disp_level *****************
  2909 ;; Defined at:
  2910 ;;		line 118 in file "src/driver/lcd.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  level           1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  level           1   17[BANK0 ] unsigned char 
  2915 ;;  i               1   18[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:        2 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    7
  2932 ;; This function calls:
  2933 ;;		_lcd_disp_level_bar
  2934 ;; This function is called by:
  2935 ;;		_ui_disp_start_cs600
  2936 ;;		_ui_disp_rtc_mm_ss
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text9
  2942  001D82                     __ptext9:
  2943                           	opt stack 0
  2944  001D82                     _lcd_disp_level:
  2945                           	opt stack 22
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;incstack = 0
  2949                           ;lcd_disp_level@level stored from wreg
  2950  001D82  0100               	movlb	0	; () banked
  2951  001D84  6FD4               	movwf	lcd_disp_level@level& (0+255),b
  2952                           
  2953                           ;lcd.c: 120: uint8_t i;
  2954                           ;lcd.c: 121: if(level>=99)level=99;
  2955  001D86  0E62               	movlw	98
  2956  001D88  0100               	movlb	0	; () banked
  2957  001D8A  65D4               	cpfsgt	lcd_disp_level@level& (0+255),b
  2958  001D8C  D003               	goto	l7617
  2959                           
  2960                           ; BSR set to: 0
  2961  001D8E  0E63               	movlw	99
  2962  001D90  0100               	movlb	0	; () banked
  2963  001D92  6FD4               	movwf	lcd_disp_level@level& (0+255),b
  2964  001D94                     l7617:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;lcd.c: 122: level/=2;
  2968  001D94  0100               	movlb	0	; () banked
  2969  001D96  90D8               	bcf	status,0,c
  2970  001D98  33D4               	rrcf	lcd_disp_level@level& (0+255),f,b
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;lcd.c: 123: for(i=0;i<level;i++){
  2974  001D9A  0E00               	movlw	0
  2975  001D9C  0100               	movlb	0	; () banked
  2976  001D9E  6FD5               	movwf	lcd_disp_level@i& (0+255),b
  2977  001DA0  D009               	goto	l7625
  2978  001DA2                     l7621:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  2982  001DA2  0E01               	movlw	1
  2983  001DA4  0100               	movlb	0	; () banked
  2984  001DA6  6FD1               	movwf	lcd_disp_level_bar@show& (0+255),b
  2985  001DA8  0100               	movlb	0	; () banked
  2986  001DAA  51D5               	movf	lcd_disp_level@i& (0+255),w,b
  2987  001DAC  EC70  F000         	call	_lcd_disp_level_bar
  2988  001DB0  0100               	movlb	0	; () banked
  2989  001DB2  2BD5               	incf	lcd_disp_level@i& (0+255),f,b
  2990  001DB4                     l7625:
  2991                           
  2992                           ; BSR set to: 0
  2993  001DB4  0100               	movlb	0	; () banked
  2994  001DB6  51D4               	movf	lcd_disp_level@level& (0+255),w,b
  2995  001DB8  0100               	movlb	0	; () banked
  2996  001DBA  5DD5               	subwf	lcd_disp_level@i& (0+255),w,b
  2997  001DBC  A0D8               	btfss	status,0,c
  2998  001DBE  D7F1               	goto	l7621
  2999  001DC0                     l7627:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;lcd.c: 125: }
  3003                           ;lcd.c: 126: for(;i<50;i++){
  3004  001DC0  0E31               	movlw	49
  3005  001DC2  0100               	movlb	0	; () banked
  3006  001DC4  65D5               	cpfsgt	lcd_disp_level@i& (0+255),b
  3007  001DC6  D001               	goto	l7631
  3008  001DC8  0012               	return	
  3009  001DCA                     l7631:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  3013  001DCA  0E00               	movlw	0
  3014  001DCC  0100               	movlb	0	; () banked
  3015  001DCE  6FD1               	movwf	lcd_disp_level_bar@show& (0+255),b
  3016  001DD0  0100               	movlb	0	; () banked
  3017  001DD2  51D5               	movf	lcd_disp_level@i& (0+255),w,b
  3018  001DD4  EC70  F000         	call	_lcd_disp_level_bar
  3019  001DD8  0100               	movlb	0	; () banked
  3020  001DDA  2BD5               	incf	lcd_disp_level@i& (0+255),f,b
  3021  001DDC  D7F1               	goto	l7627
  3022  001DDE                     __end_of_lcd_disp_level:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           postdec1	equ	0xFE5
  3033                           plusw1	equ	0xFE3
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           indf2	equ	0xFDF
  3037                           plusw2	equ	0xFDB
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function _lcd_disp_level_bar *****************
  3043 ;; Defined at:
  3044 ;;		line 46 in file "src/driver/lcd.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  bar             1    wreg     unsigned char 
  3047 ;;  show            1   14[BANK0 ] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  bar             1   16[BANK0 ] unsigned char 
  3050 ;;  __bar           1   15[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        3 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    6
  3067 ;; This function calls:
  3068 ;;		_lcd_set_com_seg
  3069 ;; This function is called by:
  3070 ;;		_lcd_disp_level
  3071 ;;		_lcd_disp_level_off
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text10
  3076  0000E0                     __ptext10:
  3077                           	opt stack 0
  3078  0000E0                     _lcd_disp_level_bar:
  3079                           	opt stack 22
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;incstack = 0
  3083                           ;lcd_disp_level_bar@bar stored from wreg
  3084  0000E0  0100               	movlb	0	; () banked
  3085  0000E2  6FD3               	movwf	lcd_disp_level_bar@bar& (0+255),b
  3086                           
  3087                           ;lcd.c: 49: uint8_t __bar;
  3088                           ;lcd.c: 50: if(bar>49)return;
  3089  0000E4  0E31               	movlw	49
  3090  0000E6  0100               	movlb	0	; () banked
  3091  0000E8  65D3               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  3092  0000EA  D001               	goto	l7381
  3093  0000EC  0012               	return	
  3094  0000EE                     l7381:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;lcd.c: 51: __bar=49-bar;
  3098  0000EE  0100               	movlb	0	; () banked
  3099  0000F0  51D3               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  3100  0000F2  0800               	sublw	0
  3101  0000F4  0F31               	addlw	49
  3102  0000F6  0100               	movlb	0	; () banked
  3103  0000F8  6FD2               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  3104                           
  3105                           ;lcd.c: 52: switch(__bar){
  3106  0000FA  D190               	goto	l7485
  3107  0000FC                     l7383:
  3108                           
  3109                           ; BSR set to: 0
  3110  0000FC  0E2E               	movlw	46
  3111  0000FE  6E20               	movwf	lcd_set_com_seg@seg,c
  3112  000100  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3113  000104  0E00               	movlw	0
  3114  000106  EC74  F006         	call	_lcd_set_com_seg
  3115  00010A  0012               	return	
  3116  00010C                     l7385:
  3117  00010C  0E2E               	movlw	46
  3118  00010E  6E20               	movwf	lcd_set_com_seg@seg,c
  3119  000110  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3120  000114  0E01               	movlw	1
  3121  000116  EC74  F006         	call	_lcd_set_com_seg
  3122  00011A  0012               	return	
  3123  00011C                     l7387:
  3124  00011C  0E2E               	movlw	46
  3125  00011E  6E20               	movwf	lcd_set_com_seg@seg,c
  3126  000120  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3127  000124  0E02               	movlw	2
  3128  000126  EC74  F006         	call	_lcd_set_com_seg
  3129  00012A  0012               	return	
  3130  00012C                     l7389:
  3131  00012C  0E2E               	movlw	46
  3132  00012E  6E20               	movwf	lcd_set_com_seg@seg,c
  3133  000130  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3134  000134  0E03               	movlw	3
  3135  000136  EC74  F006         	call	_lcd_set_com_seg
  3136  00013A  0012               	return	
  3137  00013C                     l7391:
  3138  00013C  0E2F               	movlw	47
  3139  00013E  6E20               	movwf	lcd_set_com_seg@seg,c
  3140  000140  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3141  000144  0E03               	movlw	3
  3142  000146  EC74  F006         	call	_lcd_set_com_seg
  3143  00014A  0012               	return	
  3144  00014C                     l7393:
  3145  00014C  0E2F               	movlw	47
  3146  00014E  6E20               	movwf	lcd_set_com_seg@seg,c
  3147  000150  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3148  000154  0E02               	movlw	2
  3149  000156  EC74  F006         	call	_lcd_set_com_seg
  3150  00015A  0012               	return	
  3151  00015C                     l7395:
  3152  00015C  0E2F               	movlw	47
  3153  00015E  6E20               	movwf	lcd_set_com_seg@seg,c
  3154  000160  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3155  000164  0E01               	movlw	1
  3156  000166  EC74  F006         	call	_lcd_set_com_seg
  3157  00016A  0012               	return	
  3158  00016C                     l7397:
  3159  00016C  0E2F               	movlw	47
  3160  00016E  6E20               	movwf	lcd_set_com_seg@seg,c
  3161  000170  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3162  000174  0E00               	movlw	0
  3163  000176  EC74  F006         	call	_lcd_set_com_seg
  3164  00017A  0012               	return	
  3165  00017C                     l7399:
  3166  00017C  0E1F               	movlw	31
  3167  00017E  6E20               	movwf	lcd_set_com_seg@seg,c
  3168  000180  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3169  000184  0E00               	movlw	0
  3170  000186  EC74  F006         	call	_lcd_set_com_seg
  3171  00018A  0012               	return	
  3172  00018C                     l7401:
  3173  00018C  0E1F               	movlw	31
  3174  00018E  6E20               	movwf	lcd_set_com_seg@seg,c
  3175  000190  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3176  000194  0E01               	movlw	1
  3177  000196  EC74  F006         	call	_lcd_set_com_seg
  3178  00019A  0012               	return	
  3179  00019C                     l7403:
  3180  00019C  0E1F               	movlw	31
  3181  00019E  6E20               	movwf	lcd_set_com_seg@seg,c
  3182  0001A0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3183  0001A4  0E02               	movlw	2
  3184  0001A6  EC74  F006         	call	_lcd_set_com_seg
  3185  0001AA  0012               	return	
  3186  0001AC                     l7405:
  3187  0001AC  0E1F               	movlw	31
  3188  0001AE  6E20               	movwf	lcd_set_com_seg@seg,c
  3189  0001B0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3190  0001B4  0E03               	movlw	3
  3191  0001B6  EC74  F006         	call	_lcd_set_com_seg
  3192  0001BA  0012               	return	
  3193  0001BC                     l7407:
  3194  0001BC  0E00               	movlw	0
  3195  0001BE  6E20               	movwf	lcd_set_com_seg@seg,c
  3196  0001C0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3197  0001C4  0E03               	movlw	3
  3198  0001C6  EC74  F006         	call	_lcd_set_com_seg
  3199  0001CA  0012               	return	
  3200  0001CC                     l7409:
  3201  0001CC  0E00               	movlw	0
  3202  0001CE  6E20               	movwf	lcd_set_com_seg@seg,c
  3203  0001D0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3204  0001D4  0E02               	movlw	2
  3205  0001D6  EC74  F006         	call	_lcd_set_com_seg
  3206  0001DA  0012               	return	
  3207  0001DC                     l7411:
  3208  0001DC  0E00               	movlw	0
  3209  0001DE  6E20               	movwf	lcd_set_com_seg@seg,c
  3210  0001E0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3211  0001E4  0E01               	movlw	1
  3212  0001E6  EC74  F006         	call	_lcd_set_com_seg
  3213  0001EA  0012               	return	
  3214  0001EC                     l7413:
  3215  0001EC  0E00               	movlw	0
  3216  0001EE  6E20               	movwf	lcd_set_com_seg@seg,c
  3217  0001F0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3218  0001F4  0E00               	movlw	0
  3219  0001F6  EC74  F006         	call	_lcd_set_com_seg
  3220  0001FA  0012               	return	
  3221  0001FC                     l7415:
  3222  0001FC  0E01               	movlw	1
  3223  0001FE  6E20               	movwf	lcd_set_com_seg@seg,c
  3224  000200  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3225  000204  0E00               	movlw	0
  3226  000206  EC74  F006         	call	_lcd_set_com_seg
  3227  00020A  0012               	return	
  3228  00020C                     l7417:
  3229  00020C  0E01               	movlw	1
  3230  00020E  6E20               	movwf	lcd_set_com_seg@seg,c
  3231  000210  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3232  000214  0E01               	movlw	1
  3233  000216  EC74  F006         	call	_lcd_set_com_seg
  3234  00021A  0012               	return	
  3235  00021C                     l7419:
  3236  00021C  0E01               	movlw	1
  3237  00021E  6E20               	movwf	lcd_set_com_seg@seg,c
  3238  000220  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3239  000224  0E02               	movlw	2
  3240  000226  EC74  F006         	call	_lcd_set_com_seg
  3241  00022A  0012               	return	
  3242  00022C                     l7421:
  3243  00022C  0E01               	movlw	1
  3244  00022E  6E20               	movwf	lcd_set_com_seg@seg,c
  3245  000230  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3246  000234  0E03               	movlw	3
  3247  000236  EC74  F006         	call	_lcd_set_com_seg
  3248  00023A  0012               	return	
  3249  00023C                     l7423:
  3250  00023C  0E02               	movlw	2
  3251  00023E  6E20               	movwf	lcd_set_com_seg@seg,c
  3252  000240  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3253  000244  0E03               	movlw	3
  3254  000246  EC74  F006         	call	_lcd_set_com_seg
  3255  00024A  0012               	return	
  3256  00024C                     l7425:
  3257  00024C  0E02               	movlw	2
  3258  00024E  6E20               	movwf	lcd_set_com_seg@seg,c
  3259  000250  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3260  000254  0E02               	movlw	2
  3261  000256  EC74  F006         	call	_lcd_set_com_seg
  3262  00025A  0012               	return	
  3263  00025C                     l7427:
  3264  00025C  0E02               	movlw	2
  3265  00025E  6E20               	movwf	lcd_set_com_seg@seg,c
  3266  000260  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3267  000264  0E01               	movlw	1
  3268  000266  EC74  F006         	call	_lcd_set_com_seg
  3269  00026A  0012               	return	
  3270  00026C                     l7429:
  3271  00026C  0E02               	movlw	2
  3272  00026E  6E20               	movwf	lcd_set_com_seg@seg,c
  3273  000270  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3274  000274  0E00               	movlw	0
  3275  000276  EC74  F006         	call	_lcd_set_com_seg
  3276  00027A  0012               	return	
  3277  00027C                     l7431:
  3278  00027C  0E03               	movlw	3
  3279  00027E  6E20               	movwf	lcd_set_com_seg@seg,c
  3280  000280  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3281  000284  0E00               	movlw	0
  3282  000286  EC74  F006         	call	_lcd_set_com_seg
  3283  00028A  0012               	return	
  3284  00028C                     l7433:
  3285  00028C  0E03               	movlw	3
  3286  00028E  6E20               	movwf	lcd_set_com_seg@seg,c
  3287  000290  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3288  000294  0E01               	movlw	1
  3289  000296  EC74  F006         	call	_lcd_set_com_seg
  3290  00029A  0012               	return	
  3291  00029C                     l7435:
  3292  00029C  0E03               	movlw	3
  3293  00029E  6E20               	movwf	lcd_set_com_seg@seg,c
  3294  0002A0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3295  0002A4  0E02               	movlw	2
  3296  0002A6  EC74  F006         	call	_lcd_set_com_seg
  3297  0002AA  0012               	return	
  3298  0002AC                     l7437:
  3299  0002AC  0E03               	movlw	3
  3300  0002AE  6E20               	movwf	lcd_set_com_seg@seg,c
  3301  0002B0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3302  0002B4  0E03               	movlw	3
  3303  0002B6  EC74  F006         	call	_lcd_set_com_seg
  3304  0002BA  0012               	return	
  3305  0002BC                     l7439:
  3306  0002BC  0E04               	movlw	4
  3307  0002BE  6E20               	movwf	lcd_set_com_seg@seg,c
  3308  0002C0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3309  0002C4  0E03               	movlw	3
  3310  0002C6  EC74  F006         	call	_lcd_set_com_seg
  3311  0002CA  0012               	return	
  3312  0002CC                     l7441:
  3313  0002CC  0E04               	movlw	4
  3314  0002CE  6E20               	movwf	lcd_set_com_seg@seg,c
  3315  0002D0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3316  0002D4  0E02               	movlw	2
  3317  0002D6  EC74  F006         	call	_lcd_set_com_seg
  3318  0002DA  0012               	return	
  3319  0002DC                     l7443:
  3320  0002DC  0E04               	movlw	4
  3321  0002DE  6E20               	movwf	lcd_set_com_seg@seg,c
  3322  0002E0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3323  0002E4  0E01               	movlw	1
  3324  0002E6  EC74  F006         	call	_lcd_set_com_seg
  3325  0002EA  0012               	return	
  3326  0002EC                     l7445:
  3327  0002EC  0E04               	movlw	4
  3328  0002EE  6E20               	movwf	lcd_set_com_seg@seg,c
  3329  0002F0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3330  0002F4  0E00               	movlw	0
  3331  0002F6  EC74  F006         	call	_lcd_set_com_seg
  3332  0002FA  0012               	return	
  3333  0002FC                     l7447:
  3334  0002FC  0E05               	movlw	5
  3335  0002FE  6E20               	movwf	lcd_set_com_seg@seg,c
  3336  000300  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3337  000304  0E00               	movlw	0
  3338  000306  EC74  F006         	call	_lcd_set_com_seg
  3339  00030A  0012               	return	
  3340  00030C                     l7449:
  3341  00030C  0E05               	movlw	5
  3342  00030E  6E20               	movwf	lcd_set_com_seg@seg,c
  3343  000310  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3344  000314  0E01               	movlw	1
  3345  000316  EC74  F006         	call	_lcd_set_com_seg
  3346  00031A  0012               	return	
  3347  00031C                     l7451:
  3348  00031C  0E05               	movlw	5
  3349  00031E  6E20               	movwf	lcd_set_com_seg@seg,c
  3350  000320  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3351  000324  0E02               	movlw	2
  3352  000326  EC74  F006         	call	_lcd_set_com_seg
  3353  00032A  0012               	return	
  3354  00032C                     l7453:
  3355  00032C  0E05               	movlw	5
  3356  00032E  6E20               	movwf	lcd_set_com_seg@seg,c
  3357  000330  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3358  000334  0E03               	movlw	3
  3359  000336  EC74  F006         	call	_lcd_set_com_seg
  3360  00033A  0012               	return	
  3361  00033C                     l7455:
  3362  00033C  0E06               	movlw	6
  3363  00033E  6E20               	movwf	lcd_set_com_seg@seg,c
  3364  000340  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3365  000344  0E03               	movlw	3
  3366  000346  EC74  F006         	call	_lcd_set_com_seg
  3367  00034A  0012               	return	
  3368  00034C                     l7457:
  3369  00034C  0E06               	movlw	6
  3370  00034E  6E20               	movwf	lcd_set_com_seg@seg,c
  3371  000350  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3372  000354  0E02               	movlw	2
  3373  000356  EC74  F006         	call	_lcd_set_com_seg
  3374  00035A  0012               	return	
  3375  00035C                     l7459:
  3376  00035C  0E06               	movlw	6
  3377  00035E  6E20               	movwf	lcd_set_com_seg@seg,c
  3378  000360  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3379  000364  0E01               	movlw	1
  3380  000366  EC74  F006         	call	_lcd_set_com_seg
  3381  00036A  0012               	return	
  3382  00036C                     l7461:
  3383  00036C  0E06               	movlw	6
  3384  00036E  6E20               	movwf	lcd_set_com_seg@seg,c
  3385  000370  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3386  000374  0E00               	movlw	0
  3387  000376  EC74  F006         	call	_lcd_set_com_seg
  3388  00037A  0012               	return	
  3389  00037C                     l7463:
  3390  00037C  0E07               	movlw	7
  3391  00037E  6E20               	movwf	lcd_set_com_seg@seg,c
  3392  000380  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3393  000384  0E00               	movlw	0
  3394  000386  EC74  F006         	call	_lcd_set_com_seg
  3395  00038A  0012               	return	
  3396  00038C                     l7465:
  3397  00038C  0E07               	movlw	7
  3398  00038E  6E20               	movwf	lcd_set_com_seg@seg,c
  3399  000390  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3400  000394  0E01               	movlw	1
  3401  000396  EC74  F006         	call	_lcd_set_com_seg
  3402  00039A  0012               	return	
  3403  00039C                     l7467:
  3404  00039C  0E07               	movlw	7
  3405  00039E  6E20               	movwf	lcd_set_com_seg@seg,c
  3406  0003A0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3407  0003A4  0E02               	movlw	2
  3408  0003A6  EC74  F006         	call	_lcd_set_com_seg
  3409  0003AA  0012               	return	
  3410  0003AC                     l7469:
  3411  0003AC  0E07               	movlw	7
  3412  0003AE  6E20               	movwf	lcd_set_com_seg@seg,c
  3413  0003B0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3414  0003B4  0E03               	movlw	3
  3415  0003B6  EC74  F006         	call	_lcd_set_com_seg
  3416  0003BA  0012               	return	
  3417  0003BC                     l7471:
  3418  0003BC  0E21               	movlw	33
  3419  0003BE  6E20               	movwf	lcd_set_com_seg@seg,c
  3420  0003C0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3421  0003C4  0E03               	movlw	3
  3422  0003C6  EC74  F006         	call	_lcd_set_com_seg
  3423  0003CA  0012               	return	
  3424  0003CC                     l7473:
  3425  0003CC  0E21               	movlw	33
  3426  0003CE  6E20               	movwf	lcd_set_com_seg@seg,c
  3427  0003D0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3428  0003D4  0E02               	movlw	2
  3429  0003D6  EC74  F006         	call	_lcd_set_com_seg
  3430  0003DA  0012               	return	
  3431  0003DC                     l7475:
  3432  0003DC  0E21               	movlw	33
  3433  0003DE  6E20               	movwf	lcd_set_com_seg@seg,c
  3434  0003E0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3435  0003E4  0E01               	movlw	1
  3436  0003E6  EC74  F006         	call	_lcd_set_com_seg
  3437  0003EA  0012               	return	
  3438  0003EC                     l7477:
  3439  0003EC  0E21               	movlw	33
  3440  0003EE  6E20               	movwf	lcd_set_com_seg@seg,c
  3441  0003F0  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3442  0003F4  0E00               	movlw	0
  3443  0003F6  EC74  F006         	call	_lcd_set_com_seg
  3444  0003FA  0012               	return	
  3445  0003FC                     l7479:
  3446  0003FC  0E22               	movlw	34
  3447  0003FE  6E20               	movwf	lcd_set_com_seg@seg,c
  3448  000400  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3449  000404  0E00               	movlw	0
  3450  000406  EC74  F006         	call	_lcd_set_com_seg
  3451  00040A  0012               	return	
  3452  00040C                     l7481:
  3453  00040C  0E22               	movlw	34
  3454  00040E  6E20               	movwf	lcd_set_com_seg@seg,c
  3455  000410  C0D1  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3456  000414  0E01               	movlw	1
  3457  000416  EC74  F006         	call	_lcd_set_com_seg
  3458                           
  3459                           ;lcd.c: 115: }
  3460  00041A  0012               	return	
  3461  00041C                     l7485:
  3462  00041C  0100               	movlb	0	; () banked
  3463  00041E  51D2               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  3464                           
  3465                           ; Switch size 1, requested type "space"
  3466                           ; Number of cases is 50, Range of values is 0 to 49
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte          151    76 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471  000420  0A00               	xorlw	0	; case 0
  3472  000422  B4D8               	btfsc	status,2,c
  3473  000424  D66B               	goto	l7383
  3474  000426  0A01               	xorlw	1	; case 1
  3475  000428  B4D8               	btfsc	status,2,c
  3476  00042A  D670               	goto	l7385
  3477  00042C  0A03               	xorlw	3	; case 2
  3478  00042E  B4D8               	btfsc	status,2,c
  3479  000430  D675               	goto	l7387
  3480  000432  0A01               	xorlw	1	; case 3
  3481  000434  B4D8               	btfsc	status,2,c
  3482  000436  D67A               	goto	l7389
  3483  000438  0A07               	xorlw	7	; case 4
  3484  00043A  B4D8               	btfsc	status,2,c
  3485  00043C  D67F               	goto	l7391
  3486  00043E  0A01               	xorlw	1	; case 5
  3487  000440  B4D8               	btfsc	status,2,c
  3488  000442  D684               	goto	l7393
  3489  000444  0A03               	xorlw	3	; case 6
  3490  000446  B4D8               	btfsc	status,2,c
  3491  000448  D689               	goto	l7395
  3492  00044A  0A01               	xorlw	1	; case 7
  3493  00044C  B4D8               	btfsc	status,2,c
  3494  00044E  D68E               	goto	l7397
  3495  000450  0A0F               	xorlw	15	; case 8
  3496  000452  B4D8               	btfsc	status,2,c
  3497  000454  D693               	goto	l7399
  3498  000456  0A01               	xorlw	1	; case 9
  3499  000458  B4D8               	btfsc	status,2,c
  3500  00045A  D698               	goto	l7401
  3501  00045C  0A03               	xorlw	3	; case 10
  3502  00045E  B4D8               	btfsc	status,2,c
  3503  000460  D69D               	goto	l7403
  3504  000462  0A01               	xorlw	1	; case 11
  3505  000464  B4D8               	btfsc	status,2,c
  3506  000466  D6A2               	goto	l7405
  3507  000468  0A07               	xorlw	7	; case 12
  3508  00046A  B4D8               	btfsc	status,2,c
  3509  00046C  D6A7               	goto	l7407
  3510  00046E  0A01               	xorlw	1	; case 13
  3511  000470  B4D8               	btfsc	status,2,c
  3512  000472  D6AC               	goto	l7409
  3513  000474  0A03               	xorlw	3	; case 14
  3514  000476  B4D8               	btfsc	status,2,c
  3515  000478  D6B1               	goto	l7411
  3516  00047A  0A01               	xorlw	1	; case 15
  3517  00047C  B4D8               	btfsc	status,2,c
  3518  00047E  D6B6               	goto	l7413
  3519  000480  0A1F               	xorlw	31	; case 16
  3520  000482  B4D8               	btfsc	status,2,c
  3521  000484  D6BB               	goto	l7415
  3522  000486  0A01               	xorlw	1	; case 17
  3523  000488  B4D8               	btfsc	status,2,c
  3524  00048A  D6C0               	goto	l7417
  3525  00048C  0A03               	xorlw	3	; case 18
  3526  00048E  B4D8               	btfsc	status,2,c
  3527  000490  D6C5               	goto	l7419
  3528  000492  0A01               	xorlw	1	; case 19
  3529  000494  B4D8               	btfsc	status,2,c
  3530  000496  D6CA               	goto	l7421
  3531  000498  0A07               	xorlw	7	; case 20
  3532  00049A  B4D8               	btfsc	status,2,c
  3533  00049C  D6CF               	goto	l7423
  3534  00049E  0A01               	xorlw	1	; case 21
  3535  0004A0  B4D8               	btfsc	status,2,c
  3536  0004A2  D6D4               	goto	l7425
  3537  0004A4  0A03               	xorlw	3	; case 22
  3538  0004A6  B4D8               	btfsc	status,2,c
  3539  0004A8  D6D9               	goto	l7427
  3540  0004AA  0A01               	xorlw	1	; case 23
  3541  0004AC  B4D8               	btfsc	status,2,c
  3542  0004AE  D6DE               	goto	l7429
  3543  0004B0  0A0F               	xorlw	15	; case 24
  3544  0004B2  B4D8               	btfsc	status,2,c
  3545  0004B4  D6E3               	goto	l7431
  3546  0004B6  0A01               	xorlw	1	; case 25
  3547  0004B8  B4D8               	btfsc	status,2,c
  3548  0004BA  D6E8               	goto	l7433
  3549  0004BC  0A03               	xorlw	3	; case 26
  3550  0004BE  B4D8               	btfsc	status,2,c
  3551  0004C0  D6ED               	goto	l7435
  3552  0004C2  0A01               	xorlw	1	; case 27
  3553  0004C4  B4D8               	btfsc	status,2,c
  3554  0004C6  D6F2               	goto	l7437
  3555  0004C8  0A07               	xorlw	7	; case 28
  3556  0004CA  B4D8               	btfsc	status,2,c
  3557  0004CC  D6F7               	goto	l7439
  3558  0004CE  0A01               	xorlw	1	; case 29
  3559  0004D0  B4D8               	btfsc	status,2,c
  3560  0004D2  D6FC               	goto	l7441
  3561  0004D4  0A03               	xorlw	3	; case 30
  3562  0004D6  B4D8               	btfsc	status,2,c
  3563  0004D8  D701               	goto	l7443
  3564  0004DA  0A01               	xorlw	1	; case 31
  3565  0004DC  B4D8               	btfsc	status,2,c
  3566  0004DE  D706               	goto	l7445
  3567  0004E0  0A3F               	xorlw	63	; case 32
  3568  0004E2  B4D8               	btfsc	status,2,c
  3569  0004E4  D70B               	goto	l7447
  3570  0004E6  0A01               	xorlw	1	; case 33
  3571  0004E8  B4D8               	btfsc	status,2,c
  3572  0004EA  D710               	goto	l7449
  3573  0004EC  0A03               	xorlw	3	; case 34
  3574  0004EE  B4D8               	btfsc	status,2,c
  3575  0004F0  D715               	goto	l7451
  3576  0004F2  0A01               	xorlw	1	; case 35
  3577  0004F4  B4D8               	btfsc	status,2,c
  3578  0004F6  D71A               	goto	l7453
  3579  0004F8  0A07               	xorlw	7	; case 36
  3580  0004FA  B4D8               	btfsc	status,2,c
  3581  0004FC  D71F               	goto	l7455
  3582  0004FE  0A01               	xorlw	1	; case 37
  3583  000500  B4D8               	btfsc	status,2,c
  3584  000502  D724               	goto	l7457
  3585  000504  0A03               	xorlw	3	; case 38
  3586  000506  B4D8               	btfsc	status,2,c
  3587  000508  D729               	goto	l7459
  3588  00050A  0A01               	xorlw	1	; case 39
  3589  00050C  B4D8               	btfsc	status,2,c
  3590  00050E  D72E               	goto	l7461
  3591  000510  0A0F               	xorlw	15	; case 40
  3592  000512  B4D8               	btfsc	status,2,c
  3593  000514  D733               	goto	l7463
  3594  000516  0A01               	xorlw	1	; case 41
  3595  000518  B4D8               	btfsc	status,2,c
  3596  00051A  D738               	goto	l7465
  3597  00051C  0A03               	xorlw	3	; case 42
  3598  00051E  B4D8               	btfsc	status,2,c
  3599  000520  D73D               	goto	l7467
  3600  000522  0A01               	xorlw	1	; case 43
  3601  000524  B4D8               	btfsc	status,2,c
  3602  000526  D742               	goto	l7469
  3603  000528  0A07               	xorlw	7	; case 44
  3604  00052A  B4D8               	btfsc	status,2,c
  3605  00052C  D747               	goto	l7471
  3606  00052E  0A01               	xorlw	1	; case 45
  3607  000530  B4D8               	btfsc	status,2,c
  3608  000532  D74C               	goto	l7473
  3609  000534  0A03               	xorlw	3	; case 46
  3610  000536  B4D8               	btfsc	status,2,c
  3611  000538  D751               	goto	l7475
  3612  00053A  0A01               	xorlw	1	; case 47
  3613  00053C  B4D8               	btfsc	status,2,c
  3614  00053E  D756               	goto	l7477
  3615  000540  0A1F               	xorlw	31	; case 48
  3616  000542  B4D8               	btfsc	status,2,c
  3617  000544  D75B               	goto	l7479
  3618  000546  0A01               	xorlw	1	; case 49
  3619  000548  A4D8               	btfss	status,2,c
  3620  00054A  0012               	return	
  3621  00054C  D75F               	goto	l7481
  3622  00054E                     __end_of_lcd_disp_level_bar:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           plusw1	equ	0xFE3
  3634                           fsr1h	equ	0xFE2
  3635                           fsr1l	equ	0xFE1
  3636                           indf2	equ	0xFDF
  3637                           plusw2	equ	0xFDB
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _soc_init *****************
  3643 ;; Defined at:
  3644 ;;		line 2 in file "src/soc/soc.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    6
  3665 ;; This function calls:
  3666 ;;		_rtc_init
  3667 ;;		_sys_ticker_init
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text11
  3674  002694                     __ptext11:
  3675                           	opt stack 0
  3676  002694                     _soc_init:
  3677                           	opt stack 24
  3678                           
  3679                           ;soc.c: 5: sys_ticker_init();
  3680                           
  3681                           ;incstack = 0
  3682  002694  EC52  F013         	call	_sys_ticker_init	;wreg free
  3683                           
  3684                           ;soc.c: 6: rtc_init();
  3685  002698  ECE5  F010         	call	_rtc_init	;wreg free
  3686                           
  3687                           ;soc.c: 8: INTCONbits.PEIE = 1;
  3688  00269C  8CF2               	bsf	intcon,6,c	;volatile
  3689                           
  3690                           ;soc.c: 9: INTCONbits.GIE = 1;
  3691  00269E  8EF2               	bsf	intcon,7,c	;volatile
  3692                           
  3693                           ;soc.c: 11: RCONbits.IPEN=0;
  3694  0026A0  9ED0               	bcf	4048,7,c	;volatile
  3695  0026A2  0012               	return		;funcret
  3696  0026A4                     __end_of_soc_init:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           postdec1	equ	0xFE5
  3708                           plusw1	equ	0xFE3
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           plusw2	equ	0xFDB
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _sys_ticker_init *****************
  3718 ;; Defined at:
  3719 ;;		line 25 in file "src/soc/ticker.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    4
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_soc_init
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text12
  3748  0026A4                     __ptext12:
  3749                           	opt stack 0
  3750  0026A4                     _sys_ticker_init:
  3751                           	opt stack 25
  3752                           
  3753                           ;ticker.c: 28: PR2=(uint8_t)((11059200/4/16/16/100));
  3754                           
  3755                           ;incstack = 0
  3756  0026A4  0E6C               	movlw	108
  3757  0026A6  6ECB               	movwf	4043,c	;volatile
  3758                           
  3759                           ;ticker.c: 29: IPR1bits.TMR2IP=1;
  3760  0026A8  829F               	bsf	3999,1,c	;volatile
  3761                           
  3762                           ;ticker.c: 30: PIR1bits.TMR2IF=0;
  3763  0026AA  929E               	bcf	3998,1,c	;volatile
  3764                           
  3765                           ;ticker.c: 31: PIE1bits.TMR2IE=1;
  3766  0026AC  829D               	bsf	3997,1,c	;volatile
  3767                           
  3768                           ;ticker.c: 33: T2CON=0x7f;
  3769  0026AE  0E7F               	movlw	127
  3770  0026B0  6ECA               	movwf	4042,c	;volatile
  3771  0026B2  0012               	return		;funcret
  3772  0026B4                     __end_of_sys_ticker_init:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           intcon	equ	0xFF2
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postdec1	equ	0xFE5
  3784                           plusw1	equ	0xFE3
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           plusw2	equ	0xFDB
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _rtc_init *****************
  3794 ;; Defined at:
  3795 ;;		line 25 in file "src/soc/rtc.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    5
  3816 ;; This function calls:
  3817 ;;		_rtcc_reg_wr_disable
  3818 ;;		_rtcc_reg_wr_enable
  3819 ;; This function is called by:
  3820 ;;		_soc_init
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text13
  3825  0021CA                     __ptext13:
  3826                           	opt stack 0
  3827  0021CA                     _rtc_init:
  3828                           	opt stack 24
  3829                           
  3830                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  3831                           
  3832                           ;incstack = 0
  3833  0021CA  010F               	movlb	15	; () banked
  3834  0021CC  9554               	bcf	84,2,b	;volatile
  3835                           
  3836                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  3837  0021CE  010F               	movlb	15	; () banked
  3838  0021D0  8354               	bsf	84,1,b	;volatile
  3839                           
  3840                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  3841  0021D2  010F               	movlb	15	; () banked
  3842  0021D4  955F               	bcf	95,2,b	;volatile
  3843                           
  3844                           ;rtc.c: 31: ALRMRPT=0xff;
  3845  0021D6  010F               	movlb	15	; () banked
  3846  0021D8  695A               	setf	90,b	;volatile
  3847                           
  3848                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  3849  0021DA  010F               	movlb	15	; () banked
  3850  0021DC  8F5B               	bsf	91,7,b	;volatile
  3851                           
  3852                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  3853  0021DE  010F               	movlb	15	; () banked
  3854  0021E0  8D5B               	bsf	91,6,b	;volatile
  3855                           
  3856                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  3857  0021E2  010F               	movlb	15	; () banked
  3858  0021E4  955B               	bcf	91,2,b	;volatile
  3859  0021E6  975B               	bcf	91,3,b	;volatile
  3860  0021E8  995B               	bcf	91,4,b	;volatile
  3861  0021EA  9B5B               	bcf	91,5,b	;volatile
  3862                           
  3863                           ;rtc.c: 37: __nop();
  3864  0021EC  F000               	nop	
  3865                           
  3866                           ;rtc.c: 38: rtcc_reg_wr_enable();
  3867  0021EE  EC61  F013         	call	_rtcc_reg_wr_enable	;wreg free
  3868                           
  3869                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  3870  0021F2  010F               	movlb	15	; () banked
  3871  0021F4  8F5F               	bsf	95,7,b	;volatile
  3872                           
  3873                           ;rtc.c: 42: rtcc_reg_wr_disable();
  3874  0021F6  EC67  F013         	call	_rtcc_reg_wr_disable	;wreg free
  3875                           
  3876                           ;rtc.c: 43: __nop();
  3877  0021FA  F000               	nop	
  3878                           
  3879                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  3880  0021FC  80A5               	bsf	4005,0,c	;volatile
  3881                           
  3882                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  3883  0021FE  90A4               	bcf	4004,0,c	;volatile
  3884                           
  3885                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  3886  002200  80A3               	bsf	4003,0,c	;volatile
  3887                           
  3888                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  3889  002202  86CD               	bsf	4045,3,c	;volatile
  3890                           
  3891                           ;rtc.c: 51: __nop();
  3892  002204  F000               	nop	
  3893  002206  0012               	return		;funcret
  3894  002208                     __end_of_rtc_init:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           postdec1	equ	0xFE5
  3906                           plusw1	equ	0xFE3
  3907                           fsr1h	equ	0xFE2
  3908                           fsr1l	equ	0xFE1
  3909                           indf2	equ	0xFDF
  3910                           plusw2	equ	0xFDB
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _rtc_set *****************
  3916 ;; Defined at:
  3917 ;;		line 54 in file "src/soc/rtc.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  rtc             2   31[COMRAM] PTR unsigned char 
  3920 ;;		 -> defalutRtc(7), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  stp             2    0[BANK0 ] PTR struct .
  3923 ;;		 -> defalutRtc(7), 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        4 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    5
  3940 ;; This function calls:
  3941 ;;		_rtcc_reg_wr_disable
  3942 ;;		_rtcc_reg_wr_enable
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text14
  3949  000FE0                     __ptext14:
  3950                           	opt stack 0
  3951  000FE0                     _rtc_set:
  3952                           	opt stack 25
  3953                           
  3954                           ;rtc.c: 56: st_RtcDef* stp;
  3955                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  3956                           
  3957                           ;incstack = 0
  3958  000FE0  C020  F0C3         	movff	rtc_set@rtc,rtc_set@stp
  3959  000FE4  C021  F0C4         	movff	rtc_set@rtc+1,rtc_set@stp+1
  3960                           
  3961                           ;rtc.c: 58: rtcc_reg_wr_enable();
  3962  000FE8  EC61  F013         	call	_rtcc_reg_wr_enable	;wreg free
  3963                           
  3964                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  3965  000FEC  0EFC               	movlw	-4
  3966  000FEE  010F               	movlb	15	; () banked
  3967  000FF0  175F               	andwf	95,f,b	;volatile
  3968                           
  3969                           ; BSR set to: 15
  3970                           ;rtc.c: 61: RTCVALL=stp->second;
  3971  000FF2  0100               	movlb	0	; () banked
  3972  000FF4  EE20 F005          	lfsr	2,5
  3973  000FF8  51C3               	movf	rtc_set@stp& (0+255),w,b
  3974  000FFA  26D9               	addwf	fsr2l,f,c
  3975  000FFC  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  3976  000FFE  22DA               	addwfc	fsr2h,f,c
  3977  001000  50DF               	movf	indf2,w,c
  3978  001002  010F               	movlb	15	; () banked
  3979  001004  6F5C               	movwf	92,b	;volatile
  3980                           
  3981                           ; BSR set to: 15
  3982                           ;rtc.c: 62: RTCVALH=stp->minute;
  3983  001006  0100               	movlb	0	; () banked
  3984  001008  EE20 F004          	lfsr	2,4
  3985  00100C  51C3               	movf	rtc_set@stp& (0+255),w,b
  3986  00100E  26D9               	addwf	fsr2l,f,c
  3987  001010  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  3988  001012  22DA               	addwfc	fsr2h,f,c
  3989  001014  50DF               	movf	indf2,w,c
  3990  001016  010F               	movlb	15	; () banked
  3991  001018  6F5D               	movwf	93,b	;volatile
  3992                           
  3993                           ; BSR set to: 15
  3994                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  3995  00101A  010F               	movlb	15	; () banked
  3996  00101C  515F               	movf	95,w,b	;volatile
  3997  00101E  0BFC               	andlw	-4
  3998  001020  0901               	iorlw	1
  3999  001022  6F5F               	movwf	95,b	;volatile
  4000                           
  4001                           ; BSR set to: 15
  4002                           ;rtc.c: 64: RTCVALL=stp->hour;
  4003  001024  0100               	movlb	0	; () banked
  4004  001026  EE20 F003          	lfsr	2,3
  4005  00102A  51C3               	movf	rtc_set@stp& (0+255),w,b
  4006  00102C  26D9               	addwf	fsr2l,f,c
  4007  00102E  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  4008  001030  22DA               	addwfc	fsr2h,f,c
  4009  001032  50DF               	movf	indf2,w,c
  4010  001034  010F               	movlb	15	; () banked
  4011  001036  6F5C               	movwf	92,b	;volatile
  4012                           
  4013                           ; BSR set to: 15
  4014                           ;rtc.c: 65: RTCVALH=stp->day;
  4015  001038  0100               	movlb	0	; () banked
  4016  00103A  EE20 F006          	lfsr	2,6
  4017  00103E  51C3               	movf	rtc_set@stp& (0+255),w,b
  4018  001040  26D9               	addwf	fsr2l,f,c
  4019  001042  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  4020  001044  22DA               	addwfc	fsr2h,f,c
  4021  001046  50DF               	movf	indf2,w,c
  4022  001048  010F               	movlb	15	; () banked
  4023  00104A  6F5D               	movwf	93,b	;volatile
  4024                           
  4025                           ; BSR set to: 15
  4026                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4027  00104C  010F               	movlb	15	; () banked
  4028  00104E  515F               	movf	95,w,b	;volatile
  4029  001050  0BFC               	andlw	-4
  4030  001052  0902               	iorlw	2
  4031  001054  6F5F               	movwf	95,b	;volatile
  4032                           
  4033                           ; BSR set to: 15
  4034                           ;rtc.c: 67: RTCVALL=stp->date;
  4035  001056  0100               	movlb	0	; () banked
  4036  001058  EE20 F002          	lfsr	2,2
  4037  00105C  51C3               	movf	rtc_set@stp& (0+255),w,b
  4038  00105E  26D9               	addwf	fsr2l,f,c
  4039  001060  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  4040  001062  22DA               	addwfc	fsr2h,f,c
  4041  001064  50DF               	movf	indf2,w,c
  4042  001066  010F               	movlb	15	; () banked
  4043  001068  6F5C               	movwf	92,b	;volatile
  4044                           
  4045                           ; BSR set to: 15
  4046                           ;rtc.c: 68: RTCVALH=stp->month;
  4047  00106A  0100               	movlb	0	; () banked
  4048  00106C  EE20 F001          	lfsr	2,1
  4049  001070  51C3               	movf	rtc_set@stp& (0+255),w,b
  4050  001072  26D9               	addwf	fsr2l,f,c
  4051  001074  51C4               	movf	(rtc_set@stp+1)& (0+255),w,b
  4052  001076  22DA               	addwfc	fsr2h,f,c
  4053  001078  50DF               	movf	indf2,w,c
  4054  00107A  010F               	movlb	15	; () banked
  4055  00107C  6F5D               	movwf	93,b	;volatile
  4056                           
  4057                           ; BSR set to: 15
  4058                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4059  00107E  0E03               	movlw	3
  4060  001080  010F               	movlb	15	; () banked
  4061  001082  135F               	iorwf	95,f,b	;volatile
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;rtc.c: 70: RTCVALL=stp->year;
  4065  001084  C0C3  FFD9         	movff	rtc_set@stp,fsr2l
  4066  001088  C0C4  FFDA         	movff	rtc_set@stp+1,fsr2h
  4067  00108C  50DF               	movf	indf2,w,c
  4068  00108E  010F               	movlb	15	; () banked
  4069  001090  6F5C               	movwf	92,b	;volatile
  4070                           
  4071                           ; BSR set to: 15
  4072                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4073  001092  EC67  F013         	call	_rtcc_reg_wr_disable	;wreg free
  4074  001096  0012               	return		;funcret
  4075  001098                     __end_of_rtc_set:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           intcon	equ	0xFF2
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           plusw1	equ	0xFE3
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           plusw2	equ	0xFDB
  4092                           fsr2h	equ	0xFDA
  4093                           fsr2l	equ	0xFD9
  4094                           status	equ	0xFD8
  4095                           
  4096 ;; *************** function _rtcc_reg_wr_enable *****************
  4097 ;; Defined at:
  4098 ;;		line 9 in file "src/soc/rtc.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		None
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    4
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_rtc_init
  4123 ;;		_rtc_set
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text15
  4128  0026C2                     __ptext15:
  4129                           	opt stack 0
  4130  0026C2                     _rtcc_reg_wr_enable:
  4131                           	opt stack 24
  4132                           
  4133                           ;incstack = 0
  4134  0026C2  0E55               	movlw	85	;# 
  4135  0026C4  6EA7               	movwf	4007,c	;# 
  4136  0026C6  0EAA               	movlw	170	;# 
  4137  0026C8  6EA7               	movwf	4007,c	;# 
  4138  0026CA  8B5F               	bsf	3935,5,b	;# 
  4139  0026CC  0012               	return		;funcret
  4140  0026CE                     __end_of_rtcc_reg_wr_enable:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           intcon	equ	0xFF2
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           postdec1	equ	0xFE5
  4152                           plusw1	equ	0xFE3
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           indf2	equ	0xFDF
  4156                           plusw2	equ	0xFDB
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _rtcc_reg_wr_disable *****************
  4162 ;; Defined at:
  4163 ;;		line 17 in file "src/soc/rtc.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		None
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    4
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_rtc_init
  4188 ;;		_rtc_set
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text16
  4193  0026CE                     __ptext16:
  4194                           	opt stack 0
  4195  0026CE                     _rtcc_reg_wr_disable:
  4196                           	opt stack 24
  4197                           
  4198                           ;incstack = 0
  4199  0026CE  0E55               	movlw	85	;# 
  4200  0026D0  6EA7               	movwf	4007,c	;# 
  4201  0026D2  0EAA               	movlw	170	;# 
  4202  0026D4  6EA7               	movwf	4007,c	;# 
  4203  0026D6  9B5F               	bcf	3935,5,b	;# 
  4204  0026D8  0012               	return		;funcret
  4205  0026DA                     __end_of_rtcc_reg_wr_disable:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           plusw1	equ	0xFE3
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           plusw2	equ	0xFDB
  4222                           fsr2h	equ	0xFDA
  4223                           fsr2l	equ	0xFD9
  4224                           status	equ	0xFD8
  4225                           
  4226 ;; *************** function _lcd_init *****************
  4227 ;; Defined at:
  4228 ;;		line 628 in file "src/driver/lcd.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    6
  4249 ;; This function calls:
  4250 ;;		_lcd_bl_init
  4251 ;;		_lcd_config
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text17
  4258  0026B4                     __ptext17:
  4259                           	opt stack 0
  4260  0026B4                     _lcd_init:
  4261                           	opt stack 24
  4262                           
  4263                           ;lcd.c: 630: lcd_config();
  4264                           
  4265                           ;incstack = 0
  4266  0026B4  ECF9  F011         	call	_lcd_config	;wreg free
  4267                           
  4268                           ;lcd.c: 631: lcd_bl_init();
  4269  0026B8  EC6D  F013         	call	_lcd_bl_init	;wreg free
  4270                           
  4271                           ;lcd.c: 632: LCDCON=0x8f;;
  4272  0026BC  0E8F               	movlw	143
  4273  0026BE  6EA8               	movwf	4008,c	;volatile
  4274  0026C0  0012               	return		;funcret
  4275  0026C2                     __end_of_lcd_init:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           postinc0	equ	0xFEE
  4285                           wreg	equ	0xFE8
  4286                           postdec1	equ	0xFE5
  4287                           plusw1	equ	0xFE3
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           indf2	equ	0xFDF
  4291                           plusw2	equ	0xFDB
  4292                           fsr2h	equ	0xFDA
  4293                           fsr2l	equ	0xFD9
  4294                           status	equ	0xFD8
  4295                           
  4296 ;; *************** function _lcd_config *****************
  4297 ;; Defined at:
  4298 ;;		line 588 in file "src/driver/lcd.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    5
  4319 ;; This function calls:
  4320 ;;		_lcd_disp_all
  4321 ;; This function is called by:
  4322 ;;		_lcd_init
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text18
  4327  0023F2                     __ptext18:
  4328                           	opt stack 0
  4329  0023F2                     _lcd_config:
  4330                           	opt stack 24
  4331                           
  4332                           ;lcd.c: 594: LCDREG=0x3f;
  4333                           
  4334                           ;incstack = 0
  4335  0023F2  0E3F               	movlw	63
  4336  0023F4  6ED2               	movwf	4050,c	;volatile
  4337                           
  4338                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  4339  0023F6  9EAA               	bcf	4010,7,c	;volatile
  4340                           
  4341                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  4342  0023F8  9CAA               	bcf	4010,6,c	;volatile
  4343                           
  4344                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  4345  0023FA  96AA               	bcf	4010,3,c	;volatile
  4346                           
  4347                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  4348  0023FC  84AA               	bsf	4010,2,c	;volatile
  4349                           
  4350                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  4351  0023FE  92AA               	bcf	4010,1,c	;volatile
  4352                           
  4353                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  4354  002400  90AA               	bcf	4010,0,c	;volatile
  4355                           
  4356                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  4357  002402  68A9               	setf	4009,c	;volatile
  4358                           
  4359                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  4360  002404  0EE0               	movlw	224
  4361  002406  6EB6               	movwf	4022,c	;volatile
  4362                           
  4363                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  4364  002408  0EF8               	movlw	248
  4365  00240A  6EB7               	movwf	4023,c	;volatile
  4366                           
  4367                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  4368  00240C  0EC3               	movlw	195
  4369  00240E  6EB8               	movwf	4024,c	;volatile
  4370                           
  4371                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  4372  002410  0EFE               	movlw	254
  4373  002412  6EB9               	movwf	4025,c	;volatile
  4374                           
  4375                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  4376  002414  0ECF               	movlw	207
  4377  002416  6EBA               	movwf	4026,c	;volatile
  4378                           
  4379                           ;lcd.c: 618: lcd_disp_all(0x00);;
  4380  002418  0E00               	movlw	0
  4381  00241A  ECC2  F012         	call	_lcd_disp_all
  4382  00241E  0012               	return		;funcret
  4383  002420                     __end_of_lcd_config:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           prodh	equ	0xFF4
  4390                           prodl	equ	0xFF3
  4391                           intcon	equ	0xFF2
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           postdec1	equ	0xFE5
  4395                           plusw1	equ	0xFE3
  4396                           fsr1h	equ	0xFE2
  4397                           fsr1l	equ	0xFE1
  4398                           indf2	equ	0xFDF
  4399                           plusw2	equ	0xFDB
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function _lcd_disp_all *****************
  4405 ;; Defined at:
  4406 ;;		line 578 in file "src/driver/lcd.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  x               1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  x               1   31[COMRAM] unsigned char 
  4411 ;;  i               1   32[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:        2 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    4
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_ui_disp_start_cs600
  4432 ;;		_lcd_config
  4433 ;;		_ui_disp_all_on
  4434 ;;		_ui_disp_all_off
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text19
  4439  002584                     __ptext19:
  4440                           	opt stack 0
  4441  002584                     _lcd_disp_all:
  4442                           	opt stack 25
  4443                           
  4444                           ;incstack = 0
  4445                           ;lcd_disp_all@x stored from wreg
  4446  002584  6E20               	movwf	lcd_disp_all@x,c
  4447                           
  4448                           ;lcd.c: 580: uint8_t i;
  4449                           ;lcd.c: 581: for(i=0;i<24;i++)
  4450  002586  0E00               	movlw	0
  4451  002588  6E21               	movwf	lcd_disp_all@i,c
  4452  00258A                     l7237:
  4453  00258A  0E17               	movlw	23
  4454  00258C  6421               	cpfsgt	lcd_disp_all@i,c
  4455  00258E  D001               	goto	l7241
  4456  002590  0012               	return	
  4457  002592                     l7241:
  4458                           
  4459                           ;lcd.c: 582: {
  4460                           ;lcd.c: 583: pLCD[i]=x;
  4461  002592  5021               	movf	lcd_disp_all@i,w,c
  4462  002594  0D01               	mullw	1
  4463  002596  0E60               	movlw	low _pLCD
  4464  002598  24F3               	addwf	prodl,w,c
  4465  00259A  6ED9               	movwf	fsr2l,c
  4466  00259C  0E00               	movlw	high _pLCD
  4467  00259E  20F4               	addwfc	prodh,w,c
  4468  0025A0  6EDA               	movwf	fsr2h,c
  4469  0025A2  C020  FFDF         	movff	lcd_disp_all@x,indf2
  4470  0025A6  2A21               	incf	lcd_disp_all@i,f,c
  4471  0025A8  D7F0               	goto	l7237
  4472  0025AA                     __end_of_lcd_disp_all:
  4473                           	opt stack 0
  4474                           tblptru	equ	0xFF8
  4475                           tblptrh	equ	0xFF7
  4476                           tblptrl	equ	0xFF6
  4477                           tablat	equ	0xFF5
  4478                           prodh	equ	0xFF4
  4479                           prodl	equ	0xFF3
  4480                           intcon	equ	0xFF2
  4481                           postinc0	equ	0xFEE
  4482                           wreg	equ	0xFE8
  4483                           postdec1	equ	0xFE5
  4484                           plusw1	equ	0xFE3
  4485                           fsr1h	equ	0xFE2
  4486                           fsr1l	equ	0xFE1
  4487                           indf2	equ	0xFDF
  4488                           plusw2	equ	0xFDB
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _lcd_bl_init *****************
  4494 ;; Defined at:
  4495 ;;		line 623 in file "src/driver/lcd.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_lcd_init
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text20
  4524  0026DA                     __ptext20:
  4525                           	opt stack 0
  4526  0026DA                     _lcd_bl_init:
  4527                           	opt stack 25
  4528                           
  4529                           ;incstack = 0
  4530                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  4531  0026DA  8898               	bsf	3992,4,c	;volatile
  4532  0026DC  0012               	return	
  4533  0026DE                     __end_of_lcd_bl_init:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           postdec1	equ	0xFE5
  4545                           plusw1	equ	0xFE3
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           plusw2	equ	0xFDB
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _key_process *****************
  4555 ;; Defined at:
  4556 ;;		line 154 in file "src/api/key_menu.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  tm              2   38[BANK0 ] unsigned int 
  4561 ;;  key             1   40[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        3 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:   13
  4578 ;; This function calls:
  4579 ;;		_key_process_down
  4580 ;;		_key_process_set
  4581 ;;		_key_process_set_down_long
  4582 ;;		_key_process_set_long
  4583 ;;		_key_process_up
  4584 ;;		_key_waite_release
  4585 ;;		_ui_disp_menu
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text21
  4592  00188C                     __ptext21:
  4593                           	opt stack 0
  4594  00188C                     _key_process:
  4595                           	opt stack 17
  4596                           
  4597                           ;key_menu.c: 156: uint16_t tm;
  4598                           ;key_menu.c: 157: uint8_t key;
  4599                           ;key_menu.c: 158: tm=key_waite_release(2000,&key);
  4600                           
  4601                           ;incstack = 0
  4602  00188C  0E07               	movlw	7
  4603  00188E  0100               	movlb	0	; () banked
  4604  001890  6FCA               	movwf	(key_waite_release@timeout+1)& (0+255),b
  4605  001892  0ED0               	movlw	208
  4606  001894  6FC9               	movwf	key_waite_release@timeout& (0+255),b
  4607  001896  0EEB               	movlw	low key_process@key
  4608  001898  0100               	movlb	0	; () banked
  4609  00189A  6FCB               	movwf	key_waite_release@key& (0+255),b
  4610  00189C  0E00               	movlw	high key_process@key
  4611  00189E  0100               	movlb	0	; () banked
  4612  0018A0  6FCC               	movwf	(key_waite_release@key+1)& (0+255),b
  4613  0018A2  ECC4  F010         	call	_key_waite_release	;wreg free
  4614  0018A6  C0C9  F0E9         	movff	?_key_waite_release,key_process@tm
  4615  0018AA  C0CA  F0EA         	movff	?_key_waite_release+1,key_process@tm+1
  4616                           
  4617                           ;key_menu.c: 159: if(tm>=2000){
  4618  0018AE  0ED0               	movlw	208
  4619  0018B0  0100               	movlb	0	; () banked
  4620  0018B2  5DE9               	subwf	key_process@tm& (0+255),w,b
  4621  0018B4  0E07               	movlw	7
  4622  0018B6  0100               	movlb	0	; () banked
  4623  0018B8  59EA               	subwfb	(key_process@tm+1)& (0+255),w,b
  4624  0018BA  A0D8               	btfss	status,0,c
  4625  0018BC  D010               	goto	l7731
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;key_menu.c: 161: if(key==(0x01<<0x02)){
  4629  0018BE  0E04               	movlw	4
  4630  0018C0  0100               	movlb	0	; () banked
  4631  0018C2  19EB               	xorwf	key_process@key& (0+255),w,b
  4632  0018C4  A4D8               	btfss	status,2,c
  4633  0018C6  D003               	goto	l7727
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;key_menu.c: 162: key_process_set_long();
  4637  0018C8  EC6F  F013         	call	_key_process_set_long	;wreg free
  4638                           
  4639                           ;key_menu.c: 163: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  4640  0018CC  D01D               	goto	l7743
  4641  0018CE                     l7727:
  4642  0018CE  0E05               	movlw	5
  4643  0018D0  0100               	movlb	0	; () banked
  4644  0018D2  198C               	xorwf	_keyValue& (0+255),w,b	;volatile
  4645  0018D4  A4D8               	btfss	status,2,c
  4646  0018D6  D018               	goto	l7743
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;key_menu.c: 164: key_process_set_down_long();
  4650  0018D8  EC33  F007         	call	_key_process_set_down_long	;wreg free
  4651                           
  4652                           ;key_menu.c: 165: }
  4653                           ;key_menu.c: 166: }else{
  4654  0018DC  D015               	goto	l7743
  4655  0018DE                     l7731:
  4656                           
  4657                           ;key_menu.c: 168: if(keyValue == (0x01<<0x0)){
  4658  0018DE  0100               	movlb	0	; () banked
  4659  0018E0  058C               	decf	_keyValue& (0+255),w,b	;volatile
  4660  0018E2  A4D8               	btfss	status,2,c
  4661  0018E4  D003               	goto	l7735
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;key_menu.c: 169: key_process_down();
  4665  0018E6  EC23  F011         	call	_key_process_down	;wreg free
  4666                           
  4667                           ;key_menu.c: 170: }else if(keyValue == (0x01<<0x01)){
  4668  0018EA  D00E               	goto	l7743
  4669  0018EC                     l7735:
  4670  0018EC  0E02               	movlw	2
  4671  0018EE  0100               	movlb	0	; () banked
  4672  0018F0  198C               	xorwf	_keyValue& (0+255),w,b	;volatile
  4673  0018F2  A4D8               	btfss	status,2,c
  4674  0018F4  D003               	goto	l7739
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;key_menu.c: 171: key_process_up();
  4678  0018F6  EC7A  F011         	call	_key_process_up	;wreg free
  4679                           
  4680                           ;key_menu.c: 172: }else if(keyValue == (0x01<<0x02)){
  4681  0018FA  D006               	goto	l7743
  4682  0018FC                     l7739:
  4683  0018FC  0E04               	movlw	4
  4684  0018FE  0100               	movlb	0	; () banked
  4685  001900  198C               	xorwf	_keyValue& (0+255),w,b	;volatile
  4686  001902  B4D8               	btfsc	status,2,c
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;key_menu.c: 173: key_process_set();
  4690  001904  EC98  F012         	call	_key_process_set	;wreg free
  4691  001908                     l7743:
  4692                           
  4693                           ;key_menu.c: 174: }
  4694                           ;key_menu.c: 175: }
  4695                           ;key_menu.c: 176: ui_disp_menu();
  4696  001908  ECD5  F012         	call	_ui_disp_menu	;wreg free
  4697  00190C  0012               	return		;funcret
  4698  00190E                     __end_of_key_process:
  4699                           	opt stack 0
  4700                           tblptru	equ	0xFF8
  4701                           tblptrh	equ	0xFF7
  4702                           tblptrl	equ	0xFF6
  4703                           tablat	equ	0xFF5
  4704                           prodh	equ	0xFF4
  4705                           prodl	equ	0xFF3
  4706                           intcon	equ	0xFF2
  4707                           postinc0	equ	0xFEE
  4708                           wreg	equ	0xFE8
  4709                           postdec1	equ	0xFE5
  4710                           plusw1	equ	0xFE3
  4711                           fsr1h	equ	0xFE2
  4712                           fsr1l	equ	0xFE1
  4713                           indf2	equ	0xFDF
  4714                           plusw2	equ	0xFDB
  4715                           fsr2h	equ	0xFDA
  4716                           fsr2l	equ	0xFD9
  4717                           status	equ	0xFD8
  4718                           
  4719 ;; *************** function _ui_disp_menu *****************
  4720 ;; Defined at:
  4721 ;;		line 205 in file "src/api/ui.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:   12
  4742 ;; This function calls:
  4743 ;;		_ui_disp_menu_psw_adj
  4744 ;; This function is called by:
  4745 ;;		_key_process
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text22
  4750  0025AA                     __ptext22:
  4751                           	opt stack 0
  4752  0025AA                     _ui_disp_menu:
  4753                           	opt stack 17
  4754                           
  4755                           ;ui.c: 207: switch(menu){
  4756                           
  4757                           ;incstack = 0
  4758  0025AA  D003               	goto	l7571
  4759  0025AC                     l7567:
  4760  0025AC  EC1B  F013         	call	_ui_disp_menu_psw_adj	;wreg free
  4761                           
  4762                           ;ui.c: 215: }
  4763                           
  4764                           ;ui.c: 213: default:break;
  4765  0025B0  0012               	return	
  4766  0025B2                     l7571:
  4767  0025B2  503C               	movf	_menu,w,c	;volatile
  4768                           
  4769                           ; Switch size 1, requested type "space"
  4770                           ; Number of cases is 4, Range of values is 0 to 16
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; simple_byte           13     7 (average)
  4774                           ;	Chosen strategy is simple_byte
  4775  0025B4  0A00               	xorlw	0	; case 0
  4776  0025B6  B4D8               	btfsc	status,2,c
  4777  0025B8  0012               	return	
  4778  0025BA  0A01               	xorlw	1	; case 1
  4779  0025BC  B4D8               	btfsc	status,2,c
  4780  0025BE  0012               	return	
  4781  0025C0  0A03               	xorlw	3	; case 2
  4782  0025C2  B4D8               	btfsc	status,2,c
  4783  0025C4  0012               	return	
  4784  0025C6  0A12               	xorlw	18	; case 16
  4785  0025C8  A4D8               	btfss	status,2,c
  4786  0025CA  0012               	return	
  4787  0025CC  D7EF               	goto	l7567
  4788  0025CE                     __end_of_ui_disp_menu:
  4789                           	opt stack 0
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           prodh	equ	0xFF4
  4795                           prodl	equ	0xFF3
  4796                           intcon	equ	0xFF2
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           postdec1	equ	0xFE5
  4800                           plusw1	equ	0xFE3
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           plusw2	equ	0xFDB
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function _ui_disp_menu_psw_adj *****************
  4810 ;; Defined at:
  4811 ;;		line 200 in file "src/api/ui.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:   11
  4832 ;; This function calls:
  4833 ;;		_ui_disp_adj_xfixed_pt
  4834 ;; This function is called by:
  4835 ;;		_ui_disp_menu
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text23
  4840  002636                     __ptext23:
  4841                           	opt stack 0
  4842  002636                     _ui_disp_menu_psw_adj:
  4843                           	opt stack 17
  4844                           
  4845                           ;ui.c: 202: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  4846                           
  4847                           ;incstack = 0
  4848  002636  0EF2               	movlw	low STR_3
  4849  002638  0100               	movlb	0	; () banked
  4850  00263A  6FD8               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  4851  00263C  0EFF               	movlw	high STR_3
  4852  00263E  0100               	movlb	0	; () banked
  4853  002640  6FD9               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  4854  002642  C03D  F0DA         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  4855  002646  C03E  F0DB         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  4856  00264A  C03F  F0DC         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  4857  00264E  EC4C  F008         	call	_ui_disp_adj_xfixed_pt	;wreg free
  4858  002652  0012               	return		;funcret
  4859  002654                     __end_of_ui_disp_menu_psw_adj:
  4860                           	opt stack 0
  4861                           tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           prodh	equ	0xFF4
  4866                           prodl	equ	0xFF3
  4867                           intcon	equ	0xFF2
  4868                           postinc0	equ	0xFEE
  4869                           wreg	equ	0xFE8
  4870                           postdec1	equ	0xFE5
  4871                           plusw1	equ	0xFE3
  4872                           fsr1h	equ	0xFE2
  4873                           fsr1l	equ	0xFE1
  4874                           indf2	equ	0xFDF
  4875                           plusw2	equ	0xFDB
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  4881 ;; Defined at:
  4882 ;;		line 186 in file "src/api/ui.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  str             2   21[BANK0 ] PTR unsigned char 
  4885 ;;		 -> STR_3(5), 
  4886 ;;  x               2   23[BANK0 ] unsigned int 
  4887 ;;  loc             1   25[BANK0 ] unsigned char 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  buf            10   28[BANK0 ] unsigned char [10]
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4899 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;Total ram usage:       17 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:   10
  4906 ;; This function calls:
  4907 ;;		___x_arrange_str
  4908 ;;		_lcd_disp_refresh
  4909 ;;		_lcd_show_string
  4910 ;;		_m_int16_2_str_4
  4911 ;;		_m_mem_cpy
  4912 ;;		_ui_disp_clear_num_dp
  4913 ;; This function is called by:
  4914 ;;		_ui_disp_menu_psw_adj
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text24
  4919  001098                     __ptext24:
  4920                           	opt stack 0
  4921  001098                     _ui_disp_adj_xfixed_pt:
  4922                           	opt stack 17
  4923                           
  4924                           ;ui.c: 188: uint8_t buf[10];
  4925                           ;ui.c: 189: ui_disp_clear_num_dp();
  4926                           
  4927                           ;incstack = 0
  4928  001098  EC4A  F00F         	call	_ui_disp_clear_num_dp	;wreg free
  4929                           
  4930                           ;ui.c: 190: if(x>9999)x=9999;
  4931  00109C  0E10               	movlw	16
  4932  00109E  0100               	movlb	0	; () banked
  4933  0010A0  5DDA               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  4934  0010A2  0E27               	movlw	39
  4935  0010A4  0100               	movlb	0	; () banked
  4936  0010A6  59DB               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  4937  0010A8  A0D8               	btfss	status,0,c
  4938  0010AA  D005               	goto	l6877
  4939                           
  4940                           ; BSR set to: 0
  4941  0010AC  0E27               	movlw	39
  4942  0010AE  0100               	movlb	0	; () banked
  4943  0010B0  6FDB               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  4944  0010B2  0E0F               	movlw	15
  4945  0010B4  6FDA               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  4946  0010B6                     l6877:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;ui.c: 191: m_mem_cpy(buf,str);
  4950  0010B6  0EDF               	movlw	low ui_disp_adj_xfixed_pt@buf
  4951  0010B8  0100               	movlb	0	; () banked
  4952  0010BA  6FC3               	movwf	m_mem_cpy@d& (0+255),b
  4953  0010BC  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  4954  0010BE  0100               	movlb	0	; () banked
  4955  0010C0  6FC4               	movwf	(m_mem_cpy@d+1)& (0+255),b
  4956  0010C2  C0D8  F0C5         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  4957  0010C6  C0D9  F0C6         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  4958  0010CA  EC60  F010         	call	_m_mem_cpy	;wreg free
  4959                           
  4960                           ;ui.c: 192: m_int16_2_str_4(buf+4,x);
  4961  0010CE  0EE3               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  4962  0010D0  0100               	movlb	0	; () banked
  4963  0010D2  6FCB               	movwf	m_int16_2_str_4@buf& (0+255),b
  4964  0010D4  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  4965  0010D6  0100               	movlb	0	; () banked
  4966  0010D8  6FCC               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  4967  0010DA  C0DA  F0CD         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  4968  0010DE  C0DB  F0CE         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  4969  0010E2  EC85  F003         	call	_m_int16_2_str_4	;wreg free
  4970                           
  4971                           ;ui.c: 193: __x_arrange_str(buf,8);
  4972  0010E6  0EDF               	movlw	low ui_disp_adj_xfixed_pt@buf
  4973  0010E8  0100               	movlb	0	; () banked
  4974  0010EA  6FC3               	movwf	___x_arrange_str@str& (0+255),b
  4975  0010EC  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  4976  0010EE  0100               	movlb	0	; () banked
  4977  0010F0  6FC4               	movwf	(___x_arrange_str@str+1)& (0+255),b
  4978  0010F2  0E08               	movlw	8
  4979  0010F4  0100               	movlb	0	; () banked
  4980  0010F6  6FC5               	movwf	___x_arrange_str@len& (0+255),b
  4981  0010F8  EC63  F00E         	call	___x_arrange_str	;wreg free
  4982                           
  4983                           ;ui.c: 194: if(loc>3)loc=3;
  4984  0010FC  0E03               	movlw	3
  4985  0010FE  0100               	movlb	0	; () banked
  4986  001100  65DC               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  4987  001102  D003               	goto	l6887
  4988                           
  4989                           ; BSR set to: 0
  4990  001104  0E03               	movlw	3
  4991  001106  0100               	movlb	0	; () banked
  4992  001108  6FDC               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  4993  00110A                     l6887:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;ui.c: 195: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  4997  00110A  010F               	movlb	15	; () banked
  4998  00110C  B75F               	btfsc	95,3,b	;volatile
  4999  00110E  D014               	goto	l6891
  5000                           
  5001                           ; BSR set to: 15
  5002  001110  0100               	movlb	0	; () banked
  5003  001112  51DC               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  5004  001114  0100               	movlb	0	; () banked
  5005  001116  6FDD               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  5006  001118  6BDE               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  5007  00111A  0E04               	movlw	4
  5008  00111C  0100               	movlb	0	; () banked
  5009  00111E  27DD               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  5010  001120  0E00               	movlw	0
  5011  001122  23DE               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  5012  001124  0EDF               	movlw	low ui_disp_adj_xfixed_pt@buf
  5013  001126  0100               	movlb	0	; () banked
  5014  001128  25DD               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  5015  00112A  6ED9               	movwf	fsr2l,c
  5016  00112C  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5017  00112E  0100               	movlb	0	; () banked
  5018  001130  21DE               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  5019  001132  6EDA               	movwf	fsr2h,c
  5020  001134  0E20               	movlw	32
  5021  001136  6EDF               	movwf	indf2,c
  5022  001138                     l6891:
  5023                           
  5024                           ;ui.c: 196: lcd_show_string(buf);
  5025  001138  0EDF               	movlw	low ui_disp_adj_xfixed_pt@buf
  5026  00113A  0100               	movlb	0	; () banked
  5027  00113C  6FD5               	movwf	lcd_show_string@str& (0+255),b
  5028  00113E  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  5029  001140  0100               	movlb	0	; () banked
  5030  001142  6FD6               	movwf	(lcd_show_string@str+1)& (0+255),b
  5031  001144  ECFA  F00C         	call	_lcd_show_string	;wreg free
  5032                           
  5033                           ;ui.c: 197: lcd_disp_refresh();
  5034  001148  ECD2  F00D         	call	_lcd_disp_refresh	;wreg free
  5035  00114C  0012               	return		;funcret
  5036  00114E                     __end_of_ui_disp_adj_xfixed_pt:
  5037                           	opt stack 0
  5038                           tblptru	equ	0xFF8
  5039                           tblptrh	equ	0xFF7
  5040                           tblptrl	equ	0xFF6
  5041                           tablat	equ	0xFF5
  5042                           prodh	equ	0xFF4
  5043                           prodl	equ	0xFF3
  5044                           intcon	equ	0xFF2
  5045                           postinc0	equ	0xFEE
  5046                           wreg	equ	0xFE8
  5047                           postdec1	equ	0xFE5
  5048                           plusw1	equ	0xFE3
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           indf2	equ	0xFDF
  5052                           plusw2	equ	0xFDB
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _ui_disp_clear_num_dp *****************
  5058 ;; Defined at:
  5059 ;;		line 159 in file "src/api/ui.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    9
  5080 ;; This function calls:
  5081 ;;		_lcd_show_dp
  5082 ;;		_lcd_show_string
  5083 ;; This function is called by:
  5084 ;;		_ui_disp_adj_xfixed_pt
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text25
  5089  001E94                     __ptext25:
  5090                           	opt stack 0
  5091  001E94                     _ui_disp_clear_num_dp:
  5092                           	opt stack 17
  5093                           
  5094                           ;ui.c: 161: lcd_show_string((uint8_t*)"        ");
  5095                           
  5096                           ;incstack = 0
  5097  001E94  0EE4               	movlw	low STR_2
  5098  001E96  0100               	movlb	0	; () banked
  5099  001E98  6FD5               	movwf	lcd_show_string@str& (0+255),b
  5100  001E9A  0EFF               	movlw	high STR_2
  5101  001E9C  0100               	movlb	0	; () banked
  5102  001E9E  6FD6               	movwf	(lcd_show_string@str+1)& (0+255),b
  5103  001EA0  ECFA  F00C         	call	_lcd_show_string	;wreg free
  5104                           
  5105                           ;ui.c: 162: lcd_show_dp(0,0);
  5106  001EA4  0E00               	movlw	0
  5107  001EA6  0100               	movlb	0	; () banked
  5108  001EA8  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5109  001EAA  0E00               	movlw	0
  5110  001EAC  EC31  F00D         	call	_lcd_show_dp
  5111                           
  5112                           ;ui.c: 163: lcd_show_dp(1,0);
  5113  001EB0  0E00               	movlw	0
  5114  001EB2  0100               	movlb	0	; () banked
  5115  001EB4  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5116  001EB6  0E01               	movlw	1
  5117  001EB8  EC31  F00D         	call	_lcd_show_dp
  5118                           
  5119                           ;ui.c: 164: lcd_show_dp(2,0);
  5120  001EBC  0E00               	movlw	0
  5121  001EBE  0100               	movlb	0	; () banked
  5122  001EC0  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5123  001EC2  0E02               	movlw	2
  5124  001EC4  EC31  F00D         	call	_lcd_show_dp
  5125                           
  5126                           ;ui.c: 165: lcd_show_dp(4,0);
  5127  001EC8  0E00               	movlw	0
  5128  001ECA  0100               	movlb	0	; () banked
  5129  001ECC  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5130  001ECE  0E04               	movlw	4
  5131  001ED0  EC31  F00D         	call	_lcd_show_dp
  5132                           
  5133                           ;ui.c: 166: lcd_show_dp(5,0);
  5134  001ED4  0E00               	movlw	0
  5135  001ED6  0100               	movlb	0	; () banked
  5136  001ED8  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5137  001EDA  0E05               	movlw	5
  5138  001EDC  EC31  F00D         	call	_lcd_show_dp
  5139                           
  5140                           ;ui.c: 167: lcd_show_dp(6,0);
  5141  001EE0  0E00               	movlw	0
  5142  001EE2  0100               	movlb	0	; () banked
  5143  001EE4  6FD2               	movwf	lcd_show_dp@show& (0+255),b
  5144  001EE6  0E06               	movlw	6
  5145  001EE8  EC31  F00D         	call	_lcd_show_dp
  5146  001EEC  0012               	return		;funcret
  5147  001EEE                     __end_of_ui_disp_clear_num_dp:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           postdec1	equ	0xFE5
  5159                           plusw1	equ	0xFE3
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           indf2	equ	0xFDF
  5163                           plusw2	equ	0xFDB
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _lcd_show_string *****************
  5169 ;; Defined at:
  5170 ;;		line 534 in file "src/driver/lcd.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  str             2   18[BANK0 ] PTR unsigned char 
  5173 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  t8              1   20[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:        3 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    8
  5192 ;; This function calls:
  5193 ;;		_lcd_show_chr
  5194 ;; This function is called by:
  5195 ;;		_ui_disp_rtc_mm_ss
  5196 ;;		_ui_disp_clear_num_dp
  5197 ;;		_ui_disp_adj_xfixed_pt
  5198 ;;		_ui_disp_adj_xfloat_pt
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text26
  5203  0019F4                     __ptext26:
  5204                           	opt stack 0
  5205  0019F4                     _lcd_show_string:
  5206                           	opt stack 21
  5207                           
  5208                           ;lcd.c: 536: uint8_t t8=0;
  5209                           
  5210                           ;incstack = 0
  5211  0019F4  0E00               	movlw	0
  5212  0019F6  0100               	movlb	0	; () banked
  5213  0019F8  6FD7               	movwf	lcd_show_string@t8& (0+255),b
  5214                           
  5215                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  5216  0019FA  D01B               	goto	l6641
  5217  0019FC                     l6635:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  5221  0019FC  C0D5  FFF6         	movff	lcd_show_string@str,tblptrl
  5222  001A00  C0D6  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5223  001A04  6AF8               	clrf	tblptru,c
  5224  001A06  0E0F               	movlw	(high __ramtop+-1)
  5225  001A08  64F7               	cpfsgt	tblptrh,c
  5226  001A0A  D003               	bra	u4717
  5227  001A0C  0008               	tblrd		*
  5228  001A0E  50F5               	movf	tablat,w,c
  5229  001A10  D005               	bra	u4710
  5230  001A12                     u4717:
  5231  001A12  CFF6 FFE9          	movff	tblptrl,fsr0l
  5232  001A16  CFF7 FFEA          	movff	tblptrh,fsr0h
  5233  001A1A  50EF               	movf	indf0,w,c
  5234  001A1C                     u4710:
  5235  001A1C  0100               	movlb	0	; () banked
  5236  001A1E  6FD2               	movwf	lcd_show_chr@chr& (0+255),b
  5237  001A20  0100               	movlb	0	; () banked
  5238  001A22  51D7               	movf	lcd_show_string@t8& (0+255),w,b
  5239  001A24  ECA0  F009         	call	_lcd_show_chr
  5240                           
  5241                           ;lcd.c: 539: str++;
  5242  001A28  0100               	movlb	0	; () banked
  5243  001A2A  4BD5               	infsnz	lcd_show_string@str& (0+255),f,b
  5244  001A2C  2BD6               	incf	(lcd_show_string@str+1)& (0+255),f,b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;lcd.c: 540: t8++;
  5248  001A2E  0100               	movlb	0	; () banked
  5249  001A30  2BD7               	incf	lcd_show_string@t8& (0+255),f,b
  5250  001A32                     l6641:
  5251                           
  5252                           ; BSR set to: 0
  5253  001A32  C0D5  FFF6         	movff	lcd_show_string@str,tblptrl
  5254  001A36  C0D6  FFF7         	movff	lcd_show_string@str+1,tblptrh
  5255  001A3A  6AF8               	clrf	tblptru,c
  5256  001A3C  0E0F               	movlw	(high __ramtop+-1)
  5257  001A3E  64F7               	cpfsgt	tblptrh,c
  5258  001A40  D003               	bra	u4727
  5259  001A42  0008               	tblrd		*
  5260  001A44  50F5               	movf	tablat,w,c
  5261  001A46  D005               	bra	u4720
  5262  001A48                     u4727:
  5263  001A48  CFF6 FFE9          	movff	tblptrl,fsr0l
  5264  001A4C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5265  001A50  50EF               	movf	indf0,w,c
  5266  001A52                     u4720:
  5267  001A52  0900               	iorlw	0
  5268  001A54  B4D8               	btfsc	status,2,c
  5269  001A56  0012               	return	
  5270  001A58  0E07               	movlw	7
  5271  001A5A  0100               	movlb	0	; () banked
  5272  001A5C  65D7               	cpfsgt	lcd_show_string@t8& (0+255),b
  5273  001A5E  D7CE               	goto	l6635
  5274  001A60  0012               	return	
  5275  001A62                     __end_of_lcd_show_string:
  5276                           	opt stack 0
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           indf0	equ	0xFEF
  5285                           postinc0	equ	0xFEE
  5286                           fsr0h	equ	0xFEA
  5287                           fsr0l	equ	0xFE9
  5288                           wreg	equ	0xFE8
  5289                           postdec1	equ	0xFE5
  5290                           plusw1	equ	0xFE3
  5291                           fsr1h	equ	0xFE2
  5292                           fsr1l	equ	0xFE1
  5293                           indf2	equ	0xFDF
  5294                           plusw2	equ	0xFDB
  5295                           fsr2h	equ	0xFDA
  5296                           fsr2l	equ	0xFD9
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _lcd_show_chr *****************
  5300 ;; Defined at:
  5301 ;;		line 489 in file "src/driver/lcd.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  loc             1    wreg     unsigned char 
  5304 ;;  chr             1   15[BANK0 ] unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  loc             1   16[BANK0 ] unsigned char 
  5307 ;;  code            1   17[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;Total ram usage:        3 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    7
  5324 ;; This function calls:
  5325 ;;		_lcd_disp_chr_loc_0
  5326 ;;		_lcd_disp_chr_loc_1
  5327 ;;		_lcd_disp_chr_loc_2
  5328 ;;		_lcd_disp_chr_loc_3
  5329 ;;		_lcd_disp_chr_loc_4
  5330 ;;		_lcd_disp_chr_loc_5
  5331 ;;		_lcd_disp_chr_loc_6
  5332 ;;		_lcd_disp_chr_loc_7
  5333 ;;		_lcd_disp_get_code
  5334 ;; This function is called by:
  5335 ;;		_lcd_show_string_l0
  5336 ;;		_lcd_show_string_l1
  5337 ;;		_lcd_show_string
  5338 ;;		_lcd_show_chr_lc
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text27
  5343  001340                     __ptext27:
  5344                           	opt stack 0
  5345  001340                     _lcd_show_chr:
  5346                           	opt stack 21
  5347                           
  5348                           ;incstack = 0
  5349                           ;lcd_show_chr@loc stored from wreg
  5350  001340  0100               	movlb	0	; () banked
  5351  001342  6FD3               	movwf	lcd_show_chr@loc& (0+255),b
  5352                           
  5353                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  5354  001344  0100               	movlb	0	; () banked
  5355  001346  51D2               	movf	lcd_show_chr@chr& (0+255),w,b
  5356  001348  EC34  F00E         	call	_lcd_disp_get_code
  5357  00134C  0100               	movlb	0	; () banked
  5358  00134E  6FD4               	movwf	lcd_show_chr@code& (0+255),b
  5359                           
  5360                           ;lcd.c: 492: switch(loc){
  5361  001350  D028               	goto	l6613
  5362  001352                     l6595:
  5363                           
  5364                           ; BSR set to: 0
  5365  001352  0100               	movlb	0	; () banked
  5366  001354  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5367  001356  EC04  F00C         	call	_lcd_disp_chr_loc_0
  5368  00135A  0012               	return	
  5369  00135C                     l6597:
  5370  00135C  0100               	movlb	0	; () banked
  5371  00135E  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5372  001360  ECC2  F00B         	call	_lcd_disp_chr_loc_1
  5373  001364  0012               	return	
  5374  001366                     l6599:
  5375  001366  0100               	movlb	0	; () banked
  5376  001368  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5377  00136A  EC80  F00B         	call	_lcd_disp_chr_loc_2
  5378  00136E  0012               	return	
  5379  001370                     l6601:
  5380  001370  0100               	movlb	0	; () banked
  5381  001372  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5382  001374  EC3E  F00B         	call	_lcd_disp_chr_loc_3
  5383  001378  0012               	return	
  5384  00137A                     l6603:
  5385  00137A  0100               	movlb	0	; () banked
  5386  00137C  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5387  00137E  ECFC  F00A         	call	_lcd_disp_chr_loc_4
  5388  001382  0012               	return	
  5389  001384                     l6605:
  5390  001384  0100               	movlb	0	; () banked
  5391  001386  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5392  001388  ECBA  F00A         	call	_lcd_disp_chr_loc_5
  5393  00138C  0012               	return	
  5394  00138E                     l6607:
  5395  00138E  0100               	movlb	0	; () banked
  5396  001390  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5397  001392  EC78  F00A         	call	_lcd_disp_chr_loc_6
  5398  001396  0012               	return	
  5399  001398                     l6609:
  5400  001398  0100               	movlb	0	; () banked
  5401  00139A  51D4               	movf	lcd_show_chr@code& (0+255),w,b
  5402  00139C  EC36  F00A         	call	_lcd_disp_chr_loc_7
  5403                           
  5404                           ;lcd.c: 502: }
  5405                           
  5406                           ;lcd.c: 501: default:break;
  5407  0013A0  0012               	return	
  5408  0013A2                     l6613:
  5409  0013A2  0100               	movlb	0	; () banked
  5410  0013A4  51D3               	movf	lcd_show_chr@loc& (0+255),w,b
  5411                           
  5412                           ; Switch size 1, requested type "space"
  5413                           ; Number of cases is 8, Range of values is 0 to 7
  5414                           ; switch strategies available:
  5415                           ; Name         Instructions Cycles
  5416                           ; simple_byte           25    13 (average)
  5417                           ;	Chosen strategy is simple_byte
  5418  0013A6  0A00               	xorlw	0	; case 0
  5419  0013A8  B4D8               	btfsc	status,2,c
  5420  0013AA  D7D3               	goto	l6595
  5421  0013AC  0A01               	xorlw	1	; case 1
  5422  0013AE  B4D8               	btfsc	status,2,c
  5423  0013B0  D7D5               	goto	l6597
  5424  0013B2  0A03               	xorlw	3	; case 2
  5425  0013B4  B4D8               	btfsc	status,2,c
  5426  0013B6  D7D7               	goto	l6599
  5427  0013B8  0A01               	xorlw	1	; case 3
  5428  0013BA  B4D8               	btfsc	status,2,c
  5429  0013BC  D7D9               	goto	l6601
  5430  0013BE  0A07               	xorlw	7	; case 4
  5431  0013C0  B4D8               	btfsc	status,2,c
  5432  0013C2  D7DB               	goto	l6603
  5433  0013C4  0A01               	xorlw	1	; case 5
  5434  0013C6  B4D8               	btfsc	status,2,c
  5435  0013C8  D7DD               	goto	l6605
  5436  0013CA  0A03               	xorlw	3	; case 6
  5437  0013CC  B4D8               	btfsc	status,2,c
  5438  0013CE  D7DF               	goto	l6607
  5439  0013D0  0A01               	xorlw	1	; case 7
  5440  0013D2  A4D8               	btfss	status,2,c
  5441  0013D4  0012               	return	
  5442  0013D6  D7E0               	goto	l6609
  5443  0013D8                     __end_of_lcd_show_chr:
  5444                           	opt stack 0
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           indf0	equ	0xFEF
  5453                           postinc0	equ	0xFEE
  5454                           fsr0h	equ	0xFEA
  5455                           fsr0l	equ	0xFE9
  5456                           wreg	equ	0xFE8
  5457                           postdec1	equ	0xFE5
  5458                           plusw1	equ	0xFE3
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           indf2	equ	0xFDF
  5462                           plusw2	equ	0xFDB
  5463                           fsr2h	equ	0xFDA
  5464                           fsr2l	equ	0xFD9
  5465                           status	equ	0xFD8
  5466                           
  5467 ;; *************** function _lcd_disp_get_code *****************
  5468 ;; Defined at:
  5469 ;;		line 461 in file "src/driver/lcd.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  chr             1    wreg     unsigned char 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  chr             1    0[BANK0 ] unsigned char 
  5474 ;;  i               1    2[BANK0 ] unsigned char 
  5475 ;;  ret             1    1[BANK0 ] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        3 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    4
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_lcd_show_chr
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text28
  5500  001C68                     __ptext28:
  5501                           	opt stack 0
  5502  001C68                     _lcd_disp_get_code:
  5503                           	opt stack 23
  5504                           
  5505                           ;incstack = 0
  5506                           ;lcd_disp_get_code@chr stored from wreg
  5507  001C68  0100               	movlb	0	; () banked
  5508  001C6A  6FC3               	movwf	lcd_disp_get_code@chr& (0+255),b
  5509                           
  5510                           ;lcd.c: 463: uint8_t i;
  5511                           ;lcd.c: 464: uint8_t ret;
  5512                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  5513  001C6C  0E00               	movlw	0
  5514  001C6E  0100               	movlb	0	; () banked
  5515  001C70  6FC5               	movwf	lcd_disp_get_code@i& (0+255),b
  5516  001C72                     l6555:
  5517                           
  5518                           ; BSR set to: 0
  5519  001C72  0E28               	movlw	40
  5520  001C74  0100               	movlb	0	; () banked
  5521  001C76  65C5               	cpfsgt	lcd_disp_get_code@i& (0+255),b
  5522  001C78  D001               	goto	l6559
  5523  001C7A  D012               	goto	l6567
  5524  001C7C                     l6559:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  5528  001C7C  0100               	movlb	0	; () banked
  5529  001C7E  51C5               	movf	lcd_disp_get_code@i& (0+255),w,b
  5530  001C80  0D01               	mullw	1
  5531  001C82  0EBB               	movlw	low _LCDDigitalIndexTable
  5532  001C84  24F3               	addwf	prodl,w,c
  5533  001C86  6EF6               	movwf	tblptrl,c
  5534  001C88  0EFE               	movlw	high _LCDDigitalIndexTable
  5535  001C8A  20F4               	addwfc	prodh,w,c
  5536  001C8C  6EF7               	movwf	tblptrh,c
  5537  001C8E                     	if	0	;There are less than 3 active tblptr bytes
  5538  001C8E                     	endif
  5539  001C8E  0008               	tblrd		*
  5540  001C90  50F5               	movf	tablat,w,c
  5541  001C92  0100               	movlb	0	; () banked
  5542  001C94  19C3               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
  5543  001C96  B4D8               	btfsc	status,2,c
  5544  001C98  D003               	goto	l6567
  5545                           
  5546                           ; BSR set to: 0
  5547                           
  5548                           ; BSR set to: 0
  5549                           
  5550                           ; BSR set to: 0
  5551  001C9A  0100               	movlb	0	; () banked
  5552  001C9C  2BC5               	incf	lcd_disp_get_code@i& (0+255),f,b
  5553  001C9E  D7E9               	goto	l6555
  5554  001CA0                     l6567:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;lcd.c: 467: }
  5558                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  5559  001CA0  0E29               	movlw	41
  5560  001CA2  0100               	movlb	0	; () banked
  5561  001CA4  61C5               	cpfslt	lcd_disp_get_code@i& (0+255),b
  5562  001CA6  D00C               	goto	l6571
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  5566  001CA8  0100               	movlb	0	; () banked
  5567  001CAA  51C5               	movf	lcd_disp_get_code@i& (0+255),w,b
  5568  001CAC  0D01               	mullw	1
  5569  001CAE  0EE4               	movlw	low _LCDDigitalTable
  5570  001CB0  24F3               	addwf	prodl,w,c
  5571  001CB2  6EF6               	movwf	tblptrl,c
  5572  001CB4  0EFE               	movlw	high _LCDDigitalTable
  5573  001CB6  20F4               	addwfc	prodh,w,c
  5574  001CB8  6EF7               	movwf	tblptrh,c
  5575  001CBA                     	if	0	;There are less than 3 active tblptr bytes
  5576  001CBA                     	endif
  5577  001CBA  0008               	tblrd		*
  5578  001CBC  CFF5 F0C4          	movff	tablat,lcd_disp_get_code@ret
  5579  001CC0                     l6571:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;lcd.c: 470: }
  5583                           ;lcd.c: 471: return ret;
  5584  001CC0  0100               	movlb	0	; () banked
  5585  001CC2  51C4               	movf	lcd_disp_get_code@ret& (0+255),w,b
  5586  001CC4  0012               	return	
  5587  001CC6                     __end_of_lcd_disp_get_code:
  5588                           	opt stack 0
  5589                           tblptru	equ	0xFF8
  5590                           tblptrh	equ	0xFF7
  5591                           tblptrl	equ	0xFF6
  5592                           tablat	equ	0xFF5
  5593                           prodh	equ	0xFF4
  5594                           prodl	equ	0xFF3
  5595                           intcon	equ	0xFF2
  5596                           indf0	equ	0xFEF
  5597                           postinc0	equ	0xFEE
  5598                           fsr0h	equ	0xFEA
  5599                           fsr0l	equ	0xFE9
  5600                           wreg	equ	0xFE8
  5601                           postdec1	equ	0xFE5
  5602                           plusw1	equ	0xFE3
  5603                           fsr1h	equ	0xFE2
  5604                           fsr1l	equ	0xFE1
  5605                           indf2	equ	0xFDF
  5606                           plusw2	equ	0xFDB
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _lcd_disp_chr_loc_7 *****************
  5612 ;; Defined at:
  5613 ;;		line 353 in file "src/driver/lcd.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  code            1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  code            1   14[BANK0 ] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    6
  5634 ;; This function calls:
  5635 ;;		_lcd_set_com_seg
  5636 ;; This function is called by:
  5637 ;;		_lcd_show_chr
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text29
  5642  00146C                     __ptext29:
  5643                           	opt stack 0
  5644  00146C                     _lcd_disp_chr_loc_7:
  5645                           	opt stack 21
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;incstack = 0
  5649                           ;lcd_disp_chr_loc_7@code stored from wreg
  5650  00146C  0100               	movlb	0	; () banked
  5651  00146E  6FD1               	movwf	lcd_disp_chr_loc_7@code& (0+255),b
  5652                           
  5653                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  5654  001470  0E13               	movlw	19
  5655  001472  6E20               	movwf	lcd_set_com_seg@seg,c
  5656  001474  0100               	movlb	0	; () banked
  5657  001476  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5658  001478  0B08               	andlw	8
  5659  00147A  6E21               	movwf	lcd_set_com_seg@show,c
  5660  00147C  0E00               	movlw	0
  5661  00147E  EC74  F006         	call	_lcd_set_com_seg
  5662                           
  5663                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  5664  001482  0E13               	movlw	19
  5665  001484  6E20               	movwf	lcd_set_com_seg@seg,c
  5666  001486  0100               	movlb	0	; () banked
  5667  001488  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5668  00148A  0B10               	andlw	16
  5669  00148C  6E21               	movwf	lcd_set_com_seg@show,c
  5670  00148E  0E01               	movlw	1
  5671  001490  EC74  F006         	call	_lcd_set_com_seg
  5672                           
  5673                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  5674  001494  0E13               	movlw	19
  5675  001496  6E20               	movwf	lcd_set_com_seg@seg,c
  5676  001498  0100               	movlb	0	; () banked
  5677  00149A  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5678  00149C  0B20               	andlw	32
  5679  00149E  6E21               	movwf	lcd_set_com_seg@show,c
  5680  0014A0  0E02               	movlw	2
  5681  0014A2  EC74  F006         	call	_lcd_set_com_seg
  5682                           
  5683                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  5684  0014A6  0E13               	movlw	19
  5685  0014A8  6E20               	movwf	lcd_set_com_seg@seg,c
  5686  0014AA  0100               	movlb	0	; () banked
  5687  0014AC  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5688  0014AE  0B01               	andlw	1
  5689  0014B0  6E21               	movwf	lcd_set_com_seg@show,c
  5690  0014B2  0E03               	movlw	3
  5691  0014B4  EC74  F006         	call	_lcd_set_com_seg
  5692                           
  5693                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  5694  0014B8  0E28               	movlw	40
  5695  0014BA  6E20               	movwf	lcd_set_com_seg@seg,c
  5696  0014BC  0100               	movlb	0	; () banked
  5697  0014BE  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5698  0014C0  0B04               	andlw	4
  5699  0014C2  6E21               	movwf	lcd_set_com_seg@show,c
  5700  0014C4  0E01               	movlw	1
  5701  0014C6  EC74  F006         	call	_lcd_set_com_seg
  5702                           
  5703                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  5704  0014CA  0E28               	movlw	40
  5705  0014CC  6E20               	movwf	lcd_set_com_seg@seg,c
  5706  0014CE  0100               	movlb	0	; () banked
  5707  0014D0  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5708  0014D2  0B40               	andlw	64
  5709  0014D4  6E21               	movwf	lcd_set_com_seg@show,c
  5710  0014D6  0E02               	movlw	2
  5711  0014D8  EC74  F006         	call	_lcd_set_com_seg
  5712                           
  5713                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  5714  0014DC  0E28               	movlw	40
  5715  0014DE  6E20               	movwf	lcd_set_com_seg@seg,c
  5716  0014E0  0100               	movlb	0	; () banked
  5717  0014E2  51D1               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  5718  0014E4  0B02               	andlw	2
  5719  0014E6  6E21               	movwf	lcd_set_com_seg@show,c
  5720  0014E8  0E03               	movlw	3
  5721  0014EA  EC74  F006         	call	_lcd_set_com_seg
  5722  0014EE  0012               	return		;funcret
  5723  0014F0                     __end_of_lcd_disp_chr_loc_7:
  5724                           	opt stack 0
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           indf0	equ	0xFEF
  5733                           postinc0	equ	0xFEE
  5734                           fsr0h	equ	0xFEA
  5735                           fsr0l	equ	0xFE9
  5736                           wreg	equ	0xFE8
  5737                           postdec1	equ	0xFE5
  5738                           plusw1	equ	0xFE3
  5739                           fsr1h	equ	0xFE2
  5740                           fsr1l	equ	0xFE1
  5741                           indf2	equ	0xFDF
  5742                           plusw2	equ	0xFDB
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _lcd_disp_chr_loc_6 *****************
  5748 ;; Defined at:
  5749 ;;		line 334 in file "src/driver/lcd.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  code            1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  code            1   14[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    6
  5770 ;; This function calls:
  5771 ;;		_lcd_set_com_seg
  5772 ;; This function is called by:
  5773 ;;		_lcd_show_chr
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text30
  5778  0014F0                     __ptext30:
  5779                           	opt stack 0
  5780  0014F0                     _lcd_disp_chr_loc_6:
  5781                           	opt stack 21
  5782                           
  5783                           ;incstack = 0
  5784                           ;lcd_disp_chr_loc_6@code stored from wreg
  5785  0014F0  0100               	movlb	0	; () banked
  5786  0014F2  6FD1               	movwf	lcd_disp_chr_loc_6@code& (0+255),b
  5787                           
  5788                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  5789  0014F4  0E0E               	movlw	14
  5790  0014F6  6E20               	movwf	lcd_set_com_seg@seg,c
  5791  0014F8  0100               	movlb	0	; () banked
  5792  0014FA  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5793  0014FC  0B08               	andlw	8
  5794  0014FE  6E21               	movwf	lcd_set_com_seg@show,c
  5795  001500  0E00               	movlw	0
  5796  001502  EC74  F006         	call	_lcd_set_com_seg
  5797                           
  5798                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  5799  001506  0E0E               	movlw	14
  5800  001508  6E20               	movwf	lcd_set_com_seg@seg,c
  5801  00150A  0100               	movlb	0	; () banked
  5802  00150C  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5803  00150E  0B10               	andlw	16
  5804  001510  6E21               	movwf	lcd_set_com_seg@show,c
  5805  001512  0E01               	movlw	1
  5806  001514  EC74  F006         	call	_lcd_set_com_seg
  5807                           
  5808                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  5809  001518  0E0E               	movlw	14
  5810  00151A  6E20               	movwf	lcd_set_com_seg@seg,c
  5811  00151C  0100               	movlb	0	; () banked
  5812  00151E  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5813  001520  0B20               	andlw	32
  5814  001522  6E21               	movwf	lcd_set_com_seg@show,c
  5815  001524  0E02               	movlw	2
  5816  001526  EC74  F006         	call	_lcd_set_com_seg
  5817                           
  5818                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  5819  00152A  0E0E               	movlw	14
  5820  00152C  6E20               	movwf	lcd_set_com_seg@seg,c
  5821  00152E  0100               	movlb	0	; () banked
  5822  001530  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5823  001532  0B01               	andlw	1
  5824  001534  6E21               	movwf	lcd_set_com_seg@show,c
  5825  001536  0E03               	movlw	3
  5826  001538  EC74  F006         	call	_lcd_set_com_seg
  5827                           
  5828                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  5829  00153C  0E0F               	movlw	15
  5830  00153E  6E20               	movwf	lcd_set_com_seg@seg,c
  5831  001540  0100               	movlb	0	; () banked
  5832  001542  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5833  001544  0B04               	andlw	4
  5834  001546  6E21               	movwf	lcd_set_com_seg@show,c
  5835  001548  0E01               	movlw	1
  5836  00154A  EC74  F006         	call	_lcd_set_com_seg
  5837                           
  5838                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  5839  00154E  0E0F               	movlw	15
  5840  001550  6E20               	movwf	lcd_set_com_seg@seg,c
  5841  001552  0100               	movlb	0	; () banked
  5842  001554  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5843  001556  0B40               	andlw	64
  5844  001558  6E21               	movwf	lcd_set_com_seg@show,c
  5845  00155A  0E02               	movlw	2
  5846  00155C  EC74  F006         	call	_lcd_set_com_seg
  5847                           
  5848                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  5849  001560  0E0F               	movlw	15
  5850  001562  6E20               	movwf	lcd_set_com_seg@seg,c
  5851  001564  0100               	movlb	0	; () banked
  5852  001566  51D1               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  5853  001568  0B02               	andlw	2
  5854  00156A  6E21               	movwf	lcd_set_com_seg@show,c
  5855  00156C  0E03               	movlw	3
  5856  00156E  EC74  F006         	call	_lcd_set_com_seg
  5857  001572  0012               	return		;funcret
  5858  001574                     __end_of_lcd_disp_chr_loc_6:
  5859                           	opt stack 0
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           indf0	equ	0xFEF
  5868                           postinc0	equ	0xFEE
  5869                           fsr0h	equ	0xFEA
  5870                           fsr0l	equ	0xFE9
  5871                           wreg	equ	0xFE8
  5872                           postdec1	equ	0xFE5
  5873                           plusw1	equ	0xFE3
  5874                           fsr1h	equ	0xFE2
  5875                           fsr1l	equ	0xFE1
  5876                           indf2	equ	0xFDF
  5877                           plusw2	equ	0xFDB
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function _lcd_disp_chr_loc_5 *****************
  5883 ;; Defined at:
  5884 ;;		line 315 in file "src/driver/lcd.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  code            1    wreg     unsigned char 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  code            1   14[BANK0 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:        1 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    6
  5905 ;; This function calls:
  5906 ;;		_lcd_set_com_seg
  5907 ;; This function is called by:
  5908 ;;		_lcd_show_chr
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text31
  5913  001574                     __ptext31:
  5914                           	opt stack 0
  5915  001574                     _lcd_disp_chr_loc_5:
  5916                           	opt stack 21
  5917                           
  5918                           ;incstack = 0
  5919                           ;lcd_disp_chr_loc_5@code stored from wreg
  5920  001574  0100               	movlb	0	; () banked
  5921  001576  6FD1               	movwf	lcd_disp_chr_loc_5@code& (0+255),b
  5922                           
  5923                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  5924  001578  0E26               	movlw	38
  5925  00157A  6E20               	movwf	lcd_set_com_seg@seg,c
  5926  00157C  0100               	movlb	0	; () banked
  5927  00157E  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5928  001580  0B08               	andlw	8
  5929  001582  6E21               	movwf	lcd_set_com_seg@show,c
  5930  001584  0E00               	movlw	0
  5931  001586  EC74  F006         	call	_lcd_set_com_seg
  5932                           
  5933                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  5934  00158A  0E26               	movlw	38
  5935  00158C  6E20               	movwf	lcd_set_com_seg@seg,c
  5936  00158E  0100               	movlb	0	; () banked
  5937  001590  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5938  001592  0B10               	andlw	16
  5939  001594  6E21               	movwf	lcd_set_com_seg@show,c
  5940  001596  0E01               	movlw	1
  5941  001598  EC74  F006         	call	_lcd_set_com_seg
  5942                           
  5943                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  5944  00159C  0E26               	movlw	38
  5945  00159E  6E20               	movwf	lcd_set_com_seg@seg,c
  5946  0015A0  0100               	movlb	0	; () banked
  5947  0015A2  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5948  0015A4  0B20               	andlw	32
  5949  0015A6  6E21               	movwf	lcd_set_com_seg@show,c
  5950  0015A8  0E02               	movlw	2
  5951  0015AA  EC74  F006         	call	_lcd_set_com_seg
  5952                           
  5953                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  5954  0015AE  0E26               	movlw	38
  5955  0015B0  6E20               	movwf	lcd_set_com_seg@seg,c
  5956  0015B2  0100               	movlb	0	; () banked
  5957  0015B4  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5958  0015B6  0B01               	andlw	1
  5959  0015B8  6E21               	movwf	lcd_set_com_seg@show,c
  5960  0015BA  0E03               	movlw	3
  5961  0015BC  EC74  F006         	call	_lcd_set_com_seg
  5962                           
  5963                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  5964  0015C0  0E27               	movlw	39
  5965  0015C2  6E20               	movwf	lcd_set_com_seg@seg,c
  5966  0015C4  0100               	movlb	0	; () banked
  5967  0015C6  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5968  0015C8  0B04               	andlw	4
  5969  0015CA  6E21               	movwf	lcd_set_com_seg@show,c
  5970  0015CC  0E01               	movlw	1
  5971  0015CE  EC74  F006         	call	_lcd_set_com_seg
  5972                           
  5973                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  5974  0015D2  0E27               	movlw	39
  5975  0015D4  6E20               	movwf	lcd_set_com_seg@seg,c
  5976  0015D6  0100               	movlb	0	; () banked
  5977  0015D8  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5978  0015DA  0B40               	andlw	64
  5979  0015DC  6E21               	movwf	lcd_set_com_seg@show,c
  5980  0015DE  0E02               	movlw	2
  5981  0015E0  EC74  F006         	call	_lcd_set_com_seg
  5982                           
  5983                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  5984  0015E4  0E27               	movlw	39
  5985  0015E6  6E20               	movwf	lcd_set_com_seg@seg,c
  5986  0015E8  0100               	movlb	0	; () banked
  5987  0015EA  51D1               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  5988  0015EC  0B02               	andlw	2
  5989  0015EE  6E21               	movwf	lcd_set_com_seg@show,c
  5990  0015F0  0E03               	movlw	3
  5991  0015F2  EC74  F006         	call	_lcd_set_com_seg
  5992  0015F6  0012               	return		;funcret
  5993  0015F8                     __end_of_lcd_disp_chr_loc_5:
  5994                           	opt stack 0
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           prodh	equ	0xFF4
  6000                           prodl	equ	0xFF3
  6001                           intcon	equ	0xFF2
  6002                           indf0	equ	0xFEF
  6003                           postinc0	equ	0xFEE
  6004                           fsr0h	equ	0xFEA
  6005                           fsr0l	equ	0xFE9
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           plusw1	equ	0xFE3
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           plusw2	equ	0xFDB
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function _lcd_disp_chr_loc_4 *****************
  6018 ;; Defined at:
  6019 ;;		line 296 in file "src/driver/lcd.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  code            1    wreg     unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  code            1   14[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;Total ram usage:        1 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    6
  6040 ;; This function calls:
  6041 ;;		_lcd_set_com_seg
  6042 ;; This function is called by:
  6043 ;;		_lcd_show_chr
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text32
  6048  0015F8                     __ptext32:
  6049                           	opt stack 0
  6050  0015F8                     _lcd_disp_chr_loc_4:
  6051                           	opt stack 21
  6052                           
  6053                           ;incstack = 0
  6054                           ;lcd_disp_chr_loc_4@code stored from wreg
  6055  0015F8  0100               	movlb	0	; () banked
  6056  0015FA  6FD1               	movwf	lcd_disp_chr_loc_4@code& (0+255),b
  6057                           
  6058                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
  6059  0015FC  0E24               	movlw	36
  6060  0015FE  6E20               	movwf	lcd_set_com_seg@seg,c
  6061  001600  0100               	movlb	0	; () banked
  6062  001602  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6063  001604  0B08               	andlw	8
  6064  001606  6E21               	movwf	lcd_set_com_seg@show,c
  6065  001608  0E00               	movlw	0
  6066  00160A  EC74  F006         	call	_lcd_set_com_seg
  6067                           
  6068                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
  6069  00160E  0E24               	movlw	36
  6070  001610  6E20               	movwf	lcd_set_com_seg@seg,c
  6071  001612  0100               	movlb	0	; () banked
  6072  001614  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6073  001616  0B10               	andlw	16
  6074  001618  6E21               	movwf	lcd_set_com_seg@show,c
  6075  00161A  0E01               	movlw	1
  6076  00161C  EC74  F006         	call	_lcd_set_com_seg
  6077                           
  6078                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
  6079  001620  0E24               	movlw	36
  6080  001622  6E20               	movwf	lcd_set_com_seg@seg,c
  6081  001624  0100               	movlb	0	; () banked
  6082  001626  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6083  001628  0B20               	andlw	32
  6084  00162A  6E21               	movwf	lcd_set_com_seg@show,c
  6085  00162C  0E02               	movlw	2
  6086  00162E  EC74  F006         	call	_lcd_set_com_seg
  6087                           
  6088                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
  6089  001632  0E24               	movlw	36
  6090  001634  6E20               	movwf	lcd_set_com_seg@seg,c
  6091  001636  0100               	movlb	0	; () banked
  6092  001638  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6093  00163A  0B01               	andlw	1
  6094  00163C  6E21               	movwf	lcd_set_com_seg@show,c
  6095  00163E  0E03               	movlw	3
  6096  001640  EC74  F006         	call	_lcd_set_com_seg
  6097                           
  6098                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
  6099  001644  0E25               	movlw	37
  6100  001646  6E20               	movwf	lcd_set_com_seg@seg,c
  6101  001648  0100               	movlb	0	; () banked
  6102  00164A  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6103  00164C  0B04               	andlw	4
  6104  00164E  6E21               	movwf	lcd_set_com_seg@show,c
  6105  001650  0E01               	movlw	1
  6106  001652  EC74  F006         	call	_lcd_set_com_seg
  6107                           
  6108                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
  6109  001656  0E25               	movlw	37
  6110  001658  6E20               	movwf	lcd_set_com_seg@seg,c
  6111  00165A  0100               	movlb	0	; () banked
  6112  00165C  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6113  00165E  0B40               	andlw	64
  6114  001660  6E21               	movwf	lcd_set_com_seg@show,c
  6115  001662  0E02               	movlw	2
  6116  001664  EC74  F006         	call	_lcd_set_com_seg
  6117                           
  6118                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
  6119  001668  0E25               	movlw	37
  6120  00166A  6E20               	movwf	lcd_set_com_seg@seg,c
  6121  00166C  0100               	movlb	0	; () banked
  6122  00166E  51D1               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  6123  001670  0B02               	andlw	2
  6124  001672  6E21               	movwf	lcd_set_com_seg@show,c
  6125  001674  0E03               	movlw	3
  6126  001676  EC74  F006         	call	_lcd_set_com_seg
  6127  00167A  0012               	return		;funcret
  6128  00167C                     __end_of_lcd_disp_chr_loc_4:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           intcon	equ	0xFF2
  6137                           indf0	equ	0xFEF
  6138                           postinc0	equ	0xFEE
  6139                           fsr0h	equ	0xFEA
  6140                           fsr0l	equ	0xFE9
  6141                           wreg	equ	0xFE8
  6142                           postdec1	equ	0xFE5
  6143                           plusw1	equ	0xFE3
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           indf2	equ	0xFDF
  6147                           plusw2	equ	0xFDB
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8
  6151                           
  6152 ;; *************** function _lcd_disp_chr_loc_3 *****************
  6153 ;; Defined at:
  6154 ;;		line 284 in file "src/driver/lcd.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;  code            1    wreg     unsigned char 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  code            1   14[BANK0 ] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1    wreg      void 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;Total ram usage:        1 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    6
  6175 ;; This function calls:
  6176 ;;		_lcd_set_com_seg
  6177 ;; This function is called by:
  6178 ;;		_lcd_show_chr
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text33
  6183  00167C                     __ptext33:
  6184                           	opt stack 0
  6185  00167C                     _lcd_disp_chr_loc_3:
  6186                           	opt stack 21
  6187                           
  6188                           ;incstack = 0
  6189                           ;lcd_disp_chr_loc_3@code stored from wreg
  6190  00167C  0100               	movlb	0	; () banked
  6191  00167E  6FD1               	movwf	lcd_disp_chr_loc_3@code& (0+255),b
  6192                           
  6193                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
  6194  001680  0E2B               	movlw	43
  6195  001682  6E20               	movwf	lcd_set_com_seg@seg,c
  6196  001684  0100               	movlb	0	; () banked
  6197  001686  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6198  001688  0B01               	andlw	1
  6199  00168A  6E21               	movwf	lcd_set_com_seg@show,c
  6200  00168C  0E00               	movlw	0
  6201  00168E  EC74  F006         	call	_lcd_set_com_seg
  6202                           
  6203                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
  6204  001692  0E2B               	movlw	43
  6205  001694  6E20               	movwf	lcd_set_com_seg@seg,c
  6206  001696  0100               	movlb	0	; () banked
  6207  001698  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6208  00169A  0B20               	andlw	32
  6209  00169C  6E21               	movwf	lcd_set_com_seg@show,c
  6210  00169E  0E01               	movlw	1
  6211  0016A0  EC74  F006         	call	_lcd_set_com_seg
  6212                           
  6213                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
  6214  0016A4  0E2B               	movlw	43
  6215  0016A6  6E20               	movwf	lcd_set_com_seg@seg,c
  6216  0016A8  0100               	movlb	0	; () banked
  6217  0016AA  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6218  0016AC  0B10               	andlw	16
  6219  0016AE  6E21               	movwf	lcd_set_com_seg@show,c
  6220  0016B0  0E02               	movlw	2
  6221  0016B2  EC74  F006         	call	_lcd_set_com_seg
  6222                           
  6223                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
  6224  0016B6  0E2B               	movlw	43
  6225  0016B8  6E20               	movwf	lcd_set_com_seg@seg,c
  6226  0016BA  0100               	movlb	0	; () banked
  6227  0016BC  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6228  0016BE  0B08               	andlw	8
  6229  0016C0  6E21               	movwf	lcd_set_com_seg@show,c
  6230  0016C2  0E03               	movlw	3
  6231  0016C4  EC74  F006         	call	_lcd_set_com_seg
  6232                           
  6233                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
  6234  0016C8  0E2A               	movlw	42
  6235  0016CA  6E20               	movwf	lcd_set_com_seg@seg,c
  6236  0016CC  0100               	movlb	0	; () banked
  6237  0016CE  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6238  0016D0  0B02               	andlw	2
  6239  0016D2  6E21               	movwf	lcd_set_com_seg@show,c
  6240  0016D4  0E00               	movlw	0
  6241  0016D6  EC74  F006         	call	_lcd_set_com_seg
  6242                           
  6243                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
  6244  0016DA  0E2A               	movlw	42
  6245  0016DC  6E20               	movwf	lcd_set_com_seg@seg,c
  6246  0016DE  0100               	movlb	0	; () banked
  6247  0016E0  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6248  0016E2  0B40               	andlw	64
  6249  0016E4  6E21               	movwf	lcd_set_com_seg@show,c
  6250  0016E6  0E01               	movlw	1
  6251  0016E8  EC74  F006         	call	_lcd_set_com_seg
  6252                           
  6253                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
  6254  0016EC  0E2A               	movlw	42
  6255  0016EE  6E20               	movwf	lcd_set_com_seg@seg,c
  6256  0016F0  0100               	movlb	0	; () banked
  6257  0016F2  51D1               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  6258  0016F4  0B04               	andlw	4
  6259  0016F6  6E21               	movwf	lcd_set_com_seg@show,c
  6260  0016F8  0E02               	movlw	2
  6261  0016FA  EC74  F006         	call	_lcd_set_com_seg
  6262  0016FE  0012               	return		;funcret
  6263  001700                     __end_of_lcd_disp_chr_loc_3:
  6264                           	opt stack 0
  6265                           tblptru	equ	0xFF8
  6266                           tblptrh	equ	0xFF7
  6267                           tblptrl	equ	0xFF6
  6268                           tablat	equ	0xFF5
  6269                           prodh	equ	0xFF4
  6270                           prodl	equ	0xFF3
  6271                           intcon	equ	0xFF2
  6272                           indf0	equ	0xFEF
  6273                           postinc0	equ	0xFEE
  6274                           fsr0h	equ	0xFEA
  6275                           fsr0l	equ	0xFE9
  6276                           wreg	equ	0xFE8
  6277                           postdec1	equ	0xFE5
  6278                           plusw1	equ	0xFE3
  6279                           fsr1h	equ	0xFE2
  6280                           fsr1l	equ	0xFE1
  6281                           indf2	equ	0xFDF
  6282                           plusw2	equ	0xFDB
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function _lcd_disp_chr_loc_2 *****************
  6288 ;; Defined at:
  6289 ;;		line 265 in file "src/driver/lcd.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  code            1    wreg     unsigned char 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  code            1   14[BANK0 ] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;Total ram usage:        1 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    6
  6310 ;; This function calls:
  6311 ;;		_lcd_set_com_seg
  6312 ;; This function is called by:
  6313 ;;		_lcd_show_chr
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text34
  6318  001700                     __ptext34:
  6319                           	opt stack 0
  6320  001700                     _lcd_disp_chr_loc_2:
  6321                           	opt stack 21
  6322                           
  6323                           ;incstack = 0
  6324                           ;lcd_disp_chr_loc_2@code stored from wreg
  6325  001700  0100               	movlb	0	; () banked
  6326  001702  6FD1               	movwf	lcd_disp_chr_loc_2@code& (0+255),b
  6327                           
  6328                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
  6329  001704  0E15               	movlw	21
  6330  001706  6E20               	movwf	lcd_set_com_seg@seg,c
  6331  001708  0100               	movlb	0	; () banked
  6332  00170A  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6333  00170C  0B01               	andlw	1
  6334  00170E  6E21               	movwf	lcd_set_com_seg@show,c
  6335  001710  0E00               	movlw	0
  6336  001712  EC74  F006         	call	_lcd_set_com_seg
  6337                           
  6338                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
  6339  001716  0E15               	movlw	21
  6340  001718  6E20               	movwf	lcd_set_com_seg@seg,c
  6341  00171A  0100               	movlb	0	; () banked
  6342  00171C  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6343  00171E  0B20               	andlw	32
  6344  001720  6E21               	movwf	lcd_set_com_seg@show,c
  6345  001722  0E01               	movlw	1
  6346  001724  EC74  F006         	call	_lcd_set_com_seg
  6347                           
  6348                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
  6349  001728  0E15               	movlw	21
  6350  00172A  6E20               	movwf	lcd_set_com_seg@seg,c
  6351  00172C  0100               	movlb	0	; () banked
  6352  00172E  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6353  001730  0B10               	andlw	16
  6354  001732  6E21               	movwf	lcd_set_com_seg@show,c
  6355  001734  0E02               	movlw	2
  6356  001736  EC74  F006         	call	_lcd_set_com_seg
  6357                           
  6358                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
  6359  00173A  0E15               	movlw	21
  6360  00173C  6E20               	movwf	lcd_set_com_seg@seg,c
  6361  00173E  0100               	movlb	0	; () banked
  6362  001740  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6363  001742  0B08               	andlw	8
  6364  001744  6E21               	movwf	lcd_set_com_seg@show,c
  6365  001746  0E03               	movlw	3
  6366  001748  EC74  F006         	call	_lcd_set_com_seg
  6367                           
  6368                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
  6369  00174C  0E14               	movlw	20
  6370  00174E  6E20               	movwf	lcd_set_com_seg@seg,c
  6371  001750  0100               	movlb	0	; () banked
  6372  001752  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6373  001754  0B02               	andlw	2
  6374  001756  6E21               	movwf	lcd_set_com_seg@show,c
  6375  001758  0E00               	movlw	0
  6376  00175A  EC74  F006         	call	_lcd_set_com_seg
  6377                           
  6378                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
  6379  00175E  0E14               	movlw	20
  6380  001760  6E20               	movwf	lcd_set_com_seg@seg,c
  6381  001762  0100               	movlb	0	; () banked
  6382  001764  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6383  001766  0B40               	andlw	64
  6384  001768  6E21               	movwf	lcd_set_com_seg@show,c
  6385  00176A  0E01               	movlw	1
  6386  00176C  EC74  F006         	call	_lcd_set_com_seg
  6387                           
  6388                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
  6389  001770  0E14               	movlw	20
  6390  001772  6E20               	movwf	lcd_set_com_seg@seg,c
  6391  001774  0100               	movlb	0	; () banked
  6392  001776  51D1               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  6393  001778  0B04               	andlw	4
  6394  00177A  6E21               	movwf	lcd_set_com_seg@show,c
  6395  00177C  0E02               	movlw	2
  6396  00177E  EC74  F006         	call	_lcd_set_com_seg
  6397  001782  0012               	return		;funcret
  6398  001784                     __end_of_lcd_disp_chr_loc_2:
  6399                           	opt stack 0
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           indf0	equ	0xFEF
  6408                           postinc0	equ	0xFEE
  6409                           fsr0h	equ	0xFEA
  6410                           fsr0l	equ	0xFE9
  6411                           wreg	equ	0xFE8
  6412                           postdec1	equ	0xFE5
  6413                           plusw1	equ	0xFE3
  6414                           fsr1h	equ	0xFE2
  6415                           fsr1l	equ	0xFE1
  6416                           indf2	equ	0xFDF
  6417                           plusw2	equ	0xFDB
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _lcd_disp_chr_loc_1 *****************
  6423 ;; Defined at:
  6424 ;;		line 246 in file "src/driver/lcd.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  code            1    wreg     unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  code            1   14[BANK0 ] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;Total ram usage:        1 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    6
  6445 ;; This function calls:
  6446 ;;		_lcd_set_com_seg
  6447 ;; This function is called by:
  6448 ;;		_lcd_show_chr
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text35
  6453  001784                     __ptext35:
  6454                           	opt stack 0
  6455  001784                     _lcd_disp_chr_loc_1:
  6456                           	opt stack 21
  6457                           
  6458                           ;incstack = 0
  6459                           ;lcd_disp_chr_loc_1@code stored from wreg
  6460  001784  0100               	movlb	0	; () banked
  6461  001786  6FD1               	movwf	lcd_disp_chr_loc_1@code& (0+255),b
  6462                           
  6463                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
  6464  001788  0E17               	movlw	23
  6465  00178A  6E20               	movwf	lcd_set_com_seg@seg,c
  6466  00178C  0100               	movlb	0	; () banked
  6467  00178E  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6468  001790  0B01               	andlw	1
  6469  001792  6E21               	movwf	lcd_set_com_seg@show,c
  6470  001794  0E00               	movlw	0
  6471  001796  EC74  F006         	call	_lcd_set_com_seg
  6472                           
  6473                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
  6474  00179A  0E17               	movlw	23
  6475  00179C  6E20               	movwf	lcd_set_com_seg@seg,c
  6476  00179E  0100               	movlb	0	; () banked
  6477  0017A0  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6478  0017A2  0B20               	andlw	32
  6479  0017A4  6E21               	movwf	lcd_set_com_seg@show,c
  6480  0017A6  0E01               	movlw	1
  6481  0017A8  EC74  F006         	call	_lcd_set_com_seg
  6482                           
  6483                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
  6484  0017AC  0E17               	movlw	23
  6485  0017AE  6E20               	movwf	lcd_set_com_seg@seg,c
  6486  0017B0  0100               	movlb	0	; () banked
  6487  0017B2  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6488  0017B4  0B10               	andlw	16
  6489  0017B6  6E21               	movwf	lcd_set_com_seg@show,c
  6490  0017B8  0E02               	movlw	2
  6491  0017BA  EC74  F006         	call	_lcd_set_com_seg
  6492                           
  6493                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
  6494  0017BE  0E17               	movlw	23
  6495  0017C0  6E20               	movwf	lcd_set_com_seg@seg,c
  6496  0017C2  0100               	movlb	0	; () banked
  6497  0017C4  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6498  0017C6  0B08               	andlw	8
  6499  0017C8  6E21               	movwf	lcd_set_com_seg@show,c
  6500  0017CA  0E03               	movlw	3
  6501  0017CC  EC74  F006         	call	_lcd_set_com_seg
  6502                           
  6503                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
  6504  0017D0  0E16               	movlw	22
  6505  0017D2  6E20               	movwf	lcd_set_com_seg@seg,c
  6506  0017D4  0100               	movlb	0	; () banked
  6507  0017D6  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6508  0017D8  0B02               	andlw	2
  6509  0017DA  6E21               	movwf	lcd_set_com_seg@show,c
  6510  0017DC  0E00               	movlw	0
  6511  0017DE  EC74  F006         	call	_lcd_set_com_seg
  6512                           
  6513                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
  6514  0017E2  0E16               	movlw	22
  6515  0017E4  6E20               	movwf	lcd_set_com_seg@seg,c
  6516  0017E6  0100               	movlb	0	; () banked
  6517  0017E8  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6518  0017EA  0B40               	andlw	64
  6519  0017EC  6E21               	movwf	lcd_set_com_seg@show,c
  6520  0017EE  0E01               	movlw	1
  6521  0017F0  EC74  F006         	call	_lcd_set_com_seg
  6522                           
  6523                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
  6524  0017F4  0E16               	movlw	22
  6525  0017F6  6E20               	movwf	lcd_set_com_seg@seg,c
  6526  0017F8  0100               	movlb	0	; () banked
  6527  0017FA  51D1               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  6528  0017FC  0B04               	andlw	4
  6529  0017FE  6E21               	movwf	lcd_set_com_seg@show,c
  6530  001800  0E02               	movlw	2
  6531  001802  EC74  F006         	call	_lcd_set_com_seg
  6532  001806  0012               	return		;funcret
  6533  001808                     __end_of_lcd_disp_chr_loc_1:
  6534                           	opt stack 0
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           indf0	equ	0xFEF
  6543                           postinc0	equ	0xFEE
  6544                           fsr0h	equ	0xFEA
  6545                           fsr0l	equ	0xFE9
  6546                           wreg	equ	0xFE8
  6547                           postdec1	equ	0xFE5
  6548                           plusw1	equ	0xFE3
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           indf2	equ	0xFDF
  6552                           plusw2	equ	0xFDB
  6553                           fsr2h	equ	0xFDA
  6554                           fsr2l	equ	0xFD9
  6555                           status	equ	0xFD8
  6556                           
  6557 ;; *************** function _lcd_disp_chr_loc_0 *****************
  6558 ;; Defined at:
  6559 ;;		line 226 in file "src/driver/lcd.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  code            1    wreg     unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  code            1   14[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        1 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    6
  6580 ;; This function calls:
  6581 ;;		_lcd_set_com_seg
  6582 ;; This function is called by:
  6583 ;;		_lcd_show_chr
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text36
  6588  001808                     __ptext36:
  6589                           	opt stack 0
  6590  001808                     _lcd_disp_chr_loc_0:
  6591                           	opt stack 21
  6592                           
  6593                           ;incstack = 0
  6594                           ;lcd_disp_chr_loc_0@code stored from wreg
  6595  001808  0100               	movlb	0	; () banked
  6596  00180A  6FD1               	movwf	lcd_disp_chr_loc_0@code& (0+255),b
  6597                           
  6598                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
  6599  00180C  0E19               	movlw	25
  6600  00180E  6E20               	movwf	lcd_set_com_seg@seg,c
  6601  001810  0100               	movlb	0	; () banked
  6602  001812  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6603  001814  0B01               	andlw	1
  6604  001816  6E21               	movwf	lcd_set_com_seg@show,c
  6605  001818  0E00               	movlw	0
  6606  00181A  EC74  F006         	call	_lcd_set_com_seg
  6607                           
  6608                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
  6609  00181E  0E19               	movlw	25
  6610  001820  6E20               	movwf	lcd_set_com_seg@seg,c
  6611  001822  0100               	movlb	0	; () banked
  6612  001824  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6613  001826  0B20               	andlw	32
  6614  001828  6E21               	movwf	lcd_set_com_seg@show,c
  6615  00182A  0E01               	movlw	1
  6616  00182C  EC74  F006         	call	_lcd_set_com_seg
  6617                           
  6618                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
  6619  001830  0E19               	movlw	25
  6620  001832  6E20               	movwf	lcd_set_com_seg@seg,c
  6621  001834  0100               	movlb	0	; () banked
  6622  001836  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6623  001838  0B10               	andlw	16
  6624  00183A  6E21               	movwf	lcd_set_com_seg@show,c
  6625  00183C  0E02               	movlw	2
  6626  00183E  EC74  F006         	call	_lcd_set_com_seg
  6627                           
  6628                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
  6629  001842  0E19               	movlw	25
  6630  001844  6E20               	movwf	lcd_set_com_seg@seg,c
  6631  001846  0100               	movlb	0	; () banked
  6632  001848  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6633  00184A  0B08               	andlw	8
  6634  00184C  6E21               	movwf	lcd_set_com_seg@show,c
  6635  00184E  0E03               	movlw	3
  6636  001850  EC74  F006         	call	_lcd_set_com_seg
  6637                           
  6638                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
  6639  001854  0E18               	movlw	24
  6640  001856  6E20               	movwf	lcd_set_com_seg@seg,c
  6641  001858  0100               	movlb	0	; () banked
  6642  00185A  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6643  00185C  0B02               	andlw	2
  6644  00185E  6E21               	movwf	lcd_set_com_seg@show,c
  6645  001860  0E00               	movlw	0
  6646  001862  EC74  F006         	call	_lcd_set_com_seg
  6647                           
  6648                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
  6649  001866  0E18               	movlw	24
  6650  001868  6E20               	movwf	lcd_set_com_seg@seg,c
  6651  00186A  0100               	movlb	0	; () banked
  6652  00186C  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6653  00186E  0B40               	andlw	64
  6654  001870  6E21               	movwf	lcd_set_com_seg@show,c
  6655  001872  0E01               	movlw	1
  6656  001874  EC74  F006         	call	_lcd_set_com_seg
  6657                           
  6658                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
  6659  001878  0E18               	movlw	24
  6660  00187A  6E20               	movwf	lcd_set_com_seg@seg,c
  6661  00187C  0100               	movlb	0	; () banked
  6662  00187E  51D1               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
  6663  001880  0B04               	andlw	4
  6664  001882  6E21               	movwf	lcd_set_com_seg@show,c
  6665  001884  0E02               	movlw	2
  6666  001886  EC74  F006         	call	_lcd_set_com_seg
  6667  00188A  0012               	return		;funcret
  6668  00188C                     __end_of_lcd_disp_chr_loc_0:
  6669                           	opt stack 0
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           prodh	equ	0xFF4
  6675                           prodl	equ	0xFF3
  6676                           intcon	equ	0xFF2
  6677                           indf0	equ	0xFEF
  6678                           postinc0	equ	0xFEE
  6679                           fsr0h	equ	0xFEA
  6680                           fsr0l	equ	0xFE9
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           plusw1	equ	0xFE3
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           plusw2	equ	0xFDB
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function _lcd_show_dp *****************
  6693 ;; Defined at:
  6694 ;;		line 474 in file "src/driver/lcd.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  loc             1    wreg     unsigned char 
  6697 ;;  show            1   15[BANK0 ] unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  loc             1   16[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6709 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;Total ram usage:        2 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    7
  6716 ;; This function calls:
  6717 ;;		_lcd_disp_dp_loc_0
  6718 ;;		_lcd_disp_dp_loc_1
  6719 ;;		_lcd_disp_dp_loc_2
  6720 ;; This function is called by:
  6721 ;;		_ui_disp_rtc_mm_ss
  6722 ;;		_ui_disp_clear_num_dp
  6723 ;;		_ui_disp_adj_xfloat_pt
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text37
  6728  001A62                     __ptext37:
  6729                           	opt stack 0
  6730  001A62                     _lcd_show_dp:
  6731                           	opt stack 22
  6732                           
  6733                           ;incstack = 0
  6734                           ;lcd_show_dp@loc stored from wreg
  6735  001A62  0100               	movlb	0	; () banked
  6736  001A64  6FD3               	movwf	lcd_show_dp@loc& (0+255),b
  6737                           
  6738                           ;lcd.c: 476: switch(loc){
  6739  001A66  D01E               	goto	l6631
  6740  001A68                     l6617:
  6741  001A68  0100               	movlb	0	; () banked
  6742  001A6A  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6743  001A6C  EC3E  F012         	call	_lcd_disp_dp_loc_0
  6744  001A70  0012               	return	
  6745  001A72                     l6619:
  6746  001A72  0100               	movlb	0	; () banked
  6747  001A74  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6748  001A76  EC27  F012         	call	_lcd_disp_dp_loc_1
  6749  001A7A  0012               	return	
  6750  001A7C                     l6621:
  6751  001A7C  0100               	movlb	0	; () banked
  6752  001A7E  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6753  001A80  EC10  F012         	call	_lcd_disp_dp_loc_2
  6754  001A84  0012               	return	
  6755  001A86                     l6623:
  6756  001A86  0100               	movlb	0	; () banked
  6757  001A88  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6758  001A8A  EC3E  F012         	call	_lcd_disp_dp_loc_0
  6759  001A8E  0012               	return	
  6760  001A90                     l6625:
  6761  001A90  0100               	movlb	0	; () banked
  6762  001A92  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6763  001A94  EC27  F012         	call	_lcd_disp_dp_loc_1
  6764  001A98  0012               	return	
  6765  001A9A                     l6627:
  6766  001A9A  0100               	movlb	0	; () banked
  6767  001A9C  51D2               	movf	lcd_show_dp@show& (0+255),w,b
  6768  001A9E  EC10  F012         	call	_lcd_disp_dp_loc_2
  6769                           
  6770                           ;lcd.c: 486: }
  6771                           
  6772                           ;lcd.c: 485: default:break;
  6773  001AA2  0012               	return	
  6774  001AA4                     l6631:
  6775  001AA4  0100               	movlb	0	; () banked
  6776  001AA6  51D3               	movf	lcd_show_dp@loc& (0+255),w,b
  6777                           
  6778                           ; Switch size 1, requested type "space"
  6779                           ; Number of cases is 6, Range of values is 0 to 6
  6780                           ; switch strategies available:
  6781                           ; Name         Instructions Cycles
  6782                           ; simple_byte           19    10 (average)
  6783                           ;	Chosen strategy is simple_byte
  6784  001AA8  0A00               	xorlw	0	; case 0
  6785  001AAA  B4D8               	btfsc	status,2,c
  6786  001AAC  D7DD               	goto	l6617
  6787  001AAE  0A01               	xorlw	1	; case 1
  6788  001AB0  B4D8               	btfsc	status,2,c
  6789  001AB2  D7DF               	goto	l6619
  6790  001AB4  0A03               	xorlw	3	; case 2
  6791  001AB6  B4D8               	btfsc	status,2,c
  6792  001AB8  D7E1               	goto	l6621
  6793  001ABA  0A06               	xorlw	6	; case 4
  6794  001ABC  B4D8               	btfsc	status,2,c
  6795  001ABE  D7E3               	goto	l6623
  6796  001AC0  0A01               	xorlw	1	; case 5
  6797  001AC2  B4D8               	btfsc	status,2,c
  6798  001AC4  D7E5               	goto	l6625
  6799  001AC6  0A03               	xorlw	3	; case 6
  6800  001AC8  A4D8               	btfss	status,2,c
  6801  001ACA  0012               	return	
  6802  001ACC  D7E6               	goto	l6627
  6803  001ACE                     __end_of_lcd_show_dp:
  6804                           	opt stack 0
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           indf0	equ	0xFEF
  6813                           postinc0	equ	0xFEE
  6814                           fsr0h	equ	0xFEA
  6815                           fsr0l	equ	0xFE9
  6816                           wreg	equ	0xFE8
  6817                           postdec1	equ	0xFE5
  6818                           plusw1	equ	0xFE3
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           indf2	equ	0xFDF
  6822                           plusw2	equ	0xFDB
  6823                           fsr2h	equ	0xFDA
  6824                           fsr2l	equ	0xFD9
  6825                           status	equ	0xFD8
  6826                           
  6827 ;; *************** function _lcd_disp_dp_loc_2 *****************
  6828 ;; Defined at:
  6829 ;;		line 276 in file "src/driver/lcd.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  dp              1    wreg     unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  dp              1   14[BANK0 ] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:        1 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    6
  6850 ;; This function calls:
  6851 ;;		_lcd_set_com_seg
  6852 ;; This function is called by:
  6853 ;;		_lcd_show_dp
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text38
  6858  002420                     __ptext38:
  6859                           	opt stack 0
  6860  002420                     _lcd_disp_dp_loc_2:
  6861                           	opt stack 22
  6862                           
  6863                           ;incstack = 0
  6864                           ;lcd_disp_dp_loc_2@dp stored from wreg
  6865  002420  0100               	movlb	0	; () banked
  6866  002422  6FD1               	movwf	lcd_disp_dp_loc_2@dp& (0+255),b
  6867                           
  6868                           ;lcd.c: 278: if(dp)
  6869  002424  0100               	movlb	0	; () banked
  6870  002426  51D1               	movf	lcd_disp_dp_loc_2@dp& (0+255),w,b
  6871  002428  0100               	movlb	0	; () banked
  6872  00242A  B4D8               	btfsc	status,2,c
  6873  00242C  D008               	goto	l6591
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
  6877  00242E  0E14               	movlw	20
  6878  002430  6E20               	movwf	lcd_set_com_seg@seg,c
  6879  002432  0E80               	movlw	128
  6880  002434  6E21               	movwf	lcd_set_com_seg@show,c
  6881  002436  0E03               	movlw	3
  6882  002438  EC74  F006         	call	_lcd_set_com_seg
  6883  00243C  0012               	return	
  6884  00243E                     l6591:
  6885                           
  6886                           ;lcd.c: 280: else
  6887                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
  6888  00243E  0E14               	movlw	20
  6889  002440  6E20               	movwf	lcd_set_com_seg@seg,c
  6890  002442  0E00               	movlw	0
  6891  002444  6E21               	movwf	lcd_set_com_seg@show,c
  6892  002446  0E03               	movlw	3
  6893  002448  EC74  F006         	call	_lcd_set_com_seg
  6894  00244C  0012               	return	
  6895  00244E                     __end_of_lcd_disp_dp_loc_2:
  6896                           	opt stack 0
  6897                           tblptru	equ	0xFF8
  6898                           tblptrh	equ	0xFF7
  6899                           tblptrl	equ	0xFF6
  6900                           tablat	equ	0xFF5
  6901                           prodh	equ	0xFF4
  6902                           prodl	equ	0xFF3
  6903                           intcon	equ	0xFF2
  6904                           indf0	equ	0xFEF
  6905                           postinc0	equ	0xFEE
  6906                           fsr0h	equ	0xFEA
  6907                           fsr0l	equ	0xFE9
  6908                           wreg	equ	0xFE8
  6909                           postdec1	equ	0xFE5
  6910                           plusw1	equ	0xFE3
  6911                           fsr1h	equ	0xFE2
  6912                           fsr1l	equ	0xFE1
  6913                           indf2	equ	0xFDF
  6914                           plusw2	equ	0xFDB
  6915                           fsr2h	equ	0xFDA
  6916                           fsr2l	equ	0xFD9
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _lcd_disp_dp_loc_1 *****************
  6920 ;; Defined at:
  6921 ;;		line 257 in file "src/driver/lcd.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  dp              1    wreg     unsigned char 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  dp              1   14[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        1 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    6
  6942 ;; This function calls:
  6943 ;;		_lcd_set_com_seg
  6944 ;; This function is called by:
  6945 ;;		_lcd_show_dp
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text39
  6950  00244E                     __ptext39:
  6951                           	opt stack 0
  6952  00244E                     _lcd_disp_dp_loc_1:
  6953                           	opt stack 22
  6954                           
  6955                           ;incstack = 0
  6956                           ;lcd_disp_dp_loc_1@dp stored from wreg
  6957  00244E  0100               	movlb	0	; () banked
  6958  002450  6FD1               	movwf	lcd_disp_dp_loc_1@dp& (0+255),b
  6959                           
  6960                           ;lcd.c: 259: if(dp)
  6961  002452  0100               	movlb	0	; () banked
  6962  002454  51D1               	movf	lcd_disp_dp_loc_1@dp& (0+255),w,b
  6963  002456  0100               	movlb	0	; () banked
  6964  002458  B4D8               	btfsc	status,2,c
  6965  00245A  D008               	goto	l6585
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
  6969  00245C  0E16               	movlw	22
  6970  00245E  6E20               	movwf	lcd_set_com_seg@seg,c
  6971  002460  0E80               	movlw	128
  6972  002462  6E21               	movwf	lcd_set_com_seg@show,c
  6973  002464  0E03               	movlw	3
  6974  002466  EC74  F006         	call	_lcd_set_com_seg
  6975  00246A  0012               	return	
  6976  00246C                     l6585:
  6977                           
  6978                           ;lcd.c: 261: else
  6979                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
  6980  00246C  0E16               	movlw	22
  6981  00246E  6E20               	movwf	lcd_set_com_seg@seg,c
  6982  002470  0E00               	movlw	0
  6983  002472  6E21               	movwf	lcd_set_com_seg@show,c
  6984  002474  0E03               	movlw	3
  6985  002476  EC74  F006         	call	_lcd_set_com_seg
  6986  00247A  0012               	return	
  6987  00247C                     __end_of_lcd_disp_dp_loc_1:
  6988                           	opt stack 0
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           indf0	equ	0xFEF
  6997                           postinc0	equ	0xFEE
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           plusw1	equ	0xFE3
  7003                           fsr1h	equ	0xFE2
  7004                           fsr1l	equ	0xFE1
  7005                           indf2	equ	0xFDF
  7006                           plusw2	equ	0xFDB
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _lcd_disp_dp_loc_0 *****************
  7012 ;; Defined at:
  7013 ;;		line 238 in file "src/driver/lcd.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  dp              1    wreg     unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  dp              1   14[BANK0 ] unsigned char 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;Total ram usage:        1 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    6
  7034 ;; This function calls:
  7035 ;;		_lcd_set_com_seg
  7036 ;; This function is called by:
  7037 ;;		_lcd_show_dp
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text40
  7042  00247C                     __ptext40:
  7043                           	opt stack 0
  7044  00247C                     _lcd_disp_dp_loc_0:
  7045                           	opt stack 22
  7046                           
  7047                           ;incstack = 0
  7048                           ;lcd_disp_dp_loc_0@dp stored from wreg
  7049  00247C  0100               	movlb	0	; () banked
  7050  00247E  6FD1               	movwf	lcd_disp_dp_loc_0@dp& (0+255),b
  7051                           
  7052                           ;lcd.c: 240: if(dp)
  7053  002480  0100               	movlb	0	; () banked
  7054  002482  51D1               	movf	lcd_disp_dp_loc_0@dp& (0+255),w,b
  7055  002484  0100               	movlb	0	; () banked
  7056  002486  B4D8               	btfsc	status,2,c
  7057  002488  D008               	goto	l6579
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
  7061  00248A  0E18               	movlw	24
  7062  00248C  6E20               	movwf	lcd_set_com_seg@seg,c
  7063  00248E  0E80               	movlw	128
  7064  002490  6E21               	movwf	lcd_set_com_seg@show,c
  7065  002492  0E03               	movlw	3
  7066  002494  EC74  F006         	call	_lcd_set_com_seg
  7067  002498  0012               	return	
  7068  00249A                     l6579:
  7069                           
  7070                           ;lcd.c: 242: else
  7071                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
  7072  00249A  0E18               	movlw	24
  7073  00249C  6E20               	movwf	lcd_set_com_seg@seg,c
  7074  00249E  0E00               	movlw	0
  7075  0024A0  6E21               	movwf	lcd_set_com_seg@show,c
  7076  0024A2  0E03               	movlw	3
  7077  0024A4  EC74  F006         	call	_lcd_set_com_seg
  7078  0024A8  0012               	return	
  7079  0024AA                     __end_of_lcd_disp_dp_loc_0:
  7080                           	opt stack 0
  7081                           tblptru	equ	0xFF8
  7082                           tblptrh	equ	0xFF7
  7083                           tblptrl	equ	0xFF6
  7084                           tablat	equ	0xFF5
  7085                           prodh	equ	0xFF4
  7086                           prodl	equ	0xFF3
  7087                           intcon	equ	0xFF2
  7088                           indf0	equ	0xFEF
  7089                           postinc0	equ	0xFEE
  7090                           fsr0h	equ	0xFEA
  7091                           fsr0l	equ	0xFE9
  7092                           wreg	equ	0xFE8
  7093                           postdec1	equ	0xFE5
  7094                           plusw1	equ	0xFE3
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           plusw2	equ	0xFDB
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103 ;; *************** function _lcd_set_com_seg *****************
  7104 ;; Defined at:
  7105 ;;		line 32 in file "src/driver/lcd.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  com             1    wreg     unsigned char 
  7108 ;;  seg             1   31[COMRAM] unsigned char 
  7109 ;;  show            1   32[COMRAM] unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  com             1   11[BANK0 ] unsigned char 
  7112 ;;  bits            1   13[BANK0 ] unsigned char 
  7113 ;;  offset          1   12[BANK0 ] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:        8 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    5
  7130 ;; This function calls:
  7131 ;;		___awdiv
  7132 ;; This function is called by:
  7133 ;;		_lcd_disp_level_bar
  7134 ;;		_lcd_disp_chr_loc_0
  7135 ;;		_lcd_disp_dp_loc_0
  7136 ;;		_lcd_disp_chr_loc_1
  7137 ;;		_lcd_disp_dp_loc_1
  7138 ;;		_lcd_disp_chr_loc_2
  7139 ;;		_lcd_disp_dp_loc_2
  7140 ;;		_lcd_disp_chr_loc_3
  7141 ;;		_lcd_disp_chr_loc_4
  7142 ;;		_lcd_disp_chr_loc_5
  7143 ;;		_lcd_disp_chr_loc_6
  7144 ;;		_lcd_disp_chr_loc_7
  7145 ;;		_lcd_disp_logo
  7146 ;;		_lcd_disp_battary_bar
  7147 ;;		_lcd_disp_rf_bar
  7148 ;;		_lcd_disp_light_bar
  7149 ;;		_lcd_disp_dp_loc_4
  7150 ;;		_lcd_disp_dp_loc_5
  7151 ;;		_lcd_disp_dp_loc_6
  7152 ;;		_lcd_disp_unit_t
  7153 ;;		_lcd_disp_unit_1st_m
  7154 ;;		_lcd_disp_unit_1st_m3
  7155 ;;		_lcd_disp_unit_temperature
  7156 ;;		_lcd_disp_unit_2nd_m
  7157 ;;		_lcd_disp_unit_2nd_m3
  7158 ;;		_lcd_disp_unit_mpa
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text41
  7163  000CE8                     __ptext41:
  7164                           	opt stack 0
  7165  000CE8                     _lcd_set_com_seg:
  7166                           	opt stack 21
  7167                           
  7168                           ;incstack = 0
  7169                           ;lcd_set_com_seg@com stored from wreg
  7170  000CE8  0100               	movlb	0	; () banked
  7171  000CEA  6FCE               	movwf	lcd_set_com_seg@com& (0+255),b
  7172                           
  7173                           ;lcd.c: 34: uint8_t offset;
  7174                           ;lcd.c: 35: uint8_t bits;
  7175                           ;lcd.c: 36: if(com>3)return;
  7176  000CEC  0E03               	movlw	3
  7177  000CEE  0100               	movlb	0	; () banked
  7178  000CF0  65CE               	cpfsgt	lcd_set_com_seg@com& (0+255),b
  7179  000CF2  D001               	goto	l6523
  7180  000CF4  0012               	return	
  7181  000CF6                     l6523:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;lcd.c: 37: if(seg>47)return;
  7185  000CF6  0E2F               	movlw	47
  7186  000CF8  6420               	cpfsgt	lcd_set_com_seg@seg,c
  7187  000CFA  D001               	goto	l6527
  7188  000CFC  0012               	return	
  7189  000CFE                     l6527:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;lcd.c: 38: offset=com*6 + seg/8;
  7193  000CFE  C020  F0C3         	movff	lcd_set_com_seg@seg,___awdiv@dividend
  7194  000D02  0100               	movlb	0	; () banked
  7195  000D04  6BC4               	clrf	(___awdiv@dividend+1)& (0+255),b
  7196  000D06  0E00               	movlw	0
  7197  000D08  0100               	movlb	0	; () banked
  7198  000D0A  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  7199  000D0C  0E08               	movlw	8
  7200  000D0E  6FC5               	movwf	___awdiv@divisor& (0+255),b
  7201  000D10  ECD4  F006         	call	___awdiv	;wreg free
  7202  000D14  0100               	movlb	0	; () banked
  7203  000D16  51CE               	movf	lcd_set_com_seg@com& (0+255),w,b
  7204  000D18  0D06               	mullw	6
  7205  000D1A  50F3               	movf	prodl,w,c
  7206  000D1C  0100               	movlb	0	; () banked
  7207  000D1E  25C3               	addwf	?___awdiv& (0+255),w,b
  7208  000D20  0100               	movlb	0	; () banked
  7209  000D22  6FCF               	movwf	lcd_set_com_seg@offset& (0+255),b
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;lcd.c: 39: bits=seg%8;
  7213  000D24  5020               	movf	lcd_set_com_seg@seg,w,c
  7214  000D26  0B07               	andlw	7
  7215  000D28  0100               	movlb	0	; () banked
  7216  000D2A  6FD0               	movwf	lcd_set_com_seg@bits& (0+255),b
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;lcd.c: 40: if(show){
  7220  000D2C  5021               	movf	lcd_set_com_seg@show,w,c
  7221  000D2E  B4D8               	btfsc	status,2,c
  7222  000D30  D01B               	goto	l6535
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
  7226  000D32  C0D0  F0CB         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7227  000D36  0E01               	movlw	1
  7228  000D38  0100               	movlb	0	; () banked
  7229  000D3A  6FCC               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7230  000D3C  0100               	movlb	0	; () banked
  7231  000D3E  2BCB               	incf	??_lcd_set_com_seg& (0+255),f,b
  7232  000D40  D003               	goto	u4624
  7233  000D42                     u4625:
  7234  000D42  0100               	movlb	0	; () banked
  7235  000D44  90D8               	bcf	status,0,c
  7236  000D46  37CC               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7237  000D48                     u4624:
  7238  000D48  0100               	movlb	0	; () banked
  7239  000D4A  2FCB               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7240  000D4C  D7FA               	goto	u4625
  7241  000D4E  0100               	movlb	0	; () banked
  7242  000D50  51CF               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7243  000D52  0D01               	mullw	1
  7244  000D54  0E60               	movlw	low _pLCD
  7245  000D56  24F3               	addwf	prodl,w,c
  7246  000D58  6ED9               	movwf	fsr2l,c
  7247  000D5A  0E00               	movlw	high _pLCD
  7248  000D5C  20F4               	addwfc	prodh,w,c
  7249  000D5E  6EDA               	movwf	fsr2h,c
  7250  000D60  0100               	movlb	0	; () banked
  7251  000D62  51CC               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7252  000D64  12DF               	iorwf	indf2,f,c
  7253                           
  7254                           ;lcd.c: 42: }else{
  7255  000D66  0012               	return	
  7256  000D68                     l6535:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
  7260  000D68  C0D0  F0CB         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  7261  000D6C  0E01               	movlw	1
  7262  000D6E  0100               	movlb	0	; () banked
  7263  000D70  6FCC               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  7264  000D72  0100               	movlb	0	; () banked
  7265  000D74  2BCB               	incf	??_lcd_set_com_seg& (0+255),f,b
  7266  000D76  D003               	goto	u4634
  7267  000D78                     u4635:
  7268  000D78  0100               	movlb	0	; () banked
  7269  000D7A  90D8               	bcf	status,0,c
  7270  000D7C  37CC               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  7271  000D7E                     u4634:
  7272  000D7E  0100               	movlb	0	; () banked
  7273  000D80  2FCB               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  7274  000D82  D7FA               	goto	u4635
  7275  000D84  0100               	movlb	0	; () banked
  7276  000D86  51CC               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  7277  000D88  0AFF               	xorlw	255
  7278  000D8A  0100               	movlb	0	; () banked
  7279  000D8C  6FCD               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
  7280  000D8E  0100               	movlb	0	; () banked
  7281  000D90  51CF               	movf	lcd_set_com_seg@offset& (0+255),w,b
  7282  000D92  0D01               	mullw	1
  7283  000D94  0E60               	movlw	low _pLCD
  7284  000D96  24F3               	addwf	prodl,w,c
  7285  000D98  6ED9               	movwf	fsr2l,c
  7286  000D9A  0E00               	movlw	high _pLCD
  7287  000D9C  20F4               	addwfc	prodh,w,c
  7288  000D9E  6EDA               	movwf	fsr2h,c
  7289  000DA0  0100               	movlb	0	; () banked
  7290  000DA2  51CD               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
  7291  000DA4  16DF               	andwf	indf2,f,c
  7292  000DA6  0012               	return	
  7293  000DA8                     __end_of_lcd_set_com_seg:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           indf0	equ	0xFEF
  7303                           postinc0	equ	0xFEE
  7304                           fsr0h	equ	0xFEA
  7305                           fsr0l	equ	0xFE9
  7306                           wreg	equ	0xFE8
  7307                           postdec1	equ	0xFE5
  7308                           plusw1	equ	0xFE3
  7309                           fsr1h	equ	0xFE2
  7310                           fsr1l	equ	0xFE1
  7311                           indf2	equ	0xFDF
  7312                           plusw2	equ	0xFDB
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function _m_mem_cpy *****************
  7318 ;; Defined at:
  7319 ;;		line 51 in file "src/depend/m_string.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  d               2    0[BANK0 ] PTR unsigned char 
  7322 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7323 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7324 ;;		 -> STR_3(5), 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;Total ram usage:        4 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    4
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_ui_disp_adj_xfixed_pt
  7347 ;;		_ui_disp_adj_xfloat_pt
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text42
  7352  0020C0                     __ptext42:
  7353                           	opt stack 0
  7354  0020C0                     _m_mem_cpy:
  7355                           	opt stack 22
  7356                           
  7357                           ;m_string.c: 53: while(*s!='\0')
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;incstack = 0
  7361  0020C0  D011               	goto	l6717
  7362  0020C2                     l6711:
  7363                           
  7364                           ;m_string.c: 54: {
  7365                           ;m_string.c: 55: *d++=*s++;
  7366  0020C2  C0C5  FFF6         	movff	m_mem_cpy@s,tblptrl
  7367  0020C6  C0C6  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7368  0020CA                     	if	0	;tblptru may be non-zero
  7369  0020CA                     	endif
  7370  0020CA                     	if	0	;tblptru may be non-zero
  7371  0020CA                     	endif
  7372  0020CA  C0C3  FFD9         	movff	m_mem_cpy@d,fsr2l
  7373  0020CE  C0C4  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7374  0020D2  0008               	tblrd		*
  7375  0020D4  CFF5 FFDF          	movff	tablat,indf2
  7376  0020D8  0100               	movlb	0	; () banked
  7377  0020DA  4BC5               	infsnz	m_mem_cpy@s& (0+255),f,b
  7378  0020DC  2BC6               	incf	(m_mem_cpy@s+1)& (0+255),f,b
  7379                           
  7380                           ; BSR set to: 0
  7381  0020DE  0100               	movlb	0	; () banked
  7382  0020E0  4BC3               	infsnz	m_mem_cpy@d& (0+255),f,b
  7383  0020E2  2BC4               	incf	(m_mem_cpy@d+1)& (0+255),f,b
  7384  0020E4                     l6717:
  7385  0020E4  C0C5  FFF6         	movff	m_mem_cpy@s,tblptrl
  7386  0020E8  C0C6  FFF7         	movff	m_mem_cpy@s+1,tblptrh
  7387  0020EC                     	if	0	;tblptru may be non-zero
  7388  0020EC                     	endif
  7389  0020EC                     	if	0	;tblptru may be non-zero
  7390  0020EC                     	endif
  7391  0020EC  0008               	tblrd		*
  7392  0020EE  50F5               	movf	tablat,w,c
  7393  0020F0  0900               	iorlw	0
  7394  0020F2  A4D8               	btfss	status,2,c
  7395  0020F4  D7E6               	goto	l6711
  7396                           
  7397                           ;m_string.c: 56: }
  7398                           ;m_string.c: 57: *d='\0';
  7399  0020F6  C0C3  FFD9         	movff	m_mem_cpy@d,fsr2l
  7400  0020FA  C0C4  FFDA         	movff	m_mem_cpy@d+1,fsr2h
  7401  0020FE  0E00               	movlw	0
  7402  002100  6EDF               	movwf	indf2,c
  7403  002102  0012               	return		;funcret
  7404  002104                     __end_of_m_mem_cpy:
  7405                           	opt stack 0
  7406                           tblptru	equ	0xFF8
  7407                           tblptrh	equ	0xFF7
  7408                           tblptrl	equ	0xFF6
  7409                           tablat	equ	0xFF5
  7410                           prodh	equ	0xFF4
  7411                           prodl	equ	0xFF3
  7412                           intcon	equ	0xFF2
  7413                           indf0	equ	0xFEF
  7414                           postinc0	equ	0xFEE
  7415                           fsr0h	equ	0xFEA
  7416                           fsr0l	equ	0xFE9
  7417                           wreg	equ	0xFE8
  7418                           postdec1	equ	0xFE5
  7419                           plusw1	equ	0xFE3
  7420                           fsr1h	equ	0xFE2
  7421                           fsr1l	equ	0xFE1
  7422                           indf2	equ	0xFDF
  7423                           plusw2	equ	0xFDB
  7424                           fsr2h	equ	0xFDA
  7425                           fsr2l	equ	0xFD9
  7426                           status	equ	0xFD8
  7427                           
  7428 ;; *************** function _m_int16_2_str_4 *****************
  7429 ;; Defined at:
  7430 ;;		line 260 in file "src/depend/m_string.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  7433 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  7434 ;;  x               2   10[BANK0 ] int 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;Total ram usage:        4 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    5
  7453 ;; This function calls:
  7454 ;;		___awdiv
  7455 ;;		___awmod
  7456 ;; This function is called by:
  7457 ;;		_ui_disp_adj_xfixed_pt
  7458 ;;		_ui_disp_adj_xfloat_pt
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text43
  7463  00070A                     __ptext43:
  7464                           	opt stack 0
  7465  00070A                     _m_int16_2_str_4:
  7466                           	opt stack 21
  7467                           
  7468                           ;m_string.c: 262: if(x>9999)x=9999;
  7469                           
  7470                           ;incstack = 0
  7471  00070A  0100               	movlb	0	; () banked
  7472  00070C  BFCE               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
  7473  00070E  D00D               	goto	l6725
  7474  000710  0E10               	movlw	16
  7475  000712  0100               	movlb	0	; () banked
  7476  000714  5DCD               	subwf	m_int16_2_str_4@x& (0+255),w,b
  7477  000716  0E27               	movlw	39
  7478  000718  0100               	movlb	0	; () banked
  7479  00071A  59CE               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
  7480  00071C  A0D8               	btfss	status,0,c
  7481  00071E  D005               	goto	l6725
  7482                           
  7483                           ; BSR set to: 0
  7484  000720  0E27               	movlw	39
  7485  000722  0100               	movlb	0	; () banked
  7486  000724  6FCE               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
  7487  000726  0E0F               	movlw	15
  7488  000728  6FCD               	movwf	m_int16_2_str_4@x& (0+255),b
  7489  00072A                     l6725:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;m_string.c: 263: buf[3]=HexTable[x%10];
  7493  00072A  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awmod@dividend
  7494  00072E  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7495  000732  0E00               	movlw	0
  7496  000734  0100               	movlb	0	; () banked
  7497  000736  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
  7498  000738  0E0A               	movlw	10
  7499  00073A  6FC5               	movwf	___awmod@divisor& (0+255),b
  7500  00073C  ECEC  F009         	call	___awmod	;wreg free
  7501  000740  0E0C               	movlw	low _HexTable
  7502  000742  0100               	movlb	0	; () banked
  7503  000744  25C3               	addwf	?___awmod& (0+255),w,b
  7504  000746  6EF6               	movwf	tblptrl,c
  7505  000748  0EFF               	movlw	high _HexTable
  7506  00074A  0100               	movlb	0	; () banked
  7507  00074C  21C4               	addwfc	(?___awmod+1)& (0+255),w,b
  7508  00074E  6EF7               	movwf	tblptrh,c
  7509  000750                     	if	0	;There are less than 3 active tblptr bytes
  7510  000750                     	endif
  7511  000750  0100               	movlb	0	; () banked
  7512  000752  EE20 F003          	lfsr	2,3
  7513  000756  51CB               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7514  000758  26D9               	addwf	fsr2l,f,c
  7515  00075A  51CC               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7516  00075C  22DA               	addwfc	fsr2h,f,c
  7517  00075E  0008               	tblrd		*
  7518  000760  CFF5 FFDF          	movff	tablat,indf2
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;m_string.c: 264: x/=10;
  7522  000764  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7523  000768  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7524  00076C  0E00               	movlw	0
  7525  00076E  0100               	movlb	0	; () banked
  7526  000770  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  7527  000772  0E0A               	movlw	10
  7528  000774  6FC5               	movwf	___awdiv@divisor& (0+255),b
  7529  000776  ECD4  F006         	call	___awdiv	;wreg free
  7530  00077A  C0C3  F0CD         	movff	?___awdiv,m_int16_2_str_4@x
  7531  00077E  C0C4  F0CE         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7532                           
  7533                           ;m_string.c: 265: buf[2]=HexTable[x%10];
  7534  000782  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awmod@dividend
  7535  000786  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7536  00078A  0E00               	movlw	0
  7537  00078C  0100               	movlb	0	; () banked
  7538  00078E  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
  7539  000790  0E0A               	movlw	10
  7540  000792  6FC5               	movwf	___awmod@divisor& (0+255),b
  7541  000794  ECEC  F009         	call	___awmod	;wreg free
  7542  000798  0E0C               	movlw	low _HexTable
  7543  00079A  0100               	movlb	0	; () banked
  7544  00079C  25C3               	addwf	?___awmod& (0+255),w,b
  7545  00079E  6EF6               	movwf	tblptrl,c
  7546  0007A0  0EFF               	movlw	high _HexTable
  7547  0007A2  0100               	movlb	0	; () banked
  7548  0007A4  21C4               	addwfc	(?___awmod+1)& (0+255),w,b
  7549  0007A6  6EF7               	movwf	tblptrh,c
  7550  0007A8                     	if	0	;There are less than 3 active tblptr bytes
  7551  0007A8                     	endif
  7552  0007A8  0100               	movlb	0	; () banked
  7553  0007AA  EE20 F002          	lfsr	2,2
  7554  0007AE  51CB               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7555  0007B0  26D9               	addwf	fsr2l,f,c
  7556  0007B2  51CC               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7557  0007B4  22DA               	addwfc	fsr2h,f,c
  7558  0007B6  0008               	tblrd		*
  7559  0007B8  CFF5 FFDF          	movff	tablat,indf2
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;m_string.c: 266: x/=10;
  7563  0007BC  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7564  0007C0  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7565  0007C4  0E00               	movlw	0
  7566  0007C6  0100               	movlb	0	; () banked
  7567  0007C8  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  7568  0007CA  0E0A               	movlw	10
  7569  0007CC  6FC5               	movwf	___awdiv@divisor& (0+255),b
  7570  0007CE  ECD4  F006         	call	___awdiv	;wreg free
  7571  0007D2  C0C3  F0CD         	movff	?___awdiv,m_int16_2_str_4@x
  7572  0007D6  C0C4  F0CE         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7573                           
  7574                           ;m_string.c: 267: buf[1]=HexTable[x%10];
  7575  0007DA  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awmod@dividend
  7576  0007DE  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7577  0007E2  0E00               	movlw	0
  7578  0007E4  0100               	movlb	0	; () banked
  7579  0007E6  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
  7580  0007E8  0E0A               	movlw	10
  7581  0007EA  6FC5               	movwf	___awmod@divisor& (0+255),b
  7582  0007EC  ECEC  F009         	call	___awmod	;wreg free
  7583  0007F0  0E0C               	movlw	low _HexTable
  7584  0007F2  0100               	movlb	0	; () banked
  7585  0007F4  25C3               	addwf	?___awmod& (0+255),w,b
  7586  0007F6  6EF6               	movwf	tblptrl,c
  7587  0007F8  0EFF               	movlw	high _HexTable
  7588  0007FA  0100               	movlb	0	; () banked
  7589  0007FC  21C4               	addwfc	(?___awmod+1)& (0+255),w,b
  7590  0007FE  6EF7               	movwf	tblptrh,c
  7591  000800                     	if	0	;There are less than 3 active tblptr bytes
  7592  000800                     	endif
  7593  000800  0100               	movlb	0	; () banked
  7594  000802  EE20 F001          	lfsr	2,1
  7595  000806  51CB               	movf	m_int16_2_str_4@buf& (0+255),w,b
  7596  000808  26D9               	addwf	fsr2l,f,c
  7597  00080A  51CC               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
  7598  00080C  22DA               	addwfc	fsr2h,f,c
  7599  00080E  0008               	tblrd		*
  7600  000810  CFF5 FFDF          	movff	tablat,indf2
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;m_string.c: 268: x/=10;
  7604  000814  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awdiv@dividend
  7605  000818  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
  7606  00081C  0E00               	movlw	0
  7607  00081E  0100               	movlb	0	; () banked
  7608  000820  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  7609  000822  0E0A               	movlw	10
  7610  000824  6FC5               	movwf	___awdiv@divisor& (0+255),b
  7611  000826  ECD4  F006         	call	___awdiv	;wreg free
  7612  00082A  C0C3  F0CD         	movff	?___awdiv,m_int16_2_str_4@x
  7613  00082E  C0C4  F0CE         	movff	?___awdiv+1,m_int16_2_str_4@x+1
  7614                           
  7615                           ;m_string.c: 269: buf[0]=HexTable[x%10];
  7616  000832  C0CD  F0C3         	movff	m_int16_2_str_4@x,___awmod@dividend
  7617  000836  C0CE  F0C4         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
  7618  00083A  0E00               	movlw	0
  7619  00083C  0100               	movlb	0	; () banked
  7620  00083E  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
  7621  000840  0E0A               	movlw	10
  7622  000842  6FC5               	movwf	___awmod@divisor& (0+255),b
  7623  000844  ECEC  F009         	call	___awmod	;wreg free
  7624  000848  0E0C               	movlw	low _HexTable
  7625  00084A  0100               	movlb	0	; () banked
  7626  00084C  25C3               	addwf	?___awmod& (0+255),w,b
  7627  00084E  6EF6               	movwf	tblptrl,c
  7628  000850  0EFF               	movlw	high _HexTable
  7629  000852  0100               	movlb	0	; () banked
  7630  000854  21C4               	addwfc	(?___awmod+1)& (0+255),w,b
  7631  000856  6EF7               	movwf	tblptrh,c
  7632  000858                     	if	0	;There are less than 3 active tblptr bytes
  7633  000858                     	endif
  7634  000858  C0CB  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
  7635  00085C  C0CC  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
  7636  000860  0008               	tblrd		*
  7637  000862  CFF5 FFDF          	movff	tablat,indf2
  7638                           
  7639                           ; BSR set to: 0
  7640  000866  0012               	return		;funcret
  7641  000868                     __end_of_m_int16_2_str_4:
  7642                           	opt stack 0
  7643                           tblptru	equ	0xFF8
  7644                           tblptrh	equ	0xFF7
  7645                           tblptrl	equ	0xFF6
  7646                           tablat	equ	0xFF5
  7647                           prodh	equ	0xFF4
  7648                           prodl	equ	0xFF3
  7649                           intcon	equ	0xFF2
  7650                           indf0	equ	0xFEF
  7651                           postinc0	equ	0xFEE
  7652                           fsr0h	equ	0xFEA
  7653                           fsr0l	equ	0xFE9
  7654                           wreg	equ	0xFE8
  7655                           postdec1	equ	0xFE5
  7656                           plusw1	equ	0xFE3
  7657                           fsr1h	equ	0xFE2
  7658                           fsr1l	equ	0xFE1
  7659                           indf2	equ	0xFDF
  7660                           plusw2	equ	0xFDB
  7661                           fsr2h	equ	0xFDA
  7662                           fsr2l	equ	0xFD9
  7663                           status	equ	0xFD8
  7664                           
  7665 ;; *************** function ___awmod *****************
  7666 ;; Defined at:
  7667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  dividend        2    0[BANK0 ] int 
  7670 ;;  divisor         2    2[BANK0 ] int 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  sign            1   32[COMRAM] unsigned char 
  7673 ;;  counter         1   31[COMRAM] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  2    0[BANK0 ] int 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;Total ram usage:        6 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    4
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_m_int16_2_str_4
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text44
  7698  0013D8                     __ptext44:
  7699                           	opt stack 0
  7700  0013D8                     ___awmod:
  7701                           	opt stack 21
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;incstack = 0
  7705  0013D8  0E00               	movlw	0
  7706  0013DA  6E21               	movwf	___awmod@sign,c
  7707  0013DC  0100               	movlb	0	; () banked
  7708  0013DE  AFC4               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7709  0013E0  D007               	goto	l6653
  7710                           
  7711                           ; BSR set to: 0
  7712  0013E2  0100               	movlb	0	; () banked
  7713  0013E4  6DC3               	negf	___awmod@dividend& (0+255),b
  7714  0013E6  1FC4               	comf	(___awmod@dividend+1)& (0+255),f,b
  7715  0013E8  B0D8               	btfsc	status,0,c
  7716  0013EA  2BC4               	incf	(___awmod@dividend+1)& (0+255),f,b
  7717                           
  7718                           ; BSR set to: 0
  7719  0013EC  0E01               	movlw	1
  7720  0013EE  6E21               	movwf	___awmod@sign,c
  7721  0013F0                     l6653:
  7722                           
  7723                           ; BSR set to: 0
  7724  0013F0  0100               	movlb	0	; () banked
  7725  0013F2  AFC6               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7726  0013F4  D005               	goto	l6657
  7727                           
  7728                           ; BSR set to: 0
  7729  0013F6  0100               	movlb	0	; () banked
  7730  0013F8  6DC5               	negf	___awmod@divisor& (0+255),b
  7731  0013FA  1FC6               	comf	(___awmod@divisor+1)& (0+255),f,b
  7732  0013FC  B0D8               	btfsc	status,0,c
  7733  0013FE  2BC6               	incf	(___awmod@divisor+1)& (0+255),f,b
  7734  001400                     l6657:
  7735                           
  7736                           ; BSR set to: 0
  7737  001400  0100               	movlb	0	; () banked
  7738  001402  51C5               	movf	___awmod@divisor& (0+255),w,b
  7739  001404  0100               	movlb	0	; () banked
  7740  001406  11C6               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7741  001408  B4D8               	btfsc	status,2,c
  7742  00140A  D023               	goto	l6673
  7743                           
  7744                           ; BSR set to: 0
  7745  00140C  0E01               	movlw	1
  7746  00140E  6E20               	movwf	___awmod@counter,c
  7747  001410  D005               	goto	l6663
  7748  001412                     l6661:
  7749                           
  7750                           ; BSR set to: 0
  7751  001412  0100               	movlb	0	; () banked
  7752  001414  90D8               	bcf	status,0,c
  7753  001416  37C5               	rlcf	___awmod@divisor& (0+255),f,b
  7754  001418  37C6               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7755  00141A  2A20               	incf	___awmod@counter,f,c
  7756  00141C                     l6663:
  7757                           
  7758                           ; BSR set to: 0
  7759  00141C  0100               	movlb	0	; () banked
  7760  00141E  AFC6               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7761  001420  D7F8               	goto	l6661
  7762  001422                     l6665:
  7763                           
  7764                           ; BSR set to: 0
  7765  001422  0100               	movlb	0	; () banked
  7766  001424  51C5               	movf	___awmod@divisor& (0+255),w,b
  7767  001426  0100               	movlb	0	; () banked
  7768  001428  5DC3               	subwf	___awmod@dividend& (0+255),w,b
  7769  00142A  0100               	movlb	0	; () banked
  7770  00142C  51C6               	movf	(___awmod@divisor+1)& (0+255),w,b
  7771  00142E  0100               	movlb	0	; () banked
  7772  001430  59C4               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7773  001432  A0D8               	btfss	status,0,c
  7774  001434  D008               	goto	l6669
  7775                           
  7776                           ; BSR set to: 0
  7777  001436  0100               	movlb	0	; () banked
  7778  001438  51C5               	movf	___awmod@divisor& (0+255),w,b
  7779  00143A  0100               	movlb	0	; () banked
  7780  00143C  5FC3               	subwf	___awmod@dividend& (0+255),f,b
  7781  00143E  0100               	movlb	0	; () banked
  7782  001440  51C6               	movf	(___awmod@divisor+1)& (0+255),w,b
  7783  001442  0100               	movlb	0	; () banked
  7784  001444  5BC4               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7785  001446                     l6669:
  7786                           
  7787                           ; BSR set to: 0
  7788  001446  0100               	movlb	0	; () banked
  7789  001448  90D8               	bcf	status,0,c
  7790  00144A  33C6               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7791  00144C  33C5               	rrcf	___awmod@divisor& (0+255),f,b
  7792                           
  7793                           ; BSR set to: 0
  7794  00144E  2E20               	decfsz	___awmod@counter,f,c
  7795  001450  D7E8               	goto	l6665
  7796  001452                     l6673:
  7797                           
  7798                           ; BSR set to: 0
  7799  001452  5021               	movf	___awmod@sign,w,c
  7800  001454  B4D8               	btfsc	status,2,c
  7801  001456  D005               	goto	l6677
  7802                           
  7803                           ; BSR set to: 0
  7804  001458  0100               	movlb	0	; () banked
  7805  00145A  6DC3               	negf	___awmod@dividend& (0+255),b
  7806  00145C  1FC4               	comf	(___awmod@dividend+1)& (0+255),f,b
  7807  00145E  B0D8               	btfsc	status,0,c
  7808  001460  2BC4               	incf	(___awmod@dividend+1)& (0+255),f,b
  7809  001462                     l6677:
  7810                           
  7811                           ; BSR set to: 0
  7812  001462  C0C3  F0C3         	movff	___awmod@dividend,?___awmod
  7813  001466  C0C4  F0C4         	movff	___awmod@dividend+1,?___awmod+1
  7814  00146A  0012               	return	
  7815  00146C                     __end_of___awmod:
  7816                           	opt stack 0
  7817                           tblptru	equ	0xFF8
  7818                           tblptrh	equ	0xFF7
  7819                           tblptrl	equ	0xFF6
  7820                           tablat	equ	0xFF5
  7821                           prodh	equ	0xFF4
  7822                           prodl	equ	0xFF3
  7823                           intcon	equ	0xFF2
  7824                           indf0	equ	0xFEF
  7825                           postinc0	equ	0xFEE
  7826                           fsr0h	equ	0xFEA
  7827                           fsr0l	equ	0xFE9
  7828                           wreg	equ	0xFE8
  7829                           postdec1	equ	0xFE5
  7830                           plusw1	equ	0xFE3
  7831                           fsr1h	equ	0xFE2
  7832                           fsr1l	equ	0xFE1
  7833                           indf2	equ	0xFDF
  7834                           plusw2	equ	0xFDB
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function ___awdiv *****************
  7840 ;; Defined at:
  7841 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  dividend        2    0[BANK0 ] int 
  7844 ;;  divisor         2    2[BANK0 ] int 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  quotient        2    6[BANK0 ] int 
  7847 ;;  sign            1    5[BANK0 ] unsigned char 
  7848 ;;  counter         1    4[BANK0 ] unsigned char 
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  2    0[BANK0 ] int 
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;Total ram usage:        8 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; Hardware stack levels required when called:    4
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_m_int16_2_str_4
  7869 ;;		_lcd_set_com_seg
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text45
  7874  000DA8                     __ptext45:
  7875                           	opt stack 0
  7876  000DA8                     ___awdiv:
  7877                           	opt stack 21
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;incstack = 0
  7881  000DA8  0E00               	movlw	0
  7882  000DAA  0100               	movlb	0	; () banked
  7883  000DAC  6FC8               	movwf	___awdiv@sign& (0+255),b
  7884                           
  7885                           ; BSR set to: 0
  7886  000DAE  0100               	movlb	0	; () banked
  7887  000DB0  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7888  000DB2  D008               	goto	l6483
  7889                           
  7890                           ; BSR set to: 0
  7891  000DB4  0100               	movlb	0	; () banked
  7892  000DB6  6DC5               	negf	___awdiv@divisor& (0+255),b
  7893  000DB8  1FC6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7894  000DBA  B0D8               	btfsc	status,0,c
  7895  000DBC  2BC6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7896                           
  7897                           ; BSR set to: 0
  7898  000DBE  0E01               	movlw	1
  7899  000DC0  0100               	movlb	0	; () banked
  7900  000DC2  6FC8               	movwf	___awdiv@sign& (0+255),b
  7901  000DC4                     l6483:
  7902                           
  7903                           ; BSR set to: 0
  7904  000DC4  0100               	movlb	0	; () banked
  7905  000DC6  AFC4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7906  000DC8  D008               	goto	l6489
  7907                           
  7908                           ; BSR set to: 0
  7909  000DCA  0100               	movlb	0	; () banked
  7910  000DCC  6DC3               	negf	___awdiv@dividend& (0+255),b
  7911  000DCE  1FC4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7912  000DD0  B0D8               	btfsc	status,0,c
  7913  000DD2  2BC4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7914                           
  7915                           ; BSR set to: 0
  7916  000DD4  0E01               	movlw	1
  7917  000DD6  0100               	movlb	0	; () banked
  7918  000DD8  1BC8               	xorwf	___awdiv@sign& (0+255),f,b
  7919  000DDA                     l6489:
  7920                           
  7921                           ; BSR set to: 0
  7922  000DDA  0E00               	movlw	0
  7923  000DDC  0100               	movlb	0	; () banked
  7924  000DDE  6FCA               	movwf	(___awdiv@quotient+1)& (0+255),b
  7925  000DE0  0E00               	movlw	0
  7926  000DE2  6FC9               	movwf	___awdiv@quotient& (0+255),b
  7927                           
  7928                           ; BSR set to: 0
  7929  000DE4  0100               	movlb	0	; () banked
  7930  000DE6  51C5               	movf	___awdiv@divisor& (0+255),w,b
  7931  000DE8  0100               	movlb	0	; () banked
  7932  000DEA  11C6               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7933  000DEC  B4D8               	btfsc	status,2,c
  7934  000DEE  D02C               	goto	l6511
  7935                           
  7936                           ; BSR set to: 0
  7937  000DF0  0E01               	movlw	1
  7938  000DF2  0100               	movlb	0	; () banked
  7939  000DF4  6FC7               	movwf	___awdiv@counter& (0+255),b
  7940  000DF6  D006               	goto	l6497
  7941  000DF8                     l6495:
  7942                           
  7943                           ; BSR set to: 0
  7944  000DF8  0100               	movlb	0	; () banked
  7945  000DFA  90D8               	bcf	status,0,c
  7946  000DFC  37C5               	rlcf	___awdiv@divisor& (0+255),f,b
  7947  000DFE  37C6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7948  000E00  0100               	movlb	0	; () banked
  7949  000E02  2BC7               	incf	___awdiv@counter& (0+255),f,b
  7950  000E04                     l6497:
  7951                           
  7952                           ; BSR set to: 0
  7953  000E04  0100               	movlb	0	; () banked
  7954  000E06  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7955  000E08  D7F7               	goto	l6495
  7956  000E0A                     l6499:
  7957                           
  7958                           ; BSR set to: 0
  7959  000E0A  0100               	movlb	0	; () banked
  7960  000E0C  90D8               	bcf	status,0,c
  7961  000E0E  37C9               	rlcf	___awdiv@quotient& (0+255),f,b
  7962  000E10  37CA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7963                           
  7964                           ; BSR set to: 0
  7965  000E12  0100               	movlb	0	; () banked
  7966  000E14  51C5               	movf	___awdiv@divisor& (0+255),w,b
  7967  000E16  0100               	movlb	0	; () banked
  7968  000E18  5DC3               	subwf	___awdiv@dividend& (0+255),w,b
  7969  000E1A  0100               	movlb	0	; () banked
  7970  000E1C  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7971  000E1E  0100               	movlb	0	; () banked
  7972  000E20  59C4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7973  000E22  A0D8               	btfss	status,0,c
  7974  000E24  D00A               	goto	l6507
  7975                           
  7976                           ; BSR set to: 0
  7977  000E26  0100               	movlb	0	; () banked
  7978  000E28  51C5               	movf	___awdiv@divisor& (0+255),w,b
  7979  000E2A  0100               	movlb	0	; () banked
  7980  000E2C  5FC3               	subwf	___awdiv@dividend& (0+255),f,b
  7981  000E2E  0100               	movlb	0	; () banked
  7982  000E30  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7983  000E32  0100               	movlb	0	; () banked
  7984  000E34  5BC4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7985                           
  7986                           ; BSR set to: 0
  7987  000E36  0100               	movlb	0	; () banked
  7988  000E38  81C9               	bsf	___awdiv@quotient& (0+255),0,b
  7989  000E3A                     l6507:
  7990                           
  7991                           ; BSR set to: 0
  7992  000E3A  0100               	movlb	0	; () banked
  7993  000E3C  90D8               	bcf	status,0,c
  7994  000E3E  33C6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7995  000E40  33C5               	rrcf	___awdiv@divisor& (0+255),f,b
  7996                           
  7997                           ; BSR set to: 0
  7998  000E42  0100               	movlb	0	; () banked
  7999  000E44  2FC7               	decfsz	___awdiv@counter& (0+255),f,b
  8000  000E46  D7E1               	goto	l6499
  8001  000E48                     l6511:
  8002                           
  8003                           ; BSR set to: 0
  8004  000E48  0100               	movlb	0	; () banked
  8005  000E4A  51C8               	movf	___awdiv@sign& (0+255),w,b
  8006  000E4C  0100               	movlb	0	; () banked
  8007  000E4E  B4D8               	btfsc	status,2,c
  8008  000E50  D005               	goto	l6515
  8009                           
  8010                           ; BSR set to: 0
  8011  000E52  0100               	movlb	0	; () banked
  8012  000E54  6DC9               	negf	___awdiv@quotient& (0+255),b
  8013  000E56  1FCA               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8014  000E58  B0D8               	btfsc	status,0,c
  8015  000E5A  2BCA               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8016  000E5C                     l6515:
  8017                           
  8018                           ; BSR set to: 0
  8019  000E5C  C0C9  F0C3         	movff	___awdiv@quotient,?___awdiv
  8020  000E60  C0CA  F0C4         	movff	___awdiv@quotient+1,?___awdiv+1
  8021  000E64  0012               	return	
  8022  000E66                     __end_of___awdiv:
  8023                           	opt stack 0
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           indf0	equ	0xFEF
  8032                           postinc0	equ	0xFEE
  8033                           fsr0h	equ	0xFEA
  8034                           fsr0l	equ	0xFE9
  8035                           wreg	equ	0xFE8
  8036                           postdec1	equ	0xFE5
  8037                           plusw1	equ	0xFE3
  8038                           fsr1h	equ	0xFE2
  8039                           fsr1l	equ	0xFE1
  8040                           indf2	equ	0xFDF
  8041                           plusw2	equ	0xFDB
  8042                           fsr2h	equ	0xFDA
  8043                           fsr2l	equ	0xFD9
  8044                           status	equ	0xFD8
  8045                           
  8046 ;; *************** function _lcd_disp_refresh *****************
  8047 ;; Defined at:
  8048 ;;		line 547 in file "src/driver/lcd.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;		None
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		None
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;Total ram usage:        0 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    4
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_ui_disp_start_cs600
  8073 ;;		_ui_disp_rtc_mm_ss
  8074 ;;		_ui_disp_adj_xfixed_pt
  8075 ;;		_ui_disp_all_on
  8076 ;;		_ui_disp_all_off
  8077 ;;		_ui_disp_adj_xfloat_pt
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text46
  8082  001BA4                     __ptext46:
  8083                           	opt stack 0
  8084  001BA4                     _lcd_disp_refresh:
  8085                           	opt stack 25
  8086                           
  8087                           ;lcd.c: 550: LCDDATA0=pLCD[0];
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;incstack = 0
  8091  001BA4  C060  FFBB         	movff	_pLCD,4027	;volatile
  8092                           
  8093                           ;lcd.c: 551: LCDDATA1=pLCD[1];
  8094  001BA8  C061  FFBC         	movff	_pLCD+1,4028	;volatile
  8095                           
  8096                           ;lcd.c: 552: LCDDATA2=pLCD[2];
  8097  001BAC  C062  FFBD         	movff	_pLCD+2,4029	;volatile
  8098                           
  8099                           ;lcd.c: 553: LCDDATA3=pLCD[3];
  8100  001BB0  C063  FFBE         	movff	_pLCD+3,4030	;volatile
  8101                           
  8102                           ;lcd.c: 554: LCDDATA4=pLCD[4];
  8103  001BB4  C064  FFBF         	movff	_pLCD+4,4031	;volatile
  8104                           
  8105                           ;lcd.c: 555: LCDDATA5=pLCD[5];
  8106  001BB8  C065  FF6B         	movff	_pLCD+5,3947	;volatile
  8107                           
  8108                           ;lcd.c: 556: LCDDATA6=pLCD[6];
  8109  001BBC  C066  FF6C         	movff	_pLCD+6,3948	;volatile
  8110                           
  8111                           ;lcd.c: 557: LCDDATA7=pLCD[7];
  8112  001BC0  C067  FF6D         	movff	_pLCD+7,3949	;volatile
  8113                           
  8114                           ;lcd.c: 558: LCDDATA8=pLCD[8];
  8115  001BC4  C068  FF6E         	movff	_pLCD+8,3950	;volatile
  8116                           
  8117                           ;lcd.c: 559: LCDDATA9=pLCD[9];
  8118  001BC8  C069  FF6F         	movff	_pLCD+9,3951	;volatile
  8119                           
  8120                           ;lcd.c: 561: LCDDATA10=pLCD[10];
  8121  001BCC  C06A  FF70         	movff	_pLCD+10,3952	;volatile
  8122                           
  8123                           ;lcd.c: 562: LCDDATA11=pLCD[11];
  8124  001BD0  C06B  FF71         	movff	_pLCD+11,3953	;volatile
  8125                           
  8126                           ;lcd.c: 563: LCDDATA12=pLCD[12];
  8127  001BD4  C06C  FF72         	movff	_pLCD+12,3954	;volatile
  8128                           
  8129                           ;lcd.c: 564: LCDDATA13=pLCD[13];
  8130  001BD8  C06D  FF73         	movff	_pLCD+13,3955	;volatile
  8131                           
  8132                           ;lcd.c: 565: LCDDATA14=pLCD[14];
  8133  001BDC  C06E  FF74         	movff	_pLCD+14,3956	;volatile
  8134                           
  8135                           ;lcd.c: 566: LCDDATA15=pLCD[15];
  8136  001BE0  C06F  FF75         	movff	_pLCD+15,3957	;volatile
  8137                           
  8138                           ;lcd.c: 567: LCDDATA16=pLCD[16];
  8139  001BE4  C070  FF76         	movff	_pLCD+16,3958	;volatile
  8140                           
  8141                           ;lcd.c: 568: LCDDATA17=pLCD[17];
  8142  001BE8  C071  FF77         	movff	_pLCD+17,3959	;volatile
  8143                           
  8144                           ;lcd.c: 569: LCDDATA18=pLCD[18];
  8145  001BEC  C072  FF78         	movff	_pLCD+18,3960	;volatile
  8146                           
  8147                           ;lcd.c: 570: LCDDATA19=pLCD[19];
  8148  001BF0  C073  FF79         	movff	_pLCD+19,3961	;volatile
  8149                           
  8150                           ;lcd.c: 572: LCDDATA20=pLCD[20];
  8151  001BF4  C074  FF7A         	movff	_pLCD+20,3962	;volatile
  8152                           
  8153                           ;lcd.c: 573: LCDDATA21=pLCD[21];
  8154  001BF8  C075  FF7B         	movff	_pLCD+21,3963	;volatile
  8155                           
  8156                           ;lcd.c: 574: LCDDATA22=pLCD[22];
  8157  001BFC  C076  FF7C         	movff	_pLCD+22,3964	;volatile
  8158                           
  8159                           ;lcd.c: 575: LCDDATA23=pLCD[23];
  8160  001C00  C077  FF7D         	movff	_pLCD+23,3965	;volatile
  8161  001C04  0012               	return		;funcret
  8162  001C06                     __end_of_lcd_disp_refresh:
  8163                           	opt stack 0
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           indf0	equ	0xFEF
  8172                           postinc0	equ	0xFEE
  8173                           fsr0h	equ	0xFEA
  8174                           fsr0l	equ	0xFE9
  8175                           wreg	equ	0xFE8
  8176                           postdec1	equ	0xFE5
  8177                           plusw1	equ	0xFE3
  8178                           fsr1h	equ	0xFE2
  8179                           fsr1l	equ	0xFE1
  8180                           indf2	equ	0xFDF
  8181                           plusw2	equ	0xFDB
  8182                           fsr2h	equ	0xFDA
  8183                           fsr2l	equ	0xFD9
  8184                           status	equ	0xFD8
  8185                           
  8186 ;; *************** function ___x_arrange_str *****************
  8187 ;; Defined at:
  8188 ;;		line 9 in file "src/api/ui.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  str             2    0[BANK0 ] PTR unsigned char 
  8191 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
  8192 ;;  len             1    2[BANK0 ] unsigned char 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  i               1   31[COMRAM] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  1    wreg      void 
  8197 ;; Registers used:
  8198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8204 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;Total ram usage:        4 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    4
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_ui_disp_adj_xfixed_pt
  8215 ;;		_ui_disp_adj_xfloat_pt
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text47
  8220  001CC6                     __ptext47:
  8221                           	opt stack 0
  8222  001CC6                     ___x_arrange_str:
  8223                           	opt stack 22
  8224                           
  8225                           ;ui.c: 11: uint8_t i;
  8226                           ;ui.c: 12: for(i=0;i<len;i++){
  8227                           
  8228                           ;incstack = 0
  8229  001CC6  0E00               	movlw	0
  8230  001CC8  6E20               	movwf	___x_arrange_str@i,c
  8231  001CCA  D01A               	goto	l6689
  8232  001CCC                     l6683:
  8233                           
  8234                           ;ui.c: 13: if(str[i]=='\0')str[i]=' ';
  8235  001CCC  5020               	movf	___x_arrange_str@i,w,c
  8236  001CCE  0D01               	mullw	1
  8237  001CD0  50F3               	movf	prodl,w,c
  8238  001CD2  0100               	movlb	0	; () banked
  8239  001CD4  25C3               	addwf	___x_arrange_str@str& (0+255),w,b
  8240  001CD6  6ED9               	movwf	fsr2l,c
  8241  001CD8  50F4               	movf	prodh,w,c
  8242  001CDA  0100               	movlb	0	; () banked
  8243  001CDC  21C4               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8244  001CDE  6EDA               	movwf	fsr2h,c
  8245  001CE0  50DF               	movf	indf2,w,c
  8246  001CE2  A4D8               	btfss	status,2,c
  8247  001CE4  D00C               	goto	l6687
  8248                           
  8249                           ; BSR set to: 0
  8250  001CE6  5020               	movf	___x_arrange_str@i,w,c
  8251  001CE8  0D01               	mullw	1
  8252  001CEA  50F3               	movf	prodl,w,c
  8253  001CEC  0100               	movlb	0	; () banked
  8254  001CEE  25C3               	addwf	___x_arrange_str@str& (0+255),w,b
  8255  001CF0  6ED9               	movwf	fsr2l,c
  8256  001CF2  50F4               	movf	prodh,w,c
  8257  001CF4  0100               	movlb	0	; () banked
  8258  001CF6  21C4               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8259  001CF8  6EDA               	movwf	fsr2h,c
  8260  001CFA  0E20               	movlw	32
  8261  001CFC  6EDF               	movwf	indf2,c
  8262  001CFE                     l6687:
  8263                           
  8264                           ; BSR set to: 0
  8265  001CFE  2A20               	incf	___x_arrange_str@i,f,c
  8266  001D00                     l6689:
  8267  001D00  0100               	movlb	0	; () banked
  8268  001D02  51C5               	movf	___x_arrange_str@len& (0+255),w,b
  8269  001D04  5C20               	subwf	___x_arrange_str@i,w,c
  8270  001D06  A0D8               	btfss	status,0,c
  8271  001D08  D7E1               	goto	l6683
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;ui.c: 14: }
  8275                           ;ui.c: 15: str[i]='\0';
  8276                           
  8277                           ; BSR set to: 0
  8278  001D0A  5020               	movf	___x_arrange_str@i,w,c
  8279  001D0C  0D01               	mullw	1
  8280  001D0E  50F3               	movf	prodl,w,c
  8281  001D10  0100               	movlb	0	; () banked
  8282  001D12  25C3               	addwf	___x_arrange_str@str& (0+255),w,b
  8283  001D14  6ED9               	movwf	fsr2l,c
  8284  001D16  50F4               	movf	prodh,w,c
  8285  001D18  0100               	movlb	0	; () banked
  8286  001D1A  21C4               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
  8287  001D1C  6EDA               	movwf	fsr2h,c
  8288  001D1E  0E00               	movlw	0
  8289  001D20  6EDF               	movwf	indf2,c
  8290                           
  8291                           ; BSR set to: 0
  8292  001D22  0012               	return		;funcret
  8293  001D24                     __end_of___x_arrange_str:
  8294                           	opt stack 0
  8295                           tblptru	equ	0xFF8
  8296                           tblptrh	equ	0xFF7
  8297                           tblptrl	equ	0xFF6
  8298                           tablat	equ	0xFF5
  8299                           prodh	equ	0xFF4
  8300                           prodl	equ	0xFF3
  8301                           intcon	equ	0xFF2
  8302                           indf0	equ	0xFEF
  8303                           postinc0	equ	0xFEE
  8304                           fsr0h	equ	0xFEA
  8305                           fsr0l	equ	0xFE9
  8306                           wreg	equ	0xFE8
  8307                           postdec1	equ	0xFE5
  8308                           plusw1	equ	0xFE3
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           indf2	equ	0xFDF
  8312                           plusw2	equ	0xFDB
  8313                           fsr2h	equ	0xFDA
  8314                           fsr2l	equ	0xFD9
  8315                           status	equ	0xFD8
  8316                           
  8317 ;; *************** function _key_waite_release *****************
  8318 ;; Defined at:
  8319 ;;		line 26 in file "src/api/key_menu.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  timeout         2    6[BANK0 ] unsigned int 
  8322 ;;  key             2    8[BANK0 ] PTR unsigned char 
  8323 ;;		 -> key_process@key(1), 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  t8              1   10[BANK0 ] unsigned char 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  2    6[BANK0 ] unsigned int 
  8328 ;; Registers used:
  8329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;Total ram usage:        5 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    7
  8342 ;; This function calls:
  8343 ;;		_key_polling
  8344 ;; This function is called by:
  8345 ;;		_key_process
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text48
  8350  002188                     __ptext48:
  8351                           	opt stack 0
  8352  002188                     _key_waite_release:
  8353                           	opt stack 22
  8354                           
  8355                           ;key_menu.c: 28: uint8_t t8;
  8356                           ;key_menu.c: 30: userTicker_ms=0;
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;incstack = 0
  8360  002188  0E00               	movlw	0
  8361  00218A  6E36               	movwf	_userTicker_ms+1,c	;volatile
  8362  00218C  0E00               	movlw	0
  8363  00218E  6E35               	movwf	_userTicker_ms,c	;volatile
  8364                           
  8365                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  8366  002190  D009               	goto	l7499
  8367  002192                     l7493:
  8368                           
  8369                           ;key_menu.c: 32: t8=key_polling();
  8370  002192  ECEF  F00E         	call	_key_polling	;wreg free
  8371  002196  0100               	movlb	0	; () banked
  8372  002198  6FCD               	movwf	key_waite_release@t8& (0+255),b
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;key_menu.c: 33: if(t8==(0x0))break;
  8376  00219A  0100               	movlb	0	; () banked
  8377  00219C  51CD               	movf	key_waite_release@t8& (0+255),w,b
  8378  00219E  0100               	movlb	0	; () banked
  8379  0021A0  B4D8               	btfsc	status,2,c
  8380  0021A2  D008               	goto	l7501
  8381  0021A4                     l7499:
  8382  0021A4  0100               	movlb	0	; () banked
  8383  0021A6  51C9               	movf	key_waite_release@timeout& (0+255),w,b
  8384  0021A8  5C35               	subwf	_userTicker_ms,w,c	;volatile
  8385  0021AA  0100               	movlb	0	; () banked
  8386  0021AC  51CA               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  8387  0021AE  5836               	subwfb	_userTicker_ms+1,w,c	;volatile
  8388  0021B0  A0D8               	btfss	status,0,c
  8389  0021B2  D7EF               	goto	l7493
  8390  0021B4                     l7501:
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;key_menu.c: 34: }
  8394                           ;key_menu.c: 35: *key=t8;
  8395  0021B4  C0CB  FFD9         	movff	key_waite_release@key,fsr2l
  8396  0021B8  C0CC  FFDA         	movff	key_waite_release@key+1,fsr2h
  8397  0021BC  C0CD  FFDF         	movff	key_waite_release@t8,indf2
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;key_menu.c: 36: return userTicker_ms;
  8401  0021C0  C035  F0C9         	movff	_userTicker_ms,?_key_waite_release	;volatile
  8402  0021C4  C036  F0CA         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  8403  0021C8  0012               	return	
  8404  0021CA                     __end_of_key_waite_release:
  8405                           	opt stack 0
  8406                           tblptru	equ	0xFF8
  8407                           tblptrh	equ	0xFF7
  8408                           tblptrl	equ	0xFF6
  8409                           tablat	equ	0xFF5
  8410                           prodh	equ	0xFF4
  8411                           prodl	equ	0xFF3
  8412                           intcon	equ	0xFF2
  8413                           indf0	equ	0xFEF
  8414                           postinc0	equ	0xFEE
  8415                           fsr0h	equ	0xFEA
  8416                           fsr0l	equ	0xFE9
  8417                           wreg	equ	0xFE8
  8418                           postdec1	equ	0xFE5
  8419                           plusw1	equ	0xFE3
  8420                           fsr1h	equ	0xFE2
  8421                           fsr1l	equ	0xFE1
  8422                           indf2	equ	0xFDF
  8423                           plusw2	equ	0xFDB
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _key_polling *****************
  8429 ;; Defined at:
  8430 ;;		line 8 in file "src/driver/key.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  t8              1    5[BANK0 ] unsigned char 
  8435 ;;  ktemp           1    4[BANK0 ] unsigned char 
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  1    wreg      unsigned char 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;Total ram usage:        2 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    6
  8452 ;; This function calls:
  8453 ;;		_delay_ms
  8454 ;; This function is called by:
  8455 ;;		_key_waite_release
  8456 ;;		_main
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text49
  8461  001DDE                     __ptext49:
  8462                           	opt stack 0
  8463  001DDE                     _key_polling:
  8464                           	opt stack 22
  8465                           
  8466                           ;key.c: 10: uint8_t ktemp=(0x0);
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;incstack = 0
  8470  001DDE  0E00               	movlw	0
  8471  001DE0  0100               	movlb	0	; () banked
  8472  001DE2  6FC7               	movwf	key_polling@ktemp& (0+255),b
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;key.c: 11: uint8_t t8=0xff;
  8476  001DE4  0100               	movlb	0	; () banked
  8477  001DE6  69C8               	setf	key_polling@t8& (0+255),b
  8478                           
  8479                           ; BSR set to: 0
  8480                           
  8481                           ; BSR set to: 0
  8482                           
  8483                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  8484  001DE8  0E0E               	movlw	14
  8485  001DEA  1293               	iorwf	3987,f,c	;volatile
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  8489                           
  8490                           ; BSR set to: 0
  8491  001DEC  5081               	movf	3969,w,c	;volatile
  8492  001DEE  0B0E               	andlw	14
  8493  001DF0  0100               	movlb	0	; () banked
  8494  001DF2  6FC8               	movwf	key_polling@t8& (0+255),b
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  8498  001DF4  0100               	movlb	0	; () banked
  8499  001DF6  51C8               	movf	key_polling@t8& (0+255),w,b
  8500  001DF8  0B0E               	andlw	14
  8501  001DFA  0A0E               	xorlw	14
  8502  001DFC  B4D8               	btfsc	status,2,c
  8503  001DFE  D01A               	goto	l7181
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;key.c: 16: delay_ms(10);
  8507  001E00  0E00               	movlw	0
  8508  001E02  0100               	movlb	0	; () banked
  8509  001E04  6FC6               	movwf	(delay_ms@dly+1)& (0+255),b
  8510  001E06  0E0A               	movlw	10
  8511  001E08  6FC5               	movwf	delay_ms@dly& (0+255),b
  8512  001E0A  ECE7  F012         	call	_delay_ms	;wreg free
  8513                           
  8514                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  8515  001E0E  5081               	movf	3969,w,c	;volatile
  8516  001E10  0B0E               	andlw	14
  8517  001E12  0100               	movlb	0	; () banked
  8518  001E14  6FC8               	movwf	key_polling@t8& (0+255),b
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;key.c: 18: if(!( t8 & (1<<3))){
  8522  001E16  0100               	movlb	0	; () banked
  8523  001E18  B7C8               	btfsc	key_polling@t8& (0+255),3,b
  8524  001E1A  D002               	goto	l7173
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;key.c: 19: ktemp |= (0x01<<0x0);
  8528  001E1C  0100               	movlb	0	; () banked
  8529  001E1E  81C7               	bsf	key_polling@ktemp& (0+255),0,b
  8530  001E20                     l7173:
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;key.c: 20: }
  8534                           ;key.c: 21: if(!( t8 & (1<<2))){
  8535  001E20  0100               	movlb	0	; () banked
  8536  001E22  B5C8               	btfsc	key_polling@t8& (0+255),2,b
  8537  001E24  D002               	goto	l7177
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;key.c: 22: ktemp |= (0x01<<0x01);
  8541  001E26  0100               	movlb	0	; () banked
  8542  001E28  83C7               	bsf	key_polling@ktemp& (0+255),1,b
  8543  001E2A                     l7177:
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;key.c: 23: }
  8547                           ;key.c: 24: if(!( t8 & (1<<1))){
  8548  001E2A  0100               	movlb	0	; () banked
  8549  001E2C  B3C8               	btfsc	key_polling@t8& (0+255),1,b
  8550  001E2E  D002               	goto	l7181
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;key.c: 25: ktemp |= (0x01<<0x02);
  8554  001E30  0100               	movlb	0	; () banked
  8555  001E32  85C7               	bsf	key_polling@ktemp& (0+255),2,b
  8556  001E34                     l7181:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;key.c: 26: }
  8560                           ;key.c: 27: }
  8561                           ;key.c: 29: return ktemp;
  8562  001E34  0100               	movlb	0	; () banked
  8563  001E36  51C7               	movf	key_polling@ktemp& (0+255),w,b
  8564  001E38  0012               	return	
  8565  001E3A                     __end_of_key_polling:
  8566                           	opt stack 0
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           intcon	equ	0xFF2
  8574                           indf0	equ	0xFEF
  8575                           postinc0	equ	0xFEE
  8576                           fsr0h	equ	0xFEA
  8577                           fsr0l	equ	0xFE9
  8578                           wreg	equ	0xFE8
  8579                           postdec1	equ	0xFE5
  8580                           plusw1	equ	0xFE3
  8581                           fsr1h	equ	0xFE2
  8582                           fsr1l	equ	0xFE1
  8583                           indf2	equ	0xFDF
  8584                           plusw2	equ	0xFDB
  8585                           fsr2h	equ	0xFDA
  8586                           fsr2l	equ	0xFD9
  8587                           status	equ	0xFD8
  8588                           
  8589 ;; *************** function _delay_ms *****************
  8590 ;; Defined at:
  8591 ;;		line 97 in file "src/soc/clock.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  dly             2    2[BANK0 ] unsigned int 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;Total ram usage:        2 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    5
  8612 ;; This function calls:
  8613 ;;		_delay_us
  8614 ;; This function is called by:
  8615 ;;		_key_polling
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text50
  8620  0025CE                     __ptext50:
  8621                           	opt stack 0
  8622  0025CE                     _delay_ms:
  8623                           	opt stack 22
  8624                           
  8625                           ;clock.c: 99: while(dly>0){
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;incstack = 0
  8629  0025CE  D00A               	goto	l7109
  8630  0025D0                     l7105:
  8631                           
  8632                           ;clock.c: 100: delay_us(1000);
  8633  0025D0  0E03               	movlw	3
  8634  0025D2  6E21               	movwf	delay_us@dly+1,c
  8635  0025D4  0EE8               	movlw	232
  8636  0025D6  6E20               	movwf	delay_us@dly,c
  8637  0025D8  ECC8  F011         	call	_delay_us	;wreg free
  8638                           
  8639                           ;clock.c: 101: dly--;
  8640  0025DC  0100               	movlb	0	; () banked
  8641  0025DE  07C5               	decf	delay_ms@dly& (0+255),f,b
  8642  0025E0  A0D8               	btfss	status,0,c
  8643  0025E2  07C6               	decf	(delay_ms@dly+1)& (0+255),f,b
  8644  0025E4                     l7109:
  8645  0025E4  0100               	movlb	0	; () banked
  8646  0025E6  51C5               	movf	delay_ms@dly& (0+255),w,b
  8647  0025E8  0100               	movlb	0	; () banked
  8648  0025EA  11C6               	iorwf	(delay_ms@dly+1)& (0+255),w,b
  8649  0025EC  B4D8               	btfsc	status,2,c
  8650  0025EE  0012               	return	
  8651  0025F0  D7EF               	goto	l7105
  8652  0025F2                     __end_of_delay_ms:
  8653                           	opt stack 0
  8654                           tblptru	equ	0xFF8
  8655                           tblptrh	equ	0xFF7
  8656                           tblptrl	equ	0xFF6
  8657                           tablat	equ	0xFF5
  8658                           prodh	equ	0xFF4
  8659                           prodl	equ	0xFF3
  8660                           intcon	equ	0xFF2
  8661                           indf0	equ	0xFEF
  8662                           postinc0	equ	0xFEE
  8663                           fsr0h	equ	0xFEA
  8664                           fsr0l	equ	0xFE9
  8665                           wreg	equ	0xFE8
  8666                           postdec1	equ	0xFE5
  8667                           plusw1	equ	0xFE3
  8668                           fsr1h	equ	0xFE2
  8669                           fsr1l	equ	0xFE1
  8670                           indf2	equ	0xFDF
  8671                           plusw2	equ	0xFDB
  8672                           fsr2h	equ	0xFDA
  8673                           fsr2l	equ	0xFD9
  8674                           status	equ	0xFD8
  8675                           
  8676 ;; *************** function _key_process_up *****************
  8677 ;; Defined at:
  8678 ;;		line 69 in file "src/api/key_menu.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;		None
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:    6
  8699 ;; This function calls:
  8700 ;;		_key_adj_value_fixed_point
  8701 ;; This function is called by:
  8702 ;;		_key_process
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text51
  8707  0022F4                     __ptext51:
  8708                           	opt stack 0
  8709  0022F4                     _key_process_up:
  8710                           	opt stack 23
  8711                           
  8712                           ;key_menu.c: 71: switch(menu){
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;incstack = 0
  8716  0022F4  D00B               	goto	l7521
  8717  0022F6                     l7517:
  8718  0022F6  0E3D               	movlw	low _passWord
  8719  0022F8  0100               	movlb	0	; () banked
  8720  0022FA  6FD0               	movwf	key_adj_value_fixed_point@value& (0+255),b
  8721  0022FC  0E00               	movlw	high _passWord
  8722  0022FE  0100               	movlb	0	; () banked
  8723  002300  6FD1               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  8724  002302  C03F  F0D2         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  8725  002306  EC37  F005         	call	_key_adj_value_fixed_point	;wreg free
  8726                           
  8727                           ;key_menu.c: 77: }
  8728                           
  8729                           ;key_menu.c: 76: default:break;
  8730  00230A  0012               	return	
  8731  00230C                     l7521:
  8732  00230C  503C               	movf	_menu,w,c	;volatile
  8733                           
  8734                           ; Switch size 1, requested type "space"
  8735                           ; Number of cases is 4, Range of values is 0 to 16
  8736                           ; switch strategies available:
  8737                           ; Name         Instructions Cycles
  8738                           ; simple_byte           13     7 (average)
  8739                           ;	Chosen strategy is simple_byte
  8740  00230E  0A00               	xorlw	0	; case 0
  8741  002310  B4D8               	btfsc	status,2,c
  8742  002312  0012               	return	
  8743  002314  0A01               	xorlw	1	; case 1
  8744  002316  B4D8               	btfsc	status,2,c
  8745  002318  0012               	return	
  8746  00231A  0A03               	xorlw	3	; case 2
  8747  00231C  B4D8               	btfsc	status,2,c
  8748  00231E  0012               	return	
  8749  002320  0A12               	xorlw	18	; case 16
  8750  002322  A4D8               	btfss	status,2,c
  8751  002324  0012               	return	
  8752  002326  D7E7               	goto	l7517
  8753  002328                     __end_of_key_process_up:
  8754                           	opt stack 0
  8755                           tblptru	equ	0xFF8
  8756                           tblptrh	equ	0xFF7
  8757                           tblptrl	equ	0xFF6
  8758                           tablat	equ	0xFF5
  8759                           prodh	equ	0xFF4
  8760                           prodl	equ	0xFF3
  8761                           intcon	equ	0xFF2
  8762                           indf0	equ	0xFEF
  8763                           postinc0	equ	0xFEE
  8764                           fsr0h	equ	0xFEA
  8765                           fsr0l	equ	0xFE9
  8766                           wreg	equ	0xFE8
  8767                           postdec1	equ	0xFE5
  8768                           plusw1	equ	0xFE3
  8769                           fsr1h	equ	0xFE2
  8770                           fsr1l	equ	0xFE1
  8771                           indf2	equ	0xFDF
  8772                           plusw2	equ	0xFDB
  8773                           fsr2h	equ	0xFDA
  8774                           fsr2l	equ	0xFD9
  8775                           status	equ	0xFD8
  8776                           
  8777 ;; *************** function _key_adj_value_fixed_point *****************
  8778 ;; Defined at:
  8779 ;;		line 58 in file "src/api/key_menu.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  value           2   13[BANK0 ] PTR unsigned int 
  8782 ;;		 -> passWord(2), 
  8783 ;;  loc             1   15[BANK0 ] unsigned char 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  t16             2   18[BANK0 ] unsigned int 
  8786 ;;  dloc            2   16[BANK0 ] unsigned int 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        7 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    5
  8803 ;; This function calls:
  8804 ;;		___exp_10
  8805 ;;		___lwdiv
  8806 ;;		___lwmod
  8807 ;;		___wmul
  8808 ;; This function is called by:
  8809 ;;		_key_process_up
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text52
  8814  000A6E                     __ptext52:
  8815                           	opt stack 0
  8816  000A6E                     _key_adj_value_fixed_point:
  8817                           	opt stack 23
  8818                           
  8819                           ;key_menu.c: 60: uint16_t dloc;
  8820                           ;key_menu.c: 61: uint16_t t16=*value;
  8821                           
  8822                           ;incstack = 0
  8823  000A6E  C0D0  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  8824  000A72  C0D1  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  8825  000A76  CFDE F0D5          	movff	postinc2,key_adj_value_fixed_point@t16
  8826  000A7A  CFDD F0D6          	movff	postdec2,key_adj_value_fixed_point@t16+1
  8827                           
  8828                           ;key_menu.c: 62: dloc=(t16/__exp_10(loc))%10;
  8829  000A7E  0100               	movlb	0	; () banked
  8830  000A80  51D2               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  8831  000A82  ECA4  F00F         	call	___exp_10
  8832  000A86  C020  F0C6         	movff	?___exp_10,___lwdiv@divisor
  8833  000A8A  C021  F0C7         	movff	?___exp_10+1,___lwdiv@divisor+1
  8834  000A8E  C0D5  F0C4         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  8835  000A92  C0D6  F0C5         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  8836  000A96  EC87  F00C         	call	___lwdiv	;wreg free
  8837  000A9A  C0C4  F0CB         	movff	?___lwdiv,___lwmod@dividend
  8838  000A9E  C0C5  F0CC         	movff	?___lwdiv+1,___lwmod@dividend+1
  8839  000AA2  0E00               	movlw	0
  8840  000AA4  0100               	movlb	0	; () banked
  8841  000AA6  6FCE               	movwf	(___lwmod@divisor+1)& (0+255),b
  8842  000AA8  0E0A               	movlw	10
  8843  000AAA  6FCD               	movwf	___lwmod@divisor& (0+255),b
  8844  000AAC  EC03  F00E         	call	___lwmod	;wreg free
  8845  000AB0  C0CB  F0D3         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  8846  000AB4  C0CC  F0D4         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  8847                           
  8848                           ;key_menu.c: 63: t16=t16-dloc*__exp_10(loc);
  8849  000AB8  0100               	movlb	0	; () banked
  8850  000ABA  51D2               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  8851  000ABC  ECA4  F00F         	call	___exp_10
  8852  000AC0  C020  F0C4         	movff	?___exp_10,___wmul@multiplier
  8853  000AC4  C021  F0C5         	movff	?___exp_10+1,___wmul@multiplier+1
  8854  000AC8  C0D3  F0C6         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  8855  000ACC  C0D4  F0C7         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  8856  000AD0  EC5F  F011         	call	___wmul	;wreg free
  8857  000AD4  0100               	movlb	0	; () banked
  8858  000AD6  1FC4               	comf	?___wmul& (0+255),f,b
  8859  000AD8  0100               	movlb	0	; () banked
  8860  000ADA  1FC5               	comf	(?___wmul+1)& (0+255),f,b
  8861  000ADC  0100               	movlb	0	; () banked
  8862  000ADE  4BC4               	infsnz	?___wmul& (0+255),f,b
  8863  000AE0  2BC5               	incf	(?___wmul+1)& (0+255),f,b
  8864  000AE2  0100               	movlb	0	; () banked
  8865  000AE4  51D5               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  8866  000AE6  0100               	movlb	0	; () banked
  8867  000AE8  25C4               	addwf	?___wmul& (0+255),w,b
  8868  000AEA  0100               	movlb	0	; () banked
  8869  000AEC  6FD5               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  8870  000AEE  0100               	movlb	0	; () banked
  8871  000AF0  51D6               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  8872  000AF2  0100               	movlb	0	; () banked
  8873  000AF4  21C5               	addwfc	(?___wmul+1)& (0+255),w,b
  8874  000AF6  0100               	movlb	0	; () banked
  8875  000AF8  6FD6               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;key_menu.c: 64: dloc++;
  8879  000AFA  0100               	movlb	0	; () banked
  8880  000AFC  4BD3               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  8881  000AFE  2BD4               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;key_menu.c: 65: if(dloc>9)dloc=0;
  8885  000B00  0100               	movlb	0	; () banked
  8886  000B02  51D4               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  8887  000B04  E105               	bnz	u5160
  8888  000B06  0E0A               	movlw	10
  8889  000B08  0100               	movlb	0	; () banked
  8890  000B0A  5DD3               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  8891  000B0C  A0D8               	btfss	status,0,c
  8892  000B0E  D005               	goto	l7211
  8893  000B10                     u5160:
  8894                           
  8895                           ; BSR set to: 0
  8896  000B10  0E00               	movlw	0
  8897  000B12  0100               	movlb	0	; () banked
  8898  000B14  6FD4               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  8899  000B16  0E00               	movlw	0
  8900  000B18  6FD3               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  8901  000B1A                     l7211:
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;key_menu.c: 66: t16+=(dloc*__exp_10(loc));
  8905  000B1A  0100               	movlb	0	; () banked
  8906  000B1C  51D2               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  8907  000B1E  ECA4  F00F         	call	___exp_10
  8908  000B22  C020  F0C4         	movff	?___exp_10,___wmul@multiplier
  8909  000B26  C021  F0C5         	movff	?___exp_10+1,___wmul@multiplier+1
  8910  000B2A  C0D3  F0C6         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  8911  000B2E  C0D4  F0C7         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  8912  000B32  EC5F  F011         	call	___wmul	;wreg free
  8913  000B36  0100               	movlb	0	; () banked
  8914  000B38  51C4               	movf	?___wmul& (0+255),w,b
  8915  000B3A  0100               	movlb	0	; () banked
  8916  000B3C  27D5               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  8917  000B3E  0100               	movlb	0	; () banked
  8918  000B40  51C5               	movf	(?___wmul+1)& (0+255),w,b
  8919  000B42  0100               	movlb	0	; () banked
  8920  000B44  23D6               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;key_menu.c: 67: *value=t16;
  8924  000B46  C0D0  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  8925  000B4A  C0D1  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  8926  000B4E  C0D5  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  8927  000B52  C0D6  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  8928                           
  8929                           ; BSR set to: 0
  8930  000B56  0012               	return		;funcret
  8931  000B58                     __end_of_key_adj_value_fixed_point:
  8932                           	opt stack 0
  8933                           tblptru	equ	0xFF8
  8934                           tblptrh	equ	0xFF7
  8935                           tblptrl	equ	0xFF6
  8936                           tablat	equ	0xFF5
  8937                           prodh	equ	0xFF4
  8938                           prodl	equ	0xFF3
  8939                           intcon	equ	0xFF2
  8940                           indf0	equ	0xFEF
  8941                           postinc0	equ	0xFEE
  8942                           fsr0h	equ	0xFEA
  8943                           fsr0l	equ	0xFE9
  8944                           wreg	equ	0xFE8
  8945                           postdec1	equ	0xFE5
  8946                           plusw1	equ	0xFE3
  8947                           fsr1h	equ	0xFE2
  8948                           fsr1l	equ	0xFE1
  8949                           indf2	equ	0xFDF
  8950                           postinc2	equ	0xFDE
  8951                           postdec2	equ	0xFDD
  8952                           plusw2	equ	0xFDB
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           
  8957 ;; *************** function ___wmul *****************
  8958 ;; Defined at:
  8959 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  multiplier      2    1[BANK0 ] unsigned int 
  8962 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  product         2    5[BANK0 ] unsigned int 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  2    1[BANK0 ] unsigned int 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, prodl, prodh
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;Total ram usage:        6 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    4
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_key_adj_value_fixed_point
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text53
  8989  0022BE                     __ptext53:
  8990                           	opt stack 0
  8991  0022BE                     ___wmul:
  8992                           	opt stack 23
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;incstack = 0
  8996  0022BE  0100               	movlb	0	; () banked
  8997  0022C0  51C4               	movf	___wmul@multiplier& (0+255),w,b
  8998  0022C2  0100               	movlb	0	; () banked
  8999  0022C4  03C6               	mulwf	___wmul@multiplicand& (0+255),b
  9000  0022C6  CFF3 F0C8          	movff	prodl,___wmul@product
  9001  0022CA  CFF4 F0C9          	movff	prodh,___wmul@product+1
  9002  0022CE  0100               	movlb	0	; () banked
  9003  0022D0  51C4               	movf	___wmul@multiplier& (0+255),w,b
  9004  0022D2  0100               	movlb	0	; () banked
  9005  0022D4  03C7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9006  0022D6  50F3               	movf	prodl,w,c
  9007  0022D8  0100               	movlb	0	; () banked
  9008  0022DA  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  9009  0022DC  0100               	movlb	0	; () banked
  9010  0022DE  51C5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9011  0022E0  0100               	movlb	0	; () banked
  9012  0022E2  03C6               	mulwf	___wmul@multiplicand& (0+255),b
  9013  0022E4  50F3               	movf	prodl,w,c
  9014  0022E6  0100               	movlb	0	; () banked
  9015  0022E8  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  9016                           
  9017                           ; BSR set to: 0
  9018  0022EA  C0C8  F0C4         	movff	___wmul@product,?___wmul
  9019  0022EE  C0C9  F0C5         	movff	___wmul@product+1,?___wmul+1
  9020  0022F2  0012               	return	
  9021  0022F4                     __end_of___wmul:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           prodh	equ	0xFF4
  9028                           prodl	equ	0xFF3
  9029                           intcon	equ	0xFF2
  9030                           indf0	equ	0xFEF
  9031                           postinc0	equ	0xFEE
  9032                           fsr0h	equ	0xFEA
  9033                           fsr0l	equ	0xFE9
  9034                           wreg	equ	0xFE8
  9035                           postdec1	equ	0xFE5
  9036                           plusw1	equ	0xFE3
  9037                           fsr1h	equ	0xFE2
  9038                           fsr1l	equ	0xFE1
  9039                           indf2	equ	0xFDF
  9040                           postinc2	equ	0xFDE
  9041                           postdec2	equ	0xFDD
  9042                           plusw2	equ	0xFDB
  9043                           fsr2h	equ	0xFDA
  9044                           fsr2l	equ	0xFD9
  9045                           status	equ	0xFD8
  9046                           
  9047 ;; *************** function ___lwmod *****************
  9048 ;; Defined at:
  9049 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwmod.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  dividend        2    8[BANK0 ] unsigned int 
  9052 ;;  divisor         2   10[BANK0 ] unsigned int 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  counter         1   12[BANK0 ] unsigned char 
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  2    8[BANK0 ] unsigned int 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2, status,0
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;Total ram usage:        5 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    4
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_key_adj_value_fixed_point
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text54
  9079  001C06                     __ptext54:
  9080                           	opt stack 0
  9081  001C06                     ___lwmod:
  9082                           	opt stack 23
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;incstack = 0
  9086  001C06  0100               	movlb	0	; () banked
  9087  001C08  51CD               	movf	___lwmod@divisor& (0+255),w,b
  9088  001C0A  0100               	movlb	0	; () banked
  9089  001C0C  11CE               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9090  001C0E  B4D8               	btfsc	status,2,c
  9091  001C10  D026               	goto	l1822
  9092                           
  9093                           ; BSR set to: 0
  9094  001C12  0E01               	movlw	1
  9095  001C14  0100               	movlb	0	; () banked
  9096  001C16  6FCF               	movwf	___lwmod@counter& (0+255),b
  9097  001C18  D006               	goto	l7145
  9098  001C1A                     l7143:
  9099                           
  9100                           ; BSR set to: 0
  9101  001C1A  0100               	movlb	0	; () banked
  9102  001C1C  90D8               	bcf	status,0,c
  9103  001C1E  37CD               	rlcf	___lwmod@divisor& (0+255),f,b
  9104  001C20  37CE               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9105  001C22  0100               	movlb	0	; () banked
  9106  001C24  2BCF               	incf	___lwmod@counter& (0+255),f,b
  9107  001C26                     l7145:
  9108                           
  9109                           ; BSR set to: 0
  9110  001C26  0100               	movlb	0	; () banked
  9111  001C28  AFCE               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9112  001C2A  D7F7               	goto	l7143
  9113  001C2C                     l7147:
  9114                           
  9115                           ; BSR set to: 0
  9116  001C2C  0100               	movlb	0	; () banked
  9117  001C2E  51CD               	movf	___lwmod@divisor& (0+255),w,b
  9118  001C30  0100               	movlb	0	; () banked
  9119  001C32  5DCB               	subwf	___lwmod@dividend& (0+255),w,b
  9120  001C34  0100               	movlb	0	; () banked
  9121  001C36  51CE               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9122  001C38  0100               	movlb	0	; () banked
  9123  001C3A  59CC               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9124  001C3C  A0D8               	btfss	status,0,c
  9125  001C3E  D008               	goto	l7151
  9126                           
  9127                           ; BSR set to: 0
  9128  001C40  0100               	movlb	0	; () banked
  9129  001C42  51CD               	movf	___lwmod@divisor& (0+255),w,b
  9130  001C44  0100               	movlb	0	; () banked
  9131  001C46  5FCB               	subwf	___lwmod@dividend& (0+255),f,b
  9132  001C48  0100               	movlb	0	; () banked
  9133  001C4A  51CE               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9134  001C4C  0100               	movlb	0	; () banked
  9135  001C4E  5BCC               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9136  001C50                     l7151:
  9137                           
  9138                           ; BSR set to: 0
  9139  001C50  0100               	movlb	0	; () banked
  9140  001C52  90D8               	bcf	status,0,c
  9141  001C54  33CE               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9142  001C56  33CD               	rrcf	___lwmod@divisor& (0+255),f,b
  9143                           
  9144                           ; BSR set to: 0
  9145  001C58  0100               	movlb	0	; () banked
  9146  001C5A  2FCF               	decfsz	___lwmod@counter& (0+255),f,b
  9147  001C5C  D7E7               	goto	l7147
  9148  001C5E                     l1822:
  9149                           
  9150                           ; BSR set to: 0
  9151  001C5E  C0CB  F0CB         	movff	___lwmod@dividend,?___lwmod
  9152  001C62  C0CC  F0CC         	movff	___lwmod@dividend+1,?___lwmod+1
  9153                           
  9154                           ; BSR set to: 0
  9155  001C66  0012               	return		;funcret
  9156  001C68                     __end_of___lwmod:
  9157                           	opt stack 0
  9158                           tblptru	equ	0xFF8
  9159                           tblptrh	equ	0xFF7
  9160                           tblptrl	equ	0xFF6
  9161                           tablat	equ	0xFF5
  9162                           prodh	equ	0xFF4
  9163                           prodl	equ	0xFF3
  9164                           intcon	equ	0xFF2
  9165                           indf0	equ	0xFEF
  9166                           postinc0	equ	0xFEE
  9167                           fsr0h	equ	0xFEA
  9168                           fsr0l	equ	0xFE9
  9169                           wreg	equ	0xFE8
  9170                           postdec1	equ	0xFE5
  9171                           plusw1	equ	0xFE3
  9172                           fsr1h	equ	0xFE2
  9173                           fsr1l	equ	0xFE1
  9174                           indf2	equ	0xFDF
  9175                           postinc2	equ	0xFDE
  9176                           postdec2	equ	0xFDD
  9177                           plusw2	equ	0xFDB
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function ___lwdiv *****************
  9183 ;; Defined at:
  9184 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  dividend        2    1[BANK0 ] unsigned int 
  9187 ;;  divisor         2    3[BANK0 ] unsigned int 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  quotient        2    6[BANK0 ] unsigned int 
  9190 ;;  counter         1    5[BANK0 ] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  2    1[BANK0 ] unsigned int 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9200 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;Total ram usage:        7 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    4
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_key_adj_value_fixed_point
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text55
  9215  00190E                     __ptext55:
  9216                           	opt stack 0
  9217  00190E                     ___lwdiv:
  9218                           	opt stack 23
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;incstack = 0
  9222  00190E  0E00               	movlw	0
  9223  001910  0100               	movlb	0	; () banked
  9224  001912  6FCA               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9225  001914  0E00               	movlw	0
  9226  001916  6FC9               	movwf	___lwdiv@quotient& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229  001918  0100               	movlb	0	; () banked
  9230  00191A  51C6               	movf	___lwdiv@divisor& (0+255),w,b
  9231  00191C  0100               	movlb	0	; () banked
  9232  00191E  11C7               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9233  001920  B4D8               	btfsc	status,2,c
  9234  001922  D02C               	goto	l1812
  9235                           
  9236                           ; BSR set to: 0
  9237  001924  0E01               	movlw	1
  9238  001926  0100               	movlb	0	; () banked
  9239  001928  6FC8               	movwf	___lwdiv@counter& (0+255),b
  9240  00192A  D006               	goto	l7125
  9241  00192C                     l7123:
  9242                           
  9243                           ; BSR set to: 0
  9244  00192C  0100               	movlb	0	; () banked
  9245  00192E  90D8               	bcf	status,0,c
  9246  001930  37C6               	rlcf	___lwdiv@divisor& (0+255),f,b
  9247  001932  37C7               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9248  001934  0100               	movlb	0	; () banked
  9249  001936  2BC8               	incf	___lwdiv@counter& (0+255),f,b
  9250  001938                     l7125:
  9251                           
  9252                           ; BSR set to: 0
  9253  001938  0100               	movlb	0	; () banked
  9254  00193A  AFC7               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9255  00193C  D7F7               	goto	l7123
  9256  00193E                     l7127:
  9257                           
  9258                           ; BSR set to: 0
  9259  00193E  0100               	movlb	0	; () banked
  9260  001940  90D8               	bcf	status,0,c
  9261  001942  37C9               	rlcf	___lwdiv@quotient& (0+255),f,b
  9262  001944  37CA               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9263                           
  9264                           ; BSR set to: 0
  9265  001946  0100               	movlb	0	; () banked
  9266  001948  51C6               	movf	___lwdiv@divisor& (0+255),w,b
  9267  00194A  0100               	movlb	0	; () banked
  9268  00194C  5DC4               	subwf	___lwdiv@dividend& (0+255),w,b
  9269  00194E  0100               	movlb	0	; () banked
  9270  001950  51C7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9271  001952  0100               	movlb	0	; () banked
  9272  001954  59C5               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9273  001956  A0D8               	btfss	status,0,c
  9274  001958  D00A               	goto	l7135
  9275                           
  9276                           ; BSR set to: 0
  9277  00195A  0100               	movlb	0	; () banked
  9278  00195C  51C6               	movf	___lwdiv@divisor& (0+255),w,b
  9279  00195E  0100               	movlb	0	; () banked
  9280  001960  5FC4               	subwf	___lwdiv@dividend& (0+255),f,b
  9281  001962  0100               	movlb	0	; () banked
  9282  001964  51C7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9283  001966  0100               	movlb	0	; () banked
  9284  001968  5BC5               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9285                           
  9286                           ; BSR set to: 0
  9287  00196A  0100               	movlb	0	; () banked
  9288  00196C  81C9               	bsf	___lwdiv@quotient& (0+255),0,b
  9289  00196E                     l7135:
  9290                           
  9291                           ; BSR set to: 0
  9292  00196E  0100               	movlb	0	; () banked
  9293  001970  90D8               	bcf	status,0,c
  9294  001972  33C7               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9295  001974  33C6               	rrcf	___lwdiv@divisor& (0+255),f,b
  9296                           
  9297                           ; BSR set to: 0
  9298  001976  0100               	movlb	0	; () banked
  9299  001978  2FC8               	decfsz	___lwdiv@counter& (0+255),f,b
  9300  00197A  D7E1               	goto	l7127
  9301  00197C                     l1812:
  9302                           
  9303                           ; BSR set to: 0
  9304  00197C  C0C9  F0C4         	movff	___lwdiv@quotient,?___lwdiv
  9305  001980  C0CA  F0C5         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9306                           
  9307                           ; BSR set to: 0
  9308  001984  0012               	return		;funcret
  9309  001986                     __end_of___lwdiv:
  9310                           	opt stack 0
  9311                           tblptru	equ	0xFF8
  9312                           tblptrh	equ	0xFF7
  9313                           tblptrl	equ	0xFF6
  9314                           tablat	equ	0xFF5
  9315                           prodh	equ	0xFF4
  9316                           prodl	equ	0xFF3
  9317                           intcon	equ	0xFF2
  9318                           indf0	equ	0xFEF
  9319                           postinc0	equ	0xFEE
  9320                           fsr0h	equ	0xFEA
  9321                           fsr0l	equ	0xFE9
  9322                           wreg	equ	0xFE8
  9323                           postdec1	equ	0xFE5
  9324                           plusw1	equ	0xFE3
  9325                           fsr1h	equ	0xFE2
  9326                           fsr1l	equ	0xFE1
  9327                           indf2	equ	0xFDF
  9328                           postinc2	equ	0xFDE
  9329                           postdec2	equ	0xFDD
  9330                           plusw2	equ	0xFDB
  9331                           fsr2h	equ	0xFDA
  9332                           fsr2l	equ	0xFD9
  9333                           status	equ	0xFD8
  9334                           
  9335 ;; *************** function ___exp_10 *****************
  9336 ;; Defined at:
  9337 ;;		line 15 in file "src/api/key_menu.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  n               1    wreg     unsigned char 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  n               1    0[BANK0 ] unsigned char 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  2   31[COMRAM] unsigned int 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;Total ram usage:        3 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    4
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_key_adj_value_fixed_point
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text56
  9366  001F48                     __ptext56:
  9367                           	opt stack 0
  9368  001F48                     ___exp_10:
  9369                           	opt stack 23
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;incstack = 0
  9373                           ;___exp_10@n stored from wreg
  9374  001F48  0100               	movlb	0	; () banked
  9375  001F4A  6FC3               	movwf	___exp_10@n& (0+255),b
  9376                           
  9377                           ;key_menu.c: 17: switch(n){
  9378  001F4C  D019               	goto	l6841
  9379  001F4E                     l6819:
  9380  001F4E  0E00               	movlw	0
  9381  001F50  6E21               	movwf	?___exp_10+1,c
  9382  001F52  0E01               	movlw	1
  9383  001F54  6E20               	movwf	?___exp_10,c
  9384  001F56  0012               	return	
  9385  001F58                     l6823:
  9386  001F58  0E00               	movlw	0
  9387  001F5A  6E21               	movwf	?___exp_10+1,c
  9388  001F5C  0E0A               	movlw	10
  9389  001F5E  6E20               	movwf	?___exp_10,c
  9390  001F60  0012               	return	
  9391  001F62                     l6827:
  9392  001F62  0E00               	movlw	0
  9393  001F64  6E21               	movwf	?___exp_10+1,c
  9394  001F66  0E64               	movlw	100
  9395  001F68  6E20               	movwf	?___exp_10,c
  9396  001F6A  0012               	return	
  9397  001F6C                     l6831:
  9398  001F6C  0E03               	movlw	3
  9399  001F6E  6E21               	movwf	?___exp_10+1,c
  9400  001F70  0EE8               	movlw	232
  9401  001F72  6E20               	movwf	?___exp_10,c
  9402  001F74  0012               	return	
  9403  001F76                     l6835:
  9404  001F76  0E27               	movlw	39
  9405  001F78  6E21               	movwf	?___exp_10+1,c
  9406  001F7A  0E10               	movlw	16
  9407  001F7C  6E20               	movwf	?___exp_10,c
  9408                           
  9409                           ;key_menu.c: 23: }
  9410  001F7E  0012               	return	
  9411  001F80                     l6841:
  9412  001F80  0100               	movlb	0	; () banked
  9413  001F82  51C3               	movf	___exp_10@n& (0+255),w,b
  9414                           
  9415                           ; Switch size 1, requested type "space"
  9416                           ; Number of cases is 4, Range of values is 0 to 4
  9417                           ; switch strategies available:
  9418                           ; Name         Instructions Cycles
  9419                           ; simple_byte           13     7 (average)
  9420                           ;	Chosen strategy is simple_byte
  9421  001F84  0A00               	xorlw	0	; case 0
  9422  001F86  B4D8               	btfsc	status,2,c
  9423  001F88  D7E2               	goto	l6819
  9424  001F8A  0A02               	xorlw	2	; case 2
  9425  001F8C  B4D8               	btfsc	status,2,c
  9426  001F8E  D7E4               	goto	l6823
  9427  001F90  0A01               	xorlw	1	; case 3
  9428  001F92  B4D8               	btfsc	status,2,c
  9429  001F94  D7E6               	goto	l6827
  9430  001F96  0A07               	xorlw	7	; case 4
  9431  001F98  B4D8               	btfsc	status,2,c
  9432  001F9A  D7E8               	goto	l6831
  9433  001F9C  D7EC               	goto	l6835
  9434  001F9E                     __end_of___exp_10:
  9435                           	opt stack 0
  9436                           tblptru	equ	0xFF8
  9437                           tblptrh	equ	0xFF7
  9438                           tblptrl	equ	0xFF6
  9439                           tablat	equ	0xFF5
  9440                           prodh	equ	0xFF4
  9441                           prodl	equ	0xFF3
  9442                           intcon	equ	0xFF2
  9443                           indf0	equ	0xFEF
  9444                           postinc0	equ	0xFEE
  9445                           fsr0h	equ	0xFEA
  9446                           fsr0l	equ	0xFE9
  9447                           wreg	equ	0xFE8
  9448                           postdec1	equ	0xFE5
  9449                           plusw1	equ	0xFE3
  9450                           fsr1h	equ	0xFE2
  9451                           fsr1l	equ	0xFE1
  9452                           indf2	equ	0xFDF
  9453                           postinc2	equ	0xFDE
  9454                           postdec2	equ	0xFDD
  9455                           plusw2	equ	0xFDB
  9456                           fsr2h	equ	0xFDA
  9457                           fsr2l	equ	0xFD9
  9458                           status	equ	0xFD8
  9459                           
  9460 ;; *************** function _key_process_set_long *****************
  9461 ;; Defined at:
  9462 ;;		line 139 in file "src/api/key_menu.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		None
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    4
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_key_process
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text57
  9491  0026DE                     __ptext57:
  9492                           	opt stack 0
  9493  0026DE                     _key_process_set_long:
  9494                           	opt stack 25
  9495                           
  9496                           ;incstack = 0
  9497  0026DE  0012               	return		;funcret
  9498  0026E0                     __end_of_key_process_set_long:
  9499                           	opt stack 0
  9500                           tblptru	equ	0xFF8
  9501                           tblptrh	equ	0xFF7
  9502                           tblptrl	equ	0xFF6
  9503                           tablat	equ	0xFF5
  9504                           prodh	equ	0xFF4
  9505                           prodl	equ	0xFF3
  9506                           intcon	equ	0xFF2
  9507                           indf0	equ	0xFEF
  9508                           postinc0	equ	0xFEE
  9509                           fsr0h	equ	0xFEA
  9510                           fsr0l	equ	0xFE9
  9511                           wreg	equ	0xFE8
  9512                           postdec1	equ	0xFE5
  9513                           plusw1	equ	0xFE3
  9514                           fsr1h	equ	0xFE2
  9515                           fsr1l	equ	0xFE1
  9516                           indf2	equ	0xFDF
  9517                           postinc2	equ	0xFDE
  9518                           postdec2	equ	0xFDD
  9519                           plusw2	equ	0xFDB
  9520                           fsr2h	equ	0xFDA
  9521                           fsr2l	equ	0xFD9
  9522                           status	equ	0xFD8
  9523                           
  9524 ;; *************** function _key_process_set_down_long *****************
  9525 ;; Defined at:
  9526 ;;		line 106 in file "src/api/key_menu.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;Total ram usage:        2 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    7
  9547 ;; This function calls:
  9548 ;;		___enter_menu_set_base_zero
  9549 ;;		___enter_menu_set_density
  9550 ;;		___enter_menu_set_pose
  9551 ;; This function is called by:
  9552 ;;		_key_process
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text58
  9557  000E66                     __ptext58:
  9558                           	opt stack 0
  9559  000E66                     _key_process_set_down_long:
  9560                           	opt stack 22
  9561                           
  9562                           ;key_menu.c: 108: if(menu==0x10){
  9563                           
  9564                           ;incstack = 0
  9565  000E66  0E10               	movlw	16
  9566  000E68  183C               	xorwf	_menu,w,c	;volatile
  9567  000E6A  A4D8               	btfss	status,2,c
  9568  000E6C  0012               	return	
  9569  000E6E  D02A               	goto	l7559
  9570  000E70                     l7527:
  9571                           
  9572                           ;key_menu.c: 111: menu=0x20; __enter_menu_set_density(); break;
  9573  000E70  0E20               	movlw	32
  9574  000E72  6E3C               	movwf	_menu,c	;volatile
  9575  000E74  EC94  F011         	call	___enter_menu_set_density	;wreg free
  9576  000E78  0012               	return	
  9577  000E7A                     l7531:
  9578                           
  9579                           ;key_menu.c: 113: menu=0x30; __enter_menu_set_pose(); break;
  9580  000E7A  0E30               	movlw	48
  9581  000E7C  6E3C               	movwf	_menu,c	;volatile
  9582  000E7E  EC55  F012         	call	___enter_menu_set_pose	;wreg free
  9583  000E82  0012               	return	
  9584  000E84                     l7535:
  9585                           
  9586                           ;key_menu.c: 115: menu=0x40;__enter_menu_set_base_zero(); break;
  9587  000E84  0E40               	movlw	64
  9588  000E86  6E3C               	movwf	_menu,c	;volatile
  9589  000E88  ECCF  F00F         	call	___enter_menu_set_base_zero	;wreg free
  9590  000E8C  0012               	return	
  9591  000E8E                     l7539:
  9592                           
  9593                           ;key_menu.c: 117: menu=0x50; break;
  9594  000E8E  0E50               	movlw	80
  9595  000E90  6E3C               	movwf	_menu,c	;volatile
  9596  000E92  0012               	return	
  9597  000E94                     l7541:
  9598                           
  9599                           ;key_menu.c: 119: menu=0x60; break;
  9600  000E94  0E60               	movlw	96
  9601  000E96  6E3C               	movwf	_menu,c	;volatile
  9602  000E98  0012               	return	
  9603  000E9A                     l7543:
  9604                           
  9605                           ;key_menu.c: 121: menu=0x70; break;
  9606  000E9A  0E70               	movlw	112
  9607  000E9C  6E3C               	movwf	_menu,c	;volatile
  9608  000E9E  0012               	return	
  9609  000EA0                     l7545:
  9610                           
  9611                           ;key_menu.c: 123: menu=0x80; break;
  9612  000EA0  0E80               	movlw	128
  9613  000EA2  6E3C               	movwf	_menu,c	;volatile
  9614  000EA4  0012               	return	
  9615  000EA6                     l7547:
  9616                           
  9617                           ;key_menu.c: 125: menu=0x90; break;
  9618  000EA6  0E90               	movlw	144
  9619  000EA8  6E3C               	movwf	_menu,c	;volatile
  9620  000EAA  0012               	return	
  9621  000EAC                     l7549:
  9622                           
  9623                           ;key_menu.c: 127: menu=0xa0; break;
  9624  000EAC  0EA0               	movlw	160
  9625  000EAE  6E3C               	movwf	_menu,c	;volatile
  9626  000EB0  0012               	return	
  9627  000EB2                     l7551:
  9628                           
  9629                           ;key_menu.c: 129: menu=0xb0; break;
  9630  000EB2  0EB0               	movlw	176
  9631  000EB4  6E3C               	movwf	_menu,c	;volatile
  9632  000EB6  0012               	return	
  9633  000EB8                     l7553:
  9634                           
  9635                           ;key_menu.c: 131: menu=0xc0; break;
  9636  000EB8  0EC0               	movlw	192
  9637  000EBA  6E3C               	movwf	_menu,c	;volatile
  9638  000EBC  0012               	return	
  9639  000EBE                     l7555:
  9640                           
  9641                           ;key_menu.c: 133: menu=0xf0; break;
  9642  000EBE  0EF0               	movlw	240
  9643  000EC0  6E3C               	movwf	_menu,c	;volatile
  9644                           
  9645                           ;key_menu.c: 135: }
  9646                           
  9647                           ;key_menu.c: 134: default:break;
  9648  000EC2  0012               	return	
  9649  000EC4                     l7559:
  9650  000EC4  C03D  F0E0         	movff	_passWord,??_key_process_set_down_long	;volatile
  9651  000EC8  C03E  F0E1         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  9652                           
  9653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9654                           ; Switch size 1, requested type "space"
  9655                           ; Number of cases is 1, Range of values is 0 to 0
  9656                           ; switch strategies available:
  9657                           ; Name         Instructions Cycles
  9658                           ; simple_byte            4     3 (average)
  9659                           ;	Chosen strategy is simple_byte
  9660  000ECC  0100               	movlb	0	; () banked
  9661  000ECE  51E1               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  9662  000ED0  0A00               	xorlw	0	; case 0
  9663  000ED2  A4D8               	btfss	status,2,c
  9664  000ED4  0012               	return	
  9665                           
  9666                           ; BSR set to: 0
  9667                           ; Switch size 1, requested type "space"
  9668                           ; Number of cases is 12, Range of values is 6 to 188
  9669                           ; switch strategies available:
  9670                           ; Name         Instructions Cycles
  9671                           ; simple_byte           37    19 (average)
  9672                           ;	Chosen strategy is simple_byte
  9673  000ED6  0100               	movlb	0	; () banked
  9674  000ED8  51E0               	movf	??_key_process_set_down_long& (0+255),w,b
  9675  000EDA  0A06               	xorlw	6	; case 6
  9676  000EDC  B4D8               	btfsc	status,2,c
  9677  000EDE  D7E0               	goto	l7545
  9678  000EE0  0A16               	xorlw	22	; case 16
  9679  000EE2  B4D8               	btfsc	status,2,c
  9680  000EE4  D7E0               	goto	l7547
  9681  000EE6  0A02               	xorlw	2	; case 18
  9682  000EE8  B4D8               	btfsc	status,2,c
  9683  000EEA  D7E9               	goto	l7555
  9684  000EEC  0A36               	xorlw	54	; case 36
  9685  000EEE  B4D8               	btfsc	status,2,c
  9686  000EF0  D7BF               	goto	l7527
  9687  000EF2  0A1C               	xorlw	28	; case 56
  9688  000EF4  B4D8               	btfsc	status,2,c
  9689  000EF6  D7C6               	goto	l7535
  9690  000EF8  0A7A               	xorlw	122	; case 66
  9691  000EFA  B4D8               	btfsc	status,2,c
  9692  000EFC  D7BE               	goto	l7531
  9693  000EFE  0AC7               	xorlw	199	; case 133
  9694  000F00  B4D8               	btfsc	status,2,c
  9695  000F02  D7CB               	goto	l7543
  9696  000F04  0A0F               	xorlw	15	; case 138
  9697  000F06  B4D8               	btfsc	status,2,c
  9698  000F08  D7D1               	goto	l7549
  9699  000F0A  0A01               	xorlw	1	; case 139
  9700  000F0C  B4D8               	btfsc	status,2,c
  9701  000F0E  D7D1               	goto	l7551
  9702  000F10  0A23               	xorlw	35	; case 168
  9703  000F12  B4D8               	btfsc	status,2,c
  9704  000F14  D7BC               	goto	l7539
  9705  000F16  0A01               	xorlw	1	; case 169
  9706  000F18  B4D8               	btfsc	status,2,c
  9707  000F1A  D7BC               	goto	l7541
  9708  000F1C  0A15               	xorlw	21	; case 188
  9709  000F1E  A4D8               	btfss	status,2,c
  9710                           
  9711                           ; BSR set to: 0
  9712  000F20  0012               	return	
  9713  000F22  D7CA               	goto	l7553
  9714  000F24                     __end_of_key_process_set_down_long:
  9715                           	opt stack 0
  9716                           tblptru	equ	0xFF8
  9717                           tblptrh	equ	0xFF7
  9718                           tblptrl	equ	0xFF6
  9719                           tablat	equ	0xFF5
  9720                           prodh	equ	0xFF4
  9721                           prodl	equ	0xFF3
  9722                           intcon	equ	0xFF2
  9723                           indf0	equ	0xFEF
  9724                           postinc0	equ	0xFEE
  9725                           fsr0h	equ	0xFEA
  9726                           fsr0l	equ	0xFE9
  9727                           wreg	equ	0xFE8
  9728                           postdec1	equ	0xFE5
  9729                           plusw1	equ	0xFE3
  9730                           fsr1h	equ	0xFE2
  9731                           fsr1l	equ	0xFE1
  9732                           indf2	equ	0xFDF
  9733                           postinc2	equ	0xFDE
  9734                           postdec2	equ	0xFDD
  9735                           plusw2	equ	0xFDB
  9736                           fsr2h	equ	0xFDA
  9737                           fsr2l	equ	0xFD9
  9738                           status	equ	0xFD8
  9739                           
  9740 ;; *************** function ___enter_menu_set_pose *****************
  9741 ;; Defined at:
  9742 ;;		line 87 in file "src/api/key_menu.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  fps             2    0[BANK0 ] PTR struct .
  9747 ;;		 -> RAM(3923), 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9761 ;;Total ram usage:        3 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    4
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_key_process_set_down_long
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text59
  9772  0024AA                     __ptext59:
  9773                           	opt stack 0
  9774  0024AA                     ___enter_menu_set_pose:
  9775                           	opt stack 24
  9776                           
  9777                           ;key_menu.c: 88: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  9778                           
  9779                           ;incstack = 0
  9780  0024AA  0E00               	movlw	0
  9781  0024AC  0100               	movlb	0	; () banked
  9782  0024AE  6FC3               	movwf	___enter_menu_set_pose@fps& (0+255),b
  9783  0024B0  0EF4               	movlw	244
  9784  0024B2  0100               	movlb	0	; () banked
  9785  0024B4  6FC4               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;key_menu.c: 89: adjValue=(uint8_t)(fps->pos);
  9789  0024B6  0100               	movlb	0	; () banked
  9790  0024B8  EE20 F004          	lfsr	2,4
  9791  0024BC  51C3               	movf	___enter_menu_set_pose@fps& (0+255),w,b
  9792  0024BE  26D9               	addwf	fsr2l,f,c
  9793  0024C0  51C4               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
  9794  0024C2  22DA               	addwfc	fsr2h,f,c
  9795  0024C4  50DF               	movf	indf2,w,c
  9796  0024C6  6E20               	movwf	??___enter_menu_set_pose& (0+255),c
  9797  0024C8  5020               	movf	??___enter_menu_set_pose,w,c
  9798  0024CA  6E2D               	movwf	_adjValue,c	;volatile
  9799  0024CC  6A2E               	clrf	_adjValue+1,c	;volatile
  9800  0024CE  6A2F               	clrf	_adjValue+2,c	;volatile
  9801  0024D0  6A30               	clrf	_adjValue+3,c	;volatile
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;key_menu.c: 90: adjLocation=0;
  9805  0024D2  0E00               	movlw	0
  9806  0024D4  6E3F               	movwf	_adjLocation,c	;volatile
  9807                           
  9808                           ; BSR set to: 0
  9809  0024D6  0012               	return		;funcret
  9810  0024D8                     __end_of___enter_menu_set_pose:
  9811                           	opt stack 0
  9812                           tblptru	equ	0xFF8
  9813                           tblptrh	equ	0xFF7
  9814                           tblptrl	equ	0xFF6
  9815                           tablat	equ	0xFF5
  9816                           prodh	equ	0xFF4
  9817                           prodl	equ	0xFF3
  9818                           intcon	equ	0xFF2
  9819                           indf0	equ	0xFEF
  9820                           postinc0	equ	0xFEE
  9821                           fsr0h	equ	0xFEA
  9822                           fsr0l	equ	0xFE9
  9823                           wreg	equ	0xFE8
  9824                           postdec1	equ	0xFE5
  9825                           plusw1	equ	0xFE3
  9826                           fsr1h	equ	0xFE2
  9827                           fsr1l	equ	0xFE1
  9828                           indf2	equ	0xFDF
  9829                           postinc2	equ	0xFDE
  9830                           postdec2	equ	0xFDD
  9831                           plusw2	equ	0xFDB
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8
  9835                           
  9836 ;; *************** function ___enter_menu_set_density *****************
  9837 ;; Defined at:
  9838 ;;		line 81 in file "src/api/key_menu.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;		None
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  fps             2    0[BANK0 ] PTR struct .
  9843 ;;		 -> RAM(3923), 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;Total ram usage:        4 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:    4
  9860 ;; This function calls:
  9861 ;;		Nothing
  9862 ;; This function is called by:
  9863 ;;		_key_process_set_down_long
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text60
  9868  002328                     __ptext60:
  9869                           	opt stack 0
  9870  002328                     ___enter_menu_set_density:
  9871                           	opt stack 24
  9872                           
  9873                           ;key_menu.c: 82: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;incstack = 0
  9877  002328  0E00               	movlw	0
  9878  00232A  0100               	movlb	0	; () banked
  9879  00232C  6FC3               	movwf	___enter_menu_set_density@fps& (0+255),b
  9880  00232E  0EF4               	movlw	244
  9881  002330  0100               	movlb	0	; () banked
  9882  002332  6FC4               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;key_menu.c: 83: adjValue=fps->density;
  9886  002334  0100               	movlb	0	; () banked
  9887  002336  EE20 F006          	lfsr	2,6
  9888  00233A  51C3               	movf	___enter_menu_set_density@fps& (0+255),w,b
  9889  00233C  26D9               	addwf	fsr2l,f,c
  9890  00233E  51C4               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  9891  002340  22DA               	addwfc	fsr2h,f,c
  9892  002342  CFDE F020          	movff	postinc2,??___enter_menu_set_density
  9893  002346  CFDD F021          	movff	postdec2,??___enter_menu_set_density+1
  9894  00234A  C020  F02D         	movff	??___enter_menu_set_density,_adjValue	;volatile
  9895  00234E  C021  F02E         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
  9896  002352  6A2F               	clrf	_adjValue+2,c	;volatile
  9897  002354  6A30               	clrf	_adjValue+3,c	;volatile
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;key_menu.c: 84: adjLocation=0;
  9901  002356  0E00               	movlw	0
  9902  002358  6E3F               	movwf	_adjLocation,c	;volatile
  9903                           
  9904                           ; BSR set to: 0
  9905  00235A  0012               	return		;funcret
  9906  00235C                     __end_of___enter_menu_set_density:
  9907                           	opt stack 0
  9908                           tblptru	equ	0xFF8
  9909                           tblptrh	equ	0xFF7
  9910                           tblptrl	equ	0xFF6
  9911                           tablat	equ	0xFF5
  9912                           prodh	equ	0xFF4
  9913                           prodl	equ	0xFF3
  9914                           intcon	equ	0xFF2
  9915                           indf0	equ	0xFEF
  9916                           postinc0	equ	0xFEE
  9917                           fsr0h	equ	0xFEA
  9918                           fsr0l	equ	0xFE9
  9919                           wreg	equ	0xFE8
  9920                           postdec1	equ	0xFE5
  9921                           plusw1	equ	0xFE3
  9922                           fsr1h	equ	0xFE2
  9923                           fsr1l	equ	0xFE1
  9924                           indf2	equ	0xFDF
  9925                           postinc2	equ	0xFDE
  9926                           postdec2	equ	0xFDD
  9927                           plusw2	equ	0xFDB
  9928                           fsr2h	equ	0xFDA
  9929                           fsr2l	equ	0xFD9
  9930                           status	equ	0xFD8
  9931                           
  9932 ;; *************** function ___enter_menu_set_base_zero *****************
  9933 ;; Defined at:
  9934 ;;		line 92 in file "src/api/key_menu.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  fps             2   31[COMRAM] PTR struct .
  9939 ;;		 -> RAM(3923), 
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;Total ram usage:        2 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    6
  9956 ;; This function calls:
  9957 ;;		___int32_2_mflot32
  9958 ;; This function is called by:
  9959 ;;		_key_process_set_down_long
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text61
  9964  001F9E                     __ptext61:
  9965                           	opt stack 0
  9966  001F9E                     ___enter_menu_set_base_zero:
  9967                           	opt stack 22
  9968                           
  9969                           ;key_menu.c: 93: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;incstack = 0
  9973  001F9E  0E00               	movlw	0
  9974  001FA0  6E20               	movwf	___enter_menu_set_base_zero@fps,c
  9975  001FA2  0EF4               	movlw	244
  9976  001FA4  6E21               	movwf	___enter_menu_set_base_zero@fps+1,c
  9977                           
  9978                           ;key_menu.c: 94: adjValue=(fps->baseZero);
  9979  001FA6  EE20 F010          	lfsr	2,16
  9980  001FAA  5020               	movf	___enter_menu_set_base_zero@fps,w,c
  9981  001FAC  26D9               	addwf	fsr2l,f,c
  9982  001FAE  5021               	movf	___enter_menu_set_base_zero@fps+1,w,c
  9983  001FB0  22DA               	addwfc	fsr2h,f,c
  9984  001FB2  CFDE F02D          	movff	postinc2,_adjValue	;volatile
  9985  001FB6  CFDE F02E          	movff	postinc2,_adjValue+1	;volatile
  9986  001FBA  CFDE F02F          	movff	postinc2,_adjValue+2	;volatile
  9987  001FBE  CFDE F030          	movff	postinc2,_adjValue+3	;volatile
  9988                           
  9989                           ;key_menu.c: 95: adjValue=__int32_2_mflot32(adjValue);
  9990  001FC2  C02D  F0D0         	movff	_adjValue,___int32_2_mflot32@x	;volatile
  9991  001FC6  C02E  F0D1         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
  9992  001FCA  C02F  F0D2         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
  9993  001FCE  C030  F0D3         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
  9994  001FD2  EC34  F004         	call	___int32_2_mflot32	;wreg free
  9995  001FD6  C0D0  F02D         	movff	?___int32_2_mflot32,_adjValue	;volatile
  9996  001FDA  C0D1  F02E         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
  9997  001FDE  C0D2  F02F         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
  9998  001FE2  C0D3  F030         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
  9999                           
 10000                           ;key_menu.c: 96: adjLocation=0;
 10001  001FE6  0E00               	movlw	0
 10002  001FE8  6E3F               	movwf	_adjLocation,c	;volatile
 10003  001FEA  0012               	return		;funcret
 10004  001FEC                     __end_of___enter_menu_set_base_zero:
 10005                           	opt stack 0
 10006                           tblptru	equ	0xFF8
 10007                           tblptrh	equ	0xFF7
 10008                           tblptrl	equ	0xFF6
 10009                           tablat	equ	0xFF5
 10010                           prodh	equ	0xFF4
 10011                           prodl	equ	0xFF3
 10012                           intcon	equ	0xFF2
 10013                           indf0	equ	0xFEF
 10014                           postinc0	equ	0xFEE
 10015                           fsr0h	equ	0xFEA
 10016                           fsr0l	equ	0xFE9
 10017                           wreg	equ	0xFE8
 10018                           postdec1	equ	0xFE5
 10019                           plusw1	equ	0xFE3
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           indf2	equ	0xFDF
 10023                           postinc2	equ	0xFDE
 10024                           postdec2	equ	0xFDD
 10025                           plusw2	equ	0xFDB
 10026                           fsr2h	equ	0xFDA
 10027                           fsr2l	equ	0xFD9
 10028                           status	equ	0xFD8
 10029                           
 10030 ;; *************** function ___int32_2_mflot32 *****************
 10031 ;; Defined at:
 10032 ;;		line 24 in file "src/api/ui.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  x               4   13[BANK0 ] long 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  mf              4   25[BANK0 ] struct .
 10037 ;;  t32             4   21[BANK0 ] unsigned long 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  4   13[BANK0 ] long 
 10040 ;; Registers used:
 10041 ;;		wreg, status,2, status,0, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:       16 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    5
 10054 ;; This function calls:
 10055 ;;		___lldiv
 10056 ;; This function is called by:
 10057 ;;		___enter_menu_set_base_zero
 10058 ;;		___enter_menu_calib_press_diff
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text62
 10063  000868                     __ptext62:
 10064                           	opt stack 0
 10065  000868                     ___int32_2_mflot32:
 10066                           	opt stack 22
 10067                           
 10068                           ;ui.c: 26: st_float32 mf={0};
 10069                           
 10070                           ;incstack = 0
 10071  000868  C087  F0DC         	movff	___int32_2_mflot32@F7568,___int32_2_mflot32@mf
 10072  00086C  C088  F0DD         	movff	___int32_2_mflot32@F7568+1,___int32_2_mflot32@mf+1
 10073  000870  C089  F0DE         	movff	___int32_2_mflot32@F7568+2,___int32_2_mflot32@mf+2
 10074  000874  C08A  F0DF         	movff	___int32_2_mflot32@F7568+3,___int32_2_mflot32@mf+3
 10075                           
 10076                           ;ui.c: 27: uint32_t t32;
 10077                           ;ui.c: 28: t32=x;
 10078  000878  C0D0  F0D8         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 10079  00087C  C0D1  F0D9         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 10080  000880  C0D2  F0DA         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 10081  000884  C0D3  F0DB         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 10082                           
 10083                           ;ui.c: 29: if(x<0){
 10084  000888  0100               	movlb	0	; () banked
 10085  00088A  AFD3               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 10086  00088C  D040               	goto	l6859
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;ui.c: 30: t32 = ((~x) +1);
 10090  00088E  C0D0  F0D4         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 10091  000892  C0D1  F0D5         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 10092  000896  C0D2  F0D6         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 10093  00089A  C0D3  F0D7         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 10094  00089E  0100               	movlb	0	; () banked
 10095  0008A0  1FD4               	comf	??___int32_2_mflot32& (0+255),f,b
 10096  0008A2  1FD5               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 10097  0008A4  1FD6               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 10098  0008A6  1FD7               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 10099  0008A8  2BD4               	incf	??___int32_2_mflot32& (0+255),f,b
 10100  0008AA  0E00               	movlw	0
 10101  0008AC  23D5               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 10102  0008AE  23D6               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 10103  0008B0  23D7               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 10104  0008B2  C0D4  F0D8         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 10105  0008B6  C0D5  F0D9         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 10106  0008BA  C0D6  F0DA         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 10107  0008BE  C0D7  F0DB         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;ui.c: 31: mf.stru.sign=1;
 10111  0008C2  0E01               	movlw	1
 10112  0008C4  0100               	movlb	0	; () banked
 10113  0008C6  6FDF               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;ui.c: 32: }
 10117                           ;ui.c: 33: while(t32>9999){
 10118  0008C8  D022               	goto	l6859
 10119  0008CA                     l6851:
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;ui.c: 34: mf.stru.exponent++;
 10123  0008CA  0100               	movlb	0	; () banked
 10124  0008CC  2BDE               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;ui.c: 35: t32/=10;
 10128  0008CE  C0D8  F0C3         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 10129  0008D2  C0D9  F0C4         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 10130  0008D6  C0DA  F0C5         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 10131  0008DA  C0DB  F0C6         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 10132  0008DE  0E0A               	movlw	10
 10133  0008E0  0100               	movlb	0	; () banked
 10134  0008E2  6FC7               	movwf	___lldiv@divisor& (0+255),b
 10135  0008E4  0E00               	movlw	0
 10136  0008E6  6FC8               	movwf	(___lldiv@divisor+1)& (0+255),b
 10137  0008E8  0E00               	movlw	0
 10138  0008EA  6FC9               	movwf	(___lldiv@divisor+2)& (0+255),b
 10139  0008EC  0E00               	movlw	0
 10140  0008EE  6FCA               	movwf	(___lldiv@divisor+3)& (0+255),b
 10141  0008F0  EC92  F007         	call	___lldiv	;wreg free
 10142  0008F4  C0C3  F0D8         	movff	?___lldiv,___int32_2_mflot32@t32
 10143  0008F8  C0C4  F0D9         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 10144  0008FC  C0C5  F0DA         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 10145  000900  C0C6  F0DB         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 10146                           
 10147                           ;ui.c: 36: if( mf.stru.exponent==3)break;
 10148  000904  0E03               	movlw	3
 10149  000906  0100               	movlb	0	; () banked
 10150  000908  19DE               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
 10151  00090A  B4D8               	btfsc	status,2,c
 10152  00090C  D00D               	goto	l6861
 10153  00090E                     l6859:
 10154                           
 10155                           ; BSR set to: 0
 10156  00090E  0100               	movlb	0	; () banked
 10157  000910  51DB               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10158  000912  0100               	movlb	0	; () banked
 10159  000914  11DA               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10160  000916  E1D9               	bnz	l6851
 10161  000918  0E10               	movlw	16
 10162  00091A  0100               	movlb	0	; () banked
 10163  00091C  5DD8               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10164  00091E  0E27               	movlw	39
 10165  000920  0100               	movlb	0	; () banked
 10166  000922  59D9               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10167  000924  B0D8               	btfsc	status,0,c
 10168  000926  D7D1               	goto	l6851
 10169  000928                     l6861:
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;ui.c: 37: }
 10173                           ;ui.c: 38: if(t32>9999)t32=9999;
 10174  000928  0100               	movlb	0	; () banked
 10175  00092A  51DB               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 10176  00092C  0100               	movlb	0	; () banked
 10177  00092E  11DA               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 10178  000930  E108               	bnz	u4920
 10179  000932  0E10               	movlw	16
 10180  000934  0100               	movlb	0	; () banked
 10181  000936  5DD8               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 10182  000938  0E27               	movlw	39
 10183  00093A  0100               	movlb	0	; () banked
 10184  00093C  59D9               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 10185  00093E  A0D8               	btfss	status,0,c
 10186  000940  D009               	goto	l6865
 10187  000942                     u4920:
 10188                           
 10189                           ; BSR set to: 0
 10190  000942  0E0F               	movlw	15
 10191  000944  0100               	movlb	0	; () banked
 10192  000946  6FD8               	movwf	___int32_2_mflot32@t32& (0+255),b
 10193  000948  0E27               	movlw	39
 10194  00094A  6FD9               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 10195  00094C  0E00               	movlw	0
 10196  00094E  6FDA               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 10197  000950  0E00               	movlw	0
 10198  000952  6FDB               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 10199  000954                     l6865:
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;ui.c: 39: mf.stru.significand=t32;
 10203  000954  C0D8  F0DC         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 10204  000958  C0D9  F0DD         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;ui.c: 40: return mf.t32;
 10208  00095C  C0DC  F0D0         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 10209  000960  C0DD  F0D1         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 10210  000964  C0DE  F0D2         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 10211  000968  C0DF  F0D3         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 10212  00096C  0012               	return	
 10213  00096E                     __end_of___int32_2_mflot32:
 10214                           	opt stack 0
 10215                           tblptru	equ	0xFF8
 10216                           tblptrh	equ	0xFF7
 10217                           tblptrl	equ	0xFF6
 10218                           tablat	equ	0xFF5
 10219                           prodh	equ	0xFF4
 10220                           prodl	equ	0xFF3
 10221                           intcon	equ	0xFF2
 10222                           indf0	equ	0xFEF
 10223                           postinc0	equ	0xFEE
 10224                           fsr0h	equ	0xFEA
 10225                           fsr0l	equ	0xFE9
 10226                           wreg	equ	0xFE8
 10227                           postdec1	equ	0xFE5
 10228                           plusw1	equ	0xFE3
 10229                           fsr1h	equ	0xFE2
 10230                           fsr1l	equ	0xFE1
 10231                           indf2	equ	0xFDF
 10232                           postinc2	equ	0xFDE
 10233                           postdec2	equ	0xFDD
 10234                           plusw2	equ	0xFDB
 10235                           fsr2h	equ	0xFDA
 10236                           fsr2l	equ	0xFD9
 10237                           status	equ	0xFD8
 10238                           
 10239 ;; *************** function ___lldiv *****************
 10240 ;; Defined at:
 10241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lldiv.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  dividend        4    0[BANK0 ] unsigned long 
 10244 ;;  divisor         4    4[BANK0 ] unsigned long 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  quotient        4    8[BANK0 ] unsigned long 
 10247 ;;  counter         1   12[BANK0 ] unsigned char 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  4    0[BANK0 ] unsigned long 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:       13 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    4
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		___int32_2_mflot32
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text63
 10272  000F24                     __ptext63:
 10273                           	opt stack 0
 10274  000F24                     ___lldiv:
 10275                           	opt stack 22
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;incstack = 0
 10279  000F24  0E00               	movlw	0
 10280  000F26  0100               	movlb	0	; () banked
 10281  000F28  6FCB               	movwf	___lldiv@quotient& (0+255),b
 10282  000F2A  0E00               	movlw	0
 10283  000F2C  6FCC               	movwf	(___lldiv@quotient+1)& (0+255),b
 10284  000F2E  0E00               	movlw	0
 10285  000F30  6FCD               	movwf	(___lldiv@quotient+2)& (0+255),b
 10286  000F32  0E00               	movlw	0
 10287  000F34  6FCE               	movwf	(___lldiv@quotient+3)& (0+255),b
 10288                           
 10289                           ; BSR set to: 0
 10290  000F36  0100               	movlb	0	; () banked
 10291  000F38  51C7               	movf	___lldiv@divisor& (0+255),w,b
 10292  000F3A  0100               	movlb	0	; () banked
 10293  000F3C  11C8               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10294  000F3E  0100               	movlb	0	; () banked
 10295  000F40  11C9               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10296  000F42  0100               	movlb	0	; () banked
 10297  000F44  11CA               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10298  000F46  B4D8               	btfsc	status,2,c
 10299  000F48  D042               	goto	l1759
 10300                           
 10301                           ; BSR set to: 0
 10302  000F4A  0E01               	movlw	1
 10303  000F4C  0100               	movlb	0	; () banked
 10304  000F4E  6FCF               	movwf	___lldiv@counter& (0+255),b
 10305  000F50  D008               	goto	l6803
 10306  000F52                     l6801:
 10307                           
 10308                           ; BSR set to: 0
 10309  000F52  0100               	movlb	0	; () banked
 10310  000F54  90D8               	bcf	status,0,c
 10311  000F56  37C7               	rlcf	___lldiv@divisor& (0+255),f,b
 10312  000F58  37C8               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10313  000F5A  37C9               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10314  000F5C  37CA               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10315  000F5E  0100               	movlb	0	; () banked
 10316  000F60  2BCF               	incf	___lldiv@counter& (0+255),f,b
 10317  000F62                     l6803:
 10318                           
 10319                           ; BSR set to: 0
 10320  000F62  0100               	movlb	0	; () banked
 10321  000F64  AFCA               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10322  000F66  D7F5               	goto	l6801
 10323  000F68                     l6805:
 10324                           
 10325                           ; BSR set to: 0
 10326  000F68  0100               	movlb	0	; () banked
 10327  000F6A  90D8               	bcf	status,0,c
 10328  000F6C  37CB               	rlcf	___lldiv@quotient& (0+255),f,b
 10329  000F6E  37CC               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10330  000F70  37CD               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10331  000F72  37CE               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10332                           
 10333                           ; BSR set to: 0
 10334  000F74  0100               	movlb	0	; () banked
 10335  000F76  51C7               	movf	___lldiv@divisor& (0+255),w,b
 10336  000F78  0100               	movlb	0	; () banked
 10337  000F7A  5DC3               	subwf	___lldiv@dividend& (0+255),w,b
 10338  000F7C  0100               	movlb	0	; () banked
 10339  000F7E  51C8               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10340  000F80  0100               	movlb	0	; () banked
 10341  000F82  59C4               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10342  000F84  0100               	movlb	0	; () banked
 10343  000F86  51C9               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10344  000F88  0100               	movlb	0	; () banked
 10345  000F8A  59C5               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10346  000F8C  0100               	movlb	0	; () banked
 10347  000F8E  51CA               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10348  000F90  0100               	movlb	0	; () banked
 10349  000F92  59C6               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10350  000F94  A0D8               	btfss	status,0,c
 10351  000F96  D012               	goto	l6813
 10352                           
 10353                           ; BSR set to: 0
 10354  000F98  0100               	movlb	0	; () banked
 10355  000F9A  51C7               	movf	___lldiv@divisor& (0+255),w,b
 10356  000F9C  0100               	movlb	0	; () banked
 10357  000F9E  5FC3               	subwf	___lldiv@dividend& (0+255),f,b
 10358  000FA0  0100               	movlb	0	; () banked
 10359  000FA2  51C8               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10360  000FA4  0100               	movlb	0	; () banked
 10361  000FA6  5BC4               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10362  000FA8  0100               	movlb	0	; () banked
 10363  000FAA  51C9               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10364  000FAC  0100               	movlb	0	; () banked
 10365  000FAE  5BC5               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10366  000FB0  0100               	movlb	0	; () banked
 10367  000FB2  51CA               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10368  000FB4  0100               	movlb	0	; () banked
 10369  000FB6  5BC6               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10370                           
 10371                           ; BSR set to: 0
 10372  000FB8  0100               	movlb	0	; () banked
 10373  000FBA  81CB               	bsf	___lldiv@quotient& (0+255),0,b
 10374  000FBC                     l6813:
 10375                           
 10376                           ; BSR set to: 0
 10377  000FBC  0100               	movlb	0	; () banked
 10378  000FBE  90D8               	bcf	status,0,c
 10379  000FC0  33CA               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10380  000FC2  33C9               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10381  000FC4  33C8               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10382  000FC6  33C7               	rrcf	___lldiv@divisor& (0+255),f,b
 10383                           
 10384                           ; BSR set to: 0
 10385  000FC8  0100               	movlb	0	; () banked
 10386  000FCA  2FCF               	decfsz	___lldiv@counter& (0+255),f,b
 10387  000FCC  D7CD               	goto	l6805
 10388  000FCE                     l1759:
 10389                           
 10390                           ; BSR set to: 0
 10391  000FCE  C0CB  F0C3         	movff	___lldiv@quotient,?___lldiv
 10392  000FD2  C0CC  F0C4         	movff	___lldiv@quotient+1,?___lldiv+1
 10393  000FD6  C0CD  F0C5         	movff	___lldiv@quotient+2,?___lldiv+2
 10394  000FDA  C0CE  F0C6         	movff	___lldiv@quotient+3,?___lldiv+3
 10395                           
 10396                           ; BSR set to: 0
 10397  000FDE  0012               	return		;funcret
 10398  000FE0                     __end_of___lldiv:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodh	equ	0xFF4
 10405                           prodl	equ	0xFF3
 10406                           intcon	equ	0xFF2
 10407                           indf0	equ	0xFEF
 10408                           postinc0	equ	0xFEE
 10409                           fsr0h	equ	0xFEA
 10410                           fsr0l	equ	0xFE9
 10411                           wreg	equ	0xFE8
 10412                           postdec1	equ	0xFE5
 10413                           plusw1	equ	0xFE3
 10414                           fsr1h	equ	0xFE2
 10415                           fsr1l	equ	0xFE1
 10416                           indf2	equ	0xFDF
 10417                           postinc2	equ	0xFDE
 10418                           postdec2	equ	0xFDD
 10419                           plusw2	equ	0xFDB
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           
 10424 ;; *************** function _key_process_set *****************
 10425 ;; Defined at:
 10426 ;;		line 144 in file "src/api/key_menu.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    4
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_key_process
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text64
 10455  002530                     __ptext64:
 10456                           	opt stack 0
 10457  002530                     _key_process_set:
 10458                           	opt stack 25
 10459                           
 10460                           ;key_menu.c: 146: switch(menu){
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;incstack = 0
 10464  002530  D009               	goto	l5517
 10465  002532                     l5513:
 10466                           
 10467                           ;key_menu.c: 148: case 0x01:
 10468                           ;key_menu.c: 149: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
 10469  002532  0E00               	movlw	0
 10470  002534  6E3E               	movwf	_passWord+1,c	;volatile
 10471  002536  0E00               	movlw	0
 10472  002538  6E3D               	movwf	_passWord,c	;volatile
 10473  00253A  0E00               	movlw	0
 10474  00253C  6E3F               	movwf	_adjLocation,c	;volatile
 10475  00253E  0E10               	movlw	16
 10476  002540  6E3C               	movwf	_menu,c	;volatile
 10477                           
 10478                           ;key_menu.c: 151: }
 10479                           
 10480                           ;key_menu.c: 150: default:break;
 10481  002542  0012               	return	
 10482  002544                     l5517:
 10483  002544  503C               	movf	_menu,w,c	;volatile
 10484                           
 10485                           ; Switch size 1, requested type "space"
 10486                           ; Number of cases is 3, Range of values is 0 to 2
 10487                           ; switch strategies available:
 10488                           ; Name         Instructions Cycles
 10489                           ; simple_byte           10     6 (average)
 10490                           ;	Chosen strategy is simple_byte
 10491  002546  0A00               	xorlw	0	; case 0
 10492  002548  B4D8               	btfsc	status,2,c
 10493  00254A  D7F3               	goto	l5513
 10494  00254C  0A01               	xorlw	1	; case 1
 10495  00254E  B4D8               	btfsc	status,2,c
 10496  002550  D7F0               	goto	l5513
 10497  002552  0A03               	xorlw	3	; case 2
 10498  002554  A4D8               	btfss	status,2,c
 10499  002556  0012               	return	
 10500  002558  D7EC               	goto	l5513
 10501  00255A                     __end_of_key_process_set:
 10502                           	opt stack 0
 10503                           tblptru	equ	0xFF8
 10504                           tblptrh	equ	0xFF7
 10505                           tblptrl	equ	0xFF6
 10506                           tablat	equ	0xFF5
 10507                           prodh	equ	0xFF4
 10508                           prodl	equ	0xFF3
 10509                           intcon	equ	0xFF2
 10510                           indf0	equ	0xFEF
 10511                           postinc0	equ	0xFEE
 10512                           fsr0h	equ	0xFEA
 10513                           fsr0l	equ	0xFE9
 10514                           wreg	equ	0xFE8
 10515                           postdec1	equ	0xFE5
 10516                           plusw1	equ	0xFE3
 10517                           fsr1h	equ	0xFE2
 10518                           fsr1l	equ	0xFE1
 10519                           indf2	equ	0xFDF
 10520                           postinc2	equ	0xFDE
 10521                           postdec2	equ	0xFDD
 10522                           plusw2	equ	0xFDB
 10523                           fsr2h	equ	0xFDA
 10524                           fsr2l	equ	0xFD9
 10525                           status	equ	0xFD8
 10526                           
 10527 ;; *************** function _key_process_down *****************
 10528 ;; Defined at:
 10529 ;;		line 47 in file "src/api/key_menu.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;		None
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      void 
 10536 ;; Registers used:
 10537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;Total ram usage:        0 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    5
 10550 ;; This function calls:
 10551 ;;		_key_shift_loc_fixed_point
 10552 ;; This function is called by:
 10553 ;;		_key_process
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text65
 10558  002246                     __ptext65:
 10559                           	opt stack 0
 10560  002246                     _key_process_down:
 10561                           	opt stack 24
 10562                           
 10563                           ;key_menu.c: 49: switch(menu){
 10564                           
 10565                           ;incstack = 0
 10566  002246  D00F               	goto	l7513
 10567  002248                     l7509:
 10568  002248  0E3F               	movlw	low _adjLocation
 10569  00224A  0100               	movlb	0	; () banked
 10570  00224C  6FC3               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
 10571  00224E  0E00               	movlw	high _adjLocation
 10572  002250  0100               	movlb	0	; () banked
 10573  002252  6FC4               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
 10574  002254  0E00               	movlw	0
 10575  002256  0100               	movlb	0	; () banked
 10576  002258  6FC5               	movwf	key_shift_loc_fixed_point@min& (0+255),b
 10577  00225A  0E03               	movlw	3
 10578  00225C  0100               	movlb	0	; () banked
 10579  00225E  6FC6               	movwf	key_shift_loc_fixed_point@max& (0+255),b
 10580  002260  ECAE  F011         	call	_key_shift_loc_fixed_point	;wreg free
 10581                           
 10582                           ;key_menu.c: 55: }
 10583                           
 10584                           ;key_menu.c: 54: default:break;
 10585  002264  0012               	return	
 10586  002266                     l7513:
 10587  002266  503C               	movf	_menu,w,c	;volatile
 10588                           
 10589                           ; Switch size 1, requested type "space"
 10590                           ; Number of cases is 4, Range of values is 0 to 16
 10591                           ; switch strategies available:
 10592                           ; Name         Instructions Cycles
 10593                           ; simple_byte           13     7 (average)
 10594                           ;	Chosen strategy is simple_byte
 10595  002268  0A00               	xorlw	0	; case 0
 10596  00226A  B4D8               	btfsc	status,2,c
 10597  00226C  0012               	return	
 10598  00226E  0A01               	xorlw	1	; case 1
 10599  002270  B4D8               	btfsc	status,2,c
 10600  002272  0012               	return	
 10601  002274  0A03               	xorlw	3	; case 2
 10602  002276  B4D8               	btfsc	status,2,c
 10603  002278  0012               	return	
 10604  00227A  0A12               	xorlw	18	; case 16
 10605  00227C  A4D8               	btfss	status,2,c
 10606  00227E  0012               	return	
 10607  002280  D7E3               	goto	l7509
 10608  002282                     __end_of_key_process_down:
 10609                           	opt stack 0
 10610                           tblptru	equ	0xFF8
 10611                           tblptrh	equ	0xFF7
 10612                           tblptrl	equ	0xFF6
 10613                           tablat	equ	0xFF5
 10614                           prodh	equ	0xFF4
 10615                           prodl	equ	0xFF3
 10616                           intcon	equ	0xFF2
 10617                           indf0	equ	0xFEF
 10618                           postinc0	equ	0xFEE
 10619                           fsr0h	equ	0xFEA
 10620                           fsr0l	equ	0xFE9
 10621                           wreg	equ	0xFE8
 10622                           postdec1	equ	0xFE5
 10623                           plusw1	equ	0xFE3
 10624                           fsr1h	equ	0xFE2
 10625                           fsr1l	equ	0xFE1
 10626                           indf2	equ	0xFDF
 10627                           postinc2	equ	0xFDE
 10628                           postdec2	equ	0xFDD
 10629                           plusw2	equ	0xFDB
 10630                           fsr2h	equ	0xFDA
 10631                           fsr2l	equ	0xFD9
 10632                           status	equ	0xFD8
 10633                           
 10634 ;; *************** function _key_shift_loc_fixed_point *****************
 10635 ;; Defined at:
 10636 ;;		line 39 in file "src/api/key_menu.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 10639 ;;		 -> adjLocation(1), 
 10640 ;;  min             1    2[BANK0 ] unsigned char 
 10641 ;;  max             1    3[BANK0 ] unsigned char 
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;  t8              1   31[COMRAM] unsigned char 
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      void 
 10646 ;; Registers used:
 10647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10656 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10657 ;;Total ram usage:        5 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    4
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		_key_process_down
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text66
 10668  00235C                     __ptext66:
 10669                           	opt stack 0
 10670  00235C                     _key_shift_loc_fixed_point:
 10671                           	opt stack 24
 10672                           
 10673                           ;key_menu.c: 41: uint8_t t8=*loc;
 10674                           
 10675                           ;incstack = 0
 10676  00235C  C0C3  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 10677  002360  C0C4  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 10678  002364  50DF               	movf	indf2,w,c
 10679  002366  6E20               	movwf	key_shift_loc_fixed_point@t8,c
 10680                           
 10681                           ;key_menu.c: 42: if(min<max)return;
 10682  002368  0100               	movlb	0	; () banked
 10683  00236A  51C6               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
 10684  00236C  0100               	movlb	0	; () banked
 10685  00236E  5DC5               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
 10686  002370  A0D8               	btfss	status,0,c
 10687  002372  0012               	return	
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;key_menu.c: 43: t8++;
 10691                           
 10692                           ; BSR set to: 0
 10693                           
 10694                           ; BSR set to: 0
 10695  002374  2A20               	incf	key_shift_loc_fixed_point@t8,f,c
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;key_menu.c: 44: if(t8>max)t8=min;
 10699  002376  5020               	movf	key_shift_loc_fixed_point@t8,w,c
 10700  002378  0100               	movlb	0	; () banked
 10701  00237A  5DC6               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
 10702  00237C  A0D8               	btfss	status,0,c
 10703                           
 10704                           ; BSR set to: 0
 10705  00237E  C0C5  F020         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;key_menu.c: 45: *loc=t8;
 10709                           
 10710                           ; BSR set to: 0
 10711  002382  C0C3  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
 10712  002386  C0C4  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
 10713  00238A  C020  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
 10714                           
 10715                           ; BSR set to: 0
 10716  00238E  0012               	return		;funcret
 10717  002390                     __end_of_key_shift_loc_fixed_point:
 10718                           	opt stack 0
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           intcon	equ	0xFF2
 10726                           indf0	equ	0xFEF
 10727                           postinc0	equ	0xFEE
 10728                           fsr0h	equ	0xFEA
 10729                           fsr0l	equ	0xFE9
 10730                           wreg	equ	0xFE8
 10731                           postdec1	equ	0xFE5
 10732                           plusw1	equ	0xFE3
 10733                           fsr1h	equ	0xFE2
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           plusw2	equ	0xFDB
 10739                           fsr2h	equ	0xFDA
 10740                           fsr2l	equ	0xFD9
 10741                           status	equ	0xFD8
 10742                           
 10743 ;; *************** function _in_adc_start_and_read *****************
 10744 ;; Defined at:
 10745 ;;		line 21 in file "src/driver/in_adc.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  ch              1    wreg     unsigned char 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  ch              1    5[BANK0 ] unsigned char 
 10750 ;;  ret             2    6[BANK0 ] unsigned int 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  2    2[BANK0 ] unsigned int 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;Total ram usage:        6 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    5
 10767 ;; This function calls:
 10768 ;;		_delay_us
 10769 ;; This function is called by:
 10770 ;;		_main
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text67
 10775  001B3A                     __ptext67:
 10776                           	opt stack 0
 10777  001B3A                     _in_adc_start_and_read:
 10778                           	opt stack 25
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;incstack = 0
 10782                           ;in_adc_start_and_read@ch stored from wreg
 10783  001B3A  0100               	movlb	0	; () banked
 10784  001B3C  6FC8               	movwf	in_adc_start_and_read@ch& (0+255),b
 10785                           
 10786                           ;in_adc.c: 23: uint16_t ret=0;
 10787  001B3E  0E00               	movlw	0
 10788  001B40  0100               	movlb	0	; () banked
 10789  001B42  6FCA               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 10790  001B44  0E00               	movlw	0
 10791  001B46  6FC9               	movwf	in_adc_start_and_read@ret& (0+255),b
 10792                           
 10793                           ; BSR set to: 0
 10794                           
 10795                           ; BSR set to: 0
 10796                           
 10797                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 10798  001B48  80C2               	bsf	4034,0,c	;volatile
 10799                           
 10800                           ; BSR set to: 0
 10801                           
 10802                           ; BSR set to: 0
 10803                           
 10804                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 10805                           
 10806                           ; BSR set to: 0
 10807  001B4A  C0C8  F0C7         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 10808  001B4E  0100               	movlb	0	; () banked
 10809  001B50  47C7               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 10810  001B52  47C7               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 10811  001B54  50C2               	movf	4034,w,c	;volatile
 10812  001B56  0100               	movlb	0	; () banked
 10813  001B58  19C7               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 10814  001B5A  0BC3               	andlw	-61
 10815  001B5C  19C7               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 10816  001B5E  6EC2               	movwf	4034,c	;volatile
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;in_adc.c: 26: delay_us(2);
 10820                           
 10821                           ; BSR set to: 0
 10822  001B60  0E00               	movlw	0
 10823  001B62  6E21               	movwf	delay_us@dly+1,c
 10824  001B64  0E02               	movlw	2
 10825  001B66  6E20               	movwf	delay_us@dly,c
 10826  001B68  ECC8  F011         	call	_delay_us	;wreg free
 10827                           
 10828                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 10829  001B6C  82C2               	bsf	4034,1,c	;volatile
 10830                           
 10831                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 10832  001B6E  D001               	goto	l770
 10833  001B70                     l771:
 10834  001B70  F000               	nop	
 10835  001B72                     l770:
 10836  001B72  B2C2               	btfsc	4034,1,c	;volatile
 10837  001B74  D7FD               	goto	l771
 10838                           
 10839                           ;in_adc.c: 30: ret=ADRESH;
 10840  001B76  CFC4 F0C9          	movff	4036,in_adc_start_and_read@ret	;volatile
 10841  001B7A  0100               	movlb	0	; () banked
 10842  001B7C  6BCA               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;in_adc.c: 31: ret<<=8;
 10846  001B7E  0100               	movlb	0	; () banked
 10847  001B80  51C9               	movf	in_adc_start_and_read@ret& (0+255),w,b
 10848  001B82  6FCA               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 10849  001B84  6BC9               	clrf	in_adc_start_and_read@ret& (0+255),b
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;in_adc.c: 32: ret |= ADRESL;
 10853  001B86  50C3               	movf	4035,w,c	;volatile
 10854  001B88  0100               	movlb	0	; () banked
 10855  001B8A  13C9               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;in_adc.c: 33: delay_us(2);
 10859  001B8C  0E00               	movlw	0
 10860  001B8E  6E21               	movwf	delay_us@dly+1,c
 10861  001B90  0E02               	movlw	2
 10862  001B92  6E20               	movwf	delay_us@dly,c
 10863  001B94  ECC8  F011         	call	_delay_us	;wreg free
 10864                           
 10865                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 10866  001B98  90C2               	bcf	4034,0,c	;volatile
 10867                           
 10868                           ;in_adc.c: 35: return ret;
 10869  001B9A  C0C9  F0C5         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 10870  001B9E  C0CA  F0C6         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 10871  001BA2  0012               	return	
 10872  001BA4                     __end_of_in_adc_start_and_read:
 10873                           	opt stack 0
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           intcon	equ	0xFF2
 10881                           indf0	equ	0xFEF
 10882                           postinc0	equ	0xFEE
 10883                           fsr0h	equ	0xFEA
 10884                           fsr0l	equ	0xFE9
 10885                           wreg	equ	0xFE8
 10886                           postdec1	equ	0xFE5
 10887                           plusw1	equ	0xFE3
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           plusw2	equ	0xFDB
 10894                           fsr2h	equ	0xFDA
 10895                           fsr2l	equ	0xFD9
 10896                           status	equ	0xFD8
 10897                           
 10898 ;; *************** function _delay_us *****************
 10899 ;; Defined at:
 10900 ;;		line 82 in file "src/soc/clock.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  dly             2   31[COMRAM] unsigned int 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  i               2    0[BANK0 ] unsigned int 
 10905 ;; Return value:  Size  Location     Type
 10906 ;;                  1    wreg      void 
 10907 ;; Registers used:
 10908 ;;		wreg, status,2, status,0
 10909 ;; Tracked objects:
 10910 ;;		On entry : 0/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10917 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10918 ;;Total ram usage:        4 bytes
 10919 ;; Hardware stack levels used:    1
 10920 ;; Hardware stack levels required when called:    4
 10921 ;; This function calls:
 10922 ;;		Nothing
 10923 ;; This function is called by:
 10924 ;;		_in_adc_start_and_read
 10925 ;;		_delay_ms
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text68
 10930  002390                     __ptext68:
 10931                           	opt stack 0
 10932  002390                     _delay_us:
 10933                           	opt stack 22
 10934                           
 10935                           ;clock.c: 84: uint16_t i;
 10936                           ;clock.c: 85: for(i=0;i<dly;i++){
 10937                           
 10938                           ;incstack = 0
 10939  002390  0E00               	movlw	0
 10940  002392  0100               	movlb	0	; () banked
 10941  002394  6FC4               	movwf	(delay_us@i+1)& (0+255),b
 10942  002396  0E00               	movlw	0
 10943  002398  6FC3               	movwf	delay_us@i& (0+255),b
 10944  00239A  D00B               	goto	l6793
 10945  00239C                     l1255:
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;clock.c: 86: __nop();
 10949  00239C  F000               	nop	
 10950                           
 10951                           ;clock.c: 87: __nop();
 10952  00239E  F000               	nop	
 10953                           
 10954                           ;clock.c: 88: __nop();
 10955  0023A0  F000               	nop	
 10956                           
 10957                           ;clock.c: 89: __nop();
 10958  0023A2  F000               	nop	
 10959                           
 10960                           ;clock.c: 91: __nop();
 10961  0023A4  F000               	nop	
 10962                           
 10963                           ;clock.c: 92: __nop();
 10964  0023A6  F000               	nop	
 10965                           
 10966                           ;clock.c: 93: __nop();
 10967  0023A8  F000               	nop	
 10968                           
 10969                           ;clock.c: 94: __nop();
 10970  0023AA  F000               	nop	
 10971  0023AC  0100               	movlb	0	; () banked
 10972  0023AE  4BC3               	infsnz	delay_us@i& (0+255),f,b
 10973  0023B0  2BC4               	incf	(delay_us@i+1)& (0+255),f,b
 10974  0023B2                     l6793:
 10975                           
 10976                           ; BSR set to: 0
 10977  0023B2  5020               	movf	delay_us@dly,w,c
 10978  0023B4  0100               	movlb	0	; () banked
 10979  0023B6  5DC3               	subwf	delay_us@i& (0+255),w,b
 10980  0023B8  5021               	movf	delay_us@dly+1,w,c
 10981  0023BA  0100               	movlb	0	; () banked
 10982  0023BC  59C4               	subwfb	(delay_us@i+1)& (0+255),w,b
 10983  0023BE  B0D8               	btfsc	status,0,c
 10984  0023C0  0012               	return	
 10985  0023C2  D7EC               	goto	l1255
 10986  0023C4                     __end_of_delay_us:
 10987                           	opt stack 0
 10988                           tblptru	equ	0xFF8
 10989                           tblptrh	equ	0xFF7
 10990                           tblptrl	equ	0xFF6
 10991                           tablat	equ	0xFF5
 10992                           prodh	equ	0xFF4
 10993                           prodl	equ	0xFF3
 10994                           intcon	equ	0xFF2
 10995                           indf0	equ	0xFEF
 10996                           postinc0	equ	0xFEE
 10997                           fsr0h	equ	0xFEA
 10998                           fsr0l	equ	0xFE9
 10999                           wreg	equ	0xFE8
 11000                           postdec1	equ	0xFE5
 11001                           plusw1	equ	0xFE3
 11002                           fsr1h	equ	0xFE2
 11003                           fsr1l	equ	0xFE1
 11004                           indf2	equ	0xFDF
 11005                           postinc2	equ	0xFDE
 11006                           postdec2	equ	0xFDD
 11007                           plusw2	equ	0xFDB
 11008                           fsr2h	equ	0xFDA
 11009                           fsr2l	equ	0xFD9
 11010                           status	equ	0xFD8
 11011                           
 11012 ;; *************** function _in_adc_init *****************
 11013 ;; Defined at:
 11014 ;;		line 9 in file "src/driver/in_adc.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    4
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_main
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text69
 11043  0025F2                     __ptext69:
 11044                           	opt stack 0
 11045  0025F2                     _in_adc_init:
 11046                           	opt stack 26
 11047                           
 11048                           ;in_adc.c: 11: ADCON1=0b00001101;
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;incstack = 0
 11052  0025F2  0E0D               	movlw	13
 11053  0025F4  6EC1               	movwf	4033,c	;volatile
 11054                           
 11055                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 11056  0025F6  8EC0               	bsf	4032,7,c	;volatile
 11057                           
 11058                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 11059  0025F8  86C0               	bsf	4032,3,c	;volatile
 11060  0025FA  88C0               	bsf	4032,4,c	;volatile
 11061  0025FC  8AC0               	bsf	4032,5,c	;volatile
 11062                           
 11063                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 11064  0025FE  80C0               	bsf	4032,0,c	;volatile
 11065  002600  82C0               	bsf	4032,1,c	;volatile
 11066  002602  84C0               	bsf	4032,2,c	;volatile
 11067                           
 11068                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 11069  002604  8EC2               	bsf	4034,7,c	;volatile
 11070                           
 11071                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 11072  002606  50C2               	movf	4034,w,c	;volatile
 11073  002608  0BC3               	andlw	-61
 11074  00260A  090C               	iorlw	12
 11075  00260C  6EC2               	movwf	4034,c	;volatile
 11076                           
 11077                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 11078  00260E  9C9E               	bcf	3998,6,c	;volatile
 11079                           
 11080                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 11081  002610  9C9D               	bcf	3997,6,c	;volatile
 11082                           
 11083                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 11084  002612  9C9F               	bcf	3999,6,c	;volatile
 11085  002614  0012               	return		;funcret
 11086  002616                     __end_of_in_adc_init:
 11087                           	opt stack 0
 11088                           tblptru	equ	0xFF8
 11089                           tblptrh	equ	0xFF7
 11090                           tblptrl	equ	0xFF6
 11091                           tablat	equ	0xFF5
 11092                           prodh	equ	0xFF4
 11093                           prodl	equ	0xFF3
 11094                           intcon	equ	0xFF2
 11095                           indf0	equ	0xFEF
 11096                           postinc0	equ	0xFEE
 11097                           fsr0h	equ	0xFEA
 11098                           fsr0l	equ	0xFE9
 11099                           wreg	equ	0xFE8
 11100                           postdec1	equ	0xFE5
 11101                           plusw1	equ	0xFE3
 11102                           fsr1h	equ	0xFE2
 11103                           fsr1l	equ	0xFE1
 11104                           indf2	equ	0xFDF
 11105                           postinc2	equ	0xFDE
 11106                           postdec2	equ	0xFDD
 11107                           plusw2	equ	0xFDB
 11108                           fsr2h	equ	0xFDA
 11109                           fsr2l	equ	0xFD9
 11110                           status	equ	0xFD8
 11111                           
 11112 ;; *************** function _ads1115_start_conversion *****************
 11113 ;; Defined at:
 11114 ;;		line 115 in file "src/driver/ads1115.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  pAds1115        2    7[BANK0 ] PTR struct .
 11117 ;;		 -> ads1115Chip0(16), 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;Total ram usage:        2 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    8
 11136 ;; This function calls:
 11137 ;;		_ads1115_write_reg
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text70
 11144  00255A                     __ptext70:
 11145                           	opt stack 0
 11146  00255A                     _ads1115_start_conversion:
 11147                           	opt stack 22
 11148                           
 11149                           ;ads1115.c: 117: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 11150                           
 11151                           ;incstack = 0
 11152  00255A  C0CA  F0C5         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 11153  00255E  C0CB  F0C6         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 11154  002562  0E01               	movlw	1
 11155  002564  0100               	movlb	0	; () banked
 11156  002566  6FC7               	movwf	ads1115_write_reg@addr& (0+255),b
 11157  002568  0100               	movlb	0	; () banked
 11158  00256A  EE20 F002          	lfsr	2,2
 11159  00256E  51CA               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 11160  002570  26D9               	addwf	fsr2l,f,c
 11161  002572  51CB               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 11162  002574  22DA               	addwfc	fsr2h,f,c
 11163  002576  CFDE F0C8          	movff	postinc2,ads1115_write_reg@value
 11164  00257A  CFDD F0C9          	movff	postdec2,ads1115_write_reg@value+1
 11165  00257E  ECB7  F004         	call	_ads1115_write_reg	;wreg free
 11166  002582  0012               	return		;funcret
 11167  002584                     __end_of_ads1115_start_conversion:
 11168                           	opt stack 0
 11169                           tblptru	equ	0xFF8
 11170                           tblptrh	equ	0xFF7
 11171                           tblptrl	equ	0xFF6
 11172                           tablat	equ	0xFF5
 11173                           prodh	equ	0xFF4
 11174                           prodl	equ	0xFF3
 11175                           intcon	equ	0xFF2
 11176                           indf0	equ	0xFEF
 11177                           postinc0	equ	0xFEE
 11178                           fsr0h	equ	0xFEA
 11179                           fsr0l	equ	0xFE9
 11180                           wreg	equ	0xFE8
 11181                           postdec1	equ	0xFE5
 11182                           plusw1	equ	0xFE3
 11183                           fsr1h	equ	0xFE2
 11184                           fsr1l	equ	0xFE1
 11185                           indf2	equ	0xFDF
 11186                           postinc2	equ	0xFDE
 11187                           postdec2	equ	0xFDD
 11188                           plusw2	equ	0xFDB
 11189                           fsr2h	equ	0xFDA
 11190                           fsr2l	equ	0xFD9
 11191                           status	equ	0xFD8
 11192                           
 11193 ;; *************** function _ads1115_write_reg *****************
 11194 ;; Defined at:
 11195 ;;		line 15 in file "src/driver/ads1115.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  pAds1115        2    2[BANK0 ] PTR struct .
 11198 ;;		 -> ads1115Chip0(16), 
 11199 ;;  addr            1    4[BANK0 ] unsigned char 
 11200 ;;  value           2    5[BANK0 ] unsigned int 
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;		None
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11212 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;Total ram usage:        5 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:    7
 11219 ;; This function calls:
 11220 ;;		_iic_send_byte
 11221 ;;		_iic_start
 11222 ;;		_iic_stop
 11223 ;; This function is called by:
 11224 ;;		_ads1115_start_conversion
 11225 ;;		_ads1115_set_threshold_lo
 11226 ;;		_ads1115_set_threshold_hi
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text71
 11231  00096E                     __ptext71:
 11232                           	opt stack 0
 11233  00096E                     _ads1115_write_reg:
 11234                           	opt stack 22
 11235                           
 11236                           ;ads1115.c: 17: pAds1115->iic_start();
 11237                           
 11238                           ;incstack = 0
 11239  00096E  0100               	movlb	0	; () banked
 11240  000970  EE20 F006          	lfsr	2,6
 11241  000974  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11242  000976  26D9               	addwf	fsr2l,f,c
 11243  000978  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11244  00097A  22DA               	addwfc	fsr2h,f,c
 11245  00097C  D801               	call	u5458
 11246  00097E  D00A               	goto	u5459
 11247  000980                     u5458:
 11248  000980  0005               	push	
 11249  000982  6EFA               	movwf	pclath,c
 11250  000984  50DE               	movf	postinc2,w,c
 11251  000986  6EFD               	movwf	tosl,c
 11252  000988  50DE               	movf	postinc2,w,c
 11253  00098A  6EFE               	movwf	tosh,c
 11254  00098C  50F8               	movf	tblptru,w,c
 11255  00098E  6EFF               	movwf	tosu,c
 11256  000990  50FA               	movf	pclath,w,c
 11257  000992  0012               	return		;indir
 11258  000994                     u5459:
 11259                           
 11260                           ;ads1115.c: 19: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 11261  000994  0100               	movlb	0	; () banked
 11262  000996  EE20 F00A          	lfsr	2,10
 11263  00099A  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11264  00099C  26D9               	addwf	fsr2l,f,c
 11265  00099E  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11266  0009A0  22DA               	addwfc	fsr2h,f,c
 11267  0009A2  D801               	call	u5468
 11268  0009A4  D012               	goto	u5469
 11269  0009A6                     u5468:
 11270  0009A6  0005               	push	
 11271  0009A8  6EFA               	movwf	pclath,c
 11272  0009AA  50DE               	movf	postinc2,w,c
 11273  0009AC  6EFD               	movwf	tosl,c
 11274  0009AE  50DE               	movf	postinc2,w,c
 11275  0009B0  6EFE               	movwf	tosh,c
 11276  0009B2  50F8               	movf	tblptru,w,c
 11277  0009B4  6EFF               	movwf	tosu,c
 11278  0009B6  50FA               	movf	pclath,w,c
 11279  0009B8  0100               	movlb	0	; () banked
 11280  0009BA  EE20 F001          	lfsr	2,1
 11281  0009BE  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11282  0009C0  26D9               	addwf	fsr2l,f,c
 11283  0009C2  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11284  0009C4  22DA               	addwfc	fsr2h,f,c
 11285  0009C6  50DF               	movf	indf2,w,c
 11286  0009C8  0012               	return		;indir
 11287  0009CA                     u5469:
 11288                           
 11289                           ;ads1115.c: 20: pAds1115->iic_send_byte(addr);
 11290  0009CA  0100               	movlb	0	; () banked
 11291  0009CC  EE20 F00A          	lfsr	2,10
 11292  0009D0  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11293  0009D2  26D9               	addwf	fsr2l,f,c
 11294  0009D4  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11295  0009D6  22DA               	addwfc	fsr2h,f,c
 11296  0009D8  D801               	call	u5478
 11297  0009DA  D00C               	goto	u5479
 11298  0009DC                     u5478:
 11299  0009DC  0005               	push	
 11300  0009DE  6EFA               	movwf	pclath,c
 11301  0009E0  50DE               	movf	postinc2,w,c
 11302  0009E2  6EFD               	movwf	tosl,c
 11303  0009E4  50DE               	movf	postinc2,w,c
 11304  0009E6  6EFE               	movwf	tosh,c
 11305  0009E8  50F8               	movf	tblptru,w,c
 11306  0009EA  6EFF               	movwf	tosu,c
 11307  0009EC  50FA               	movf	pclath,w,c
 11308  0009EE  0100               	movlb	0	; () banked
 11309  0009F0  51C7               	movf	ads1115_write_reg@addr& (0+255),w,b
 11310  0009F2  0012               	return		;indir
 11311  0009F4                     u5479:
 11312                           
 11313                           ;ads1115.c: 22: pAds1115->iic_send_byte((uint8_t)(value>>8));
 11314  0009F4  0100               	movlb	0	; () banked
 11315  0009F6  EE20 F00A          	lfsr	2,10
 11316  0009FA  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11317  0009FC  26D9               	addwf	fsr2l,f,c
 11318  0009FE  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11319  000A00  22DA               	addwfc	fsr2h,f,c
 11320  000A02  D801               	call	u5488
 11321  000A04  D00C               	goto	u5489
 11322  000A06                     u5488:
 11323  000A06  0005               	push	
 11324  000A08  6EFA               	movwf	pclath,c
 11325  000A0A  50DE               	movf	postinc2,w,c
 11326  000A0C  6EFD               	movwf	tosl,c
 11327  000A0E  50DE               	movf	postinc2,w,c
 11328  000A10  6EFE               	movwf	tosh,c
 11329  000A12  50F8               	movf	tblptru,w,c
 11330  000A14  6EFF               	movwf	tosu,c
 11331  000A16  50FA               	movf	pclath,w,c
 11332  000A18  0100               	movlb	0	; () banked
 11333  000A1A  51C9               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 11334  000A1C  0012               	return		;indir
 11335  000A1E                     u5489:
 11336                           
 11337                           ;ads1115.c: 23: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 11338  000A1E  0100               	movlb	0	; () banked
 11339  000A20  EE20 F00A          	lfsr	2,10
 11340  000A24  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11341  000A26  26D9               	addwf	fsr2l,f,c
 11342  000A28  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11343  000A2A  22DA               	addwfc	fsr2h,f,c
 11344  000A2C  D801               	call	u5498
 11345  000A2E  D00C               	goto	u5499
 11346  000A30                     u5498:
 11347  000A30  0005               	push	
 11348  000A32  6EFA               	movwf	pclath,c
 11349  000A34  50DE               	movf	postinc2,w,c
 11350  000A36  6EFD               	movwf	tosl,c
 11351  000A38  50DE               	movf	postinc2,w,c
 11352  000A3A  6EFE               	movwf	tosh,c
 11353  000A3C  50F8               	movf	tblptru,w,c
 11354  000A3E  6EFF               	movwf	tosu,c
 11355  000A40  50FA               	movf	pclath,w,c
 11356  000A42  0100               	movlb	0	; () banked
 11357  000A44  51C8               	movf	ads1115_write_reg@value& (0+255),w,b
 11358  000A46  0012               	return		;indir
 11359  000A48                     u5499:
 11360                           
 11361                           ;ads1115.c: 24: pAds1115->iic_stop();
 11362  000A48  0100               	movlb	0	; () banked
 11363  000A4A  EE20 F008          	lfsr	2,8
 11364  000A4E  51C5               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 11365  000A50  26D9               	addwf	fsr2l,f,c
 11366  000A52  51C6               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 11367  000A54  22DA               	addwfc	fsr2h,f,c
 11368  000A56  D801               	call	u5508
 11369  000A58  0012               	return	
 11370  000A5A                     u5508:
 11371  000A5A  0005               	push	
 11372  000A5C  6EFA               	movwf	pclath,c
 11373  000A5E  50DE               	movf	postinc2,w,c
 11374  000A60  6EFD               	movwf	tosl,c
 11375  000A62  50DE               	movf	postinc2,w,c
 11376  000A64  6EFE               	movwf	tosh,c
 11377  000A66  50F8               	movf	tblptru,w,c
 11378  000A68  6EFF               	movwf	tosu,c
 11379  000A6A  50FA               	movf	pclath,w,c
 11380  000A6C  0012               	return		;indir
 11381  000A6E                     __end_of_ads1115_write_reg:
 11382                           	opt stack 0
 11383                           tosu	equ	0xFFF
 11384                           tosh	equ	0xFFE
 11385                           tosl	equ	0xFFD
 11386                           pclath	equ	0xFFA
 11387                           tblptru	equ	0xFF8
 11388                           tblptrh	equ	0xFF7
 11389                           tblptrl	equ	0xFF6
 11390                           tablat	equ	0xFF5
 11391                           prodh	equ	0xFF4
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           indf0	equ	0xFEF
 11395                           postinc0	equ	0xFEE
 11396                           fsr0h	equ	0xFEA
 11397                           fsr0l	equ	0xFE9
 11398                           wreg	equ	0xFE8
 11399                           postdec1	equ	0xFE5
 11400                           plusw1	equ	0xFE3
 11401                           fsr1h	equ	0xFE2
 11402                           fsr1l	equ	0xFE1
 11403                           indf2	equ	0xFDF
 11404                           postinc2	equ	0xFDE
 11405                           postdec2	equ	0xFDD
 11406                           plusw2	equ	0xFDB
 11407                           fsr2h	equ	0xFDA
 11408                           fsr2l	equ	0xFD9
 11409                           status	equ	0xFD8
 11410                           
 11411 ;; *************** function _ads1115_read_conversion *****************
 11412 ;; Defined at:
 11413 ;;		line 120 in file "src/driver/ads1115.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 11416 ;;		 -> ads1115Chip0(16), 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  result          2   11[BANK0 ] unsigned int 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  2    8[BANK0 ] unsigned int 
 11421 ;; Registers used:
 11422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;Total ram usage:        5 bytes
 11433 ;; Hardware stack levels used:    1
 11434 ;; Hardware stack levels required when called:    8
 11435 ;; This function calls:
 11436 ;;		_ads1115_read_reg
 11437 ;; This function is called by:
 11438 ;;		_main
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text72
 11443  002036                     __ptext72:
 11444                           	opt stack 0
 11445  002036                     _ads1115_read_conversion:
 11446                           	opt stack 22
 11447                           
 11448                           ;ads1115.c: 122: uint16_t result;
 11449                           ;ads1115.c: 123: result=ads1115_read_reg(pAds1115,(0x00));
 11450                           
 11451                           ;incstack = 0
 11452  002036  C0CB  F0C5         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 11453  00203A  C0CC  F0C6         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 11454  00203E  0E00               	movlw	0
 11455  002040  0100               	movlb	0	; () banked
 11456  002042  6FC7               	movwf	ads1115_read_reg@addr& (0+255),b
 11457  002044  ECA7  F002         	call	_ads1115_read_reg
 11458  002048  C0C5  F0CE         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 11459  00204C  C0C6  F0CF         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 11460                           
 11461                           ;ads1115.c: 124: if(pAds1115->chip<ADS1113){
 11462  002050  C0CB  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 11463  002054  C0CC  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 11464  002058  0E03               	movlw	3
 11465  00205A  60DF               	cpfslt	indf2,c
 11466  00205C  D00A               	goto	l7863
 11467                           
 11468                           ;ads1115.c: 125: result >>= 4;
 11469  00205E  0100               	movlb	0	; () banked
 11470  002060  3BCE               	swapf	ads1115_read_conversion@result& (0+255),f,b
 11471  002062  3BCF               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 11472  002064  0E0F               	movlw	15
 11473  002066  17CE               	andwf	ads1115_read_conversion@result& (0+255),f,b
 11474  002068  51CF               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 11475  00206A  0BF0               	andlw	240
 11476  00206C  13CE               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 11477  00206E  0E0F               	movlw	15
 11478  002070  17CF               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 11479  002072                     l7863:
 11480                           
 11481                           ;ads1115.c: 126: }
 11482                           ;ads1115.c: 127: return result;
 11483  002072  C0CE  F0CB         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 11484  002076  C0CF  F0CC         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 11485  00207A  0012               	return	
 11486  00207C                     __end_of_ads1115_read_conversion:
 11487                           	opt stack 0
 11488                           tosu	equ	0xFFF
 11489                           tosh	equ	0xFFE
 11490                           tosl	equ	0xFFD
 11491                           pclath	equ	0xFFA
 11492                           tblptru	equ	0xFF8
 11493                           tblptrh	equ	0xFF7
 11494                           tblptrl	equ	0xFF6
 11495                           tablat	equ	0xFF5
 11496                           prodh	equ	0xFF4
 11497                           prodl	equ	0xFF3
 11498                           intcon	equ	0xFF2
 11499                           indf0	equ	0xFEF
 11500                           postinc0	equ	0xFEE
 11501                           fsr0h	equ	0xFEA
 11502                           fsr0l	equ	0xFE9
 11503                           wreg	equ	0xFE8
 11504                           postdec1	equ	0xFE5
 11505                           plusw1	equ	0xFE3
 11506                           fsr1h	equ	0xFE2
 11507                           fsr1l	equ	0xFE1
 11508                           indf2	equ	0xFDF
 11509                           postinc2	equ	0xFDE
 11510                           postdec2	equ	0xFDD
 11511                           plusw2	equ	0xFDB
 11512                           fsr2h	equ	0xFDA
 11513                           fsr2l	equ	0xFD9
 11514                           status	equ	0xFD8
 11515                           
 11516 ;; *************** function _ads1115_read_reg *****************
 11517 ;; Defined at:
 11518 ;;		line 27 in file "src/driver/ads1115.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  pAds1115        2    2[BANK0 ] PTR struct .
 11521 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
 11522 ;;  addr            1    4[BANK0 ] unsigned char 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;  t16             2    6[BANK0 ] unsigned int 
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  2    2[BANK0 ] unsigned int 
 11527 ;; Registers used:
 11528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 0/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11534 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;Total ram usage:        6 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:    7
 11541 ;; This function calls:
 11542 ;;		_iic_received_byte_if_ack
 11543 ;;		_iic_send_byte
 11544 ;;		_iic_start
 11545 ;;		_iic_stop
 11546 ;; This function is called by:
 11547 ;;		_main
 11548 ;;		_ads1115_read_conversion
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	text73
 11553  00054E                     __ptext73:
 11554                           	opt stack 0
 11555  00054E                     _ads1115_read_reg:
 11556                           	opt stack 23
 11557                           
 11558                           ;ads1115.c: 29: uint16_t t16=0;
 11559                           
 11560                           ;incstack = 0
 11561  00054E  0E00               	movlw	0
 11562  000550  0100               	movlb	0	; () banked
 11563  000552  6FCA               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 11564  000554  0E00               	movlw	0
 11565  000556  6FC9               	movwf	ads1115_read_reg@t16& (0+255),b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;ads1115.c: 30: pAds1115->iic_start();
 11569  000558  0100               	movlb	0	; () banked
 11570  00055A  EE20 F006          	lfsr	2,6
 11571  00055E  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11572  000560  26D9               	addwf	fsr2l,f,c
 11573  000562  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11574  000564  22DA               	addwfc	fsr2h,f,c
 11575  000566  D801               	call	u5368
 11576  000568  D00A               	goto	l7647
 11577  00056A                     u5368:
 11578  00056A  0005               	push	
 11579  00056C  6EFA               	movwf	pclath,c
 11580  00056E  50DE               	movf	postinc2,w,c
 11581  000570  6EFD               	movwf	tosl,c
 11582  000572  50DE               	movf	postinc2,w,c
 11583  000574  6EFE               	movwf	tosh,c
 11584  000576  50F8               	movf	tblptru,w,c
 11585  000578  6EFF               	movwf	tosu,c
 11586  00057A  50FA               	movf	pclath,w,c
 11587  00057C  0012               	return		;indir
 11588  00057E                     l7647:
 11589                           
 11590                           ;ads1115.c: 32: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 11591  00057E  0100               	movlb	0	; () banked
 11592  000580  EE20 F00A          	lfsr	2,10
 11593  000584  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11594  000586  26D9               	addwf	fsr2l,f,c
 11595  000588  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11596  00058A  22DA               	addwfc	fsr2h,f,c
 11597  00058C  D801               	call	u5378
 11598  00058E  D012               	goto	l7649
 11599  000590                     u5378:
 11600  000590  0005               	push	
 11601  000592  6EFA               	movwf	pclath,c
 11602  000594  50DE               	movf	postinc2,w,c
 11603  000596  6EFD               	movwf	tosl,c
 11604  000598  50DE               	movf	postinc2,w,c
 11605  00059A  6EFE               	movwf	tosh,c
 11606  00059C  50F8               	movf	tblptru,w,c
 11607  00059E  6EFF               	movwf	tosu,c
 11608  0005A0  50FA               	movf	pclath,w,c
 11609  0005A2  0100               	movlb	0	; () banked
 11610  0005A4  EE20 F001          	lfsr	2,1
 11611  0005A8  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11612  0005AA  26D9               	addwf	fsr2l,f,c
 11613  0005AC  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11614  0005AE  22DA               	addwfc	fsr2h,f,c
 11615  0005B0  50DF               	movf	indf2,w,c
 11616  0005B2  0012               	return		;indir
 11617  0005B4                     l7649:
 11618                           
 11619                           ;ads1115.c: 33: pAds1115->iic_send_byte(addr);
 11620  0005B4  0100               	movlb	0	; () banked
 11621  0005B6  EE20 F00A          	lfsr	2,10
 11622  0005BA  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11623  0005BC  26D9               	addwf	fsr2l,f,c
 11624  0005BE  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11625  0005C0  22DA               	addwfc	fsr2h,f,c
 11626  0005C2  D801               	call	u5388
 11627  0005C4  D00C               	goto	l7651
 11628  0005C6                     u5388:
 11629  0005C6  0005               	push	
 11630  0005C8  6EFA               	movwf	pclath,c
 11631  0005CA  50DE               	movf	postinc2,w,c
 11632  0005CC  6EFD               	movwf	tosl,c
 11633  0005CE  50DE               	movf	postinc2,w,c
 11634  0005D0  6EFE               	movwf	tosh,c
 11635  0005D2  50F8               	movf	tblptru,w,c
 11636  0005D4  6EFF               	movwf	tosu,c
 11637  0005D6  50FA               	movf	pclath,w,c
 11638  0005D8  0100               	movlb	0	; () banked
 11639  0005DA  51C7               	movf	ads1115_read_reg@addr& (0+255),w,b
 11640  0005DC  0012               	return		;indir
 11641  0005DE                     l7651:
 11642                           
 11643                           ;ads1115.c: 34: pAds1115->iic_stop();
 11644  0005DE  0100               	movlb	0	; () banked
 11645  0005E0  EE20 F008          	lfsr	2,8
 11646  0005E4  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11647  0005E6  26D9               	addwf	fsr2l,f,c
 11648  0005E8  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11649  0005EA  22DA               	addwfc	fsr2h,f,c
 11650  0005EC  D801               	call	u5398
 11651  0005EE  D00A               	goto	l7653
 11652  0005F0                     u5398:
 11653  0005F0  0005               	push	
 11654  0005F2  6EFA               	movwf	pclath,c
 11655  0005F4  50DE               	movf	postinc2,w,c
 11656  0005F6  6EFD               	movwf	tosl,c
 11657  0005F8  50DE               	movf	postinc2,w,c
 11658  0005FA  6EFE               	movwf	tosh,c
 11659  0005FC  50F8               	movf	tblptru,w,c
 11660  0005FE  6EFF               	movwf	tosu,c
 11661  000600  50FA               	movf	pclath,w,c
 11662  000602  0012               	return		;indir
 11663  000604                     l7653:
 11664                           
 11665                           ;ads1115.c: 36: pAds1115->iic_start();
 11666  000604  0100               	movlb	0	; () banked
 11667  000606  EE20 F006          	lfsr	2,6
 11668  00060A  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11669  00060C  26D9               	addwf	fsr2l,f,c
 11670  00060E  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11671  000610  22DA               	addwfc	fsr2h,f,c
 11672  000612  D801               	call	u5408
 11673  000614  D00A               	goto	l7655
 11674  000616                     u5408:
 11675  000616  0005               	push	
 11676  000618  6EFA               	movwf	pclath,c
 11677  00061A  50DE               	movf	postinc2,w,c
 11678  00061C  6EFD               	movwf	tosl,c
 11679  00061E  50DE               	movf	postinc2,w,c
 11680  000620  6EFE               	movwf	tosh,c
 11681  000622  50F8               	movf	tblptru,w,c
 11682  000624  6EFF               	movwf	tosu,c
 11683  000626  50FA               	movf	pclath,w,c
 11684  000628  0012               	return		;indir
 11685  00062A                     l7655:
 11686                           
 11687                           ;ads1115.c: 37: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 11688  00062A  0100               	movlb	0	; () banked
 11689  00062C  EE20 F00A          	lfsr	2,10
 11690  000630  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11691  000632  26D9               	addwf	fsr2l,f,c
 11692  000634  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11693  000636  22DA               	addwfc	fsr2h,f,c
 11694  000638  D801               	call	u5418
 11695  00063A  D016               	goto	l7657
 11696  00063C                     u5418:
 11697  00063C  0005               	push	
 11698  00063E  6EFA               	movwf	pclath,c
 11699  000640  50DE               	movf	postinc2,w,c
 11700  000642  6EFD               	movwf	tosl,c
 11701  000644  50DE               	movf	postinc2,w,c
 11702  000646  6EFE               	movwf	tosh,c
 11703  000648  50F8               	movf	tblptru,w,c
 11704  00064A  6EFF               	movwf	tosu,c
 11705  00064C  50FA               	movf	pclath,w,c
 11706  00064E  0100               	movlb	0	; () banked
 11707  000650  EE20 F001          	lfsr	2,1
 11708  000654  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11709  000656  26D9               	addwf	fsr2l,f,c
 11710  000658  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11711  00065A  22DA               	addwfc	fsr2h,f,c
 11712  00065C  50DF               	movf	indf2,w,c
 11713  00065E  0100               	movlb	0	; () banked
 11714  000660  6FC8               	movwf	??_ads1115_read_reg& (0+255),b
 11715  000662  0100               	movlb	0	; () banked
 11716  000664  29C8               	incf	??_ads1115_read_reg& (0+255),w,b
 11717  000666  0012               	return		;indir
 11718  000668                     l7657:
 11719                           
 11720                           ;ads1115.c: 38: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 11721  000668  0100               	movlb	0	; () banked
 11722  00066A  EE20 F00E          	lfsr	2,14
 11723  00066E  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11724  000670  26D9               	addwf	fsr2l,f,c
 11725  000672  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11726  000674  22DA               	addwfc	fsr2h,f,c
 11727  000676  D801               	call	u5428
 11728  000678  D00B               	goto	u5429
 11729  00067A                     u5428:
 11730  00067A  0005               	push	
 11731  00067C  6EFA               	movwf	pclath,c
 11732  00067E  50DE               	movf	postinc2,w,c
 11733  000680  6EFD               	movwf	tosl,c
 11734  000682  50DE               	movf	postinc2,w,c
 11735  000684  6EFE               	movwf	tosh,c
 11736  000686  50F8               	movf	tblptru,w,c
 11737  000688  6EFF               	movwf	tosu,c
 11738  00068A  50FA               	movf	pclath,w,c
 11739  00068C  0E00               	movlw	0
 11740  00068E  0012               	return		;indir
 11741  000690                     u5429:
 11742  000690  0100               	movlb	0	; () banked
 11743  000692  6FC8               	movwf	??_ads1115_read_reg& (0+255),b
 11744  000694  0100               	movlb	0	; () banked
 11745  000696  51C8               	movf	??_ads1115_read_reg& (0+255),w,b
 11746  000698  0100               	movlb	0	; () banked
 11747  00069A  6FC9               	movwf	ads1115_read_reg@t16& (0+255),b
 11748  00069C  6BCA               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;ads1115.c: 39: t16<<=8;
 11752  00069E  0100               	movlb	0	; () banked
 11753  0006A0  51C9               	movf	ads1115_read_reg@t16& (0+255),w,b
 11754  0006A2  6FCA               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 11755  0006A4  6BC9               	clrf	ads1115_read_reg@t16& (0+255),b
 11756                           
 11757                           ;ads1115.c: 40: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 11758  0006A6  0100               	movlb	0	; () banked
 11759  0006A8  EE20 F00E          	lfsr	2,14
 11760  0006AC  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11761  0006AE  26D9               	addwf	fsr2l,f,c
 11762  0006B0  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11763  0006B2  22DA               	addwfc	fsr2h,f,c
 11764  0006B4  D801               	call	u5438
 11765  0006B6  D00B               	goto	u5439
 11766  0006B8                     u5438:
 11767  0006B8  0005               	push	
 11768  0006BA  6EFA               	movwf	pclath,c
 11769  0006BC  50DE               	movf	postinc2,w,c
 11770  0006BE  6EFD               	movwf	tosl,c
 11771  0006C0  50DE               	movf	postinc2,w,c
 11772  0006C2  6EFE               	movwf	tosh,c
 11773  0006C4  50F8               	movf	tblptru,w,c
 11774  0006C6  6EFF               	movwf	tosu,c
 11775  0006C8  50FA               	movf	pclath,w,c
 11776  0006CA  0E00               	movlw	0
 11777  0006CC  0012               	return		;indir
 11778  0006CE                     u5439:
 11779  0006CE  0100               	movlb	0	; () banked
 11780  0006D0  6FC8               	movwf	??_ads1115_read_reg& (0+255),b
 11781  0006D2  0100               	movlb	0	; () banked
 11782  0006D4  51C8               	movf	??_ads1115_read_reg& (0+255),w,b
 11783  0006D6  0100               	movlb	0	; () banked
 11784  0006D8  13C9               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 11785                           
 11786                           ;ads1115.c: 42: pAds1115->iic_stop();
 11787  0006DA  0100               	movlb	0	; () banked
 11788  0006DC  EE20 F008          	lfsr	2,8
 11789  0006E0  51C5               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 11790  0006E2  26D9               	addwf	fsr2l,f,c
 11791  0006E4  51C6               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 11792  0006E6  22DA               	addwfc	fsr2h,f,c
 11793  0006E8  D801               	call	u5448
 11794  0006EA  D00A               	goto	l7661
 11795  0006EC                     u5448:
 11796  0006EC  0005               	push	
 11797  0006EE  6EFA               	movwf	pclath,c
 11798  0006F0  50DE               	movf	postinc2,w,c
 11799  0006F2  6EFD               	movwf	tosl,c
 11800  0006F4  50DE               	movf	postinc2,w,c
 11801  0006F6  6EFE               	movwf	tosh,c
 11802  0006F8  50F8               	movf	tblptru,w,c
 11803  0006FA  6EFF               	movwf	tosu,c
 11804  0006FC  50FA               	movf	pclath,w,c
 11805  0006FE  0012               	return		;indir
 11806  000700                     l7661:
 11807                           
 11808                           ;ads1115.c: 43: return t16;
 11809  000700  C0C9  F0C5         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 11810  000704  C0CA  F0C6         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 11811  000708  0012               	return	
 11812  00070A                     __end_of_ads1115_read_reg:
 11813                           	opt stack 0
 11814                           tosu	equ	0xFFF
 11815                           tosh	equ	0xFFE
 11816                           tosl	equ	0xFFD
 11817                           pclath	equ	0xFFA
 11818                           tblptru	equ	0xFF8
 11819                           tblptrh	equ	0xFF7
 11820                           tblptrl	equ	0xFF6
 11821                           tablat	equ	0xFF5
 11822                           prodh	equ	0xFF4
 11823                           prodl	equ	0xFF3
 11824                           intcon	equ	0xFF2
 11825                           indf0	equ	0xFEF
 11826                           postinc0	equ	0xFEE
 11827                           fsr0h	equ	0xFEA
 11828                           fsr0l	equ	0xFE9
 11829                           wreg	equ	0xFE8
 11830                           postdec1	equ	0xFE5
 11831                           plusw1	equ	0xFE3
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function _iic_start *****************
 11843 ;; Defined at:
 11844 ;;		line 18 in file "src/driver/i2c.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		status,2, status,0
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    4
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_ads1115_init
 11869 ;;		_at24c02_init
 11870 ;;		_pcf8574_init
 11871 ;;		_ads1115_read_reg
 11872 ;;		_ads1115_write_reg
 11873 ;;		_pcf8574_write_singel
 11874 ;;		_ad421_write_via_pcf8574
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text74
 11879  002208                     __ptext74:
 11880                           	opt stack 0
 11881  002208                     _iic_start:
 11882                           	opt stack 24
 11883                           
 11884                           ;incstack = 0
 11885                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 11886  002208  9694               	bcf	3988,3,c	;volatile
 11887                           
 11888                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 11889  00220A  9894               	bcf	3988,4,c	;volatile
 11890                           
 11891                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 11892  00220C  888B               	bsf	3979,4,c	;volatile
 11893                           
 11894                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 11895  00220E  868B               	bsf	3979,3,c	;volatile
 11896                           
 11897                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 11898  002210  F000               	nop	
 11899  002212  F000               	nop	
 11900  002214  F000               	nop	
 11901  002216  F000               	nop	
 11902  002218  F000               	nop	
 11903  00221A  F000               	nop	
 11904  00221C  F000               	nop	
 11905  00221E  F000               	nop	
 11906  002220  F000               	nop	
 11907  002222  F000               	nop	
 11908  002224  F000               	nop	
 11909  002226  F000               	nop	
 11910                           
 11911                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 11912  002228  988B               	bcf	3979,4,c	;volatile
 11913                           
 11914                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 11915  00222A  F000               	nop	
 11916  00222C  F000               	nop	
 11917  00222E  F000               	nop	
 11918  002230  F000               	nop	
 11919  002232  F000               	nop	
 11920  002234  F000               	nop	
 11921  002236  F000               	nop	
 11922  002238  F000               	nop	
 11923  00223A  F000               	nop	
 11924  00223C  F000               	nop	
 11925  00223E  F000               	nop	
 11926  002240  F000               	nop	
 11927                           
 11928                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 11929  002242  968B               	bcf	3979,3,c	;volatile
 11930  002244  0012               	return	
 11931  002246                     __end_of_iic_start:
 11932                           	opt stack 0
 11933                           tosu	equ	0xFFF
 11934                           tosh	equ	0xFFE
 11935                           tosl	equ	0xFFD
 11936                           pclath	equ	0xFFA
 11937                           tblptru	equ	0xFF8
 11938                           tblptrh	equ	0xFF7
 11939                           tblptrl	equ	0xFF6
 11940                           tablat	equ	0xFF5
 11941                           prodh	equ	0xFF4
 11942                           prodl	equ	0xFF3
 11943                           intcon	equ	0xFF2
 11944                           indf0	equ	0xFEF
 11945                           postinc0	equ	0xFEE
 11946                           fsr0h	equ	0xFEA
 11947                           fsr0l	equ	0xFE9
 11948                           wreg	equ	0xFE8
 11949                           postdec1	equ	0xFE5
 11950                           plusw1	equ	0xFE3
 11951                           fsr1h	equ	0xFE2
 11952                           fsr1l	equ	0xFE1
 11953                           indf2	equ	0xFDF
 11954                           postinc2	equ	0xFDE
 11955                           postdec2	equ	0xFDD
 11956                           plusw2	equ	0xFDB
 11957                           fsr2h	equ	0xFDA
 11958                           fsr2l	equ	0xFD9
 11959                           status	equ	0xFD8
 11960                           
 11961 ;; *************** function _iic_send_byte *****************
 11962 ;; Defined at:
 11963 ;;		line 80 in file "src/driver/i2c.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;  x               1    wreg     unsigned char 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;  x               1    0[BANK0 ] unsigned char 
 11968 ;;  i               1    1[BANK0 ] unsigned char 
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      unsigned char 
 11971 ;; Registers used:
 11972 ;;		wreg, status,2, status,0, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;Total ram usage:        2 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    6
 11985 ;; This function calls:
 11986 ;;		_iic_waite_ack
 11987 ;; This function is called by:
 11988 ;;		_ads1115_init
 11989 ;;		_at24c02_init
 11990 ;;		_pcf8574_init
 11991 ;;		_ads1115_read_reg
 11992 ;;		_ads1115_write_reg
 11993 ;;		_pcf8574_write_singel
 11994 ;;		_ad421_write_via_pcf8574
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text75
 11999  001ACE                     __ptext75:
 12000                           	opt stack 0
 12001  001ACE                     _iic_send_byte:
 12002                           	opt stack 22
 12003                           
 12004                           ;incstack = 0
 12005                           ;iic_send_byte@x stored from wreg
 12006  001ACE  0100               	movlb	0	; () banked
 12007  001AD0  6FC3               	movwf	iic_send_byte@x& (0+255),b
 12008                           
 12009                           ;i2c.c: 82: uint8_t i;
 12010                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 12011  001AD2  9694               	bcf	3988,3,c	;volatile
 12012                           
 12013                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 12014  001AD4  9894               	bcf	3988,4,c	;volatile
 12015                           
 12016                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 12017  001AD6  968B               	bcf	3979,3,c	;volatile
 12018                           
 12019                           ;i2c.c: 86: for(i=0;i<8;i++){
 12020  001AD8  0E00               	movlw	0
 12021  001ADA  0100               	movlb	0	; () banked
 12022  001ADC  6FC4               	movwf	iic_send_byte@i& (0+255),b
 12023  001ADE                     l7303:
 12024                           
 12025                           ; BSR set to: 0
 12026  001ADE  0E07               	movlw	7
 12027  001AE0  0100               	movlb	0	; () banked
 12028  001AE2  65C4               	cpfsgt	iic_send_byte@i& (0+255),b
 12029  001AE4  D001               	goto	l659
 12030  001AE6  D026               	goto	l7363
 12031  001AE8                     l659:
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;i2c.c: 87: if(x&0x80){
 12035  001AE8  0100               	movlb	0	; () banked
 12036  001AEA  AFC3               	btfss	iic_send_byte@x& (0+255),7,b
 12037  001AEC  D002               	goto	l7309
 12038                           
 12039                           ; BSR set to: 0
 12040                           
 12041                           ; BSR set to: 0
 12042                           
 12043                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 12044  001AEE  888B               	bsf	3979,4,c	;volatile
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;i2c.c: 89: }
 12048  001AF0  D001               	goto	l667
 12049  001AF2                     l7309:
 12050                           
 12051                           ; BSR set to: 0
 12052  001AF2  988B               	bcf	3979,4,c	;volatile
 12053  001AF4                     l667:
 12054                           
 12055                           ; BSR set to: 0
 12056  001AF4  868B               	bsf	3979,3,c	;volatile
 12057                           
 12058                           ; BSR set to: 0
 12059                           
 12060                           ; BSR set to: 0
 12061                           
 12062                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12063                           
 12064                           ; BSR set to: 0
 12065  001AF6  F000               	nop	
 12066  001AF8  F000               	nop	
 12067  001AFA  F000               	nop	
 12068  001AFC  F000               	nop	
 12069  001AFE  F000               	nop	
 12070  001B00  F000               	nop	
 12071  001B02  F000               	nop	
 12072  001B04  F000               	nop	
 12073  001B06  F000               	nop	
 12074  001B08  F000               	nop	
 12075  001B0A  F000               	nop	
 12076  001B0C  F000               	nop	
 12077                           
 12078                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 12079  001B0E  968B               	bcf	3979,3,c	;volatile
 12080                           
 12081                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12082  001B10  F000               	nop	
 12083  001B12  F000               	nop	
 12084  001B14  F000               	nop	
 12085  001B16  F000               	nop	
 12086  001B18  F000               	nop	
 12087  001B1A  F000               	nop	
 12088  001B1C  F000               	nop	
 12089  001B1E  F000               	nop	
 12090  001B20  F000               	nop	
 12091  001B22  F000               	nop	
 12092  001B24  F000               	nop	
 12093  001B26  F000               	nop	
 12094                           
 12095                           ;i2c.c: 97: x<<=1;
 12096  001B28  0100               	movlb	0	; () banked
 12097  001B2A  90D8               	bcf	status,0,c
 12098  001B2C  37C3               	rlcf	iic_send_byte@x& (0+255),f,b
 12099                           
 12100                           ; BSR set to: 0
 12101  001B2E  0100               	movlb	0	; () banked
 12102  001B30  2BC4               	incf	iic_send_byte@i& (0+255),f,b
 12103  001B32  D7D5               	goto	l7303
 12104  001B34                     l7363:
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;i2c.c: 98: }
 12108                           ;i2c.c: 99: return iic_waite_ack();
 12109                           ;	Return value of _iic_send_byte is never used
 12110  001B34  EC92  F00E         	call	_iic_waite_ack
 12111  001B38  0012               	return	
 12112  001B3A                     __end_of_iic_send_byte:
 12113                           	opt stack 0
 12114                           tosu	equ	0xFFF
 12115                           tosh	equ	0xFFE
 12116                           tosl	equ	0xFFD
 12117                           pclath	equ	0xFFA
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           indf0	equ	0xFEF
 12126                           postinc0	equ	0xFEE
 12127                           fsr0h	equ	0xFEA
 12128                           fsr0l	equ	0xFE9
 12129                           wreg	equ	0xFE8
 12130                           postdec1	equ	0xFE5
 12131                           plusw1	equ	0xFE3
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           plusw2	equ	0xFDB
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function _iic_waite_ack *****************
 12143 ;; Defined at:
 12144 ;;		line 60 in file "src/driver/i2c.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  timeout         1   31[COMRAM] unsigned char 
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  1    wreg      unsigned char 
 12151 ;; Registers used:
 12152 ;;		wreg, status,2, status,0, cstack
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;Total ram usage:        1 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:    5
 12165 ;; This function calls:
 12166 ;;		_iic_stop
 12167 ;; This function is called by:
 12168 ;;		_ads1115_init
 12169 ;;		_iic_send_byte
 12170 ;;		_at24c02_init
 12171 ;;		_pcf8574_init
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text76
 12176  001D24                     __ptext76:
 12177                           	opt stack 0
 12178  001D24                     _iic_waite_ack:
 12179                           	opt stack 22
 12180                           
 12181                           ;i2c.c: 62: uint8_t timeout=200;
 12182                           
 12183                           ;incstack = 0
 12184  001D24  0EC8               	movlw	200
 12185  001D26  6E20               	movwf	iic_waite_ack@timeout,c
 12186                           
 12187                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 12188  001D28  9694               	bcf	3988,3,c	;volatile
 12189                           
 12190                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 12191  001D2A  8894               	bsf	3988,4,c	;volatile
 12192                           
 12193                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 12194  001D2C  968B               	bcf	3979,3,c	;volatile
 12195                           
 12196                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12197  001D2E  F000               	nop	
 12198  001D30  F000               	nop	
 12199  001D32  F000               	nop	
 12200  001D34  F000               	nop	
 12201  001D36  F000               	nop	
 12202  001D38  F000               	nop	
 12203  001D3A  F000               	nop	
 12204  001D3C  F000               	nop	
 12205  001D3E  F000               	nop	
 12206  001D40  F000               	nop	
 12207  001D42  F000               	nop	
 12208  001D44  F000               	nop	
 12209                           
 12210                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 12211  001D46  868B               	bsf	3979,3,c	;volatile
 12212                           
 12213                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12214  001D48  F000               	nop	
 12215  001D4A  F000               	nop	
 12216  001D4C  F000               	nop	
 12217  001D4E  F000               	nop	
 12218  001D50  F000               	nop	
 12219  001D52  F000               	nop	
 12220  001D54  F000               	nop	
 12221  001D56  F000               	nop	
 12222  001D58  F000               	nop	
 12223  001D5A  F000               	nop	
 12224  001D5C  F000               	nop	
 12225  001D5E  F000               	nop	
 12226                           
 12227                           ;i2c.c: 69: while(timeout--){
 12228  001D60  D002               	goto	l7011
 12229  001D62                     l644:
 12230                           
 12231                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 12232  001D62  A882               	btfss	3970,4,c	;volatile
 12233  001D64  D004               	goto	l7013
 12234  001D66                     l7011:
 12235  001D66  0620               	decf	iic_waite_ack@timeout,f,c
 12236  001D68  2820               	incf	iic_waite_ack@timeout,w,c
 12237  001D6A  A4D8               	btfss	status,2,c
 12238  001D6C  D7FA               	goto	l644
 12239  001D6E                     l7013:
 12240                           
 12241                           ;i2c.c: 71: }
 12242                           ;i2c.c: 72: if(!timeout){
 12243  001D6E  5020               	movf	iic_waite_ack@timeout,w,c
 12244  001D70  A4D8               	btfss	status,2,c
 12245  001D72  D004               	goto	l7021
 12246                           
 12247                           ;i2c.c: 73: iic_stop();
 12248  001D74  EC41  F011         	call	_iic_stop	;wreg free
 12249                           
 12250                           ;i2c.c: 74: return 0;
 12251  001D78  0E00               	movlw	0
 12252  001D7A  0012               	return	
 12253  001D7C                     l7021:
 12254  001D7C  968B               	bcf	3979,3,c	;volatile
 12255                           
 12256                           ;i2c.c: 77: return 1;
 12257  001D7E  0E01               	movlw	1
 12258  001D80  0012               	return	
 12259  001D82                     __end_of_iic_waite_ack:
 12260                           	opt stack 0
 12261                           tosu	equ	0xFFF
 12262                           tosh	equ	0xFFE
 12263                           tosl	equ	0xFFD
 12264                           pclath	equ	0xFFA
 12265                           tblptru	equ	0xFF8
 12266                           tblptrh	equ	0xFF7
 12267                           tblptrl	equ	0xFF6
 12268                           tablat	equ	0xFF5
 12269                           prodh	equ	0xFF4
 12270                           prodl	equ	0xFF3
 12271                           intcon	equ	0xFF2
 12272                           indf0	equ	0xFEF
 12273                           postinc0	equ	0xFEE
 12274                           fsr0h	equ	0xFEA
 12275                           fsr0l	equ	0xFE9
 12276                           wreg	equ	0xFE8
 12277                           postdec1	equ	0xFE5
 12278                           plusw1	equ	0xFE3
 12279                           fsr1h	equ	0xFE2
 12280                           fsr1l	equ	0xFE1
 12281                           indf2	equ	0xFDF
 12282                           postinc2	equ	0xFDE
 12283                           postdec2	equ	0xFDD
 12284                           plusw2	equ	0xFDB
 12285                           fsr2h	equ	0xFDA
 12286                           fsr2l	equ	0xFD9
 12287                           status	equ	0xFD8
 12288                           
 12289 ;; *************** function _iic_stop *****************
 12290 ;; Defined at:
 12291 ;;		line 32 in file "src/driver/i2c.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    4
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_ads1115_init
 12316 ;;		_iic_waite_ack
 12317 ;;		_at24c02_init
 12318 ;;		_pcf8574_init
 12319 ;;		_ads1115_read_reg
 12320 ;;		_ads1115_write_reg
 12321 ;;		_pcf8574_write_singel
 12322 ;;		_ad421_write_via_pcf8574
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text77
 12327  002282                     __ptext77:
 12328                           	opt stack 0
 12329  002282                     _iic_stop:
 12330                           	opt stack 24
 12331                           
 12332                           ;incstack = 0
 12333                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 12334  002282  9694               	bcf	3988,3,c	;volatile
 12335                           
 12336                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 12337  002284  9894               	bcf	3988,4,c	;volatile
 12338                           
 12339                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 12340  002286  988B               	bcf	3979,4,c	;volatile
 12341                           
 12342                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12343  002288  F000               	nop	
 12344  00228A  F000               	nop	
 12345  00228C  F000               	nop	
 12346  00228E  F000               	nop	
 12347  002290  F000               	nop	
 12348  002292  F000               	nop	
 12349  002294  F000               	nop	
 12350  002296  F000               	nop	
 12351  002298  F000               	nop	
 12352  00229A  F000               	nop	
 12353  00229C  F000               	nop	
 12354  00229E  F000               	nop	
 12355                           
 12356                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 12357  0022A0  868B               	bsf	3979,3,c	;volatile
 12358                           
 12359                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12360  0022A2  F000               	nop	
 12361  0022A4  F000               	nop	
 12362  0022A6  F000               	nop	
 12363  0022A8  F000               	nop	
 12364  0022AA  F000               	nop	
 12365  0022AC  F000               	nop	
 12366  0022AE  F000               	nop	
 12367  0022B0  F000               	nop	
 12368  0022B2  F000               	nop	
 12369  0022B4  F000               	nop	
 12370  0022B6  F000               	nop	
 12371  0022B8  F000               	nop	
 12372                           
 12373                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 12374  0022BA  888B               	bsf	3979,4,c	;volatile
 12375  0022BC  0012               	return	
 12376  0022BE                     __end_of_iic_stop:
 12377                           	opt stack 0
 12378                           tosu	equ	0xFFF
 12379                           tosh	equ	0xFFE
 12380                           tosl	equ	0xFFD
 12381                           pclath	equ	0xFFA
 12382                           tblptru	equ	0xFF8
 12383                           tblptrh	equ	0xFF7
 12384                           tblptrl	equ	0xFF6
 12385                           tablat	equ	0xFF5
 12386                           prodh	equ	0xFF4
 12387                           prodl	equ	0xFF3
 12388                           intcon	equ	0xFF2
 12389                           indf0	equ	0xFEF
 12390                           postinc0	equ	0xFEE
 12391                           fsr0h	equ	0xFEA
 12392                           fsr0l	equ	0xFE9
 12393                           wreg	equ	0xFE8
 12394                           postdec1	equ	0xFE5
 12395                           plusw1	equ	0xFE3
 12396                           fsr1h	equ	0xFE2
 12397                           fsr1l	equ	0xFE1
 12398                           indf2	equ	0xFDF
 12399                           postinc2	equ	0xFDE
 12400                           postdec2	equ	0xFDD
 12401                           plusw2	equ	0xFDB
 12402                           fsr2h	equ	0xFDA
 12403                           fsr2l	equ	0xFD9
 12404                           status	equ	0xFD8
 12405                           
 12406 ;; *************** function _iic_received_byte_if_ack *****************
 12407 ;; Defined at:
 12408 ;;		line 121 in file "src/driver/i2c.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;  ack             1    wreg     unsigned char 
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;  ack             1    0[BANK0 ] unsigned char 
 12413 ;;  ret             1    1[BANK0 ] unsigned char 
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      unsigned char 
 12416 ;; Registers used:
 12417 ;;		wreg, status,2, status,0, cstack
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;Total ram usage:        2 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:    5
 12430 ;; This function calls:
 12431 ;;		_iic_received_byte
 12432 ;;		_iic_send_ack
 12433 ;; This function is called by:
 12434 ;;		_ads1115_init
 12435 ;;		_at24c02_init
 12436 ;;		_pcf8574_init
 12437 ;;		_ads1115_read_reg
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text78
 12442  002616                     __ptext78:
 12443                           	opt stack 0
 12444  002616                     _iic_received_byte_if_ack:
 12445                           	opt stack 24
 12446                           
 12447                           ;incstack = 0
 12448                           ;iic_received_byte_if_ack@ack stored from wreg
 12449  002616  0100               	movlb	0	; () banked
 12450  002618  6FC3               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 12451                           
 12452                           ;i2c.c: 123: uint8_t ret=0;
 12453  00261A  0E00               	movlw	0
 12454  00261C  0100               	movlb	0	; () banked
 12455  00261E  6FC4               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;i2c.c: 124: ret=iic_received_byte();
 12459  002620  EC77  F00F         	call	_iic_received_byte	;wreg free
 12460  002624  0100               	movlb	0	; () banked
 12461  002626  6FC4               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;i2c.c: 125: iic_send_ack(ack);
 12465  002628  0100               	movlb	0	; () banked
 12466  00262A  51C3               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 12467  00262C  ECF6  F00F         	call	_iic_send_ack
 12468                           
 12469                           ;i2c.c: 126: return ret;
 12470  002630  0100               	movlb	0	; () banked
 12471  002632  51C4               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 12472  002634  0012               	return	
 12473  002636                     __end_of_iic_received_byte_if_ack:
 12474                           	opt stack 0
 12475                           tosu	equ	0xFFF
 12476                           tosh	equ	0xFFE
 12477                           tosl	equ	0xFFD
 12478                           pclath	equ	0xFFA
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           intcon	equ	0xFF2
 12486                           indf0	equ	0xFEF
 12487                           postinc0	equ	0xFEE
 12488                           fsr0h	equ	0xFEA
 12489                           fsr0l	equ	0xFE9
 12490                           wreg	equ	0xFE8
 12491                           postdec1	equ	0xFE5
 12492                           plusw1	equ	0xFE3
 12493                           fsr1h	equ	0xFE2
 12494                           fsr1l	equ	0xFE1
 12495                           indf2	equ	0xFDF
 12496                           postinc2	equ	0xFDE
 12497                           postdec2	equ	0xFDD
 12498                           plusw2	equ	0xFDB
 12499                           fsr2h	equ	0xFDA
 12500                           fsr2l	equ	0xFD9
 12501                           status	equ	0xFD8
 12502                           
 12503 ;; *************** function _iic_send_ack *****************
 12504 ;; Defined at:
 12505 ;;		line 44 in file "src/driver/i2c.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;  ack             1    wreg     char 
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;  ack             1   31[COMRAM] char 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, status,2, status,0
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;Total ram usage:        1 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:    4
 12526 ;; This function calls:
 12527 ;;		Nothing
 12528 ;; This function is called by:
 12529 ;;		_iic_received_byte_if_ack
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text79
 12534  001FEC                     __ptext79:
 12535                           	opt stack 0
 12536  001FEC                     _iic_send_ack:
 12537                           	opt stack 24
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;incstack = 0
 12541                           ;iic_send_ack@ack stored from wreg
 12542  001FEC  6E20               	movwf	iic_send_ack@ack,c
 12543                           
 12544                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 12545  001FEE  9694               	bcf	3988,3,c	;volatile
 12546                           
 12547                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 12548  001FF0  9894               	bcf	3988,4,c	;volatile
 12549                           
 12550                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 12551  001FF2  968B               	bcf	3979,3,c	;volatile
 12552                           
 12553                           ;i2c.c: 49: if(ack){
 12554  001FF4  5020               	movf	iic_send_ack@ack,w,c
 12555  001FF6  B4D8               	btfsc	status,2,c
 12556  001FF8  D002               	goto	l6901
 12557                           
 12558                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 12559  001FFA  888B               	bsf	3979,4,c	;volatile
 12560                           
 12561                           ;i2c.c: 51: }else{
 12562  001FFC  D001               	goto	l6903
 12563  001FFE                     l6901:
 12564  001FFE  988B               	bcf	3979,4,c	;volatile
 12565  002000                     l6903:
 12566  002000  F000               	nop	
 12567  002002  F000               	nop	
 12568  002004  F000               	nop	
 12569  002006  F000               	nop	
 12570  002008  F000               	nop	
 12571  00200A  F000               	nop	
 12572  00200C  F000               	nop	
 12573  00200E  F000               	nop	
 12574  002010  F000               	nop	
 12575  002012  F000               	nop	
 12576  002014  F000               	nop	
 12577  002016  F000               	nop	
 12578                           
 12579                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 12580  002018  868B               	bsf	3979,3,c	;volatile
 12581                           
 12582                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 12583  00201A  F000               	nop	
 12584  00201C  F000               	nop	
 12585  00201E  F000               	nop	
 12586  002020  F000               	nop	
 12587  002022  F000               	nop	
 12588  002024  F000               	nop	
 12589  002026  F000               	nop	
 12590  002028  F000               	nop	
 12591  00202A  F000               	nop	
 12592  00202C  F000               	nop	
 12593  00202E  F000               	nop	
 12594  002030  F000               	nop	
 12595                           
 12596                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 12597  002032  968B               	bcf	3979,3,c	;volatile
 12598  002034  0012               	return	
 12599  002036                     __end_of_iic_send_ack:
 12600                           	opt stack 0
 12601                           tosu	equ	0xFFF
 12602                           tosh	equ	0xFFE
 12603                           tosl	equ	0xFFD
 12604                           pclath	equ	0xFFA
 12605                           tblptru	equ	0xFF8
 12606                           tblptrh	equ	0xFF7
 12607                           tblptrl	equ	0xFF6
 12608                           tablat	equ	0xFF5
 12609                           prodh	equ	0xFF4
 12610                           prodl	equ	0xFF3
 12611                           intcon	equ	0xFF2
 12612                           indf0	equ	0xFEF
 12613                           postinc0	equ	0xFEE
 12614                           fsr0h	equ	0xFEA
 12615                           fsr0l	equ	0xFE9
 12616                           wreg	equ	0xFE8
 12617                           postdec1	equ	0xFE5
 12618                           plusw1	equ	0xFE3
 12619                           fsr1h	equ	0xFE2
 12620                           fsr1l	equ	0xFE1
 12621                           indf2	equ	0xFDF
 12622                           postinc2	equ	0xFDE
 12623                           postdec2	equ	0xFDD
 12624                           plusw2	equ	0xFDB
 12625                           fsr2h	equ	0xFDA
 12626                           fsr2l	equ	0xFD9
 12627                           status	equ	0xFD8
 12628                           
 12629 ;; *************** function _iic_received_byte *****************
 12630 ;; Defined at:
 12631 ;;		line 102 in file "src/driver/i2c.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;		None
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  i               1   32[COMRAM] unsigned char 
 12636 ;;  ret             1   31[COMRAM] unsigned char 
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      unsigned char 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12650 ;;Total ram usage:        2 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    4
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_iic_received_byte_if_ack
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	text80
 12661  001EEE                     __ptext80:
 12662                           	opt stack 0
 12663  001EEE                     _iic_received_byte:
 12664                           	opt stack 24
 12665                           
 12666                           ;i2c.c: 104: uint8_t i;
 12667                           ;i2c.c: 105: uint8_t ret=0;
 12668                           
 12669                           ;incstack = 0
 12670  001EEE  0E00               	movlw	0
 12671  001EF0  6E20               	movwf	iic_received_byte@ret,c
 12672                           
 12673                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 12674  001EF2  9694               	bcf	3988,3,c	;volatile
 12675                           
 12676                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 12677  001EF4  8894               	bsf	3988,4,c	;volatile
 12678                           
 12679                           ;i2c.c: 108: for(i=0;i<8;i++){
 12680  001EF6  0E00               	movlw	0
 12681  001EF8  6E21               	movwf	iic_received_byte@i,c
 12682  001EFA                     l7033:
 12683  001EFA  0E07               	movlw	7
 12684  001EFC  6421               	cpfsgt	iic_received_byte@i,c
 12685  001EFE  D001               	goto	l7037
 12686  001F00  D020               	goto	l7097
 12687  001F02                     l7037:
 12688                           
 12689                           ;i2c.c: 109: ret<<=1;
 12690  001F02  90D8               	bcf	status,0,c
 12691  001F04  3620               	rlcf	iic_received_byte@ret,f,c
 12692                           
 12693                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 12694  001F06  968B               	bcf	3979,3,c	;volatile
 12695                           
 12696                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 12697  001F08  F000               	nop	
 12698  001F0A  F000               	nop	
 12699  001F0C  F000               	nop	
 12700  001F0E  F000               	nop	
 12701  001F10  F000               	nop	
 12702  001F12  F000               	nop	
 12703  001F14  F000               	nop	
 12704  001F16  F000               	nop	
 12705  001F18  F000               	nop	
 12706  001F1A  F000               	nop	
 12707  001F1C  F000               	nop	
 12708  001F1E  F000               	nop	
 12709                           
 12710                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 12711  001F20  868B               	bsf	3979,3,c	;volatile
 12712                           
 12713                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 12714  001F22  F000               	nop	
 12715  001F24  F000               	nop	
 12716  001F26  F000               	nop	
 12717  001F28  F000               	nop	
 12718  001F2A  F000               	nop	
 12719  001F2C  F000               	nop	
 12720  001F2E  F000               	nop	
 12721  001F30  F000               	nop	
 12722  001F32  F000               	nop	
 12723  001F34  F000               	nop	
 12724  001F36  F000               	nop	
 12725  001F38  F000               	nop	
 12726                           
 12727                           ;i2c.c: 114: if((PORTC & (1<<4))){
 12728  001F3A  B882               	btfsc	3970,4,c	;volatile
 12729                           
 12730                           ;i2c.c: 115: ret|=1;
 12731  001F3C  8020               	bsf	iic_received_byte@ret,0,c
 12732  001F3E  2A21               	incf	iic_received_byte@i,f,c
 12733  001F40  D7DC               	goto	l7033
 12734  001F42                     l7097:
 12735  001F42  968B               	bcf	3979,3,c	;volatile
 12736                           
 12737                           ;i2c.c: 119: return ret;
 12738  001F44  5020               	movf	iic_received_byte@ret,w,c
 12739  001F46  0012               	return	
 12740  001F48                     __end_of_iic_received_byte:
 12741                           	opt stack 0
 12742                           tosu	equ	0xFFF
 12743                           tosh	equ	0xFFE
 12744                           tosl	equ	0xFFD
 12745                           pclath	equ	0xFFA
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodh	equ	0xFF4
 12751                           prodl	equ	0xFF3
 12752                           intcon	equ	0xFF2
 12753                           indf0	equ	0xFEF
 12754                           postinc0	equ	0xFEE
 12755                           fsr0h	equ	0xFEA
 12756                           fsr0l	equ	0xFE9
 12757                           wreg	equ	0xFE8
 12758                           postdec1	equ	0xFE5
 12759                           plusw1	equ	0xFE3
 12760                           fsr1h	equ	0xFE2
 12761                           fsr1l	equ	0xFE1
 12762                           indf2	equ	0xFDF
 12763                           postinc2	equ	0xFDE
 12764                           postdec2	equ	0xFDD
 12765                           plusw2	equ	0xFDB
 12766                           fsr2h	equ	0xFDA
 12767                           fsr2l	equ	0xFD9
 12768                           status	equ	0xFD8
 12769                           
 12770 ;; *************** function _ads1115_init_all_chip *****************
 12771 ;; Defined at:
 12772 ;;		line 107 in file "src/driver/ads1115.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;		None
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    5
 12793 ;; This function calls:
 12794 ;;		_ads1115_init
 12795 ;; This function is called by:
 12796 ;;		_main
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text81
 12801  0024D8                     __ptext81:
 12802                           	opt stack 0
 12803  0024D8                     _ads1115_init_all_chip:
 12804                           	opt stack 25
 12805                           
 12806                           ;ads1115.c: 110: ads1115_init(&ads1115Chip0,(0x90));
 12807                           
 12808                           ;incstack = 0
 12809  0024D8  0E9D               	movlw	low _ads1115Chip0
 12810  0024DA  0100               	movlb	0	; () banked
 12811  0024DC  6FC3               	movwf	ads1115_init@pAds1115& (0+255),b
 12812  0024DE  0E00               	movlw	high _ads1115Chip0
 12813  0024E0  0100               	movlb	0	; () banked
 12814  0024E2  6FC4               	movwf	(ads1115_init@pAds1115+1)& (0+255),b
 12815  0024E4  0E90               	movlw	144
 12816  0024E6  0100               	movlb	0	; () banked
 12817  0024E8  6FC5               	movwf	ads1115_init@slvaddr& (0+255),b
 12818  0024EA  EC00  F009         	call	_ads1115_init	;wreg free
 12819                           
 12820                           ;ads1115.c: 112: ads1115_init(&ads1115Chip1,(0x92));
 12821  0024EE  0E8D               	movlw	low _ads1115Chip1
 12822  0024F0  0100               	movlb	0	; () banked
 12823  0024F2  6FC3               	movwf	ads1115_init@pAds1115& (0+255),b
 12824  0024F4  0E00               	movlw	high _ads1115Chip1
 12825  0024F6  0100               	movlb	0	; () banked
 12826  0024F8  6FC4               	movwf	(ads1115_init@pAds1115+1)& (0+255),b
 12827  0024FA  0E92               	movlw	146
 12828  0024FC  0100               	movlb	0	; () banked
 12829  0024FE  6FC5               	movwf	ads1115_init@slvaddr& (0+255),b
 12830  002500  EC00  F009         	call	_ads1115_init	;wreg free
 12831  002504  0012               	return		;funcret
 12832  002506                     __end_of_ads1115_init_all_chip:
 12833                           	opt stack 0
 12834                           tosu	equ	0xFFF
 12835                           tosh	equ	0xFFE
 12836                           tosl	equ	0xFFD
 12837                           pclath	equ	0xFFA
 12838                           tblptru	equ	0xFF8
 12839                           tblptrh	equ	0xFF7
 12840                           tblptrl	equ	0xFF6
 12841                           tablat	equ	0xFF5
 12842                           prodh	equ	0xFF4
 12843                           prodl	equ	0xFF3
 12844                           intcon	equ	0xFF2
 12845                           indf0	equ	0xFEF
 12846                           postinc0	equ	0xFEE
 12847                           fsr0h	equ	0xFEA
 12848                           fsr0l	equ	0xFE9
 12849                           wreg	equ	0xFE8
 12850                           postdec1	equ	0xFE5
 12851                           plusw1	equ	0xFE3
 12852                           fsr1h	equ	0xFE2
 12853                           fsr1l	equ	0xFE1
 12854                           indf2	equ	0xFDF
 12855                           postinc2	equ	0xFDE
 12856                           postdec2	equ	0xFDD
 12857                           plusw2	equ	0xFDB
 12858                           fsr2h	equ	0xFDA
 12859                           fsr2l	equ	0xFD9
 12860                           status	equ	0xFD8
 12861                           
 12862 ;; *************** function _ads1115_init *****************
 12863 ;; Defined at:
 12864 ;;		line 3 in file "src/driver/ads1115.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 12867 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
 12868 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12880 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12883 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;Total ram usage:        3 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    4
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_ads1115_init_all_chip
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text82
 12895  001200                     __ptext82:
 12896                           	opt stack 0
 12897  001200                     _ads1115_init:
 12898                           	opt stack 25
 12899                           
 12900                           ;ads1115.c: 5: pAds1115->chip=ADS1115;
 12901                           
 12902                           ;incstack = 0
 12903  001200  C0C3  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 12904  001204  C0C4  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 12905  001208  0E05               	movlw	5
 12906  00120A  6EDF               	movwf	indf2,c
 12907                           
 12908                           ;ads1115.c: 6: pAds1115->slaveAddr=slvaddr;
 12909  00120C  0100               	movlb	0	; () banked
 12910  00120E  EE20 F001          	lfsr	2,1
 12911  001212  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12912  001214  26D9               	addwf	fsr2l,f,c
 12913  001216  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12914  001218  22DA               	addwfc	fsr2h,f,c
 12915  00121A  C0C5  FFDF         	movff	ads1115_init@slvaddr,indf2
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;ads1115.c: 7: pAds1115->config.data=0x8583;;
 12919  00121E  0100               	movlb	0	; () banked
 12920  001220  EE20 F002          	lfsr	2,2
 12921  001224  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12922  001226  26D9               	addwf	fsr2l,f,c
 12923  001228  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12924  00122A  22DA               	addwfc	fsr2h,f,c
 12925  00122C  0E83               	movlw	131
 12926  00122E  6EDE               	movwf	postinc2,c
 12927  001230  0E85               	movlw	133
 12928  001232  6EDD               	movwf	postdec2,c
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;ads1115.c: 8: pAds1115->iic_start=iic_start;
 12932  001234  0100               	movlb	0	; () banked
 12933  001236  EE20 F006          	lfsr	2,6
 12934  00123A  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12935  00123C  26D9               	addwf	fsr2l,f,c
 12936  00123E  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12937  001240  22DA               	addwfc	fsr2h,f,c
 12938  001242  0E08               	movlw	low _iic_start
 12939  001244  6EDE               	movwf	postinc2,c
 12940  001246  0E22               	movlw	high _iic_start
 12941  001248  6EDD               	movwf	postdec2,c
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;ads1115.c: 9: pAds1115->iic_stop=iic_stop;
 12945  00124A  0100               	movlb	0	; () banked
 12946  00124C  EE20 F008          	lfsr	2,8
 12947  001250  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12948  001252  26D9               	addwf	fsr2l,f,c
 12949  001254  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12950  001256  22DA               	addwfc	fsr2h,f,c
 12951  001258  0E82               	movlw	low _iic_stop
 12952  00125A  6EDE               	movwf	postinc2,c
 12953  00125C  0E22               	movlw	high _iic_stop
 12954  00125E  6EDD               	movwf	postdec2,c
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;ads1115.c: 10: pAds1115->iic_send_byte=iic_send_byte;
 12958  001260  0100               	movlb	0	; () banked
 12959  001262  EE20 F00A          	lfsr	2,10
 12960  001266  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12961  001268  26D9               	addwf	fsr2l,f,c
 12962  00126A  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12963  00126C  22DA               	addwfc	fsr2h,f,c
 12964  00126E  0ECE               	movlw	low _iic_send_byte
 12965  001270  6EDE               	movwf	postinc2,c
 12966  001272  0E1A               	movlw	high _iic_send_byte
 12967  001274  6EDD               	movwf	postdec2,c
 12968                           
 12969                           ; BSR set to: 0
 12970                           ;ads1115.c: 11: pAds1115->iic_waite_ack=iic_waite_ack;
 12971  001276  0100               	movlb	0	; () banked
 12972  001278  EE20 F00C          	lfsr	2,12
 12973  00127C  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12974  00127E  26D9               	addwf	fsr2l,f,c
 12975  001280  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12976  001282  22DA               	addwfc	fsr2h,f,c
 12977  001284  0E24               	movlw	low _iic_waite_ack
 12978  001286  6EDE               	movwf	postinc2,c
 12979  001288  0E1D               	movlw	high _iic_waite_ack
 12980  00128A  6EDD               	movwf	postdec2,c
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;ads1115.c: 12: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 12984  00128C  0100               	movlb	0	; () banked
 12985  00128E  EE20 F00E          	lfsr	2,14
 12986  001292  51C3               	movf	ads1115_init@pAds1115& (0+255),w,b
 12987  001294  26D9               	addwf	fsr2l,f,c
 12988  001296  51C4               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 12989  001298  22DA               	addwfc	fsr2h,f,c
 12990  00129A  0E16               	movlw	low _iic_received_byte_if_ack
 12991  00129C  6EDE               	movwf	postinc2,c
 12992  00129E  0E26               	movlw	high _iic_received_byte_if_ack
 12993  0012A0  6EDD               	movwf	postdec2,c
 12994                           
 12995                           ; BSR set to: 0
 12996  0012A2  0012               	return		;funcret
 12997  0012A4                     __end_of_ads1115_init:
 12998                           	opt stack 0
 12999                           tosu	equ	0xFFF
 13000                           tosh	equ	0xFFE
 13001                           tosl	equ	0xFFD
 13002                           pclath	equ	0xFFA
 13003                           tblptru	equ	0xFF8
 13004                           tblptrh	equ	0xFF7
 13005                           tblptrl	equ	0xFF6
 13006                           tablat	equ	0xFF5
 13007                           prodh	equ	0xFF4
 13008                           prodl	equ	0xFF3
 13009                           intcon	equ	0xFF2
 13010                           indf0	equ	0xFEF
 13011                           postinc0	equ	0xFEE
 13012                           fsr0h	equ	0xFEA
 13013                           fsr0l	equ	0xFE9
 13014                           wreg	equ	0xFE8
 13015                           postdec1	equ	0xFE5
 13016                           plusw1	equ	0xFE3
 13017                           fsr1h	equ	0xFE2
 13018                           fsr1l	equ	0xFE1
 13019                           indf2	equ	0xFDF
 13020                           postinc2	equ	0xFDE
 13021                           postdec2	equ	0xFDD
 13022                           plusw2	equ	0xFDB
 13023                           fsr2h	equ	0xFDA
 13024                           fsr2l	equ	0xFD9
 13025                           status	equ	0xFD8
 13026                           
 13027 ;; *************** function _handler_interrupt_low *****************
 13028 ;; Defined at:
 13029 ;;		line 38 in file "src/soc/int.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;		None
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;		None
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      void 
 13036 ;; Registers used:
 13037 ;;		wreg, status,2, status,0, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;Total ram usage:       17 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    3
 13050 ;; This function calls:
 13051 ;;		_rtc_alrm_irq_hook
 13052 ;;		_sys_ticker_irq_hook
 13053 ;; This function is called by:
 13054 ;;		Interrupt level 1
 13055 ;; This function uses a non-reentrant model
 13056 ;;
 13057                           
 13058                           	psect	intcodelo
 13059  000018                     __pintcodelo:
 13060                           	opt stack 0
 13061  000018                     _handler_interrupt_low:
 13062                           	opt stack 17
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;incstack = 0
 13066  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13067  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 13068  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 13069  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 13070  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 13071  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 13072  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 13073  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 13074  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 13075  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 13076  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 13077  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 13078  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 13079  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 13080  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 13081  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 13082  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 13083  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 13084                           
 13085                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 13086  00005E  B29D               	btfsc	3997,1,c	;volatile
 13087  000060  A29E               	btfss	3998,1,c	;volatile
 13088  000062  D00E               	goto	i1l6443
 13089  000064  B29F               	btfsc	3999,1,c	;volatile
 13090  000066  D00C               	goto	i1l6443
 13091                           
 13092                           ;int.c: 41: PIR1bits.TMR2IF=0;
 13093  000068  929E               	bcf	3998,1,c	;volatile
 13094                           
 13095                           ;int.c: 42: glTicker++;
 13096  00006A  0E01               	movlw	1
 13097  00006C  0100               	movlb	0	; () banked
 13098  00006E  277F               	addwf	_glTicker& (0+255),f,b	;volatile
 13099  000070  0E00               	movlw	0
 13100  000072  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 13101  000074  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 13102  000076  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;int.c: 43: glbEvent |= (0x01);
 13106  000078  0100               	movlb	0	; () banked
 13107  00007A  818B               	bsf	_glbEvent& (0+255),0,b	;volatile
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;int.c: 44: sys_ticker_irq_hook();
 13111  00007C  EC2A  F013         	call	_sys_ticker_irq_hook	;wreg free
 13112  000080                     i1l6443:
 13113                           
 13114                           ;int.c: 45: }
 13115                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 13116  000080  B0A3               	btfsc	4003,0,c	;volatile
 13117  000082  A0A4               	btfss	4004,0,c	;volatile
 13118  000084  D007               	goto	i1l1303
 13119  000086  B0A5               	btfsc	4005,0,c	;volatile
 13120  000088  D005               	goto	i1l1303
 13121                           
 13122                           ;int.c: 47: PIR3bits.RTCCIF=0;
 13123  00008A  90A4               	bcf	4004,0,c	;volatile
 13124                           
 13125                           ;int.c: 48: glbEvent |= (0x02);
 13126  00008C  0100               	movlb	0	; () banked
 13127  00008E  838B               	bsf	_glbEvent& (0+255),1,b	;volatile
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;int.c: 49: rtc_alrm_irq_hook();
 13131  000090  EC70  F013         	call	_rtc_alrm_irq_hook	;wreg free
 13132  000094                     i1l1303:
 13133  000094  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 13134  000098  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 13135  00009C  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 13136  0000A0  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 13137  0000A4  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 13138  0000A8  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 13139  0000AC  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 13140  0000B0  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 13141  0000B4  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 13142  0000B8  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 13143  0000BC  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 13144  0000C0  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 13145  0000C4  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 13146  0000C8  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 13147  0000CC  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 13148  0000D0  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 13149  0000D4  C00F  FFD8         	movff	??_handler_interrupt_low,status
 13150  0000D8  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13151  0000DA  0010               	retfie	
 13152  0000DC                     __end_of_handler_interrupt_low:
 13153                           	opt stack 0
 13154                           tosu	equ	0xFFF
 13155                           tosh	equ	0xFFE
 13156                           tosl	equ	0xFFD
 13157                           pclatu	equ	0xFFB
 13158                           pclath	equ	0xFFA
 13159                           tblptru	equ	0xFF8
 13160                           tblptrh	equ	0xFF7
 13161                           tblptrl	equ	0xFF6
 13162                           tablat	equ	0xFF5
 13163                           prodh	equ	0xFF4
 13164                           prodl	equ	0xFF3
 13165                           intcon	equ	0xFF2
 13166                           indf0	equ	0xFEF
 13167                           postinc0	equ	0xFEE
 13168                           fsr0h	equ	0xFEA
 13169                           fsr0l	equ	0xFE9
 13170                           wreg	equ	0xFE8
 13171                           postdec1	equ	0xFE5
 13172                           plusw1	equ	0xFE3
 13173                           fsr1h	equ	0xFE2
 13174                           fsr1l	equ	0xFE1
 13175                           bsr	equ	0xFE0
 13176                           indf2	equ	0xFDF
 13177                           postinc2	equ	0xFDE
 13178                           postdec2	equ	0xFDD
 13179                           plusw2	equ	0xFDB
 13180                           fsr2h	equ	0xFDA
 13181                           fsr2l	equ	0xFD9
 13182                           status	equ	0xFD8
 13183                           
 13184 ;; *************** function _sys_ticker_irq_hook *****************
 13185 ;; Defined at:
 13186 ;;		line 36 in file "src/soc/ticker.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      void 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2, status,0
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;Total ram usage:        0 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:    2
 13207 ;; This function calls:
 13208 ;;		Nothing
 13209 ;; This function is called by:
 13210 ;;		_handler_interrupt_low
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text84
 13215  002654                     __ptext84:
 13216                           	opt stack 0
 13217  002654                     _sys_ticker_irq_hook:
 13218                           	opt stack 17
 13219                           
 13220                           ;ticker.c: 38: if(dlyTickerEn){
 13221                           
 13222                           ;incstack = 0
 13223  002654  5037               	movf	_dlyTickerEn,w,c
 13224  002656  B4D8               	btfsc	status,2,c
 13225  002658  D004               	goto	i1l1402
 13226                           
 13227                           ;ticker.c: 39: dlyTicker+=10;
 13228  00265A  0E0A               	movlw	10
 13229  00265C  2631               	addwf	_dlyTicker,f,c
 13230  00265E  0E00               	movlw	0
 13231  002660  2232               	addwfc	_dlyTicker+1,f,c
 13232  002662                     i1l1402:
 13233                           
 13234                           ;ticker.c: 40: }
 13235                           ;ticker.c: 41: userTicker_ms+=10;
 13236  002662  0E0A               	movlw	10
 13237  002664  2635               	addwf	_userTicker_ms,f,c	;volatile
 13238  002666  0E00               	movlw	0
 13239  002668  2236               	addwfc	_userTicker_ms+1,f,c	;volatile
 13240  00266A  0012               	return		;funcret
 13241  00266C                     __end_of_sys_ticker_irq_hook:
 13242                           	opt stack 0
 13243                           tosu	equ	0xFFF
 13244                           tosh	equ	0xFFE
 13245                           tosl	equ	0xFFD
 13246                           pclatu	equ	0xFFB
 13247                           pclath	equ	0xFFA
 13248                           tblptru	equ	0xFF8
 13249                           tblptrh	equ	0xFF7
 13250                           tblptrl	equ	0xFF6
 13251                           tablat	equ	0xFF5
 13252                           prodh	equ	0xFF4
 13253                           prodl	equ	0xFF3
 13254                           intcon	equ	0xFF2
 13255                           indf0	equ	0xFEF
 13256                           postinc0	equ	0xFEE
 13257                           fsr0h	equ	0xFEA
 13258                           fsr0l	equ	0xFE9
 13259                           wreg	equ	0xFE8
 13260                           postdec1	equ	0xFE5
 13261                           plusw1	equ	0xFE3
 13262                           fsr1h	equ	0xFE2
 13263                           fsr1l	equ	0xFE1
 13264                           bsr	equ	0xFE0
 13265                           indf2	equ	0xFDF
 13266                           postinc2	equ	0xFDE
 13267                           postdec2	equ	0xFDD
 13268                           plusw2	equ	0xFDB
 13269                           fsr2h	equ	0xFDA
 13270                           fsr2l	equ	0xFD9
 13271                           status	equ	0xFD8
 13272                           
 13273 ;; *************** function _rtc_alrm_irq_hook *****************
 13274 ;; Defined at:
 13275 ;;		line 103 in file "src/soc/rtc.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;		None
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;		None
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  1    wreg      void 
 13282 ;; Registers used:
 13283 ;;		None
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;Total ram usage:        0 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:    2
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_handler_interrupt_low
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text85
 13304  0026E0                     __ptext85:
 13305                           	opt stack 0
 13306  0026E0                     _rtc_alrm_irq_hook:
 13307                           	opt stack 17
 13308                           
 13309                           ;incstack = 0
 13310  0026E0  0012               	return		;funcret
 13311  0026E2                     __end_of_rtc_alrm_irq_hook:
 13312                           	opt stack 0
 13313                           tosu	equ	0xFFF
 13314                           tosh	equ	0xFFE
 13315                           tosl	equ	0xFFD
 13316                           pclatu	equ	0xFFB
 13317                           pclath	equ	0xFFA
 13318                           tblptru	equ	0xFF8
 13319                           tblptrh	equ	0xFF7
 13320                           tblptrl	equ	0xFF6
 13321                           tablat	equ	0xFF5
 13322                           prodh	equ	0xFF4
 13323                           prodl	equ	0xFF3
 13324                           intcon	equ	0xFF2
 13325                           indf0	equ	0xFEF
 13326                           postinc0	equ	0xFEE
 13327                           fsr0h	equ	0xFEA
 13328                           fsr0l	equ	0xFE9
 13329                           wreg	equ	0xFE8
 13330                           postdec1	equ	0xFE5
 13331                           plusw1	equ	0xFE3
 13332                           fsr1h	equ	0xFE2
 13333                           fsr1l	equ	0xFE1
 13334                           bsr	equ	0xFE0
 13335                           indf2	equ	0xFDF
 13336                           postinc2	equ	0xFDE
 13337                           postdec2	equ	0xFDD
 13338                           plusw2	equ	0xFDB
 13339                           fsr2h	equ	0xFDA
 13340                           fsr2l	equ	0xFD9
 13341                           status	equ	0xFD8
 13342                           
 13343 ;; *************** function _handler_interrupt_hight *****************
 13344 ;; Defined at:
 13345 ;;		line 9 in file "src/soc/int.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, status,2, status,0, cstack
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;Total ram usage:       14 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    1
 13366 ;; This function calls:
 13367 ;;		i2_rtc_alrm_irq_hook
 13368 ;;		i2_sys_ticker_irq_hook
 13369 ;; This function is called by:
 13370 ;;		Interrupt level 2
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	intcode
 13375  000008                     __pintcode:
 13376                           	opt stack 0
 13377  000008                     _handler_interrupt_hight:
 13378                           	opt stack 17
 13379                           
 13380                           ;incstack = 0
 13381  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13382  00000A  EFAC  F005         	goto	int_func
 13383                           tosu	equ	0xFFF
 13384                           tosh	equ	0xFFE
 13385                           tosl	equ	0xFFD
 13386                           pclatu	equ	0xFFB
 13387                           pclath	equ	0xFFA
 13388                           tblptru	equ	0xFF8
 13389                           tblptrh	equ	0xFF7
 13390                           tblptrl	equ	0xFF6
 13391                           tablat	equ	0xFF5
 13392                           prodh	equ	0xFF4
 13393                           prodl	equ	0xFF3
 13394                           intcon	equ	0xFF2
 13395                           indf0	equ	0xFEF
 13396                           postinc0	equ	0xFEE
 13397                           fsr0h	equ	0xFEA
 13398                           fsr0l	equ	0xFE9
 13399                           wreg	equ	0xFE8
 13400                           postdec1	equ	0xFE5
 13401                           plusw1	equ	0xFE3
 13402                           fsr1h	equ	0xFE2
 13403                           fsr1l	equ	0xFE1
 13404                           bsr	equ	0xFE0
 13405                           indf2	equ	0xFDF
 13406                           postinc2	equ	0xFDE
 13407                           postdec2	equ	0xFDD
 13408                           plusw2	equ	0xFDB
 13409                           fsr2h	equ	0xFDA
 13410                           fsr2l	equ	0xFD9
 13411                           status	equ	0xFD8
 13412                           
 13413                           	psect	intcode_body
 13414  000B58                     __pintcode_body:
 13415                           	opt stack 17
 13416  000B58                     int_func:
 13417                           	opt stack 17
 13418  000B58  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 13419  000B5C  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 13420  000B60  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 13421  000B64  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 13422  000B68  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 13423  000B6C  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 13424  000B70  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 13425  000B74  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 13426  000B78  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 13427  000B7C  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 13428  000B80  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 13429  000B84  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 13430  000B88  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 13431  000B8C  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 13432                           
 13433                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 13434  000B90  BAF2               	btfsc	intcon,5,c	;volatile
 13435  000B92  A4F2               	btfss	intcon,2,c	;volatile
 13436  000B94  D002               	goto	i2l1292
 13437  000B96  B4F1               	btfsc	intcon2,2,c	;volatile
 13438                           
 13439                           ;int.c: 13: __nop();
 13440  000B98  F000               	nop	
 13441  000B9A                     i2l1292:
 13442                           
 13443                           ;int.c: 14: }
 13444                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 13445  000B9A  BCF2               	btfsc	intcon,6,c	;volatile
 13446  000B9C  A89D               	btfss	3997,4,c	;volatile
 13447  000B9E  D001               	goto	i2l1293
 13448  000BA0  509E               	movf	3998,w,c	;volatile
 13449  000BA2                     i2l1293:
 13450                           
 13451                           ;int.c: 17: }
 13452                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 13453  000BA2  BCF2               	btfsc	intcon,6,c	;volatile
 13454  000BA4  AA9D               	btfss	3997,5,c	;volatile
 13455  000BA6  D001               	goto	i2l1294
 13456  000BA8  509E               	movf	3998,w,c	;volatile
 13457  000BAA                     i2l1294:
 13458                           
 13459                           ;int.c: 20: }
 13460                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 13461  000BAA  BCF2               	btfsc	intcon,6,c	;volatile
 13462  000BAC  A09D               	btfss	3997,0,c	;volatile
 13463  000BAE  D001               	goto	i2l1295
 13464  000BB0  509E               	movf	3998,w,c	;volatile
 13465  000BB2                     i2l1295:
 13466                           
 13467                           ;int.c: 23: }
 13468                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 13469  000BB2  B29D               	btfsc	3997,1,c	;volatile
 13470  000BB4  A29E               	btfss	3998,1,c	;volatile
 13471  000BB6  D00E               	goto	i2l6417
 13472  000BB8  A29F               	btfss	3999,1,c	;volatile
 13473  000BBA  D00C               	goto	i2l6417
 13474                           
 13475                           ;int.c: 26: PIR1bits.TMR2IF=0;
 13476  000BBC  929E               	bcf	3998,1,c	;volatile
 13477                           
 13478                           ;int.c: 27: glTicker++;
 13479  000BBE  0E01               	movlw	1
 13480  000BC0  0100               	movlb	0	; () banked
 13481  000BC2  277F               	addwf	_glTicker& (0+255),f,b	;volatile
 13482  000BC4  0E00               	movlw	0
 13483  000BC6  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 13484  000BC8  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 13485  000BCA  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;int.c: 28: glbEvent |= (0x01);
 13489  000BCC  0100               	movlb	0	; () banked
 13490  000BCE  818B               	bsf	_glbEvent& (0+255),0,b	;volatile
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;int.c: 29: sys_ticker_irq_hook();
 13494  000BD0  EC36  F013         	call	i2_sys_ticker_irq_hook	;wreg free
 13495  000BD4                     i2l6417:
 13496                           
 13497                           ;int.c: 30: }
 13498                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 13499  000BD4  B0A3               	btfsc	4003,0,c	;volatile
 13500  000BD6  A0A4               	btfss	4004,0,c	;volatile
 13501  000BD8  D007               	goto	i2l1298
 13502  000BDA  A0A5               	btfss	4005,0,c	;volatile
 13503  000BDC  D005               	goto	i2l1298
 13504                           
 13505                           ;int.c: 32: PIR3bits.RTCCIF=0;
 13506  000BDE  90A4               	bcf	4004,0,c	;volatile
 13507                           
 13508                           ;int.c: 33: glbEvent |= (0x02);
 13509  000BE0  0100               	movlb	0	; () banked
 13510  000BE2  838B               	bsf	_glbEvent& (0+255),1,b	;volatile
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;int.c: 34: rtc_alrm_irq_hook();
 13514  000BE4  EC71  F013         	call	i2_rtc_alrm_irq_hook	;wreg free
 13515  000BE8                     i2l1298:
 13516  000BE8  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 13517  000BEC  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 13518  000BF0  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 13519  000BF4  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 13520  000BF8  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 13521  000BFC  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 13522  000C00  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 13523  000C04  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 13524  000C08  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 13525  000C0C  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 13526  000C10  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 13527  000C14  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 13528  000C18  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 13529  000C1C  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 13530  000C20  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13531  000C22  0011               	retfie		f
 13532  000C24                     __end_of_handler_interrupt_hight:
 13533                           	opt stack 0
 13534                           tosu	equ	0xFFF
 13535                           tosh	equ	0xFFE
 13536                           tosl	equ	0xFFD
 13537                           pclatu	equ	0xFFB
 13538                           pclath	equ	0xFFA
 13539                           tblptru	equ	0xFF8
 13540                           tblptrh	equ	0xFF7
 13541                           tblptrl	equ	0xFF6
 13542                           tablat	equ	0xFF5
 13543                           prodh	equ	0xFF4
 13544                           prodl	equ	0xFF3
 13545                           intcon	equ	0xFF2
 13546                           intcon2	equ	0xFF1
 13547                           indf0	equ	0xFEF
 13548                           postinc0	equ	0xFEE
 13549                           fsr0h	equ	0xFEA
 13550                           fsr0l	equ	0xFE9
 13551                           wreg	equ	0xFE8
 13552                           postdec1	equ	0xFE5
 13553                           plusw1	equ	0xFE3
 13554                           fsr1h	equ	0xFE2
 13555                           fsr1l	equ	0xFE1
 13556                           bsr	equ	0xFE0
 13557                           indf2	equ	0xFDF
 13558                           postinc2	equ	0xFDE
 13559                           postdec2	equ	0xFDD
 13560                           plusw2	equ	0xFDB
 13561                           fsr2h	equ	0xFDA
 13562                           fsr2l	equ	0xFD9
 13563                           status	equ	0xFD8
 13564                           
 13565 ;; *************** function i2_sys_ticker_irq_hook *****************
 13566 ;; Defined at:
 13567 ;;		line 36 in file "src/soc/ticker.c"
 13568 ;; Parameters:    Size  Location     Type
 13569 ;;		None
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;		None
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  1    wreg      void 
 13574 ;; Registers used:
 13575 ;;		wreg, status,2, status,0
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13585 ;;Total ram usage:        0 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; This function calls:
 13588 ;;		Nothing
 13589 ;; This function is called by:
 13590 ;;		_handler_interrupt_hight
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           	psect	text87
 13595  00266C                     __ptext87:
 13596                           	opt stack 0
 13597  00266C                     i2_sys_ticker_irq_hook:
 13598                           	opt stack 17
 13599                           
 13600                           ;ticker.c: 38: if(dlyTickerEn){
 13601                           
 13602                           ;incstack = 0
 13603  00266C  5037               	movf	_dlyTickerEn,w,c
 13604  00266E  B4D8               	btfsc	status,2,c
 13605  002670  D004               	goto	i2l1402
 13606                           
 13607                           ;ticker.c: 39: dlyTicker+=10;
 13608  002672  0E0A               	movlw	10
 13609  002674  2631               	addwf	_dlyTicker,f,c
 13610  002676  0E00               	movlw	0
 13611  002678  2232               	addwfc	_dlyTicker+1,f,c
 13612  00267A                     i2l1402:
 13613                           
 13614                           ;ticker.c: 40: }
 13615                           ;ticker.c: 41: userTicker_ms+=10;
 13616  00267A  0E0A               	movlw	10
 13617  00267C  2635               	addwf	_userTicker_ms,f,c	;volatile
 13618  00267E  0E00               	movlw	0
 13619  002680  2236               	addwfc	_userTicker_ms+1,f,c	;volatile
 13620  002682  0012               	return		;funcret
 13621  002684                     __end_ofi2_sys_ticker_irq_hook:
 13622                           	opt stack 0
 13623                           tosu	equ	0xFFF
 13624                           tosh	equ	0xFFE
 13625                           tosl	equ	0xFFD
 13626                           pclatu	equ	0xFFB
 13627                           pclath	equ	0xFFA
 13628                           tblptru	equ	0xFF8
 13629                           tblptrh	equ	0xFF7
 13630                           tblptrl	equ	0xFF6
 13631                           tablat	equ	0xFF5
 13632                           prodh	equ	0xFF4
 13633                           prodl	equ	0xFF3
 13634                           intcon	equ	0xFF2
 13635                           intcon2	equ	0xFF1
 13636                           indf0	equ	0xFEF
 13637                           postinc0	equ	0xFEE
 13638                           fsr0h	equ	0xFEA
 13639                           fsr0l	equ	0xFE9
 13640                           wreg	equ	0xFE8
 13641                           postdec1	equ	0xFE5
 13642                           plusw1	equ	0xFE3
 13643                           fsr1h	equ	0xFE2
 13644                           fsr1l	equ	0xFE1
 13645                           bsr	equ	0xFE0
 13646                           indf2	equ	0xFDF
 13647                           postinc2	equ	0xFDE
 13648                           postdec2	equ	0xFDD
 13649                           plusw2	equ	0xFDB
 13650                           fsr2h	equ	0xFDA
 13651                           fsr2l	equ	0xFD9
 13652                           status	equ	0xFD8
 13653                           
 13654 ;; *************** function i2_rtc_alrm_irq_hook *****************
 13655 ;; Defined at:
 13656 ;;		line 103 in file "src/soc/rtc.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;		None
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;		None
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1    wreg      void 
 13663 ;; Registers used:
 13664 ;;		None
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;Total ram usage:        0 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; This function calls:
 13677 ;;		Nothing
 13678 ;; This function is called by:
 13679 ;;		_handler_interrupt_hight
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text88
 13684  0026E2                     __ptext88:
 13685                           	opt stack 0
 13686  0026E2                     i2_rtc_alrm_irq_hook:
 13687                           	opt stack 17
 13688                           
 13689                           ;incstack = 0
 13690  0026E2  0012               	return		;funcret
 13691  0026E4                     __end_ofi2_rtc_alrm_irq_hook:
 13692                           	opt stack 0
 13693                           tosu	equ	0xFFF
 13694                           tosh	equ	0xFFE
 13695                           tosl	equ	0xFFD
 13696                           pclatu	equ	0xFFB
 13697                           pclath	equ	0xFFA
 13698                           tblptru	equ	0xFF8
 13699                           tblptrh	equ	0xFF7
 13700                           tblptrl	equ	0xFF6
 13701                           tablat	equ	0xFF5
 13702                           prodh	equ	0xFF4
 13703                           prodl	equ	0xFF3
 13704                           intcon	equ	0xFF2
 13705                           intcon2	equ	0xFF1
 13706                           indf0	equ	0xFEF
 13707                           postinc0	equ	0xFEE
 13708                           fsr0h	equ	0xFEA
 13709                           fsr0l	equ	0xFE9
 13710                           wreg	equ	0xFE8
 13711                           postdec1	equ	0xFE5
 13712                           plusw1	equ	0xFE3
 13713                           fsr1h	equ	0xFE2
 13714                           fsr1l	equ	0xFE1
 13715                           bsr	equ	0xFE0
 13716                           indf2	equ	0xFDF
 13717                           postinc2	equ	0xFDE
 13718                           postdec2	equ	0xFDD
 13719                           plusw2	equ	0xFDB
 13720                           fsr2h	equ	0xFDA
 13721                           fsr2l	equ	0xFD9
 13722                           status	equ	0xFD8
 13723                           tosu	equ	0xFFF
 13724                           tosh	equ	0xFFE
 13725                           tosl	equ	0xFFD
 13726                           pclatu	equ	0xFFB
 13727                           pclath	equ	0xFFA
 13728                           tblptru	equ	0xFF8
 13729                           tblptrh	equ	0xFF7
 13730                           tblptrl	equ	0xFF6
 13731                           tablat	equ	0xFF5
 13732                           prodh	equ	0xFF4
 13733                           prodl	equ	0xFF3
 13734                           intcon	equ	0xFF2
 13735                           intcon2	equ	0xFF1
 13736                           indf0	equ	0xFEF
 13737                           postinc0	equ	0xFEE
 13738                           fsr0h	equ	0xFEA
 13739                           fsr0l	equ	0xFE9
 13740                           wreg	equ	0xFE8
 13741                           postdec1	equ	0xFE5
 13742                           plusw1	equ	0xFE3
 13743                           fsr1h	equ	0xFE2
 13744                           fsr1l	equ	0xFE1
 13745                           bsr	equ	0xFE0
 13746                           indf2	equ	0xFDF
 13747                           postinc2	equ	0xFDE
 13748                           postdec2	equ	0xFDD
 13749                           plusw2	equ	0xFDB
 13750                           fsr2h	equ	0xFDA
 13751                           fsr2l	equ	0xFD9
 13752                           status	equ	0xFD8
 13753                           
 13754                           	psect	text89
 13755  000000                     __ptext89:
 13756                           	opt stack 0
 13757                           tosu	equ	0xFFF
 13758                           tosh	equ	0xFFE
 13759                           tosl	equ	0xFFD
 13760                           pclatu	equ	0xFFB
 13761                           pclath	equ	0xFFA
 13762                           tblptru	equ	0xFF8
 13763                           tblptrh	equ	0xFF7
 13764                           tblptrl	equ	0xFF6
 13765                           tablat	equ	0xFF5
 13766                           prodh	equ	0xFF4
 13767                           prodl	equ	0xFF3
 13768                           intcon	equ	0xFF2
 13769                           intcon2	equ	0xFF1
 13770                           indf0	equ	0xFEF
 13771                           postinc0	equ	0xFEE
 13772                           fsr0h	equ	0xFEA
 13773                           fsr0l	equ	0xFE9
 13774                           wreg	equ	0xFE8
 13775                           postdec1	equ	0xFE5
 13776                           plusw1	equ	0xFE3
 13777                           fsr1h	equ	0xFE2
 13778                           fsr1l	equ	0xFE1
 13779                           bsr	equ	0xFE0
 13780                           indf2	equ	0xFDF
 13781                           postinc2	equ	0xFDE
 13782                           postdec2	equ	0xFDD
 13783                           plusw2	equ	0xFDB
 13784                           fsr2h	equ	0xFDA
 13785                           fsr2l	equ	0xFD9
 13786                           status	equ	0xFD8
 13787                           
 13788                           	psect	rparam
 13789  0000                     tosu	equ	0xFFF
 13790                           tosh	equ	0xFFE
 13791                           tosl	equ	0xFFD
 13792                           pclatu	equ	0xFFB
 13793                           pclath	equ	0xFFA
 13794                           tblptru	equ	0xFF8
 13795                           tblptrh	equ	0xFF7
 13796                           tblptrl	equ	0xFF6
 13797                           tablat	equ	0xFF5
 13798                           prodh	equ	0xFF4
 13799                           prodl	equ	0xFF3
 13800                           intcon	equ	0xFF2
 13801                           intcon2	equ	0xFF1
 13802                           indf0	equ	0xFEF
 13803                           postinc0	equ	0xFEE
 13804                           fsr0h	equ	0xFEA
 13805                           fsr0l	equ	0xFE9
 13806                           wreg	equ	0xFE8
 13807                           postdec1	equ	0xFE5
 13808                           plusw1	equ	0xFE3
 13809                           fsr1h	equ	0xFE2
 13810                           fsr1l	equ	0xFE1
 13811                           bsr	equ	0xFE0
 13812                           indf2	equ	0xFDF
 13813                           postinc2	equ	0xFDE
 13814                           postdec2	equ	0xFDD
 13815                           plusw2	equ	0xFDB
 13816                           fsr2h	equ	0xFDA
 13817                           fsr2l	equ	0xFD9
 13818                           status	equ	0xFD8
 13819                           
 13820                           	psect	temp
 13821  000040                     btemp:
 13822                           	opt stack 0
 13823  000040                     	ds	1
 13824  0000                     int$flags	set	btemp
 13825                           tosu	equ	0xFFF
 13826                           tosh	equ	0xFFE
 13827                           tosl	equ	0xFFD
 13828                           pclatu	equ	0xFFB
 13829                           pclath	equ	0xFFA
 13830                           tblptru	equ	0xFF8
 13831                           tblptrh	equ	0xFF7
 13832                           tblptrl	equ	0xFF6
 13833                           tablat	equ	0xFF5
 13834                           prodh	equ	0xFF4
 13835                           prodl	equ	0xFF3
 13836                           intcon	equ	0xFF2
 13837                           intcon2	equ	0xFF1
 13838                           indf0	equ	0xFEF
 13839                           postinc0	equ	0xFEE
 13840                           fsr0h	equ	0xFEA
 13841                           fsr0l	equ	0xFE9
 13842                           wreg	equ	0xFE8
 13843                           postdec1	equ	0xFE5
 13844                           plusw1	equ	0xFE3
 13845                           fsr1h	equ	0xFE2
 13846                           fsr1l	equ	0xFE1
 13847                           bsr	equ	0xFE0
 13848                           indf2	equ	0xFDF
 13849                           postinc2	equ	0xFDE
 13850                           postdec2	equ	0xFDD
 13851                           plusw2	equ	0xFDB
 13852                           fsr2h	equ	0xFDA
 13853                           fsr2l	equ	0xFD9
 13854                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    809
    Data        16
    BSS         641
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160     43     158
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(BANK0[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    S801$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S801$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S801$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S801$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S801$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S616$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S616$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S616$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S616$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S616$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK0[1]), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 


Critical Paths under _main in COMRAM

    _main->_rtc_set
    _main->_ticker_dly
    _ui_disp_start_cs600->_lcd_disp_all
    _ui_disp_start_cs600->_ticker_dly
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _m_int16_2_str_4->___awmod
    _delay_ms->_delay_us
    _key_adj_value_fixed_point->___exp_10
    ___wmul->___exp_10
    ___lwmod->___exp_10
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_base_zero
    _key_process_set_down_long->___enter_menu_set_density
    _key_process_down->_key_shift_loc_fixed_point
    _in_adc_start_and_read->_delay_us
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_received_byte

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_key_process
    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_rtc_mm_ss->_lcd_show_string
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _m_int16_2_str_4->___awdiv
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _delay_ms->_delay_us
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    ___wmul->___exp_10
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    ___enter_menu_set_base_zero->___int32_2_mflot32
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc_fixed_point
    _in_adc_start_and_read->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    _ads1115_read_reg->_iic_send_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1466955
                                             41 BANK0      2     2      0
              _ads1115_init_all_chip
            _ads1115_read_conversion
                   _ads1115_read_reg
           _ads1115_start_conversion
                        _in_adc_init
              _in_adc_start_and_read
                        _key_polling
                        _key_process
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                         _ticker_dly
                  _ui_disp_rtc_mm_ss
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522248
                                             21 BANK0      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     211
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                             18 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                             18 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _ui_disp_rtc_mm_ss                                   11    11      0  349706
                                             21 BANK0     11    11      0
                     _lcd_disp_level
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                       _m_int8_2_hex
                            _rtc_get
 ---------------------------------------------------------------------------------
 (2) _rtc_get                                              1     1      0       1
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                             17 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             14 BANK0      3     2      1
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0  558066
                                             38 BANK0      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0  553420
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  553420
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  553420
                                             21 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  317629
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string                                      3     1      2  230976
                                             18 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                             15 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_show_dp                                          2     1      1   86653
                                             15 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             14 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                             31 COMRAM     2     0      2
                                              8 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    3062
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1153
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     614
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4     945
                                              6 BANK0      5     1      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0     638
                                              4 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2     462
                                              2 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0    1995
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_adj_value_fixed_point                            7     4      3    1995
                                             13 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     592
                                              1 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              8 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              1 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___exp_10                                             3     1      2      31
                                             31 COMRAM     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_set_down_long                            2     2      0    1077
                                             29 BANK0      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_pose                                3     3      0      34
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             4     4      0      34
                                             31 COMRAM     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           2     2      0    1009
                                             31 COMRAM     2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___int32_2_mflot32                                   16    12      4     975
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc_fixed_point                            5     1      4     527
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _in_adc_start_and_read                                6     4      2     412
                                              2 BANK0      6     4      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2     338
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ads1115_start_conversion                             2     0      2    1439
                                              7 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (2) _ads1115_write_reg                                    5     0      5    1287
                                              2 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_conversion                              5     3      2    1338
                                              8 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_reg                                     6     3      3    1149
                                              2 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _iic_send_byte                                        2     2      0     167
                                              0 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (4) _iic_waite_ack                                        1     1      0      65
                                             31 COMRAM     1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (3) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _iic_received_byte_if_ack                             2     2      0     207
                                              0 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (3) _iic_send_ack                                         1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _iic_received_byte                                    2     2      0     108
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _ads1115_read_conversion
     _ads1115_read_reg
       _iic_received_byte_if_ack *
         _iic_received_byte
         _iic_send_ack
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _ads1115_read_reg
     _iic_received_byte_if_ack *
       _iic_received_byte
       _iic_send_ack
     _iic_send_byte *
       _iic_waite_ack
         _iic_stop
     _iic_start *
     _iic_stop *
   _ads1115_start_conversion
     _ads1115_write_reg
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _in_adc_init
   _in_adc_start_and_read
     _delay_us
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       _key_shift_loc_fixed_point
     _key_process_set
     _key_process_set_down_long
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
       ___enter_menu_set_pose
     _key_process_set_long
     _key_process_up
       _key_adj_value_fixed_point
         ___exp_10
         ___lwdiv
           ___exp_10 (ARG)
         ___lwmod
           ___exp_10 (ARG)
           ___lwdiv (ARG)
             ___exp_10 (ARG)
         ___wmul
           ___exp_10 (ARG)
     _key_waite_release
       _key_polling
         _delay_ms
           _delay_us
     _ui_disp_menu
       _ui_disp_menu_psw_adj
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ticker_dly
   _ui_disp_rtc_mm_ss
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_refresh
     _lcd_show_dp
       _lcd_disp_dp_loc_0
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_1
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_2
         _lcd_set_com_seg
           ___awdiv
     _lcd_show_string
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _rtc_get
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DD      12        0.0%
DATA                 0      0     2DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Sep 11 16:23:55 2017

              lcd_show_string_l0@str 00D5                       ?_iic_waite_ack 0001  
              lcd_show_string_l1@str 00D5                         ?_lcd_show_dp 00D2  
                ?_lcd_show_string_l0 00D5                  ?_lcd_show_string_l1 00D5  
         __end_of_rtcc_reg_wr_enable 26CE                         ?_in_adc_init 0001  
                      ?_m_int8_2_hex 00C3               ??_ui_disp_menu_psw_adj 0022  
                       ___awdiv@sign 00C8                                   bsr 000FE0  
                      ?_lcd_show_chr 00D2                  ___wmul@multiplicand 00C6  
        __end_of_rtcc_reg_wr_disable 26DA                         __CFG_CP0$OFF 000000  
                        __CFG_OSC$HS 000000                                  l644 1D62  
                                l770 1B72                                  l667 1AF4  
                                l659 1AE8                                  l771 1B70  
                                _PR2 000FCB                     ??_key_process_up 0022  
                       ___awmod@sign 0021                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
          __size_of_ads1115_read_reg 01BC              __end_of___x_arrange_str 1D24  
               ??_lcd_disp_level_bar 0022           ?_key_shift_loc_fixed_point 00C3  
               ??_lcd_show_string_l0 0022                 ??_lcd_show_string_l1 0022  
                 m_int16_2_str_4@buf 00CB                                 l1255 239C  
                               l1407 2514                                 l1812 197C  
                               l1822 1C5E                                 l1759 0FCE  
                               l7011 1D66                                 l7021 1D7C  
                               l7013 1D6E                                 l7033 1EFA  
                               l5513 2532                                 l7105 25D0  
                               l7123 192C                                 l7211 0B1A  
                               l7037 1F02                                 l5517 2544  
                               l7125 1938                                 l7109 25E4  
                               l7303 1ADE                                 l7135 196E  
                               l7127 193E                                 l7151 1C50  
                               l7143 1C1A                                 l6511 0E48  
                               l7145 1C26                                 l6601 1370  
                               l7241 2592                                 l7401 018C  
                               l8041 0CD2                                 l8025 0CB4  
                               l7147 1C2C                                 l6515 0E5C  
                               l6507 0E3A                                 l6523 0CF6  
                               l6603 137A                                 l7411 01DC  
                               l7403 019C                                 l8035 0CC6  
                               l7309 1AF2                                 l7173 1E20  
                               l7181 1E34                                 l7501 21B4  
                               l6621 1A7C                                 l6605 1384  
                               l6613 13A2                                 l7237 258A  
                               l7421 022C                                 l7413 01EC  
                               l7405 01AC                                 l6711 20C2  
                               l6535 0D68                                 l6527 0CFE  
                               l6623 1A86                                 l6631 1AA4  
                               l6607 138E                                 l7431 027C  
                               l7423 023C                                 l7415 01FC  
                               l7407 01BC                                 l7097 1F42  
                               l7513 2266                                 l6801 0F52  
                               l7521 230C                                 l7177 1E2A  
                               l6625 1A90                                 l6617 1A68  
                               l6609 1398                                 l6641 1A32  
                               l7441 02CC                                 l7433 028C  
                               l7425 024C                                 l7417 020C  
                               l7409 01CC                                 l7363 1B34  
                               l6803 0F62                                 l7531 0E7A  
                               l6483 0DC4                                 l6627 1A9A  
                               l6619 1A72                                 l6571 1CC0  
                               l6555 1C72                                 l6635 19FC  
                               l7451 031C                                 l7443 02DC  
                               l7435 029C                                 l7427 025C  
                               l7419 021C                                 l7603 210C  
                               l6901 1FFE                                 l7509 2248  
                               l6813 0FBC                                 l6805 0F68  
                               l7541 0E94                                 l7517 22F6  
                               l6661 1412                                 l6653 13F0  
                               l6725 072A                                 l6717 20E4  
                               l7461 036C                                 l7453 032C  
                               l7445 02EC                                 l7437 02AC  
                               l7429 026C                                 l7381 00EE  
                               l7621 1DA2                                 l6903 2000  
                               l7551 0EB2                                 l7543 0E9A  
                               l7535 0E84                                 l7527 0E70  
                               l6831 1F6C                                 l6823 1F58  
                               l6495 0DF8                                 l6663 141C  
                               l6591 243E                                 l6567 1CA0  
                               l6559 1C7C                                 l7471 03BC  
                               l7463 037C                                 l7455 033C  
                               l7447 02FC                                 l7439 02BC  
                               l7391 013C                                 l7383 00FC  
                               l7631 1DCA                                 l7553 0EB8  
                               l7545 0EA0                                 l6841 1F80  
                               l6497 0E04                                 l6489 0DDA  
                               l6665 1422                                 l6673 1452  
                               l6657 1400                                 l6585 246C  
                               l7481 040C                                 l7473 03CC  
                               l7465 038C                                 l7457 034C  
                               l7449 030C                                 l7393 014C  
                               l7385 010C                                 l7625 1DB4  
                               l7617 1D94                                 l7609 212E  
                               l7651 05DE                                 l6851 08CA  
                               l7555 0EBE                                 l7547 0EA6  
                               l7539 0E8E                                 l6835 1F76  
                               l6827 1F62                                 l6819 1F4E  
                               l6683 1CCC                                 l6499 0E0A  
                               l6579 249A                                 l6595 1352  
                               l7571 25B2                                 l7731 18DE  
                               l7475 03DC                                 l7467 039C  
                               l7459 035C                                 l7395 015C  
                               l7387 011C                                 l7627 1DC0  
                               l7661 0700                                 l7653 0604  
                               l6861 0928                                 l7549 0EAC  
                               l7493 2192                                 l6677 1462  
                               l6669 1446                                 l6597 135C  
                               l7477 03EC                                 l7469 03AC  
                               l7397 016C                                 l7389 012C  
                               l7485 041C                                 l7805 11F4  
                               l7581 20A4                                 l7655 062A  
                               l7647 057E                                 l7559 0EC4  
                               l6687 1CFE                                 l6599 1366  
                               l7567 25AC                                 l7735 18EC  
                               l7743 1908                                 l7727 18CE  
                               l7479 03FC                                 l7399 017C  
                               l7575 2084                                 l7639 2516  
                               l7657 0668                                 l7649 05B4  
                               l6793 23B2                                 l6865 0954  
                               l6689 1D00                                 l6859 090E  
                               l7499 21A4                                 l6891 1138  
                               l7739 18FC                                 l6877 10B6  
                               l7589 23E2                                 l7773 1334  
                               l7863 2072                                 l6887 110A  
                               l7759 12EC                                 l7779 1162  
                               STR_1 FFED                                 STR_2 FFE4  
                               STR_3 FFF2                                 _LATB 000F8A  
                               _LATC 000F8B                                 u5160 0B10  
                               u4710 1A1C                                 u5408 0616  
                               u4624 0D48                                 u4720 1A52  
                               u4625 0D42                                 u5418 063C  
                               u4634 0D7E                                 u4635 0D78  
                               u5428 067A                                 u5508 0A5A  
                               u5429 0690                                 u4717 1A12  
                               u5438 06B8                                 u5439 06CE  
                               u4727 1A48                                 u5448 06EC  
                               u5368 056A                                 u4920 0942  
                               u5378 0590                                 u5458 0980  
                               u5459 0994                                 u5571 12B2  
                               u5388 05C6                                 u5468 09A6  
                               u5469 09CA                                 u5398 05F0  
                               u5478 09DC                                 u5479 09F4  
                               u5488 0A06                                 u5489 0A1E  
                               u5498 0A30                                 u5499 0A48  
                     ??_lcd_disp_all 0020                    ??_key_process_set 0020  
                               _pLCD 0060         __end_of_LCDDigitalIndexTable FEE4  
          __size_of_lcd_disp_refresh 0062                                 _main 0C24  
                               _menu 003C                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0040  
            _handler_interrupt_hight 0008                                 prodh 000FF4  
                               prodl 000FF3                                 start 00DC  
                     ??_iic_send_ack 0020                        _globleBuffer0 0100  
                      _globleBuffer1 0200                        __CFG_IESO$OFF 000000  
        key_shift_loc_fixed_point@t8 0020                    _key_waite_release 2188  
   __end_of_iic_received_byte_if_ack 2636                         ___param_bank 000000  
                   ?_lcd_set_com_seg 0020                   ?_key_waite_release 00C9  
                              EECON2 000FA7                       ??_m_int8_2_hex 0020  
         ??_ads1115_start_conversion 0021                       ??_lcd_show_chr 0022  
                      lcd_disp_all@i 0021                        lcd_disp_all@x 0020  
                              RTCCFG 000F5F                                ?_main 0001  
                  ?_key_process_down 0001                      __end_of___awdiv 0E66  
                    __end_of___awmod 146C                      __end_of___lldiv 0FE0  
                ??_key_waite_release 0022                      ___awdiv@divisor 00C5  
                              _T2CON 000FCA                                _FSR0H 000FEA  
                              _FSR0L 000FE9                      __end_of___lwdiv 1986  
                    __end_of___lwmod 1C68                      ___awdiv@counter 00C7  
                              _PORTB 000F81                                _PORTC 000F82  
          _key_adj_value_fixed_point 0A6E                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISG 000F98  
                 ??_key_process_down 0021                      ??_lcd_disp_logo 0022  
                       ?_key_polling 0001                  lcd_disp_dp_loc_0@dp 00D1  
                lcd_disp_dp_loc_1@dp 00D1                  lcd_disp_dp_loc_2@dp 00D1  
                       ?_key_process 0001                       __CFG_FCMEN$OFF 000000  
                              _glRtc 0078                                _st_Bj 0038  
                     __CFG_T1DIG$OFF 000000         ??___enter_menu_set_base_zero 0020  
                              pclath 000FFA                                tablat 000FF5  
                    __end_of_rtc_get 2188                      __end_of_rtc_set 1098  
                              plusw1 000FE3                                plusw2 000FDB  
                              status 000FD8                      ??_iic_send_byte 0021  
          __end_of_key_waite_release 21CA                     ?_lcd_show_string 00D5  
                    ??_iic_waite_ack 0020                     __end_of_HexTable FF1D  
                    __initialization 1986                         __end_of_main 0CE8  
               iic_received_byte@ret 0020                        _userTicker_ms 0035  
                             ??_main 0022                        __activetblptr 000002  
                         _at24c02Ch0 00B8                           _at24c02Ch1 00AD  
              ___enter_menu_set_pose 24AA         __end_of_key_process_set_long 26E0  
                   ?___x_arrange_str 00C3                               _ADCON1 000FC1  
   __size_of_ads1115_read_conversion 0046                               _ADRESH 000FC4  
                             _ADRESL 000FC3                     __end_of___exp_10 1F9E  
                   ___awdiv@dividend 00C3                               _LCDCON 000FA8  
                             _LCDSE0 000FA9                               _LCDSE1 000FB6  
                             _LCDSE2 000FB7                               _LCDSE3 000FB8  
                             _LCDSE4 000FB9                               _LCDSE5 000FBA  
                             _LCDREG 000FD2            ??_handler_interrupt_hight 0001  
                             i1l1303 0094                               i1l1402 2662  
                             i2l1402 267A                               i2l1292 0B9A  
                             i2l1293 0BA2                               i2l1294 0BAA  
                             i2l1295 0BB2                               i2l1298 0BE8  
                             i1l6443 0080                       __CFG_WDTEN$OFF 000000  
                             _INTCON 000FF2                               i2l6417 0BD4  
                             _TABLAT 000FF5          ??_key_process_set_down_long 00E0  
                      m_int8_2_hex@b 00C5         __size_of_sys_ticker_irq_hook 0018  
                   ??_lcd_disp_level 0022            ___enter_menu_set_pose@fps 00C3  
                   __end_of_delay_ms 25F2                     __end_of_delay_us 23C4  
               __size_of_lcd_bl_init 0004                       __CFG_XINST$OFF 000000  
                   __end_of_lcd_init 26C2                     __end_of_iic_stop 22BE  
                             ___wmul 22BE                            ??___awdiv 0020  
                          ??___awmod 0020                 __end_of_flashTestbuf FFE4  
                          ??___lldiv 0020                            ??___lwdiv 0022  
                          ??___lwmod 0022                  lcd_disp_level@level 00D4  
                             clear_0 19AE                               clear_1 19C2  
                             clear_2 19D4                               clear_3 19E0  
                   ___awdiv@quotient 00C9                      ___awmod@divisor 00C5  
               __size_of_lcd_show_dp 006C                 __end_of_lcd_disp_all 25AA  
                    ___awmod@counter 0020                 __size_of_in_adc_init 0024  
              i2_sys_ticker_irq_hook 266C                 _LCDDigitalIndexTable FEBB  
            ??_in_adc_start_and_read 00C7                     key_polling@ktemp 00C7  
                   __end_of_soc_init 26A4                 __end_of_iic_send_ack 2036  
                   _ads1115_read_reg 054E                         __mediumconst FCBA  
                   __end_of_rtc_init 2208                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
  __size_of_iic_received_byte_if_ack 0020                 lcd_disp_get_code@chr 00C3  
               lcd_disp_get_code@ret 00C4            ?_iic_received_byte_if_ack 0001  
                          ??_rtc_get 0020                            ??_rtc_set 0022  
           ui_disp_start_cs600@F7582 00EE                 __end_of_m_int8_2_hex 1E94  
               __end_of_lcd_show_chr 13D8                         _pcf8574Value 0039  
                   _lcd_disp_refresh 1BA4                           __accesstop 0060  
            __end_of__initialization 19E6                           ___exp_10@n 00C3  
           __size_of_m_int16_2_str_4 015E           __size_of_key_waite_release 0042  
       __size_ofi2_rtc_alrm_irq_hook 0002                        ___rparam_used 000001  
              _handler_interrupt_low 0018                       iic_send_byte@i 00C4  
                     iic_send_byte@x 00C3                       __pcstackCOMRAM 0001  
                       __pidataBANK0 2684       __size_of_ui_disp_adj_xfixed_pt 00B6  
      __end_of_ui_disp_adj_xfixed_pt 114E      __end_of_handler_interrupt_hight 0C24  
          _key_process_set_down_long 0E66             ___enter_menu_set_density 2328  
       __end_of_ui_disp_clear_num_dp 1EEE               ?___enter_menu_set_pose 0001  
                    _key_process_set 2530                _ads1115_init_all_chip 24D8  
            in_adc_start_and_read@ch 00C8                   _rtcc_reg_wr_enable 26C2  
                 __size_of_iic_start 003E                 __size_of_key_polling 005C  
               __size_of_key_process 0082          ??_key_shift_loc_fixed_point 0020  
                  lcd_disp_logo@show 00D1                   __size_of_m_mem_cpy 0044  
                  lcd_show_string@t8 00D7                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
 __size_of_key_adj_value_fixed_point 00EA                           _defalutRtc 00F7  
                ?_rtcc_reg_wr_enable 0001             __size_of_sys_ticker_init 0010  
                    lcd_disp_level@i 00D5          __size_of_lcd_disp_chr_loc_0 0084  
        __size_of_lcd_disp_chr_loc_1 0084          __size_of_lcd_disp_chr_loc_2 0084  
        __size_of_lcd_disp_chr_loc_3 0084          __size_of_lcd_disp_chr_loc_4 0084  
        __size_of_lcd_disp_chr_loc_5 0084          __size_of_lcd_disp_chr_loc_6 0084  
        __size_of_lcd_disp_chr_loc_7 0084                 _key_process_set_long 26DE  
     ___enter_menu_set_base_zero@fps 0020                              ?___wmul 00C4  
       __size_of_ui_disp_start_cs600 009C                            ?___exp_10 0020  
             ?i2_sys_ticker_irq_hook 0001                 ??_rtcc_reg_wr_enable 0020  
                            _ALRMRPT 000F5A        __size_of_ui_disp_menu_psw_adj 001E  
                ui_disp_rtc_mm_ss@t8 00E2                        ?_ads1115_init 00C3  
                         _lcd_config 23F2                            ?_delay_ms 00C5  
                          ?_delay_us 0020                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
            _ads1115_read_conversion 2036          __size_of_lcd_disp_level_bar 046E  
       __size_of_rtcc_reg_wr_disable 000C                              _RTCVALH 000F5D  
                            _RTCVALL 000F5C                 ___int32_2_mflot32@mf 00DC  
                     m_int8_2_hex@t8 0020                            ?_lcd_init 0001  
        __size_of_lcd_show_string_l0 0044          __size_of_lcd_show_string_l1 0042  
                          ?_iic_stop 0001                    __end_of_auchCRCHi FEBB  
                  __end_of_auchCRCLo FDBB            __size_of_key_process_down 003C  
                  _ui_disp_rtc_mm_ss 114E                        ?_ui_disp_menu 0001  
  __end_of_key_adj_value_fixed_point 0B58               ?_handler_interrupt_low 0001  
                 ?_ui_disp_rtc_mm_ss 0001                              __Hparam 0000  
                            __Lparam 0000                ?_key_process_set_long 0001  
                     lcd_show_dp@loc 00D3                            ?_soc_init 0001  
              __size_of_lcd_disp_all 0026                            ?_rtc_init 0001  
          _key_shift_loc_fixed_point 235C                    __end_of_iic_start 2246  
                  ??_m_int16_2_str_4 0022                              ___awdiv 0DA8  
                            ___awmod 13D8                  ??_ui_disp_rtc_mm_ss 0022  
                            ___lldiv 0F24                      __size_of___wmul 0036  
            __end_of_key_process_set 255A                              ___lwdiv 190E  
                            ___lwmod 1C06                    __end_of_m_mem_cpy 2104  
                          _LCDDATA10 000F70                            _LCDDATA11 000F71  
                          _LCDDATA12 000F72                            _LCDDATA20 000F7A  
                          _LCDDATA13 000F73                            _LCDDATA21 000F7B  
                          _LCDDATA14 000F74                            _LCDDATA22 000F7C  
                          _LCDDATA15 000F75                            _LCDDATA23 000F7D  
                          _LCDDATA16 000F76                            _LCDDATA17 000F77  
                          _LCDDATA18 000F78                            _LCDDATA19 000F79  
                    __CFG_STVREN$OFF 000000                           ??___exp_10 0022  
                            _pcf8574 0022                              __pcinit 1986  
              __size_of_iic_send_ack 004A                              __ramtop 1000  
                            __ptext0 0C24                              __ptext1 12A4  
                            __ptext2 2506                              __ptext3 2104  
                            __ptext4 207C                              __ptext5 23C4  
                            __ptext6 114E                              __ptext7 2146  
                            __ptext8 1E3A                              __ptext9 1D82  
             ?_ads1115_init_all_chip 0001                       ??_ads1115_init 0020  
                _sys_ticker_irq_hook 2654                    ___int32_2_mflot32 0868  
           __size_of_lcd_set_com_seg 00C0                            _T1CONbits 000FCD  
                lcd_set_com_seg@bits 00D0                  lcd_set_com_seg@show 0021  
                   ___awmod@dividend 00C3                   ?___int32_2_mflot32 00D0  
              __size_of_m_int8_2_hex 005A                            _LCDPSbits 000FAA  
                         ??_delay_ms 0022                           ??_delay_us 0022  
              __size_of_lcd_show_chr 0098                __end_of_lcd_disp_logo 23F2  
                            _rtc_get 2146                              _rtc_set 0FE0  
                            main@t16 00EC        key_adj_value_fixed_point@dloc 00D3  
   ads1115_start_conversion@pAds1115 00CA    __size_of_ads1115_start_conversion 002A  
                         ??_lcd_init 0022            ?_ads1115_start_conversion 00CA  
                     __pintcode_body 0B58                           ??_iic_stop 0020  
          __end_of_ui_disp_rtc_mm_ss 1200                         _flashTestbuf FFA3  
               end_of_initialization 19E6                  ??___int32_2_mflot32 00D4  
            __size_of_key_process_up 0034                       ??_ui_disp_menu 0022  
                       _lcd_disp_all 2584                        __Lmediumconst FCBA  
                            int_func 0B58                 ?_sys_ticker_irq_hook 0001  
               _ui_disp_clear_num_dp 1E94                      ___lldiv@divisor 00C7  
              __end_of_iic_send_byte 1B3A                      ___lldiv@counter 00CF  
           __end_of_ads1115_read_reg 070A                         _iic_send_ack 1FEC  
                         _ticker_dly 2506                           ??_soc_init 0020  
                  ??_sys_ticker_init 0020       key_adj_value_fixed_point@value 00D0  
                         ??_rtc_init 0020                              postdec1 000FE5  
                            postdec2 000FDD                __end_of_iic_waite_ack 1D82  
                            postinc0 000FEE                              postinc2 000FDE  
                  _lcd_disp_dp_loc_0 247C                    _lcd_disp_dp_loc_1 244E  
                  _lcd_disp_dp_loc_2 2420                    _lcd_disp_get_code 1C68  
           __size_of_lcd_show_string 006E                         _m_int8_2_hex 1E3A  
          __end_of___int32_2_mflot32 096E                         _lcd_show_chr 1340  
                   _defultSystemData FF1D             __end_of_lcd_disp_refresh 1C06  
                 ?_lcd_disp_dp_loc_0 0001                   ?_lcd_disp_dp_loc_1 0001  
                 ?_lcd_disp_dp_loc_2 0001                   ?_lcd_disp_get_code 0001  
                i2_rtc_alrm_irq_hook 26E2            ??_ads1115_read_conversion 00CD  
                        ?_lcd_config 0001       __size_of_in_adc_start_and_read 006A  
      __end_of_in_adc_start_and_read 1BA4                  ??_lcd_disp_dp_loc_0 0022  
                ??_lcd_disp_dp_loc_1 0022                  ??_lcd_disp_dp_loc_2 0022  
               lcd_show_string_l0@t8 00D7                 lcd_show_string_l1@t8 00D7  
                ??_lcd_disp_get_code 0020          iic_received_byte_if_ack@ack 00C3  
          ads1115_write_reg@pAds1115 00C5          iic_received_byte_if_ack@ret 00C4  
 __size_of_key_process_set_down_long 00BE                      iic_send_ack@ack 0020  
              ??_sys_ticker_irq_hook 000F                        ??_lcd_bl_init 0020  
           __size_of___x_arrange_str 005E                 ?i2_rtc_alrm_irq_hook 0001  
              ?_ui_disp_clear_num_dp 0001                    _ads1115_write_reg 096E  
             ??_key_process_set_long 0020                      _calibValueIndex 003B  
                 ?_ads1115_write_reg 00C5           ??___enter_menu_set_density 0020  
          __end_of_lcd_disp_dp_loc_0 24AA            __end_of_lcd_disp_dp_loc_1 247C  
          __end_of_lcd_disp_dp_loc_2 244E                   iic_received_byte@i 0021  
          __end_of_lcd_disp_get_code 1CC6                        ??_lcd_show_dp 0022  
                        _adjLocation 003F                        ??_in_adc_init 0020  
                   ?_key_process_set 0001                           m_mem_cpy@d 00C3  
                         m_mem_cpy@s 00C5              ??___enter_menu_set_pose 0020  
                     __end_of___wmul 22F4                  ??_ads1115_write_reg 0021  
                 lcd_disp_get_code@i 00C5                  start_initialization 1986  
             ui_disp_start_cs600@buf 00D8               ui_disp_start_cs600@dly 00DE  
           ?_handler_interrupt_hight 0001                      _LCDDigitalTable FEE4  
                  ??_lcd_set_com_seg 00CB          ?___enter_menu_set_base_zero 0001  
         __size_of_ui_disp_rtc_mm_ss 00B2               lcd_disp_chr_loc_0@code 00D1  
             lcd_disp_chr_loc_1@code 00D1               lcd_disp_chr_loc_2@code 00D1  
  __end_of_key_process_set_down_long 0F24               lcd_disp_chr_loc_3@code 00D1  
             lcd_disp_chr_loc_4@code 00D1                  _ui_disp_start_cs600 12A4  
             lcd_disp_chr_loc_5@code 00D1               lcd_disp_chr_loc_6@code 00D1  
             lcd_disp_chr_loc_7@code 00D1                     _key_process_down 2246  
          __end_of_ads1115_write_reg 0A6E                ??i2_rtc_alrm_irq_hook 0001  
           in_adc_start_and_read@ret 00C9                 __end_of_ads1115_init 12A4  
            lcd_disp_level_bar@__bar 00D2                     lcd_show_chr@code 00D4  
           ads1115_read_reg@pAds1115 00C5                          ?_ticker_dly 0020  
                __size_of_lcd_config 002E                 key_waite_release@key 00CB  
                _rtcc_reg_wr_disable 26CE                  __end_of_lcd_bl_init 26DE  
            ??i2_sys_ticker_irq_hook 0001                             ??___wmul 0022  
                        __pdataBANK0 00EE                     __CFG_LPT1OSC$OFF 000000  
               ?_ui_disp_start_cs600 0001           __size_of___int32_2_mflot32 0106  
            __size_of_lcd_disp_level 005C                _ui_disp_adj_xfixed_pt 1098  
               __end_of_ui_disp_menu 25CE             _iic_received_byte_if_ack 2616  
                  __size_of___exp_10 0056                          _ALRMCFGbits 000F5B  
                __end_of_lcd_show_dp 1ACE                   lcd_show_string@str 00D5  
                __end_of_in_adc_init 2616   __size_of_key_shift_loc_fixed_point 0034  
                      ??_key_polling 0022                            _pAdjValue 0033  
                      ??_key_process 0022                          __pbssCOMRAM 0022  
                  ??_lcd_show_string 0022                        __pcstackBANK0 00C3  
               ?_rtcc_reg_wr_disable 0001                         _stRTCCFGbits 000F5F  
           key_waite_release@timeout 00C9                    __size_of_delay_ms 0024  
                  __size_of_delay_us 0034                  __CFG_CCP2MX$DEFAULT 000000  
                     _key_process_up 22F4              ??_handler_interrupt_low 000F  
       __end_of_ui_disp_menu_psw_adj 2654                  ___x_arrange_str@len 00C5  
                    _m_int16_2_str_4 070A                  ___x_arrange_str@str 00C3  
                  __size_of_lcd_init 000E               ??_ui_disp_clear_num_dp 0022  
                  __size_of_iic_stop 003C           __end_of_lcd_disp_chr_loc_0 188C  
         __end_of_lcd_disp_chr_loc_1 1808           __end_of_lcd_disp_chr_loc_2 1784  
         __end_of_lcd_disp_chr_loc_3 1700           __end_of_lcd_disp_chr_loc_4 167C  
         __end_of_lcd_disp_chr_loc_5 15F8           __end_of_lcd_disp_chr_loc_6 1574  
         __end_of_lcd_disp_chr_loc_7 14F0                            _auchCRCHi FDBB  
                          _auchCRCLo FCBB                    ___x_arrange_str@i 0020  
                   ___lwdiv@dividend 00C4        ads1115_read_conversion@result 00CE  
       ___enter_menu_set_density@fps 00C3           __size_of_lcd_disp_dp_loc_0 002E  
         __size_of_lcd_disp_dp_loc_1 002E           __size_of_lcd_disp_dp_loc_2 002E  
                          __pintcode 0008           __size_of_lcd_disp_get_code 005E  
                      __pmediumconst FCBA                    ??___x_arrange_str 0020  
                           ?___awdiv 00C3                             ?___awmod 00C3  
                           ?___lldiv 00C3              ___mflot32_2_int32@F7573 0083  
            ??_ads1115_init_all_chip 0020                ??_ui_disp_start_cs600 0022  
                           ?___lwdiv 00C4                             ?___lwmod 00CB  
                          _fpSysData 00F4                    __size_of_soc_init 0010  
                        __pintcodelo 0018                    __size_of_rtc_init 003E  
   __end_of_ads1115_start_conversion 2584                            _dlyTicker 0031  
        __size_of_rtcc_reg_wr_enable 000C                            _iic_start 2208  
                ___int32_2_mflot32@x 00D0              __end_of_LCDDigitalTable FF0C  
                          _m_mem_cpy 20C0           __end_of_lcd_disp_level_bar 054E  
              ??_rtcc_reg_wr_disable 0020           __end_of_lcd_show_string_l0 20C0  
         __end_of_lcd_show_string_l1 2146    __end_of_key_shift_loc_fixed_point 2390  
                        _PADCFG1bits 000F54                             ?_rtc_get 0001  
                           ?_rtc_set 0020               __end_of_key_process_up 2328  
                __size_of_ticker_dly 002A                     ___lwdiv@quotient 00C9  
               ads1115_init@pAds1115 00C3                             _LCDDATA0 000FBB  
                           _LCDDATA1 000FBC                             _LCDDATA2 000FBD  
                           _LCDDATA3 000FBE                             _LCDDATA4 000FBF  
                           _LCDDATA5 000F6B                             _LCDDATA6 000F6C  
                           _LCDDATA7 000F6D                             _LCDDATA8 000F6E  
                           _LCDDATA9 000F6F                lcd_set_com_seg@offset 00CF  
                __end_of_key_polling 1E3A                  __end_of_key_process 190E  
                 lcd_set_com_seg@com 00CE                      _sys_ticker_init 26A4  
                 lcd_set_com_seg@seg 0020                 ui_disp_rtc_mm_ss@buf 00D8  
         __size_of_ads1115_write_reg 0100             __end_of_defultSystemData FFA3  
       key_adj_value_fixed_point@t16 00D5         key_shift_loc_fixed_point@max 00C6  
       key_shift_loc_fixed_point@loc 00C3         key_shift_loc_fixed_point@min 00C5  
       key_adj_value_fixed_point@loc 00D2                       ___wmul@product 00C8  
                        _lcd_bl_init 26DA                            delay_us@i 00C3  
                  _iic_received_byte 1EEE                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D                             _IPR3bits 000FA5  
                           _PIE3bits 000FA3           ?_key_adj_value_fixed_point 00D0  
   __end_of___enter_menu_set_density 235C                          _dlyTickerEn 0037  
                 ?_iic_received_byte 0001                             _PIR1bits 000F9E  
                           _PIR3bits 000FA4                    ?_ads1115_read_reg 00C5  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                        _lcd_show_dp 1A62                   ??_ads1115_read_reg 00C8  
                        _in_adc_init 25F2                ___int32_2_mflot32@t32 00D8  
             ?_ui_disp_adj_xfixed_pt 00D8                  ??_iic_received_byte 0020  
             ui_disp_adj_xfixed_pt@x 00DA  __size_of___enter_menu_set_base_zero 004E  
                    m_int8_2_hex@str 00C3                           ?_iic_start 0001  
                         _ADCON0bits 000FC2                           _ADCON2bits 000FC0  
                  ___wmul@multiplier 00C4                    ?_lcd_disp_refresh 0001  
                         ?_m_mem_cpy 00C3                       _calibTempIndex 003A  
                   m_int16_2_str_4@x 00CD                           rtc_set@rtc 0020  
                         rtc_set@stp 00C3                         ??_lcd_config 0022  
                 ??_lcd_disp_refresh 0020              __end_of_m_int16_2_str_4 0868  
                    ?_key_process_up 0001                             _HexTable FF0C  
    ads1115_read_conversion@pAds1115 00CB                          _INTCON2bits 000FF1  
                          copy_data0 199A                __size_of_ads1115_init 00A4  
              ui_disp_start_cs600@t8 00DF            __end_of_iic_received_byte 1F48  
                  _rtc_alrm_irq_hook 26E0                           _EECON1bits 000FA6  
                           __Hrparam 0000                      lcd_show_dp@show 00D2  
                 ?_rtc_alrm_irq_hook 0001                      lcd_show_chr@chr 00D2  
                    lcd_show_chr@loc 00D3                  key_waite_release@t8 00CD  
             lcd_disp_level_bar@show 00D1                             __Lrparam 0000  
                 __end_of_lcd_config 2420                __size_of_ui_disp_menu 0024  
             __size_of_lcd_disp_logo 002E                     __size_of___awdiv 00BE  
                     _lcd_disp_level 1D82                     __size_of___awmod 0094  
                   __size_of___lldiv 00BC                             ___exp_10 1F48  
                   __size_of___lwdiv 0078                  ??_rtc_alrm_irq_hook 000F  
                   __size_of___lwmod 0062             __end_of_key_process_down 2282  
                    _lcd_set_com_seg 0CE8                         _ads1115Chip0 009D  
                       _ads1115Chip1 008D                             _adjValue 002D  
     __size_of___enter_menu_set_pose 002E                 _ui_disp_menu_psw_adj 2636  
      __end_of___enter_menu_set_pose 24D8                         _ads1115_init 1200  
                     key_process@key 00EB             _ads1115_start_conversion 255A  
                        _key_polling 1DDE              __end_of_sys_ticker_init 26B4  
                        _key_process 188C                             _delay_ms 25CE  
                           _delay_us 2390               __size_of_iic_send_byte 006C  
                           _glTicker 007F                      ___lwdiv@divisor 00C6  
                           _glbEvent 008B                      ___lwdiv@counter 00C8  
        __end_of_sys_ticker_irq_hook 266C                             __ptext10 00E0  
                           __ptext11 2694                             __ptext20 26DA  
                           __ptext12 26A4                             __ptext21 188C  
                           __ptext13 21CA                             __ptext30 14F0  
                           __ptext22 25AA                             __ptext14 0FE0  
                           __ptext31 1574                             __ptext23 2636  
                           __ptext15 26C2                             __ptext40 247C  
                           __ptext32 15F8                             __ptext24 1098  
                           __ptext16 26CE                             __ptext41 0CE8  
                           __ptext33 167C                             __ptext25 1E94  
                           __ptext17 26B4                             __ptext50 25CE  
                           __ptext42 20C0                             __ptext34 1700  
                           __ptext26 19F4                             __ptext18 23F2  
                           __ptext51 22F4                             __ptext43 070A  
                           __ptext35 1784                             __ptext27 1340  
                           __ptext19 2584                             __ptext60 2328  
                           __ptext52 0A6E                             __ptext44 13D8  
                           __ptext36 1808                             __ptext28 1C68  
                           __ptext61 1F9E                             __ptext53 22BE  
                           __ptext45 0DA8                             __ptext37 1A62  
                           __ptext29 146C                             __ptext70 255A  
                           __ptext62 0868                             __ptext54 1C06  
                           __ptext46 1BA4                             __ptext38 2420  
                           __ptext71 096E                             __ptext63 0F24  
                           __ptext55 190E                             __ptext47 1CC6  
                           __ptext39 244E                             __ptext80 1EEE  
                           __ptext72 2036                             __ptext64 2530  
                           __ptext56 1F48                             __ptext48 2188  
                           __ptext81 24D8                             __ptext73 054E  
                           __ptext65 2246                             __ptext57 26DE  
                           __ptext49 1DDE                             __ptext82 1200  
                           __ptext74 2208                             __ptext66 235C  
                           __ptext58 0E66                             __ptext75 1ACE  
                           __ptext67 1B3A                             __ptext59 24AA  
                           __ptext84 2654                             __ptext76 1D24  
                           __ptext68 2390                             __ptext85 26E0  
                           __ptext77 2282                             __ptext69 25F2  
                           __ptext78 2616                             __ptext87 266C  
                           __ptext79 1FEC                             __ptext88 26E2  
                           __ptext89 0000                     __size_of_rtc_get 0042  
                   __size_of_rtc_set 00B8                             _lcd_init 26B4  
              _in_adc_start_and_read 1B3A                             _iic_stop 2282  
             __size_of_iic_waite_ack 005E                             _keyValue 008C  
          __end_of_rtc_alrm_irq_hook 26E2                        __size_of_main 00C4  
                       _ui_disp_menu 25AA                             _passWord 003D  
   __size_of_handler_interrupt_hight 0C1C                         ??_ticker_dly 0022  
      __size_of_key_process_set_long 0002                             _soc_init 2694  
                       ticker_dly@ms 0020           ??_iic_received_byte_if_ack 0022  
             __end_of_lcd_disp_level 1DDE                             _rtc_init 21CA  
             ads1115_write_reg@value 00C8                            rtc_get@t8 0020  
                           int$flags 0040                      _lcd_show_string 19F4  
     __size_ofi2_sys_ticker_irq_hook 0018        __end_ofi2_sys_ticker_irq_hook 2684  
           ?_ads1115_read_conversion 00CB                ?_ui_disp_menu_psw_adj 0001  
                        ??_iic_start 0020                          delay_ms@dly 00C5  
                ads1115_init@slvaddr 00C5                          ??_m_mem_cpy 0020  
                        delay_us@dly 0020                           _INTCONbits 000FF2  
 __end_of___enter_menu_set_base_zero 1FEC           ___enter_menu_set_base_zero 1F9E  
           __size_of_key_process_set 002A    __size_of___enter_menu_set_density 0034  
              lcd_disp_level_bar@bar 00D3            ?___enter_menu_set_density 0001  
               iic_waite_ack@timeout 0020                __CFG_RTCSOSC$T1OSCREF 000000  
                   ?_m_int16_2_str_4 00CB                        key_polling@t8 00C8  
        __end_ofi2_rtc_alrm_irq_hook 26E4                        _lcd_disp_logo 23C4  
                 __end_of_ticker_dly 2530                             intlevel1 0000  
                           intlevel2 0000                 ads1115_read_reg@addr 00C7  
                      key_process@tm 00E9           __size_of_iic_received_byte 005A  
                    ___x_arrange_str 1CC6                     ___lwmod@dividend 00CB  
         ?_key_process_set_down_long 0001                     ___lldiv@dividend 00C3  
     __size_of_handler_interrupt_low 00C4        __end_of_handler_interrupt_low 00DC  
                         _OSCCONbits 000FD3                        _iic_send_byte 1ACE  
              ads1115_write_reg@addr 00C7              __end_of_lcd_set_com_seg 0DA8  
                    ?_lcd_disp_level 0001                        _iic_waite_ack 1D24  
                 _lcd_disp_chr_loc_0 1808                   _lcd_disp_chr_loc_1 1784  
                 _lcd_disp_chr_loc_2 1700                   _lcd_disp_chr_loc_3 167C  
                 _lcd_disp_chr_loc_4 15F8                   _lcd_disp_chr_loc_5 1574  
                 _lcd_disp_chr_loc_6 14F0                   _lcd_disp_chr_loc_7 146C  
     __size_of_ads1115_init_all_chip 002E        __end_of_ads1115_init_all_chip 2506  
                         _RTCCFGbits 000F5F                  ads1115_read_reg@t16 00C9  
                   ___lldiv@quotient 00CB                      ___lwmod@divisor 00CD  
            ___int32_2_mflot32@F7568 0087                      ___lwmod@counter 00CF  
                ?_lcd_disp_chr_loc_0 0001                  ?_lcd_disp_chr_loc_1 0001  
                ?_lcd_disp_chr_loc_2 0001                  ?_lcd_disp_chr_loc_3 0001  
                ?_lcd_disp_chr_loc_4 0001                  ?_lcd_disp_chr_loc_5 0001  
                ?_lcd_disp_chr_loc_6 0001                  ?_lcd_disp_chr_loc_7 0001  
                   ?_sys_ticker_init 0001                       ?_lcd_disp_logo 0001  
             ?_in_adc_start_and_read 00C5           __size_of_rtc_alrm_irq_hook 0002  
                      ?_lcd_disp_all 0001                   _lcd_disp_level_bar 00E0  
                       ?_lcd_bl_init 0001             ui_disp_adj_xfixed_pt@buf 00DF  
           ui_disp_adj_xfixed_pt@loc 00DC              __end_of_lcd_show_string 1A62  
           ui_disp_adj_xfixed_pt@str 00D8                   _lcd_show_string_l0 207C  
                 _lcd_show_string_l1 2104        __size_of_ui_disp_clear_num_dp 005A  
        __end_of_ui_disp_start_cs600 1340                 ??_lcd_disp_chr_loc_0 0022  
               ??_lcd_disp_chr_loc_1 0022                 ??_lcd_disp_chr_loc_2 0022  
               ??_lcd_disp_chr_loc_3 0022                 ??_lcd_disp_chr_loc_4 0022  
               ??_lcd_disp_chr_loc_5 0022                 ??_lcd_disp_chr_loc_6 0022  
               ??_lcd_disp_chr_loc_7 0022                       ?_iic_send_byte 0001  
        ??_key_adj_value_fixed_point 0022                        ?_iic_send_ack 0001  
    __end_of_ads1115_read_conversion 207C              ??_ui_disp_adj_xfixed_pt 00DD  
                ?_lcd_disp_level_bar 00D1  
